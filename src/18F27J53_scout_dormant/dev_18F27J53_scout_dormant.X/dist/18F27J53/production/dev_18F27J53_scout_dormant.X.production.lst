

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Dec 10 10:07:58 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	_StaticSecurityKey_const,global,ovrld,reloc=2,class=CODE,delta=1
     9                           	psect	_myUID_const,global,ovrld,reloc=2,class=CODE,delta=1
    10                           	psect	_myMODEL_const,global,ovrld,reloc=2,class=CODE,delta=1
    11                           	psect	_myMUTA_version_const,global,ovrld,reloc=2,class=CODE,delta=1
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   122                           	psect	param0,global,class=BANK0,space=1,delta=1
   123                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   124  0000                     
   125                           	psect	idataCOMRAM
   126  016FFA                     __pidataCOMRAM:
   127                           	opt stack 0
   128                           
   129                           ;initializer for _timer_count
   130  016FFA  01                 	db	1
   131                           
   132                           	psect	idataBANK1
   133  016FF4                     __pidataBANK1:
   134                           	opt stack 0
   135                           
   136                           ;initializer for _AcknowledgementSeq
   137  016FF4  FF                 	db	255
   138                           
   139                           ;initializer for _defaultHops
   140  016FF5  04                 	db	4
   141                           
   142                           ;initializer for _m_update_frequency
   143  016FF6  01                 	db	1
   144                           
   145                           	psect	mediumconst
   146  00FEF2                     __pmediumconst:
   147                           	opt stack 0
   148  00FEF2  00                 	db	0
   149  00FEF3                     _InitConfigRegs:
   150                           	opt stack 0
   151  00FEF3  0036               	dw	54
   152  00FEF5  0284               	dw	644
   153  00FEF7  0409               	dw	1033
   154  00FEF9  0609               	dw	1545
   155  00FEFB  080C               	dw	2060
   156  00FEFD  0AC1               	dw	2753
   157  00FEFF  0C7D               	dw	3197
   158  00FF01  0E64               	dw	3684
   159  00FF03  1014               	dw	4116
   160  00FF05  1200               	dw	4608
   161  00FF07  1400               	dw	5120
   162  00FF09  1600               	dw	5632
   163  00FF0B  1838               	dw	6200
   164  00FF0D  1AC8               	dw	6856
   165  00FF0F  1C0D               	dw	7181
   166  00FF11  1E00               	dw	7680
   167  00FF13  2072               	dw	8306
   168  00FF15  2238               	dw	8760
   169  00FF17  2438               	dw	9272
   170  00FF19  2607               	dw	9735
   171  00FF1B  2800               	dw	10240
   172  00FF1D  2A00               	dw	10752
   173  00FF1F  2C69               	dw	11369
   174  00FF21  2E81               	dw	11905
   175  00FF23  307E               	dw	12414
   176  00FF25  3296               	dw	12950
   177  00FF27  34F0               	dw	13552
   178  00FF29  3688               	dw	13960
   179  00FF2B  3840               	dw	14400
   180  00FF2D  3A00               	dw	14848
   181  00FF2F  3CE8               	dw	15592
   182  00FF31  3E00               	dw	15872
   183  00FF33                     __end_of_InitConfigRegs:
   184                           	opt stack 0
   185  00FF33                     _ScanTime:
   186                           	opt stack 0
   187  00FF33  03C0               	dw	960
   188  00FF35  0000               	dw	0
   189  00FF37  05A0               	dw	1440
   190  00FF39  0000               	dw	0
   191  00FF3B  0960               	dw	2400
   192  00FF3D  0000               	dw	0
   193  00FF3F  10E0               	dw	4320
   194  00FF41  0000               	dw	0
   195  00FF43  1FE0               	dw	8160
   196  00FF45  0000               	dw	0
   197  00FF47  3DE0               	dw	15840
   198  00FF49  0000               	dw	0
   199  00FF4B  79E0               	dw	31200
   200  00FF4D  0000               	dw	0
   201  00FF4F  F1E0               	dw	61920
   202  00FF51  0000               	dw	0
   203  00FF53  E1E0               	dw	57824
   204  00FF55  0001               	dw	1
   205  00FF57  C1E0               	dw	49632
   206  00FF59  0003               	dw	3
   207  00FF5B  81E0               	dw	33248
   208  00FF5D  0007               	dw	7
   209  00FF5F  01E0               	dw	480
   210  00FF61  000F               	dw	15
   211  00FF63  01E0               	dw	480
   212  00FF65  001E               	dw	30
   213  00FF67  3D44               	dw	15684
   214  00FF69  001B               	dw	27
   215  00FF6B  B40D               	dw	46093
   216  00FF6D  0015               	dw	21
   217  00FF6F                     __end_of_ScanTime:
   218                           	opt stack 0
   219  00FF6F                     _PVALUE:
   220                           	opt stack 0
   221  00FF6F  4F                 	db	79
   222  00FF70  4F                 	db	79
   223  00FF71  4F                 	db	79
   224  00FF72  4F                 	db	79
   225  00FF73  4F                 	db	79
   226  00FF74  4F                 	db	79
   227  00FF75  4F                 	db	79
   228  00FF76  4F                 	db	79
   229  00FF77  4F                 	db	79
   230  00FF78  4F                 	db	79
   231  00FF79  4F                 	db	79
   232  00FF7A  4F                 	db	79
   233  00FF7B  4F                 	db	79
   234  00FF7C  4F                 	db	79
   235  00FF7D  4F                 	db	79
   236  00FF7E  4F                 	db	79
   237  00FF7F  4F                 	db	79
   238  00FF80  4F                 	db	79
   239  00FF81  4F                 	db	79
   240  00FF82  4F                 	db	79
   241  00FF83  4F                 	db	79
   242  00FF84  4F                 	db	79
   243  00FF85  50                 	db	80
   244  00FF86  50                 	db	80
   245  00FF87  50                 	db	80
   246  00FF88  50                 	db	80
   247  00FF89  50                 	db	80
   248  00FF8A  50                 	db	80
   249  00FF8B  50                 	db	80
   250  00FF8C  50                 	db	80
   251  00FF8D  50                 	db	80
   252  00FF8E  50                 	db	80
   253  00FF8F                     __end_of_PVALUE:
   254                           	opt stack 0
   255  00FF8F                     _SVALUE:
   256                           	opt stack 0
   257  00FF8F  22                 	db	34
   258  00FF90  24                 	db	36
   259  00FF91  26                 	db	38
   260  00FF92  28                 	db	40
   261  00FF93  2A                 	db	42
   262  00FF94  2C                 	db	44
   263  00FF95  2E                 	db	46
   264  00FF96  30                 	db	48
   265  00FF97  32                 	db	50
   266  00FF98  34                 	db	52
   267  00FF99  37                 	db	55
   268  00FF9A  39                 	db	57
   269  00FF9B  3B                 	db	59
   270  00FF9C  3D                 	db	61
   271  00FF9D  3F                 	db	63
   272  00FF9E  41                 	db	65
   273  00FF9F  43                 	db	67
   274  00FFA0  45                 	db	69
   275  00FFA1  47                 	db	71
   276  00FFA2  4A                 	db	74
   277  00FFA3  4C                 	db	76
   278  00FFA4  4E                 	db	78
   279  00FFA5  05                 	db	5
   280  00FFA6  07                 	db	7
   281  00FFA7  09                 	db	9
   282  00FFA8  0B                 	db	11
   283  00FFA9  0D                 	db	13
   284  00FFAA  0F                 	db	15
   285  00FFAB  11                 	db	17
   286  00FFAC  14                 	db	20
   287  00FFAD  16                 	db	22
   288  00FFAE  18                 	db	24
   289  00FFAF                     __end_of_SVALUE:
   290                           	opt stack 0
   291  0000                     _StaticSecurityKey_absconstaddr	set	131052
   292  0000                     _myUID_absconstaddr	set	131062
   293  0000                     _myMODEL_absconstaddr	set	131060
   294  0000                     _myMUTA_version_absconstaddr	set	131058
   295  00FFAF  31                 	db	49
   296  00FFB0  2E                 	db	46
   297  00FFB1  32                 	db	50
   298  00FFB2  35                 	db	53
   299  00FFB3  6D                 	db	109
   300  00FFB4  57                 	db	87
   301  00FFB5  00                 	db	0
   302  00FFB6                     __end_of_TX_POWER_1_DB_MW:
   303                           	opt stack 0
   304  00FFB6  30                 	db	48
   305  00FFB7  2E                 	db	46
   306  00FFB8  31                 	db	49
   307  00FFB9  35                 	db	53
   308  00FFBA  6D                 	db	109
   309  00FFBB  57                 	db	87
   310  00FFBC  00                 	db	0
   311  00FFBD                     __end_of_TX_POWER_N_8_DB_MW:
   312                           	opt stack 0
   313  00FFBD  32                 	db	50
   314  00FFBE  2E                 	db	46
   315  00FFBF  35                 	db	53
   316  00FFC0  6D                 	db	109
   317  00FFC1  57                 	db	87
   318  00FFC2  00                 	db	0
   319  00FFC3                     __end_of_TX_POWER_4_DB_MW:
   320                           	opt stack 0
   321  00FFC3  30                 	db	48
   322  00FFC4  2E                 	db	46
   323  00FFC5  30                 	db	48
   324  00FFC6  6D                 	db	109
   325  00FFC7  57                 	db	87
   326  00FFC8  00                 	db	0
   327  00FFC9                     __end_of_TX_POWER_INVALID:
   328                           	opt stack 0
   329  00FFC9  30                 	db	48
   330  00FFCA  2E                 	db	46
   331  00FFCB  36                 	db	54
   332  00FFCC  6D                 	db	109
   333  00FFCD  57                 	db	87
   334  00FFCE  00                 	db	0
   335  00FFCF                     __end_of_TX_POWER_N_2_DB_MW:
   336                           	opt stack 0
   337  00FFCF  30                 	db	48
   338  00FFD0  2E                 	db	46
   339  00FFD1  33                 	db	51
   340  00FFD2  6D                 	db	109
   341  00FFD3  57                 	db	87
   342  00FFD4  00                 	db	0
   343  00FFD5                     __end_of_TX_POWER_N_5_DB_MW:
   344                           	opt stack 0
   345  00FFD5  31                 	db	49
   346  00FFD6  30                 	db	48
   347  00FFD7  6D                 	db	109
   348  00FFD8  57                 	db	87
   349  00FFD9  00                 	db	0
   350  00FFDA                     __end_of_TX_POWER_10_DB_MW:
   351                           	opt stack 0
   352  00FFDA  32                 	db	50
   353  00FFDB  30                 	db	48
   354  00FFDC  6D                 	db	109
   355  00FFDD  57                 	db	87
   356  00FFDE  00                 	db	0
   357  00FFDF                     __end_of_TX_POWER_13_DB_MW:
   358                           	opt stack 0
   359  00FFDF                     _BATTERY_VOLTAGE_LABEL:
   360                           	opt stack 0
   361  00FFDF  56                 	db	86
   362  00FFE0  42                 	db	66
   363  00FFE1  61                 	db	97
   364  00FFE2  00                 	db	0
   365  00FFE3                     __end_of_BATTERY_VOLTAGE_LABEL:
   366                           	opt stack 0
   367  00FFE3                     _FAILEDMSG_LABEL:
   368                           	opt stack 0
   369  00FFE3  46                 	db	70
   370  00FFE4  6C                 	db	108
   371  00FFE5  4D                 	db	77
   372  00FFE6  00                 	db	0
   373  00FFE7                     __end_of_FAILEDMSG_LABEL:
   374                           	opt stack 0
   375  00FFE7                     _LIGHT_LEVEL_LABEL:
   376                           	opt stack 0
   377  00FFE7  4C                 	db	76
   378  00FFE8  69                 	db	105
   379  00FFE9  74                 	db	116
   380  00FFEA  00                 	db	0
   381  00FFEB                     __end_of_LIGHT_LEVEL_LABEL:
   382                           	opt stack 0
   383  00FFEB                     _POWER_LABEL:
   384                           	opt stack 0
   385  00FFEB  50                 	db	80
   386  00FFEC  77                 	db	119
   387  00FFED  72                 	db	114
   388  00FFEE  00                 	db	0
   389  00FFEF                     __end_of_POWER_LABEL:
   390                           	opt stack 0
   391  00FFEF                     _TEMPERATURE_LABEL:
   392                           	opt stack 0
   393  00FFEF  54                 	db	84
   394  00FFF0  6D                 	db	109
   395  00FFF1  70                 	db	112
   396  00FFF2  00                 	db	0
   397  00FFF3                     __end_of_TEMPERATURE_LABEL:
   398                           	opt stack 0
   399  00FFF3  35                 	db	53
   400  00FFF4  6D                 	db	109
   401  00FFF5  57                 	db	87
   402  00FFF6  00                 	db	0
   403  00FFF7                     __end_of_TX_POWER_7_DB_MW:
   404                           	opt stack 0
   405  00FFF7                     _UPDATE_FREQUENCY_LABEL:
   406                           	opt stack 0
   407  00FFF7  55                 	db	85
   408  00FFF8  70                 	db	112
   409  00FFF9  46                 	db	70
   410  00FFFA  00                 	db	0
   411  00FFFB                     __end_of_UPDATE_FREQUENCY_LABEL:
   412                           	opt stack 0
   413  00FFFB                     _UPTIME_LABEL:
   414                           	opt stack 0
   415  00FFFB  55                 	db	85
   416  00FFFC  70                 	db	112
   417  00FFFD  74                 	db	116
   418  00FFFE  00                 	db	0
   419  00FFFF                     __end_of_UPTIME_LABEL:
   420                           	opt stack 0
   421  0000                     _StaticSecurityKey_absconstaddr	set	131052
   422  00FFFF  00                 	db	0	; dummy byte at the end
   423  0000                     
   424                           	psect	_StaticSecurityKey_const
   425  01FFEC                     __p_StaticSecurityKey_const:
   426                           	opt stack 0
   427  01FFEC                     _StaticSecurityKey:
   428                           	opt stack 0
   429  01FFEC  00                 	db	0
   430  01FFED  01                 	db	1
   431  01FFEE  02                 	db	2
   432  01FFEF  03                 	db	3
   433  01FFF0  04                 	db	4
   434  01FFF1  05                 	db	5
   435  01FFF2  06                 	db	6
   436  01FFF3  07                 	db	7
   437  01FFF4                     __end_of_StaticSecurityKey:
   438                           	opt stack 0
   439  0000                     _myUID_absconstaddr	set	131062
   440                           
   441                           	psect	_myUID_const
   442  01FFF6                     __p_myUID_const:
   443                           	opt stack 0
   444  01FFF6                     _myUID:
   445                           	opt stack 0
   446  01FFF6  00                 	db	0
   447  01FFF7  04                 	db	4
   448  01FFF8                     __end_of_myUID:
   449                           	opt stack 0
   450  0000                     _myMODEL_absconstaddr	set	131060
   451                           
   452                           	psect	_myMODEL_const
   453  01FFF4                     __p_myMODEL_const:
   454                           	opt stack 0
   455  01FFF4                     _myMODEL:
   456                           	opt stack 0
   457  01FFF4  01                 	db	1
   458  01FFF5                     __end_of_myMODEL:
   459                           	opt stack 0
   460  0000                     _myMUTA_version_absconstaddr	set	131058
   461                           
   462                           	psect	_myMUTA_version_const
   463  01FFF2                     __p_myMUTA_version_const:
   464                           	opt stack 0
   465  01FFF2                     _myMUTA_version:
   466                           	opt stack 0
   467  01FFF2  01                 	db	1
   468  01FFF3                     __end_of_myMUTA_version:
   469                           	opt stack 0
   470  0000                     _PPSCONbits	set	3775
   471  0000                     _RPINR1	set	3809
   472  0000                     _RPINR21	set	3836
   473  0000                     _RPINR22	set	3837
   474  0000                     _RPOR4	set	3780
   475  0000                     _RPOR5	set	3781
   476  0000                     _ALRMCFGbits	set	3911
   477  0000                     _ANCON0	set	3912
   478  0000                     _ANCON0bits	set	3912
   479  0000                     _ANCON1	set	3913
   480  0000                     _ANCON1bits	set	3913
   481  0000                     _RTCCAL	set	3902
   482  0000                     _RTCCFG	set	3903
   483  0000                     _RTCCFGbits	set	3903
   484  0000                     _RTCVALHbits	set	3899
   485  0000                     _RTCVALLbits	set	3898
   486  0000                     _UPUEN	set	31180
   487  0000                     _ADCON0bits	set	4034
   488  0000                     _ADCON1bits	set	4033
   489  0000                     _ADRESHbits	set	4036
   490  0000                     _ADRESLbits	set	4035
   491  0000                     _EECON2	set	4007
   492  0000                     _INTCON2bits	set	4081
   493  0000                     _INTCON3bits	set	4080
   494  0000                     _INTCONbits	set	4082
   495  0000                     _IPR3bits	set	4005
   496  0000                     _LATAbits	set	3977
   497  0000                     _LATBbits	set	3978
   498  0000                     _LATCbits	set	3979
   499  0000                     _OSCCONbits	set	4051
   500  0000                     _PIE1bits	set	3997
   501  0000                     _PIE3bits	set	4003
   502  0000                     _PIR1bits	set	3998
   503  0000                     _PIR3bits	set	4004
   504  0000                     _RCONbits	set	4048
   505  0000                     _SSP1ADD	set	4040
   506  0000                     _SSP1BUF	set	4041
   507  0000                     _SSP1CON1	set	4038
   508  0000                     _SSP1CON1bits	set	4038
   509  0000                     _SSP1CON2	set	4037
   510  0000                     _SSP1CON2bits	set	4037
   511  0000                     _SSP1STAT	set	4039
   512  0000                     _SSP1STATbits	set	4039
   513  0000                     _SSP2BUF	set	3957
   514  0000                     _SSP2CON1	set	3954
   515  0000                     _SSP2CON1bits	set	3954
   516  0000                     _SSP2STAT	set	3955
   517  0000                     _T1CON	set	4045
   518  0000                     _T1CONbits	set	4045
   519  0000                     _TMR1H	set	4047
   520  0000                     _TMR1L	set	4046
   521  0000                     _TRISA	set	3986
   522  0000                     _TRISAbits	set	3986
   523  0000                     _TRISB	set	3987
   524  0000                     _TRISBbits	set	3987
   525  0000                     _TRISC	set	3988
   526  0000                     _TRISCbits	set	3988
   527  0000                     _UCONbits	set	3941
   528  0000                     _PLLEN	set	31966
   529                           
   530                           ; #config settings
   531  0000                     
   532                           	psect	cinit
   533  0165CE                     __pcinit:
   534                           	opt stack 0
   535  0165CE                     start_initialization:
   536                           	opt stack 0
   537  0165CE                     __initialization:
   538                           	opt stack 0
   539                           
   540                           ; Clear objects allocated to BANK3 (212 bytes)
   541  0165CE  EE03  F000         	lfsr	0,__pbssBANK3
   542  0165D2  0ED4               	movlw	212
   543  0165D4                     clear_0:
   544  0165D4  6AEE               	clrf	postinc0,c
   545  0165D6  06E8               	decf	wreg,f,c
   546  0165D8  E1FD               	bnz	clear_0
   547                           
   548                           ; Clear objects allocated to BANK2 (256 bytes)
   549  0165DA  EE02  F000         	lfsr	0,__pbssBANK2
   550  0165DE  EE11 F000          	lfsr	1,256
   551  0165E2                     clear_1:
   552  0165E2  6AEE               	clrf	postinc0,c
   553  0165E4  50E5               	movf	postdec1,w,c
   554  0165E6  50E1               	movf	fsr1l,w,c
   555  0165E8  E1FC               	bnz	clear_1
   556  0165EA  50E2               	movf	fsr1h,w,c
   557  0165EC  E1FA               	bnz	clear_1
   558                           
   559                           ; Clear objects allocated to BANK1 (138 bytes)
   560  0165EE  EE01  F000         	lfsr	0,__pbssBANK1
   561  0165F2  0E8A               	movlw	138
   562  0165F4                     clear_2:
   563  0165F4  6AEE               	clrf	postinc0,c
   564  0165F6  06E8               	decf	wreg,f,c
   565  0165F8  E1FD               	bnz	clear_2
   566                           
   567                           ; Clear objects allocated to BANK0 (45 bytes)
   568  0165FA  EE00  F0A3         	lfsr	0,__pbssBANK0
   569  0165FE  0E2D               	movlw	45
   570  016600                     clear_3:
   571  016600  6AEE               	clrf	postinc0,c
   572  016602  06E8               	decf	wreg,f,c
   573  016604  E1FD               	bnz	clear_3
   574                           
   575                           ; Clear objects allocated to COMRAM (34 bytes)
   576  016606  EE00  F026         	lfsr	0,__pbssCOMRAM
   577  01660A  0E22               	movlw	34
   578  01660C                     clear_4:
   579  01660C  6AEE               	clrf	postinc0,c
   580  01660E  06E8               	decf	wreg,f,c
   581  016610  E1FD               	bnz	clear_4
   582                           
   583                           ; Initialize objects allocated to BANK1 (3 bytes)
   584                           ; load TBLPTR registers with __pidataBANK1
   585  016612  0EF4               	movlw	low __pidataBANK1
   586  016614  6EF6               	movwf	tblptrl,c
   587  016616  0E6F               	movlw	high __pidataBANK1
   588  016618  6EF7               	movwf	tblptrh,c
   589  01661A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   590  01661C  6EF8               	movwf	tblptru,c
   591  01661E  0009               	tblrd		*+	;fetch initializer
   592  016620  CFF5 F1FD          	movff	tablat,__pdataBANK1
   593  016624  0009               	tblrd		*+	;fetch initializer
   594  016626  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
   595  01662A  0009               	tblrd		*+	;fetch initializer
   596  01662C  CFF5 F1FF          	movff	tablat,__pdataBANK1+2
   597                           
   598                           ; Initialize objects allocated to COMRAM (1 bytes)
   599                           ; load TBLPTR registers with __pidataCOMRAM
   600  016630  0EFA               	movlw	low __pidataCOMRAM
   601  016632  6EF6               	movwf	tblptrl,c
   602  016634  0E6F               	movlw	high __pidataCOMRAM
   603  016636  6EF7               	movwf	tblptrh,c
   604  016638  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   605  01663A  6EF8               	movwf	tblptru,c
   606  01663C  0009               	tblrd		*+	;fetch initializer
   607  01663E  CFF5 F048          	movff	tablat,__pdataCOMRAM
   608  016642                     end_of_initialization:
   609                           	opt stack 0
   610  016642                     __end_of__initialization:
   611                           	opt stack 0
   612  016642  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   613  016644  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   614  016646  0100               	movlb	0
   615  016648  EF37  F098         	goto	_main	;jump to C main() function
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           postdec1	equ	0xFE5
   623                           fsr1h	equ	0xFE2
   624                           fsr1l	equ	0xFE1
   625                           
   626                           	psect	bssCOMRAM
   627  000026                     __pbssCOMRAM:
   628                           	opt stack 0
   629  000026                     _BroadcastRecords:
   630                           	opt stack 0
   631  000026                     	ds	32
   632  000046                     _errno:
   633                           	opt stack 0
   634  000046                     	ds	2
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           postdec1	equ	0xFE5
   642                           fsr1h	equ	0xFE2
   643                           fsr1l	equ	0xFE1
   644                           
   645                           	psect	dataCOMRAM
   646  000048                     __pdataCOMRAM:
   647                           	opt stack 0
   648  000048                     _timer_count:
   649                           	opt stack 0
   650  000048                     	ds	1
   651                           tblptru	equ	0xFF8
   652                           tblptrh	equ	0xFF7
   653                           tblptrl	equ	0xFF6
   654                           tablat	equ	0xFF5
   655                           postinc0	equ	0xFEE
   656                           wreg	equ	0xFE8
   657                           postdec1	equ	0xFE5
   658                           fsr1h	equ	0xFE2
   659                           fsr1l	equ	0xFE1
   660                           
   661                           	psect	bssBANK0
   662  0000A3                     __pbssBANK0:
   663                           	opt stack 0
   664  0000A3                     _mySecurityKey:
   665                           	opt stack 0
   666  0000A3                     	ds	8
   667  0000AB                     _OutgoingFrameCounter:
   668                           	opt stack 0
   669  0000AB                     	ds	4
   670  0000AF                     _MACInitParams:
   671                           	opt stack 0
   672  0000AF                     	ds	3
   673  0000B2                     _ConnMode:
   674                           	opt stack 0
   675  0000B2                     	ds	1
   676  0000B3                     _IRQ1_Received:
   677                           	opt stack 0
   678  0000B3                     	ds	1
   679  0000B4                     _MACSeq:
   680                           	opt stack 0
   681  0000B4                     	ds	1
   682  0000B5                     _MiWiAckRequired:
   683                           	opt stack 0
   684  0000B5                     	ds	1
   685  0000B6                     _MiWiSeqNum:
   686                           	opt stack 0
   687  0000B6                     	ds	1
   688  0000B7                     _Pwr_updated:
   689                           	opt stack 0
   690  0000B7                     	ds	1
   691  0000B8                     _RF_Mode:
   692                           	opt stack 0
   693  0000B8                     	ds	1
   694  0000B9                     _RSSIVal:
   695                           	opt stack 0
   696  0000B9                     	ds	1
   697  0000BA                     _TxMACSeq:
   698                           	opt stack 0
   699  0000BA                     	ds	1
   700  0000BB                     _UpF_updated:
   701                           	opt stack 0
   702  0000BB                     	ds	1
   703  0000BC                     _hasAck:
   704                           	opt stack 0
   705  0000BC                     	ds	1
   706  0000BD                     _tempNodeStatus:
   707                           	opt stack 0
   708  0000BD                     	ds	1
   709  0000BE                     _timerExtension1:
   710                           	opt stack 0
   711  0000BE                     	ds	1
   712  0000BF                     _timerExtension2:
   713                           	opt stack 0
   714  0000BF                     	ds	1
   715  0000C0                     _key:
   716                           	opt stack 0
   717  0000C0                     	ds	8
   718  0000C8                     _myLongAddress:
   719                           	opt stack 0
   720  0000C8                     	ds	4
   721  0000CC                     _tmpBlock:
   722                           	opt stack 0
   723  0000CC                     	ds	4
   724                           tblptru	equ	0xFF8
   725                           tblptrh	equ	0xFF7
   726                           tblptrl	equ	0xFF6
   727                           tablat	equ	0xFF5
   728                           postinc0	equ	0xFEE
   729                           wreg	equ	0xFE8
   730                           postdec1	equ	0xFE5
   731                           fsr1h	equ	0xFE2
   732                           fsr1l	equ	0xFE1
   733                           
   734                           	psect	bssBANK1
   735  000100                     __pbssBANK1:
   736                           	opt stack 0
   737  000100                     _openSocketInfo:
   738                           	opt stack 0
   739  000100                     	ds	12
   740  00010C                     _rxMessage:
   741                           	opt stack 0
   742  00010C                     	ds	10
   743  000116                     _MACRxPacket:
   744                           	opt stack 0
   745  000116                     	ds	8
   746  00011E                     _m_failed_messages:
   747                           	opt stack 0
   748  00011E                     	ds	4
   749  000122                     _m_sent_messages:
   750                           	opt stack 0
   751  000122                     	ds	4
   752  000126                     _tempLongAddress:
   753                           	opt stack 0
   754  000126                     	ds	4
   755  00012A                     _MTP:
   756                           	opt stack 0
   757  00012A                     	ds	3
   758  00012D                     _m_battery_voltage:
   759                           	opt stack 0
   760  00012D                     	ds	3
   761  000130                     _m_temperature:
   762                           	opt stack 0
   763  000130                     	ds	3
   764  000133                     _m_uptime_days:
   765                           	opt stack 0
   766  000133                     	ds	3
   767  000136                     _AcknowledgementAddr:
   768                           	opt stack 0
   769  000136                     	ds	2
   770  000138                     _MiWiStateMachine:
   771                           	opt stack 0
   772  000138                     	ds	2
   773  00013A                     _p_buffer:
   774                           	opt stack 0
   775  00013A                     	ds	2
   776  00013C                     _tempPANID:
   777                           	opt stack 0
   778  00013C                     	ds	2
   779  00013E                     do_NETWORK_REGISTER@F10228:
   780                           	opt stack 0
   781  00013E                     	ds	2
   782  000140                     do_UPDATE@F10256:
   783                           	opt stack 0
   784  000140                     	ds	2
   785  000142                     _ActiveScanResultIndex:
   786                           	opt stack 0
   787  000142                     	ds	1
   788  000143                     _MiWiCapacityInfo:
   789                           	opt stack 0
   790  000143                     	ds	1
   791  000144                     _RSSILock:
   792                           	opt stack 0
   793  000144                     	ds	1
   794  000145                     _ReceivedBankIndex:
   795                           	opt stack 0
   796  000145                     	ds	1
   797  000146                     _TxData:
   798                           	opt stack 0
   799  000146                     	ds	1
   800  000147                     _consecutive_fails:
   801                           	opt stack 0
   802  000147                     	ds	1
   803  000148                     _last_rssi:
   804                           	opt stack 0
   805  000148                     	ds	1
   806  000149                     _m_light_level:
   807                           	opt stack 0
   808  000149                     	ds	1
   809  00014A                     _m_power:
   810                           	opt stack 0
   811  00014A                     	ds	1
   812  00014B                     _myAppState:
   813                           	opt stack 0
   814  00014B                     	ds	1
   815  00014C                     _myParent:
   816                           	opt stack 0
   817  00014C                     	ds	1
   818  00014D                     _timer_flag:
   819                           	opt stack 0
   820  00014D                     	ds	1
   821  00014E                     _TxBuffer:
   822                           	opt stack 0
   823  00014E                     	ds	43
   824  000179                     _m_var:
   825                           	opt stack 0
   826  000179                     	ds	10
   827  000183                     _myPANID:
   828                           	opt stack 0
   829  000183                     	ds	2
   830  000185                     _myShortAddress:
   831                           	opt stack 0
   832  000185                     	ds	2
   833  000187                     _tempShortAddress:
   834                           	opt stack 0
   835  000187                     	ds	2
   836  000189                     _currentChannel:
   837                           	opt stack 0
   838  000189                     	ds	1
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           postdec1	equ	0xFE5
   846                           fsr1h	equ	0xFE2
   847                           fsr1l	equ	0xFE1
   848                           
   849                           	psect	dataBANK1
   850  0001FD                     __pdataBANK1:
   851                           	opt stack 0
   852  0001FD                     _AcknowledgementSeq:
   853                           	opt stack 0
   854  0001FD                     	ds	1
   855  0001FE                     _defaultHops:
   856                           	opt stack 0
   857  0001FE                     	ds	1
   858  0001FF                     _m_update_frequency:
   859                           	opt stack 0
   860  0001FF                     	ds	1
   861                           tblptru	equ	0xFF8
   862                           tblptrh	equ	0xFF7
   863                           tblptrl	equ	0xFF6
   864                           tablat	equ	0xFF5
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           postdec1	equ	0xFE5
   868                           fsr1h	equ	0xFE2
   869                           fsr1l	equ	0xFE1
   870                           
   871                           	psect	bssBANK2
   872  000200                     __pbssBANK2:
   873                           	opt stack 0
   874  000200                     _IncomingFrameCounter:
   875                           	opt stack 0
   876  000200                     	ds	40
   877  000228                     _AckInfo:
   878                           	opt stack 0
   879  000228                     	ds	30
   880  000246                     _ConnectionTable:
   881                           	opt stack 0
   882  000246                     	ds	90
   883  0002A0                     _MACTxBuffer:
   884                           	opt stack 0
   885  0002A0                     	ds	64
   886  0002E0                     _m_buffer:
   887                           	opt stack 0
   888  0002E0                     	ds	32
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           postdec1	equ	0xFE5
   896                           fsr1h	equ	0xFE2
   897                           fsr1l	equ	0xFE1
   898                           
   899                           	psect	bssBANK3
   900  000300                     __pbssBANK3:
   901                           	opt stack 0
   902  000300                     _ActiveScanResults:
   903                           	opt stack 0
   904  000300                     	ds	80
   905  000350                     _RxPacket:
   906                           	opt stack 0
   907  000350                     	ds	132
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           postdec1	equ	0xFE5
   915                           fsr1h	equ	0xFE2
   916                           fsr1l	equ	0xFE1
   917                           
   918                           	psect	cstackBANK4
   919  000400                     __pcstackBANK4:
   920                           	opt stack 0
   921  000400                     
   922                           ; 0 bytes @ 0x0
   923  000400                     	ds	2
   924  000402                     main@result:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x2
   928  000402                     	ds	1
   929  000403                     main@best_candidate:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x3
   933  000403                     	ds	1
   934  000404                     main@Status:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0x4
   938  000404                     	ds	1
   939  000405                     main@best_RSSI:
   940                           	opt stack 0
   941                           
   942                           ; 1 bytes @ 0x5
   943  000405                     	ds	1
   944  000406                     main@x:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0x6
   948  000406                     	ds	2
   949  000408                     main@j:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x8
   953  000408                     	ds	1
   954  000409                     main@scanresult:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x9
   958  000409                     	ds	1
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           postinc0	equ	0xFEE
   964                           wreg	equ	0xFE8
   965                           postdec1	equ	0xFE5
   966                           fsr1h	equ	0xFE2
   967                           fsr1l	equ	0xFE1
   968                           
   969                           	psect	cstackBANK3
   970  0003D4                     __pcstackBANK3:
   971                           	opt stack 0
   972  0003D4                     MiApp_SearchConnection@channelMask:
   973                           	opt stack 0
   974  0003D4                     MiApp_UnicastAddress@t1:
   975                           	opt stack 0
   976                           
   977                           ; 4 bytes @ 0x0
   978  0003D4                     	ds	4
   979  0003D8                     MiApp_SearchConnection@t1:
   980                           	opt stack 0
   981  0003D8                     MiApp_UnicastAddress@t2:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x4
   985  0003D8                     	ds	4
   986  0003DC                     MiApp_SearchConnection@t2:
   987                           	opt stack 0
   988  0003DC                     MiApp_UnicastAddress@t1_2763:
   989                           	opt stack 0
   990                           
   991                           ; 4 bytes @ 0x8
   992  0003DC                     	ds	4
   993  0003E0                     MiApp_SearchConnection@ScanDuration:
   994                           	opt stack 0
   995  0003E0                     MiApp_UnicastAddress@t2_2774:
   996                           	opt stack 0
   997                           
   998                           ; 4 bytes @ 0xC
   999  0003E0                     	ds	1
  1000  0003E1                     MiApp_SearchConnection@backupChannel:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0xD
  1004  0003E1                     	ds	1
  1005  0003E2                     MiApp_SearchConnection@i:
  1006                           	opt stack 0
  1007                           
  1008                           ; 1 bytes @ 0xE
  1009  0003E2                     	ds	2
  1010  0003E4                     MiApp_UnicastAddress@MiWiFrameControl:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x10
  1014  0003E4                     	ds	1
  1015  0003E5                     MiApp_UnicastAddress@i:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x11
  1019  0003E5                     	ds	1
  1020  0003E6                     MiApp_UnicastAddress@handle:
  1021                           	opt stack 0
  1022                           
  1023                           ; 1 bytes @ 0x12
  1024  0003E6                     	ds	1
  1025  0003E7                     ??_do_NETWORK_REGISTER:
  1026  0003E7                     ??_MiApp_EstablishConnection:
  1027  0003E7                     do_POWER_TEST@result:
  1028                           	opt stack 0
  1029  0003E7                     do_UPDATE@p_buff:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x13
  1033  0003E7                     	ds	1
  1034  0003E8                     do_POWER_TEST@power_lvl:
  1035                           	opt stack 0
  1036  0003E8                     do_NETWORK_REGISTER@shortaddress:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0x14
  1040  0003E8                     	ds	1
  1041  0003E9                     do_UPDATE@size:
  1042                           	opt stack 0
  1043  0003E9                     do_POWER_TEST@i:
  1044                           	opt stack 0
  1045                           
  1046                           ; 2 bytes @ 0x15
  1047  0003E9                     	ds	1
  1048  0003EA                     do_UPDATE@ack_required:
  1049                           	opt stack 0
  1050  0003EA                     do_NETWORK_REGISTER@i:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x16
  1054  0003EA                     	ds	1
  1055  0003EB                     do_POWER_TEST@rssi:
  1056                           	opt stack 0
  1057  0003EB                     do_UPDATE@shortaddress:
  1058                           	opt stack 0
  1059                           
  1060                           ; 2 bytes @ 0x17
  1061  0003EB                     	ds	1
  1062  0003EC                     do_NETWORK_REGISTER@result:
  1063                           	opt stack 0
  1064  0003EC                     do_POWER_TEST@shortaddress:
  1065                           	opt stack 0
  1066                           
  1067                           ; 2 bytes @ 0x18
  1068  0003EC                     	ds	1
  1069  0003ED                     do_UPDATE@i:
  1070                           	opt stack 0
  1071                           
  1072                           ; 2 bytes @ 0x19
  1073  0003ED                     	ds	1
  1074  0003EE                     adapt_power_level@rssi:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x1A
  1078  0003EE                     	ds	1
  1079  0003EF                     adapt_power_level@last_good_power:
  1080                           	opt stack 0
  1081  0003EF                     do_UPDATE@result:
  1082                           	opt stack 0
  1083  0003EF                     MiApp_EstablishConnection@t1:
  1084                           	opt stack 0
  1085                           
  1086                           ; 4 bytes @ 0x1B
  1087  0003EF                     	ds	1
  1088  0003F0                     ??_process_update_answer:
  1089  0003F0                     adapt_power_level@m_power:
  1090                           	opt stack 0
  1091  0003F0                     send_initial_update@tmp2:
  1092                           	opt stack 0
  1093  0003F0                     send_periodical_update@tmp2:
  1094                           	opt stack 0
  1095                           
  1096                           ; 3 bytes @ 0x1C
  1097  0003F0                     	ds	3
  1098  0003F3                     _send_initial_update$5141:
  1099                           	opt stack 0
  1100  0003F3                     _send_periodical_update$5145:
  1101                           	opt stack 0
  1102  0003F3                     MiApp_EstablishConnection@t2:
  1103                           	opt stack 0
  1104                           
  1105                           ; 4 bytes @ 0x1F
  1106  0003F3                     	ds	3
  1107  0003F6                     _send_initial_update$5142:
  1108                           	opt stack 0
  1109  0003F6                     _send_periodical_update$5146:
  1110                           	opt stack 0
  1111                           
  1112                           ; 3 bytes @ 0x22
  1113  0003F6                     	ds	1
  1114  0003F7                     MiApp_EstablishConnection@retry:
  1115                           	opt stack 0
  1116  0003F7                     process_update_answer@result:
  1117                           	opt stack 0
  1118                           
  1119                           ; 1 bytes @ 0x23
  1120  0003F7                     	ds	1
  1121  0003F8                     MiApp_EstablishConnection@ActiveScanIndex:
  1122                           	opt stack 0
  1123  0003F8                     process_update_answer@ack_required:
  1124                           	opt stack 0
  1125                           
  1126                           ; 1 bytes @ 0x24
  1127  0003F8                     	ds	1
  1128  0003F9                     MiApp_EstablishConnection@i:
  1129                           	opt stack 0
  1130  0003F9                     process_update_answer@i:
  1131                           	opt stack 0
  1132  0003F9                     _send_initial_update$5143:
  1133                           	opt stack 0
  1134  0003F9                     _send_periodical_update$5147:
  1135                           	opt stack 0
  1136                           
  1137                           ; 3 bytes @ 0x25
  1138  0003F9                     	ds	1
  1139  0003FA                     process_update_answer@shortaddress:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x26
  1143  0003FA                     	ds	2
  1144  0003FC                     process_update_answer@size:
  1145                           	opt stack 0
  1146  0003FC                     _send_initial_update$5144:
  1147                           	opt stack 0
  1148  0003FC                     _send_periodical_update$5148:
  1149                           	opt stack 0
  1150                           
  1151                           ; 3 bytes @ 0x28
  1152  0003FC                     	ds	3
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           postinc0	equ	0xFEE
  1158                           wreg	equ	0xFE8
  1159                           postdec1	equ	0xFE5
  1160                           fsr1h	equ	0xFE2
  1161                           fsr1l	equ	0xFE1
  1162                           
  1163                           	psect	cstackBANK1
  1164  00018A                     __pcstackBANK1:
  1165                           	opt stack 0
  1166  00018A                     ??_SearchForLongAddress:
  1167  00018A                     ??_wait_for_1_sec:
  1168  00018A                     ??_WriteI2C1:
  1169  00018A                     ??_MiApp_ConnectionMode:
  1170  00018A                     ?___awdiv:
  1171                           	opt stack 0
  1172  00018A                     ?___ftpack:
  1173                           	opt stack 0
  1174  00018A                     ?_MiWi_TickGet:
  1175                           	opt stack 0
  1176  00018A                     ?___lmul:
  1177                           	opt stack 0
  1178  00018A                     SPIPut@i:
  1179                           	opt stack 0
  1180  00018A                     findNextNetworkEntry@i:
  1181                           	opt stack 0
  1182  00018A                     mW_ufixed16_to_dBm@value2:
  1183                           	opt stack 0
  1184  00018A                     OpenI2C1@slew:
  1185                           	opt stack 0
  1186  00018A                     security_force_key_update@i:
  1187                           	opt stack 0
  1188  00018A                     MiMAC_SetAltAddress@Address:
  1189                           	opt stack 0
  1190  00018A                     encode@text:
  1191                           	opt stack 0
  1192  00018A                     isSameAddress@Address1:
  1193                           	opt stack 0
  1194  00018A                     labelcmp@p1:
  1195                           	opt stack 0
  1196  00018A                     dBm_to_mW_ufixed16@value1:
  1197                           	opt stack 0
  1198  00018A                     encode_uint8_variable@buffer:
  1199                           	opt stack 0
  1200  00018A                     encode_ufixed16_variable@buffer:
  1201                           	opt stack 0
  1202  00018A                     ___awdiv@dividend:
  1203                           	opt stack 0
  1204  00018A                     memcpy@d1:
  1205                           	opt stack 0
  1206  00018A                     ___ftpack@arg:
  1207                           	opt stack 0
  1208  00018A                     frexp@value:
  1209                           	opt stack 0
  1210  00018A                     ___ftge@ff1:
  1211                           	opt stack 0
  1212  00018A                     ___lmul@multiplier:
  1213                           	opt stack 0
  1214                           
  1215                           ; 4 bytes @ 0x0
  1216  00018A                     	ds	1
  1217  00018B                     SPIPut@v:
  1218                           	opt stack 0
  1219  00018B                     MiApp_ConnectionMode@Mode:
  1220                           	opt stack 0
  1221  00018B                     mW_ufixed16_to_dBm@value1:
  1222                           	opt stack 0
  1223  00018B                     OpenI2C1@sync_mode:
  1224                           	opt stack 0
  1225  00018B                     WriteI2C1@data_out:
  1226                           	opt stack 0
  1227  00018B                     wait_for_1_sec@i:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x1
  1231  00018B                     	ds	1
  1232  00018C                     RegisterRead@value:
  1233                           	opt stack 0
  1234  00018C                     WriteFIFO@Data:
  1235                           	opt stack 0
  1236  00018C                     SearchForShortAddress@i:
  1237                           	opt stack 0
  1238  00018C                     RegisterSet@setting:
  1239                           	opt stack 0
  1240  00018C                     MiMAC_SetAltAddress@PANID:
  1241                           	opt stack 0
  1242  00018C                     encode@key:
  1243                           	opt stack 0
  1244  00018C                     isSameAddress@Address2:
  1245                           	opt stack 0
  1246  00018C                     labelcmp@p2:
  1247                           	opt stack 0
  1248  00018C                     dBm_to_mW_ufixed16@value2:
  1249                           	opt stack 0
  1250  00018C                     ___awdiv@divisor:
  1251                           	opt stack 0
  1252  00018C                     memcpy@s1:
  1253                           	opt stack 0
  1254  00018C                     encode_uint8_variable@var:
  1255                           	opt stack 0
  1256  00018C                     encode_ufixed16_variable@var:
  1257                           	opt stack 0
  1258                           
  1259                           ; 10 bytes @ 0x2
  1260  00018C                     	ds	1
  1261  00018D                     RegisterRead@IRQ1select:
  1262                           	opt stack 0
  1263  00018D                     WriteFIFO@IRQ1select:
  1264                           	opt stack 0
  1265  00018D                     ___ftpack@exp:
  1266                           	opt stack 0
  1267  00018D                     frexp@eptr:
  1268                           	opt stack 0
  1269  00018D                     ___ftge@ff2:
  1270                           	opt stack 0
  1271                           
  1272                           ; 3 bytes @ 0x3
  1273  00018D                     	ds	1
  1274  00018E                     ??_labelcmp:
  1275  00018E                     ??_MiWi_TickGet:
  1276  00018E                     ??_encode:
  1277  00018E                     RegisterSet@IRQ1select:
  1278                           	opt stack 0
  1279  00018E                     RegisterRead@IRQ0select:
  1280                           	opt stack 0
  1281  00018E                     WriteFIFO@IRQ0select:
  1282                           	opt stack 0
  1283  00018E                     SearchForLongAddress@j:
  1284                           	opt stack 0
  1285  00018E                     dBm_to_mW_ufixed16@power:
  1286                           	opt stack 0
  1287  00018E                     ___awdiv@counter:
  1288                           	opt stack 0
  1289  00018E                     ___ftpack@sign:
  1290                           	opt stack 0
  1291  00018E                     memcpy@n:
  1292                           	opt stack 0
  1293  00018E                     ___lmul@multiplicand:
  1294                           	opt stack 0
  1295                           
  1296                           ; 4 bytes @ 0x4
  1297  00018E                     	ds	1
  1298  00018F                     ??___ftpack:
  1299  00018F                     ??_frexp:
  1300  00018F                     MiWi_TickGet@failureCounter:
  1301                           	opt stack 0
  1302  00018F                     RegisterSet@IRQ0select:
  1303                           	opt stack 0
  1304  00018F                     RegisterRead@address:
  1305                           	opt stack 0
  1306  00018F                     SearchForLongAddress@i:
  1307                           	opt stack 0
  1308  00018F                     ___awdiv@sign:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x5
  1312  00018F                     	ds	1
  1313  000190                     ??_AddNodeToNetworkTable:
  1314  000190                     ??_MiMAC_SetPower:
  1315  000190                     ??___ftge:
  1316  000190                     SetRFMode@mode:
  1317                           	opt stack 0
  1318  000190                     isSameAddress@i:
  1319                           	opt stack 0
  1320  000190                     ___awdiv@quotient:
  1321                           	opt stack 0
  1322  000190                     memcpy@d:
  1323                           	opt stack 0
  1324  000190                     MiWi_TickGet@currentTime:
  1325                           	opt stack 0
  1326                           
  1327                           ; 4 bytes @ 0x6
  1328  000190                     	ds	1
  1329  000191                     MiMAC_SetChannel@offsetFreq:
  1330                           	opt stack 0
  1331  000191                     _labelcmp$3774:
  1332                           	opt stack 0
  1333                           
  1334                           ; 1 bytes @ 0x7
  1335  000191                     	ds	1
  1336  000192                     ??_MiMAC_SetChannel:
  1337  000192                     ?___ftadd:
  1338                           	opt stack 0
  1339  000192                     ?___lwtoft:
  1340                           	opt stack 0
  1341  000192                     MiMAC_SetPower@outputPower:
  1342                           	opt stack 0
  1343  000192                     AddNodeToNetworkTable@i:
  1344                           	opt stack 0
  1345  000192                     ___lwtoft@c:
  1346                           	opt stack 0
  1347  000192                     memcpy@s:
  1348                           	opt stack 0
  1349  000192                     ___ftadd@f1:
  1350                           	opt stack 0
  1351  000192                     ___lmul@product:
  1352                           	opt stack 0
  1353                           
  1354                           ; 4 bytes @ 0x8
  1355  000192                     	ds	1
  1356  000193                     MiMAC_SetChannel@channel:
  1357                           	opt stack 0
  1358  000193                     AddNodeToNetworkTable@handle:
  1359                           	opt stack 0
  1360                           
  1361                           ; 1 bytes @ 0x9
  1362  000193                     	ds	1
  1363  000194                     ?_decode_variable:
  1364                           	opt stack 0
  1365  000194                     TxPacket@CCA:
  1366                           	opt stack 0
  1367  000194                     MiApp_SetChannel@channel:
  1368                           	opt stack 0
  1369  000194                     decode_variable@p_buffer:
  1370                           	opt stack 0
  1371                           
  1372                           ; 2 bytes @ 0xA
  1373  000194                     	ds	1
  1374  000195                     ??_TxPacket:
  1375  000195                     ___ftadd@f2:
  1376                           	opt stack 0
  1377                           
  1378                           ; 3 bytes @ 0xB
  1379  000195                     	ds	1
  1380  000196                     ??_encode_ufixed16_variable:
  1381  000196                     ??_encode_uint8_variable:
  1382  000196                     ?___lltoft:
  1383                           	opt stack 0
  1384  000196                     DELAY_ms@ms:
  1385                           	opt stack 0
  1386  000196                     ___lltoft@c:
  1387                           	opt stack 0
  1388                           
  1389                           ; 4 bytes @ 0xC
  1390  000196                     	ds	1
  1391  000197                     encode_uint8_variable@m_signed:
  1392                           	opt stack 0
  1393  000197                     encode_ufixed16_variable@m_signed:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0xD
  1397  000197                     	ds	1
  1398  000198                     ??___ftadd:
  1399  000198                     encode_uint8_variable@m_writable:
  1400                           	opt stack 0
  1401  000198                     encode_ufixed16_variable@m_writable:
  1402                           	opt stack 0
  1403  000198                     encode@delta:
  1404                           	opt stack 0
  1405  000198                     DELAY_ms@cyclesRequiredForEntireDelay:
  1406                           	opt stack 0
  1407                           
  1408                           ; 4 bytes @ 0xE
  1409  000198                     	ds	2
  1410  00019A                     ??___lltoft:
  1411  00019A                     encode@i:
  1412                           	opt stack 0
  1413                           
  1414                           ; 1 bytes @ 0x10
  1415  00019A                     	ds	1
  1416  00019B                     ___ftadd@sign:
  1417                           	opt stack 0
  1418  00019B                     encode@part1:
  1419                           	opt stack 0
  1420                           
  1421                           ; 2 bytes @ 0x11
  1422  00019B                     	ds	1
  1423  00019C                     MiMAC_PowerState@PowerState:
  1424                           	opt stack 0
  1425  00019C                     ___ftadd@exp2:
  1426                           	opt stack 0
  1427  00019C                     MiMAC_Init@initValue:
  1428                           	opt stack 0
  1429                           
  1430                           ; 3 bytes @ 0x12
  1431  00019C                     	ds	1
  1432  00019D                     MiMAC_PowerState@i:
  1433                           	opt stack 0
  1434  00019D                     ___ftadd@exp1:
  1435                           	opt stack 0
  1436  00019D                     encode@part2:
  1437                           	opt stack 0
  1438  00019D                     TxPacket@t1:
  1439                           	opt stack 0
  1440                           
  1441                           ; 4 bytes @ 0x13
  1442  00019D                     	ds	1
  1443  00019E                     ??_decode_variable:
  1444  00019E                     MiApp_TransceiverPowerState@Mode:
  1445                           	opt stack 0
  1446  00019E                     ___lltoft@exp:
  1447                           	opt stack 0
  1448                           
  1449                           ; 1 bytes @ 0x14
  1450  00019E                     	ds	1
  1451  00019F                     ?___ftdiv:
  1452                           	opt stack 0
  1453  00019F                     MiMAC_Init@i:
  1454                           	opt stack 0
  1455  00019F                     encode@sum:
  1456                           	opt stack 0
  1457  00019F                     ___ftdiv@f1:
  1458                           	opt stack 0
  1459                           
  1460                           ; 3 bytes @ 0x15
  1461  00019F                     	ds	1
  1462  0001A0                     ??_MiApp_ProtocolInit:
  1463  0001A0                     decode_variable@var:
  1464                           	opt stack 0
  1465                           
  1466                           ; 10 bytes @ 0x16
  1467  0001A0                     	ds	1
  1468  0001A1                     MiApp_ProtocolInit@bNetworkFreezer:
  1469                           	opt stack 0
  1470  0001A1                     CTR@text:
  1471                           	opt stack 0
  1472  0001A1                     CBC_MAC@text:
  1473                           	opt stack 0
  1474  0001A1                     TxPacket@t2:
  1475                           	opt stack 0
  1476                           
  1477                           ; 4 bytes @ 0x17
  1478  0001A1                     	ds	1
  1479  0001A2                     MiApp_ProtocolInit@MIP:
  1480                           	opt stack 0
  1481  0001A2                     ___ftdiv@f2:
  1482                           	opt stack 0
  1483                           
  1484                           ; 3 bytes @ 0x18
  1485  0001A2                     	ds	1
  1486  0001A3                     CTR@len:
  1487                           	opt stack 0
  1488  0001A3                     CBC_MAC@len:
  1489                           	opt stack 0
  1490                           
  1491                           ; 1 bytes @ 0x19
  1492  0001A3                     	ds	1
  1493  0001A4                     CTR@key:
  1494                           	opt stack 0
  1495  0001A4                     CBC_MAC@key:
  1496                           	opt stack 0
  1497                           
  1498                           ; 2 bytes @ 0x1A
  1499  0001A4                     	ds	1
  1500  0001A5                     ??___ftdiv:
  1501  0001A5                     TxPacket@CCARetries:
  1502                           	opt stack 0
  1503  0001A5                     MiApp_ProtocolInit@i:
  1504                           	opt stack 0
  1505                           
  1506                           ; 1 bytes @ 0x1B
  1507  0001A5                     	ds	1
  1508  0001A6                     TxPacket@reTry:
  1509                           	opt stack 0
  1510  0001A6                     CTR@nounce:
  1511                           	opt stack 0
  1512  0001A6                     CBC_MAC@MIC:
  1513                           	opt stack 0
  1514                           
  1515                           ; 2 bytes @ 0x1C
  1516  0001A6                     	ds	1
  1517  0001A7                     TxPacket@allowedTxFailure:
  1518                           	opt stack 0
  1519                           
  1520                           ; 1 bytes @ 0x1D
  1521  0001A7                     	ds	1
  1522  0001A8                     ??_CTR:
  1523  0001A8                     ??_CBC_MAC:
  1524  0001A8                     TxPacket@status:
  1525                           	opt stack 0
  1526  0001A8                     ___ftdiv@cntr:
  1527                           	opt stack 0
  1528                           
  1529                           ; 1 bytes @ 0x1E
  1530  0001A8                     	ds	1
  1531  0001A9                     TxPacket@TxPacketLen:
  1532                           	opt stack 0
  1533  0001A9                     ___ftdiv@f3:
  1534                           	opt stack 0
  1535                           
  1536                           ; 3 bytes @ 0x1F
  1537  0001A9                     	ds	1
  1538  0001AA                     TxPacket@i:
  1539                           	opt stack 0
  1540                           
  1541                           ; 1 bytes @ 0x20
  1542  0001AA                     	ds	1
  1543  0001AB                     TxPacket@rssival:
  1544                           	opt stack 0
  1545  0001AB                     CTR@block:
  1546                           	opt stack 0
  1547  0001AB                     CBC_MAC@block:
  1548                           	opt stack 0
  1549                           
  1550                           ; 1 bytes @ 0x21
  1551  0001AB                     	ds	1
  1552  0001AC                     CTR@i:
  1553                           	opt stack 0
  1554  0001AC                     CBC_MAC@j:
  1555                           	opt stack 0
  1556  0001AC                     ___ftdiv@exp:
  1557                           	opt stack 0
  1558                           
  1559                           ; 1 bytes @ 0x22
  1560  0001AC                     	ds	1
  1561  0001AD                     CTR@j:
  1562                           	opt stack 0
  1563  0001AD                     CBC_MAC@i:
  1564                           	opt stack 0
  1565  0001AD                     ___ftdiv@sign:
  1566                           	opt stack 0
  1567                           
  1568                           ; 1 bytes @ 0x23
  1569  0001AD                     	ds	1
  1570  0001AE                     ?___fttol:
  1571                           	opt stack 0
  1572  0001AE                     CCM_Enc@text:
  1573                           	opt stack 0
  1574  0001AE                     CCM_Dec@text:
  1575                           	opt stack 0
  1576  0001AE                     ___fttol@f1:
  1577                           	opt stack 0
  1578                           
  1579                           ; 3 bytes @ 0x24
  1580  0001AE                     	ds	2
  1581  0001B0                     CCM_Enc@headerLen:
  1582                           	opt stack 0
  1583  0001B0                     CCM_Dec@headerLen:
  1584                           	opt stack 0
  1585                           
  1586                           ; 1 bytes @ 0x26
  1587  0001B0                     	ds	1
  1588  0001B1                     CCM_Enc@payloadLen:
  1589                           	opt stack 0
  1590  0001B1                     CCM_Dec@payloadLen:
  1591                           	opt stack 0
  1592                           
  1593                           ; 1 bytes @ 0x27
  1594  0001B1                     	ds	1
  1595  0001B2                     ??___fttol:
  1596  0001B2                     CCM_Enc@key:
  1597                           	opt stack 0
  1598  0001B2                     CCM_Dec@key:
  1599                           	opt stack 0
  1600                           
  1601                           ; 2 bytes @ 0x28
  1602  0001B2                     	ds	2
  1603  0001B4                     ??_CCM_Enc:
  1604  0001B4                     ??_CCM_Dec:
  1605                           
  1606                           ; 0 bytes @ 0x2A
  1607  0001B4                     	ds	2
  1608  0001B6                     _CCM_Enc$2085:
  1609                           	opt stack 0
  1610                           
  1611                           ; 2 bytes @ 0x2C
  1612  0001B6                     	ds	1
  1613  0001B7                     ___fttol@sign1:
  1614                           	opt stack 0
  1615                           
  1616                           ; 1 bytes @ 0x2D
  1617  0001B7                     	ds	1
  1618  0001B8                     CCM_Enc@i:
  1619                           	opt stack 0
  1620  0001B8                     ___fttol@lval:
  1621                           	opt stack 0
  1622                           
  1623                           ; 4 bytes @ 0x2E
  1624  0001B8                     	ds	1
  1625  0001B9                     MiMAC_SendPacket@transParam:
  1626                           	opt stack 0
  1627                           
  1628                           ; 3 bytes @ 0x2F
  1629  0001B9                     	ds	1
  1630  0001BA                     _CCM_Dec$2093:
  1631                           	opt stack 0
  1632                           
  1633                           ; 2 bytes @ 0x30
  1634  0001BA                     	ds	2
  1635  0001BC                     CCM_Dec@i:
  1636                           	opt stack 0
  1637  0001BC                     ___fttol@exp1:
  1638                           	opt stack 0
  1639  0001BC                     MiMAC_SendPacket@MACPayload:
  1640                           	opt stack 0
  1641                           
  1642                           ; 2 bytes @ 0x32
  1643  0001BC                     	ds	1
  1644  0001BD                     ??_MiMAC_ReceivedPacket:
  1645  0001BD                     ?___altoft:
  1646                           	opt stack 0
  1647  0001BD                     ___altoft@c:
  1648                           	opt stack 0
  1649                           
  1650                           ; 4 bytes @ 0x33
  1651  0001BD                     	ds	1
  1652  0001BE                     MiMAC_SendPacket@MACPayloadLen:
  1653                           	opt stack 0
  1654                           
  1655                           ; 1 bytes @ 0x34
  1656  0001BE                     	ds	1
  1657  0001BF                     ??_MiMAC_SendPacket:
  1658                           
  1659                           ; 0 bytes @ 0x35
  1660  0001BF                     	ds	1
  1661  0001C0                     MiMAC_SendPacket@headerLen:
  1662                           	opt stack 0
  1663                           
  1664                           ; 1 bytes @ 0x36
  1665  0001C0                     	ds	1
  1666  0001C1                     ??___altoft:
  1667  0001C1                     MiMAC_SendPacket@TxIndex:
  1668                           	opt stack 0
  1669                           
  1670                           ; 1 bytes @ 0x37
  1671  0001C1                     	ds	1
  1672  0001C2                     MiMAC_SendPacket@i:
  1673                           	opt stack 0
  1674                           
  1675                           ; 1 bytes @ 0x38
  1676  0001C2                     	ds	1
  1677  0001C3                     SendMACPacket@Address:
  1678                           	opt stack 0
  1679                           
  1680                           ; 2 bytes @ 0x39
  1681  0001C3                     	ds	2
  1682  0001C5                     SendMACPacket@PacketType:
  1683                           	opt stack 0
  1684  0001C5                     ___altoft@exp:
  1685                           	opt stack 0
  1686  0001C5                     MiMAC_ReceivedPacket@currentTick:
  1687                           	opt stack 0
  1688                           
  1689                           ; 4 bytes @ 0x3B
  1690  0001C5                     	ds	1
  1691  0001C6                     ??_SendMACPacket:
  1692  0001C6                     ___altoft@sign:
  1693                           	opt stack 0
  1694                           
  1695                           ; 1 bytes @ 0x3C
  1696  0001C6                     	ds	1
  1697  0001C7                     ?_floor:
  1698                           	opt stack 0
  1699  0001C7                     floor@x:
  1700                           	opt stack 0
  1701                           
  1702                           ; 3 bytes @ 0x3D
  1703  0001C7                     	ds	2
  1704  0001C9                     MiMAC_ReceivedPacket@FrameCounter:
  1705                           	opt stack 0
  1706                           
  1707                           ; 4 bytes @ 0x3F
  1708  0001C9                     	ds	1
  1709  0001CA                     floor@i:
  1710                           	opt stack 0
  1711                           
  1712                           ; 3 bytes @ 0x40
  1713  0001CA                     	ds	3
  1714  0001CD                     MiMAC_ReceivedPacket@k:
  1715                           	opt stack 0
  1716  0001CD                     floor@expon:
  1717                           	opt stack 0
  1718                           
  1719                           ; 2 bytes @ 0x43
  1720  0001CD                     	ds	1
  1721  0001CE                     MiMAC_ReceivedPacket@j:
  1722                           	opt stack 0
  1723                           
  1724                           ; 1 bytes @ 0x44
  1725  0001CE                     	ds	1
  1726  0001CF                     ?___ftneg:
  1727                           	opt stack 0
  1728  0001CF                     MiMAC_ReceivedPacket@PayloadIndex:
  1729                           	opt stack 0
  1730  0001CF                     ___ftneg@f1:
  1731                           	opt stack 0
  1732                           
  1733                           ; 3 bytes @ 0x45
  1734  0001CF                     	ds	1
  1735  0001D0                     MiMAC_ReceivedPacket@i:
  1736                           	opt stack 0
  1737                           
  1738                           ; 1 bytes @ 0x46
  1739  0001D0                     	ds	1
  1740  0001D1                     ??_MiWiTasks:
  1741                           
  1742                           ; 0 bytes @ 0x47
  1743  0001D1                     	ds	1
  1744  0001D2                     ?___ftmul:
  1745                           	opt stack 0
  1746  0001D2                     ___ftmul@f1:
  1747                           	opt stack 0
  1748                           
  1749                           ; 3 bytes @ 0x48
  1750  0001D2                     	ds	3
  1751  0001D5                     ___ftmul@f2:
  1752                           	opt stack 0
  1753                           
  1754                           ; 3 bytes @ 0x4B
  1755  0001D5                     	ds	3
  1756  0001D8                     ??___ftmul:
  1757                           
  1758                           ; 0 bytes @ 0x4E
  1759  0001D8                     	ds	1
  1760  0001D9                     MiWiTasks@t2:
  1761                           	opt stack 0
  1762                           
  1763                           ; 4 bytes @ 0x4F
  1764  0001D9                     	ds	2
  1765  0001DB                     ___ftmul@exp:
  1766                           	opt stack 0
  1767                           
  1768                           ; 1 bytes @ 0x51
  1769  0001DB                     	ds	1
  1770  0001DC                     ___ftmul@f3_as_product:
  1771                           	opt stack 0
  1772                           
  1773                           ; 3 bytes @ 0x52
  1774  0001DC                     	ds	1
  1775  0001DD                     MiWiTasks@cIndex:
  1776                           	opt stack 0
  1777                           
  1778                           ; 1 bytes @ 0x53
  1779  0001DD                     	ds	1
  1780  0001DE                     MiWiTasks@t1:
  1781                           	opt stack 0
  1782                           
  1783                           ; 4 bytes @ 0x54
  1784  0001DE                     	ds	1
  1785  0001DF                     ___ftmul@cntr:
  1786                           	opt stack 0
  1787                           
  1788                           ; 1 bytes @ 0x55
  1789  0001DF                     	ds	1
  1790  0001E0                     ___ftmul@sign:
  1791                           	opt stack 0
  1792                           
  1793                           ; 1 bytes @ 0x56
  1794  0001E0                     	ds	1
  1795  0001E1                     ??_read_sensors:
  1796                           
  1797                           ; 0 bytes @ 0x57
  1798  0001E1                     	ds	1
  1799  0001E2                     MiWiTasks@destPANID:
  1800                           	opt stack 0
  1801                           
  1802                           ; 2 bytes @ 0x58
  1803  0001E2                     	ds	2
  1804  0001E4                     read_sensors@t0:
  1805                           	opt stack 0
  1806  0001E4                     MiWiTasks@destShortAddress:
  1807                           	opt stack 0
  1808                           
  1809                           ; 2 bytes @ 0x5A
  1810  0001E4                     	ds	1
  1811  0001E5                     read_sensors@t1:
  1812                           	opt stack 0
  1813                           
  1814                           ; 1 bytes @ 0x5B
  1815  0001E5                     	ds	1
  1816  0001E6                     MiWiTasks@rxIndex:
  1817                           	opt stack 0
  1818  0001E6                     read_sensors@adc_result:
  1819                           	opt stack 0
  1820                           
  1821                           ; 2 bytes @ 0x5C
  1822  0001E6                     	ds	1
  1823  0001E7                     MiWiTasks@CapacityByte:
  1824                           	opt stack 0
  1825                           
  1826                           ; 1 bytes @ 0x5D
  1827  0001E7                     	ds	1
  1828  0001E8                     MiWiTasks@j:
  1829                           	opt stack 0
  1830  0001E8                     read_sensors@value:
  1831                           	opt stack 0
  1832                           
  1833                           ; 2 bytes @ 0x5E
  1834  0001E8                     	ds	1
  1835  0001E9                     MiWiTasks@sourcePANID:
  1836                           	opt stack 0
  1837                           
  1838                           ; 2 bytes @ 0x5F
  1839  0001E9                     	ds	2
  1840  0001EB                     MiWiTasks@sourceShortAddress:
  1841                           	opt stack 0
  1842                           
  1843                           ; 2 bytes @ 0x61
  1844  0001EB                     	ds	2
  1845  0001ED                     MiWiTasks@i:
  1846                           	opt stack 0
  1847                           
  1848                           ; 1 bytes @ 0x63
  1849  0001ED                     	ds	1
  1850  0001EE                     MiApp_UnicastAddress@DestAddress:
  1851                           	opt stack 0
  1852  0001EE                     MiApp_SearchConnection@ChannelMap:
  1853                           	opt stack 0
  1854                           
  1855                           ; 4 bytes @ 0x64
  1856  0001EE                     	ds	2
  1857  0001F0                     MiApp_UnicastAddress@PermanentAddr:
  1858                           	opt stack 0
  1859                           
  1860                           ; 1 bytes @ 0x66
  1861  0001F0                     	ds	1
  1862  0001F1                     MiApp_UnicastAddress@SecEn:
  1863                           	opt stack 0
  1864                           
  1865                           ; 1 bytes @ 0x67
  1866  0001F1                     	ds	1
  1867  0001F2                     ??_MiApp_UnicastAddress:
  1868  0001F2                     ??_MiApp_SearchConnection:
  1869                           
  1870                           ; 0 bytes @ 0x68
  1871  0001F2                     	ds	8
  1872  0001FA                     ??_do_UPDATE:
  1873  0001FA                     ??_do_POWER_TEST:
  1874  0001FA                     OpenSocket@i:
  1875                           	opt stack 0
  1876  0001FA                     do_NETWORK_REGISTER@p_uid:
  1877                           	opt stack 0
  1878                           
  1879                           ; 2 bytes @ 0x70
  1880  0001FA                     	ds	1
  1881  0001FB                     ??_send_initial_update:
  1882  0001FB                     ??_send_periodical_update:
  1883  0001FB                     ??_send_writables_update:
  1884  0001FB                     MiApp_EstablishConnection@Mode:
  1885                           	opt stack 0
  1886  0001FB                     adapt_power_level@minimal_rssi:
  1887                           	opt stack 0
  1888                           
  1889                           ; 1 bytes @ 0x71
  1890  0001FB                     	ds	1
  1891  0001FC                     ??_adapt_power_level:
  1892  0001FC                     do_NETWORK_REGISTER@sleeping_device:
  1893                           	opt stack 0
  1894                           
  1895                           ; 1 bytes @ 0x72
  1896  0001FC                     	ds	1
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           postinc0	equ	0xFEE
  1902                           wreg	equ	0xFE8
  1903                           postdec1	equ	0xFE5
  1904                           fsr1h	equ	0xFE2
  1905                           fsr1l	equ	0xFE1
  1906                           
  1907                           	psect	cstackBANK0
  1908  000060                     __pcstackBANK0:
  1909                           	opt stack 0
  1910  000060                     ?i2_MiWi_TickGet:
  1911                           	opt stack 0
  1912  000060                     i2SPIPut@i:
  1913                           	opt stack 0
  1914                           
  1915                           ; 1 bytes @ 0x0
  1916  000060                     	ds	1
  1917  000061                     i2SPIPut@v:
  1918                           	opt stack 0
  1919                           
  1920                           ; 1 bytes @ 0x1
  1921  000061                     	ds	1
  1922  000062                     i2RegisterRead@value:
  1923                           	opt stack 0
  1924  000062                     i2WriteFIFO@Data:
  1925                           	opt stack 0
  1926  000062                     i2RegisterSet@setting:
  1927                           	opt stack 0
  1928                           
  1929                           ; 2 bytes @ 0x2
  1930  000062                     	ds	1
  1931  000063                     i2RegisterRead@IRQ1select:
  1932                           	opt stack 0
  1933  000063                     i2WriteFIFO@IRQ1select:
  1934                           	opt stack 0
  1935                           
  1936                           ; 1 bytes @ 0x3
  1937  000063                     	ds	1
  1938  000064                     ??i2_MiWi_TickGet:
  1939  000064                     i2RegisterSet@IRQ1select:
  1940                           	opt stack 0
  1941  000064                     i2RegisterRead@IRQ0select:
  1942                           	opt stack 0
  1943  000064                     i2WriteFIFO@IRQ0select:
  1944                           	opt stack 0
  1945                           
  1946                           ; 1 bytes @ 0x4
  1947  000064                     	ds	1
  1948  000065                     i2MiWi_TickGet@failureCounter:
  1949                           	opt stack 0
  1950  000065                     i2RegisterSet@IRQ0select:
  1951                           	opt stack 0
  1952  000065                     i2RegisterRead@address:
  1953                           	opt stack 0
  1954                           
  1955                           ; 1 bytes @ 0x5
  1956  000065                     	ds	1
  1957  000066                     i2SetRFMode@mode:
  1958                           	opt stack 0
  1959  000066                     i2MiWi_TickGet@currentTime:
  1960                           	opt stack 0
  1961                           
  1962                           ; 4 bytes @ 0x6
  1963  000066                     	ds	4
  1964  00006A                     i2TxPacket@CCA:
  1965                           	opt stack 0
  1966                           
  1967                           ; 1 bytes @ 0xA
  1968  00006A                     	ds	1
  1969  00006B                     ??i2_TxPacket:
  1970                           
  1971                           ; 0 bytes @ 0xB
  1972  00006B                     	ds	8
  1973  000073                     i2TxPacket@t1:
  1974                           	opt stack 0
  1975                           
  1976                           ; 4 bytes @ 0x13
  1977  000073                     	ds	4
  1978  000077                     i2TxPacket@t2:
  1979                           	opt stack 0
  1980                           
  1981                           ; 4 bytes @ 0x17
  1982  000077                     	ds	4
  1983  00007B                     i2TxPacket@status:
  1984                           	opt stack 0
  1985                           
  1986                           ; 1 bytes @ 0x1B
  1987  00007B                     	ds	1
  1988  00007C                     i2TxPacket@CCARetries:
  1989                           	opt stack 0
  1990                           
  1991                           ; 1 bytes @ 0x1C
  1992  00007C                     	ds	1
  1993  00007D                     i2TxPacket@reTry:
  1994                           	opt stack 0
  1995                           
  1996                           ; 1 bytes @ 0x1D
  1997  00007D                     	ds	1
  1998  00007E                     i2TxPacket@allowedTxFailure:
  1999                           	opt stack 0
  2000                           
  2001                           ; 1 bytes @ 0x1E
  2002  00007E                     	ds	1
  2003  00007F                     i2TxPacket@TxPacketLen:
  2004                           	opt stack 0
  2005                           
  2006                           ; 1 bytes @ 0x1F
  2007  00007F                     	ds	1
  2008  000080                     i2TxPacket@i:
  2009                           	opt stack 0
  2010                           
  2011                           ; 1 bytes @ 0x20
  2012  000080                     	ds	1
  2013  000081                     i2TxPacket@rssival:
  2014                           	opt stack 0
  2015                           
  2016                           ; 1 bytes @ 0x21
  2017  000081                     	ds	1
  2018  000082                     ??_MIWIInterruptHandler:
  2019                           
  2020                           ; 0 bytes @ 0x22
  2021  000082                     	ds	6
  2022  000088                     MIWIInterruptHandler@counter:
  2023                           	opt stack 0
  2024                           
  2025                           ; 2 bytes @ 0x28
  2026  000088                     	ds	2
  2027  00008A                     MIWIInterruptHandler@fifo_stat:
  2028                           	opt stack 0
  2029                           
  2030                           ; 1 bytes @ 0x2A
  2031  00008A                     	ds	1
  2032  00008B                     MIWIInterruptHandler@ackPacket:
  2033                           	opt stack 0
  2034                           
  2035                           ; 4 bytes @ 0x2B
  2036  00008B                     	ds	4
  2037  00008F                     MIWIInterruptHandler@bAck:
  2038                           	opt stack 0
  2039                           
  2040                           ; 1 bytes @ 0x2F
  2041  00008F                     	ds	1
  2042  000090                     MIWIInterruptHandler@RxPacketPtr:
  2043                           	opt stack 0
  2044                           
  2045                           ; 1 bytes @ 0x30
  2046  000090                     	ds	1
  2047  000091                     MIWIInterruptHandler@ackInfoIndex:
  2048                           	opt stack 0
  2049                           
  2050                           ; 1 bytes @ 0x31
  2051  000091                     	ds	1
  2052  000092                     MIWIInterruptHandler@PacketLen:
  2053                           	opt stack 0
  2054                           
  2055                           ; 1 bytes @ 0x32
  2056  000092                     	ds	1
  2057  000093                     MIWIInterruptHandler@BankIndex:
  2058                           	opt stack 0
  2059                           
  2060                           ; 1 bytes @ 0x33
  2061  000093                     	ds	1
  2062  000094                     MIWIInterruptHandler@i:
  2063                           	opt stack 0
  2064                           
  2065                           ; 1 bytes @ 0x34
  2066  000094                     	ds	1
  2067  000095                     ??_SYS_InterruptHigh:
  2068                           
  2069                           ; 0 bytes @ 0x35
  2070  000095                     	ds	14
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           postinc0	equ	0xFEE
  2076                           wreg	equ	0xFE8
  2077                           postdec1	equ	0xFE5
  2078                           fsr1h	equ	0xFE2
  2079                           fsr1l	equ	0xFE1
  2080                           
  2081                           	psect	cstackCOMRAM
  2082  000001                     __pcstackCOMRAM:
  2083                           	opt stack 0
  2084  000001                     ?i1___ftpack:
  2085                           	opt stack 0
  2086  000001                     i1___ftpack@arg:
  2087                           	opt stack 0
  2088                           
  2089                           ; 3 bytes @ 0x0
  2090  000001                     	ds	3
  2091  000004                     i1___ftpack@exp:
  2092                           	opt stack 0
  2093                           
  2094                           ; 1 bytes @ 0x3
  2095  000004                     	ds	1
  2096  000005                     i1___ftpack@sign:
  2097                           	opt stack 0
  2098                           
  2099                           ; 1 bytes @ 0x4
  2100  000005                     	ds	1
  2101  000006                     ??i1___ftpack:
  2102                           
  2103                           ; 0 bytes @ 0x5
  2104  000006                     	ds	3
  2105  000009                     ?i1___ftadd:
  2106                           	opt stack 0
  2107  000009                     i1___ftadd@f1:
  2108                           	opt stack 0
  2109                           
  2110                           ; 3 bytes @ 0x8
  2111  000009                     	ds	3
  2112  00000C                     i1___ftadd@f2:
  2113                           	opt stack 0
  2114                           
  2115                           ; 3 bytes @ 0xB
  2116  00000C                     	ds	3
  2117  00000F                     ??i1___ftadd:
  2118                           
  2119                           ; 0 bytes @ 0xE
  2120  00000F                     	ds	3
  2121  000012                     i1___ftadd@sign:
  2122                           	opt stack 0
  2123                           
  2124                           ; 1 bytes @ 0x11
  2125  000012                     	ds	1
  2126  000013                     i1___ftadd@exp2:
  2127                           	opt stack 0
  2128                           
  2129                           ; 1 bytes @ 0x12
  2130  000013                     	ds	1
  2131  000014                     i1___ftadd@exp1:
  2132                           	opt stack 0
  2133                           
  2134                           ; 1 bytes @ 0x13
  2135  000014                     	ds	1
  2136  000015                     ??_SYS_InterruptLow:
  2137                           
  2138                           ; 0 bytes @ 0x14
  2139  000015                     	ds	17
  2140                           tblptru	equ	0xFF8
  2141                           tblptrh	equ	0xFF7
  2142                           tblptrl	equ	0xFF6
  2143                           tablat	equ	0xFF5
  2144                           postinc0	equ	0xFEE
  2145                           wreg	equ	0xFE8
  2146                           postdec1	equ	0xFE5
  2147                           fsr1h	equ	0xFE2
  2148                           fsr1l	equ	0xFE1
  2149                           
  2150 ;;
  2151 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2152 ;;
  2153 ;; *************** function _main *****************
  2154 ;; Defined at:
  2155 ;;		line 135 in file "src/main.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  j               1    8[BANK4 ] unsigned char 
  2160 ;;  x               2    6[BANK4 ] int 
  2161 ;;  scanresult      1    9[BANK4 ] volatile unsigned char 
  2162 ;;  best_RSSI       1    5[BANK4 ] unsigned char 
  2163 ;;  Status          1    4[BANK4 ] unsigned char 
  2164 ;;  best_candida    1    3[BANK4 ] unsigned char 
  2165 ;;  result          1    2[BANK4 ] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;		None               void
  2168 ;; Registers used:
  2169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0       8       0       0       0       0       0       0       
      +0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0      10       0       0       0       0       0       0       
      +0       0       0       0
  2179 ;;Total ram usage:       10 bytes
  2180 ;; Hardware stack levels required when called:   20
  2181 ;; This function calls:
  2182 ;;		_MiApp_ConnectionMode
  2183 ;;		_MiApp_DiscardMessage
  2184 ;;		_MiApp_EstablishConnection
  2185 ;;		_MiApp_MessageAvailable
  2186 ;;		_MiApp_ProtocolInit
  2187 ;;		_MiApp_SearchConnection
  2188 ;;		_MiApp_TransceiverPowerState
  2189 ;;		_MiMAC_SetPower
  2190 ;;		_MiWiTasks
  2191 ;;		_RTCC_reset
  2192 ;;		_SYSTEM_Initialize
  2193 ;;		_adapt_power_level
  2194 ;;		_do_NETWORK_REGISTER
  2195 ;;		_process_update_answer
  2196 ;;		_read_sensors
  2197 ;;		_security_force_key_update
  2198 ;;		_send_initial_update
  2199 ;;		_send_periodical_update
  2200 ;;		_sleep_and_reset
  2201 ;;		_timer_reset
  2202 ;;		_wait_for_1_sec
  2203 ;; This function is called by:
  2204 ;;		Startup code after reset
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text0
  2209  01306E                     __ptext0:
  2210                           	opt stack 0
  2211  01306E                     _main:
  2212                           	opt stack 11
  2213                           
  2214                           ;main.c: 137: SYSTEM_Initialize();
  2215                           
  2216                           ;incstack = 0
  2217  01306E  EC68  F0AA         	call	_SYSTEM_Initialize	;wreg free
  2218                           
  2219                           ;main.c: 139: RTCC_reset();
  2220  013072  EC78  F0B7         	call	_RTCC_reset	;wreg free
  2221                           
  2222                           ;main.c: 140: timer_reset();
  2223  013076  ECC0  F0B7         	call	_timer_reset	;wreg free
  2224                           
  2225                           ;main.c: 142: myAppState = STATE_INIT;
  2226  01307A  0E00               	movlw	0
  2227  01307C  0101               	movlb	1	; () banked
  2228  01307E  6F4B               	movwf	_myAppState& (0+255),b
  2229                           
  2230                           ; BSR set to: 1
  2231                           ;main.c: 144: bool result;
  2232                           ;main.c: 146: myLongAddress[0] = myMUTA_version;
  2233  013080  0EF2               	movlw	242
  2234  013082  6EF6               	movwf	tblptrl,c
  2235  013084                     	if	1	;There is more than 1 active tblptr byte
  2236  013084  0EFF               	movlw	255
  2237  013086  6EF7               	movwf	tblptrh,c
  2238  013088                     	endif
  2239  013088                     	if	1	;There are 3 active tblptr bytes
  2240  013088  0E01               	movlw	1
  2241  01308A  6EF8               	movwf	tblptru,c
  2242  01308C                     	endif
  2243  01308C  0008               	tblrd		*
  2244  01308E  CFF5 F0C8          	movff	tablat,_myLongAddress
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;main.c: 147: myLongAddress[1] = myMODEL;
  2248  013092  0EF4               	movlw	244
  2249  013094  6EF6               	movwf	tblptrl,c
  2250  013096                     	if	1	;There is more than 1 active tblptr byte
  2251  013096  0EFF               	movlw	255
  2252  013098  6EF7               	movwf	tblptrh,c
  2253  01309A                     	endif
  2254  01309A                     	if	1	;There are 3 active tblptr bytes
  2255  01309A  0E01               	movlw	1
  2256  01309C  6EF8               	movwf	tblptru,c
  2257  01309E                     	endif
  2258  01309E  0008               	tblrd		*
  2259  0130A0  CFF5 F0C9          	movff	tablat,_myLongAddress+1
  2260                           
  2261                           ; BSR set to: 1
  2262                           ;main.c: 148: myLongAddress[2] = myUID[0];
  2263  0130A4  0EF6               	movlw	246
  2264  0130A6  6EF6               	movwf	tblptrl,c
  2265  0130A8                     	if	1	;There is more than 1 active tblptr byte
  2266  0130A8  0EFF               	movlw	255
  2267  0130AA  6EF7               	movwf	tblptrh,c
  2268  0130AC                     	endif
  2269  0130AC                     	if	1	;There are 3 active tblptr bytes
  2270  0130AC  0E01               	movlw	1
  2271  0130AE  6EF8               	movwf	tblptru,c
  2272  0130B0                     	endif
  2273  0130B0  0008               	tblrd		*
  2274  0130B2  CFF5 F0CA          	movff	tablat,_myLongAddress+2
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;main.c: 149: myLongAddress[3] = myUID[1];
  2278  0130B6  0EF7               	movlw	247
  2279  0130B8  6EF6               	movwf	tblptrl,c
  2280  0130BA  0EFF               	movlw	255
  2281  0130BC  6EF7               	movwf	tblptrh,c
  2282  0130BE  0E01               	movlw	1
  2283  0130C0  6EF8               	movwf	tblptru,c
  2284  0130C2  0008               	tblrd		*
  2285  0130C4  CFF5 F0CB          	movff	tablat,_myLongAddress+3
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;main.c: 152: for (int x=0; x<8; x++)
  2289  0130C8  0E00               	movlw	0
  2290  0130CA  0104               	movlb	4	; () banked
  2291  0130CC  6F07               	movwf	(main@x+1)& (0+255),b
  2292  0130CE  0E00               	movlw	0
  2293  0130D0  6F06               	movwf	main@x& (0+255),b
  2294  0130D2                     l15161:
  2295                           
  2296                           ; BSR set to: 4
  2297  0130D2  0104               	movlb	4	; () banked
  2298  0130D4  BF07               	btfsc	(main@x+1)& (0+255),7,b
  2299  0130D6  D008               	goto	l15165
  2300  0130D8  0104               	movlb	4	; () banked
  2301  0130DA  5107               	movf	(main@x+1)& (0+255),w,b
  2302  0130DC  E11E               	bnz	l15171
  2303  0130DE  0E08               	movlw	8
  2304  0130E0  0104               	movlb	4	; () banked
  2305  0130E2  5D06               	subwf	main@x& (0+255),w,b
  2306  0130E4  B0D8               	btfsc	status,0,c
  2307  0130E6  D019               	goto	l15171
  2308  0130E8                     l15165:
  2309                           
  2310                           ; BSR set to: 4
  2311                           ;main.c: 153: mySecurityKey[x] = StaticSecurityKey[x];
  2312  0130E8  0EEC               	movlw	236
  2313  0130EA  0104               	movlb	4	; () banked
  2314  0130EC  2506               	addwf	main@x& (0+255),w,b
  2315  0130EE  6EF6               	movwf	tblptrl,c
  2316  0130F0  0EFF               	movlw	255
  2317  0130F2  2107               	addwfc	(main@x+1)& (0+255),w,b
  2318  0130F4  6EF7               	movwf	tblptrh,c
  2319  0130F6  6AF8               	clrf	tblptru,c
  2320  0130F8  0E01               	movlw	1
  2321  0130FA  22F8               	addwfc	tblptru,f,c
  2322  0130FC  0EA3               	movlw	low _mySecurityKey
  2323  0130FE  0104               	movlb	4	; () banked
  2324  013100  2506               	addwf	main@x& (0+255),w,b
  2325  013102  6ED9               	movwf	fsr2l,c
  2326  013104  0E00               	movlw	high _mySecurityKey
  2327  013106  0104               	movlb	4	; () banked
  2328  013108  2107               	addwfc	(main@x+1)& (0+255),w,b
  2329  01310A  6EDA               	movwf	fsr2h,c
  2330  01310C  0008               	tblrd		*
  2331  01310E  CFF5 FFDF          	movff	tablat,indf2
  2332                           
  2333                           ; BSR set to: 4
  2334  013112  0104               	movlb	4	; () banked
  2335  013114  4B06               	infsnz	main@x& (0+255),f,b
  2336  013116  2B07               	incf	(main@x+1)& (0+255),f,b
  2337  013118  D7DC               	goto	l15161
  2338  01311A                     l15171:
  2339                           
  2340                           ; BSR set to: 4
  2341                           ;main.c: 155: MiApp_ProtocolInit(0);
  2342  01311A  0E00               	movlw	0
  2343  01311C  ECB3  F0A8         	call	_MiApp_ProtocolInit
  2344                           
  2345                           ;main.c: 156: MiMAC_SetPower(0x00);
  2346  013120  0E00               	movlw	0
  2347  013122  ECC9  F0B6         	call	_MiMAC_SetPower
  2348  013126                     l15175:
  2349                           
  2350                           ;main.c: 162: {
  2351                           ;main.c: 163: scanresult = MiApp_SearchConnection(8, 0x11111111);
  2352  013126  0E11               	movlw	17
  2353  013128  0101               	movlb	1	; () banked
  2354  01312A  6FEE               	movwf	MiApp_SearchConnection@ChannelMap& (0+255),b
  2355  01312C  0E11               	movlw	17
  2356  01312E  6FEF               	movwf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),b
  2357  013130  0E11               	movlw	17
  2358  013132  6FF0               	movwf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),b
  2359  013134  0E11               	movlw	17
  2360  013136  6FF1               	movwf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),b
  2361  013138  0E08               	movlw	8
  2362  01313A  EC00  F09D         	call	_MiApp_SearchConnection
  2363  01313E  0104               	movlb	4	; () banked
  2364  013140  6F09               	movwf	main@scanresult& (0+255),b	;volatile
  2365                           
  2366                           ; BSR set to: 4
  2367                           ;main.c: 164: if (scanresult == 0)
  2368  013142  0104               	movlb	4	; () banked
  2369  013144  5109               	movf	main@scanresult& (0+255),w,b	;volatile
  2370  013146  0104               	movlb	4	; () banked
  2371  013148  A4D8               	btfss	status,2,c
  2372  01314A  D017               	goto	l15193
  2373                           
  2374                           ; BSR set to: 4
  2375                           ;main.c: 165: {
  2376                           ;main.c: 168: if (m_update_frequency<10)
  2377  01314C  0E0A               	movlw	10
  2378  01314E  0101               	movlb	1	; () banked
  2379  013150  61FF               	cpfslt	_m_update_frequency& (0+255),b	;volatile
  2380  013152  D002               	goto	l15183
  2381                           
  2382                           ; BSR set to: 1
  2383                           ;main.c: 169: {
  2384                           ;main.c: 170: m_update_frequency++;
  2385  013154  0101               	movlb	1	; () banked
  2386  013156  2BFF               	incf	_m_update_frequency& (0+255),f,b	;volatile
  2387  013158                     l15183:
  2388                           
  2389                           ; BSR set to: 1
  2390                           ;main.c: 171: }
  2391                           ;main.c: 172: LATCbits.LATC0 = 0;
  2392  013158  908B               	bcf	3979,0,c	;volatile
  2393                           
  2394                           ; BSR set to: 1
  2395                           ;main.c: 173: timer_reset();
  2396  01315A  ECC0  F0B7         	call	_timer_reset	;wreg free
  2397                           
  2398                           ;main.c: 174: MiApp_TransceiverPowerState(0x00);
  2399  01315E  0E00               	movlw	0
  2400  013160  ECAB  F0B6         	call	_MiApp_TransceiverPowerState
  2401                           
  2402                           ;main.c: 176: while (!timer_flag)
  2403  013164  D002               	goto	l15189
  2404  013166                     l1080:
  2405                           
  2406                           ; BSR set to: 1
  2407                           ;main.c: 177: {
  2408                           ;main.c: 178: OSCCONbits.IDLEN = 0;
  2409  013166  9ED3               	bcf	4051,7,c	;volatile
  2410  013168  0003               	sleep		;# 
  2411  01316A                     l15189:
  2412  01316A  0101               	movlb	1	; () banked
  2413  01316C  514D               	movf	_timer_flag& (0+255),w,b	;volatile
  2414  01316E  B4D8               	btfsc	status,2,c
  2415  013170  D7FA               	goto	l1080
  2416                           
  2417                           ; BSR set to: 1
  2418                           ;main.c: 180: }
  2419                           ;main.c: 185: MiApp_TransceiverPowerState(0x01);
  2420                           
  2421                           ; BSR set to: 1
  2422  013172  0E01               	movlw	1
  2423  013174  ECAB  F0B6         	call	_MiApp_TransceiverPowerState
  2424                           
  2425                           ;main.c: 189: }
  2426  013178  D7D6               	goto	l15175
  2427  01317A                     l15193:
  2428                           
  2429                           ;main.c: 190: else
  2430                           ;main.c: 191: {
  2431                           ;main.c: 193: m_update_frequency = 1;
  2432  01317A  0E01               	movlw	1
  2433  01317C  0101               	movlb	1	; () banked
  2434  01317E  6FFF               	movwf	_m_update_frequency& (0+255),b	;volatile
  2435                           
  2436                           ; BSR set to: 1
  2437                           ;main.c: 195: }
  2438                           ;main.c: 196: }
  2439                           ;main.c: 197: uint8_t best_RSSI = 0;
  2440                           
  2441                           ; BSR set to: 1
  2442                           
  2443                           ; BSR set to: 1
  2444                           
  2445                           ; BSR set to: 1
  2446                           
  2447                           ;main.c: 194: break;
  2448  013180  0E00               	movlw	0
  2449  013182  0104               	movlb	4	; () banked
  2450  013184  6F05               	movwf	main@best_RSSI& (0+255),b
  2451                           
  2452                           ;main.c: 198: uint8_t best_candidate;
  2453                           ;main.c: 199: for(uint8_t j = 0; j < scanresult; j++)
  2454  013186  0E00               	movlw	0
  2455  013188  0104               	movlb	4	; () banked
  2456  01318A  6F08               	movwf	main@j& (0+255),b
  2457  01318C  D03A               	goto	l15207
  2458  01318E                     l15197:
  2459                           
  2460                           ; BSR set to: 4
  2461                           ;main.c: 200: {
  2462                           ;main.c: 201: if (ActiveScanResults[j].RSSIValue >= best_RSSI && ActiveScanResults[j].PA
      +                          NID.Val == 0x1337)
  2463  01318E  0104               	movlb	4	; () banked
  2464  013190  5108               	movf	main@j& (0+255),w,b
  2465  013192  0D0A               	mullw	10
  2466  013194  0E07               	movlw	7
  2467  013196  26F3               	addwf	prodl,f,c
  2468  013198  0E00               	movlw	0
  2469  01319A  22F4               	addwfc	prodh,f,c
  2470  01319C  0E00               	movlw	low _ActiveScanResults
  2471  01319E  24F3               	addwf	prodl,w,c
  2472  0131A0  6ED9               	movwf	fsr2l,c
  2473  0131A2  0E03               	movlw	high _ActiveScanResults
  2474  0131A4  20F4               	addwfc	prodh,w,c
  2475  0131A6  6EDA               	movwf	fsr2h,c
  2476  0131A8  0104               	movlb	4	; () banked
  2477  0131AA  5105               	movf	main@best_RSSI& (0+255),w,b
  2478  0131AC  5CDE               	subwf	postinc2,w,c
  2479  0131AE  A0D8               	btfss	status,0,c
  2480  0131B0  D026               	goto	l15205
  2481                           
  2482                           ; BSR set to: 4
  2483  0131B2  0104               	movlb	4	; () banked
  2484  0131B4  5108               	movf	main@j& (0+255),w,b
  2485  0131B6  0D0A               	mullw	10
  2486  0131B8  0E05               	movlw	5
  2487  0131BA  26F3               	addwf	prodl,f,c
  2488  0131BC  0E00               	movlw	0
  2489  0131BE  22F4               	addwfc	prodh,f,c
  2490  0131C0  0E00               	movlw	low _ActiveScanResults
  2491  0131C2  24F3               	addwf	prodl,w,c
  2492  0131C4  6ED9               	movwf	fsr2l,c
  2493  0131C6  0E03               	movlw	high _ActiveScanResults
  2494  0131C8  20F4               	addwfc	prodh,w,c
  2495  0131CA  6EDA               	movwf	fsr2h,c
  2496  0131CC  0E37               	movlw	55
  2497  0131CE  18DE               	xorwf	postinc2,w,c
  2498  0131D0  E116               	bnz	l15205
  2499  0131D2  0E13               	movlw	19
  2500  0131D4  18DE               	xorwf	postinc2,w,c
  2501  0131D6  A4D8               	btfss	status,2,c
  2502  0131D8  D012               	goto	l15205
  2503                           
  2504                           ; BSR set to: 4
  2505                           ;main.c: 202: {
  2506                           ;main.c: 203: best_RSSI = ActiveScanResults[j].RSSIValue;
  2507  0131DA  0104               	movlb	4	; () banked
  2508  0131DC  5108               	movf	main@j& (0+255),w,b
  2509  0131DE  0D0A               	mullw	10
  2510  0131E0  0E07               	movlw	7
  2511  0131E2  26F3               	addwf	prodl,f,c
  2512  0131E4  0E00               	movlw	0
  2513  0131E6  22F4               	addwfc	prodh,f,c
  2514  0131E8  0E00               	movlw	low _ActiveScanResults
  2515  0131EA  24F3               	addwf	prodl,w,c
  2516  0131EC  6ED9               	movwf	fsr2l,c
  2517  0131EE  0E03               	movlw	high _ActiveScanResults
  2518  0131F0  20F4               	addwfc	prodh,w,c
  2519  0131F2  6EDA               	movwf	fsr2h,c
  2520  0131F4  50DF               	movf	indf2,w,c
  2521  0131F6  0104               	movlb	4	; () banked
  2522  0131F8  6F05               	movwf	main@best_RSSI& (0+255),b
  2523                           
  2524                           ; BSR set to: 4
  2525                           ;main.c: 204: best_candidate = j;
  2526  0131FA  C408  F403         	movff	main@j,main@best_candidate
  2527  0131FE                     l15205:
  2528                           
  2529                           ; BSR set to: 4
  2530  0131FE  0104               	movlb	4	; () banked
  2531  013200  2B08               	incf	main@j& (0+255),f,b
  2532  013202                     l15207:
  2533                           
  2534                           ; BSR set to: 4
  2535  013202  0104               	movlb	4	; () banked
  2536  013204  5109               	movf	main@scanresult& (0+255),w,b	;volatile
  2537  013206  0104               	movlb	4	; () banked
  2538  013208  5D08               	subwf	main@j& (0+255),w,b
  2539  01320A  A0D8               	btfss	status,0,c
  2540  01320C  D7C0               	goto	l15197
  2541                           
  2542                           ; BSR set to: 4
  2543                           ;main.c: 205: }
  2544                           ;main.c: 206: }
  2545                           ;main.c: 210: uint8_t Status = MiApp_EstablishConnection(best_candidate, 0x00);
  2546                           
  2547                           ; BSR set to: 4
  2548  01320E  0E00               	movlw	0
  2549  013210  0101               	movlb	1	; () banked
  2550  013212  6FFB               	movwf	MiApp_EstablishConnection@Mode& (0+255),b
  2551  013214  0104               	movlb	4	; () banked
  2552  013216  5103               	movf	main@best_candidate& (0+255),w,b
  2553  013218  EC99  F094         	call	_MiApp_EstablishConnection
  2554  01321C  0104               	movlb	4	; () banked
  2555  01321E  6F04               	movwf	main@Status& (0+255),b
  2556                           
  2557                           ; BSR set to: 4
  2558                           ;main.c: 211: if(Status == 0xFF)
  2559  013220  0104               	movlb	4	; () banked
  2560  013222  2904               	incf	main@Status& (0+255),w,b
  2561  013224  A4D8               	btfss	status,2,c
  2562  013226  D005               	goto	l15217
  2563                           
  2564                           ; BSR set to: 4
  2565                           ;main.c: 212: {
  2566                           ;main.c: 215: myAppState = STATE_PROBLEM;
  2567  013228  0E02               	movlw	2
  2568  01322A  0101               	movlb	1	; () banked
  2569  01322C  6F4B               	movwf	_myAppState& (0+255),b
  2570                           
  2571                           ; BSR set to: 1
  2572                           ;main.c: 216: sleep_and_reset();
  2573  01322E  EC44  F0B7         	call	_sleep_and_reset	;wreg free
  2574  013232                     l15217:
  2575                           
  2576                           ;main.c: 217: }
  2577                           ;main.c: 218: MiApp_ConnectionMode(0x03);
  2578  013232  0E03               	movlw	3
  2579  013234  EC19  F0B7         	call	_MiApp_ConnectionMode
  2580                           
  2581                           ;main.c: 225: result = do_NETWORK_REGISTER(&myLongAddress[0],0xff);
  2582  013238  0EC8               	movlw	low _myLongAddress
  2583  01323A  0101               	movlb	1	; () banked
  2584  01323C  6FFA               	movwf	do_NETWORK_REGISTER@p_uid& (0+255),b
  2585  01323E  0E00               	movlw	high _myLongAddress
  2586  013240  0101               	movlb	1	; () banked
  2587  013242  6FFB               	movwf	(do_NETWORK_REGISTER@p_uid+1)& (0+255),b
  2588  013244  0EFF               	movlw	255
  2589  013246  0101               	movlb	1	; () banked
  2590  013248  6FFC               	movwf	do_NETWORK_REGISTER@sleeping_device& (0+255),b
  2591  01324A  EC69  F0A1         	call	_do_NETWORK_REGISTER	;wreg free
  2592  01324E  0104               	movlb	4	; () banked
  2593  013250  6F02               	movwf	main@result& (0+255),b
  2594                           
  2595                           ; BSR set to: 4
  2596                           ;main.c: 229: if (!result)
  2597  013252  0104               	movlb	4	; () banked
  2598  013254  5102               	movf	main@result& (0+255),w,b
  2599  013256  0104               	movlb	4	; () banked
  2600  013258  A4D8               	btfss	status,2,c
  2601  01325A  D005               	goto	l15227
  2602                           
  2603                           ; BSR set to: 4
  2604                           ;main.c: 230: {
  2605                           ;main.c: 233: myAppState = STATE_PROBLEM;
  2606  01325C  0E02               	movlw	2
  2607  01325E  0101               	movlb	1	; () banked
  2608  013260  6F4B               	movwf	_myAppState& (0+255),b
  2609                           
  2610                           ; BSR set to: 1
  2611                           ;main.c: 234: sleep_and_reset();
  2612  013262  EC44  F0B7         	call	_sleep_and_reset	;wreg free
  2613  013266                     l15227:
  2614                           
  2615                           ;main.c: 235: }
  2616                           ;main.c: 238: security_force_key_update();
  2617  013266  ECDC  F0B5         	call	_security_force_key_update	;wreg free
  2618                           
  2619                           ;main.c: 240: myAppState = STATE_READY;
  2620  01326A  0E01               	movlw	1
  2621  01326C  0101               	movlb	1	; () banked
  2622  01326E  6F4B               	movwf	_myAppState& (0+255),b
  2623                           
  2624                           ; BSR set to: 1
  2625                           ;main.c: 244: m_power = adapt_power_level(0x00, 35);
  2626  013270  0E23               	movlw	35
  2627  013272  0101               	movlb	1	; () banked
  2628  013274  6FFB               	movwf	adapt_power_level@minimal_rssi& (0+255),b
  2629  013276  0E00               	movlw	0
  2630  013278  ECF8  F0B4         	call	_adapt_power_level
  2631  01327C  0101               	movlb	1	; () banked
  2632  01327E  6F4A               	movwf	_m_power& (0+255),b
  2633                           
  2634                           ; BSR set to: 1
  2635                           ;main.c: 248: m_uptime_days = 0;
  2636  013280  0E00               	movlw	0
  2637  013282  0101               	movlb	1	; () banked
  2638  013284  6F33               	movwf	_m_uptime_days& (0+255),b	;volatile
  2639  013286  0E00               	movlw	0
  2640  013288  0101               	movlb	1	; () banked
  2641  01328A  6F34               	movwf	(_m_uptime_days+1)& (0+255),b	;volatile
  2642  01328C  0E00               	movlw	0
  2643  01328E  0101               	movlb	1	; () banked
  2644  013290  6F35               	movwf	(_m_uptime_days+2)& (0+255),b	;volatile
  2645                           
  2646                           ; BSR set to: 1
  2647                           ;main.c: 250: RTCC_reset();
  2648  013292  EC78  F0B7         	call	_RTCC_reset	;wreg free
  2649                           
  2650                           ;main.c: 252: read_sensors();
  2651  013296  ECB4  F096         	call	_read_sensors	;wreg free
  2652                           
  2653                           ;main.c: 253: while (!send_initial_update())
  2654  01329A  D00D               	goto	l15249
  2655  01329C                     l15239:
  2656                           
  2657                           ;main.c: 254: {
  2658                           ;main.c: 256: consecutive_fails++;
  2659  01329C  0101               	movlb	1	; () banked
  2660  01329E  2B47               	incf	_consecutive_fails& (0+255),f,b
  2661                           
  2662                           ; BSR set to: 1
  2663                           ;main.c: 257: if (consecutive_fails >= 3)
  2664  0132A0  0E02               	movlw	2
  2665  0132A2  0101               	movlb	1	; () banked
  2666  0132A4  6547               	cpfsgt	_consecutive_fails& (0+255),b
  2667  0132A6  D005               	goto	l15247
  2668                           
  2669                           ; BSR set to: 1
  2670                           ;main.c: 258: {
  2671                           ;main.c: 260: myAppState = STATE_PROBLEM;
  2672  0132A8  0E02               	movlw	2
  2673  0132AA  0101               	movlb	1	; () banked
  2674  0132AC  6F4B               	movwf	_myAppState& (0+255),b
  2675                           
  2676                           ; BSR set to: 1
  2677                           ;main.c: 261: sleep_and_reset();
  2678  0132AE  EC44  F0B7         	call	_sleep_and_reset	;wreg free
  2679  0132B2                     l15247:
  2680                           
  2681                           ;main.c: 262: }
  2682                           ;main.c: 263: wait_for_1_sec();
  2683  0132B2  ECE6  F0B6         	call	_wait_for_1_sec	;wreg free
  2684  0132B6                     l15249:
  2685  0132B6  EC3D  F086         	call	_send_initial_update	;wreg free
  2686  0132BA  0900               	iorlw	0
  2687  0132BC  A4D8               	btfss	status,2,c
  2688  0132BE  D031               	goto	l15285
  2689  0132C0  D7ED               	goto	l15239
  2690  0132C2                     l15253:
  2691                           
  2692                           ; BSR set to: 1
  2693                           ;main.c: 270: {
  2694                           ;main.c: 273: process_update_answer();
  2695  0132C2  EC01  F09E         	call	_process_update_answer	;wreg free
  2696                           
  2697                           ;main.c: 277: LATCbits.LATC0 = 0;
  2698  0132C6  908B               	bcf	3979,0,c	;volatile
  2699                           
  2700                           ;main.c: 278: MiApp_TransceiverPowerState(0x00);
  2701  0132C8  0E00               	movlw	0
  2702  0132CA  ECAB  F0B6         	call	_MiApp_TransceiverPowerState
  2703                           
  2704                           ;main.c: 279: timer_reset();
  2705  0132CE  ECC0  F0B7         	call	_timer_reset	;wreg free
  2706                           
  2707                           ;main.c: 281: while (!timer_flag)
  2708  0132D2  D002               	goto	l15261
  2709  0132D4                     l1097:
  2710                           
  2711                           ; BSR set to: 1
  2712                           ;main.c: 282: {
  2713                           ;main.c: 283: OSCCONbits.IDLEN = 0;
  2714  0132D4  9ED3               	bcf	4051,7,c	;volatile
  2715  0132D6  0003               	sleep		;# 
  2716  0132D8                     l15261:
  2717  0132D8  0101               	movlb	1	; () banked
  2718  0132DA  514D               	movf	_timer_flag& (0+255),w,b	;volatile
  2719  0132DC  B4D8               	btfsc	status,2,c
  2720  0132DE  D7FA               	goto	l1097
  2721                           
  2722                           ; BSR set to: 1
  2723                           ;main.c: 285: }
  2724                           ;main.c: 290: LATCbits.LATC0 = 1;
  2725  0132E0  808B               	bsf	3979,0,c	;volatile
  2726                           
  2727                           ; BSR set to: 1
  2728                           ;main.c: 291: read_sensors();
  2729  0132E2  ECB4  F096         	call	_read_sensors	;wreg free
  2730                           
  2731                           ;main.c: 292: MiApp_TransceiverPowerState(0x01);
  2732  0132E6  0E01               	movlw	1
  2733  0132E8  ECAB  F0B6         	call	_MiApp_TransceiverPowerState
  2734                           
  2735                           ;main.c: 293: if(MiApp_MessageAvailable())
  2736  0132EC  ECE2  F0B7         	call	_MiApp_MessageAvailable	;wreg free
  2737  0132F0  0900               	iorlw	0
  2738  0132F2  A4D8               	btfss	status,2,c
  2739                           
  2740                           ;main.c: 294: MiApp_DiscardMessage();
  2741  0132F4  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
  2742                           
  2743                           ;main.c: 295: MiWiTasks();
  2744  0132F8  EC00  F080         	call	_MiWiTasks	;wreg free
  2745                           
  2746                           ;main.c: 296: while (!send_periodical_update())
  2747  0132FC  D00D               	goto	l15283
  2748  0132FE                     l15273:
  2749                           
  2750                           ;main.c: 297: {
  2751                           ;main.c: 299: consecutive_fails++;
  2752  0132FE  0101               	movlb	1	; () banked
  2753  013300  2B47               	incf	_consecutive_fails& (0+255),f,b
  2754                           
  2755                           ; BSR set to: 1
  2756                           ;main.c: 300: if (consecutive_fails >= 3)
  2757  013302  0E02               	movlw	2
  2758  013304  0101               	movlb	1	; () banked
  2759  013306  6547               	cpfsgt	_consecutive_fails& (0+255),b
  2760  013308  D005               	goto	l15281
  2761                           
  2762                           ; BSR set to: 1
  2763                           ;main.c: 301: {
  2764                           ;main.c: 303: myAppState = STATE_PROBLEM;
  2765  01330A  0E02               	movlw	2
  2766  01330C  0101               	movlb	1	; () banked
  2767  01330E  6F4B               	movwf	_myAppState& (0+255),b
  2768                           
  2769                           ; BSR set to: 1
  2770                           ;main.c: 304: sleep_and_reset();
  2771  013310  EC44  F0B7         	call	_sleep_and_reset	;wreg free
  2772  013314                     l15281:
  2773                           
  2774                           ;main.c: 305: }
  2775                           ;main.c: 306: wait_for_1_sec();
  2776  013314  ECE6  F0B6         	call	_wait_for_1_sec	;wreg free
  2777  013318                     l15283:
  2778  013318  EC0D  F08A         	call	_send_periodical_update	;wreg free
  2779  01331C  0900               	iorlw	0
  2780  01331E  B4D8               	btfsc	status,2,c
  2781  013320  D7EE               	goto	l15273
  2782  013322                     l15285:
  2783                           
  2784                           ;main.c: 307: }
  2785                           ;main.c: 308: consecutive_fails = 0;
  2786  013322  0E00               	movlw	0
  2787  013324  0101               	movlb	1	; () banked
  2788  013326  6F47               	movwf	_consecutive_fails& (0+255),b
  2789                           
  2790                           ; BSR set to: 1
  2791  013328  D7CC               	goto	l15253
  2792  01332A                     __end_of_main:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           tblptrh	equ	0xFF7
  2796                           tblptrl	equ	0xFF6
  2797                           tablat	equ	0xFF5
  2798                           prodh	equ	0xFF4
  2799                           prodl	equ	0xFF3
  2800                           postinc0	equ	0xFEE
  2801                           wreg	equ	0xFE8
  2802                           postdec1	equ	0xFE5
  2803                           fsr1h	equ	0xFE2
  2804                           fsr1l	equ	0xFE1
  2805                           indf2	equ	0xFDF
  2806                           postinc2	equ	0xFDE
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function _sleep_and_reset *****************
  2812 ;; Defined at:
  2813 ;;		line 398 in file "src/main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;		None               void
  2820 ;; Registers used:
  2821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:   14
  2834 ;; This function calls:
  2835 ;;		_MiApp_TransceiverPowerState
  2836 ;;		_timer_reset
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text1
  2843  016E88                     __ptext1:
  2844                           	opt stack 0
  2845  016E88                     _sleep_and_reset:
  2846                           	opt stack 16
  2847                           
  2848                           ;main.c: 400: LATCbits.LATC0 = 0;
  2849                           
  2850                           ; BSR set to: 1
  2851                           ;incstack = 0
  2852  016E88  908B               	bcf	3979,0,c	;volatile
  2853                           
  2854                           ;main.c: 401: timer_reset();
  2855  016E8A  ECC0  F0B7         	call	_timer_reset	;wreg free
  2856                           
  2857                           ;main.c: 402: MiApp_TransceiverPowerState(0x00);
  2858  016E8E  0E00               	movlw	0
  2859  016E90  ECAB  F0B6         	call	_MiApp_TransceiverPowerState
  2860                           
  2861                           ;main.c: 404: while (!timer_flag)
  2862  016E94  D002               	goto	l14389
  2863  016E96                     l1135:
  2864                           
  2865                           ; BSR set to: 1
  2866                           ;main.c: 405: {
  2867                           ;main.c: 406: OSCCONbits.IDLEN = 0;
  2868  016E96  9ED3               	bcf	4051,7,c	;volatile
  2869  016E98  0003               	sleep		;# 
  2870  016E9A                     l14389:
  2871  016E9A  0101               	movlb	1	; () banked
  2872  016E9C  514D               	movf	_timer_flag& (0+255),w,b	;volatile
  2873  016E9E  B4D8               	btfsc	status,2,c
  2874  016EA0  D7FA               	goto	l1135
  2875                           
  2876                           ; BSR set to: 1
  2877                           ;main.c: 408: }
  2878                           ;main.c: 413: MiApp_TransceiverPowerState(0x01);
  2879                           
  2880                           ; BSR set to: 1
  2881  016EA2  0E01               	movlw	1
  2882  016EA4  ECAB  F0B6         	call	_MiApp_TransceiverPowerState
  2883  016EA8  00FF               	reset		;# 
  2884  016EAA  0012               	return		;funcret
  2885  016EAC                     __end_of_sleep_and_reset:
  2886                           	opt stack 0
  2887                           tblptru	equ	0xFF8
  2888                           tblptrh	equ	0xFF7
  2889                           tblptrl	equ	0xFF6
  2890                           tablat	equ	0xFF5
  2891                           prodh	equ	0xFF4
  2892                           prodl	equ	0xFF3
  2893                           postinc0	equ	0xFEE
  2894                           wreg	equ	0xFE8
  2895                           postdec1	equ	0xFE5
  2896                           fsr1h	equ	0xFE2
  2897                           fsr1l	equ	0xFE1
  2898                           indf2	equ	0xFDF
  2899                           postinc2	equ	0xFDE
  2900                           fsr2h	equ	0xFDA
  2901                           fsr2l	equ	0xFD9
  2902                           status	equ	0xFD8
  2903                           
  2904 ;; *************** function _send_periodical_update *****************
  2905 ;; Defined at:
  2906 ;;		line 597 in file "src/main.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  tmp2            3   28[BANK3 ] float 
  2911 ;;  tmp             2    0        unsigned int 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      unsigned char 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2922 ;;      Locals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  2923 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Totals:         0       0       1       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;Total ram usage:       16 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:   18
  2928 ;; This function calls:
  2929 ;;		___ftadd
  2930 ;;		___ftdiv
  2931 ;;		___ftmul
  2932 ;;		___ftneg
  2933 ;;		___fttol
  2934 ;;		___lltoft
  2935 ;;		___lmul
  2936 ;;		_do_UPDATE
  2937 ;;		_encode_ufixed16_variable
  2938 ;;		_encode_uint8_variable
  2939 ;;		_floor
  2940 ;;		_memcpy
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text2
  2947  01141A                     __ptext2:
  2948                           	opt stack 0
  2949  01141A                     _send_periodical_update:
  2950                           	opt stack 12
  2951                           
  2952                           ;main.c: 599: uint16_t tmp;
  2953                           ;main.c: 601: p_buffer = m_buffer;
  2954                           
  2955                           ;incstack = 0
  2956  01141A  0EE0               	movlw	low _m_buffer
  2957  01141C  0101               	movlb	1	; () banked
  2958  01141E  6F3A               	movwf	_p_buffer& (0+255),b
  2959  011420  0E02               	movlw	high _m_buffer
  2960  011422  0101               	movlb	1	; () banked
  2961  011424  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  2962                           
  2963                           ; BSR set to: 1
  2964                           ;main.c: 604: memcpy(m_var.label, BATTERY_VOLTAGE_LABEL, 3);
  2965  011426  0E79               	movlw	low _m_var
  2966  011428  0101               	movlb	1	; () banked
  2967  01142A  6F8A               	movwf	memcpy@d1& (0+255),b
  2968  01142C  0E01               	movlw	high _m_var
  2969  01142E  0101               	movlb	1	; () banked
  2970  011430  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  2971  011432  0EDF               	movlw	low _BATTERY_VOLTAGE_LABEL
  2972  011434  0101               	movlb	1	; () banked
  2973  011436  6F8C               	movwf	memcpy@s1& (0+255),b
  2974  011438  0EFF               	movlw	high _BATTERY_VOLTAGE_LABEL
  2975  01143A  0101               	movlb	1	; () banked
  2976  01143C  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  2977  01143E  0E00               	movlw	0
  2978  011440  0101               	movlb	1	; () banked
  2979  011442  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  2980  011444  0E03               	movlw	3
  2981  011446  6F8E               	movwf	memcpy@n& (0+255),b
  2982  011448  EC2A  F0B5         	call	_memcpy	;wreg free
  2983                           
  2984                           ;main.c: 605: m_var.unit = 2;
  2985  01144C  0E02               	movlw	2
  2986  01144E  0101               	movlb	1	; () banked
  2987  011450  6F7F               	movwf	(_m_var+6)& (0+255),b
  2988                           
  2989                           ; BSR set to: 1
  2990                           ;main.c: 606: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  2991  011452  C12D  F1C7         	movff	_m_battery_voltage,floor@x
  2992  011456  C12E  F1C8         	movff	_m_battery_voltage+1,floor@x+1
  2993  01145A  C12F  F1C9         	movff	_m_battery_voltage+2,floor@x+2
  2994  01145E  EC02  F0AC         	call	_floor	;wreg free
  2995  011462  C1C7  F3F3         	movff	?_floor,_send_periodical_update$5145
  2996  011466  C1C8  F3F4         	movff	?_floor+1,_send_periodical_update$5145+1
  2997  01146A  C1C9  F3F5         	movff	?_floor+2,_send_periodical_update$5145+2
  2998                           
  2999                           ;main.c: 606: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  3000  01146E  C3F3  F1AE         	movff	_send_periodical_update$5145,___fttol@f1
  3001  011472  C3F4  F1AF         	movff	_send_periodical_update$5145+1,___fttol@f1+1
  3002  011476  C3F5  F1B0         	movff	_send_periodical_update$5145+2,___fttol@f1+2
  3003  01147A  ECA4  F0A5         	call	___fttol	;wreg free
  3004  01147E  0101               	movlb	1	; () banked
  3005  011480  51AE               	movf	?___fttol& (0+255),w,b
  3006  011482  0101               	movlb	1	; () banked
  3007  011484  6F7D               	movwf	(_m_var+4)& (0+255),b
  3008                           
  3009                           ; BSR set to: 1
  3010                           ;main.c: 607: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3011  011486  C12D  F1C7         	movff	_m_battery_voltage,floor@x
  3012  01148A  C12E  F1C8         	movff	_m_battery_voltage+1,floor@x+1
  3013  01148E  C12F  F1C9         	movff	_m_battery_voltage+2,floor@x+2
  3014  011492  EC02  F0AC         	call	_floor	;wreg free
  3015  011496  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  3016  01149A  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  3017  01149E  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  3018  0114A2  EC01  F0B7         	call	___ftneg	;wreg free
  3019  0114A6  C1CF  F3F6         	movff	?___ftneg,_send_periodical_update$5146
  3020  0114AA  C1D0  F3F7         	movff	?___ftneg+1,_send_periodical_update$5146+1
  3021  0114AE  C1D1  F3F8         	movff	?___ftneg+2,_send_periodical_update$5146+2
  3022                           
  3023                           ;main.c: 607: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3024  0114B2  0E00               	movlw	0
  3025  0114B4  0101               	movlb	1	; () banked
  3026  0114B6  6FD5               	movwf	___ftmul@f2& (0+255),b
  3027  0114B8  0EC8               	movlw	200
  3028  0114BA  0101               	movlb	1	; () banked
  3029  0114BC  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  3030  0114BE  0E42               	movlw	66
  3031  0114C0  0101               	movlb	1	; () banked
  3032  0114C2  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  3033  0114C4  C12D  F195         	movff	_m_battery_voltage,___ftadd@f2
  3034  0114C8  C12E  F196         	movff	_m_battery_voltage+1,___ftadd@f2+1
  3035  0114CC  C12F  F197         	movff	_m_battery_voltage+2,___ftadd@f2+2
  3036  0114D0  C3F6  F192         	movff	_send_periodical_update$5146,___ftadd@f1
  3037  0114D4  C3F7  F193         	movff	_send_periodical_update$5146+1,___ftadd@f1+1
  3038  0114D8  C3F8  F194         	movff	_send_periodical_update$5146+2,___ftadd@f1+2
  3039  0114DC  EC95  F099         	call	___ftadd	;wreg free
  3040  0114E0  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  3041  0114E4  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  3042  0114E8  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  3043  0114EC  ECA4  F0A3         	call	___ftmul	;wreg free
  3044  0114F0  C1D2  F3F9         	movff	?___ftmul,_send_periodical_update$5147
  3045  0114F4  C1D3  F3FA         	movff	?___ftmul+1,_send_periodical_update$5147+1
  3046  0114F8  C1D4  F3FB         	movff	?___ftmul+2,_send_periodical_update$5147+2
  3047                           
  3048                           ;main.c: 607: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3049  0114FC  C3F9  F1C7         	movff	_send_periodical_update$5147,floor@x
  3050  011500  C3FA  F1C8         	movff	_send_periodical_update$5147+1,floor@x+1
  3051  011504  C3FB  F1C9         	movff	_send_periodical_update$5147+2,floor@x+2
  3052  011508  EC02  F0AC         	call	_floor	;wreg free
  3053  01150C  C1C7  F3FC         	movff	?_floor,_send_periodical_update$5148
  3054  011510  C1C8  F3FD         	movff	?_floor+1,_send_periodical_update$5148+1
  3055  011514  C1C9  F3FE         	movff	?_floor+2,_send_periodical_update$5148+2
  3056                           
  3057                           ;main.c: 607: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3058  011518  C3FC  F1AE         	movff	_send_periodical_update$5148,___fttol@f1
  3059  01151C  C3FD  F1AF         	movff	_send_periodical_update$5148+1,___fttol@f1+1
  3060  011520  C3FE  F1B0         	movff	_send_periodical_update$5148+2,___fttol@f1+2
  3061  011524  ECA4  F0A5         	call	___fttol	;wreg free
  3062  011528  0101               	movlb	1	; () banked
  3063  01152A  51AE               	movf	?___fttol& (0+255),w,b
  3064  01152C  0101               	movlb	1	; () banked
  3065  01152E  6F7E               	movwf	(_m_var+5)& (0+255),b
  3066                           
  3067                           ; BSR set to: 1
  3068                           ;main.c: 608: m_var.writable = 0;
  3069  011530  0E00               	movlw	0
  3070  011532  0101               	movlb	1	; () banked
  3071  011534  6F80               	movwf	(_m_var+7)& (0+255),b
  3072                           
  3073                           ; BSR set to: 1
  3074                           ;main.c: 609: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3075  011536  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3076  01153A  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3077  01153E  EE21  F079         	lfsr	2,_m_var
  3078  011542  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  3079  011546  0E09               	movlw	9
  3080  011548                     u17701:
  3081  011548  CFDB FFEB          	movff	plusw2,plusw0
  3082  01154C  06E8               	decf	wreg,f,c
  3083  01154E  E2FC               	bc	u17701
  3084  011550  EC5D  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3085  011554  0101               	movlb	1	; () banked
  3086  011556  6FFB               	movwf	??_send_periodical_update& (0+255),b
  3087  011558  0101               	movlb	1	; () banked
  3088  01155A  51FB               	movf	??_send_periodical_update& (0+255),w,b
  3089  01155C  0D01               	mullw	1
  3090  01155E  50F3               	movf	prodl,w,c
  3091  011560  0101               	movlb	1	; () banked
  3092  011562  273A               	addwf	_p_buffer& (0+255),f,b
  3093  011564  50F4               	movf	prodh,w,c
  3094  011566  0101               	movlb	1	; () banked
  3095  011568  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3096                           
  3097                           ; BSR set to: 1
  3098                           ;main.c: 611: memcpy(m_var.label, LIGHT_LEVEL_LABEL, 3);
  3099  01156A  0E79               	movlw	low _m_var
  3100  01156C  0101               	movlb	1	; () banked
  3101  01156E  6F8A               	movwf	memcpy@d1& (0+255),b
  3102  011570  0E01               	movlw	high _m_var
  3103  011572  0101               	movlb	1	; () banked
  3104  011574  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3105  011576  0EE7               	movlw	low _LIGHT_LEVEL_LABEL
  3106  011578  0101               	movlb	1	; () banked
  3107  01157A  6F8C               	movwf	memcpy@s1& (0+255),b
  3108  01157C  0EFF               	movlw	high _LIGHT_LEVEL_LABEL
  3109  01157E  0101               	movlb	1	; () banked
  3110  011580  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3111  011582  0E00               	movlw	0
  3112  011584  0101               	movlb	1	; () banked
  3113  011586  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3114  011588  0E03               	movlw	3
  3115  01158A  6F8E               	movwf	memcpy@n& (0+255),b
  3116  01158C  EC2A  F0B5         	call	_memcpy	;wreg free
  3117                           
  3118                           ;main.c: 612: m_var.unit = 3;
  3119  011590  0E03               	movlw	3
  3120  011592  0101               	movlb	1	; () banked
  3121  011594  6F7F               	movwf	(_m_var+6)& (0+255),b
  3122                           
  3123                           ; BSR set to: 1
  3124                           ;main.c: 613: m_var.value_byte1 = m_light_level;
  3125  011596  C149  F17D         	movff	_m_light_level,_m_var+4
  3126                           
  3127                           ; BSR set to: 1
  3128                           ;main.c: 614: m_var.writable = 0;
  3129  01159A  0E00               	movlw	0
  3130  01159C  0101               	movlb	1	; () banked
  3131  01159E  6F80               	movwf	(_m_var+7)& (0+255),b
  3132                           
  3133                           ; BSR set to: 1
  3134                           ;main.c: 615: p_buffer += encode_uint8_variable(p_buffer, m_var);
  3135  0115A0  C13A  F18A         	movff	_p_buffer,encode_uint8_variable@buffer
  3136  0115A4  C13B  F18B         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  3137  0115A8  EE21  F079         	lfsr	2,_m_var
  3138  0115AC  EE01  F08C         	lfsr	0,encode_uint8_variable@var
  3139  0115B0  0E09               	movlw	9
  3140  0115B2                     u17711:
  3141  0115B2  CFDB FFEB          	movff	plusw2,plusw0
  3142  0115B6  06E8               	decf	wreg,f,c
  3143  0115B8  E2FC               	bc	u17711
  3144  0115BA  EC1F  F0B1         	call	_encode_uint8_variable	;wreg free
  3145  0115BE  0101               	movlb	1	; () banked
  3146  0115C0  6FFB               	movwf	??_send_periodical_update& (0+255),b
  3147  0115C2  0101               	movlb	1	; () banked
  3148  0115C4  51FB               	movf	??_send_periodical_update& (0+255),w,b
  3149  0115C6  0D01               	mullw	1
  3150  0115C8  50F3               	movf	prodl,w,c
  3151  0115CA  0101               	movlb	1	; () banked
  3152  0115CC  273A               	addwf	_p_buffer& (0+255),f,b
  3153  0115CE  50F4               	movf	prodh,w,c
  3154  0115D0  0101               	movlb	1	; () banked
  3155  0115D2  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3156                           
  3157                           ; BSR set to: 1
  3158                           ;main.c: 617: memcpy(m_var.label, TEMPERATURE_LABEL, 3);
  3159  0115D4  0E79               	movlw	low _m_var
  3160  0115D6  0101               	movlb	1	; () banked
  3161  0115D8  6F8A               	movwf	memcpy@d1& (0+255),b
  3162  0115DA  0E01               	movlw	high _m_var
  3163  0115DC  0101               	movlb	1	; () banked
  3164  0115DE  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3165  0115E0  0EEF               	movlw	low _TEMPERATURE_LABEL
  3166  0115E2  0101               	movlb	1	; () banked
  3167  0115E4  6F8C               	movwf	memcpy@s1& (0+255),b
  3168  0115E6  0EFF               	movlw	high _TEMPERATURE_LABEL
  3169  0115E8  0101               	movlb	1	; () banked
  3170  0115EA  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3171  0115EC  0E00               	movlw	0
  3172  0115EE  0101               	movlb	1	; () banked
  3173  0115F0  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3174  0115F2  0E03               	movlw	3
  3175  0115F4  6F8E               	movwf	memcpy@n& (0+255),b
  3176  0115F6  EC2A  F0B5         	call	_memcpy	;wreg free
  3177                           
  3178                           ;main.c: 618: m_var.unit = 1;
  3179  0115FA  0E01               	movlw	1
  3180  0115FC  0101               	movlb	1	; () banked
  3181  0115FE  6F7F               	movwf	(_m_var+6)& (0+255),b
  3182                           
  3183                           ; BSR set to: 1
  3184                           ;main.c: 619: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3185  011600  C130  F1C7         	movff	_m_temperature,floor@x
  3186  011604  C131  F1C8         	movff	_m_temperature+1,floor@x+1
  3187  011608  C132  F1C9         	movff	_m_temperature+2,floor@x+2
  3188  01160C  EC02  F0AC         	call	_floor	;wreg free
  3189  011610  C1C7  F3F3         	movff	?_floor,_send_periodical_update$5145
  3190  011614  C1C8  F3F4         	movff	?_floor+1,_send_periodical_update$5145+1
  3191  011618  C1C9  F3F5         	movff	?_floor+2,_send_periodical_update$5145+2
  3192                           
  3193                           ;main.c: 619: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3194  01161C  C3F3  F1AE         	movff	_send_periodical_update$5145,___fttol@f1
  3195  011620  C3F4  F1AF         	movff	_send_periodical_update$5145+1,___fttol@f1+1
  3196  011624  C3F5  F1B0         	movff	_send_periodical_update$5145+2,___fttol@f1+2
  3197  011628  ECA4  F0A5         	call	___fttol	;wreg free
  3198  01162C  0101               	movlb	1	; () banked
  3199  01162E  51AE               	movf	?___fttol& (0+255),w,b
  3200  011630  0101               	movlb	1	; () banked
  3201  011632  6F7D               	movwf	(_m_var+4)& (0+255),b
  3202                           
  3203                           ; BSR set to: 1
  3204                           ;main.c: 620: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3205  011634  C130  F1C7         	movff	_m_temperature,floor@x
  3206  011638  C131  F1C8         	movff	_m_temperature+1,floor@x+1
  3207  01163C  C132  F1C9         	movff	_m_temperature+2,floor@x+2
  3208  011640  EC02  F0AC         	call	_floor	;wreg free
  3209  011644  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  3210  011648  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  3211  01164C  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  3212  011650  EC01  F0B7         	call	___ftneg	;wreg free
  3213  011654  C1CF  F3F6         	movff	?___ftneg,_send_periodical_update$5146
  3214  011658  C1D0  F3F7         	movff	?___ftneg+1,_send_periodical_update$5146+1
  3215  01165C  C1D1  F3F8         	movff	?___ftneg+2,_send_periodical_update$5146+2
  3216                           
  3217                           ;main.c: 620: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3218  011660  0E00               	movlw	0
  3219  011662  0101               	movlb	1	; () banked
  3220  011664  6FD5               	movwf	___ftmul@f2& (0+255),b
  3221  011666  0EC8               	movlw	200
  3222  011668  0101               	movlb	1	; () banked
  3223  01166A  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  3224  01166C  0E42               	movlw	66
  3225  01166E  0101               	movlb	1	; () banked
  3226  011670  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  3227  011672  C130  F195         	movff	_m_temperature,___ftadd@f2
  3228  011676  C131  F196         	movff	_m_temperature+1,___ftadd@f2+1
  3229  01167A  C132  F197         	movff	_m_temperature+2,___ftadd@f2+2
  3230  01167E  C3F6  F192         	movff	_send_periodical_update$5146,___ftadd@f1
  3231  011682  C3F7  F193         	movff	_send_periodical_update$5146+1,___ftadd@f1+1
  3232  011686  C3F8  F194         	movff	_send_periodical_update$5146+2,___ftadd@f1+2
  3233  01168A  EC95  F099         	call	___ftadd	;wreg free
  3234  01168E  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  3235  011692  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  3236  011696  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  3237  01169A  ECA4  F0A3         	call	___ftmul	;wreg free
  3238  01169E  C1D2  F3F9         	movff	?___ftmul,_send_periodical_update$5147
  3239  0116A2  C1D3  F3FA         	movff	?___ftmul+1,_send_periodical_update$5147+1
  3240  0116A6  C1D4  F3FB         	movff	?___ftmul+2,_send_periodical_update$5147+2
  3241                           
  3242                           ;main.c: 620: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3243  0116AA  C3F9  F1C7         	movff	_send_periodical_update$5147,floor@x
  3244  0116AE  C3FA  F1C8         	movff	_send_periodical_update$5147+1,floor@x+1
  3245  0116B2  C3FB  F1C9         	movff	_send_periodical_update$5147+2,floor@x+2
  3246  0116B6  EC02  F0AC         	call	_floor	;wreg free
  3247  0116BA  C1C7  F3FC         	movff	?_floor,_send_periodical_update$5148
  3248  0116BE  C1C8  F3FD         	movff	?_floor+1,_send_periodical_update$5148+1
  3249  0116C2  C1C9  F3FE         	movff	?_floor+2,_send_periodical_update$5148+2
  3250                           
  3251                           ;main.c: 620: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3252  0116C6  C3FC  F1AE         	movff	_send_periodical_update$5148,___fttol@f1
  3253  0116CA  C3FD  F1AF         	movff	_send_periodical_update$5148+1,___fttol@f1+1
  3254  0116CE  C3FE  F1B0         	movff	_send_periodical_update$5148+2,___fttol@f1+2
  3255  0116D2  ECA4  F0A5         	call	___fttol	;wreg free
  3256  0116D6  0101               	movlb	1	; () banked
  3257  0116D8  51AE               	movf	?___fttol& (0+255),w,b
  3258  0116DA  0101               	movlb	1	; () banked
  3259  0116DC  6F7E               	movwf	(_m_var+5)& (0+255),b
  3260                           
  3261                           ; BSR set to: 1
  3262                           ;main.c: 621: m_var.writable = 0;
  3263  0116DE  0E00               	movlw	0
  3264  0116E0  0101               	movlb	1	; () banked
  3265  0116E2  6F80               	movwf	(_m_var+7)& (0+255),b
  3266                           
  3267                           ; BSR set to: 1
  3268                           ;main.c: 622: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3269  0116E4  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3270  0116E8  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3271  0116EC  EE21  F079         	lfsr	2,_m_var
  3272  0116F0  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  3273  0116F4  0E09               	movlw	9
  3274  0116F6                     u17721:
  3275  0116F6  CFDB FFEB          	movff	plusw2,plusw0
  3276  0116FA  06E8               	decf	wreg,f,c
  3277  0116FC  E2FC               	bc	u17721
  3278  0116FE  EC5D  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3279  011702  0101               	movlb	1	; () banked
  3280  011704  6FFB               	movwf	??_send_periodical_update& (0+255),b
  3281  011706  0101               	movlb	1	; () banked
  3282  011708  51FB               	movf	??_send_periodical_update& (0+255),w,b
  3283  01170A  0D01               	mullw	1
  3284  01170C  50F3               	movf	prodl,w,c
  3285  01170E  0101               	movlb	1	; () banked
  3286  011710  273A               	addwf	_p_buffer& (0+255),f,b
  3287  011712  50F4               	movf	prodh,w,c
  3288  011714  0101               	movlb	1	; () banked
  3289  011716  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3290                           
  3291                           ; BSR set to: 1
  3292                           ;main.c: 624: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  3293  011718  0EE0               	movlw	low _m_buffer
  3294  01171A  0103               	movlb	3	; () banked
  3295  01171C  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  3296  01171E  0E02               	movlw	high _m_buffer
  3297  011720  0103               	movlb	3	; () banked
  3298  011722  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  3299  011724  0EE0               	movlw	_m_buffer& (0+255)
  3300  011726  0800               	sublw	0
  3301  011728  0101               	movlb	1	; () banked
  3302  01172A  253A               	addwf	_p_buffer& (0+255),w,b
  3303  01172C  0103               	movlb	3	; () banked
  3304  01172E  6FE9               	movwf	do_UPDATE@size& (0+255),b
  3305  011730  0E00               	movlw	0
  3306  011732  0103               	movlb	3	; () banked
  3307  011734  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  3308  011736  EC2F  F0A2         	call	_do_UPDATE	;wreg free
  3309  01173A  0900               	iorlw	0
  3310  01173C  A4D8               	btfss	status,2,c
  3311  01173E  D002               	goto	l14827
  3312                           
  3313                           ;main.c: 625: return 0;
  3314  011740  0E00               	movlw	0
  3315  011742  0012               	return	
  3316  011744                     l14827:
  3317                           
  3318                           ;main.c: 628: p_buffer = m_buffer;
  3319  011744  0EE0               	movlw	low _m_buffer
  3320  011746  0101               	movlb	1	; () banked
  3321  011748  6F3A               	movwf	_p_buffer& (0+255),b
  3322  01174A  0E02               	movlw	high _m_buffer
  3323  01174C  0101               	movlb	1	; () banked
  3324  01174E  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  3325                           
  3326                           ; BSR set to: 1
  3327                           ;main.c: 630: memcpy(m_var.label, UPTIME_LABEL, 3);
  3328  011750  0E79               	movlw	low _m_var
  3329  011752  0101               	movlb	1	; () banked
  3330  011754  6F8A               	movwf	memcpy@d1& (0+255),b
  3331  011756  0E01               	movlw	high _m_var
  3332  011758  0101               	movlb	1	; () banked
  3333  01175A  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3334  01175C  0EFB               	movlw	low _UPTIME_LABEL
  3335  01175E  0101               	movlb	1	; () banked
  3336  011760  6F8C               	movwf	memcpy@s1& (0+255),b
  3337  011762  0EFF               	movlw	high _UPTIME_LABEL
  3338  011764  0101               	movlb	1	; () banked
  3339  011766  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3340  011768  0E00               	movlw	0
  3341  01176A  0101               	movlb	1	; () banked
  3342  01176C  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3343  01176E  0E03               	movlw	3
  3344  011770  6F8E               	movwf	memcpy@n& (0+255),b
  3345  011772  EC2A  F0B5         	call	_memcpy	;wreg free
  3346                           
  3347                           ;main.c: 631: m_var.unit = 7;
  3348  011776  0E07               	movlw	7
  3349  011778  0101               	movlb	1	; () banked
  3350  01177A  6F7F               	movwf	(_m_var+6)& (0+255),b
  3351                           
  3352                           ; BSR set to: 1
  3353                           ;main.c: 632: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  3354  01177C  C133  F1C7         	movff	_m_uptime_days,floor@x	;volatile
  3355  011780  C134  F1C8         	movff	_m_uptime_days+1,floor@x+1	;volatile
  3356  011784  C135  F1C9         	movff	_m_uptime_days+2,floor@x+2	;volatile
  3357  011788  EC02  F0AC         	call	_floor	;wreg free
  3358  01178C  C1C7  F3F3         	movff	?_floor,_send_periodical_update$5145
  3359  011790  C1C8  F3F4         	movff	?_floor+1,_send_periodical_update$5145+1
  3360  011794  C1C9  F3F5         	movff	?_floor+2,_send_periodical_update$5145+2
  3361                           
  3362                           ;main.c: 632: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  3363  011798  C3F3  F1AE         	movff	_send_periodical_update$5145,___fttol@f1
  3364  01179C  C3F4  F1AF         	movff	_send_periodical_update$5145+1,___fttol@f1+1
  3365  0117A0  C3F5  F1B0         	movff	_send_periodical_update$5145+2,___fttol@f1+2
  3366  0117A4  ECA4  F0A5         	call	___fttol	;wreg free
  3367  0117A8  0101               	movlb	1	; () banked
  3368  0117AA  51AE               	movf	?___fttol& (0+255),w,b
  3369  0117AC  0101               	movlb	1	; () banked
  3370  0117AE  6F7D               	movwf	(_m_var+4)& (0+255),b
  3371                           
  3372                           ; BSR set to: 1
  3373                           ;main.c: 633: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  3374  0117B0  C133  F1C7         	movff	_m_uptime_days,floor@x	;volatile
  3375  0117B4  C134  F1C8         	movff	_m_uptime_days+1,floor@x+1	;volatile
  3376  0117B8  C135  F1C9         	movff	_m_uptime_days+2,floor@x+2	;volatile
  3377  0117BC  EC02  F0AC         	call	_floor	;wreg free
  3378  0117C0  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  3379  0117C4  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  3380  0117C8  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  3381  0117CC  EC01  F0B7         	call	___ftneg	;wreg free
  3382  0117D0  C1CF  F3F6         	movff	?___ftneg,_send_periodical_update$5146
  3383  0117D4  C1D0  F3F7         	movff	?___ftneg+1,_send_periodical_update$5146+1
  3384  0117D8  C1D1  F3F8         	movff	?___ftneg+2,_send_periodical_update$5146+2
  3385                           
  3386                           ;main.c: 633: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  3387  0117DC  0E00               	movlw	0
  3388  0117DE  0101               	movlb	1	; () banked
  3389  0117E0  6FD5               	movwf	___ftmul@f2& (0+255),b
  3390  0117E2  0EC8               	movlw	200
  3391  0117E4  0101               	movlb	1	; () banked
  3392  0117E6  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  3393  0117E8  0E42               	movlw	66
  3394  0117EA  0101               	movlb	1	; () banked
  3395  0117EC  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  3396  0117EE  C133  F195         	movff	_m_uptime_days,___ftadd@f2	;volatile
  3397  0117F2  C134  F196         	movff	_m_uptime_days+1,___ftadd@f2+1	;volatile
  3398  0117F6  C135  F197         	movff	_m_uptime_days+2,___ftadd@f2+2	;volatile
  3399  0117FA  C3F6  F192         	movff	_send_periodical_update$5146,___ftadd@f1
  3400  0117FE  C3F7  F193         	movff	_send_periodical_update$5146+1,___ftadd@f1+1
  3401  011802  C3F8  F194         	movff	_send_periodical_update$5146+2,___ftadd@f1+2
  3402  011806  EC95  F099         	call	___ftadd	;wreg free
  3403  01180A  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  3404  01180E  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  3405  011812  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  3406  011816  ECA4  F0A3         	call	___ftmul	;wreg free
  3407  01181A  C1D2  F3F9         	movff	?___ftmul,_send_periodical_update$5147
  3408  01181E  C1D3  F3FA         	movff	?___ftmul+1,_send_periodical_update$5147+1
  3409  011822  C1D4  F3FB         	movff	?___ftmul+2,_send_periodical_update$5147+2
  3410                           
  3411                           ;main.c: 633: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  3412  011826  C3F9  F1C7         	movff	_send_periodical_update$5147,floor@x
  3413  01182A  C3FA  F1C8         	movff	_send_periodical_update$5147+1,floor@x+1
  3414  01182E  C3FB  F1C9         	movff	_send_periodical_update$5147+2,floor@x+2
  3415  011832  EC02  F0AC         	call	_floor	;wreg free
  3416  011836  C1C7  F3FC         	movff	?_floor,_send_periodical_update$5148
  3417  01183A  C1C8  F3FD         	movff	?_floor+1,_send_periodical_update$5148+1
  3418  01183E  C1C9  F3FE         	movff	?_floor+2,_send_periodical_update$5148+2
  3419                           
  3420                           ;main.c: 633: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  3421  011842  C3FC  F1AE         	movff	_send_periodical_update$5148,___fttol@f1
  3422  011846  C3FD  F1AF         	movff	_send_periodical_update$5148+1,___fttol@f1+1
  3423  01184A  C3FE  F1B0         	movff	_send_periodical_update$5148+2,___fttol@f1+2
  3424  01184E  ECA4  F0A5         	call	___fttol	;wreg free
  3425  011852  0101               	movlb	1	; () banked
  3426  011854  51AE               	movf	?___fttol& (0+255),w,b
  3427  011856  0101               	movlb	1	; () banked
  3428  011858  6F7E               	movwf	(_m_var+5)& (0+255),b
  3429                           
  3430                           ; BSR set to: 1
  3431                           ;main.c: 634: m_var.writable = 0;
  3432  01185A  0E00               	movlw	0
  3433  01185C  0101               	movlb	1	; () banked
  3434  01185E  6F80               	movwf	(_m_var+7)& (0+255),b
  3435                           
  3436                           ; BSR set to: 1
  3437                           ;main.c: 635: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3438  011860  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3439  011864  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3440  011868  EE21  F079         	lfsr	2,_m_var
  3441  01186C  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  3442  011870  0E09               	movlw	9
  3443  011872                     u17741:
  3444  011872  CFDB FFEB          	movff	plusw2,plusw0
  3445  011876  06E8               	decf	wreg,f,c
  3446  011878  E2FC               	bc	u17741
  3447  01187A  EC5D  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3448  01187E  0101               	movlb	1	; () banked
  3449  011880  6FFB               	movwf	??_send_periodical_update& (0+255),b
  3450  011882  0101               	movlb	1	; () banked
  3451  011884  51FB               	movf	??_send_periodical_update& (0+255),w,b
  3452  011886  0D01               	mullw	1
  3453  011888  50F3               	movf	prodl,w,c
  3454  01188A  0101               	movlb	1	; () banked
  3455  01188C  273A               	addwf	_p_buffer& (0+255),f,b
  3456  01188E  50F4               	movf	prodh,w,c
  3457  011890  0101               	movlb	1	; () banked
  3458  011892  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3459                           
  3460                           ; BSR set to: 1
  3461                           ;main.c: 637: memcpy(m_var.label, FAILEDMSG_LABEL, 3);
  3462  011894  0E79               	movlw	low _m_var
  3463  011896  0101               	movlb	1	; () banked
  3464  011898  6F8A               	movwf	memcpy@d1& (0+255),b
  3465  01189A  0E01               	movlw	high _m_var
  3466  01189C  0101               	movlb	1	; () banked
  3467  01189E  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3468  0118A0  0EE3               	movlw	low _FAILEDMSG_LABEL
  3469  0118A2  0101               	movlb	1	; () banked
  3470  0118A4  6F8C               	movwf	memcpy@s1& (0+255),b
  3471  0118A6  0EFF               	movlw	high _FAILEDMSG_LABEL
  3472  0118A8  0101               	movlb	1	; () banked
  3473  0118AA  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3474  0118AC  0E00               	movlw	0
  3475  0118AE  0101               	movlb	1	; () banked
  3476  0118B0  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3477  0118B2  0E03               	movlw	3
  3478  0118B4  6F8E               	movwf	memcpy@n& (0+255),b
  3479  0118B6  EC2A  F0B5         	call	_memcpy	;wreg free
  3480                           
  3481                           ;main.c: 638: m_var.unit = 3;
  3482  0118BA  0E03               	movlw	3
  3483  0118BC  0101               	movlb	1	; () banked
  3484  0118BE  6F7F               	movwf	(_m_var+6)& (0+255),b
  3485                           
  3486                           ; BSR set to: 1
  3487                           ;main.c: 639: float tmp2 = (float)(m_failed_messages*100)/(float)(m_failed_messages + m_
      +                          sent_messages);
  3488  0118C0  C11E  F18A         	movff	_m_failed_messages,___lmul@multiplier
  3489  0118C4  C11F  F18B         	movff	_m_failed_messages+1,___lmul@multiplier+1
  3490  0118C8  C120  F18C         	movff	_m_failed_messages+2,___lmul@multiplier+2
  3491  0118CC  C121  F18D         	movff	_m_failed_messages+3,___lmul@multiplier+3
  3492  0118D0  0E64               	movlw	100
  3493  0118D2  0101               	movlb	1	; () banked
  3494  0118D4  6F8E               	movwf	___lmul@multiplicand& (0+255),b
  3495  0118D6  0E00               	movlw	0
  3496  0118D8  6F8F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3497  0118DA  0E00               	movlw	0
  3498  0118DC  6F90               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3499  0118DE  0E00               	movlw	0
  3500  0118E0  6F91               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3501  0118E2  ECDD  F0B3         	call	___lmul	;wreg free
  3502  0118E6  C18A  F196         	movff	?___lmul,___lltoft@c
  3503  0118EA  C18B  F197         	movff	?___lmul+1,___lltoft@c+1
  3504  0118EE  C18C  F198         	movff	?___lmul+2,___lltoft@c+2
  3505  0118F2  C18D  F199         	movff	?___lmul+3,___lltoft@c+3
  3506  0118F6  EC26  F0B3         	call	___lltoft	;wreg free
  3507  0118FA  C196  F19F         	movff	?___lltoft,___ftdiv@f1
  3508  0118FE  C197  F1A0         	movff	?___lltoft+1,___ftdiv@f1+1
  3509  011902  C198  F1A1         	movff	?___lltoft+2,___ftdiv@f1+2
  3510  011906  0101               	movlb	1	; () banked
  3511  011908  5122               	movf	_m_sent_messages& (0+255),w,b
  3512  01190A  0101               	movlb	1	; () banked
  3513  01190C  251E               	addwf	_m_failed_messages& (0+255),w,b
  3514  01190E  0101               	movlb	1	; () banked
  3515  011910  6F96               	movwf	___lltoft@c& (0+255),b
  3516  011912  0101               	movlb	1	; () banked
  3517  011914  5123               	movf	(_m_sent_messages+1)& (0+255),w,b
  3518  011916  0101               	movlb	1	; () banked
  3519  011918  211F               	addwfc	(_m_failed_messages+1)& (0+255),w,b
  3520  01191A  0101               	movlb	1	; () banked
  3521  01191C  6F97               	movwf	(___lltoft@c+1)& (0+255),b
  3522  01191E  0101               	movlb	1	; () banked
  3523  011920  5124               	movf	(_m_sent_messages+2)& (0+255),w,b
  3524  011922  0101               	movlb	1	; () banked
  3525  011924  2120               	addwfc	(_m_failed_messages+2)& (0+255),w,b
  3526  011926  0101               	movlb	1	; () banked
  3527  011928  6F98               	movwf	(___lltoft@c+2)& (0+255),b
  3528  01192A  0101               	movlb	1	; () banked
  3529  01192C  5125               	movf	(_m_sent_messages+3)& (0+255),w,b
  3530  01192E  0101               	movlb	1	; () banked
  3531  011930  2121               	addwfc	(_m_failed_messages+3)& (0+255),w,b
  3532  011932  0101               	movlb	1	; () banked
  3533  011934  6F99               	movwf	(___lltoft@c+3)& (0+255),b
  3534  011936  EC26  F0B3         	call	___lltoft	;wreg free
  3535  01193A  C196  F1A2         	movff	?___lltoft,___ftdiv@f2
  3536  01193E  C197  F1A3         	movff	?___lltoft+1,___ftdiv@f2+1
  3537  011942  C198  F1A4         	movff	?___lltoft+2,___ftdiv@f2+2
  3538  011946  ECFE  F0A4         	call	___ftdiv	;wreg free
  3539  01194A  C19F  F3F0         	movff	?___ftdiv,send_periodical_update@tmp2
  3540  01194E  C1A0  F3F1         	movff	?___ftdiv+1,send_periodical_update@tmp2+1
  3541  011952  C1A1  F3F2         	movff	?___ftdiv+2,send_periodical_update@tmp2+2
  3542                           
  3543                           ;main.c: 640: m_var.value_byte1 = (uint8_t)floor(tmp2);
  3544  011956  C3F0  F1C7         	movff	send_periodical_update@tmp2,floor@x
  3545  01195A  C3F1  F1C8         	movff	send_periodical_update@tmp2+1,floor@x+1
  3546  01195E  C3F2  F1C9         	movff	send_periodical_update@tmp2+2,floor@x+2
  3547  011962  EC02  F0AC         	call	_floor	;wreg free
  3548  011966  C1C7  F3F3         	movff	?_floor,_send_periodical_update$5145
  3549  01196A  C1C8  F3F4         	movff	?_floor+1,_send_periodical_update$5145+1
  3550  01196E  C1C9  F3F5         	movff	?_floor+2,_send_periodical_update$5145+2
  3551                           
  3552                           ;main.c: 640: m_var.value_byte1 = (uint8_t)floor(tmp2);
  3553  011972  C3F3  F1AE         	movff	_send_periodical_update$5145,___fttol@f1
  3554  011976  C3F4  F1AF         	movff	_send_periodical_update$5145+1,___fttol@f1+1
  3555  01197A  C3F5  F1B0         	movff	_send_periodical_update$5145+2,___fttol@f1+2
  3556  01197E  ECA4  F0A5         	call	___fttol	;wreg free
  3557  011982  0101               	movlb	1	; () banked
  3558  011984  51AE               	movf	?___fttol& (0+255),w,b
  3559  011986  0101               	movlb	1	; () banked
  3560  011988  6F7D               	movwf	(_m_var+4)& (0+255),b
  3561                           
  3562                           ; BSR set to: 1
  3563                           ;main.c: 641: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3564  01198A  C3F0  F1C7         	movff	send_periodical_update@tmp2,floor@x
  3565  01198E  C3F1  F1C8         	movff	send_periodical_update@tmp2+1,floor@x+1
  3566  011992  C3F2  F1C9         	movff	send_periodical_update@tmp2+2,floor@x+2
  3567  011996  EC02  F0AC         	call	_floor	;wreg free
  3568  01199A  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  3569  01199E  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  3570  0119A2  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  3571  0119A6  EC01  F0B7         	call	___ftneg	;wreg free
  3572  0119AA  C1CF  F3F6         	movff	?___ftneg,_send_periodical_update$5146
  3573  0119AE  C1D0  F3F7         	movff	?___ftneg+1,_send_periodical_update$5146+1
  3574  0119B2  C1D1  F3F8         	movff	?___ftneg+2,_send_periodical_update$5146+2
  3575                           
  3576                           ;main.c: 641: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3577  0119B6  0E00               	movlw	0
  3578  0119B8  0101               	movlb	1	; () banked
  3579  0119BA  6FD5               	movwf	___ftmul@f2& (0+255),b
  3580  0119BC  0EC8               	movlw	200
  3581  0119BE  0101               	movlb	1	; () banked
  3582  0119C0  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  3583  0119C2  0E42               	movlw	66
  3584  0119C4  0101               	movlb	1	; () banked
  3585  0119C6  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  3586  0119C8  C3F0  F195         	movff	send_periodical_update@tmp2,___ftadd@f2
  3587  0119CC  C3F1  F196         	movff	send_periodical_update@tmp2+1,___ftadd@f2+1
  3588  0119D0  C3F2  F197         	movff	send_periodical_update@tmp2+2,___ftadd@f2+2
  3589  0119D4  C3F6  F192         	movff	_send_periodical_update$5146,___ftadd@f1
  3590  0119D8  C3F7  F193         	movff	_send_periodical_update$5146+1,___ftadd@f1+1
  3591  0119DC  C3F8  F194         	movff	_send_periodical_update$5146+2,___ftadd@f1+2
  3592  0119E0  EC95  F099         	call	___ftadd	;wreg free
  3593  0119E4  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  3594  0119E8  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  3595  0119EC  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  3596  0119F0  ECA4  F0A3         	call	___ftmul	;wreg free
  3597  0119F4  C1D2  F3F9         	movff	?___ftmul,_send_periodical_update$5147
  3598  0119F8  C1D3  F3FA         	movff	?___ftmul+1,_send_periodical_update$5147+1
  3599  0119FC  C1D4  F3FB         	movff	?___ftmul+2,_send_periodical_update$5147+2
  3600                           
  3601                           ;main.c: 641: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3602  011A00  C3F9  F1C7         	movff	_send_periodical_update$5147,floor@x
  3603  011A04  C3FA  F1C8         	movff	_send_periodical_update$5147+1,floor@x+1
  3604  011A08  C3FB  F1C9         	movff	_send_periodical_update$5147+2,floor@x+2
  3605  011A0C  EC02  F0AC         	call	_floor	;wreg free
  3606  011A10  C1C7  F3FC         	movff	?_floor,_send_periodical_update$5148
  3607  011A14  C1C8  F3FD         	movff	?_floor+1,_send_periodical_update$5148+1
  3608  011A18  C1C9  F3FE         	movff	?_floor+2,_send_periodical_update$5148+2
  3609                           
  3610                           ;main.c: 641: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3611  011A1C  C3FC  F1AE         	movff	_send_periodical_update$5148,___fttol@f1
  3612  011A20  C3FD  F1AF         	movff	_send_periodical_update$5148+1,___fttol@f1+1
  3613  011A24  C3FE  F1B0         	movff	_send_periodical_update$5148+2,___fttol@f1+2
  3614  011A28  ECA4  F0A5         	call	___fttol	;wreg free
  3615  011A2C  0101               	movlb	1	; () banked
  3616  011A2E  51AE               	movf	?___fttol& (0+255),w,b
  3617  011A30  0101               	movlb	1	; () banked
  3618  011A32  6F7E               	movwf	(_m_var+5)& (0+255),b
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;main.c: 642: m_var.writable = 0;
  3622  011A34  0E00               	movlw	0
  3623  011A36  0101               	movlb	1	; () banked
  3624  011A38  6F80               	movwf	(_m_var+7)& (0+255),b
  3625                           
  3626                           ; BSR set to: 1
  3627                           ;main.c: 643: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3628  011A3A  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3629  011A3E  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3630  011A42  EE21  F079         	lfsr	2,_m_var
  3631  011A46  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  3632  011A4A  0E09               	movlw	9
  3633  011A4C                     u17751:
  3634  011A4C  CFDB FFEB          	movff	plusw2,plusw0
  3635  011A50  06E8               	decf	wreg,f,c
  3636  011A52  E2FC               	bc	u17751
  3637  011A54  EC5D  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3638  011A58  0101               	movlb	1	; () banked
  3639  011A5A  6FFB               	movwf	??_send_periodical_update& (0+255),b
  3640  011A5C  0101               	movlb	1	; () banked
  3641  011A5E  51FB               	movf	??_send_periodical_update& (0+255),w,b
  3642  011A60  0D01               	mullw	1
  3643  011A62  50F3               	movf	prodl,w,c
  3644  011A64  0101               	movlb	1	; () banked
  3645  011A66  273A               	addwf	_p_buffer& (0+255),f,b
  3646  011A68  50F4               	movf	prodh,w,c
  3647  011A6A  0101               	movlb	1	; () banked
  3648  011A6C  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3649                           
  3650                           ; BSR set to: 1
  3651                           ;main.c: 645: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  3652  011A6E  0EE0               	movlw	low _m_buffer
  3653  011A70  0103               	movlb	3	; () banked
  3654  011A72  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  3655  011A74  0E02               	movlw	high _m_buffer
  3656  011A76  0103               	movlb	3	; () banked
  3657  011A78  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  3658  011A7A  0EE0               	movlw	_m_buffer& (0+255)
  3659  011A7C  0800               	sublw	0
  3660  011A7E  0101               	movlb	1	; () banked
  3661  011A80  253A               	addwf	_p_buffer& (0+255),w,b
  3662  011A82  0103               	movlb	3	; () banked
  3663  011A84  6FE9               	movwf	do_UPDATE@size& (0+255),b
  3664  011A86  0E01               	movlw	1
  3665  011A88  0103               	movlb	3	; () banked
  3666  011A8A  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  3667  011A8C  EC2F  F0A2         	call	_do_UPDATE	;wreg free
  3668  011A90  0012               	return	
  3669  011A92                     __end_of_send_periodical_update:
  3670                           	opt stack 0
  3671                           tblptru	equ	0xFF8
  3672                           tblptrh	equ	0xFF7
  3673                           tblptrl	equ	0xFF6
  3674                           tablat	equ	0xFF5
  3675                           prodh	equ	0xFF4
  3676                           prodl	equ	0xFF3
  3677                           postinc0	equ	0xFEE
  3678                           plusw0	equ	0xFEB
  3679                           wreg	equ	0xFE8
  3680                           postdec1	equ	0xFE5
  3681                           fsr1h	equ	0xFE2
  3682                           fsr1l	equ	0xFE1
  3683                           indf2	equ	0xFDF
  3684                           postinc2	equ	0xFDE
  3685                           plusw2	equ	0xFDB
  3686                           fsr2h	equ	0xFDA
  3687                           fsr2l	equ	0xFD9
  3688                           status	equ	0xFD8
  3689                           
  3690 ;; *************** function _send_initial_update *****************
  3691 ;; Defined at:
  3692 ;;		line 495 in file "src/main.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  tmp2            3   28[BANK3 ] float 
  3697 ;;  tmp             2    0        unsigned int 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      unsigned char 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3708 ;;      Locals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  3709 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3710 ;;      Totals:         0       0       1       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  3711 ;;Total ram usage:       16 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:   18
  3714 ;; This function calls:
  3715 ;;		___ftadd
  3716 ;;		___ftdiv
  3717 ;;		___ftmul
  3718 ;;		___ftneg
  3719 ;;		___fttol
  3720 ;;		___lltoft
  3721 ;;		___lmul
  3722 ;;		_dBm_to_mW_ufixed16
  3723 ;;		_do_UPDATE
  3724 ;;		_encode_ufixed16_variable
  3725 ;;		_encode_uint8_variable
  3726 ;;		_floor
  3727 ;;		_memcpy
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text3
  3734  010C7A                     __ptext3:
  3735                           	opt stack 0
  3736  010C7A                     _send_initial_update:
  3737                           	opt stack 12
  3738                           
  3739                           ;main.c: 497: uint16_t tmp;
  3740                           ;main.c: 499: p_buffer = m_buffer;
  3741                           
  3742                           ;incstack = 0
  3743  010C7A  0EE0               	movlw	low _m_buffer
  3744  010C7C  0101               	movlb	1	; () banked
  3745  010C7E  6F3A               	movwf	_p_buffer& (0+255),b
  3746  010C80  0E02               	movlw	high _m_buffer
  3747  010C82  0101               	movlb	1	; () banked
  3748  010C84  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  3749                           
  3750                           ; BSR set to: 1
  3751                           ;main.c: 502: memcpy(m_var.label, BATTERY_VOLTAGE_LABEL, 3);
  3752  010C86  0E79               	movlw	low _m_var
  3753  010C88  0101               	movlb	1	; () banked
  3754  010C8A  6F8A               	movwf	memcpy@d1& (0+255),b
  3755  010C8C  0E01               	movlw	high _m_var
  3756  010C8E  0101               	movlb	1	; () banked
  3757  010C90  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3758  010C92  0EDF               	movlw	low _BATTERY_VOLTAGE_LABEL
  3759  010C94  0101               	movlb	1	; () banked
  3760  010C96  6F8C               	movwf	memcpy@s1& (0+255),b
  3761  010C98  0EFF               	movlw	high _BATTERY_VOLTAGE_LABEL
  3762  010C9A  0101               	movlb	1	; () banked
  3763  010C9C  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3764  010C9E  0E00               	movlw	0
  3765  010CA0  0101               	movlb	1	; () banked
  3766  010CA2  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3767  010CA4  0E03               	movlw	3
  3768  010CA6  6F8E               	movwf	memcpy@n& (0+255),b
  3769  010CA8  EC2A  F0B5         	call	_memcpy	;wreg free
  3770                           
  3771                           ;main.c: 503: m_var.unit = 2;
  3772  010CAC  0E02               	movlw	2
  3773  010CAE  0101               	movlb	1	; () banked
  3774  010CB0  6F7F               	movwf	(_m_var+6)& (0+255),b
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;main.c: 504: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  3778  010CB2  C12D  F1C7         	movff	_m_battery_voltage,floor@x
  3779  010CB6  C12E  F1C8         	movff	_m_battery_voltage+1,floor@x+1
  3780  010CBA  C12F  F1C9         	movff	_m_battery_voltage+2,floor@x+2
  3781  010CBE  EC02  F0AC         	call	_floor	;wreg free
  3782  010CC2  C1C7  F3F3         	movff	?_floor,_send_initial_update$5141
  3783  010CC6  C1C8  F3F4         	movff	?_floor+1,_send_initial_update$5141+1
  3784  010CCA  C1C9  F3F5         	movff	?_floor+2,_send_initial_update$5141+2
  3785                           
  3786                           ;main.c: 504: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  3787  010CCE  C3F3  F1AE         	movff	_send_initial_update$5141,___fttol@f1
  3788  010CD2  C3F4  F1AF         	movff	_send_initial_update$5141+1,___fttol@f1+1
  3789  010CD6  C3F5  F1B0         	movff	_send_initial_update$5141+2,___fttol@f1+2
  3790  010CDA  ECA4  F0A5         	call	___fttol	;wreg free
  3791  010CDE  0101               	movlb	1	; () banked
  3792  010CE0  51AE               	movf	?___fttol& (0+255),w,b
  3793  010CE2  0101               	movlb	1	; () banked
  3794  010CE4  6F7D               	movwf	(_m_var+4)& (0+255),b
  3795                           
  3796                           ; BSR set to: 1
  3797                           ;main.c: 505: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3798  010CE6  C12D  F1C7         	movff	_m_battery_voltage,floor@x
  3799  010CEA  C12E  F1C8         	movff	_m_battery_voltage+1,floor@x+1
  3800  010CEE  C12F  F1C9         	movff	_m_battery_voltage+2,floor@x+2
  3801  010CF2  EC02  F0AC         	call	_floor	;wreg free
  3802  010CF6  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  3803  010CFA  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  3804  010CFE  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  3805  010D02  EC01  F0B7         	call	___ftneg	;wreg free
  3806  010D06  C1CF  F3F6         	movff	?___ftneg,_send_initial_update$5142
  3807  010D0A  C1D0  F3F7         	movff	?___ftneg+1,_send_initial_update$5142+1
  3808  010D0E  C1D1  F3F8         	movff	?___ftneg+2,_send_initial_update$5142+2
  3809                           
  3810                           ;main.c: 505: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3811  010D12  0E00               	movlw	0
  3812  010D14  0101               	movlb	1	; () banked
  3813  010D16  6FD5               	movwf	___ftmul@f2& (0+255),b
  3814  010D18  0EC8               	movlw	200
  3815  010D1A  0101               	movlb	1	; () banked
  3816  010D1C  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  3817  010D1E  0E42               	movlw	66
  3818  010D20  0101               	movlb	1	; () banked
  3819  010D22  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  3820  010D24  C12D  F195         	movff	_m_battery_voltage,___ftadd@f2
  3821  010D28  C12E  F196         	movff	_m_battery_voltage+1,___ftadd@f2+1
  3822  010D2C  C12F  F197         	movff	_m_battery_voltage+2,___ftadd@f2+2
  3823  010D30  C3F6  F192         	movff	_send_initial_update$5142,___ftadd@f1
  3824  010D34  C3F7  F193         	movff	_send_initial_update$5142+1,___ftadd@f1+1
  3825  010D38  C3F8  F194         	movff	_send_initial_update$5142+2,___ftadd@f1+2
  3826  010D3C  EC95  F099         	call	___ftadd	;wreg free
  3827  010D40  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  3828  010D44  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  3829  010D48  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  3830  010D4C  ECA4  F0A3         	call	___ftmul	;wreg free
  3831  010D50  C1D2  F3F9         	movff	?___ftmul,_send_initial_update$5143
  3832  010D54  C1D3  F3FA         	movff	?___ftmul+1,_send_initial_update$5143+1
  3833  010D58  C1D4  F3FB         	movff	?___ftmul+2,_send_initial_update$5143+2
  3834                           
  3835                           ;main.c: 505: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3836  010D5C  C3F9  F1C7         	movff	_send_initial_update$5143,floor@x
  3837  010D60  C3FA  F1C8         	movff	_send_initial_update$5143+1,floor@x+1
  3838  010D64  C3FB  F1C9         	movff	_send_initial_update$5143+2,floor@x+2
  3839  010D68  EC02  F0AC         	call	_floor	;wreg free
  3840  010D6C  C1C7  F3FC         	movff	?_floor,_send_initial_update$5144
  3841  010D70  C1C8  F3FD         	movff	?_floor+1,_send_initial_update$5144+1
  3842  010D74  C1C9  F3FE         	movff	?_floor+2,_send_initial_update$5144+2
  3843                           
  3844                           ;main.c: 505: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3845  010D78  C3FC  F1AE         	movff	_send_initial_update$5144,___fttol@f1
  3846  010D7C  C3FD  F1AF         	movff	_send_initial_update$5144+1,___fttol@f1+1
  3847  010D80  C3FE  F1B0         	movff	_send_initial_update$5144+2,___fttol@f1+2
  3848  010D84  ECA4  F0A5         	call	___fttol	;wreg free
  3849  010D88  0101               	movlb	1	; () banked
  3850  010D8A  51AE               	movf	?___fttol& (0+255),w,b
  3851  010D8C  0101               	movlb	1	; () banked
  3852  010D8E  6F7E               	movwf	(_m_var+5)& (0+255),b
  3853                           
  3854                           ; BSR set to: 1
  3855                           ;main.c: 506: m_var.writable = 0;
  3856  010D90  0E00               	movlw	0
  3857  010D92  0101               	movlb	1	; () banked
  3858  010D94  6F80               	movwf	(_m_var+7)& (0+255),b
  3859                           
  3860                           ; BSR set to: 1
  3861                           ;main.c: 507: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3862  010D96  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3863  010D9A  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3864  010D9E  EE21  F079         	lfsr	2,_m_var
  3865  010DA2  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  3866  010DA6  0E09               	movlw	9
  3867  010DA8                     u17471:
  3868  010DA8  CFDB FFEB          	movff	plusw2,plusw0
  3869  010DAC  06E8               	decf	wreg,f,c
  3870  010DAE  E2FC               	bc	u17471
  3871  010DB0  EC5D  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3872  010DB4  0101               	movlb	1	; () banked
  3873  010DB6  6FFB               	movwf	??_send_initial_update& (0+255),b
  3874  010DB8  0101               	movlb	1	; () banked
  3875  010DBA  51FB               	movf	??_send_initial_update& (0+255),w,b
  3876  010DBC  0D01               	mullw	1
  3877  010DBE  50F3               	movf	prodl,w,c
  3878  010DC0  0101               	movlb	1	; () banked
  3879  010DC2  273A               	addwf	_p_buffer& (0+255),f,b
  3880  010DC4  50F4               	movf	prodh,w,c
  3881  010DC6  0101               	movlb	1	; () banked
  3882  010DC8  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3883                           
  3884                           ; BSR set to: 1
  3885                           ;main.c: 509: memcpy(m_var.label, LIGHT_LEVEL_LABEL, 3);
  3886  010DCA  0E79               	movlw	low _m_var
  3887  010DCC  0101               	movlb	1	; () banked
  3888  010DCE  6F8A               	movwf	memcpy@d1& (0+255),b
  3889  010DD0  0E01               	movlw	high _m_var
  3890  010DD2  0101               	movlb	1	; () banked
  3891  010DD4  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3892  010DD6  0EE7               	movlw	low _LIGHT_LEVEL_LABEL
  3893  010DD8  0101               	movlb	1	; () banked
  3894  010DDA  6F8C               	movwf	memcpy@s1& (0+255),b
  3895  010DDC  0EFF               	movlw	high _LIGHT_LEVEL_LABEL
  3896  010DDE  0101               	movlb	1	; () banked
  3897  010DE0  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3898  010DE2  0E00               	movlw	0
  3899  010DE4  0101               	movlb	1	; () banked
  3900  010DE6  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3901  010DE8  0E03               	movlw	3
  3902  010DEA  6F8E               	movwf	memcpy@n& (0+255),b
  3903  010DEC  EC2A  F0B5         	call	_memcpy	;wreg free
  3904                           
  3905                           ;main.c: 510: m_var.unit = 3;
  3906  010DF0  0E03               	movlw	3
  3907  010DF2  0101               	movlb	1	; () banked
  3908  010DF4  6F7F               	movwf	(_m_var+6)& (0+255),b
  3909                           
  3910                           ; BSR set to: 1
  3911                           ;main.c: 511: m_var.value_byte1 = m_light_level;
  3912  010DF6  C149  F17D         	movff	_m_light_level,_m_var+4
  3913                           
  3914                           ; BSR set to: 1
  3915                           ;main.c: 512: m_var.writable = 0;
  3916  010DFA  0E00               	movlw	0
  3917  010DFC  0101               	movlb	1	; () banked
  3918  010DFE  6F80               	movwf	(_m_var+7)& (0+255),b
  3919                           
  3920                           ; BSR set to: 1
  3921                           ;main.c: 513: p_buffer += encode_uint8_variable(p_buffer, m_var);
  3922  010E00  C13A  F18A         	movff	_p_buffer,encode_uint8_variable@buffer
  3923  010E04  C13B  F18B         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  3924  010E08  EE21  F079         	lfsr	2,_m_var
  3925  010E0C  EE01  F08C         	lfsr	0,encode_uint8_variable@var
  3926  010E10  0E09               	movlw	9
  3927  010E12                     u17481:
  3928  010E12  CFDB FFEB          	movff	plusw2,plusw0
  3929  010E16  06E8               	decf	wreg,f,c
  3930  010E18  E2FC               	bc	u17481
  3931  010E1A  EC1F  F0B1         	call	_encode_uint8_variable	;wreg free
  3932  010E1E  0101               	movlb	1	; () banked
  3933  010E20  6FFB               	movwf	??_send_initial_update& (0+255),b
  3934  010E22  0101               	movlb	1	; () banked
  3935  010E24  51FB               	movf	??_send_initial_update& (0+255),w,b
  3936  010E26  0D01               	mullw	1
  3937  010E28  50F3               	movf	prodl,w,c
  3938  010E2A  0101               	movlb	1	; () banked
  3939  010E2C  273A               	addwf	_p_buffer& (0+255),f,b
  3940  010E2E  50F4               	movf	prodh,w,c
  3941  010E30  0101               	movlb	1	; () banked
  3942  010E32  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3943                           
  3944                           ; BSR set to: 1
  3945                           ;main.c: 515: memcpy(m_var.label, TEMPERATURE_LABEL, 3);
  3946  010E34  0E79               	movlw	low _m_var
  3947  010E36  0101               	movlb	1	; () banked
  3948  010E38  6F8A               	movwf	memcpy@d1& (0+255),b
  3949  010E3A  0E01               	movlw	high _m_var
  3950  010E3C  0101               	movlb	1	; () banked
  3951  010E3E  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3952  010E40  0EEF               	movlw	low _TEMPERATURE_LABEL
  3953  010E42  0101               	movlb	1	; () banked
  3954  010E44  6F8C               	movwf	memcpy@s1& (0+255),b
  3955  010E46  0EFF               	movlw	high _TEMPERATURE_LABEL
  3956  010E48  0101               	movlb	1	; () banked
  3957  010E4A  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3958  010E4C  0E00               	movlw	0
  3959  010E4E  0101               	movlb	1	; () banked
  3960  010E50  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3961  010E52  0E03               	movlw	3
  3962  010E54  6F8E               	movwf	memcpy@n& (0+255),b
  3963  010E56  EC2A  F0B5         	call	_memcpy	;wreg free
  3964                           
  3965                           ;main.c: 516: m_var.unit = 1;
  3966  010E5A  0E01               	movlw	1
  3967  010E5C  0101               	movlb	1	; () banked
  3968  010E5E  6F7F               	movwf	(_m_var+6)& (0+255),b
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;main.c: 517: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3972  010E60  C130  F1C7         	movff	_m_temperature,floor@x
  3973  010E64  C131  F1C8         	movff	_m_temperature+1,floor@x+1
  3974  010E68  C132  F1C9         	movff	_m_temperature+2,floor@x+2
  3975  010E6C  EC02  F0AC         	call	_floor	;wreg free
  3976  010E70  C1C7  F3F3         	movff	?_floor,_send_initial_update$5141
  3977  010E74  C1C8  F3F4         	movff	?_floor+1,_send_initial_update$5141+1
  3978  010E78  C1C9  F3F5         	movff	?_floor+2,_send_initial_update$5141+2
  3979                           
  3980                           ;main.c: 517: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3981  010E7C  C3F3  F1AE         	movff	_send_initial_update$5141,___fttol@f1
  3982  010E80  C3F4  F1AF         	movff	_send_initial_update$5141+1,___fttol@f1+1
  3983  010E84  C3F5  F1B0         	movff	_send_initial_update$5141+2,___fttol@f1+2
  3984  010E88  ECA4  F0A5         	call	___fttol	;wreg free
  3985  010E8C  0101               	movlb	1	; () banked
  3986  010E8E  51AE               	movf	?___fttol& (0+255),w,b
  3987  010E90  0101               	movlb	1	; () banked
  3988  010E92  6F7D               	movwf	(_m_var+4)& (0+255),b
  3989                           
  3990                           ; BSR set to: 1
  3991                           ;main.c: 518: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3992  010E94  C130  F1C7         	movff	_m_temperature,floor@x
  3993  010E98  C131  F1C8         	movff	_m_temperature+1,floor@x+1
  3994  010E9C  C132  F1C9         	movff	_m_temperature+2,floor@x+2
  3995  010EA0  EC02  F0AC         	call	_floor	;wreg free
  3996  010EA4  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  3997  010EA8  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  3998  010EAC  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  3999  010EB0  EC01  F0B7         	call	___ftneg	;wreg free
  4000  010EB4  C1CF  F3F6         	movff	?___ftneg,_send_initial_update$5142
  4001  010EB8  C1D0  F3F7         	movff	?___ftneg+1,_send_initial_update$5142+1
  4002  010EBC  C1D1  F3F8         	movff	?___ftneg+2,_send_initial_update$5142+2
  4003                           
  4004                           ;main.c: 518: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  4005  010EC0  0E00               	movlw	0
  4006  010EC2  0101               	movlb	1	; () banked
  4007  010EC4  6FD5               	movwf	___ftmul@f2& (0+255),b
  4008  010EC6  0EC8               	movlw	200
  4009  010EC8  0101               	movlb	1	; () banked
  4010  010ECA  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  4011  010ECC  0E42               	movlw	66
  4012  010ECE  0101               	movlb	1	; () banked
  4013  010ED0  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  4014  010ED2  C130  F195         	movff	_m_temperature,___ftadd@f2
  4015  010ED6  C131  F196         	movff	_m_temperature+1,___ftadd@f2+1
  4016  010EDA  C132  F197         	movff	_m_temperature+2,___ftadd@f2+2
  4017  010EDE  C3F6  F192         	movff	_send_initial_update$5142,___ftadd@f1
  4018  010EE2  C3F7  F193         	movff	_send_initial_update$5142+1,___ftadd@f1+1
  4019  010EE6  C3F8  F194         	movff	_send_initial_update$5142+2,___ftadd@f1+2
  4020  010EEA  EC95  F099         	call	___ftadd	;wreg free
  4021  010EEE  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  4022  010EF2  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  4023  010EF6  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  4024  010EFA  ECA4  F0A3         	call	___ftmul	;wreg free
  4025  010EFE  C1D2  F3F9         	movff	?___ftmul,_send_initial_update$5143
  4026  010F02  C1D3  F3FA         	movff	?___ftmul+1,_send_initial_update$5143+1
  4027  010F06  C1D4  F3FB         	movff	?___ftmul+2,_send_initial_update$5143+2
  4028                           
  4029                           ;main.c: 518: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  4030  010F0A  C3F9  F1C7         	movff	_send_initial_update$5143,floor@x
  4031  010F0E  C3FA  F1C8         	movff	_send_initial_update$5143+1,floor@x+1
  4032  010F12  C3FB  F1C9         	movff	_send_initial_update$5143+2,floor@x+2
  4033  010F16  EC02  F0AC         	call	_floor	;wreg free
  4034  010F1A  C1C7  F3FC         	movff	?_floor,_send_initial_update$5144
  4035  010F1E  C1C8  F3FD         	movff	?_floor+1,_send_initial_update$5144+1
  4036  010F22  C1C9  F3FE         	movff	?_floor+2,_send_initial_update$5144+2
  4037                           
  4038                           ;main.c: 518: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  4039  010F26  C3FC  F1AE         	movff	_send_initial_update$5144,___fttol@f1
  4040  010F2A  C3FD  F1AF         	movff	_send_initial_update$5144+1,___fttol@f1+1
  4041  010F2E  C3FE  F1B0         	movff	_send_initial_update$5144+2,___fttol@f1+2
  4042  010F32  ECA4  F0A5         	call	___fttol	;wreg free
  4043  010F36  0101               	movlb	1	; () banked
  4044  010F38  51AE               	movf	?___fttol& (0+255),w,b
  4045  010F3A  0101               	movlb	1	; () banked
  4046  010F3C  6F7E               	movwf	(_m_var+5)& (0+255),b
  4047                           
  4048                           ; BSR set to: 1
  4049                           ;main.c: 519: m_var.writable = 0;
  4050  010F3E  0E00               	movlw	0
  4051  010F40  0101               	movlb	1	; () banked
  4052  010F42  6F80               	movwf	(_m_var+7)& (0+255),b
  4053                           
  4054                           ; BSR set to: 1
  4055                           ;main.c: 520: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  4056  010F44  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  4057  010F48  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  4058  010F4C  EE21  F079         	lfsr	2,_m_var
  4059  010F50  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  4060  010F54  0E09               	movlw	9
  4061  010F56                     u17491:
  4062  010F56  CFDB FFEB          	movff	plusw2,plusw0
  4063  010F5A  06E8               	decf	wreg,f,c
  4064  010F5C  E2FC               	bc	u17491
  4065  010F5E  EC5D  F0AF         	call	_encode_ufixed16_variable	;wreg free
  4066  010F62  0101               	movlb	1	; () banked
  4067  010F64  6FFB               	movwf	??_send_initial_update& (0+255),b
  4068  010F66  0101               	movlb	1	; () banked
  4069  010F68  51FB               	movf	??_send_initial_update& (0+255),w,b
  4070  010F6A  0D01               	mullw	1
  4071  010F6C  50F3               	movf	prodl,w,c
  4072  010F6E  0101               	movlb	1	; () banked
  4073  010F70  273A               	addwf	_p_buffer& (0+255),f,b
  4074  010F72  50F4               	movf	prodh,w,c
  4075  010F74  0101               	movlb	1	; () banked
  4076  010F76  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  4077                           
  4078                           ; BSR set to: 1
  4079                           ;main.c: 522: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  4080  010F78  0EE0               	movlw	low _m_buffer
  4081  010F7A  0103               	movlb	3	; () banked
  4082  010F7C  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  4083  010F7E  0E02               	movlw	high _m_buffer
  4084  010F80  0103               	movlb	3	; () banked
  4085  010F82  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4086  010F84  0EE0               	movlw	_m_buffer& (0+255)
  4087  010F86  0800               	sublw	0
  4088  010F88  0101               	movlb	1	; () banked
  4089  010F8A  253A               	addwf	_p_buffer& (0+255),w,b
  4090  010F8C  0103               	movlb	3	; () banked
  4091  010F8E  6FE9               	movwf	do_UPDATE@size& (0+255),b
  4092  010F90  0E00               	movlw	0
  4093  010F92  0103               	movlb	3	; () banked
  4094  010F94  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  4095  010F96  EC2F  F0A2         	call	_do_UPDATE	;wreg free
  4096  010F9A  0900               	iorlw	0
  4097  010F9C  A4D8               	btfss	status,2,c
  4098  010F9E  D002               	goto	l14613
  4099                           
  4100                           ;main.c: 523: return 0;
  4101  010FA0  0E00               	movlw	0
  4102  010FA2  0012               	return	
  4103  010FA4                     l14613:
  4104                           
  4105                           ;main.c: 526: p_buffer = m_buffer;
  4106  010FA4  0EE0               	movlw	low _m_buffer
  4107  010FA6  0101               	movlb	1	; () banked
  4108  010FA8  6F3A               	movwf	_p_buffer& (0+255),b
  4109  010FAA  0E02               	movlw	high _m_buffer
  4110  010FAC  0101               	movlb	1	; () banked
  4111  010FAE  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  4112                           
  4113                           ; BSR set to: 1
  4114                           ;main.c: 528: memcpy(m_var.label, POWER_LABEL, 3);
  4115  010FB0  0E79               	movlw	low _m_var
  4116  010FB2  0101               	movlb	1	; () banked
  4117  010FB4  6F8A               	movwf	memcpy@d1& (0+255),b
  4118  010FB6  0E01               	movlw	high _m_var
  4119  010FB8  0101               	movlb	1	; () banked
  4120  010FBA  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  4121  010FBC  0EEB               	movlw	low _POWER_LABEL
  4122  010FBE  0101               	movlb	1	; () banked
  4123  010FC0  6F8C               	movwf	memcpy@s1& (0+255),b
  4124  010FC2  0EFF               	movlw	high _POWER_LABEL
  4125  010FC4  0101               	movlb	1	; () banked
  4126  010FC6  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  4127  010FC8  0E00               	movlw	0
  4128  010FCA  0101               	movlb	1	; () banked
  4129  010FCC  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  4130  010FCE  0E03               	movlw	3
  4131  010FD0  6F8E               	movwf	memcpy@n& (0+255),b
  4132  010FD2  EC2A  F0B5         	call	_memcpy	;wreg free
  4133                           
  4134                           ;main.c: 529: m_var.unit = 8;
  4135  010FD6  0E08               	movlw	8
  4136  010FD8  0101               	movlb	1	; () banked
  4137  010FDA  6F7F               	movwf	(_m_var+6)& (0+255),b
  4138                           
  4139                           ; BSR set to: 1
  4140                           ;main.c: 530: dBm_to_mW_ufixed16(m_power, &(m_var.value_byte1), &(m_var.value_byte2));
  4141  010FDC  0E7D               	movlw	low (_m_var+4)
  4142  010FDE  0101               	movlb	1	; () banked
  4143  010FE0  6F8A               	movwf	dBm_to_mW_ufixed16@value1& (0+255),b
  4144  010FE2  0E01               	movlw	high (_m_var+4)
  4145  010FE4  0101               	movlb	1	; () banked
  4146  010FE6  6F8B               	movwf	(dBm_to_mW_ufixed16@value1+1)& (0+255),b
  4147  010FE8  0E7E               	movlw	low (_m_var+5)
  4148  010FEA  0101               	movlb	1	; () banked
  4149  010FEC  6F8C               	movwf	dBm_to_mW_ufixed16@value2& (0+255),b
  4150  010FEE  0E01               	movlw	high (_m_var+5)
  4151  010FF0  0101               	movlb	1	; () banked
  4152  010FF2  6F8D               	movwf	(dBm_to_mW_ufixed16@value2+1)& (0+255),b
  4153  010FF4  0101               	movlb	1	; () banked
  4154  010FF6  514A               	movf	_m_power& (0+255),w,b
  4155  010FF8  EC20  F0A8         	call	_dBm_to_mW_ufixed16
  4156                           
  4157                           ;main.c: 531: m_var.writable = 1;
  4158  010FFC  0E01               	movlw	1
  4159  010FFE  0101               	movlb	1	; () banked
  4160  011000  6F80               	movwf	(_m_var+7)& (0+255),b
  4161                           
  4162                           ; BSR set to: 1
  4163                           ;main.c: 532: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  4164  011002  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  4165  011006  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  4166  01100A  EE21  F079         	lfsr	2,_m_var
  4167  01100E  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  4168  011012  0E09               	movlw	9
  4169  011014                     u17511:
  4170  011014  CFDB FFEB          	movff	plusw2,plusw0
  4171  011018  06E8               	decf	wreg,f,c
  4172  01101A  E2FC               	bc	u17511
  4173  01101C  EC5D  F0AF         	call	_encode_ufixed16_variable	;wreg free
  4174  011020  0101               	movlb	1	; () banked
  4175  011022  6FFB               	movwf	??_send_initial_update& (0+255),b
  4176  011024  0101               	movlb	1	; () banked
  4177  011026  51FB               	movf	??_send_initial_update& (0+255),w,b
  4178  011028  0D01               	mullw	1
  4179  01102A  50F3               	movf	prodl,w,c
  4180  01102C  0101               	movlb	1	; () banked
  4181  01102E  273A               	addwf	_p_buffer& (0+255),f,b
  4182  011030  50F4               	movf	prodh,w,c
  4183  011032  0101               	movlb	1	; () banked
  4184  011034  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  4185                           
  4186                           ; BSR set to: 1
  4187                           ;main.c: 534: memcpy(m_var.label, UPTIME_LABEL, 3);
  4188  011036  0E79               	movlw	low _m_var
  4189  011038  0101               	movlb	1	; () banked
  4190  01103A  6F8A               	movwf	memcpy@d1& (0+255),b
  4191  01103C  0E01               	movlw	high _m_var
  4192  01103E  0101               	movlb	1	; () banked
  4193  011040  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  4194  011042  0EFB               	movlw	low _UPTIME_LABEL
  4195  011044  0101               	movlb	1	; () banked
  4196  011046  6F8C               	movwf	memcpy@s1& (0+255),b
  4197  011048  0EFF               	movlw	high _UPTIME_LABEL
  4198  01104A  0101               	movlb	1	; () banked
  4199  01104C  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  4200  01104E  0E00               	movlw	0
  4201  011050  0101               	movlb	1	; () banked
  4202  011052  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  4203  011054  0E03               	movlw	3
  4204  011056  6F8E               	movwf	memcpy@n& (0+255),b
  4205  011058  EC2A  F0B5         	call	_memcpy	;wreg free
  4206                           
  4207                           ;main.c: 535: m_var.unit = 7;
  4208  01105C  0E07               	movlw	7
  4209  01105E  0101               	movlb	1	; () banked
  4210  011060  6F7F               	movwf	(_m_var+6)& (0+255),b
  4211                           
  4212                           ; BSR set to: 1
  4213                           ;main.c: 536: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  4214  011062  C133  F1C7         	movff	_m_uptime_days,floor@x	;volatile
  4215  011066  C134  F1C8         	movff	_m_uptime_days+1,floor@x+1	;volatile
  4216  01106A  C135  F1C9         	movff	_m_uptime_days+2,floor@x+2	;volatile
  4217  01106E  EC02  F0AC         	call	_floor	;wreg free
  4218  011072  C1C7  F3F3         	movff	?_floor,_send_initial_update$5141
  4219  011076  C1C8  F3F4         	movff	?_floor+1,_send_initial_update$5141+1
  4220  01107A  C1C9  F3F5         	movff	?_floor+2,_send_initial_update$5141+2
  4221                           
  4222                           ;main.c: 536: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  4223  01107E  C3F3  F1AE         	movff	_send_initial_update$5141,___fttol@f1
  4224  011082  C3F4  F1AF         	movff	_send_initial_update$5141+1,___fttol@f1+1
  4225  011086  C3F5  F1B0         	movff	_send_initial_update$5141+2,___fttol@f1+2
  4226  01108A  ECA4  F0A5         	call	___fttol	;wreg free
  4227  01108E  0101               	movlb	1	; () banked
  4228  011090  51AE               	movf	?___fttol& (0+255),w,b
  4229  011092  0101               	movlb	1	; () banked
  4230  011094  6F7D               	movwf	(_m_var+4)& (0+255),b
  4231                           
  4232                           ; BSR set to: 1
  4233                           ;main.c: 537: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  4234  011096  C133  F1C7         	movff	_m_uptime_days,floor@x	;volatile
  4235  01109A  C134  F1C8         	movff	_m_uptime_days+1,floor@x+1	;volatile
  4236  01109E  C135  F1C9         	movff	_m_uptime_days+2,floor@x+2	;volatile
  4237  0110A2  EC02  F0AC         	call	_floor	;wreg free
  4238  0110A6  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  4239  0110AA  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  4240  0110AE  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  4241  0110B2  EC01  F0B7         	call	___ftneg	;wreg free
  4242  0110B6  C1CF  F3F6         	movff	?___ftneg,_send_initial_update$5142
  4243  0110BA  C1D0  F3F7         	movff	?___ftneg+1,_send_initial_update$5142+1
  4244  0110BE  C1D1  F3F8         	movff	?___ftneg+2,_send_initial_update$5142+2
  4245                           
  4246                           ;main.c: 537: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  4247  0110C2  0E00               	movlw	0
  4248  0110C4  0101               	movlb	1	; () banked
  4249  0110C6  6FD5               	movwf	___ftmul@f2& (0+255),b
  4250  0110C8  0EC8               	movlw	200
  4251  0110CA  0101               	movlb	1	; () banked
  4252  0110CC  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  4253  0110CE  0E42               	movlw	66
  4254  0110D0  0101               	movlb	1	; () banked
  4255  0110D2  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  4256  0110D4  C133  F195         	movff	_m_uptime_days,___ftadd@f2	;volatile
  4257  0110D8  C134  F196         	movff	_m_uptime_days+1,___ftadd@f2+1	;volatile
  4258  0110DC  C135  F197         	movff	_m_uptime_days+2,___ftadd@f2+2	;volatile
  4259  0110E0  C3F6  F192         	movff	_send_initial_update$5142,___ftadd@f1
  4260  0110E4  C3F7  F193         	movff	_send_initial_update$5142+1,___ftadd@f1+1
  4261  0110E8  C3F8  F194         	movff	_send_initial_update$5142+2,___ftadd@f1+2
  4262  0110EC  EC95  F099         	call	___ftadd	;wreg free
  4263  0110F0  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  4264  0110F4  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  4265  0110F8  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  4266  0110FC  ECA4  F0A3         	call	___ftmul	;wreg free
  4267  011100  C1D2  F3F9         	movff	?___ftmul,_send_initial_update$5143
  4268  011104  C1D3  F3FA         	movff	?___ftmul+1,_send_initial_update$5143+1
  4269  011108  C1D4  F3FB         	movff	?___ftmul+2,_send_initial_update$5143+2
  4270                           
  4271                           ;main.c: 537: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  4272  01110C  C3F9  F1C7         	movff	_send_initial_update$5143,floor@x
  4273  011110  C3FA  F1C8         	movff	_send_initial_update$5143+1,floor@x+1
  4274  011114  C3FB  F1C9         	movff	_send_initial_update$5143+2,floor@x+2
  4275  011118  EC02  F0AC         	call	_floor	;wreg free
  4276  01111C  C1C7  F3FC         	movff	?_floor,_send_initial_update$5144
  4277  011120  C1C8  F3FD         	movff	?_floor+1,_send_initial_update$5144+1
  4278  011124  C1C9  F3FE         	movff	?_floor+2,_send_initial_update$5144+2
  4279                           
  4280                           ;main.c: 537: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  4281  011128  C3FC  F1AE         	movff	_send_initial_update$5144,___fttol@f1
  4282  01112C  C3FD  F1AF         	movff	_send_initial_update$5144+1,___fttol@f1+1
  4283  011130  C3FE  F1B0         	movff	_send_initial_update$5144+2,___fttol@f1+2
  4284  011134  ECA4  F0A5         	call	___fttol	;wreg free
  4285  011138  0101               	movlb	1	; () banked
  4286  01113A  51AE               	movf	?___fttol& (0+255),w,b
  4287  01113C  0101               	movlb	1	; () banked
  4288  01113E  6F7E               	movwf	(_m_var+5)& (0+255),b
  4289                           
  4290                           ; BSR set to: 1
  4291                           ;main.c: 538: m_var.writable = 0;
  4292  011140  0E00               	movlw	0
  4293  011142  0101               	movlb	1	; () banked
  4294  011144  6F80               	movwf	(_m_var+7)& (0+255),b
  4295                           
  4296                           ; BSR set to: 1
  4297                           ;main.c: 539: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  4298  011146  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  4299  01114A  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  4300  01114E  EE21  F079         	lfsr	2,_m_var
  4301  011152  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  4302  011156  0E09               	movlw	9
  4303  011158                     u17521:
  4304  011158  CFDB FFEB          	movff	plusw2,plusw0
  4305  01115C  06E8               	decf	wreg,f,c
  4306  01115E  E2FC               	bc	u17521
  4307  011160  EC5D  F0AF         	call	_encode_ufixed16_variable	;wreg free
  4308  011164  0101               	movlb	1	; () banked
  4309  011166  6FFB               	movwf	??_send_initial_update& (0+255),b
  4310  011168  0101               	movlb	1	; () banked
  4311  01116A  51FB               	movf	??_send_initial_update& (0+255),w,b
  4312  01116C  0D01               	mullw	1
  4313  01116E  50F3               	movf	prodl,w,c
  4314  011170  0101               	movlb	1	; () banked
  4315  011172  273A               	addwf	_p_buffer& (0+255),f,b
  4316  011174  50F4               	movf	prodh,w,c
  4317  011176  0101               	movlb	1	; () banked
  4318  011178  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  4319                           
  4320                           ; BSR set to: 1
  4321                           ;main.c: 541: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  4322  01117A  0E79               	movlw	low _m_var
  4323  01117C  0101               	movlb	1	; () banked
  4324  01117E  6F8A               	movwf	memcpy@d1& (0+255),b
  4325  011180  0E01               	movlw	high _m_var
  4326  011182  0101               	movlb	1	; () banked
  4327  011184  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  4328  011186  0EF7               	movlw	low _UPDATE_FREQUENCY_LABEL
  4329  011188  0101               	movlb	1	; () banked
  4330  01118A  6F8C               	movwf	memcpy@s1& (0+255),b
  4331  01118C  0EFF               	movlw	high _UPDATE_FREQUENCY_LABEL
  4332  01118E  0101               	movlb	1	; () banked
  4333  011190  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  4334  011192  0E00               	movlw	0
  4335  011194  0101               	movlb	1	; () banked
  4336  011196  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  4337  011198  0E03               	movlw	3
  4338  01119A  6F8E               	movwf	memcpy@n& (0+255),b
  4339  01119C  EC2A  F0B5         	call	_memcpy	;wreg free
  4340                           
  4341                           ;main.c: 542: m_var.unit = 4;
  4342  0111A0  0E04               	movlw	4
  4343  0111A2  0101               	movlb	1	; () banked
  4344  0111A4  6F7F               	movwf	(_m_var+6)& (0+255),b
  4345                           
  4346                           ; BSR set to: 1
  4347                           ;main.c: 543: m_var.value_byte1 = m_update_frequency;
  4348  0111A6  C1FF  F17D         	movff	_m_update_frequency,_m_var+4	;volatile
  4349                           
  4350                           ; BSR set to: 1
  4351                           ;main.c: 544: m_var.writable = 1;
  4352  0111AA  0E01               	movlw	1
  4353  0111AC  0101               	movlb	1	; () banked
  4354  0111AE  6F80               	movwf	(_m_var+7)& (0+255),b
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;main.c: 545: p_buffer += encode_uint8_variable(p_buffer, m_var);
  4358  0111B0  C13A  F18A         	movff	_p_buffer,encode_uint8_variable@buffer
  4359  0111B4  C13B  F18B         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  4360  0111B8  EE21  F079         	lfsr	2,_m_var
  4361  0111BC  EE01  F08C         	lfsr	0,encode_uint8_variable@var
  4362  0111C0  0E09               	movlw	9
  4363  0111C2                     u17531:
  4364  0111C2  CFDB FFEB          	movff	plusw2,plusw0
  4365  0111C6  06E8               	decf	wreg,f,c
  4366  0111C8  E2FC               	bc	u17531
  4367  0111CA  EC1F  F0B1         	call	_encode_uint8_variable	;wreg free
  4368  0111CE  0101               	movlb	1	; () banked
  4369  0111D0  6FFB               	movwf	??_send_initial_update& (0+255),b
  4370  0111D2  0101               	movlb	1	; () banked
  4371  0111D4  51FB               	movf	??_send_initial_update& (0+255),w,b
  4372  0111D6  0D01               	mullw	1
  4373  0111D8  50F3               	movf	prodl,w,c
  4374  0111DA  0101               	movlb	1	; () banked
  4375  0111DC  273A               	addwf	_p_buffer& (0+255),f,b
  4376  0111DE  50F4               	movf	prodh,w,c
  4377  0111E0  0101               	movlb	1	; () banked
  4378  0111E2  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;main.c: 547: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  4382  0111E4  0EE0               	movlw	low _m_buffer
  4383  0111E6  0103               	movlb	3	; () banked
  4384  0111E8  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  4385  0111EA  0E02               	movlw	high _m_buffer
  4386  0111EC  0103               	movlb	3	; () banked
  4387  0111EE  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4388  0111F0  0EE0               	movlw	_m_buffer& (0+255)
  4389  0111F2  0800               	sublw	0
  4390  0111F4  0101               	movlb	1	; () banked
  4391  0111F6  253A               	addwf	_p_buffer& (0+255),w,b
  4392  0111F8  0103               	movlb	3	; () banked
  4393  0111FA  6FE9               	movwf	do_UPDATE@size& (0+255),b
  4394  0111FC  0E00               	movlw	0
  4395  0111FE  0103               	movlb	3	; () banked
  4396  011200  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  4397  011202  EC2F  F0A2         	call	_do_UPDATE	;wreg free
  4398  011206  0900               	iorlw	0
  4399  011208  A4D8               	btfss	status,2,c
  4400  01120A  D002               	goto	l14661
  4401                           
  4402                           ;main.c: 548: return 0;
  4403  01120C  0E00               	movlw	0
  4404  01120E  0012               	return	
  4405  011210                     l14661:
  4406                           
  4407                           ;main.c: 552: p_buffer = m_buffer;
  4408  011210  0EE0               	movlw	low _m_buffer
  4409  011212  0101               	movlb	1	; () banked
  4410  011214  6F3A               	movwf	_p_buffer& (0+255),b
  4411  011216  0E02               	movlw	high _m_buffer
  4412  011218  0101               	movlb	1	; () banked
  4413  01121A  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  4414                           
  4415                           ; BSR set to: 1
  4416                           ;main.c: 553: memcpy(m_var.label, FAILEDMSG_LABEL, 3);
  4417  01121C  0E79               	movlw	low _m_var
  4418  01121E  0101               	movlb	1	; () banked
  4419  011220  6F8A               	movwf	memcpy@d1& (0+255),b
  4420  011222  0E01               	movlw	high _m_var
  4421  011224  0101               	movlb	1	; () banked
  4422  011226  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  4423  011228  0EE3               	movlw	low _FAILEDMSG_LABEL
  4424  01122A  0101               	movlb	1	; () banked
  4425  01122C  6F8C               	movwf	memcpy@s1& (0+255),b
  4426  01122E  0EFF               	movlw	high _FAILEDMSG_LABEL
  4427  011230  0101               	movlb	1	; () banked
  4428  011232  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  4429  011234  0E00               	movlw	0
  4430  011236  0101               	movlb	1	; () banked
  4431  011238  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  4432  01123A  0E03               	movlw	3
  4433  01123C  6F8E               	movwf	memcpy@n& (0+255),b
  4434  01123E  EC2A  F0B5         	call	_memcpy	;wreg free
  4435                           
  4436                           ;main.c: 554: m_var.unit = 3;
  4437  011242  0E03               	movlw	3
  4438  011244  0101               	movlb	1	; () banked
  4439  011246  6F7F               	movwf	(_m_var+6)& (0+255),b
  4440                           
  4441                           ; BSR set to: 1
  4442                           ;main.c: 555: float tmp2 = (float)(m_failed_messages*100)/(float)(m_failed_messages + m_
      +                          sent_messages);
  4443  011248  C11E  F18A         	movff	_m_failed_messages,___lmul@multiplier
  4444  01124C  C11F  F18B         	movff	_m_failed_messages+1,___lmul@multiplier+1
  4445  011250  C120  F18C         	movff	_m_failed_messages+2,___lmul@multiplier+2
  4446  011254  C121  F18D         	movff	_m_failed_messages+3,___lmul@multiplier+3
  4447  011258  0E64               	movlw	100
  4448  01125A  0101               	movlb	1	; () banked
  4449  01125C  6F8E               	movwf	___lmul@multiplicand& (0+255),b
  4450  01125E  0E00               	movlw	0
  4451  011260  6F8F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4452  011262  0E00               	movlw	0
  4453  011264  6F90               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4454  011266  0E00               	movlw	0
  4455  011268  6F91               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4456  01126A  ECDD  F0B3         	call	___lmul	;wreg free
  4457  01126E  C18A  F196         	movff	?___lmul,___lltoft@c
  4458  011272  C18B  F197         	movff	?___lmul+1,___lltoft@c+1
  4459  011276  C18C  F198         	movff	?___lmul+2,___lltoft@c+2
  4460  01127A  C18D  F199         	movff	?___lmul+3,___lltoft@c+3
  4461  01127E  EC26  F0B3         	call	___lltoft	;wreg free
  4462  011282  C196  F19F         	movff	?___lltoft,___ftdiv@f1
  4463  011286  C197  F1A0         	movff	?___lltoft+1,___ftdiv@f1+1
  4464  01128A  C198  F1A1         	movff	?___lltoft+2,___ftdiv@f1+2
  4465  01128E  0101               	movlb	1	; () banked
  4466  011290  5122               	movf	_m_sent_messages& (0+255),w,b
  4467  011292  0101               	movlb	1	; () banked
  4468  011294  251E               	addwf	_m_failed_messages& (0+255),w,b
  4469  011296  0101               	movlb	1	; () banked
  4470  011298  6F96               	movwf	___lltoft@c& (0+255),b
  4471  01129A  0101               	movlb	1	; () banked
  4472  01129C  5123               	movf	(_m_sent_messages+1)& (0+255),w,b
  4473  01129E  0101               	movlb	1	; () banked
  4474  0112A0  211F               	addwfc	(_m_failed_messages+1)& (0+255),w,b
  4475  0112A2  0101               	movlb	1	; () banked
  4476  0112A4  6F97               	movwf	(___lltoft@c+1)& (0+255),b
  4477  0112A6  0101               	movlb	1	; () banked
  4478  0112A8  5124               	movf	(_m_sent_messages+2)& (0+255),w,b
  4479  0112AA  0101               	movlb	1	; () banked
  4480  0112AC  2120               	addwfc	(_m_failed_messages+2)& (0+255),w,b
  4481  0112AE  0101               	movlb	1	; () banked
  4482  0112B0  6F98               	movwf	(___lltoft@c+2)& (0+255),b
  4483  0112B2  0101               	movlb	1	; () banked
  4484  0112B4  5125               	movf	(_m_sent_messages+3)& (0+255),w,b
  4485  0112B6  0101               	movlb	1	; () banked
  4486  0112B8  2121               	addwfc	(_m_failed_messages+3)& (0+255),w,b
  4487  0112BA  0101               	movlb	1	; () banked
  4488  0112BC  6F99               	movwf	(___lltoft@c+3)& (0+255),b
  4489  0112BE  EC26  F0B3         	call	___lltoft	;wreg free
  4490  0112C2  C196  F1A2         	movff	?___lltoft,___ftdiv@f2
  4491  0112C6  C197  F1A3         	movff	?___lltoft+1,___ftdiv@f2+1
  4492  0112CA  C198  F1A4         	movff	?___lltoft+2,___ftdiv@f2+2
  4493  0112CE  ECFE  F0A4         	call	___ftdiv	;wreg free
  4494  0112D2  C19F  F3F0         	movff	?___ftdiv,send_initial_update@tmp2
  4495  0112D6  C1A0  F3F1         	movff	?___ftdiv+1,send_initial_update@tmp2+1
  4496  0112DA  C1A1  F3F2         	movff	?___ftdiv+2,send_initial_update@tmp2+2
  4497                           
  4498                           ;main.c: 556: m_var.value_byte1 = (uint8_t)floor(tmp2);
  4499  0112DE  C3F0  F1C7         	movff	send_initial_update@tmp2,floor@x
  4500  0112E2  C3F1  F1C8         	movff	send_initial_update@tmp2+1,floor@x+1
  4501  0112E6  C3F2  F1C9         	movff	send_initial_update@tmp2+2,floor@x+2
  4502  0112EA  EC02  F0AC         	call	_floor	;wreg free
  4503  0112EE  C1C7  F3F3         	movff	?_floor,_send_initial_update$5141
  4504  0112F2  C1C8  F3F4         	movff	?_floor+1,_send_initial_update$5141+1
  4505  0112F6  C1C9  F3F5         	movff	?_floor+2,_send_initial_update$5141+2
  4506                           
  4507                           ;main.c: 556: m_var.value_byte1 = (uint8_t)floor(tmp2);
  4508  0112FA  C3F3  F1AE         	movff	_send_initial_update$5141,___fttol@f1
  4509  0112FE  C3F4  F1AF         	movff	_send_initial_update$5141+1,___fttol@f1+1
  4510  011302  C3F5  F1B0         	movff	_send_initial_update$5141+2,___fttol@f1+2
  4511  011306  ECA4  F0A5         	call	___fttol	;wreg free
  4512  01130A  0101               	movlb	1	; () banked
  4513  01130C  51AE               	movf	?___fttol& (0+255),w,b
  4514  01130E  0101               	movlb	1	; () banked
  4515  011310  6F7D               	movwf	(_m_var+4)& (0+255),b
  4516                           
  4517                           ; BSR set to: 1
  4518                           ;main.c: 557: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4519  011312  C3F0  F1C7         	movff	send_initial_update@tmp2,floor@x
  4520  011316  C3F1  F1C8         	movff	send_initial_update@tmp2+1,floor@x+1
  4521  01131A  C3F2  F1C9         	movff	send_initial_update@tmp2+2,floor@x+2
  4522  01131E  EC02  F0AC         	call	_floor	;wreg free
  4523  011322  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  4524  011326  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  4525  01132A  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  4526  01132E  EC01  F0B7         	call	___ftneg	;wreg free
  4527  011332  C1CF  F3F6         	movff	?___ftneg,_send_initial_update$5142
  4528  011336  C1D0  F3F7         	movff	?___ftneg+1,_send_initial_update$5142+1
  4529  01133A  C1D1  F3F8         	movff	?___ftneg+2,_send_initial_update$5142+2
  4530                           
  4531                           ;main.c: 557: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4532  01133E  0E00               	movlw	0
  4533  011340  0101               	movlb	1	; () banked
  4534  011342  6FD5               	movwf	___ftmul@f2& (0+255),b
  4535  011344  0EC8               	movlw	200
  4536  011346  0101               	movlb	1	; () banked
  4537  011348  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  4538  01134A  0E42               	movlw	66
  4539  01134C  0101               	movlb	1	; () banked
  4540  01134E  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  4541  011350  C3F0  F195         	movff	send_initial_update@tmp2,___ftadd@f2
  4542  011354  C3F1  F196         	movff	send_initial_update@tmp2+1,___ftadd@f2+1
  4543  011358  C3F2  F197         	movff	send_initial_update@tmp2+2,___ftadd@f2+2
  4544  01135C  C3F6  F192         	movff	_send_initial_update$5142,___ftadd@f1
  4545  011360  C3F7  F193         	movff	_send_initial_update$5142+1,___ftadd@f1+1
  4546  011364  C3F8  F194         	movff	_send_initial_update$5142+2,___ftadd@f1+2
  4547  011368  EC95  F099         	call	___ftadd	;wreg free
  4548  01136C  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  4549  011370  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  4550  011374  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  4551  011378  ECA4  F0A3         	call	___ftmul	;wreg free
  4552  01137C  C1D2  F3F9         	movff	?___ftmul,_send_initial_update$5143
  4553  011380  C1D3  F3FA         	movff	?___ftmul+1,_send_initial_update$5143+1
  4554  011384  C1D4  F3FB         	movff	?___ftmul+2,_send_initial_update$5143+2
  4555                           
  4556                           ;main.c: 557: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4557  011388  C3F9  F1C7         	movff	_send_initial_update$5143,floor@x
  4558  01138C  C3FA  F1C8         	movff	_send_initial_update$5143+1,floor@x+1
  4559  011390  C3FB  F1C9         	movff	_send_initial_update$5143+2,floor@x+2
  4560  011394  EC02  F0AC         	call	_floor	;wreg free
  4561  011398  C1C7  F3FC         	movff	?_floor,_send_initial_update$5144
  4562  01139C  C1C8  F3FD         	movff	?_floor+1,_send_initial_update$5144+1
  4563  0113A0  C1C9  F3FE         	movff	?_floor+2,_send_initial_update$5144+2
  4564                           
  4565                           ;main.c: 557: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4566  0113A4  C3FC  F1AE         	movff	_send_initial_update$5144,___fttol@f1
  4567  0113A8  C3FD  F1AF         	movff	_send_initial_update$5144+1,___fttol@f1+1
  4568  0113AC  C3FE  F1B0         	movff	_send_initial_update$5144+2,___fttol@f1+2
  4569  0113B0  ECA4  F0A5         	call	___fttol	;wreg free
  4570  0113B4  0101               	movlb	1	; () banked
  4571  0113B6  51AE               	movf	?___fttol& (0+255),w,b
  4572  0113B8  0101               	movlb	1	; () banked
  4573  0113BA  6F7E               	movwf	(_m_var+5)& (0+255),b
  4574                           
  4575                           ; BSR set to: 1
  4576                           ;main.c: 558: m_var.writable = 0;
  4577  0113BC  0E00               	movlw	0
  4578  0113BE  0101               	movlb	1	; () banked
  4579  0113C0  6F80               	movwf	(_m_var+7)& (0+255),b
  4580                           
  4581                           ; BSR set to: 1
  4582                           ;main.c: 559: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  4583  0113C2  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  4584  0113C6  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  4585  0113CA  EE21  F079         	lfsr	2,_m_var
  4586  0113CE  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  4587  0113D2  0E09               	movlw	9
  4588  0113D4                     u17551:
  4589  0113D4  CFDB FFEB          	movff	plusw2,plusw0
  4590  0113D8  06E8               	decf	wreg,f,c
  4591  0113DA  E2FC               	bc	u17551
  4592  0113DC  EC5D  F0AF         	call	_encode_ufixed16_variable	;wreg free
  4593  0113E0  0101               	movlb	1	; () banked
  4594  0113E2  6FFB               	movwf	??_send_initial_update& (0+255),b
  4595  0113E4  0101               	movlb	1	; () banked
  4596  0113E6  51FB               	movf	??_send_initial_update& (0+255),w,b
  4597  0113E8  0D01               	mullw	1
  4598  0113EA  50F3               	movf	prodl,w,c
  4599  0113EC  0101               	movlb	1	; () banked
  4600  0113EE  273A               	addwf	_p_buffer& (0+255),f,b
  4601  0113F0  50F4               	movf	prodh,w,c
  4602  0113F2  0101               	movlb	1	; () banked
  4603  0113F4  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  4604                           
  4605                           ; BSR set to: 1
  4606                           ;main.c: 561: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  4607  0113F6  0EE0               	movlw	low _m_buffer
  4608  0113F8  0103               	movlb	3	; () banked
  4609  0113FA  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  4610  0113FC  0E02               	movlw	high _m_buffer
  4611  0113FE  0103               	movlb	3	; () banked
  4612  011400  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4613  011402  0EE0               	movlw	_m_buffer& (0+255)
  4614  011404  0800               	sublw	0
  4615  011406  0101               	movlb	1	; () banked
  4616  011408  253A               	addwf	_p_buffer& (0+255),w,b
  4617  01140A  0103               	movlb	3	; () banked
  4618  01140C  6FE9               	movwf	do_UPDATE@size& (0+255),b
  4619  01140E  0E01               	movlw	1
  4620  011410  0103               	movlb	3	; () banked
  4621  011412  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  4622  011414  EC2F  F0A2         	call	_do_UPDATE	;wreg free
  4623  011418  0012               	return	
  4624  01141A                     __end_of_send_initial_update:
  4625                           	opt stack 0
  4626                           tblptru	equ	0xFF8
  4627                           tblptrh	equ	0xFF7
  4628                           tblptrl	equ	0xFF6
  4629                           tablat	equ	0xFF5
  4630                           prodh	equ	0xFF4
  4631                           prodl	equ	0xFF3
  4632                           postinc0	equ	0xFEE
  4633                           plusw0	equ	0xFEB
  4634                           wreg	equ	0xFE8
  4635                           postdec1	equ	0xFE5
  4636                           fsr1h	equ	0xFE2
  4637                           fsr1l	equ	0xFE1
  4638                           indf2	equ	0xFDF
  4639                           postinc2	equ	0xFDE
  4640                           plusw2	equ	0xFDB
  4641                           fsr2h	equ	0xFDA
  4642                           fsr2l	equ	0xFD9
  4643                           status	equ	0xFD8
  4644                           
  4645 ;; *************** function _floor *****************
  4646 ;; Defined at:
  4647 ;;		line 13 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  x               3   61[BANK1 ] unsigned char 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  i               3   64[BANK1 ] unsigned char 
  4652 ;;  expon           2   67[BANK1 ] int 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  3   61[BANK1 ] int 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4662 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4663 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4665 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4666 ;;Total ram usage:        8 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:   11
  4669 ;; This function calls:
  4670 ;;		___altoft
  4671 ;;		___ftadd
  4672 ;;		___ftge
  4673 ;;		___fttol
  4674 ;;		_frexp
  4675 ;; This function is called by:
  4676 ;;		_send_initial_update
  4677 ;;		_send_periodical_update
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text4
  4682  015804                     __ptext4:
  4683                           	opt stack 0
  4684  015804                     _floor:
  4685                           	opt stack 18
  4686                           
  4687                           ;incstack = 0
  4688  015804  C1C7  F18A         	movff	floor@x,frexp@value
  4689  015808  C1C8  F18B         	movff	floor@x+1,frexp@value+1
  4690  01580C  C1C9  F18C         	movff	floor@x+2,frexp@value+2
  4691  015810  0ECD               	movlw	low floor@expon
  4692  015812  0101               	movlb	1	; () banked
  4693  015814  6F8D               	movwf	frexp@eptr& (0+255),b
  4694  015816  0E01               	movlw	high floor@expon
  4695  015818  0101               	movlb	1	; () banked
  4696  01581A  6F8E               	movwf	(frexp@eptr+1)& (0+255),b
  4697  01581C  EC59  F0B2         	call	_frexp	;wreg free
  4698  015820  0101               	movlb	1	; () banked
  4699  015822  AFCE               	btfss	(floor@expon+1)& (0+255),7,b
  4700  015824  D017               	goto	l13555
  4701                           
  4702                           ; BSR set to: 1
  4703  015826  0101               	movlb	1	; () banked
  4704  015828  AFC9               	btfss	(floor@x+2)& (0+255),7,b
  4705  01582A  D00A               	goto	l13551
  4706                           
  4707                           ; BSR set to: 1
  4708  01582C  0E00               	movlw	0
  4709  01582E  0101               	movlb	1	; () banked
  4710  015830  6FC7               	movwf	?_floor& (0+255),b
  4711  015832  0E80               	movlw	128
  4712  015834  0101               	movlb	1	; () banked
  4713  015836  6FC8               	movwf	(?_floor+1)& (0+255),b
  4714  015838  0EBF               	movlw	191
  4715  01583A  0101               	movlb	1	; () banked
  4716  01583C  6FC9               	movwf	(?_floor+2)& (0+255),b
  4717                           
  4718                           ; BSR set to: 1
  4719  01583E  0012               	return	
  4720  015840                     l13551:
  4721                           
  4722                           ; BSR set to: 1
  4723  015840  0E00               	movlw	0
  4724  015842  0101               	movlb	1	; () banked
  4725  015844  6FC7               	movwf	?_floor& (0+255),b
  4726  015846  0E00               	movlw	0
  4727  015848  0101               	movlb	1	; () banked
  4728  01584A  6FC8               	movwf	(?_floor+1)& (0+255),b
  4729  01584C  0E00               	movlw	0
  4730  01584E  0101               	movlb	1	; () banked
  4731  015850  6FC9               	movwf	(?_floor+2)& (0+255),b
  4732                           
  4733                           ; BSR set to: 1
  4734  015852  0012               	return	
  4735  015854                     l13555:
  4736                           
  4737                           ; BSR set to: 1
  4738  015854  0101               	movlb	1	; () banked
  4739  015856  51CE               	movf	(floor@expon+1)& (0+255),w,b
  4740  015858  E105               	bnz	u16080
  4741  01585A  0E15               	movlw	21
  4742  01585C  0101               	movlb	1	; () banked
  4743  01585E  5DCD               	subwf	floor@expon& (0+255),w,b
  4744  015860  A0D8               	btfss	status,0,c
  4745  015862  D007               	goto	l13559
  4746  015864                     u16080:
  4747                           
  4748                           ; BSR set to: 1
  4749  015864  C1C7  F1C7         	movff	floor@x,?_floor
  4750  015868  C1C8  F1C8         	movff	floor@x+1,?_floor+1
  4751  01586C  C1C9  F1C9         	movff	floor@x+2,?_floor+2
  4752  015870  0012               	return	
  4753  015872                     l13559:
  4754                           
  4755                           ; BSR set to: 1
  4756  015872  C1C7  F1AE         	movff	floor@x,___fttol@f1
  4757  015876  C1C8  F1AF         	movff	floor@x+1,___fttol@f1+1
  4758  01587A  C1C9  F1B0         	movff	floor@x+2,___fttol@f1+2
  4759  01587E  ECA4  F0A5         	call	___fttol	;wreg free
  4760  015882  C1AE  F1BD         	movff	?___fttol,___altoft@c
  4761  015886  C1AF  F1BE         	movff	?___fttol+1,___altoft@c+1
  4762  01588A  C1B0  F1BF         	movff	?___fttol+2,___altoft@c+2
  4763  01588E  C1B1  F1C0         	movff	?___fttol+3,___altoft@c+3
  4764  015892  EC72  F0B1         	call	___altoft	;wreg free
  4765  015896  C1BD  F1CA         	movff	?___altoft,floor@i
  4766  01589A  C1BE  F1CB         	movff	?___altoft+1,floor@i+1
  4767  01589E  C1BF  F1CC         	movff	?___altoft+2,floor@i+2
  4768  0158A2  C1C7  F18A         	movff	floor@x,___ftge@ff1
  4769  0158A6  C1C8  F18B         	movff	floor@x+1,___ftge@ff1+1
  4770  0158AA  C1C9  F18C         	movff	floor@x+2,___ftge@ff1+2
  4771  0158AE  C1CA  F18D         	movff	floor@i,___ftge@ff2
  4772  0158B2  C1CB  F18E         	movff	floor@i+1,___ftge@ff2+1
  4773  0158B6  C1CC  F18F         	movff	floor@i+2,___ftge@ff2+2
  4774  0158BA  ECD7  F0AD         	call	___ftge	;wreg free
  4775  0158BE  0101               	movlb	1	; () banked
  4776  0158C0  B0D8               	btfsc	status,0,c
  4777  0158C2  D018               	goto	l1746
  4778                           
  4779                           ; BSR set to: 1
  4780  0158C4  C1CA  F192         	movff	floor@i,___ftadd@f1
  4781  0158C8  C1CB  F193         	movff	floor@i+1,___ftadd@f1+1
  4782  0158CC  C1CC  F194         	movff	floor@i+2,___ftadd@f1+2
  4783  0158D0  0E00               	movlw	0
  4784  0158D2  0101               	movlb	1	; () banked
  4785  0158D4  6F95               	movwf	___ftadd@f2& (0+255),b
  4786  0158D6  0E80               	movlw	128
  4787  0158D8  0101               	movlb	1	; () banked
  4788  0158DA  6F96               	movwf	(___ftadd@f2+1)& (0+255),b
  4789  0158DC  0EBF               	movlw	191
  4790  0158DE  0101               	movlb	1	; () banked
  4791  0158E0  6F97               	movwf	(___ftadd@f2+2)& (0+255),b
  4792  0158E2  EC95  F099         	call	___ftadd	;wreg free
  4793  0158E6  C192  F1C7         	movff	?___ftadd,?_floor
  4794  0158EA  C193  F1C8         	movff	?___ftadd+1,?_floor+1
  4795  0158EE  C194  F1C9         	movff	?___ftadd+2,?_floor+2
  4796  0158F2  0012               	return	
  4797  0158F4                     l1746:
  4798                           
  4799                           ; BSR set to: 1
  4800  0158F4  C1CA  F1C7         	movff	floor@i,?_floor
  4801  0158F8  C1CB  F1C8         	movff	floor@i+1,?_floor+1
  4802  0158FC  C1CC  F1C9         	movff	floor@i+2,?_floor+2
  4803  015900  0012               	return		;funcret
  4804  015902                     __end_of_floor:
  4805                           	opt stack 0
  4806                           tblptru	equ	0xFF8
  4807                           tblptrh	equ	0xFF7
  4808                           tblptrl	equ	0xFF6
  4809                           tablat	equ	0xFF5
  4810                           prodh	equ	0xFF4
  4811                           prodl	equ	0xFF3
  4812                           postinc0	equ	0xFEE
  4813                           plusw0	equ	0xFEB
  4814                           wreg	equ	0xFE8
  4815                           postdec1	equ	0xFE5
  4816                           fsr1h	equ	0xFE2
  4817                           fsr1l	equ	0xFE1
  4818                           indf2	equ	0xFDF
  4819                           postinc2	equ	0xFDE
  4820                           plusw2	equ	0xFDB
  4821                           fsr2h	equ	0xFDA
  4822                           fsr2l	equ	0xFD9
  4823                           status	equ	0xFD8
  4824                           
  4825 ;; *************** function _frexp *****************
  4826 ;; Defined at:
  4827 ;;		line 254 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  value           3    0[BANK1 ] int 
  4830 ;;  eptr            2    3[BANK1 ] PTR int 
  4831 ;;		 -> floor@expon(2), 
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  3    0[BANK1 ] PTR int 
  4836 ;; Registers used:
  4837 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4843 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4845 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4846 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4847 ;;Total ram usage:        7 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; Hardware stack levels required when called:    9
  4850 ;; This function calls:
  4851 ;;		Nothing
  4852 ;; This function is called by:
  4853 ;;		_floor
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text5
  4858  0164B2                     __ptext5:
  4859                           	opt stack 0
  4860  0164B2                     _frexp:
  4861                           	opt stack 19
  4862                           
  4863                           ;incstack = 0
  4864  0164B2  0101               	movlb	1	; () banked
  4865  0164B4  518A               	movf	frexp@value& (0+255),w,b
  4866  0164B6  0101               	movlb	1	; () banked
  4867  0164B8  118B               	iorwf	(frexp@value+1)& (0+255),w,b
  4868  0164BA  0101               	movlb	1	; () banked
  4869  0164BC  118C               	iorwf	(frexp@value+2)& (0+255),w,b
  4870  0164BE  A4D8               	btfss	status,2,c
  4871  0164C0  D009               	goto	l13003
  4872                           
  4873                           ; BSR set to: 1
  4874  0164C2  C18D  FFD9         	movff	frexp@eptr,fsr2l
  4875  0164C6  C18E  FFDA         	movff	frexp@eptr+1,fsr2h
  4876  0164CA  0E00               	movlw	0
  4877  0164CC  6EDE               	movwf	postinc2,c
  4878  0164CE  0E00               	movlw	0
  4879  0164D0  6EDD               	movwf	postdec2,c
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;	Return value of _frexp is never used
  4883  0164D2  0012               	return	
  4884  0164D4                     l13003:
  4885                           
  4886                           ; BSR set to: 1
  4887  0164D4  0101               	movlb	1	; () banked
  4888  0164D6  518C               	movf	(frexp@value+2)& (0+255),w,b
  4889  0164D8  0B7F               	andlw	127
  4890  0164DA  0101               	movlb	1	; () banked
  4891  0164DC  6F8F               	movwf	??_frexp& (0+255),b
  4892  0164DE  6B90               	clrf	(??_frexp+1)& (0+255),b
  4893  0164E0  90D8               	bcf	status,0,c
  4894  0164E2  0101               	movlb	1	; () banked
  4895  0164E4  378F               	rlcf	??_frexp& (0+255),f,b
  4896  0164E6  3790               	rlcf	(??_frexp+1)& (0+255),f,b
  4897  0164E8  C18D  FFD9         	movff	frexp@eptr,fsr2l
  4898  0164EC  C18E  FFDA         	movff	frexp@eptr+1,fsr2h
  4899  0164F0  C18F  FFDE         	movff	??_frexp,postinc2
  4900  0164F4  C190  FFDD         	movff	??_frexp+1,postdec2
  4901  0164F8  0101               	movlb	1	; () banked
  4902  0164FA  AF8B               	btfss	(frexp@value+1)& (0+255),7,b
  4903  0164FC  D004               	goto	u15360
  4904  0164FE  0101               	movlb	1	; () banked
  4905  016500  6B8F               	clrf	??_frexp& (0+255),b
  4906  016502  2B8F               	incf	??_frexp& (0+255),f,b
  4907  016504  D002               	goto	u15368
  4908  016506                     u15360:
  4909  016506  0101               	movlb	1	; () banked
  4910  016508  6B8F               	clrf	??_frexp& (0+255),b
  4911  01650A                     u15368:
  4912  01650A  0101               	movlb	1	; () banked
  4913  01650C  518F               	movf	??_frexp& (0+255),w,b
  4914  01650E  C18D  FFD9         	movff	frexp@eptr,fsr2l
  4915  016512  C18E  FFDA         	movff	frexp@eptr+1,fsr2h
  4916  016516  12DE               	iorwf	postinc2,f,c
  4917  016518  0E00               	movlw	0
  4918  01651A  12DD               	iorwf	postdec2,f,c
  4919                           
  4920                           ; BSR set to: 1
  4921  01651C  C18D  FFD9         	movff	frexp@eptr,fsr2l
  4922  016520  C18E  FFDA         	movff	frexp@eptr+1,fsr2h
  4923  016524  0E82               	movlw	130
  4924  016526  26DE               	addwf	postinc2,f,c
  4925  016528  0EFF               	movlw	255
  4926  01652A  22DD               	addwfc	postdec2,f,c
  4927                           
  4928                           ; BSR set to: 1
  4929  01652C  0101               	movlb	1	; () banked
  4930  01652E  818C               	bsf	(frexp@value+2)& (0+255),0,b
  4931  016530  838C               	bsf	(frexp@value+2)& (0+255),1,b
  4932  016532  858C               	bsf	(frexp@value+2)& (0+255),2,b
  4933  016534  878C               	bsf	(frexp@value+2)& (0+255),3,b
  4934  016536  898C               	bsf	(frexp@value+2)& (0+255),4,b
  4935  016538  8B8C               	bsf	(frexp@value+2)& (0+255),5,b
  4936  01653A  9D8C               	bcf	(frexp@value+2)& (0+255),6,b
  4937                           
  4938                           ; BSR set to: 1
  4939  01653C  0101               	movlb	1	; () banked
  4940  01653E  9F8B               	bcf	(frexp@value+1)& (0+255),7,b
  4941  016540  0012               	return	
  4942  016542                     __end_of_frexp:
  4943                           	opt stack 0
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           prodh	equ	0xFF4
  4949                           prodl	equ	0xFF3
  4950                           postinc0	equ	0xFEE
  4951                           plusw0	equ	0xFEB
  4952                           wreg	equ	0xFE8
  4953                           postdec1	equ	0xFE5
  4954                           fsr1h	equ	0xFE2
  4955                           fsr1l	equ	0xFE1
  4956                           indf2	equ	0xFDF
  4957                           postinc2	equ	0xFDE
  4958                           postdec2	equ	0xFDD
  4959                           plusw2	equ	0xFDB
  4960                           fsr2h	equ	0xFDA
  4961                           fsr2l	equ	0xFD9
  4962                           status	equ	0xFD8
  4963                           
  4964 ;; *************** function ___ftge *****************
  4965 ;; Defined at:
  4966 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  ff1             3    0[BANK1 ] float 
  4969 ;;  ff2             3    3[BANK1 ] float 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4981 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;Total ram usage:        9 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    9
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_floor
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text6
  4996  015BAE                     __ptext6:
  4997                           	opt stack 0
  4998  015BAE                     ___ftge:
  4999                           	opt stack 19
  5000                           
  5001                           ; BSR set to: 1
  5002                           ;incstack = 0
  5003  015BAE  0101               	movlb	1	; () banked
  5004  015BB0  AF8C               	btfss	(___ftge@ff1+2)& (0+255),7,b
  5005  015BB2  D01D               	goto	l13017
  5006                           
  5007                           ; BSR set to: 1
  5008  015BB4  C18A  F190         	movff	___ftge@ff1,??___ftge
  5009  015BB8  C18B  F191         	movff	___ftge@ff1+1,??___ftge+1
  5010  015BBC  C18C  F192         	movff	___ftge@ff1+2,??___ftge+2
  5011  015BC0  0101               	movlb	1	; () banked
  5012  015BC2  1F90               	comf	??___ftge& (0+255),f,b
  5013  015BC4  1F91               	comf	(??___ftge+1)& (0+255),f,b
  5014  015BC6  1F92               	comf	(??___ftge+2)& (0+255),f,b
  5015  015BC8  2B90               	incf	??___ftge& (0+255),f,b
  5016  015BCA  0E00               	movlw	0
  5017  015BCC  2391               	addwfc	(??___ftge+1)& (0+255),f,b
  5018  015BCE  2392               	addwfc	(??___ftge+2)& (0+255),f,b
  5019  015BD0  0E00               	movlw	0
  5020  015BD2  0101               	movlb	1	; () banked
  5021  015BD4  2590               	addwf	??___ftge& (0+255),w,b
  5022  015BD6  0101               	movlb	1	; () banked
  5023  015BD8  6F8A               	movwf	___ftge@ff1& (0+255),b
  5024  015BDA  0E00               	movlw	0
  5025  015BDC  0101               	movlb	1	; () banked
  5026  015BDE  2191               	addwfc	(??___ftge+1)& (0+255),w,b
  5027  015BE0  0101               	movlb	1	; () banked
  5028  015BE2  6F8B               	movwf	(___ftge@ff1+1)& (0+255),b
  5029  015BE4  0E80               	movlw	128
  5030  015BE6  0101               	movlb	1	; () banked
  5031  015BE8  2192               	addwfc	(??___ftge+2)& (0+255),w,b
  5032  015BEA  0101               	movlb	1	; () banked
  5033  015BEC  6F8C               	movwf	(___ftge@ff1+2)& (0+255),b
  5034  015BEE                     l13017:
  5035                           
  5036                           ; BSR set to: 1
  5037  015BEE  0101               	movlb	1	; () banked
  5038  015BF0  AF8F               	btfss	(___ftge@ff2+2)& (0+255),7,b
  5039  015BF2  D01D               	goto	l13021
  5040                           
  5041                           ; BSR set to: 1
  5042  015BF4  C18D  F190         	movff	___ftge@ff2,??___ftge
  5043  015BF8  C18E  F191         	movff	___ftge@ff2+1,??___ftge+1
  5044  015BFC  C18F  F192         	movff	___ftge@ff2+2,??___ftge+2
  5045  015C00  0101               	movlb	1	; () banked
  5046  015C02  1F90               	comf	??___ftge& (0+255),f,b
  5047  015C04  1F91               	comf	(??___ftge+1)& (0+255),f,b
  5048  015C06  1F92               	comf	(??___ftge+2)& (0+255),f,b
  5049  015C08  2B90               	incf	??___ftge& (0+255),f,b
  5050  015C0A  0E00               	movlw	0
  5051  015C0C  2391               	addwfc	(??___ftge+1)& (0+255),f,b
  5052  015C0E  2392               	addwfc	(??___ftge+2)& (0+255),f,b
  5053  015C10  0E00               	movlw	0
  5054  015C12  0101               	movlb	1	; () banked
  5055  015C14  2590               	addwf	??___ftge& (0+255),w,b
  5056  015C16  0101               	movlb	1	; () banked
  5057  015C18  6F8D               	movwf	___ftge@ff2& (0+255),b
  5058  015C1A  0E00               	movlw	0
  5059  015C1C  0101               	movlb	1	; () banked
  5060  015C1E  2191               	addwfc	(??___ftge+1)& (0+255),w,b
  5061  015C20  0101               	movlb	1	; () banked
  5062  015C22  6F8E               	movwf	(___ftge@ff2+1)& (0+255),b
  5063  015C24  0E80               	movlw	128
  5064  015C26  0101               	movlb	1	; () banked
  5065  015C28  2192               	addwfc	(??___ftge+2)& (0+255),w,b
  5066  015C2A  0101               	movlb	1	; () banked
  5067  015C2C  6F8F               	movwf	(___ftge@ff2+2)& (0+255),b
  5068  015C2E                     l13021:
  5069                           
  5070                           ; BSR set to: 1
  5071  015C2E  0E00               	movlw	0
  5072  015C30  0101               	movlb	1	; () banked
  5073  015C32  1B8A               	xorwf	___ftge@ff1& (0+255),f,b
  5074  015C34  0E00               	movlw	0
  5075  015C36  0101               	movlb	1	; () banked
  5076  015C38  1B8B               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5077  015C3A  0E80               	movlw	128
  5078  015C3C  0101               	movlb	1	; () banked
  5079  015C3E  1B8C               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5080                           
  5081                           ; BSR set to: 1
  5082  015C40  0E00               	movlw	0
  5083  015C42  0101               	movlb	1	; () banked
  5084  015C44  1B8D               	xorwf	___ftge@ff2& (0+255),f,b
  5085  015C46  0E00               	movlw	0
  5086  015C48  0101               	movlb	1	; () banked
  5087  015C4A  1B8E               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5088  015C4C  0E80               	movlw	128
  5089  015C4E  0101               	movlb	1	; () banked
  5090  015C50  1B8F               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5091  015C52  0101               	movlb	1	; () banked
  5092  015C54  518D               	movf	___ftge@ff2& (0+255),w,b
  5093  015C56  0101               	movlb	1	; () banked
  5094  015C58  5D8A               	subwf	___ftge@ff1& (0+255),w,b
  5095  015C5A  0101               	movlb	1	; () banked
  5096  015C5C  518E               	movf	(___ftge@ff2+1)& (0+255),w,b
  5097  015C5E  0101               	movlb	1	; () banked
  5098  015C60  598B               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5099  015C62  0101               	movlb	1	; () banked
  5100  015C64  518F               	movf	(___ftge@ff2+2)& (0+255),w,b
  5101  015C66  0101               	movlb	1	; () banked
  5102  015C68  598C               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5103  015C6A  B0D8               	btfsc	status,0,c
  5104  015C6C  D002               	goto	l13027
  5105                           
  5106                           ; BSR set to: 1
  5107  015C6E  90D8               	bcf	status,0,c
  5108  015C70  0012               	return	
  5109  015C72                     l13027:
  5110                           
  5111                           ; BSR set to: 1
  5112  015C72  80D8               	bsf	status,0,c
  5113                           
  5114                           ; BSR set to: 1
  5115  015C74  0012               	return	
  5116  015C76                     __end_of___ftge:
  5117                           	opt stack 0
  5118                           tblptru	equ	0xFF8
  5119                           tblptrh	equ	0xFF7
  5120                           tblptrl	equ	0xFF6
  5121                           tablat	equ	0xFF5
  5122                           prodh	equ	0xFF4
  5123                           prodl	equ	0xFF3
  5124                           postinc0	equ	0xFEE
  5125                           plusw0	equ	0xFEB
  5126                           wreg	equ	0xFE8
  5127                           postdec1	equ	0xFE5
  5128                           fsr1h	equ	0xFE2
  5129                           fsr1l	equ	0xFE1
  5130                           indf2	equ	0xFDF
  5131                           postinc2	equ	0xFDE
  5132                           postdec2	equ	0xFDD
  5133                           plusw2	equ	0xFDB
  5134                           fsr2h	equ	0xFDA
  5135                           fsr2l	equ	0xFD9
  5136                           status	equ	0xFD8
  5137                           
  5138 ;; *************** function ___ftadd *****************
  5139 ;; Defined at:
  5140 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  f1              3    8[BANK1 ] float 
  5143 ;;  f2              3   11[BANK1 ] float 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  exp1            1   19[BANK1 ] unsigned char 
  5146 ;;  exp2            1   18[BANK1 ] unsigned char 
  5147 ;;  sign            1   17[BANK1 ] unsigned char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  3    8[BANK1 ] float 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5157 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5158 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5159 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5160 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5161 ;;Total ram usage:       12 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:   10
  5164 ;; This function calls:
  5165 ;;		___ftpack
  5166 ;; This function is called by:
  5167 ;;		_send_initial_update
  5168 ;;		_send_periodical_update
  5169 ;;		_floor
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text7
  5174  01332A                     __ptext7:
  5175                           	opt stack 0
  5176  01332A                     ___ftadd:
  5177                           	opt stack 18
  5178                           
  5179                           ; BSR set to: 1
  5180                           ;incstack = 0
  5181  01332A  C194  F198         	movff	___ftadd@f1+2,??___ftadd
  5182  01332E  0101               	movlb	1	; () banked
  5183  013330  6B99               	clrf	(??___ftadd+1)& (0+255),b
  5184  013332  6B9A               	clrf	(??___ftadd+2)& (0+255),b
  5185  013334  0101               	movlb	1	; () banked
  5186  013336  3593               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  5187  013338  0101               	movlb	1	; () banked
  5188  01333A  3798               	rlcf	??___ftadd& (0+255),f,b
  5189  01333C  E301               	bnc	u15141
  5190  01333E  8199               	bsf	(??___ftadd+1)& (0+255),0,b
  5191  013340                     u15141:
  5192  013340  0101               	movlb	1	; () banked
  5193  013342  5198               	movf	??___ftadd& (0+255),w,b
  5194  013344  0101               	movlb	1	; () banked
  5195  013346  6F9D               	movwf	___ftadd@exp1& (0+255),b
  5196  013348  C197  F198         	movff	___ftadd@f2+2,??___ftadd
  5197  01334C  0101               	movlb	1	; () banked
  5198  01334E  6B99               	clrf	(??___ftadd+1)& (0+255),b
  5199  013350  6B9A               	clrf	(??___ftadd+2)& (0+255),b
  5200  013352  0101               	movlb	1	; () banked
  5201  013354  3596               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  5202  013356  0101               	movlb	1	; () banked
  5203  013358  3798               	rlcf	??___ftadd& (0+255),f,b
  5204  01335A  E301               	bnc	u15151
  5205  01335C  8199               	bsf	(??___ftadd+1)& (0+255),0,b
  5206  01335E                     u15151:
  5207  01335E  0101               	movlb	1	; () banked
  5208  013360  5198               	movf	??___ftadd& (0+255),w,b
  5209  013362  0101               	movlb	1	; () banked
  5210  013364  6F9C               	movwf	___ftadd@exp2& (0+255),b
  5211                           
  5212                           ; BSR set to: 1
  5213  013366  0101               	movlb	1	; () banked
  5214  013368  519D               	movf	___ftadd@exp1& (0+255),w,b
  5215  01336A  0101               	movlb	1	; () banked
  5216  01336C  B4D8               	btfsc	status,2,c
  5217  01336E  D011               	goto	l1783
  5218                           
  5219                           ; BSR set to: 1
  5220  013370  0101               	movlb	1	; () banked
  5221  013372  519C               	movf	___ftadd@exp2& (0+255),w,b
  5222  013374  0101               	movlb	1	; () banked
  5223  013376  5D9D               	subwf	___ftadd@exp1& (0+255),w,b
  5224  013378  B0D8               	btfsc	status,0,c
  5225  01337A  D012               	goto	l12935
  5226                           
  5227                           ; BSR set to: 1
  5228  01337C  0101               	movlb	1	; () banked
  5229  01337E  519D               	movf	___ftadd@exp1& (0+255),w,b
  5230  013380  0800               	sublw	0
  5231  013382  0101               	movlb	1	; () banked
  5232  013384  259C               	addwf	___ftadd@exp2& (0+255),w,b
  5233  013386  0101               	movlb	1	; () banked
  5234  013388  6F98               	movwf	??___ftadd& (0+255),b
  5235  01338A  0E18               	movlw	24
  5236  01338C  0101               	movlb	1	; () banked
  5237  01338E  6598               	cpfsgt	??___ftadd& (0+255),b
  5238  013390  D007               	goto	l12935
  5239  013392                     l1783:
  5240                           
  5241                           ; BSR set to: 1
  5242  013392  C195  F192         	movff	___ftadd@f2,?___ftadd
  5243  013396  C196  F193         	movff	___ftadd@f2+1,?___ftadd+1
  5244  01339A  C197  F194         	movff	___ftadd@f2+2,?___ftadd+2
  5245  01339E  0012               	return	
  5246  0133A0                     l12935:
  5247                           
  5248                           ; BSR set to: 1
  5249  0133A0  0101               	movlb	1	; () banked
  5250  0133A2  519C               	movf	___ftadd@exp2& (0+255),w,b
  5251  0133A4  0101               	movlb	1	; () banked
  5252  0133A6  B4D8               	btfsc	status,2,c
  5253  0133A8  D011               	goto	l1787
  5254                           
  5255                           ; BSR set to: 1
  5256  0133AA  0101               	movlb	1	; () banked
  5257  0133AC  519D               	movf	___ftadd@exp1& (0+255),w,b
  5258  0133AE  0101               	movlb	1	; () banked
  5259  0133B0  5D9C               	subwf	___ftadd@exp2& (0+255),w,b
  5260  0133B2  B0D8               	btfsc	status,0,c
  5261  0133B4  D012               	goto	l12941
  5262                           
  5263                           ; BSR set to: 1
  5264  0133B6  0101               	movlb	1	; () banked
  5265  0133B8  519C               	movf	___ftadd@exp2& (0+255),w,b
  5266  0133BA  0800               	sublw	0
  5267  0133BC  0101               	movlb	1	; () banked
  5268  0133BE  259D               	addwf	___ftadd@exp1& (0+255),w,b
  5269  0133C0  0101               	movlb	1	; () banked
  5270  0133C2  6F98               	movwf	??___ftadd& (0+255),b
  5271  0133C4  0E18               	movlw	24
  5272  0133C6  0101               	movlb	1	; () banked
  5273  0133C8  6598               	cpfsgt	??___ftadd& (0+255),b
  5274  0133CA  D007               	goto	l12941
  5275  0133CC                     l1787:
  5276                           
  5277                           ; BSR set to: 1
  5278  0133CC  C192  F192         	movff	___ftadd@f1,?___ftadd
  5279  0133D0  C193  F193         	movff	___ftadd@f1+1,?___ftadd+1
  5280  0133D4  C194  F194         	movff	___ftadd@f1+2,?___ftadd+2
  5281  0133D8  0012               	return	
  5282  0133DA                     l12941:
  5283                           
  5284                           ; BSR set to: 1
  5285  0133DA  0E06               	movlw	6
  5286  0133DC  0101               	movlb	1	; () banked
  5287  0133DE  6F9B               	movwf	___ftadd@sign& (0+255),b
  5288                           
  5289                           ; BSR set to: 1
  5290  0133E0  0101               	movlb	1	; () banked
  5291  0133E2  AF94               	btfss	(___ftadd@f1+2)& (0+255),7,b
  5292  0133E4  D002               	goto	l12947
  5293                           
  5294                           ; BSR set to: 1
  5295  0133E6  0101               	movlb	1	; () banked
  5296  0133E8  8F9B               	bsf	___ftadd@sign& (0+255),7,b
  5297  0133EA                     l12947:
  5298                           
  5299                           ; BSR set to: 1
  5300  0133EA  0101               	movlb	1	; () banked
  5301  0133EC  AF97               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5302  0133EE  D002               	goto	l1789
  5303                           
  5304                           ; BSR set to: 1
  5305  0133F0  0101               	movlb	1	; () banked
  5306  0133F2  8D9B               	bsf	___ftadd@sign& (0+255),6,b
  5307  0133F4                     l1789:
  5308                           
  5309                           ; BSR set to: 1
  5310  0133F4  0101               	movlb	1	; () banked
  5311  0133F6  8F93               	bsf	(___ftadd@f1+1)& (0+255),7,b
  5312                           
  5313                           ; BSR set to: 1
  5314  0133F8  0EFF               	movlw	255
  5315  0133FA  0101               	movlb	1	; () banked
  5316  0133FC  1792               	andwf	___ftadd@f1& (0+255),f,b
  5317  0133FE  0EFF               	movlw	255
  5318  013400  0101               	movlb	1	; () banked
  5319  013402  1793               	andwf	(___ftadd@f1+1)& (0+255),f,b
  5320  013404  0E00               	movlw	0
  5321  013406  0101               	movlb	1	; () banked
  5322  013408  1794               	andwf	(___ftadd@f1+2)& (0+255),f,b
  5323  01340A  0101               	movlb	1	; () banked
  5324  01340C  8F96               	bsf	(___ftadd@f2+1)& (0+255),7,b
  5325                           
  5326                           ; BSR set to: 1
  5327  01340E  0EFF               	movlw	255
  5328  013410  0101               	movlb	1	; () banked
  5329  013412  1795               	andwf	___ftadd@f2& (0+255),f,b
  5330  013414  0EFF               	movlw	255
  5331  013416  0101               	movlb	1	; () banked
  5332  013418  1796               	andwf	(___ftadd@f2+1)& (0+255),f,b
  5333  01341A  0E00               	movlw	0
  5334  01341C  0101               	movlb	1	; () banked
  5335  01341E  1797               	andwf	(___ftadd@f2+2)& (0+255),f,b
  5336                           
  5337                           ; BSR set to: 1
  5338  013420  0101               	movlb	1	; () banked
  5339  013422  519C               	movf	___ftadd@exp2& (0+255),w,b
  5340  013424  0101               	movlb	1	; () banked
  5341  013426  5D9D               	subwf	___ftadd@exp1& (0+255),w,b
  5342  013428  B0D8               	btfsc	status,0,c
  5343  01342A  D025               	goto	l12967
  5344  01342C                     l12957:
  5345                           
  5346                           ; BSR set to: 1
  5347  01342C  0101               	movlb	1	; () banked
  5348  01342E  90D8               	bcf	status,0,c
  5349  013430  3795               	rlcf	___ftadd@f2& (0+255),f,b
  5350  013432  3796               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  5351  013434  3797               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  5352  013436  0101               	movlb	1	; () banked
  5353  013438  079C               	decf	___ftadd@exp2& (0+255),f,b
  5354                           
  5355                           ; BSR set to: 1
  5356  01343A  0101               	movlb	1	; () banked
  5357  01343C  519D               	movf	___ftadd@exp1& (0+255),w,b
  5358  01343E  0101               	movlb	1	; () banked
  5359  013440  199C               	xorwf	___ftadd@exp2& (0+255),w,b
  5360  013442  B4D8               	btfsc	status,2,c
  5361  013444  D011               	goto	l12965
  5362                           
  5363                           ; BSR set to: 1
  5364  013446  0101               	movlb	1	; () banked
  5365  013448  079B               	decf	___ftadd@sign& (0+255),f,b
  5366  01344A  C19B  F198         	movff	___ftadd@sign,??___ftadd
  5367  01344E  0E07               	movlw	7
  5368  013450  0101               	movlb	1	; () banked
  5369  013452  1798               	andwf	??___ftadd& (0+255),f,b
  5370  013454  B4D8               	btfsc	status,2,c
  5371  013456  D008               	goto	l12965
  5372  013458  D7E9               	goto	l12957
  5373  01345A                     l12963:
  5374                           
  5375                           ; BSR set to: 1
  5376  01345A  0101               	movlb	1	; () banked
  5377  01345C  90D8               	bcf	status,0,c
  5378  01345E  3394               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  5379  013460  3393               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  5380  013462  3392               	rrcf	___ftadd@f1& (0+255),f,b
  5381  013464  0101               	movlb	1	; () banked
  5382  013466  2B9D               	incf	___ftadd@exp1& (0+255),f,b
  5383  013468                     l12965:
  5384                           
  5385                           ; BSR set to: 1
  5386  013468  0101               	movlb	1	; () banked
  5387  01346A  519C               	movf	___ftadd@exp2& (0+255),w,b
  5388  01346C  0101               	movlb	1	; () banked
  5389  01346E  199D               	xorwf	___ftadd@exp1& (0+255),w,b
  5390  013470  B4D8               	btfsc	status,2,c
  5391  013472  D02B               	goto	l1798
  5392  013474  D7F2               	goto	l12963
  5393  013476                     l12967:
  5394                           
  5395                           ; BSR set to: 1
  5396  013476  0101               	movlb	1	; () banked
  5397  013478  519D               	movf	___ftadd@exp1& (0+255),w,b
  5398  01347A  0101               	movlb	1	; () banked
  5399  01347C  5D9C               	subwf	___ftadd@exp2& (0+255),w,b
  5400  01347E  B0D8               	btfsc	status,0,c
  5401  013480  D024               	goto	l1798
  5402  013482                     l12969:
  5403                           
  5404                           ; BSR set to: 1
  5405  013482  0101               	movlb	1	; () banked
  5406  013484  90D8               	bcf	status,0,c
  5407  013486  3792               	rlcf	___ftadd@f1& (0+255),f,b
  5408  013488  3793               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  5409  01348A  3794               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  5410  01348C  0101               	movlb	1	; () banked
  5411  01348E  079D               	decf	___ftadd@exp1& (0+255),f,b
  5412                           
  5413                           ; BSR set to: 1
  5414  013490  0101               	movlb	1	; () banked
  5415  013492  519D               	movf	___ftadd@exp1& (0+255),w,b
  5416  013494  0101               	movlb	1	; () banked
  5417  013496  199C               	xorwf	___ftadd@exp2& (0+255),w,b
  5418  013498  B4D8               	btfsc	status,2,c
  5419  01349A  D011               	goto	l12977
  5420                           
  5421                           ; BSR set to: 1
  5422  01349C  0101               	movlb	1	; () banked
  5423  01349E  079B               	decf	___ftadd@sign& (0+255),f,b
  5424  0134A0  C19B  F198         	movff	___ftadd@sign,??___ftadd
  5425  0134A4  0E07               	movlw	7
  5426  0134A6  0101               	movlb	1	; () banked
  5427  0134A8  1798               	andwf	??___ftadd& (0+255),f,b
  5428  0134AA  B4D8               	btfsc	status,2,c
  5429  0134AC  D008               	goto	l12977
  5430  0134AE  D7E9               	goto	l12969
  5431  0134B0                     l12975:
  5432                           
  5433                           ; BSR set to: 1
  5434  0134B0  0101               	movlb	1	; () banked
  5435  0134B2  90D8               	bcf	status,0,c
  5436  0134B4  3397               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  5437  0134B6  3396               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  5438  0134B8  3395               	rrcf	___ftadd@f2& (0+255),f,b
  5439  0134BA  0101               	movlb	1	; () banked
  5440  0134BC  2B9C               	incf	___ftadd@exp2& (0+255),f,b
  5441  0134BE                     l12977:
  5442                           
  5443                           ; BSR set to: 1
  5444  0134BE  0101               	movlb	1	; () banked
  5445  0134C0  519C               	movf	___ftadd@exp2& (0+255),w,b
  5446  0134C2  0101               	movlb	1	; () banked
  5447  0134C4  199D               	xorwf	___ftadd@exp1& (0+255),w,b
  5448  0134C6  A4D8               	btfss	status,2,c
  5449  0134C8  D7F3               	goto	l12975
  5450  0134CA                     l1798:
  5451                           
  5452                           ; BSR set to: 1
  5453  0134CA  0101               	movlb	1	; () banked
  5454  0134CC  AF9B               	btfss	___ftadd@sign& (0+255),7,b
  5455  0134CE  D012               	goto	l1807
  5456                           
  5457                           ; BSR set to: 1
  5458  0134D0  0EFF               	movlw	255
  5459  0134D2  0101               	movlb	1	; () banked
  5460  0134D4  1B92               	xorwf	___ftadd@f1& (0+255),f,b
  5461  0134D6  0EFF               	movlw	255
  5462  0134D8  0101               	movlb	1	; () banked
  5463  0134DA  1B93               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  5464  0134DC  0EFF               	movlw	255
  5465  0134DE  0101               	movlb	1	; () banked
  5466  0134E0  1B94               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  5467  0134E2  0E01               	movlw	1
  5468  0134E4  0101               	movlb	1	; () banked
  5469  0134E6  2792               	addwf	___ftadd@f1& (0+255),f,b
  5470  0134E8  0E00               	movlw	0
  5471  0134EA  0101               	movlb	1	; () banked
  5472  0134EC  2393               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  5473  0134EE  0E00               	movlw	0
  5474  0134F0  0101               	movlb	1	; () banked
  5475  0134F2  2394               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  5476  0134F4                     l1807:
  5477                           
  5478                           ; BSR set to: 1
  5479  0134F4  0101               	movlb	1	; () banked
  5480  0134F6  AD9B               	btfss	___ftadd@sign& (0+255),6,b
  5481  0134F8  D012               	goto	l12983
  5482                           
  5483                           ; BSR set to: 1
  5484  0134FA  0EFF               	movlw	255
  5485  0134FC  0101               	movlb	1	; () banked
  5486  0134FE  1B95               	xorwf	___ftadd@f2& (0+255),f,b
  5487  013500  0EFF               	movlw	255
  5488  013502  0101               	movlb	1	; () banked
  5489  013504  1B96               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5490  013506  0EFF               	movlw	255
  5491  013508  0101               	movlb	1	; () banked
  5492  01350A  1B97               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5493  01350C  0E01               	movlw	1
  5494  01350E  0101               	movlb	1	; () banked
  5495  013510  2795               	addwf	___ftadd@f2& (0+255),f,b
  5496  013512  0E00               	movlw	0
  5497  013514  0101               	movlb	1	; () banked
  5498  013516  2396               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5499  013518  0E00               	movlw	0
  5500  01351A  0101               	movlb	1	; () banked
  5501  01351C  2397               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5502  01351E                     l12983:
  5503                           
  5504                           ; BSR set to: 1
  5505  01351E  0E00               	movlw	0
  5506  013520  0101               	movlb	1	; () banked
  5507  013522  6F9B               	movwf	___ftadd@sign& (0+255),b
  5508                           
  5509                           ; BSR set to: 1
  5510  013524  0101               	movlb	1	; () banked
  5511  013526  5192               	movf	___ftadd@f1& (0+255),w,b
  5512  013528  0101               	movlb	1	; () banked
  5513  01352A  2795               	addwf	___ftadd@f2& (0+255),f,b
  5514  01352C  0101               	movlb	1	; () banked
  5515  01352E  5193               	movf	(___ftadd@f1+1)& (0+255),w,b
  5516  013530  0101               	movlb	1	; () banked
  5517  013532  2396               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5518  013534  0101               	movlb	1	; () banked
  5519  013536  5194               	movf	(___ftadd@f1+2)& (0+255),w,b
  5520  013538  0101               	movlb	1	; () banked
  5521  01353A  2397               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5522                           
  5523                           ; BSR set to: 1
  5524  01353C  0101               	movlb	1	; () banked
  5525  01353E  AF97               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5526  013540  D015               	goto	l12993
  5527                           
  5528                           ; BSR set to: 1
  5529  013542  0EFF               	movlw	255
  5530  013544  0101               	movlb	1	; () banked
  5531  013546  1B95               	xorwf	___ftadd@f2& (0+255),f,b
  5532  013548  0EFF               	movlw	255
  5533  01354A  0101               	movlb	1	; () banked
  5534  01354C  1B96               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5535  01354E  0EFF               	movlw	255
  5536  013550  0101               	movlb	1	; () banked
  5537  013552  1B97               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5538  013554  0E01               	movlw	1
  5539  013556  0101               	movlb	1	; () banked
  5540  013558  2795               	addwf	___ftadd@f2& (0+255),f,b
  5541  01355A  0E00               	movlw	0
  5542  01355C  0101               	movlb	1	; () banked
  5543  01355E  2396               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5544  013560  0E00               	movlw	0
  5545  013562  0101               	movlb	1	; () banked
  5546  013564  2397               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5547                           
  5548                           ; BSR set to: 1
  5549  013566  0E01               	movlw	1
  5550  013568  0101               	movlb	1	; () banked
  5551  01356A  6F9B               	movwf	___ftadd@sign& (0+255),b
  5552  01356C                     l12993:
  5553                           
  5554                           ; BSR set to: 1
  5555  01356C  C195  F18A         	movff	___ftadd@f2,___ftpack@arg
  5556  013570  C196  F18B         	movff	___ftadd@f2+1,___ftpack@arg+1
  5557  013574  C197  F18C         	movff	___ftadd@f2+2,___ftpack@arg+2
  5558  013578  C19D  F18D         	movff	___ftadd@exp1,___ftpack@exp
  5559  01357C  C19B  F18E         	movff	___ftadd@sign,___ftpack@sign
  5560  013580  ECF7  F0AA         	call	___ftpack	;wreg free
  5561  013584  C18A  F192         	movff	?___ftpack,?___ftadd
  5562  013588  C18B  F193         	movff	?___ftpack+1,?___ftadd+1
  5563  01358C  C18C  F194         	movff	?___ftpack+2,?___ftadd+2
  5564  013590  0012               	return	
  5565  013592                     __end_of___ftadd:
  5566                           	opt stack 0
  5567                           tblptru	equ	0xFF8
  5568                           tblptrh	equ	0xFF7
  5569                           tblptrl	equ	0xFF6
  5570                           tablat	equ	0xFF5
  5571                           prodh	equ	0xFF4
  5572                           prodl	equ	0xFF3
  5573                           postinc0	equ	0xFEE
  5574                           plusw0	equ	0xFEB
  5575                           wreg	equ	0xFE8
  5576                           postdec1	equ	0xFE5
  5577                           fsr1h	equ	0xFE2
  5578                           fsr1l	equ	0xFE1
  5579                           indf2	equ	0xFDF
  5580                           postinc2	equ	0xFDE
  5581                           postdec2	equ	0xFDD
  5582                           plusw2	equ	0xFDB
  5583                           fsr2h	equ	0xFDA
  5584                           fsr2l	equ	0xFD9
  5585                           status	equ	0xFD8
  5586                           
  5587 ;; *************** function ___altoft *****************
  5588 ;; Defined at:
  5589 ;;		line 42 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  c               4   51[BANK1 ] long 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  sign            1   60[BANK1 ] unsigned char 
  5594 ;;  exp             1   59[BANK1 ] unsigned char 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  3   51[BANK1 ] float 
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5604 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5605 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5606 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5607 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5608 ;;Total ram usage:       10 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:   10
  5611 ;; This function calls:
  5612 ;;		___ftpack
  5613 ;; This function is called by:
  5614 ;;		_floor
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text8
  5619  0162E4                     __ptext8:
  5620                           	opt stack 0
  5621  0162E4                     ___altoft:
  5622                           	opt stack 18
  5623                           
  5624                           ;incstack = 0
  5625  0162E4  0E00               	movlw	0
  5626  0162E6  0101               	movlb	1	; () banked
  5627  0162E8  6FC6               	movwf	___altoft@sign& (0+255),b
  5628  0162EA  0E8E               	movlw	142
  5629  0162EC  0101               	movlb	1	; () banked
  5630  0162EE  6FC5               	movwf	___altoft@exp& (0+255),b
  5631                           
  5632                           ; BSR set to: 1
  5633  0162F0  0101               	movlb	1	; () banked
  5634  0162F2  AFC0               	btfss	(___altoft@c+3)& (0+255),7,b
  5635  0162F4  D015               	goto	l12921
  5636                           
  5637                           ; BSR set to: 1
  5638  0162F6  0101               	movlb	1	; () banked
  5639  0162F8  1FC0               	comf	(___altoft@c+3)& (0+255),f,b
  5640  0162FA  1FBF               	comf	(___altoft@c+2)& (0+255),f,b
  5641  0162FC  1FBE               	comf	(___altoft@c+1)& (0+255),f,b
  5642  0162FE  6DBD               	negf	___altoft@c& (0+255),b
  5643  016300  0E00               	movlw	0
  5644  016302  23BE               	addwfc	(___altoft@c+1)& (0+255),f,b
  5645  016304  23BF               	addwfc	(___altoft@c+2)& (0+255),f,b
  5646  016306  23C0               	addwfc	(___altoft@c+3)& (0+255),f,b
  5647                           
  5648                           ; BSR set to: 1
  5649  016308  0E01               	movlw	1
  5650  01630A  0101               	movlb	1	; () banked
  5651  01630C  6FC6               	movwf	___altoft@sign& (0+255),b
  5652                           
  5653                           ; BSR set to: 1
  5654  01630E  D008               	goto	l12921
  5655  016310                     l12919:
  5656                           
  5657                           ; BSR set to: 1
  5658  016310  0101               	movlb	1	; () banked
  5659  016312  90D8               	bcf	status,0,c
  5660  016314  33C0               	rrcf	(___altoft@c+3)& (0+255),f,b
  5661  016316  33BF               	rrcf	(___altoft@c+2)& (0+255),f,b
  5662  016318  33BE               	rrcf	(___altoft@c+1)& (0+255),f,b
  5663  01631A  33BD               	rrcf	___altoft@c& (0+255),f,b
  5664  01631C  0101               	movlb	1	; () banked
  5665  01631E  2BC5               	incf	___altoft@exp& (0+255),f,b
  5666  016320                     l12921:
  5667                           
  5668                           ; BSR set to: 1
  5669  016320  0E00               	movlw	0
  5670  016322  0101               	movlb	1	; () banked
  5671  016324  15BD               	andwf	___altoft@c& (0+255),w,b
  5672  016326  0101               	movlb	1	; () banked
  5673  016328  6FC1               	movwf	??___altoft& (0+255),b
  5674  01632A  0E00               	movlw	0
  5675  01632C  0101               	movlb	1	; () banked
  5676  01632E  15BE               	andwf	(___altoft@c+1)& (0+255),w,b
  5677  016330  0101               	movlb	1	; () banked
  5678  016332  6FC2               	movwf	(??___altoft+1)& (0+255),b
  5679  016334  0E00               	movlw	0
  5680  016336  0101               	movlb	1	; () banked
  5681  016338  15BF               	andwf	(___altoft@c+2)& (0+255),w,b
  5682  01633A  0101               	movlb	1	; () banked
  5683  01633C  6FC3               	movwf	(??___altoft+2)& (0+255),b
  5684  01633E  0EFF               	movlw	255
  5685  016340  0101               	movlb	1	; () banked
  5686  016342  15C0               	andwf	(___altoft@c+3)& (0+255),w,b
  5687  016344  0101               	movlb	1	; () banked
  5688  016346  6FC4               	movwf	(??___altoft+3)& (0+255),b
  5689  016348  0101               	movlb	1	; () banked
  5690  01634A  51C1               	movf	??___altoft& (0+255),w,b
  5691  01634C  0101               	movlb	1	; () banked
  5692  01634E  11C2               	iorwf	(??___altoft+1)& (0+255),w,b
  5693  016350  0101               	movlb	1	; () banked
  5694  016352  11C3               	iorwf	(??___altoft+2)& (0+255),w,b
  5695  016354  0101               	movlb	1	; () banked
  5696  016356  11C4               	iorwf	(??___altoft+3)& (0+255),w,b
  5697  016358  A4D8               	btfss	status,2,c
  5698  01635A  D7DA               	goto	l12919
  5699                           
  5700                           ; BSR set to: 1
  5701                           
  5702                           ; BSR set to: 1
  5703  01635C  C1BD  F18A         	movff	___altoft@c,___ftpack@arg
  5704  016360  C1BE  F18B         	movff	___altoft@c+1,___ftpack@arg+1
  5705  016364  C1BF  F18C         	movff	___altoft@c+2,___ftpack@arg+2
  5706  016368  C1C5  F18D         	movff	___altoft@exp,___ftpack@exp
  5707  01636C  C1C6  F18E         	movff	___altoft@sign,___ftpack@sign
  5708  016370  ECF7  F0AA         	call	___ftpack	;wreg free
  5709  016374  C18A  F1BD         	movff	?___ftpack,?___altoft
  5710  016378  C18B  F1BE         	movff	?___ftpack+1,?___altoft+1
  5711  01637C  C18C  F1BF         	movff	?___ftpack+2,?___altoft+2
  5712  016380  0012               	return	
  5713  016382                     __end_of___altoft:
  5714                           	opt stack 0
  5715                           tblptru	equ	0xFF8
  5716                           tblptrh	equ	0xFF7
  5717                           tblptrl	equ	0xFF6
  5718                           tablat	equ	0xFF5
  5719                           prodh	equ	0xFF4
  5720                           prodl	equ	0xFF3
  5721                           postinc0	equ	0xFEE
  5722                           plusw0	equ	0xFEB
  5723                           wreg	equ	0xFE8
  5724                           postdec1	equ	0xFE5
  5725                           fsr1h	equ	0xFE2
  5726                           fsr1l	equ	0xFE1
  5727                           indf2	equ	0xFDF
  5728                           postinc2	equ	0xFDE
  5729                           postdec2	equ	0xFDD
  5730                           plusw2	equ	0xFDB
  5731                           fsr2h	equ	0xFDA
  5732                           fsr2l	equ	0xFD9
  5733                           status	equ	0xFD8
  5734                           
  5735 ;; *************** function ___lltoft *****************
  5736 ;; Defined at:
  5737 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  c               4   12[BANK1 ] unsigned long 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  exp             1   20[BANK1 ] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  3   12[BANK1 ] float 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5751 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5752 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5753 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5754 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5755 ;;Total ram usage:        9 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:   10
  5758 ;; This function calls:
  5759 ;;		___ftpack
  5760 ;; This function is called by:
  5761 ;;		_send_initial_update
  5762 ;;		_send_periodical_update
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text9
  5767  01664C                     __ptext9:
  5768                           	opt stack 0
  5769  01664C                     ___lltoft:
  5770                           	opt stack 19
  5771                           
  5772                           ;incstack = 0
  5773  01664C  0E8E               	movlw	142
  5774  01664E  0101               	movlb	1	; () banked
  5775  016650  6F9E               	movwf	___lltoft@exp& (0+255),b
  5776  016652  D008               	goto	l13739
  5777  016654                     l13737:
  5778                           
  5779                           ; BSR set to: 1
  5780  016654  0101               	movlb	1	; () banked
  5781  016656  90D8               	bcf	status,0,c
  5782  016658  3399               	rrcf	(___lltoft@c+3)& (0+255),f,b
  5783  01665A  3398               	rrcf	(___lltoft@c+2)& (0+255),f,b
  5784  01665C  3397               	rrcf	(___lltoft@c+1)& (0+255),f,b
  5785  01665E  3396               	rrcf	___lltoft@c& (0+255),f,b
  5786  016660  0101               	movlb	1	; () banked
  5787  016662  2B9E               	incf	___lltoft@exp& (0+255),f,b
  5788  016664                     l13739:
  5789                           
  5790                           ; BSR set to: 1
  5791  016664  0E00               	movlw	0
  5792  016666  0101               	movlb	1	; () banked
  5793  016668  1596               	andwf	___lltoft@c& (0+255),w,b
  5794  01666A  0101               	movlb	1	; () banked
  5795  01666C  6F9A               	movwf	??___lltoft& (0+255),b
  5796  01666E  0E00               	movlw	0
  5797  016670  0101               	movlb	1	; () banked
  5798  016672  1597               	andwf	(___lltoft@c+1)& (0+255),w,b
  5799  016674  0101               	movlb	1	; () banked
  5800  016676  6F9B               	movwf	(??___lltoft+1)& (0+255),b
  5801  016678  0E00               	movlw	0
  5802  01667A  0101               	movlb	1	; () banked
  5803  01667C  1598               	andwf	(___lltoft@c+2)& (0+255),w,b
  5804  01667E  0101               	movlb	1	; () banked
  5805  016680  6F9C               	movwf	(??___lltoft+2)& (0+255),b
  5806  016682  0EFF               	movlw	255
  5807  016684  0101               	movlb	1	; () banked
  5808  016686  1599               	andwf	(___lltoft@c+3)& (0+255),w,b
  5809  016688  0101               	movlb	1	; () banked
  5810  01668A  6F9D               	movwf	(??___lltoft+3)& (0+255),b
  5811  01668C  0101               	movlb	1	; () banked
  5812  01668E  519A               	movf	??___lltoft& (0+255),w,b
  5813  016690  0101               	movlb	1	; () banked
  5814  016692  119B               	iorwf	(??___lltoft+1)& (0+255),w,b
  5815  016694  0101               	movlb	1	; () banked
  5816  016696  119C               	iorwf	(??___lltoft+2)& (0+255),w,b
  5817  016698  0101               	movlb	1	; () banked
  5818  01669A  119D               	iorwf	(??___lltoft+3)& (0+255),w,b
  5819  01669C  A4D8               	btfss	status,2,c
  5820  01669E  D7DA               	goto	l13737
  5821                           
  5822                           ; BSR set to: 1
  5823                           
  5824                           ; BSR set to: 1
  5825  0166A0  C196  F18A         	movff	___lltoft@c,___ftpack@arg
  5826  0166A4  C197  F18B         	movff	___lltoft@c+1,___ftpack@arg+1
  5827  0166A8  C198  F18C         	movff	___lltoft@c+2,___ftpack@arg+2
  5828  0166AC  C19E  F18D         	movff	___lltoft@exp,___ftpack@exp
  5829  0166B0  0E00               	movlw	0
  5830  0166B2  0101               	movlb	1	; () banked
  5831  0166B4  6F8E               	movwf	___ftpack@sign& (0+255),b
  5832  0166B6  ECF7  F0AA         	call	___ftpack	;wreg free
  5833  0166BA  C18A  F196         	movff	?___ftpack,?___lltoft
  5834  0166BE  C18B  F197         	movff	?___ftpack+1,?___lltoft+1
  5835  0166C2  C18C  F198         	movff	?___ftpack+2,?___lltoft+2
  5836  0166C6  0012               	return	
  5837  0166C8                     __end_of___lltoft:
  5838                           	opt stack 0
  5839                           tblptru	equ	0xFF8
  5840                           tblptrh	equ	0xFF7
  5841                           tblptrl	equ	0xFF6
  5842                           tablat	equ	0xFF5
  5843                           prodh	equ	0xFF4
  5844                           prodl	equ	0xFF3
  5845                           postinc0	equ	0xFEE
  5846                           plusw0	equ	0xFEB
  5847                           wreg	equ	0xFE8
  5848                           postdec1	equ	0xFE5
  5849                           fsr1h	equ	0xFE2
  5850                           fsr1l	equ	0xFE1
  5851                           indf2	equ	0xFDF
  5852                           postinc2	equ	0xFDE
  5853                           postdec2	equ	0xFDD
  5854                           plusw2	equ	0xFDB
  5855                           fsr2h	equ	0xFDA
  5856                           fsr2l	equ	0xFD9
  5857                           status	equ	0xFD8
  5858                           
  5859 ;; *************** function ___ftneg *****************
  5860 ;; Defined at:
  5861 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  f1              3   69[BANK1 ] float 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;		None
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  3   69[BANK1 ] float 
  5868 ;; Registers used:
  5869 ;;		wreg, status,2, status,0
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5875 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5878 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5879 ;;Total ram usage:        3 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; Hardware stack levels required when called:    9
  5882 ;; This function calls:
  5883 ;;		Nothing
  5884 ;; This function is called by:
  5885 ;;		_send_initial_update
  5886 ;;		_send_periodical_update
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text10
  5891  016E02                     __ptext10:
  5892                           	opt stack 0
  5893  016E02                     ___ftneg:
  5894                           	opt stack 20
  5895                           
  5896                           ;incstack = 0
  5897  016E02  0101               	movlb	1	; () banked
  5898  016E04  51CF               	movf	___ftneg@f1& (0+255),w,b
  5899  016E06  0101               	movlb	1	; () banked
  5900  016E08  11D0               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  5901  016E0A  0101               	movlb	1	; () banked
  5902  016E0C  11D1               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  5903  016E0E  B4D8               	btfsc	status,2,c
  5904  016E10  D009               	goto	l1840
  5905                           
  5906                           ; BSR set to: 1
  5907  016E12  0E00               	movlw	0
  5908  016E14  0101               	movlb	1	; () banked
  5909  016E16  1BCF               	xorwf	___ftneg@f1& (0+255),f,b
  5910  016E18  0E00               	movlw	0
  5911  016E1A  0101               	movlb	1	; () banked
  5912  016E1C  1BD0               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  5913  016E1E  0E80               	movlw	128
  5914  016E20  0101               	movlb	1	; () banked
  5915  016E22  1BD1               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  5916  016E24                     l1840:
  5917                           
  5918                           ; BSR set to: 1
  5919  016E24  C1CF  F1CF         	movff	___ftneg@f1,?___ftneg
  5920  016E28  C1D0  F1D0         	movff	___ftneg@f1+1,?___ftneg+1
  5921  016E2C  C1D1  F1D1         	movff	___ftneg@f1+2,?___ftneg+2
  5922                           
  5923                           ; BSR set to: 1
  5924  016E30  0012               	return		;funcret
  5925  016E32                     __end_of___ftneg:
  5926                           	opt stack 0
  5927                           tblptru	equ	0xFF8
  5928                           tblptrh	equ	0xFF7
  5929                           tblptrl	equ	0xFF6
  5930                           tablat	equ	0xFF5
  5931                           prodh	equ	0xFF4
  5932                           prodl	equ	0xFF3
  5933                           postinc0	equ	0xFEE
  5934                           plusw0	equ	0xFEB
  5935                           wreg	equ	0xFE8
  5936                           postdec1	equ	0xFE5
  5937                           fsr1h	equ	0xFE2
  5938                           fsr1l	equ	0xFE1
  5939                           indf2	equ	0xFDF
  5940                           postinc2	equ	0xFDE
  5941                           postdec2	equ	0xFDD
  5942                           plusw2	equ	0xFDB
  5943                           fsr2h	equ	0xFDA
  5944                           fsr2l	equ	0xFD9
  5945                           status	equ	0xFD8
  5946                           
  5947 ;; *************** function _security_force_key_update *****************
  5948 ;; Defined at:
  5949 ;;		line 71 in file "src/miwi/drv_mrf_miwi_89xa.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  i               2    0[BANK1 ] int 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;		None               void
  5956 ;; Registers used:
  5957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5964 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5966 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5967 ;;Total ram usage:        2 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    9
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		_main
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text11
  5978  016BB8                     __ptext11:
  5979                           	opt stack 0
  5980  016BB8                     _security_force_key_update:
  5981                           	opt stack 21
  5982                           
  5983                           ;drv_mrf_miwi_89xa.c: 73: for(int i = 0; i < 8; i++)
  5984                           
  5985                           ; BSR set to: 1
  5986                           ;incstack = 0
  5987  016BB8  0E00               	movlw	0
  5988  016BBA  0101               	movlb	1	; () banked
  5989  016BBC  6F8B               	movwf	(security_force_key_update@i+1)& (0+255),b
  5990  016BBE  0E00               	movlw	0
  5991  016BC0  6F8A               	movwf	security_force_key_update@i& (0+255),b
  5992  016BC2                     l13967:
  5993                           
  5994                           ; BSR set to: 1
  5995  016BC2  0101               	movlb	1	; () banked
  5996  016BC4  BF8B               	btfsc	(security_force_key_update@i+1)& (0+255),7,b
  5997  016BC6  D008               	goto	l13971
  5998  016BC8  0101               	movlb	1	; () banked
  5999  016BCA  518B               	movf	(security_force_key_update@i+1)& (0+255),w,b
  6000  016BCC  E11B               	bnz	l237
  6001  016BCE  0E08               	movlw	8
  6002  016BD0  0101               	movlb	1	; () banked
  6003  016BD2  5D8A               	subwf	security_force_key_update@i& (0+255),w,b
  6004  016BD4  B0D8               	btfsc	status,0,c
  6005  016BD6  0012               	return	
  6006  016BD8                     l13971:
  6007                           
  6008                           ; BSR set to: 1
  6009                           ;drv_mrf_miwi_89xa.c: 74: {
  6010                           ;drv_mrf_miwi_89xa.c: 75: key[i] = mySecurityKey[i];
  6011  016BD8  0EA3               	movlw	low _mySecurityKey
  6012  016BDA  0101               	movlb	1	; () banked
  6013  016BDC  258A               	addwf	security_force_key_update@i& (0+255),w,b
  6014  016BDE  6ED9               	movwf	fsr2l,c
  6015  016BE0  0E00               	movlw	high _mySecurityKey
  6016  016BE2  0101               	movlb	1	; () banked
  6017  016BE4  218B               	addwfc	(security_force_key_update@i+1)& (0+255),w,b
  6018  016BE6  6EDA               	movwf	fsr2h,c
  6019  016BE8  0EC0               	movlw	low _key
  6020  016BEA  0101               	movlb	1	; () banked
  6021  016BEC  258A               	addwf	security_force_key_update@i& (0+255),w,b
  6022  016BEE  6EE1               	movwf	fsr1l,c
  6023  016BF0  0E00               	movlw	high _key
  6024  016BF2  0101               	movlb	1	; () banked
  6025  016BF4  218B               	addwfc	(security_force_key_update@i+1)& (0+255),w,b
  6026  016BF6  6EE2               	movwf	fsr1h,c
  6027  016BF8  CFDF FFE7          	movff	indf2,indf1
  6028                           
  6029                           ; BSR set to: 1
  6030  016BFC  0101               	movlb	1	; () banked
  6031  016BFE  4B8A               	infsnz	security_force_key_update@i& (0+255),f,b
  6032  016C00  2B8B               	incf	(security_force_key_update@i+1)& (0+255),f,b
  6033  016C02  D7DF               	goto	l13967
  6034  016C04                     l237:
  6035                           
  6036                           ; BSR set to: 1
  6037  016C04  0012               	return		;funcret
  6038  016C06                     __end_of_security_force_key_update:
  6039                           	opt stack 0
  6040                           tblptru	equ	0xFF8
  6041                           tblptrh	equ	0xFF7
  6042                           tblptrl	equ	0xFF6
  6043                           tablat	equ	0xFF5
  6044                           prodh	equ	0xFF4
  6045                           prodl	equ	0xFF3
  6046                           postinc0	equ	0xFEE
  6047                           plusw0	equ	0xFEB
  6048                           wreg	equ	0xFE8
  6049                           indf1	equ	0xFE7
  6050                           postdec1	equ	0xFE5
  6051                           fsr1h	equ	0xFE2
  6052                           fsr1l	equ	0xFE1
  6053                           indf2	equ	0xFDF
  6054                           postinc2	equ	0xFDE
  6055                           postdec2	equ	0xFDD
  6056                           plusw2	equ	0xFDB
  6057                           fsr2h	equ	0xFDA
  6058                           fsr2l	equ	0xFD9
  6059                           status	equ	0xFD8
  6060                           
  6061 ;; *************** function _read_sensors *****************
  6062 ;; Defined at:
  6063 ;;		line 420 in file "src/main.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;		None
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  value           2   94[BANK1 ] unsigned int 
  6068 ;;  adc_result      2   92[BANK1 ] unsigned int 
  6069 ;;  t1              1   91[BANK1 ] unsigned char 
  6070 ;;  t0              1   90[BANK1 ] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;		None               void
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6081 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6082 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6083 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;Total ram usage:        9 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:   11
  6087 ;; This function calls:
  6088 ;;		_OpenI2C1
  6089 ;;		_ReadI2C1
  6090 ;;		_WriteI2C1
  6091 ;;		___ftdiv
  6092 ;;		___ftmul
  6093 ;;		___fttol
  6094 ;;		___lwtoft
  6095 ;; This function is called by:
  6096 ;;		_main
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text12
  6101  012D68                     __ptext12:
  6102                           	opt stack 0
  6103  012D68                     _read_sensors:
  6104                           	opt stack 19
  6105                           
  6106                           ;main.c: 423: ADCON0bits.ADON = 1;
  6107                           
  6108                           ; BSR set to: 1
  6109                           ;incstack = 0
  6110  012D68  80C2               	bsf	4034,0,c	;volatile
  6111                           
  6112                           ;main.c: 424: LATAbits.LATA6 = 1;
  6113  012D6A  8C89               	bsf	3977,6,c	;volatile
  6114                           
  6115                           ;main.c: 425: _delay((unsigned long)((20)*(8000000/4000.0)));
  6116  012D6C  0E34               	movlw	52
  6117  012D6E  0101               	movlb	1	; () banked
  6118  012D70  6FE1               	movwf	??_read_sensors& (0+255),b
  6119  012D72  0EF2               	movlw	242
  6120  012D74                     u18317:
  6121  012D74  2EE8               	decfsz	wreg,f,c
  6122  012D76  D7FE               	goto	u18317
  6123  012D78  2FE1               	decfsz	??_read_sensors& (0+255),f,b
  6124  012D7A  D7FC               	goto	u18317
  6125                           
  6126                           ;main.c: 428: ADCON1bits.ADCAL = 1;
  6127  012D7C  8CC1               	bsf	4033,6,c	;volatile
  6128                           
  6129                           ;main.c: 429: ADCON0bits.GO = 1;
  6130  012D7E  82C2               	bsf	4034,1,c	;volatile
  6131  012D80                     l1140:
  6132  012D80  B2C2               	btfsc	4034,1,c	;volatile
  6133  012D82  D7FE               	goto	l1140
  6134                           
  6135                           ;main.c: 431: ADCON1bits.ADCAL = 0;
  6136  012D84  9CC1               	bcf	4033,6,c	;volatile
  6137                           
  6138                           ;main.c: 434: ADCON0bits.CHS = 0;
  6139  012D86  94C2               	bcf	4034,2,c	;volatile
  6140  012D88  96C2               	bcf	4034,3,c	;volatile
  6141  012D8A  98C2               	bcf	4034,4,c	;volatile
  6142  012D8C  9AC2               	bcf	4034,5,c	;volatile
  6143                           
  6144                           ;main.c: 435: ADCON0bits.GO = 1;
  6145  012D8E  82C2               	bsf	4034,1,c	;volatile
  6146  012D90                     l1143:
  6147  012D90  B2C2               	btfsc	4034,1,c	;volatile
  6148  012D92  D7FE               	goto	l1143
  6149                           
  6150                           ;main.c: 438: uint16_t adc_result = (ADRESHbits.ADRESH << 8) + ADRESLbits.ADRESL;
  6151  012D94  50C4               	movf	4036,w,c	;volatile
  6152  012D96  0101               	movlb	1	; () banked
  6153  012D98  6FE2               	movwf	(??_read_sensors+1)& (0+255),b
  6154  012D9A  6BE1               	clrf	??_read_sensors& (0+255),b
  6155  012D9C  50C3               	movf	4035,w,c	;volatile
  6156  012D9E  0101               	movlb	1	; () banked
  6157  012DA0  25E1               	addwf	??_read_sensors& (0+255),w,b
  6158  012DA2  0101               	movlb	1	; () banked
  6159  012DA4  6FE6               	movwf	read_sensors@adc_result& (0+255),b
  6160  012DA6  0E00               	movlw	0
  6161  012DA8  0101               	movlb	1	; () banked
  6162  012DAA  21E2               	addwfc	(??_read_sensors+1)& (0+255),w,b
  6163  012DAC  0101               	movlb	1	; () banked
  6164  012DAE  6FE7               	movwf	(read_sensors@adc_result+1)& (0+255),b
  6165                           
  6166                           ; BSR set to: 1
  6167                           ;main.c: 439: m_battery_voltage = (4096F / adc_result) * 1.24F;
  6168  012DB0  C1E6  F192         	movff	read_sensors@adc_result,___lwtoft@c
  6169  012DB4  C1E7  F193         	movff	read_sensors@adc_result+1,___lwtoft@c+1
  6170  012DB8  EC2F  F0B7         	call	___lwtoft	;wreg free
  6171  012DBC  C192  F1A2         	movff	?___lwtoft,___ftdiv@f2
  6172  012DC0  C193  F1A3         	movff	?___lwtoft+1,___ftdiv@f2+1
  6173  012DC4  C194  F1A4         	movff	?___lwtoft+2,___ftdiv@f2+2
  6174  012DC8  0E00               	movlw	0
  6175  012DCA  0101               	movlb	1	; () banked
  6176  012DCC  6F9F               	movwf	___ftdiv@f1& (0+255),b
  6177  012DCE  0E80               	movlw	128
  6178  012DD0  0101               	movlb	1	; () banked
  6179  012DD2  6FA0               	movwf	(___ftdiv@f1+1)& (0+255),b
  6180  012DD4  0E45               	movlw	69
  6181  012DD6  0101               	movlb	1	; () banked
  6182  012DD8  6FA1               	movwf	(___ftdiv@f1+2)& (0+255),b
  6183  012DDA  ECFE  F0A4         	call	___ftdiv	;wreg free
  6184  012DDE  C19F  F1D2         	movff	?___ftdiv,___ftmul@f1
  6185  012DE2  C1A0  F1D3         	movff	?___ftdiv+1,___ftmul@f1+1
  6186  012DE6  C1A1  F1D4         	movff	?___ftdiv+2,___ftmul@f1+2
  6187  012DEA  0EB8               	movlw	184
  6188  012DEC  0101               	movlb	1	; () banked
  6189  012DEE  6FD5               	movwf	___ftmul@f2& (0+255),b
  6190  012DF0  0E9E               	movlw	158
  6191  012DF2  0101               	movlb	1	; () banked
  6192  012DF4  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  6193  012DF6  0E3F               	movlw	63
  6194  012DF8  0101               	movlb	1	; () banked
  6195  012DFA  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  6196  012DFC  ECA4  F0A3         	call	___ftmul	;wreg free
  6197  012E00  C1D2  F12D         	movff	?___ftmul,_m_battery_voltage
  6198  012E04  C1D3  F12E         	movff	?___ftmul+1,_m_battery_voltage+1
  6199  012E08  C1D4  F12F         	movff	?___ftmul+2,_m_battery_voltage+2
  6200                           
  6201                           ;main.c: 442: ADCON0bits.CHS = 1;
  6202  012E0C  50C2               	movf	4034,w,c	;volatile
  6203  012E0E  0BC3               	andlw	-61
  6204  012E10  0904               	iorlw	4
  6205  012E12  6EC2               	movwf	4034,c	;volatile
  6206                           
  6207                           ;main.c: 444: ADCON0bits.GO = 1;
  6208  012E14  82C2               	bsf	4034,1,c	;volatile
  6209  012E16                     l1146:
  6210  012E16  B2C2               	btfsc	4034,1,c	;volatile
  6211  012E18  D7FE               	goto	l1146
  6212                           
  6213                           ;main.c: 447: adc_result = (ADRESHbits.ADRESH << 8) + ADRESLbits.ADRESL;
  6214  012E1A  50C4               	movf	4036,w,c	;volatile
  6215  012E1C  0101               	movlb	1	; () banked
  6216  012E1E  6FE2               	movwf	(??_read_sensors+1)& (0+255),b
  6217  012E20  6BE1               	clrf	??_read_sensors& (0+255),b
  6218  012E22  50C3               	movf	4035,w,c	;volatile
  6219  012E24  0101               	movlb	1	; () banked
  6220  012E26  25E1               	addwf	??_read_sensors& (0+255),w,b
  6221  012E28  0101               	movlb	1	; () banked
  6222  012E2A  6FE6               	movwf	read_sensors@adc_result& (0+255),b
  6223  012E2C  0E00               	movlw	0
  6224  012E2E  0101               	movlb	1	; () banked
  6225  012E30  21E2               	addwfc	(??_read_sensors+1)& (0+255),w,b
  6226  012E32  0101               	movlb	1	; () banked
  6227  012E34  6FE7               	movwf	(read_sensors@adc_result+1)& (0+255),b
  6228                           
  6229                           ; BSR set to: 1
  6230                           ;main.c: 448: m_light_level = (uint8_t)((adc_result / 74F) * 100F);
  6231  012E36  0E00               	movlw	0
  6232  012E38  0101               	movlb	1	; () banked
  6233  012E3A  6FD5               	movwf	___ftmul@f2& (0+255),b
  6234  012E3C  0EC8               	movlw	200
  6235  012E3E  0101               	movlb	1	; () banked
  6236  012E40  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  6237  012E42  0E42               	movlw	66
  6238  012E44  0101               	movlb	1	; () banked
  6239  012E46  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  6240  012E48  0E00               	movlw	0
  6241  012E4A  0101               	movlb	1	; () banked
  6242  012E4C  6FA2               	movwf	___ftdiv@f2& (0+255),b
  6243  012E4E  0E94               	movlw	148
  6244  012E50  0101               	movlb	1	; () banked
  6245  012E52  6FA3               	movwf	(___ftdiv@f2+1)& (0+255),b
  6246  012E54  0E42               	movlw	66
  6247  012E56  0101               	movlb	1	; () banked
  6248  012E58  6FA4               	movwf	(___ftdiv@f2+2)& (0+255),b
  6249  012E5A  C1E6  F192         	movff	read_sensors@adc_result,___lwtoft@c
  6250  012E5E  C1E7  F193         	movff	read_sensors@adc_result+1,___lwtoft@c+1
  6251  012E62  EC2F  F0B7         	call	___lwtoft	;wreg free
  6252  012E66  C192  F19F         	movff	?___lwtoft,___ftdiv@f1
  6253  012E6A  C193  F1A0         	movff	?___lwtoft+1,___ftdiv@f1+1
  6254  012E6E  C194  F1A1         	movff	?___lwtoft+2,___ftdiv@f1+2
  6255  012E72  ECFE  F0A4         	call	___ftdiv	;wreg free
  6256  012E76  C19F  F1D2         	movff	?___ftdiv,___ftmul@f1
  6257  012E7A  C1A0  F1D3         	movff	?___ftdiv+1,___ftmul@f1+1
  6258  012E7E  C1A1  F1D4         	movff	?___ftdiv+2,___ftmul@f1+2
  6259  012E82  ECA4  F0A3         	call	___ftmul	;wreg free
  6260  012E86  C1D2  F1AE         	movff	?___ftmul,___fttol@f1
  6261  012E8A  C1D3  F1AF         	movff	?___ftmul+1,___fttol@f1+1
  6262  012E8E  C1D4  F1B0         	movff	?___ftmul+2,___fttol@f1+2
  6263  012E92  ECA4  F0A5         	call	___fttol	;wreg free
  6264  012E96  0101               	movlb	1	; () banked
  6265  012E98  51AE               	movf	?___fttol& (0+255),w,b
  6266  012E9A  0101               	movlb	1	; () banked
  6267  012E9C  6F49               	movwf	_m_light_level& (0+255),b
  6268                           
  6269                           ; BSR set to: 1
  6270                           ;main.c: 449: if (m_light_level > 100)
  6271  012E9E  0E64               	movlw	100
  6272  012EA0  0101               	movlb	1	; () banked
  6273  012EA2  6549               	cpfsgt	_m_light_level& (0+255),b
  6274  012EA4  D003               	goto	l14509
  6275                           
  6276                           ; BSR set to: 1
  6277                           ;main.c: 450: {
  6278                           ;main.c: 451: m_light_level = 100;
  6279  012EA6  0E64               	movlw	100
  6280  012EA8  0101               	movlb	1	; () banked
  6281  012EAA  6F49               	movwf	_m_light_level& (0+255),b
  6282  012EAC                     l14509:
  6283                           
  6284                           ; BSR set to: 1
  6285                           ;main.c: 452: }
  6286                           ;main.c: 457: _delay((unsigned long)((90)*(8000000/4000.0)));
  6287  012EAC  0EEA               	movlw	234
  6288  012EAE  0101               	movlb	1	; () banked
  6289  012EB0  6FE1               	movwf	??_read_sensors& (0+255),b
  6290  012EB2  0EC3               	movlw	195
  6291  012EB4                     u18327:
  6292  012EB4  2EE8               	decfsz	wreg,f,c
  6293  012EB6  D7FE               	goto	u18327
  6294  012EB8  2FE1               	decfsz	??_read_sensors& (0+255),f,b
  6295  012EBA  D7FC               	goto	u18327
  6296  012EBC  F000               	nop	
  6297                           
  6298                           ;main.c: 458: OpenI2C1(0b00001000, 0b10000000);
  6299  012EBE  0E80               	movlw	128
  6300  012EC0  0101               	movlb	1	; () banked
  6301  012EC2  6F8A               	movwf	OpenI2C1@slew& (0+255),b
  6302  012EC4  0E08               	movlw	8
  6303  012EC6  EC68  F0B7         	call	_OpenI2C1
  6304  012ECA                     l14513:
  6305  012ECA  A4C7               	btfss	4039,2,c	;volatile
  6306  012ECC  D004               	goto	u17260
  6307  012ECE  0101               	movlb	1	; () banked
  6308  012ED0  6BE1               	clrf	??_read_sensors& (0+255),b
  6309  012ED2  2BE1               	incf	??_read_sensors& (0+255),f,b
  6310  012ED4  D002               	goto	u17268
  6311  012ED6                     u17260:
  6312  012ED6  0101               	movlb	1	; () banked
  6313  012ED8  6BE1               	clrf	??_read_sensors& (0+255),b
  6314  012EDA                     u17268:
  6315  012EDA  50C5               	movf	4037,w,c	;volatile
  6316  012EDC  0B1F               	andlw	31
  6317  012EDE  0101               	movlb	1	; () banked
  6318  012EE0  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6319  012EE2  0900               	iorlw	0
  6320  012EE4  A4D8               	btfss	status,2,c
  6321  012EE6  D7F1               	goto	l14513
  6322                           
  6323                           ; BSR set to: 1
  6324                           ;main.c: 464: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  6325  012EE8  80C5               	bsf	4037,0,c	;volatile
  6326  012EEA                     l1153:
  6327  012EEA  B0C5               	btfsc	4037,0,c	;volatile
  6328  012EEC  D7FE               	goto	l1153
  6329  012EEE                     l14515:
  6330  012EEE  A4C7               	btfss	4039,2,c	;volatile
  6331  012EF0  D004               	goto	u17290
  6332  012EF2  0101               	movlb	1	; () banked
  6333  012EF4  6BE1               	clrf	??_read_sensors& (0+255),b
  6334  012EF6  2BE1               	incf	??_read_sensors& (0+255),f,b
  6335  012EF8  D002               	goto	u17298
  6336  012EFA                     u17290:
  6337  012EFA  0101               	movlb	1	; () banked
  6338  012EFC  6BE1               	clrf	??_read_sensors& (0+255),b
  6339  012EFE                     u17298:
  6340  012EFE  50C5               	movf	4037,w,c	;volatile
  6341  012F00  0B1F               	andlw	31
  6342  012F02  0101               	movlb	1	; () banked
  6343  012F04  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6344  012F06  0900               	iorlw	0
  6345  012F08  A4D8               	btfss	status,2,c
  6346  012F0A  D7F1               	goto	l14515
  6347                           
  6348                           ; BSR set to: 1
  6349                           ;main.c: 466: WriteI2C1( 0b10010000 & 0xfe );
  6350                           
  6351                           ; BSR set to: 1
  6352  012F0C  0E90               	movlw	144
  6353  012F0E  ECC4  F0B4         	call	_WriteI2C1
  6354  012F12                     l14519:
  6355  012F12  A4C7               	btfss	4039,2,c	;volatile
  6356  012F14  D004               	goto	u17310
  6357  012F16  0101               	movlb	1	; () banked
  6358  012F18  6BE1               	clrf	??_read_sensors& (0+255),b
  6359  012F1A  2BE1               	incf	??_read_sensors& (0+255),f,b
  6360  012F1C  D002               	goto	u17318
  6361  012F1E                     u17310:
  6362  012F1E  0101               	movlb	1	; () banked
  6363  012F20  6BE1               	clrf	??_read_sensors& (0+255),b
  6364  012F22                     u17318:
  6365  012F22  50C5               	movf	4037,w,c	;volatile
  6366  012F24  0B1F               	andlw	31
  6367  012F26  0101               	movlb	1	; () banked
  6368  012F28  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6369  012F2A  0900               	iorlw	0
  6370  012F2C  A4D8               	btfss	status,2,c
  6371  012F2E  D7F1               	goto	l14519
  6372                           
  6373                           ; BSR set to: 1
  6374                           ;main.c: 468: WriteI2C1( 0x00 );
  6375                           
  6376                           ; BSR set to: 1
  6377  012F30  0E00               	movlw	0
  6378  012F32  ECC4  F0B4         	call	_WriteI2C1
  6379  012F36                     l14523:
  6380  012F36  A4C7               	btfss	4039,2,c	;volatile
  6381  012F38  D004               	goto	u17330
  6382  012F3A  0101               	movlb	1	; () banked
  6383  012F3C  6BE1               	clrf	??_read_sensors& (0+255),b
  6384  012F3E  2BE1               	incf	??_read_sensors& (0+255),f,b
  6385  012F40  D002               	goto	u17338
  6386  012F42                     u17330:
  6387  012F42  0101               	movlb	1	; () banked
  6388  012F44  6BE1               	clrf	??_read_sensors& (0+255),b
  6389  012F46                     u17338:
  6390  012F46  50C5               	movf	4037,w,c	;volatile
  6391  012F48  0B1F               	andlw	31
  6392  012F4A  0101               	movlb	1	; () banked
  6393  012F4C  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6394  012F4E  0900               	iorlw	0
  6395  012F50  A4D8               	btfss	status,2,c
  6396  012F52  D7F1               	goto	l14523
  6397                           
  6398                           ; BSR set to: 1
  6399                           ;main.c: 470: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  6400  012F54  84C5               	bsf	4037,2,c	;volatile
  6401  012F56                     l1165:
  6402  012F56  B4C5               	btfsc	4037,2,c	;volatile
  6403  012F58  D7FE               	goto	l1165
  6404  012F5A                     l14525:
  6405  012F5A  A4C7               	btfss	4039,2,c	;volatile
  6406  012F5C  D004               	goto	u17360
  6407  012F5E  0101               	movlb	1	; () banked
  6408  012F60  6BE1               	clrf	??_read_sensors& (0+255),b
  6409  012F62  2BE1               	incf	??_read_sensors& (0+255),f,b
  6410  012F64  D002               	goto	u17368
  6411  012F66                     u17360:
  6412  012F66  0101               	movlb	1	; () banked
  6413  012F68  6BE1               	clrf	??_read_sensors& (0+255),b
  6414  012F6A                     u17368:
  6415  012F6A  50C5               	movf	4037,w,c	;volatile
  6416  012F6C  0B1F               	andlw	31
  6417  012F6E  0101               	movlb	1	; () banked
  6418  012F70  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6419  012F72  0900               	iorlw	0
  6420  012F74  A4D8               	btfss	status,2,c
  6421  012F76  D7F1               	goto	l14525
  6422                           
  6423                           ; BSR set to: 1
  6424                           ;main.c: 474: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  6425  012F78  80C5               	bsf	4037,0,c	;volatile
  6426  012F7A                     l1171:
  6427  012F7A  B0C5               	btfsc	4037,0,c	;volatile
  6428  012F7C  D7FE               	goto	l1171
  6429  012F7E                     l14527:
  6430  012F7E  A4C7               	btfss	4039,2,c	;volatile
  6431  012F80  D004               	goto	u17390
  6432  012F82  0101               	movlb	1	; () banked
  6433  012F84  6BE1               	clrf	??_read_sensors& (0+255),b
  6434  012F86  2BE1               	incf	??_read_sensors& (0+255),f,b
  6435  012F88  D002               	goto	u17398
  6436  012F8A                     u17390:
  6437  012F8A  0101               	movlb	1	; () banked
  6438  012F8C  6BE1               	clrf	??_read_sensors& (0+255),b
  6439  012F8E                     u17398:
  6440  012F8E  50C5               	movf	4037,w,c	;volatile
  6441  012F90  0B1F               	andlw	31
  6442  012F92  0101               	movlb	1	; () banked
  6443  012F94  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6444  012F96  0900               	iorlw	0
  6445  012F98  A4D8               	btfss	status,2,c
  6446  012F9A  D7F1               	goto	l14527
  6447                           
  6448                           ; BSR set to: 1
  6449                           ;main.c: 476: WriteI2C1( 0b10010000 | 0x01 );
  6450                           
  6451                           ; BSR set to: 1
  6452  012F9C  0E91               	movlw	145
  6453  012F9E  ECC4  F0B4         	call	_WriteI2C1
  6454  012FA2                     l14531:
  6455  012FA2  A4C7               	btfss	4039,2,c	;volatile
  6456  012FA4  D004               	goto	u17410
  6457  012FA6  0101               	movlb	1	; () banked
  6458  012FA8  6BE1               	clrf	??_read_sensors& (0+255),b
  6459  012FAA  2BE1               	incf	??_read_sensors& (0+255),f,b
  6460  012FAC  D002               	goto	u17418
  6461  012FAE                     u17410:
  6462  012FAE  0101               	movlb	1	; () banked
  6463  012FB0  6BE1               	clrf	??_read_sensors& (0+255),b
  6464  012FB2                     u17418:
  6465  012FB2  50C5               	movf	4037,w,c	;volatile
  6466  012FB4  0B1F               	andlw	31
  6467  012FB6  0101               	movlb	1	; () banked
  6468  012FB8  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6469  012FBA  0900               	iorlw	0
  6470  012FBC  A4D8               	btfss	status,2,c
  6471  012FBE  D7F1               	goto	l14531
  6472                           
  6473                           ; BSR set to: 1
  6474                           ;main.c: 478: t1 = ReadI2C1();
  6475                           
  6476                           ; BSR set to: 1
  6477  012FC0  EC96  F0B7         	call	_ReadI2C1	;wreg free
  6478  012FC4  0101               	movlb	1	; () banked
  6479  012FC6  6FE5               	movwf	read_sensors@t1& (0+255),b
  6480                           
  6481                           ; BSR set to: 1
  6482                           ;main.c: 479: SSP1CON2bits.ACKDT=0, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  6483  012FC8  9AC5               	bcf	4037,5,c	;volatile
  6484                           
  6485                           ; BSR set to: 1
  6486  012FCA  88C5               	bsf	4037,4,c	;volatile
  6487  012FCC                     l1180:
  6488  012FCC  B8C5               	btfsc	4037,4,c	;volatile
  6489  012FCE  D7FE               	goto	l1180
  6490                           
  6491                           ;main.c: 480: t0 = ReadI2C1();
  6492  012FD0  EC96  F0B7         	call	_ReadI2C1	;wreg free
  6493  012FD4  0101               	movlb	1	; () banked
  6494  012FD6  6FE4               	movwf	read_sensors@t0& (0+255),b
  6495                           
  6496                           ; BSR set to: 1
  6497                           ;main.c: 481: SSP1CON2bits.ACKDT=1, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  6498  012FD8  8AC5               	bsf	4037,5,c	;volatile
  6499                           
  6500                           ; BSR set to: 1
  6501  012FDA  88C5               	bsf	4037,4,c	;volatile
  6502  012FDC                     l1183:
  6503  012FDC  B8C5               	btfsc	4037,4,c	;volatile
  6504  012FDE  D7FE               	goto	l1183
  6505                           
  6506                           ;main.c: 482: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  6507  012FE0  84C5               	bsf	4037,2,c	;volatile
  6508  012FE2                     l1186:
  6509  012FE2  B4C5               	btfsc	4037,2,c	;volatile
  6510  012FE4  D7FE               	goto	l1186
  6511                           
  6512                           ;main.c: 484: uint16_t value = (t1<<8) + t0;
  6513  012FE6  0101               	movlb	1	; () banked
  6514  012FE8  51E5               	movf	read_sensors@t1& (0+255),w,b
  6515  012FEA  0101               	movlb	1	; () banked
  6516  012FEC  6FE2               	movwf	(??_read_sensors+1)& (0+255),b
  6517  012FEE  6BE1               	clrf	??_read_sensors& (0+255),b
  6518  012FF0  0101               	movlb	1	; () banked
  6519  012FF2  51E4               	movf	read_sensors@t0& (0+255),w,b
  6520  012FF4  0101               	movlb	1	; () banked
  6521  012FF6  25E1               	addwf	??_read_sensors& (0+255),w,b
  6522  012FF8  0101               	movlb	1	; () banked
  6523  012FFA  6FE8               	movwf	read_sensors@value& (0+255),b
  6524  012FFC  0101               	movlb	1	; () banked
  6525  012FFE  0E00               	movlw	0
  6526  013000  0101               	movlb	1	; () banked
  6527  013002  21E2               	addwfc	(??_read_sensors+1)& (0+255),w,b
  6528  013004  0101               	movlb	1	; () banked
  6529  013006  6FE9               	movwf	(read_sensors@value+1)& (0+255),b
  6530                           
  6531                           ;main.c: 485: value = (value>>4);
  6532  013008  C1E8  F1E1         	movff	read_sensors@value,??_read_sensors
  6533  01300C  C1E9  F1E2         	movff	read_sensors@value+1,??_read_sensors+1
  6534  013010  0E04               	movlw	4
  6535  013012  0101               	movlb	1	; () banked
  6536  013014  6FE3               	movwf	(??_read_sensors+2)& (0+255),b
  6537  013016                     u17465:
  6538  013016  0101               	movlb	1	; () banked
  6539  013018  90D8               	bcf	status,0,c
  6540  01301A  33E2               	rrcf	(??_read_sensors+1)& (0+255),f,b
  6541  01301C  33E1               	rrcf	??_read_sensors& (0+255),f,b
  6542  01301E  0101               	movlb	1	; () banked
  6543  013020  2FE3               	decfsz	(??_read_sensors+2)& (0+255),f,b
  6544  013022  D7F9               	goto	u17465
  6545  013024  C1E1  F1E8         	movff	??_read_sensors,read_sensors@value
  6546  013028  C1E2  F1E9         	movff	??_read_sensors+1,read_sensors@value+1
  6547                           
  6548                           ; BSR set to: 1
  6549                           ;main.c: 486: m_temperature = ((float)value)*0.0625F;
  6550  01302C  C1E8  F192         	movff	read_sensors@value,___lwtoft@c
  6551  013030  C1E9  F193         	movff	read_sensors@value+1,___lwtoft@c+1
  6552  013034  EC2F  F0B7         	call	___lwtoft	;wreg free
  6553  013038  C192  F1D2         	movff	?___lwtoft,___ftmul@f1
  6554  01303C  C193  F1D3         	movff	?___lwtoft+1,___ftmul@f1+1
  6555  013040  C194  F1D4         	movff	?___lwtoft+2,___ftmul@f1+2
  6556  013044  0E00               	movlw	0
  6557  013046  0101               	movlb	1	; () banked
  6558  013048  6FD5               	movwf	___ftmul@f2& (0+255),b
  6559  01304A  0E80               	movlw	128
  6560  01304C  0101               	movlb	1	; () banked
  6561  01304E  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  6562  013050  0E3D               	movlw	61
  6563  013052  0101               	movlb	1	; () banked
  6564  013054  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  6565  013056  ECA4  F0A3         	call	___ftmul	;wreg free
  6566  01305A  C1D2  F130         	movff	?___ftmul,_m_temperature
  6567  01305E  C1D3  F131         	movff	?___ftmul+1,_m_temperature+1
  6568  013062  C1D4  F132         	movff	?___ftmul+2,_m_temperature+2
  6569                           
  6570                           ;main.c: 488: ADCON0bits.ADON = 0;
  6571  013066  90C2               	bcf	4034,0,c	;volatile
  6572                           
  6573                           ;main.c: 489: SSP1CON1 &=0xDF;
  6574  013068  9AC6               	bcf	4038,5,c	;volatile
  6575                           
  6576                           ;main.c: 490: LATAbits.LATA6 = 0;
  6577  01306A  9C89               	bcf	3977,6,c	;volatile
  6578  01306C  0012               	return		;funcret
  6579  01306E                     __end_of_read_sensors:
  6580                           	opt stack 0
  6581                           tblptru	equ	0xFF8
  6582                           tblptrh	equ	0xFF7
  6583                           tblptrl	equ	0xFF6
  6584                           tablat	equ	0xFF5
  6585                           prodh	equ	0xFF4
  6586                           prodl	equ	0xFF3
  6587                           postinc0	equ	0xFEE
  6588                           plusw0	equ	0xFEB
  6589                           wreg	equ	0xFE8
  6590                           indf1	equ	0xFE7
  6591                           postdec1	equ	0xFE5
  6592                           fsr1h	equ	0xFE2
  6593                           fsr1l	equ	0xFE1
  6594                           indf2	equ	0xFDF
  6595                           postinc2	equ	0xFDE
  6596                           postdec2	equ	0xFDD
  6597                           plusw2	equ	0xFDB
  6598                           fsr2h	equ	0xFDA
  6599                           fsr2l	equ	0xFD9
  6600                           status	equ	0xFD8
  6601                           
  6602 ;; *************** function ___lwtoft *****************
  6603 ;; Defined at:
  6604 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwtoft.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  c               2    8[BANK1 ] unsigned int 
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;		None
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  3    8[BANK1 ] float 
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6618 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6621 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;Total ram usage:        3 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:   10
  6625 ;; This function calls:
  6626 ;;		___ftpack
  6627 ;; This function is called by:
  6628 ;;		_read_sensors
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text13
  6633  016E5E                     __ptext13:
  6634                           	opt stack 0
  6635  016E5E                     ___lwtoft:
  6636                           	opt stack 19
  6637                           
  6638                           ;incstack = 0
  6639  016E5E  C192  F18A         	movff	___lwtoft@c,___ftpack@arg
  6640  016E62  C193  F18B         	movff	___lwtoft@c+1,___ftpack@arg+1
  6641  016E66  0101               	movlb	1	; () banked
  6642  016E68  6B8C               	clrf	(___ftpack@arg+2)& (0+255),b
  6643  016E6A  0E8E               	movlw	142
  6644  016E6C  0101               	movlb	1	; () banked
  6645  016E6E  6F8D               	movwf	___ftpack@exp& (0+255),b
  6646  016E70  0E00               	movlw	0
  6647  016E72  0101               	movlb	1	; () banked
  6648  016E74  6F8E               	movwf	___ftpack@sign& (0+255),b
  6649  016E76  ECF7  F0AA         	call	___ftpack	;wreg free
  6650  016E7A  C18A  F192         	movff	?___ftpack,?___lwtoft
  6651  016E7E  C18B  F193         	movff	?___ftpack+1,?___lwtoft+1
  6652  016E82  C18C  F194         	movff	?___ftpack+2,?___lwtoft+2
  6653  016E86  0012               	return	
  6654  016E88                     __end_of___lwtoft:
  6655                           	opt stack 0
  6656                           tblptru	equ	0xFF8
  6657                           tblptrh	equ	0xFF7
  6658                           tblptrl	equ	0xFF6
  6659                           tablat	equ	0xFF5
  6660                           prodh	equ	0xFF4
  6661                           prodl	equ	0xFF3
  6662                           postinc0	equ	0xFEE
  6663                           plusw0	equ	0xFEB
  6664                           wreg	equ	0xFE8
  6665                           indf1	equ	0xFE7
  6666                           postdec1	equ	0xFE5
  6667                           fsr1h	equ	0xFE2
  6668                           fsr1l	equ	0xFE1
  6669                           indf2	equ	0xFDF
  6670                           postinc2	equ	0xFDE
  6671                           postdec2	equ	0xFDD
  6672                           plusw2	equ	0xFDB
  6673                           fsr2h	equ	0xFDA
  6674                           fsr2l	equ	0xFD9
  6675                           status	equ	0xFD8
  6676                           
  6677 ;; *************** function ___fttol *****************
  6678 ;; Defined at:
  6679 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  f1              3   36[BANK1 ] float 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  lval            4   46[BANK1 ] unsigned long 
  6684 ;;  exp1            1   50[BANK1 ] unsigned char 
  6685 ;;  sign1           1   45[BANK1 ] unsigned char 
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  4   36[BANK1 ] long 
  6688 ;; Registers used:
  6689 ;;		wreg, status,2, status,0
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6695 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6696 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6697 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6698 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6699 ;;Total ram usage:       15 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    9
  6702 ;; This function calls:
  6703 ;;		Nothing
  6704 ;; This function is called by:
  6705 ;;		_read_sensors
  6706 ;;		_send_initial_update
  6707 ;;		_send_periodical_update
  6708 ;;		_floor
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text14
  6713  014B48                     __ptext14:
  6714                           	opt stack 0
  6715  014B48                     ___fttol:
  6716                           	opt stack 19
  6717                           
  6718                           ;incstack = 0
  6719  014B48  C1B0  F1B2         	movff	___fttol@f1+2,??___fttol
  6720  014B4C  0101               	movlb	1	; () banked
  6721  014B4E  6BB3               	clrf	(??___fttol+1)& (0+255),b
  6722  014B50  6BB4               	clrf	(??___fttol+2)& (0+255),b
  6723  014B52  0101               	movlb	1	; () banked
  6724  014B54  35AF               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6725  014B56  0101               	movlb	1	; () banked
  6726  014B58  37B2               	rlcf	??___fttol& (0+255),f,b
  6727  014B5A  E301               	bnc	u15401
  6728  014B5C  81B3               	bsf	(??___fttol+1)& (0+255),0,b
  6729  014B5E                     u15401:
  6730  014B5E  0101               	movlb	1	; () banked
  6731  014B60  51B2               	movf	??___fttol& (0+255),w,b
  6732  014B62  0101               	movlb	1	; () banked
  6733  014B64  6FBC               	movwf	___fttol@exp1& (0+255),b
  6734  014B66  0101               	movlb	1	; () banked
  6735  014B68  51BC               	movf	___fttol@exp1& (0+255),w,b
  6736  014B6A  A4D8               	btfss	status,2,c
  6737  014B6C  D00A               	goto	l13037
  6738                           
  6739                           ; BSR set to: 1
  6740  014B6E  0E00               	movlw	0
  6741  014B70  0101               	movlb	1	; () banked
  6742  014B72  6FAE               	movwf	?___fttol& (0+255),b
  6743  014B74  0E00               	movlw	0
  6744  014B76  6FAF               	movwf	(?___fttol+1)& (0+255),b
  6745  014B78  0E00               	movlw	0
  6746  014B7A  6FB0               	movwf	(?___fttol+2)& (0+255),b
  6747  014B7C  0E00               	movlw	0
  6748  014B7E  6FB1               	movwf	(?___fttol+3)& (0+255),b
  6749                           
  6750                           ; BSR set to: 1
  6751  014B80  0012               	return	
  6752  014B82                     l13037:
  6753                           
  6754                           ; BSR set to: 1
  6755  014B82  0E17               	movlw	23
  6756  014B84  0101               	movlb	1	; () banked
  6757  014B86  6FB2               	movwf	??___fttol& (0+255),b
  6758  014B88  C1AE  F1B3         	movff	___fttol@f1,??___fttol+1
  6759  014B8C  C1AF  F1B4         	movff	___fttol@f1+1,??___fttol+2
  6760  014B90  C1B0  F1B5         	movff	___fttol@f1+2,??___fttol+3
  6761  014B94  0101               	movlb	1	; () banked
  6762  014B96  29B2               	incf	??___fttol& (0+255),w,b
  6763  014B98  0101               	movlb	1	; () banked
  6764  014B9A  6FB6               	movwf	(??___fttol+4)& (0+255),b
  6765  014B9C  D005               	goto	u15420
  6766  014B9E                     u15425:
  6767  014B9E  0101               	movlb	1	; () banked
  6768  014BA0  90D8               	bcf	status,0,c
  6769  014BA2  33B5               	rrcf	(??___fttol+3)& (0+255),f,b
  6770  014BA4  33B4               	rrcf	(??___fttol+2)& (0+255),f,b
  6771  014BA6  33B3               	rrcf	(??___fttol+1)& (0+255),f,b
  6772  014BA8                     u15420:
  6773  014BA8  0101               	movlb	1	; () banked
  6774  014BAA  2FB6               	decfsz	(??___fttol+4)& (0+255),f,b
  6775  014BAC  D7F8               	goto	u15425
  6776  014BAE  0101               	movlb	1	; () banked
  6777  014BB0  51B3               	movf	(??___fttol+1)& (0+255),w,b
  6778  014BB2  0101               	movlb	1	; () banked
  6779  014BB4  6FB7               	movwf	___fttol@sign1& (0+255),b
  6780                           
  6781                           ; BSR set to: 1
  6782  014BB6  0101               	movlb	1	; () banked
  6783  014BB8  8FAF               	bsf	(___fttol@f1+1)& (0+255),7,b
  6784                           
  6785                           ; BSR set to: 1
  6786  014BBA  0EFF               	movlw	255
  6787  014BBC  0101               	movlb	1	; () banked
  6788  014BBE  17AE               	andwf	___fttol@f1& (0+255),f,b
  6789  014BC0  0EFF               	movlw	255
  6790  014BC2  0101               	movlb	1	; () banked
  6791  014BC4  17AF               	andwf	(___fttol@f1+1)& (0+255),f,b
  6792  014BC6  0E00               	movlw	0
  6793  014BC8  0101               	movlb	1	; () banked
  6794  014BCA  17B0               	andwf	(___fttol@f1+2)& (0+255),f,b
  6795                           
  6796                           ; BSR set to: 1
  6797  014BCC  0101               	movlb	1	; () banked
  6798  014BCE  51AE               	movf	___fttol@f1& (0+255),w,b
  6799  014BD0  0101               	movlb	1	; () banked
  6800  014BD2  6FB8               	movwf	___fttol@lval& (0+255),b
  6801  014BD4  0101               	movlb	1	; () banked
  6802  014BD6  51AF               	movf	(___fttol@f1+1)& (0+255),w,b
  6803  014BD8  0101               	movlb	1	; () banked
  6804  014BDA  6FB9               	movwf	(___fttol@lval+1)& (0+255),b
  6805  014BDC  0101               	movlb	1	; () banked
  6806  014BDE  51B0               	movf	(___fttol@f1+2)& (0+255),w,b
  6807  014BE0  0101               	movlb	1	; () banked
  6808  014BE2  6FBA               	movwf	(___fttol@lval+2)& (0+255),b
  6809  014BE4  0101               	movlb	1	; () banked
  6810  014BE6  6BBB               	clrf	(___fttol@lval+3)& (0+255),b
  6811                           
  6812                           ; BSR set to: 1
  6813  014BE8  0E8E               	movlw	142
  6814  014BEA  0101               	movlb	1	; () banked
  6815  014BEC  5FBC               	subwf	___fttol@exp1& (0+255),f,b
  6816                           
  6817                           ; BSR set to: 1
  6818  014BEE  0101               	movlb	1	; () banked
  6819  014BF0  AFBC               	btfss	___fttol@exp1& (0+255),7,b
  6820  014BF2  D01A               	goto	l13059
  6821                           
  6822                           ; BSR set to: 1
  6823  014BF4  0101               	movlb	1	; () banked
  6824  014BF6  51BC               	movf	___fttol@exp1& (0+255),w,b
  6825  014BF8  0A80               	xorlw	128
  6826  014BFA  0F8F               	addlw	143
  6827  014BFC  B0D8               	btfsc	status,0,c
  6828  014BFE  D00A               	goto	l13055
  6829                           
  6830                           ; BSR set to: 1
  6831  014C00  0E00               	movlw	0
  6832  014C02  0101               	movlb	1	; () banked
  6833  014C04  6FAE               	movwf	?___fttol& (0+255),b
  6834  014C06  0E00               	movlw	0
  6835  014C08  6FAF               	movwf	(?___fttol+1)& (0+255),b
  6836  014C0A  0E00               	movlw	0
  6837  014C0C  6FB0               	movwf	(?___fttol+2)& (0+255),b
  6838  014C0E  0E00               	movlw	0
  6839  014C10  6FB1               	movwf	(?___fttol+3)& (0+255),b
  6840                           
  6841                           ; BSR set to: 1
  6842  014C12  0012               	return	
  6843  014C14                     l13055:
  6844                           
  6845                           ; BSR set to: 1
  6846  014C14  0101               	movlb	1	; () banked
  6847  014C16  90D8               	bcf	status,0,c
  6848  014C18  33BB               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6849  014C1A  33BA               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6850  014C1C  33B9               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6851  014C1E  33B8               	rrcf	___fttol@lval& (0+255),f,b
  6852                           
  6853                           ; BSR set to: 1
  6854  014C20  0101               	movlb	1	; () banked
  6855  014C22  3FBC               	incfsz	___fttol@exp1& (0+255),f,b
  6856  014C24  D7F7               	goto	l13055
  6857                           
  6858                           ; BSR set to: 1
  6859  014C26  D01B               	goto	l13069
  6860  014C28                     l13059:
  6861                           
  6862                           ; BSR set to: 1
  6863  014C28  0E17               	movlw	23
  6864  014C2A  0101               	movlb	1	; () banked
  6865  014C2C  65BC               	cpfsgt	___fttol@exp1& (0+255),b
  6866  014C2E  D012               	goto	l13067
  6867                           
  6868                           ; BSR set to: 1
  6869  014C30  0E00               	movlw	0
  6870  014C32  0101               	movlb	1	; () banked
  6871  014C34  6FAE               	movwf	?___fttol& (0+255),b
  6872  014C36  0E00               	movlw	0
  6873  014C38  6FAF               	movwf	(?___fttol+1)& (0+255),b
  6874  014C3A  0E00               	movlw	0
  6875  014C3C  6FB0               	movwf	(?___fttol+2)& (0+255),b
  6876  014C3E  0E00               	movlw	0
  6877  014C40  6FB1               	movwf	(?___fttol+3)& (0+255),b
  6878                           
  6879                           ; BSR set to: 1
  6880  014C42  0012               	return	
  6881  014C44                     l13065:
  6882                           
  6883                           ; BSR set to: 1
  6884  014C44  0101               	movlb	1	; () banked
  6885  014C46  90D8               	bcf	status,0,c
  6886  014C48  37B8               	rlcf	___fttol@lval& (0+255),f,b
  6887  014C4A  37B9               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6888  014C4C  37BA               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6889  014C4E  37BB               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6890  014C50  0101               	movlb	1	; () banked
  6891  014C52  07BC               	decf	___fttol@exp1& (0+255),f,b
  6892  014C54                     l13067:
  6893                           
  6894                           ; BSR set to: 1
  6895  014C54  0101               	movlb	1	; () banked
  6896  014C56  51BC               	movf	___fttol@exp1& (0+255),w,b
  6897  014C58  0101               	movlb	1	; () banked
  6898  014C5A  A4D8               	btfss	status,2,c
  6899  014C5C  D7F3               	goto	l13065
  6900  014C5E                     l13069:
  6901                           
  6902                           ; BSR set to: 1
  6903  014C5E  0101               	movlb	1	; () banked
  6904  014C60  51B7               	movf	___fttol@sign1& (0+255),w,b
  6905  014C62  0101               	movlb	1	; () banked
  6906  014C64  B4D8               	btfsc	status,2,c
  6907  014C66  D009               	goto	l13073
  6908                           
  6909                           ; BSR set to: 1
  6910  014C68  0101               	movlb	1	; () banked
  6911  014C6A  1FBB               	comf	(___fttol@lval+3)& (0+255),f,b
  6912  014C6C  1FBA               	comf	(___fttol@lval+2)& (0+255),f,b
  6913  014C6E  1FB9               	comf	(___fttol@lval+1)& (0+255),f,b
  6914  014C70  6DB8               	negf	___fttol@lval& (0+255),b
  6915  014C72  0E00               	movlw	0
  6916  014C74  23B9               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6917  014C76  23BA               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6918  014C78  23BB               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6919  014C7A                     l13073:
  6920                           
  6921                           ; BSR set to: 1
  6922  014C7A  C1B8  F1AE         	movff	___fttol@lval,?___fttol
  6923  014C7E  C1B9  F1AF         	movff	___fttol@lval+1,?___fttol+1
  6924  014C82  C1BA  F1B0         	movff	___fttol@lval+2,?___fttol+2
  6925  014C86  C1BB  F1B1         	movff	___fttol@lval+3,?___fttol+3
  6926  014C8A  0012               	return	
  6927  014C8C                     __end_of___fttol:
  6928                           	opt stack 0
  6929                           tblptru	equ	0xFF8
  6930                           tblptrh	equ	0xFF7
  6931                           tblptrl	equ	0xFF6
  6932                           tablat	equ	0xFF5
  6933                           prodh	equ	0xFF4
  6934                           prodl	equ	0xFF3
  6935                           postinc0	equ	0xFEE
  6936                           plusw0	equ	0xFEB
  6937                           wreg	equ	0xFE8
  6938                           indf1	equ	0xFE7
  6939                           postdec1	equ	0xFE5
  6940                           fsr1h	equ	0xFE2
  6941                           fsr1l	equ	0xFE1
  6942                           indf2	equ	0xFDF
  6943                           postinc2	equ	0xFDE
  6944                           postdec2	equ	0xFDD
  6945                           plusw2	equ	0xFDB
  6946                           fsr2h	equ	0xFDA
  6947                           fsr2l	equ	0xFD9
  6948                           status	equ	0xFD8
  6949                           
  6950 ;; *************** function ___ftmul *****************
  6951 ;; Defined at:
  6952 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;  f1              3   72[BANK1 ] float 
  6955 ;;  f2              3   75[BANK1 ] float 
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;  f3_as_produc    3   82[BANK1 ] unsigned um
  6958 ;;  sign            1   86[BANK1 ] unsigned char 
  6959 ;;  cntr            1   85[BANK1 ] unsigned char 
  6960 ;;  exp             1   81[BANK1 ] unsigned char 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  3   72[BANK1 ] float 
  6963 ;; Registers used:
  6964 ;;		wreg, status,2, status,0, cstack
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6970 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6972 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6973 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6974 ;;Total ram usage:       15 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:   10
  6977 ;; This function calls:
  6978 ;;		___ftpack
  6979 ;; This function is called by:
  6980 ;;		_read_sensors
  6981 ;;		_send_initial_update
  6982 ;;		_send_periodical_update
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text15
  6987  014748                     __ptext15:
  6988                           	opt stack 0
  6989  014748                     ___ftmul:
  6990                           	opt stack 19
  6991                           
  6992                           ; BSR set to: 1
  6993                           ;incstack = 0
  6994  014748  C1D4  F1D8         	movff	___ftmul@f1+2,??___ftmul
  6995  01474C  0101               	movlb	1	; () banked
  6996  01474E  6BD9               	clrf	(??___ftmul+1)& (0+255),b
  6997  014750  6BDA               	clrf	(??___ftmul+2)& (0+255),b
  6998  014752  0101               	movlb	1	; () banked
  6999  014754  35D3               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7000  014756  0101               	movlb	1	; () banked
  7001  014758  37D8               	rlcf	??___ftmul& (0+255),f,b
  7002  01475A  E301               	bnc	u16241
  7003  01475C  81D9               	bsf	(??___ftmul+1)& (0+255),0,b
  7004  01475E                     u16241:
  7005  01475E  0101               	movlb	1	; () banked
  7006  014760  51D8               	movf	??___ftmul& (0+255),w,b
  7007  014762  0101               	movlb	1	; () banked
  7008  014764  6FDB               	movwf	___ftmul@exp& (0+255),b
  7009  014766  0101               	movlb	1	; () banked
  7010  014768  51DB               	movf	___ftmul@exp& (0+255),w,b
  7011  01476A  A4D8               	btfss	status,2,c
  7012  01476C  D00A               	goto	l13689
  7013                           
  7014                           ; BSR set to: 1
  7015  01476E  0E00               	movlw	0
  7016  014770  0101               	movlb	1	; () banked
  7017  014772  6FD2               	movwf	?___ftmul& (0+255),b
  7018  014774  0E00               	movlw	0
  7019  014776  0101               	movlb	1	; () banked
  7020  014778  6FD3               	movwf	(?___ftmul+1)& (0+255),b
  7021  01477A  0E00               	movlw	0
  7022  01477C  0101               	movlb	1	; () banked
  7023  01477E  6FD4               	movwf	(?___ftmul+2)& (0+255),b
  7024                           
  7025                           ; BSR set to: 1
  7026  014780  0012               	return	
  7027  014782                     l13689:
  7028                           
  7029                           ; BSR set to: 1
  7030  014782  C1D7  F1D8         	movff	___ftmul@f2+2,??___ftmul
  7031  014786  0101               	movlb	1	; () banked
  7032  014788  6BD9               	clrf	(??___ftmul+1)& (0+255),b
  7033  01478A  6BDA               	clrf	(??___ftmul+2)& (0+255),b
  7034  01478C  0101               	movlb	1	; () banked
  7035  01478E  35D6               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7036  014790  0101               	movlb	1	; () banked
  7037  014792  37D8               	rlcf	??___ftmul& (0+255),f,b
  7038  014794  E301               	bnc	u16261
  7039  014796  81D9               	bsf	(??___ftmul+1)& (0+255),0,b
  7040  014798                     u16261:
  7041  014798  0101               	movlb	1	; () banked
  7042  01479A  51D8               	movf	??___ftmul& (0+255),w,b
  7043  01479C  0101               	movlb	1	; () banked
  7044  01479E  6FE0               	movwf	___ftmul@sign& (0+255),b
  7045  0147A0  0101               	movlb	1	; () banked
  7046  0147A2  51E0               	movf	___ftmul@sign& (0+255),w,b
  7047  0147A4  A4D8               	btfss	status,2,c
  7048  0147A6  D00A               	goto	l13695
  7049                           
  7050                           ; BSR set to: 1
  7051  0147A8  0E00               	movlw	0
  7052  0147AA  0101               	movlb	1	; () banked
  7053  0147AC  6FD2               	movwf	?___ftmul& (0+255),b
  7054  0147AE  0E00               	movlw	0
  7055  0147B0  0101               	movlb	1	; () banked
  7056  0147B2  6FD3               	movwf	(?___ftmul+1)& (0+255),b
  7057  0147B4  0E00               	movlw	0
  7058  0147B6  0101               	movlb	1	; () banked
  7059  0147B8  6FD4               	movwf	(?___ftmul+2)& (0+255),b
  7060                           
  7061                           ; BSR set to: 1
  7062  0147BA  0012               	return	
  7063  0147BC                     l13695:
  7064                           
  7065                           ; BSR set to: 1
  7066  0147BC  0101               	movlb	1	; () banked
  7067  0147BE  51E0               	movf	___ftmul@sign& (0+255),w,b
  7068  0147C0  0F7B               	addlw	123
  7069  0147C2  0101               	movlb	1	; () banked
  7070  0147C4  27DB               	addwf	___ftmul@exp& (0+255),f,b
  7071                           
  7072                           ; BSR set to: 1
  7073  0147C6  C1D4  F1E0         	movff	___ftmul@f1+2,___ftmul@sign
  7074  0147CA  0101               	movlb	1	; () banked
  7075  0147CC  51D7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7076  0147CE  0101               	movlb	1	; () banked
  7077  0147D0  1BE0               	xorwf	___ftmul@sign& (0+255),f,b
  7078  0147D2  0E80               	movlw	128
  7079  0147D4  0101               	movlb	1	; () banked
  7080  0147D6  17E0               	andwf	___ftmul@sign& (0+255),f,b
  7081                           
  7082                           ; BSR set to: 1
  7083  0147D8  0101               	movlb	1	; () banked
  7084  0147DA  8FD3               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7085                           
  7086                           ; BSR set to: 1
  7087  0147DC  0101               	movlb	1	; () banked
  7088  0147DE  8FD6               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7089                           
  7090                           ; BSR set to: 1
  7091  0147E0  0EFF               	movlw	255
  7092  0147E2  0101               	movlb	1	; () banked
  7093  0147E4  17D5               	andwf	___ftmul@f2& (0+255),f,b
  7094  0147E6  0EFF               	movlw	255
  7095  0147E8  0101               	movlb	1	; () banked
  7096  0147EA  17D6               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7097  0147EC  0E00               	movlw	0
  7098  0147EE  0101               	movlb	1	; () banked
  7099  0147F0  17D7               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7100                           
  7101                           ; BSR set to: 1
  7102  0147F2  0E00               	movlw	0
  7103  0147F4  0101               	movlb	1	; () banked
  7104  0147F6  6FDC               	movwf	___ftmul@f3_as_product& (0+255),b
  7105  0147F8  0E00               	movlw	0
  7106  0147FA  0101               	movlb	1	; () banked
  7107  0147FC  6FDD               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7108  0147FE  0E00               	movlw	0
  7109  014800  0101               	movlb	1	; () banked
  7110  014802  6FDE               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7111                           
  7112                           ; BSR set to: 1
  7113  014804  0E07               	movlw	7
  7114  014806  0101               	movlb	1	; () banked
  7115  014808  6FDF               	movwf	___ftmul@cntr& (0+255),b
  7116  01480A                     l13709:
  7117                           
  7118                           ; BSR set to: 1
  7119  01480A  0101               	movlb	1	; () banked
  7120  01480C  A1D2               	btfss	___ftmul@f1& (0+255),0,b
  7121  01480E  D00C               	goto	l13713
  7122                           
  7123                           ; BSR set to: 1
  7124  014810  0101               	movlb	1	; () banked
  7125  014812  51D5               	movf	___ftmul@f2& (0+255),w,b
  7126  014814  0101               	movlb	1	; () banked
  7127  014816  27DC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7128  014818  0101               	movlb	1	; () banked
  7129  01481A  51D6               	movf	(___ftmul@f2+1)& (0+255),w,b
  7130  01481C  0101               	movlb	1	; () banked
  7131  01481E  23DD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7132  014820  0101               	movlb	1	; () banked
  7133  014822  51D7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7134  014824  0101               	movlb	1	; () banked
  7135  014826  23DE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7136  014828                     l13713:
  7137                           
  7138                           ; BSR set to: 1
  7139  014828  0101               	movlb	1	; () banked
  7140  01482A  90D8               	bcf	status,0,c
  7141  01482C  33D4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7142  01482E  33D3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7143  014830  33D2               	rrcf	___ftmul@f1& (0+255),f,b
  7144  014832  0101               	movlb	1	; () banked
  7145  014834  90D8               	bcf	status,0,c
  7146  014836  37D5               	rlcf	___ftmul@f2& (0+255),f,b
  7147  014838  37D6               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7148  01483A  37D7               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7149                           
  7150                           ; BSR set to: 1
  7151  01483C  0101               	movlb	1	; () banked
  7152  01483E  2FDF               	decfsz	___ftmul@cntr& (0+255),f,b
  7153  014840  D7E4               	goto	l13709
  7154                           
  7155                           ; BSR set to: 1
  7156                           
  7157                           ; BSR set to: 1
  7158  014842  0E09               	movlw	9
  7159  014844  0101               	movlb	1	; () banked
  7160  014846  6FDF               	movwf	___ftmul@cntr& (0+255),b
  7161  014848                     l13719:
  7162                           
  7163                           ; BSR set to: 1
  7164  014848  0101               	movlb	1	; () banked
  7165  01484A  A1D2               	btfss	___ftmul@f1& (0+255),0,b
  7166  01484C  D00C               	goto	l13723
  7167                           
  7168                           ; BSR set to: 1
  7169  01484E  0101               	movlb	1	; () banked
  7170  014850  51D5               	movf	___ftmul@f2& (0+255),w,b
  7171  014852  0101               	movlb	1	; () banked
  7172  014854  27DC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7173  014856  0101               	movlb	1	; () banked
  7174  014858  51D6               	movf	(___ftmul@f2+1)& (0+255),w,b
  7175  01485A  0101               	movlb	1	; () banked
  7176  01485C  23DD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7177  01485E  0101               	movlb	1	; () banked
  7178  014860  51D7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7179  014862  0101               	movlb	1	; () banked
  7180  014864  23DE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7181  014866                     l13723:
  7182                           
  7183                           ; BSR set to: 1
  7184  014866  0101               	movlb	1	; () banked
  7185  014868  90D8               	bcf	status,0,c
  7186  01486A  33D4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7187  01486C  33D3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7188  01486E  33D2               	rrcf	___ftmul@f1& (0+255),f,b
  7189  014870  0101               	movlb	1	; () banked
  7190  014872  90D8               	bcf	status,0,c
  7191  014874  33DE               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7192  014876  33DD               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7193  014878  33DC               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7194                           
  7195                           ; BSR set to: 1
  7196  01487A  0101               	movlb	1	; () banked
  7197  01487C  2FDF               	decfsz	___ftmul@cntr& (0+255),f,b
  7198  01487E  D7E4               	goto	l13719
  7199                           
  7200                           ; BSR set to: 1
  7201                           
  7202                           ; BSR set to: 1
  7203  014880  C1DC  F18A         	movff	___ftmul@f3_as_product,___ftpack@arg
  7204  014884  C1DD  F18B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7205  014888  C1DE  F18C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7206  01488C  C1DB  F18D         	movff	___ftmul@exp,___ftpack@exp
  7207  014890  C1E0  F18E         	movff	___ftmul@sign,___ftpack@sign
  7208  014894  ECF7  F0AA         	call	___ftpack	;wreg free
  7209  014898  C18A  F1D2         	movff	?___ftpack,?___ftmul
  7210  01489C  C18B  F1D3         	movff	?___ftpack+1,?___ftmul+1
  7211  0148A0  C18C  F1D4         	movff	?___ftpack+2,?___ftmul+2
  7212  0148A4  0012               	return	
  7213  0148A6                     __end_of___ftmul:
  7214                           	opt stack 0
  7215                           tblptru	equ	0xFF8
  7216                           tblptrh	equ	0xFF7
  7217                           tblptrl	equ	0xFF6
  7218                           tablat	equ	0xFF5
  7219                           prodh	equ	0xFF4
  7220                           prodl	equ	0xFF3
  7221                           postinc0	equ	0xFEE
  7222                           plusw0	equ	0xFEB
  7223                           wreg	equ	0xFE8
  7224                           indf1	equ	0xFE7
  7225                           postdec1	equ	0xFE5
  7226                           fsr1h	equ	0xFE2
  7227                           fsr1l	equ	0xFE1
  7228                           indf2	equ	0xFDF
  7229                           postinc2	equ	0xFDE
  7230                           postdec2	equ	0xFDD
  7231                           plusw2	equ	0xFDB
  7232                           fsr2h	equ	0xFDA
  7233                           fsr2l	equ	0xFD9
  7234                           status	equ	0xFD8
  7235                           
  7236 ;; *************** function ___ftdiv *****************
  7237 ;; Defined at:
  7238 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  f1              3   21[BANK1 ] float 
  7241 ;;  f2              3   24[BANK1 ] float 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  f3              3   31[BANK1 ] float 
  7244 ;;  sign            1   35[BANK1 ] unsigned char 
  7245 ;;  exp             1   34[BANK1 ] unsigned char 
  7246 ;;  cntr            1   30[BANK1 ] unsigned char 
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  3   21[BANK1 ] float 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2, status,0, cstack
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7256 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7257 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7258 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7259 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7260 ;;Total ram usage:       15 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:   10
  7263 ;; This function calls:
  7264 ;;		___ftpack
  7265 ;; This function is called by:
  7266 ;;		_read_sensors
  7267 ;;		_send_initial_update
  7268 ;;		_send_periodical_update
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text16
  7273  0149FC                     __ptext16:
  7274                           	opt stack 0
  7275  0149FC                     ___ftdiv:
  7276                           	opt stack 19
  7277                           
  7278                           ;incstack = 0
  7279  0149FC  C1A1  F1A5         	movff	___ftdiv@f1+2,??___ftdiv
  7280  014A00  0101               	movlb	1	; () banked
  7281  014A02  6BA6               	clrf	(??___ftdiv+1)& (0+255),b
  7282  014A04  6BA7               	clrf	(??___ftdiv+2)& (0+255),b
  7283  014A06  0101               	movlb	1	; () banked
  7284  014A08  35A0               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  7285  014A0A  0101               	movlb	1	; () banked
  7286  014A0C  37A5               	rlcf	??___ftdiv& (0+255),f,b
  7287  014A0E  E301               	bnc	u16191
  7288  014A10  81A6               	bsf	(??___ftdiv+1)& (0+255),0,b
  7289  014A12                     u16191:
  7290  014A12  0101               	movlb	1	; () banked
  7291  014A14  51A5               	movf	??___ftdiv& (0+255),w,b
  7292  014A16  0101               	movlb	1	; () banked
  7293  014A18  6FAC               	movwf	___ftdiv@exp& (0+255),b
  7294  014A1A  0101               	movlb	1	; () banked
  7295  014A1C  51AC               	movf	___ftdiv@exp& (0+255),w,b
  7296  014A1E  A4D8               	btfss	status,2,c
  7297  014A20  D00A               	goto	l13643
  7298                           
  7299                           ; BSR set to: 1
  7300  014A22  0E00               	movlw	0
  7301  014A24  0101               	movlb	1	; () banked
  7302  014A26  6F9F               	movwf	?___ftdiv& (0+255),b
  7303  014A28  0E00               	movlw	0
  7304  014A2A  0101               	movlb	1	; () banked
  7305  014A2C  6FA0               	movwf	(?___ftdiv+1)& (0+255),b
  7306  014A2E  0E00               	movlw	0
  7307  014A30  0101               	movlb	1	; () banked
  7308  014A32  6FA1               	movwf	(?___ftdiv+2)& (0+255),b
  7309                           
  7310                           ; BSR set to: 1
  7311  014A34  0012               	return	
  7312  014A36                     l13643:
  7313                           
  7314                           ; BSR set to: 1
  7315  014A36  C1A4  F1A5         	movff	___ftdiv@f2+2,??___ftdiv
  7316  014A3A  0101               	movlb	1	; () banked
  7317  014A3C  6BA6               	clrf	(??___ftdiv+1)& (0+255),b
  7318  014A3E  6BA7               	clrf	(??___ftdiv+2)& (0+255),b
  7319  014A40  0101               	movlb	1	; () banked
  7320  014A42  35A3               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  7321  014A44  0101               	movlb	1	; () banked
  7322  014A46  37A5               	rlcf	??___ftdiv& (0+255),f,b
  7323  014A48  E301               	bnc	u16211
  7324  014A4A  81A6               	bsf	(??___ftdiv+1)& (0+255),0,b
  7325  014A4C                     u16211:
  7326  014A4C  0101               	movlb	1	; () banked
  7327  014A4E  51A5               	movf	??___ftdiv& (0+255),w,b
  7328  014A50  0101               	movlb	1	; () banked
  7329  014A52  6FAD               	movwf	___ftdiv@sign& (0+255),b
  7330  014A54  0101               	movlb	1	; () banked
  7331  014A56  51AD               	movf	___ftdiv@sign& (0+255),w,b
  7332  014A58  A4D8               	btfss	status,2,c
  7333  014A5A  D00A               	goto	l13649
  7334                           
  7335                           ; BSR set to: 1
  7336  014A5C  0E00               	movlw	0
  7337  014A5E  0101               	movlb	1	; () banked
  7338  014A60  6F9F               	movwf	?___ftdiv& (0+255),b
  7339  014A62  0E00               	movlw	0
  7340  014A64  0101               	movlb	1	; () banked
  7341  014A66  6FA0               	movwf	(?___ftdiv+1)& (0+255),b
  7342  014A68  0E00               	movlw	0
  7343  014A6A  0101               	movlb	1	; () banked
  7344  014A6C  6FA1               	movwf	(?___ftdiv+2)& (0+255),b
  7345                           
  7346                           ; BSR set to: 1
  7347  014A6E  0012               	return	
  7348  014A70                     l13649:
  7349                           
  7350                           ; BSR set to: 1
  7351  014A70  0E00               	movlw	0
  7352  014A72  0101               	movlb	1	; () banked
  7353  014A74  6FA9               	movwf	___ftdiv@f3& (0+255),b
  7354  014A76  0E00               	movlw	0
  7355  014A78  0101               	movlb	1	; () banked
  7356  014A7A  6FAA               	movwf	(___ftdiv@f3+1)& (0+255),b
  7357  014A7C  0E00               	movlw	0
  7358  014A7E  0101               	movlb	1	; () banked
  7359  014A80  6FAB               	movwf	(___ftdiv@f3+2)& (0+255),b
  7360                           
  7361                           ; BSR set to: 1
  7362  014A82  0101               	movlb	1	; () banked
  7363  014A84  51AD               	movf	___ftdiv@sign& (0+255),w,b
  7364  014A86  0F89               	addlw	137
  7365  014A88  0101               	movlb	1	; () banked
  7366  014A8A  5FAC               	subwf	___ftdiv@exp& (0+255),f,b
  7367                           
  7368                           ; BSR set to: 1
  7369  014A8C  C1A1  F1AD         	movff	___ftdiv@f1+2,___ftdiv@sign
  7370                           
  7371                           ; BSR set to: 1
  7372  014A90  0101               	movlb	1	; () banked
  7373  014A92  51A4               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7374  014A94  0101               	movlb	1	; () banked
  7375  014A96  1BAD               	xorwf	___ftdiv@sign& (0+255),f,b
  7376                           
  7377                           ; BSR set to: 1
  7378  014A98  0E80               	movlw	128
  7379  014A9A  0101               	movlb	1	; () banked
  7380  014A9C  17AD               	andwf	___ftdiv@sign& (0+255),f,b
  7381                           
  7382                           ; BSR set to: 1
  7383  014A9E  0101               	movlb	1	; () banked
  7384  014AA0  8FA0               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  7385                           
  7386                           ; BSR set to: 1
  7387  014AA2  0EFF               	movlw	255
  7388  014AA4  0101               	movlb	1	; () banked
  7389  014AA6  179F               	andwf	___ftdiv@f1& (0+255),f,b
  7390  014AA8  0EFF               	movlw	255
  7391  014AAA  0101               	movlb	1	; () banked
  7392  014AAC  17A0               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  7393  014AAE  0E00               	movlw	0
  7394  014AB0  0101               	movlb	1	; () banked
  7395  014AB2  17A1               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  7396                           
  7397                           ; BSR set to: 1
  7398  014AB4  0101               	movlb	1	; () banked
  7399  014AB6  8FA3               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  7400                           
  7401                           ; BSR set to: 1
  7402  014AB8  0EFF               	movlw	255
  7403  014ABA  0101               	movlb	1	; () banked
  7404  014ABC  17A2               	andwf	___ftdiv@f2& (0+255),f,b
  7405  014ABE  0EFF               	movlw	255
  7406  014AC0  0101               	movlb	1	; () banked
  7407  014AC2  17A3               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  7408  014AC4  0E00               	movlw	0
  7409  014AC6  0101               	movlb	1	; () banked
  7410  014AC8  17A4               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  7411                           
  7412                           ; BSR set to: 1
  7413  014ACA  0E18               	movlw	24
  7414  014ACC  0101               	movlb	1	; () banked
  7415  014ACE  6FA8               	movwf	___ftdiv@cntr& (0+255),b
  7416  014AD0                     l13669:
  7417                           
  7418                           ; BSR set to: 1
  7419  014AD0  0101               	movlb	1	; () banked
  7420  014AD2  90D8               	bcf	status,0,c
  7421  014AD4  37A9               	rlcf	___ftdiv@f3& (0+255),f,b
  7422  014AD6  37AA               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  7423  014AD8  37AB               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  7424                           
  7425                           ; BSR set to: 1
  7426  014ADA  0101               	movlb	1	; () banked
  7427  014ADC  51A2               	movf	___ftdiv@f2& (0+255),w,b
  7428  014ADE  0101               	movlb	1	; () banked
  7429  014AE0  5D9F               	subwf	___ftdiv@f1& (0+255),w,b
  7430  014AE2  0101               	movlb	1	; () banked
  7431  014AE4  51A3               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7432  014AE6  0101               	movlb	1	; () banked
  7433  014AE8  59A0               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  7434  014AEA  0101               	movlb	1	; () banked
  7435  014AEC  51A4               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7436  014AEE  0101               	movlb	1	; () banked
  7437  014AF0  59A1               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  7438  014AF2  A0D8               	btfss	status,0,c
  7439  014AF4  D00E               	goto	l1818
  7440                           
  7441                           ; BSR set to: 1
  7442  014AF6  0101               	movlb	1	; () banked
  7443  014AF8  51A2               	movf	___ftdiv@f2& (0+255),w,b
  7444  014AFA  0101               	movlb	1	; () banked
  7445  014AFC  5F9F               	subwf	___ftdiv@f1& (0+255),f,b
  7446  014AFE  0101               	movlb	1	; () banked
  7447  014B00  51A3               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7448  014B02  0101               	movlb	1	; () banked
  7449  014B04  5BA0               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  7450  014B06  0101               	movlb	1	; () banked
  7451  014B08  51A4               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7452  014B0A  0101               	movlb	1	; () banked
  7453  014B0C  5BA1               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  7454                           
  7455                           ; BSR set to: 1
  7456  014B0E  0101               	movlb	1	; () banked
  7457  014B10  81A9               	bsf	___ftdiv@f3& (0+255),0,b
  7458  014B12                     l1818:
  7459                           
  7460                           ; BSR set to: 1
  7461  014B12  0101               	movlb	1	; () banked
  7462  014B14  90D8               	bcf	status,0,c
  7463  014B16  379F               	rlcf	___ftdiv@f1& (0+255),f,b
  7464  014B18  37A0               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  7465  014B1A  37A1               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  7466                           
  7467                           ; BSR set to: 1
  7468  014B1C  0101               	movlb	1	; () banked
  7469  014B1E  2FA8               	decfsz	___ftdiv@cntr& (0+255),f,b
  7470  014B20  D7D7               	goto	l13669
  7471                           
  7472                           ; BSR set to: 1
  7473                           
  7474                           ; BSR set to: 1
  7475  014B22  C1A9  F18A         	movff	___ftdiv@f3,___ftpack@arg
  7476  014B26  C1AA  F18B         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7477  014B2A  C1AB  F18C         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7478  014B2E  C1AC  F18D         	movff	___ftdiv@exp,___ftpack@exp
  7479  014B32  C1AD  F18E         	movff	___ftdiv@sign,___ftpack@sign
  7480  014B36  ECF7  F0AA         	call	___ftpack	;wreg free
  7481  014B3A  C18A  F19F         	movff	?___ftpack,?___ftdiv
  7482  014B3E  C18B  F1A0         	movff	?___ftpack+1,?___ftdiv+1
  7483  014B42  C18C  F1A1         	movff	?___ftpack+2,?___ftdiv+2
  7484  014B46  0012               	return	
  7485  014B48                     __end_of___ftdiv:
  7486                           	opt stack 0
  7487                           tblptru	equ	0xFF8
  7488                           tblptrh	equ	0xFF7
  7489                           tblptrl	equ	0xFF6
  7490                           tablat	equ	0xFF5
  7491                           prodh	equ	0xFF4
  7492                           prodl	equ	0xFF3
  7493                           postinc0	equ	0xFEE
  7494                           plusw0	equ	0xFEB
  7495                           wreg	equ	0xFE8
  7496                           indf1	equ	0xFE7
  7497                           postdec1	equ	0xFE5
  7498                           fsr1h	equ	0xFE2
  7499                           fsr1l	equ	0xFE1
  7500                           indf2	equ	0xFDF
  7501                           postinc2	equ	0xFDE
  7502                           postdec2	equ	0xFDD
  7503                           plusw2	equ	0xFDB
  7504                           fsr2h	equ	0xFDA
  7505                           fsr2l	equ	0xFD9
  7506                           status	equ	0xFD8
  7507                           
  7508 ;; *************** function ___ftpack *****************
  7509 ;; Defined at:
  7510 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  arg             3    0[BANK1 ] unsigned um
  7513 ;;  exp             1    3[BANK1 ] unsigned char 
  7514 ;;  sign            1    4[BANK1 ] unsigned char 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  3    0[BANK1 ] float 
  7519 ;; Registers used:
  7520 ;;		wreg, status,2, status,0
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7526 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7528 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7529 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7530 ;;Total ram usage:        8 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:    9
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		___altoft
  7537 ;;		___ftadd
  7538 ;;		___ftdiv
  7539 ;;		___ftmul
  7540 ;;		___lltoft
  7541 ;;		___lwtoft
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           	psect	text17
  7546  0155EE                     __ptext17:
  7547                           	opt stack 0
  7548  0155EE                     ___ftpack:
  7549                           	opt stack 18
  7550                           
  7551                           ;incstack = 0
  7552  0155EE  0101               	movlb	1	; () banked
  7553  0155F0  518D               	movf	___ftpack@exp& (0+255),w,b
  7554  0155F2  0101               	movlb	1	; () banked
  7555  0155F4  B4D8               	btfsc	status,2,c
  7556  0155F6  D008               	goto	l12515
  7557                           
  7558                           ; BSR set to: 1
  7559  0155F8  0101               	movlb	1	; () banked
  7560  0155FA  518A               	movf	___ftpack@arg& (0+255),w,b
  7561  0155FC  0101               	movlb	1	; () banked
  7562  0155FE  118B               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  7563  015600  0101               	movlb	1	; () banked
  7564  015602  118C               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  7565  015604  A4D8               	btfss	status,2,c
  7566  015606  D011               	goto	l12521
  7567  015608                     l12515:
  7568                           
  7569                           ; BSR set to: 1
  7570  015608  0E00               	movlw	0
  7571  01560A  0101               	movlb	1	; () banked
  7572  01560C  6F8A               	movwf	?___ftpack& (0+255),b
  7573  01560E  0E00               	movlw	0
  7574  015610  0101               	movlb	1	; () banked
  7575  015612  6F8B               	movwf	(?___ftpack+1)& (0+255),b
  7576  015614  0E00               	movlw	0
  7577  015616  0101               	movlb	1	; () banked
  7578  015618  6F8C               	movwf	(?___ftpack+2)& (0+255),b
  7579                           
  7580                           ; BSR set to: 1
  7581  01561A  0012               	return	
  7582  01561C                     l12519:
  7583                           
  7584                           ; BSR set to: 1
  7585  01561C  0101               	movlb	1	; () banked
  7586  01561E  2B8D               	incf	___ftpack@exp& (0+255),f,b
  7587  015620  0101               	movlb	1	; () banked
  7588  015622  90D8               	bcf	status,0,c
  7589  015624  338C               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  7590  015626  338B               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  7591  015628  338A               	rrcf	___ftpack@arg& (0+255),f,b
  7592  01562A                     l12521:
  7593                           
  7594                           ; BSR set to: 1
  7595  01562A  0E00               	movlw	0
  7596  01562C  0101               	movlb	1	; () banked
  7597  01562E  158A               	andwf	___ftpack@arg& (0+255),w,b
  7598  015630  0101               	movlb	1	; () banked
  7599  015632  6F8F               	movwf	??___ftpack& (0+255),b
  7600  015634  0E00               	movlw	0
  7601  015636  0101               	movlb	1	; () banked
  7602  015638  158B               	andwf	(___ftpack@arg+1)& (0+255),w,b
  7603  01563A  0101               	movlb	1	; () banked
  7604  01563C  6F90               	movwf	(??___ftpack+1)& (0+255),b
  7605  01563E  0EFE               	movlw	254
  7606  015640  0101               	movlb	1	; () banked
  7607  015642  158C               	andwf	(___ftpack@arg+2)& (0+255),w,b
  7608  015644  0101               	movlb	1	; () banked
  7609  015646  6F91               	movwf	(??___ftpack+2)& (0+255),b
  7610  015648  0101               	movlb	1	; () banked
  7611  01564A  518F               	movf	??___ftpack& (0+255),w,b
  7612  01564C  0101               	movlb	1	; () banked
  7613  01564E  1190               	iorwf	(??___ftpack+1)& (0+255),w,b
  7614  015650  0101               	movlb	1	; () banked
  7615  015652  1191               	iorwf	(??___ftpack+2)& (0+255),w,b
  7616  015654  B4D8               	btfsc	status,2,c
  7617  015656  D011               	goto	l12527
  7618  015658  D7E1               	goto	l12519
  7619  01565A                     l12523:
  7620                           
  7621                           ; BSR set to: 1
  7622  01565A  0101               	movlb	1	; () banked
  7623  01565C  2B8D               	incf	___ftpack@exp& (0+255),f,b
  7624                           
  7625                           ; BSR set to: 1
  7626  01565E  0E01               	movlw	1
  7627  015660  0101               	movlb	1	; () banked
  7628  015662  278A               	addwf	___ftpack@arg& (0+255),f,b
  7629  015664  0E00               	movlw	0
  7630  015666  0101               	movlb	1	; () banked
  7631  015668  238B               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  7632  01566A  0E00               	movlw	0
  7633  01566C  0101               	movlb	1	; () banked
  7634  01566E  238C               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  7635  015670  0101               	movlb	1	; () banked
  7636  015672  90D8               	bcf	status,0,c
  7637  015674  338C               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  7638  015676  338B               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  7639  015678  338A               	rrcf	___ftpack@arg& (0+255),f,b
  7640  01567A                     l12527:
  7641                           
  7642                           ; BSR set to: 1
  7643  01567A  0E00               	movlw	0
  7644  01567C  0101               	movlb	1	; () banked
  7645  01567E  158A               	andwf	___ftpack@arg& (0+255),w,b
  7646  015680  0101               	movlb	1	; () banked
  7647  015682  6F8F               	movwf	??___ftpack& (0+255),b
  7648  015684  0E00               	movlw	0
  7649  015686  0101               	movlb	1	; () banked
  7650  015688  158B               	andwf	(___ftpack@arg+1)& (0+255),w,b
  7651  01568A  0101               	movlb	1	; () banked
  7652  01568C  6F90               	movwf	(??___ftpack+1)& (0+255),b
  7653  01568E  0EFF               	movlw	255
  7654  015690  0101               	movlb	1	; () banked
  7655  015692  158C               	andwf	(___ftpack@arg+2)& (0+255),w,b
  7656  015694  0101               	movlb	1	; () banked
  7657  015696  6F91               	movwf	(??___ftpack+2)& (0+255),b
  7658  015698  0101               	movlb	1	; () banked
  7659  01569A  518F               	movf	??___ftpack& (0+255),w,b
  7660  01569C  0101               	movlb	1	; () banked
  7661  01569E  1190               	iorwf	(??___ftpack+1)& (0+255),w,b
  7662  0156A0  0101               	movlb	1	; () banked
  7663  0156A2  1191               	iorwf	(??___ftpack+2)& (0+255),w,b
  7664  0156A4  B4D8               	btfsc	status,2,c
  7665  0156A6  D008               	goto	l12531
  7666  0156A8  D7D8               	goto	l12523
  7667  0156AA                     l12529:
  7668                           
  7669                           ; BSR set to: 1
  7670  0156AA  0101               	movlb	1	; () banked
  7671  0156AC  078D               	decf	___ftpack@exp& (0+255),f,b
  7672  0156AE  0101               	movlb	1	; () banked
  7673  0156B0  90D8               	bcf	status,0,c
  7674  0156B2  378A               	rlcf	___ftpack@arg& (0+255),f,b
  7675  0156B4  378B               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  7676  0156B6  378C               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  7677  0156B8                     l12531:
  7678                           
  7679                           ; BSR set to: 1
  7680  0156B8  0101               	movlb	1	; () banked
  7681  0156BA  BF8B               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  7682  0156BC  D004               	goto	l1735
  7683                           
  7684                           ; BSR set to: 1
  7685  0156BE  0E02               	movlw	2
  7686  0156C0  0101               	movlb	1	; () banked
  7687  0156C2  618D               	cpfslt	___ftpack@exp& (0+255),b
  7688  0156C4  D7F2               	goto	l12529
  7689  0156C6                     l1735:
  7690                           
  7691                           ; BSR set to: 1
  7692  0156C6  0101               	movlb	1	; () banked
  7693  0156C8  B18D               	btfsc	___ftpack@exp& (0+255),0,b
  7694  0156CA  D002               	goto	l12537
  7695                           
  7696                           ; BSR set to: 1
  7697  0156CC  0101               	movlb	1	; () banked
  7698  0156CE  9F8B               	bcf	(___ftpack@arg+1)& (0+255),7,b
  7699  0156D0                     l12537:
  7700                           
  7701                           ; BSR set to: 1
  7702  0156D0  0101               	movlb	1	; () banked
  7703  0156D2  90D8               	bcf	status,0,c
  7704  0156D4  338D               	rrcf	___ftpack@exp& (0+255),f,b
  7705  0156D6  0101               	movlb	1	; () banked
  7706  0156D8  518D               	movf	___ftpack@exp& (0+255),w,b
  7707  0156DA  0101               	movlb	1	; () banked
  7708  0156DC  138C               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  7709                           
  7710                           ; BSR set to: 1
  7711  0156DE  0101               	movlb	1	; () banked
  7712  0156E0  518E               	movf	___ftpack@sign& (0+255),w,b
  7713  0156E2  0101               	movlb	1	; () banked
  7714  0156E4  B4D8               	btfsc	status,2,c
  7715  0156E6  D002               	goto	l12543
  7716                           
  7717                           ; BSR set to: 1
  7718  0156E8  0101               	movlb	1	; () banked
  7719  0156EA  8F8C               	bsf	(___ftpack@arg+2)& (0+255),7,b
  7720  0156EC                     l12543:
  7721                           
  7722                           ; BSR set to: 1
  7723  0156EC  C18A  F18A         	movff	___ftpack@arg,?___ftpack
  7724  0156F0  C18B  F18B         	movff	___ftpack@arg+1,?___ftpack+1
  7725  0156F4  C18C  F18C         	movff	___ftpack@arg+2,?___ftpack+2
  7726  0156F8  0012               	return	
  7727  0156FA                     __end_of___ftpack:
  7728                           	opt stack 0
  7729                           tblptru	equ	0xFF8
  7730                           tblptrh	equ	0xFF7
  7731                           tblptrl	equ	0xFF6
  7732                           tablat	equ	0xFF5
  7733                           prodh	equ	0xFF4
  7734                           prodl	equ	0xFF3
  7735                           postinc0	equ	0xFEE
  7736                           plusw0	equ	0xFEB
  7737                           wreg	equ	0xFE8
  7738                           indf1	equ	0xFE7
  7739                           postdec1	equ	0xFE5
  7740                           fsr1h	equ	0xFE2
  7741                           fsr1l	equ	0xFE1
  7742                           indf2	equ	0xFDF
  7743                           postinc2	equ	0xFDE
  7744                           postdec2	equ	0xFDD
  7745                           plusw2	equ	0xFDB
  7746                           fsr2h	equ	0xFDA
  7747                           fsr2l	equ	0xFD9
  7748                           status	equ	0xFD8
  7749                           
  7750 ;; *************** function _WriteI2C1 *****************
  7751 ;; Defined at:
  7752 ;;		line 12 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c1writ.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  data_out        1    wreg     unsigned char 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;  data_out        1    1[BANK1 ] unsigned char 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  1    wreg      char 
  7759 ;; Registers used:
  7760 ;;		wreg, status,2, status,0
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7767 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7768 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7769 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7770 ;;Total ram usage:        2 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:    9
  7773 ;; This function calls:
  7774 ;;		Nothing
  7775 ;; This function is called by:
  7776 ;;		_read_sensors
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           	psect	text18
  7781  016988                     __ptext18:
  7782                           	opt stack 0
  7783  016988                     _WriteI2C1:
  7784                           	opt stack 20
  7785                           
  7786                           ; BSR set to: 1
  7787                           ;incstack = 0
  7788                           ;WriteI2C1@data_out stored from wreg
  7789  016988  0101               	movlb	1	; () banked
  7790  01698A  6F8B               	movwf	WriteI2C1@data_out& (0+255),b
  7791  01698C  C18B  FFC9         	movff	WriteI2C1@data_out,4041	;volatile
  7792  016990  BEC6               	btfsc	4038,7,c	;volatile
  7793  016992  0012               	return	
  7794                           
  7795                           ;	Return value of _WriteI2C1 is never used
  7796  016994  50C6               	movf	4038,w,c	;volatile
  7797  016996  0B0F               	andlw	15
  7798  016998  0A08               	xorlw	8
  7799  01699A  B4D8               	btfsc	status,2,c
  7800  01699C  D00C               	goto	l13523
  7801  01699E  50C6               	movf	4038,w,c	;volatile
  7802  0169A0  0B0F               	andlw	15
  7803  0169A2  0A0B               	xorlw	11
  7804  0169A4  B4D8               	btfsc	status,2,c
  7805  0169A6  D007               	goto	l13523
  7806  0169A8  88C6               	bsf	4038,4,c	;volatile
  7807  0169AA                     l1485:
  7808  0169AA  A69E               	btfss	3998,3,c	;volatile
  7809  0169AC  D7FE               	goto	l1485
  7810  0169AE  B4C7               	btfsc	4039,2,c	;volatile
  7811  0169B0  0012               	return	
  7812  0169B2  50C7               	movf	4039,w,c	;volatile
  7813                           
  7814                           ;	Return value of _WriteI2C1 is never used
  7815                           
  7816                           ;	Return value of _WriteI2C1 is never used
  7817  0169B4  0012               	return	
  7818  0169B6                     l13523:
  7819  0169B6  50C6               	movf	4038,w,c	;volatile
  7820  0169B8  0B0F               	andlw	15
  7821  0169BA  0A08               	xorlw	8
  7822  0169BC  B4D8               	btfsc	status,2,c
  7823  0169BE  D005               	goto	l1494
  7824  0169C0  50C6               	movf	4038,w,c	;volatile
  7825  0169C2  0B0F               	andlw	15
  7826  0169C4  0A0B               	xorlw	11
  7827  0169C6  A4D8               	btfss	status,2,c
  7828  0169C8  0012               	return	
  7829  0169CA                     l1494:
  7830  0169CA  B0C7               	btfsc	4039,0,c	;volatile
  7831  0169CC  D7FE               	goto	l1494
  7832  0169CE                     l13527:
  7833  0169CE  A4C7               	btfss	4039,2,c	;volatile
  7834  0169D0  D004               	goto	u16010
  7835  0169D2  0101               	movlb	1	; () banked
  7836  0169D4  6B8A               	clrf	??_WriteI2C1& (0+255),b
  7837  0169D6  2B8A               	incf	??_WriteI2C1& (0+255),f,b
  7838  0169D8  D002               	goto	u16018
  7839  0169DA                     u16010:
  7840  0169DA  0101               	movlb	1	; () banked
  7841  0169DC  6B8A               	clrf	??_WriteI2C1& (0+255),b
  7842  0169DE                     u16018:
  7843  0169DE  50C5               	movf	4037,w,c	;volatile
  7844  0169E0  0B1F               	andlw	31
  7845  0169E2  0101               	movlb	1	; () banked
  7846  0169E4  118A               	iorwf	??_WriteI2C1& (0+255),w,b
  7847  0169E6  0900               	iorlw	0
  7848  0169E8  A4D8               	btfss	status,2,c
  7849  0169EA  D7F1               	goto	l13527
  7850                           
  7851                           ; BSR set to: 1
  7852  0169EC  50C5               	movf	4037,w,c	;volatile
  7853                           
  7854                           ; BSR set to: 1
  7855                           
  7856                           ; BSR set to: 1
  7857                           
  7858                           ; BSR set to: 1
  7859                           
  7860                           ; BSR set to: 1
  7861                           ;	Return value of _WriteI2C1 is never used
  7862                           
  7863                           ; BSR set to: 1
  7864                           
  7865                           ; BSR set to: 1
  7866                           ;	Return value of _WriteI2C1 is never used
  7867  0169EE  0012               	return	
  7868  0169F0                     __end_of_WriteI2C1:
  7869                           	opt stack 0
  7870                           tblptru	equ	0xFF8
  7871                           tblptrh	equ	0xFF7
  7872                           tblptrl	equ	0xFF6
  7873                           tablat	equ	0xFF5
  7874                           prodh	equ	0xFF4
  7875                           prodl	equ	0xFF3
  7876                           postinc0	equ	0xFEE
  7877                           plusw0	equ	0xFEB
  7878                           wreg	equ	0xFE8
  7879                           indf1	equ	0xFE7
  7880                           postdec1	equ	0xFE5
  7881                           fsr1h	equ	0xFE2
  7882                           fsr1l	equ	0xFE1
  7883                           indf2	equ	0xFDF
  7884                           postinc2	equ	0xFDE
  7885                           postdec2	equ	0xFDD
  7886                           plusw2	equ	0xFDB
  7887                           fsr2h	equ	0xFDA
  7888                           fsr2l	equ	0xFD9
  7889                           status	equ	0xFD8
  7890                           
  7891 ;; *************** function _ReadI2C1 *****************
  7892 ;; Defined at:
  7893 ;;		line 11 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c1read.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;		None
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;		None
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  1    wreg      unsigned char 
  7900 ;; Registers used:
  7901 ;;		wreg, status,2, status,0
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7911 ;;Total ram usage:        0 bytes
  7912 ;; Hardware stack levels used:    1
  7913 ;; Hardware stack levels required when called:    9
  7914 ;; This function calls:
  7915 ;;		Nothing
  7916 ;; This function is called by:
  7917 ;;		_read_sensors
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text19
  7922  016F2C                     __ptext19:
  7923                           	opt stack 0
  7924  016F2C                     _ReadI2C1:
  7925                           	opt stack 20
  7926                           
  7927                           ;incstack = 0
  7928  016F2C  50C6               	movf	4038,w,c	;volatile
  7929  016F2E  0B0F               	andlw	15
  7930  016F30  0A08               	xorlw	8
  7931  016F32  B4D8               	btfsc	status,2,c
  7932  016F34  D004               	goto	l1460
  7933  016F36  50C6               	movf	4038,w,c	;volatile
  7934  016F38  0B0F               	andlw	15
  7935  016F3A  0A0B               	xorlw	11
  7936  016F3C  B4D8               	btfsc	status,2,c
  7937  016F3E                     l1460:
  7938  016F3E  86C5               	bsf	4037,3,c	;volatile
  7939  016F40                     l1461:
  7940  016F40  A0C7               	btfss	4039,0,c	;volatile
  7941  016F42  D7FE               	goto	l1461
  7942  016F44  50C9               	movf	4041,w,c	;volatile
  7943  016F46  0012               	return	
  7944  016F48                     __end_of_ReadI2C1:
  7945                           	opt stack 0
  7946                           tblptru	equ	0xFF8
  7947                           tblptrh	equ	0xFF7
  7948                           tblptrl	equ	0xFF6
  7949                           tablat	equ	0xFF5
  7950                           prodh	equ	0xFF4
  7951                           prodl	equ	0xFF3
  7952                           postinc0	equ	0xFEE
  7953                           plusw0	equ	0xFEB
  7954                           wreg	equ	0xFE8
  7955                           indf1	equ	0xFE7
  7956                           postdec1	equ	0xFE5
  7957                           fsr1h	equ	0xFE2
  7958                           fsr1l	equ	0xFE1
  7959                           indf2	equ	0xFDF
  7960                           postinc2	equ	0xFDE
  7961                           postdec2	equ	0xFDD
  7962                           plusw2	equ	0xFDB
  7963                           fsr2h	equ	0xFDA
  7964                           fsr2l	equ	0xFD9
  7965                           status	equ	0xFD8
  7966                           
  7967 ;; *************** function _OpenI2C1 *****************
  7968 ;; Defined at:
  7969 ;;		line 29 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c1open.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  sync_mode       1    wreg     unsigned char 
  7972 ;;  slew            1    0[BANK1 ] unsigned char 
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;  sync_mode       1    1[BANK1 ] unsigned char 
  7975 ;; Return value:  Size  Location     Type
  7976 ;;		None               void
  7977 ;; Registers used:
  7978 ;;		wreg, status,2, status,0
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7984 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7985 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7987 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7988 ;;Total ram usage:        2 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:    9
  7991 ;; This function calls:
  7992 ;;		Nothing
  7993 ;; This function is called by:
  7994 ;;		_read_sensors
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text20
  7999  016ED0                     __ptext20:
  8000                           	opt stack 0
  8001  016ED0                     _OpenI2C1:
  8002                           	opt stack 20
  8003                           
  8004                           ;incstack = 0
  8005                           ;OpenI2C1@sync_mode stored from wreg
  8006  016ED0  0101               	movlb	1	; () banked
  8007  016ED2  6F8B               	movwf	OpenI2C1@sync_mode& (0+255),b
  8008  016ED4  0E3F               	movlw	63
  8009  016ED6  16C7               	andwf	4039,f,c	;volatile
  8010  016ED8  0E00               	movlw	0
  8011  016EDA  6EC6               	movwf	4038,c	;volatile
  8012  016EDC  0E00               	movlw	0
  8013  016EDE  6EC5               	movwf	4037,c	;volatile
  8014  016EE0  0101               	movlb	1	; () banked
  8015  016EE2  518B               	movf	OpenI2C1@sync_mode& (0+255),w,b
  8016  016EE4  12C6               	iorwf	4038,f,c	;volatile
  8017  016EE6  0101               	movlb	1	; () banked
  8018  016EE8  518A               	movf	OpenI2C1@slew& (0+255),w,b
  8019  016EEA  12C7               	iorwf	4039,f,c	;volatile
  8020                           
  8021                           ; BSR set to: 1
  8022  016EEC  8AC6               	bsf	4038,5,c	;volatile
  8023                           
  8024                           ; BSR set to: 1
  8025  016EEE  0012               	return		;funcret
  8026  016EF0                     __end_of_OpenI2C1:
  8027                           	opt stack 0
  8028                           tblptru	equ	0xFF8
  8029                           tblptrh	equ	0xFF7
  8030                           tblptrl	equ	0xFF6
  8031                           tablat	equ	0xFF5
  8032                           prodh	equ	0xFF4
  8033                           prodl	equ	0xFF3
  8034                           postinc0	equ	0xFEE
  8035                           plusw0	equ	0xFEB
  8036                           wreg	equ	0xFE8
  8037                           indf1	equ	0xFE7
  8038                           postdec1	equ	0xFE5
  8039                           fsr1h	equ	0xFE2
  8040                           fsr1l	equ	0xFE1
  8041                           indf2	equ	0xFDF
  8042                           postinc2	equ	0xFDE
  8043                           postdec2	equ	0xFDD
  8044                           plusw2	equ	0xFDB
  8045                           fsr2h	equ	0xFDA
  8046                           fsr2l	equ	0xFD9
  8047                           status	equ	0xFD8
  8048                           
  8049 ;; *************** function _process_update_answer *****************
  8050 ;; Defined at:
  8051 ;;		line 318 in file "src/main.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;		None
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  ack_required    1   36[BANK3 ] unsigned char 
  8056 ;;  size            1   40[BANK3 ] unsigned char 
  8057 ;;  shortaddress    2   38[BANK3 ] unsigned char [2]
  8058 ;;  i               1   37[BANK3 ] unsigned char 
  8059 ;;  result          1   35[BANK3 ] unsigned char 
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      unsigned char 
  8062 ;; Registers used:
  8063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8070 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0
  8071 ;;      Temps:          0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
  8072 ;;      Totals:         0       0       0       0      13       0       0       0       0       0       0       0       
      +0       0       0       0
  8073 ;;Total ram usage:       13 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:   19
  8076 ;; This function calls:
  8077 ;;		_MiApp_DiscardMessage
  8078 ;;		_MiApp_MessageAvailable
  8079 ;;		_MiApp_TransceiverPowerState
  8080 ;;		_decode_variable
  8081 ;;		_send_writables_update
  8082 ;;		_timer_reset
  8083 ;;		_update_variable
  8084 ;;		_wait_for_1_sec
  8085 ;; This function is called by:
  8086 ;;		_main
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text21
  8091  013C02                     __ptext21:
  8092                           	opt stack 0
  8093  013C02                     _process_update_answer:
  8094                           	opt stack 11
  8095                           
  8096                           ;main.c: 320: uint8_t shortaddress[2];
  8097                           ;main.c: 321: uint8_t result = 0;
  8098                           
  8099                           ; BSR set to: 1
  8100                           ;incstack = 0
  8101  013C02  0E00               	movlw	0
  8102  013C04  0103               	movlb	3	; () banked
  8103  013C06  6FF7               	movwf	process_update_answer@result& (0+255),b
  8104  013C08                     l1109:
  8105                           
  8106                           ; BSR set to: 3
  8107                           ;main.c: 328: {
  8108                           ;main.c: 329: for (i=0; i<200; i++)
  8109  013C08  0E00               	movlw	0
  8110  013C0A  0103               	movlb	3	; () banked
  8111  013C0C  6FF9               	movwf	process_update_answer@i& (0+255),b
  8112  013C0E                     l14691:
  8113                           
  8114                           ; BSR set to: 3
  8115  013C0E  0EC7               	movlw	199
  8116  013C10  0103               	movlb	3	; () banked
  8117  013C12  65F9               	cpfsgt	process_update_answer@i& (0+255),b
  8118  013C14  D001               	goto	l14695
  8119  013C16  D7F8               	goto	l1109
  8120  013C18                     l14695:
  8121                           
  8122                           ; BSR set to: 3
  8123                           ;main.c: 330: {
  8124                           ;main.c: 331: _delay((unsigned long)((10)*(8000000/4000.0)));
  8125  013C18  0E1A               	movlw	26
  8126  013C1A  0103               	movlb	3	; () banked
  8127  013C1C  6FF0               	movwf	??_process_update_answer& (0+255),b
  8128  013C1E  0EF8               	movlw	248
  8129  013C20                     u18337:
  8130  013C20  2EE8               	decfsz	wreg,f,c
  8131  013C22  D7FE               	goto	u18337
  8132  013C24  2FF0               	decfsz	??_process_update_answer& (0+255),f,b
  8133  013C26  D7FC               	goto	u18337
  8134  013C28  D000               	nop2	
  8135                           
  8136                           ;main.c: 332: if(MiApp_MessageAvailable())
  8137  013C2A  ECE2  F0B7         	call	_MiApp_MessageAvailable	;wreg free
  8138  013C2E  0900               	iorlw	0
  8139  013C30  B4D8               	btfsc	status,2,c
  8140  013C32  D0C9               	goto	l14765
  8141                           
  8142                           ;main.c: 333: {
  8143                           ;main.c: 334: shortaddress[0] = rxMessage.SourceAddress[0];
  8144  013C34  C10F  FFD9         	movff	_rxMessage+3,fsr2l
  8145  013C38  C110  FFDA         	movff	_rxMessage+4,fsr2h
  8146  013C3C  50DF               	movf	indf2,w,c
  8147  013C3E  0103               	movlb	3	; () banked
  8148  013C40  6FFA               	movwf	process_update_answer@shortaddress& (0+255),b
  8149                           
  8150                           ; BSR set to: 3
  8151                           ;main.c: 335: shortaddress[1] = rxMessage.SourceAddress[1];
  8152  013C42  0101               	movlb	1	; () banked
  8153  013C44  EE20 F001          	lfsr	2,1
  8154  013C48  510F               	movf	(_rxMessage+3)& (0+255),w,b
  8155  013C4A  26D9               	addwf	fsr2l,f,c
  8156  013C4C  5110               	movf	(_rxMessage+4)& (0+255),w,b
  8157  013C4E  22DA               	addwfc	fsr2h,f,c
  8158  013C50  50DF               	movf	indf2,w,c
  8159  013C52  0103               	movlb	3	; () banked
  8160  013C54  6FFB               	movwf	(process_update_answer@shortaddress+1)& (0+255),b
  8161                           
  8162                           ; BSR set to: 3
  8163                           ;main.c: 336: uint8_t size = rxMessage.PayloadSize;
  8164  013C56  C113  F3FC         	movff	_rxMessage+7,process_update_answer@size
  8165                           
  8166                           ;main.c: 337: switch(rxMessage.Payload[0])
  8167  013C5A  D0AC               	goto	l14763
  8168  013C5C                     l14705:
  8169                           
  8170                           ;main.c: 342: if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00) && (size == 2))
  8171  013C5C  0103               	movlb	3	; () banked
  8172  013C5E  51FA               	movf	process_update_answer@shortaddress& (0+255),w,b
  8173  013C60  0103               	movlb	3	; () banked
  8174  013C62  A4D8               	btfss	status,2,c
  8175  013C64  D009               	goto	l14715
  8176                           
  8177                           ; BSR set to: 3
  8178  013C66  0103               	movlb	3	; () banked
  8179  013C68  51FB               	movf	(process_update_answer@shortaddress+1)& (0+255),w,b
  8180  013C6A  A4D8               	btfss	status,2,c
  8181  013C6C  D005               	goto	l14715
  8182                           
  8183                           ; BSR set to: 3
  8184  013C6E  0E02               	movlw	2
  8185  013C70  0103               	movlb	3	; () banked
  8186  013C72  19FC               	xorwf	process_update_answer@size& (0+255),w,b
  8187  013C74  B4D8               	btfsc	status,2,c
  8188  013C76  0012               	return	
  8189  013C78                     l14715:
  8190                           
  8191                           ; BSR set to: 3
  8192                           ;main.c: 348: else if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00) && (size >
      +                           2))
  8193  013C78  0103               	movlb	3	; () banked
  8194  013C7A  51FA               	movf	process_update_answer@shortaddress& (0+255),w,b
  8195  013C7C  0103               	movlb	3	; () banked
  8196  013C7E  A4D8               	btfss	status,2,c
  8197  013C80  D094               	goto	l14761
  8198                           
  8199                           ; BSR set to: 3
  8200  013C82  0103               	movlb	3	; () banked
  8201  013C84  51FB               	movf	(process_update_answer@shortaddress+1)& (0+255),w,b
  8202  013C86  A4D8               	btfss	status,2,c
  8203  013C88  D090               	goto	l14761
  8204                           
  8205                           ; BSR set to: 3
  8206  013C8A  0E02               	movlw	2
  8207  013C8C  0103               	movlb	3	; () banked
  8208  013C8E  65FC               	cpfsgt	process_update_answer@size& (0+255),b
  8209  013C90  D08C               	goto	l14761
  8210                           
  8211                           ; BSR set to: 3
  8212                           ;main.c: 349: {
  8213                           ;main.c: 350: bool ack_required = rxMessage.Payload[1];
  8214  013C92  0101               	movlb	1	; () banked
  8215  013C94  EE20 F001          	lfsr	2,1
  8216  013C98  5111               	movf	(_rxMessage+5)& (0+255),w,b
  8217  013C9A  26D9               	addwf	fsr2l,f,c
  8218  013C9C  5112               	movf	(_rxMessage+6)& (0+255),w,b
  8219  013C9E  22DA               	addwfc	fsr2h,f,c
  8220  013CA0  50DF               	movf	indf2,w,c
  8221  013CA2  0103               	movlb	3	; () banked
  8222  013CA4  6FF8               	movwf	process_update_answer@ack_required& (0+255),b
  8223                           
  8224                           ; BSR set to: 3
  8225                           ;main.c: 352: p_buffer = &rxMessage.Payload[2];
  8226  013CA6  0E02               	movlw	2
  8227  013CA8  0101               	movlb	1	; () banked
  8228  013CAA  2511               	addwf	(_rxMessage+5)& (0+255),w,b
  8229  013CAC  0101               	movlb	1	; () banked
  8230  013CAE  6F3A               	movwf	_p_buffer& (0+255),b
  8231  013CB0  0E00               	movlw	0
  8232  013CB2  0101               	movlb	1	; () banked
  8233  013CB4  2112               	addwfc	(_rxMessage+6)& (0+255),w,b
  8234  013CB6  0101               	movlb	1	; () banked
  8235  013CB8  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  8236                           
  8237                           ;main.c: 353: while ((p_buffer - &rxMessage.Payload[2]) < (size - 2))
  8238  013CBA  D018               	goto	l14731
  8239  013CBC                     l14725:
  8240                           
  8241                           ;main.c: 354: {
  8242                           ;main.c: 355: m_var = decode_variable(p_buffer);
  8243  013CBC  C13A  F194         	movff	_p_buffer,decode_variable@p_buffer
  8244  013CC0  C13B  F195         	movff	_p_buffer+1,decode_variable@p_buffer+1
  8245  013CC4  EC81  F0AC         	call	_decode_variable	;wreg free
  8246  013CC8  EE21  F079         	lfsr	2,_m_var
  8247  013CCC  0E09               	movlw	9
  8248  013CCE                     u17641:
  8249  013CCE  CFEB FFDB          	movff	plusw0,plusw2
  8250  013CD2  06E8               	decf	wreg,f,c
  8251  013CD4  E2FC               	bc	u17641
  8252                           
  8253                           ;main.c: 356: p_buffer += m_var.size;
  8254  013CD6  0101               	movlb	1	; () banked
  8255  013CD8  5182               	movf	(_m_var+9)& (0+255),w,b
  8256  013CDA  0D01               	mullw	1
  8257  013CDC  50F3               	movf	prodl,w,c
  8258  013CDE  0101               	movlb	1	; () banked
  8259  013CE0  273A               	addwf	_p_buffer& (0+255),f,b
  8260  013CE2  50F4               	movf	prodh,w,c
  8261  013CE4  0101               	movlb	1	; () banked
  8262  013CE6  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  8263                           
  8264                           ; BSR set to: 1
  8265                           ;main.c: 358: update_variable();
  8266  013CE8  ECFB  F0AC         	call	_update_variable	;wreg free
  8267  013CEC                     l14731:
  8268  013CEC  0EFE               	movlw	254
  8269  013CEE  0103               	movlb	3	; () banked
  8270  013CF0  6FF0               	movwf	??_process_update_answer& (0+255),b
  8271  013CF2  0EFF               	movlw	255
  8272  013CF4  0103               	movlb	3	; () banked
  8273  013CF6  6FF1               	movwf	(??_process_update_answer+1)& (0+255),b
  8274  013CF8  0103               	movlb	3	; () banked
  8275  013CFA  51FC               	movf	process_update_answer@size& (0+255),w,b
  8276  013CFC  0103               	movlb	3	; () banked
  8277  013CFE  6FF2               	movwf	(??_process_update_answer+2)& (0+255),b
  8278  013D00  6BF3               	clrf	(??_process_update_answer+3)& (0+255),b
  8279  013D02  0103               	movlb	3	; () banked
  8280  013D04  51F0               	movf	??_process_update_answer& (0+255),w,b
  8281  013D06  0103               	movlb	3	; () banked
  8282  013D08  27F2               	addwf	(??_process_update_answer+2)& (0+255),f,b
  8283  013D0A  0103               	movlb	3	; () banked
  8284  013D0C  51F1               	movf	(??_process_update_answer+1)& (0+255),w,b
  8285  013D0E  0103               	movlb	3	; () banked
  8286  013D10  23F3               	addwfc	(??_process_update_answer+3)& (0+255),f,b
  8287  013D12  0E02               	movlw	2
  8288  013D14  0101               	movlb	1	; () banked
  8289  013D16  2511               	addwf	(_rxMessage+5)& (0+255),w,b
  8290  013D18  0103               	movlb	3	; () banked
  8291  013D1A  6FF4               	movwf	(??_process_update_answer+4)& (0+255),b
  8292  013D1C  0E00               	movlw	0
  8293  013D1E  0101               	movlb	1	; () banked
  8294  013D20  2112               	addwfc	(_rxMessage+6)& (0+255),w,b
  8295  013D22  0103               	movlb	3	; () banked
  8296  013D24  6FF5               	movwf	(??_process_update_answer+5)& (0+255),b
  8297  013D26  0103               	movlb	3	; () banked
  8298  013D28  1FF4               	comf	(??_process_update_answer+4)& (0+255),f,b
  8299  013D2A  1FF5               	comf	(??_process_update_answer+5)& (0+255),f,b
  8300  013D2C  4BF4               	infsnz	(??_process_update_answer+4)& (0+255),f,b
  8301  013D2E  2BF5               	incf	(??_process_update_answer+5)& (0+255),f,b
  8302  013D30  0101               	movlb	1	; () banked
  8303  013D32  513A               	movf	_p_buffer& (0+255),w,b
  8304  013D34  0103               	movlb	3	; () banked
  8305  013D36  27F4               	addwf	(??_process_update_answer+4)& (0+255),f,b
  8306  013D38  0101               	movlb	1	; () banked
  8307  013D3A  513B               	movf	(_p_buffer+1)& (0+255),w,b
  8308  013D3C  0103               	movlb	3	; () banked
  8309  013D3E  23F5               	addwfc	(??_process_update_answer+5)& (0+255),f,b
  8310  013D40  0103               	movlb	3	; () banked
  8311  013D42  51F2               	movf	(??_process_update_answer+2)& (0+255),w,b
  8312  013D44  0103               	movlb	3	; () banked
  8313  013D46  5DF4               	subwf	(??_process_update_answer+4)& (0+255),w,b
  8314  013D48  0103               	movlb	3	; () banked
  8315  013D4A  51F5               	movf	(??_process_update_answer+5)& (0+255),w,b
  8316  013D4C  0A80               	xorlw	128
  8317  013D4E  0103               	movlb	3	; () banked
  8318  013D50  6FF6               	movwf	(??_process_update_answer+6)& (0+255),b
  8319  013D52  0103               	movlb	3	; () banked
  8320  013D54  51F3               	movf	(??_process_update_answer+3)& (0+255),w,b
  8321  013D56  0A80               	xorlw	128
  8322  013D58  0103               	movlb	3	; () banked
  8323  013D5A  59F6               	subwfb	(??_process_update_answer+6)& (0+255),w,b
  8324  013D5C  A0D8               	btfss	status,0,c
  8325  013D5E  D7AE               	goto	l14725
  8326                           
  8327                           ; BSR set to: 3
  8328                           ;main.c: 359: }
  8329                           ;main.c: 360: MiApp_DiscardMessage();
  8330                           
  8331                           ; BSR set to: 3
  8332  013D60  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
  8333                           
  8334                           ;main.c: 361: if (ack_required)
  8335  013D64  0103               	movlb	3	; () banked
  8336  013D66  51F8               	movf	process_update_answer@ack_required& (0+255),w,b
  8337  013D68  0103               	movlb	3	; () banked
  8338  013D6A  A4D8               	btfss	status,2,c
  8339  013D6C  D015               	goto	l14755
  8340  013D6E  D01F               	goto	l1128
  8341  013D70                     l14739:
  8342                           
  8343                           ;main.c: 364: {
  8344                           ;main.c: 366: consecutive_fails++;
  8345  013D70  0101               	movlb	1	; () banked
  8346  013D72  2B47               	incf	_consecutive_fails& (0+255),f,b
  8347                           
  8348                           ; BSR set to: 1
  8349                           ;main.c: 367: if (consecutive_fails >= 3)
  8350  013D74  0E02               	movlw	2
  8351  013D76  0101               	movlb	1	; () banked
  8352  013D78  6547               	cpfsgt	_consecutive_fails& (0+255),b
  8353  013D7A  D00C               	goto	l14753
  8354                           
  8355                           ; BSR set to: 1
  8356                           ;main.c: 368: {
  8357                           ;main.c: 370: myAppState = STATE_PROBLEM;
  8358  013D7C  0E02               	movlw	2
  8359  013D7E  0101               	movlb	1	; () banked
  8360  013D80  6F4B               	movwf	_myAppState& (0+255),b
  8361                           
  8362                           ; BSR set to: 1
  8363                           ;main.c: 371: LATCbits.LATC0 = 0;
  8364  013D82  908B               	bcf	3979,0,c	;volatile
  8365                           
  8366                           ; BSR set to: 1
  8367                           ;main.c: 372: MiApp_TransceiverPowerState(0x00);
  8368  013D84  0E00               	movlw	0
  8369  013D86  ECAB  F0B6         	call	_MiApp_TransceiverPowerState
  8370                           
  8371                           ;main.c: 373: timer_reset();
  8372  013D8A  ECC0  F0B7         	call	_timer_reset	;wreg free
  8373                           
  8374                           ;main.c: 374: PIR3bits.RTCCIF = 0;
  8375  013D8E  90A4               	bcf	4004,0,c	;volatile
  8376  013D90  0003               	sleep		;# 
  8377  013D92  00FF               	reset		;# 
  8378  013D94                     l14753:
  8379                           
  8380                           ;main.c: 378: }
  8381                           ;main.c: 379: wait_for_1_sec();
  8382  013D94  ECE6  F0B6         	call	_wait_for_1_sec	;wreg free
  8383  013D98                     l14755:
  8384  013D98  ECE8  F0A6         	call	_send_writables_update	;wreg free
  8385  013D9C  0900               	iorlw	0
  8386  013D9E  B4D8               	btfsc	status,2,c
  8387  013DA0  D7E7               	goto	l14739
  8388                           
  8389                           ;main.c: 380: }
  8390                           ;main.c: 381: consecutive_fails = 0;
  8391  013DA2  0E00               	movlw	0
  8392  013DA4  0101               	movlb	1	; () banked
  8393  013DA6  6F47               	movwf	_consecutive_fails& (0+255),b
  8394                           
  8395                           ; BSR set to: 1
  8396                           ;main.c: 382: return 1;
  8397                           ;	Return value of _process_update_answer is never used
  8398  013DA8  0012               	return	
  8399  013DAA                     l14761:
  8400                           
  8401                           ;main.c: 385: else
  8402                           ;main.c: 386: MiApp_DiscardMessage();
  8403  013DAA  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
  8404  013DAE                     l1128:
  8405                           
  8406                           ;main.c: 389: MiApp_DiscardMessage();
  8407  013DAE  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
  8408                           
  8409                           ;main.c: 390: }
  8410  013DB2  D009               	goto	l14765
  8411  013DB4                     l14763:
  8412  013DB4  C111  FFD9         	movff	_rxMessage+5,fsr2l
  8413  013DB8  C112  FFDA         	movff	_rxMessage+6,fsr2h
  8414  013DBC  50DF               	movf	indf2,w,c
  8415                           
  8416                           ; Switch size 1, requested type "space"
  8417                           ; Number of cases is 1, Range of values is 4 to 4
  8418                           ; switch strategies available:
  8419                           ; Name         Instructions Cycles
  8420                           ; simple_byte            4     3 (average)
  8421                           ;	Chosen strategy is simple_byte
  8422  013DBE  0A04               	xorlw	4	; case 4
  8423  013DC0  B4D8               	btfsc	status,2,c
  8424  013DC2  D74C               	goto	l14705
  8425  013DC4  D7F4               	goto	l1128
  8426  013DC6                     l14765:
  8427  013DC6  0103               	movlb	3	; () banked
  8428  013DC8  2BF9               	incf	process_update_answer@i& (0+255),f,b
  8429  013DCA  D721               	goto	l14691
  8430  013DCC                     __end_of_process_update_answer:
  8431                           	opt stack 0
  8432                           tblptru	equ	0xFF8
  8433                           tblptrh	equ	0xFF7
  8434                           tblptrl	equ	0xFF6
  8435                           tablat	equ	0xFF5
  8436                           prodh	equ	0xFF4
  8437                           prodl	equ	0xFF3
  8438                           postinc0	equ	0xFEE
  8439                           plusw0	equ	0xFEB
  8440                           wreg	equ	0xFE8
  8441                           indf1	equ	0xFE7
  8442                           postdec1	equ	0xFE5
  8443                           fsr1h	equ	0xFE2
  8444                           fsr1l	equ	0xFE1
  8445                           indf2	equ	0xFDF
  8446                           postinc2	equ	0xFDE
  8447                           postdec2	equ	0xFDD
  8448                           plusw2	equ	0xFDB
  8449                           fsr2h	equ	0xFDA
  8450                           fsr2l	equ	0xFD9
  8451                           status	equ	0xFD8
  8452                           
  8453 ;; *************** function _wait_for_1_sec *****************
  8454 ;; Defined at:
  8455 ;;		line 740 in file "src/main.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;		None
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  i               2    1[BANK1 ] unsigned int 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;		None               void
  8462 ;; Registers used:
  8463 ;;		wreg, status,2, status,0
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8470 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8471 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8472 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8473 ;;Total ram usage:        3 bytes
  8474 ;; Hardware stack levels used:    1
  8475 ;; Hardware stack levels required when called:    9
  8476 ;; This function calls:
  8477 ;;		Nothing
  8478 ;; This function is called by:
  8479 ;;		_main
  8480 ;;		_process_update_answer
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text22
  8485  016DCC                     __ptext22:
  8486                           	opt stack 0
  8487  016DCC                     _wait_for_1_sec:
  8488                           	opt stack 21
  8489                           
  8490                           ;main.c: 742: unsigned int i;
  8491                           ;main.c: 743: for (i=0; i<100; i++)
  8492                           
  8493                           ;incstack = 0
  8494  016DCC  0E00               	movlw	0
  8495  016DCE  0101               	movlb	1	; () banked
  8496  016DD0  6F8C               	movwf	(wait_for_1_sec@i+1)& (0+255),b
  8497  016DD2  0E00               	movlw	0
  8498  016DD4  6F8B               	movwf	wait_for_1_sec@i& (0+255),b
  8499  016DD6                     l13359:
  8500                           
  8501                           ; BSR set to: 1
  8502  016DD6  0101               	movlb	1	; () banked
  8503  016DD8  518C               	movf	(wait_for_1_sec@i+1)& (0+255),w,b
  8504  016DDA  E112               	bnz	l1234
  8505  016DDC  0E64               	movlw	100
  8506  016DDE  0101               	movlb	1	; () banked
  8507  016DE0  5D8B               	subwf	wait_for_1_sec@i& (0+255),w,b
  8508  016DE2  B0D8               	btfsc	status,0,c
  8509  016DE4  0012               	return	
  8510                           
  8511                           ; BSR set to: 1
  8512                           ;main.c: 744: {
  8513                           ;main.c: 745: _delay((unsigned long)((10)*(8000000/4000.0)));
  8514                           
  8515                           ; BSR set to: 1
  8516                           
  8517                           ; BSR set to: 1
  8518  016DE6  0E1A               	movlw	26
  8519  016DE8  0101               	movlb	1	; () banked
  8520  016DEA  6F8A               	movwf	??_wait_for_1_sec& (0+255),b
  8521  016DEC  0EF8               	movlw	248
  8522  016DEE                     u18347:
  8523  016DEE  2EE8               	decfsz	wreg,f,c
  8524  016DF0  D7FE               	goto	u18347
  8525  016DF2  2F8A               	decfsz	??_wait_for_1_sec& (0+255),f,b
  8526  016DF4  D7FC               	goto	u18347
  8527  016DF6  D000               	nop2	
  8528  016DF8  0101               	movlb	1	; () banked
  8529  016DFA  4B8B               	infsnz	wait_for_1_sec@i& (0+255),f,b
  8530  016DFC  2B8C               	incf	(wait_for_1_sec@i+1)& (0+255),f,b
  8531  016DFE  D7EB               	goto	l13359
  8532  016E00                     l1234:
  8533                           
  8534                           ; BSR set to: 1
  8535  016E00  0012               	return		;funcret
  8536  016E02                     __end_of_wait_for_1_sec:
  8537                           	opt stack 0
  8538                           tblptru	equ	0xFF8
  8539                           tblptrh	equ	0xFF7
  8540                           tblptrl	equ	0xFF6
  8541                           tablat	equ	0xFF5
  8542                           prodh	equ	0xFF4
  8543                           prodl	equ	0xFF3
  8544                           postinc0	equ	0xFEE
  8545                           plusw0	equ	0xFEB
  8546                           wreg	equ	0xFE8
  8547                           indf1	equ	0xFE7
  8548                           postdec1	equ	0xFE5
  8549                           fsr1h	equ	0xFE2
  8550                           fsr1l	equ	0xFE1
  8551                           indf2	equ	0xFDF
  8552                           postinc2	equ	0xFDE
  8553                           postdec2	equ	0xFDD
  8554                           plusw2	equ	0xFDB
  8555                           fsr2h	equ	0xFDA
  8556                           fsr2l	equ	0xFD9
  8557                           status	equ	0xFD8
  8558                           
  8559 ;; *************** function _update_variable *****************
  8560 ;; Defined at:
  8561 ;;		line 650 in file "src/main.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;		None
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;		None
  8566 ;; Return value:  Size  Location     Type
  8567 ;;		None               void
  8568 ;; Registers used:
  8569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8579 ;;Total ram usage:        0 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:   12
  8582 ;; This function calls:
  8583 ;;		_MiMAC_SetPower
  8584 ;;		_RtccWrOn
  8585 ;;		_labelcmp
  8586 ;;		_mW_ufixed16_to_dBm
  8587 ;; This function is called by:
  8588 ;;		_process_update_answer
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text23
  8593  0159F6                     __ptext23:
  8594                           	opt stack 0
  8595  0159F6                     _update_variable:
  8596                           	opt stack 17
  8597                           
  8598                           ;main.c: 652: if (labelcmp(m_var.label, (uint8_t*)POWER_LABEL) == 1)
  8599                           
  8600                           ; BSR set to: 1
  8601                           ;incstack = 0
  8602  0159F6  0E79               	movlw	low _m_var
  8603  0159F8  0101               	movlb	1	; () banked
  8604  0159FA  6F8A               	movwf	labelcmp@p1& (0+255),b
  8605  0159FC  0E01               	movlw	high _m_var
  8606  0159FE  0101               	movlb	1	; () banked
  8607  015A00  6F8B               	movwf	(labelcmp@p1+1)& (0+255),b
  8608  015A02  0EEB               	movlw	low _POWER_LABEL
  8609  015A04  0101               	movlb	1	; () banked
  8610  015A06  6F8C               	movwf	labelcmp@p2& (0+255),b
  8611  015A08  0EFF               	movlw	high _POWER_LABEL
  8612  015A0A  0101               	movlb	1	; () banked
  8613  015A0C  6F8D               	movwf	(labelcmp@p2+1)& (0+255),b
  8614  015A0E  EC17  F0B0         	call	_labelcmp	;wreg free
  8615  015A12  06E8               	decf	wreg,f,c
  8616  015A14  A4D8               	btfss	status,2,c
  8617  015A16  D010               	goto	l13413
  8618                           
  8619                           ;main.c: 653: {
  8620                           ;main.c: 654: m_power = mW_ufixed16_to_dBm(m_var.value_byte1, m_var.value_byte2);
  8621  015A18  C17E  F18A         	movff	_m_var+5,mW_ufixed16_to_dBm@value2
  8622  015A1C  0101               	movlb	1	; () banked
  8623  015A1E  517D               	movf	(_m_var+4)& (0+255),w,b
  8624  015A20  EC3B  F0AE         	call	_mW_ufixed16_to_dBm
  8625  015A24  0101               	movlb	1	; () banked
  8626  015A26  6F4A               	movwf	_m_power& (0+255),b
  8627                           
  8628                           ;main.c: 655: MiMAC_SetPower(m_power);
  8629  015A28  0101               	movlb	1	; () banked
  8630  015A2A  514A               	movf	_m_power& (0+255),w,b
  8631  015A2C  ECC9  F0B6         	call	_MiMAC_SetPower
  8632                           
  8633                           ;main.c: 656: Pwr_updated = 1;
  8634  015A30  0E01               	movlw	1
  8635  015A32  0100               	movlb	0	; () banked
  8636  015A34  6FB7               	movwf	_Pwr_updated& (0+255),b
  8637                           
  8638                           ;main.c: 657: }
  8639  015A36  0012               	return	
  8640  015A38                     l13413:
  8641                           
  8642                           ;main.c: 658: else if ((labelcmp(m_var.label, (uint8_t*)UPDATE_FREQUENCY_LABEL) == 1) &&
      +                           (m_var.unit == 4) && (m_var.type == 0))
  8643  015A38  0E79               	movlw	low _m_var
  8644  015A3A  0101               	movlb	1	; () banked
  8645  015A3C  6F8A               	movwf	labelcmp@p1& (0+255),b
  8646  015A3E  0E01               	movlw	high _m_var
  8647  015A40  0101               	movlb	1	; () banked
  8648  015A42  6F8B               	movwf	(labelcmp@p1+1)& (0+255),b
  8649  015A44  0EF7               	movlw	low _UPDATE_FREQUENCY_LABEL
  8650  015A46  0101               	movlb	1	; () banked
  8651  015A48  6F8C               	movwf	labelcmp@p2& (0+255),b
  8652  015A4A  0EFF               	movlw	high _UPDATE_FREQUENCY_LABEL
  8653  015A4C  0101               	movlb	1	; () banked
  8654  015A4E  6F8D               	movwf	(labelcmp@p2+1)& (0+255),b
  8655  015A50  EC17  F0B0         	call	_labelcmp	;wreg free
  8656  015A54  06E8               	decf	wreg,f,c
  8657  015A56  A4D8               	btfss	status,2,c
  8658  015A58  0012               	return	
  8659  015A5A  0E04               	movlw	4
  8660  015A5C  0101               	movlb	1	; () banked
  8661  015A5E  197F               	xorwf	(_m_var+6)& (0+255),w,b
  8662  015A60  A4D8               	btfss	status,2,c
  8663  015A62  0012               	return	
  8664                           
  8665                           ; BSR set to: 1
  8666  015A64  0101               	movlb	1	; () banked
  8667  015A66  517C               	movf	(_m_var+3)& (0+255),w,b
  8668  015A68  A4D8               	btfss	status,2,c
  8669  015A6A  0012               	return	
  8670                           
  8671                           ; BSR set to: 1
  8672                           ;main.c: 660: {
  8673                           ;main.c: 661: if (m_var.value_byte1 == 0)
  8674  015A6C  0101               	movlb	1	; () banked
  8675  015A6E  517D               	movf	(_m_var+4)& (0+255),w,b
  8676  015A70  A4D8               	btfss	status,2,c
  8677  015A72  D019               	goto	l1209
  8678                           
  8679                           ; BSR set to: 1
  8680                           ;main.c: 662: {
  8681                           ;main.c: 663: m_update_frequency = 0;
  8682  015A74  0E00               	movlw	0
  8683  015A76  0101               	movlb	1	; () banked
  8684  015A78  6FFF               	movwf	_m_update_frequency& (0+255),b	;volatile
  8685                           
  8686                           ; BSR set to: 1
  8687                           ;main.c: 664: RtccWrOn();
  8688  015A7A  ECD9  F0B7         	call	_RtccWrOn	;wreg free
  8689                           
  8690                           ;main.c: 665: RTCCFGbits.RTCPTR0 = 0;
  8691  015A7E  010F               	movlb	15	; () banked
  8692  015A80  913F               	bcf	63,0,b	;volatile
  8693                           
  8694                           ; BSR set to: 15
  8695                           ;main.c: 666: RTCCFGbits.RTCPTR1 = 0;
  8696  015A82  010F               	movlb	15	; () banked
  8697  015A84  933F               	bcf	63,1,b	;volatile
  8698                           
  8699                           ; BSR set to: 15
  8700                           ;main.c: 667: RTCVALHbits.RTCVALH = 0x00;
  8701  015A86  0E00               	movlw	0
  8702  015A88  010F               	movlb	15	; () banked
  8703  015A8A  6F3B               	movwf	59,b	;volatile
  8704                           
  8705                           ; BSR set to: 15
  8706                           ;main.c: 668: RTCVALLbits.RTCVALL = 0x00;
  8707  015A8C  0E00               	movlw	0
  8708  015A8E  010F               	movlb	15	; () banked
  8709  015A90  6F3A               	movwf	58,b	;volatile
  8710                           
  8711                           ; BSR set to: 15
  8712                           ;main.c: 669: ALRMCFGbits.AMASK = 0b0010;
  8713  015A92  010F               	movlb	15	; () banked
  8714  015A94  5147               	movf	71,w,b	;volatile
  8715  015A96  0BC3               	andlw	-61
  8716  015A98  0908               	iorlw	8
  8717  015A9A  6F47               	movwf	71,b	;volatile
  8718                           
  8719                           ; BSR set to: 15
  8720                           ;main.c: 670: (RTCCFGbits.RTCWREN = 0);
  8721  015A9C  010F               	movlb	15	; () banked
  8722  015A9E  9B3F               	bcf	63,5,b	;volatile
  8723                           
  8724                           ; BSR set to: 15
  8725                           ;main.c: 671: timer_count = 1;
  8726  015AA0  0E01               	movlw	1
  8727  015AA2  6E48               	movwf	_timer_count,c	;volatile
  8728  015AA4  D017               	goto	l13457
  8729  015AA6                     l1209:
  8730                           
  8731                           ; BSR set to: 1
  8732                           ;main.c: 674: else
  8733                           ;main.c: 675: {
  8734                           ;main.c: 676: m_update_frequency = m_var.value_byte1;
  8735  015AA6  C17D  F1FF         	movff	_m_var+4,_m_update_frequency	;volatile
  8736                           
  8737                           ; BSR set to: 1
  8738                           ;main.c: 677: RtccWrOn();
  8739  015AAA  ECD9  F0B7         	call	_RtccWrOn	;wreg free
  8740                           
  8741                           ;main.c: 678: RTCCFGbits.RTCPTR0 = 0;
  8742  015AAE  010F               	movlb	15	; () banked
  8743  015AB0  913F               	bcf	63,0,b	;volatile
  8744                           
  8745                           ; BSR set to: 15
  8746                           ;main.c: 679: RTCCFGbits.RTCPTR1 = 0;
  8747  015AB2  010F               	movlb	15	; () banked
  8748  015AB4  933F               	bcf	63,1,b	;volatile
  8749                           
  8750                           ; BSR set to: 15
  8751                           ;main.c: 680: RTCVALHbits.RTCVALH = 0x00;
  8752  015AB6  0E00               	movlw	0
  8753  015AB8  010F               	movlb	15	; () banked
  8754  015ABA  6F3B               	movwf	59,b	;volatile
  8755                           
  8756                           ; BSR set to: 15
  8757                           ;main.c: 681: RTCVALLbits.RTCVALL = 0x00;
  8758  015ABC  0E00               	movlw	0
  8759  015ABE  010F               	movlb	15	; () banked
  8760  015AC0  6F3A               	movwf	58,b	;volatile
  8761                           
  8762                           ; BSR set to: 15
  8763                           ;main.c: 682: ALRMCFGbits.AMASK = 0b0011;
  8764  015AC2  010F               	movlb	15	; () banked
  8765  015AC4  5147               	movf	71,w,b	;volatile
  8766  015AC6  0BC3               	andlw	-61
  8767  015AC8  090C               	iorlw	12
  8768  015ACA  6F47               	movwf	71,b	;volatile
  8769                           
  8770                           ; BSR set to: 15
  8771                           ;main.c: 683: (RTCCFGbits.RTCWREN = 0);
  8772  015ACC  010F               	movlb	15	; () banked
  8773  015ACE  9B3F               	bcf	63,5,b	;volatile
  8774                           
  8775                           ; BSR set to: 15
  8776                           ;main.c: 684: timer_count = m_update_frequency;
  8777  015AD0  C1FF  F048         	movff	_m_update_frequency,_timer_count	;volatile
  8778  015AD4                     l13457:
  8779                           
  8780                           ; BSR set to: 15
  8781                           ;main.c: 685: timer_flag = 0;
  8782  015AD4  0E00               	movlw	0
  8783  015AD6  0101               	movlb	1	; () banked
  8784  015AD8  6F4D               	movwf	_timer_flag& (0+255),b	;volatile
  8785                           
  8786                           ; BSR set to: 1
  8787                           ;main.c: 686: }
  8788                           ;main.c: 687: UpF_updated = 1;
  8789                           
  8790                           ; BSR set to: 1
  8791  015ADA  0E01               	movlw	1
  8792  015ADC  0100               	movlb	0	; () banked
  8793  015ADE  6FBB               	movwf	_UpF_updated& (0+255),b
  8794                           
  8795                           ; BSR set to: 0
  8796  015AE0  0012               	return	
  8797  015AE2                     __end_of_update_variable:
  8798                           	opt stack 0
  8799                           tblptru	equ	0xFF8
  8800                           tblptrh	equ	0xFF7
  8801                           tblptrl	equ	0xFF6
  8802                           tablat	equ	0xFF5
  8803                           prodh	equ	0xFF4
  8804                           prodl	equ	0xFF3
  8805                           postinc0	equ	0xFEE
  8806                           plusw0	equ	0xFEB
  8807                           wreg	equ	0xFE8
  8808                           indf1	equ	0xFE7
  8809                           postdec1	equ	0xFE5
  8810                           fsr1h	equ	0xFE2
  8811                           fsr1l	equ	0xFE1
  8812                           indf2	equ	0xFDF
  8813                           postinc2	equ	0xFDE
  8814                           postdec2	equ	0xFDD
  8815                           plusw2	equ	0xFDB
  8816                           fsr2h	equ	0xFDA
  8817                           fsr2l	equ	0xFD9
  8818                           status	equ	0xFD8
  8819                           
  8820 ;; *************** function _mW_ufixed16_to_dBm *****************
  8821 ;; Defined at:
  8822 ;;		line 22 in file "../../muta/muta_messages.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;  value1          1    wreg     unsigned char 
  8825 ;;  value2          1    0[BANK1 ] unsigned char 
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;  value1          1    1[BANK1 ] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      unsigned char 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2, status,0
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8837 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8838 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8840 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8841 ;;Total ram usage:        2 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    9
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_update_variable
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text24
  8852  015C76                     __ptext24:
  8853                           	opt stack 0
  8854  015C76                     _mW_ufixed16_to_dBm:
  8855                           	opt stack 19
  8856                           
  8857                           ;incstack = 0
  8858                           ;mW_ufixed16_to_dBm@value1 stored from wreg
  8859  015C76  0101               	movlb	1	; () banked
  8860  015C78  6F8B               	movwf	mW_ufixed16_to_dBm@value1& (0+255),b
  8861                           
  8862                           ;muta_messages.c: 24: if (value1==20 && value2==0)
  8863  015C7A  0E14               	movlw	20
  8864  015C7C  0101               	movlb	1	; () banked
  8865  015C7E  198B               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  8866  015C80  A4D8               	btfss	status,2,c
  8867  015C82  D007               	goto	l12837
  8868                           
  8869                           ; BSR set to: 1
  8870  015C84  0101               	movlb	1	; () banked
  8871  015C86  518A               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  8872  015C88  0101               	movlb	1	; () banked
  8873  015C8A  A4D8               	btfss	status,2,c
  8874  015C8C  D002               	goto	l12837
  8875                           
  8876                           ; BSR set to: 1
  8877                           ;muta_messages.c: 25: return 0x00;
  8878  015C8E  0E00               	movlw	0
  8879                           
  8880                           ; BSR set to: 1
  8881                           
  8882                           ; BSR set to: 1
  8883  015C90  0012               	return	
  8884  015C92                     l12837:
  8885                           
  8886                           ; BSR set to: 1
  8887                           ;muta_messages.c: 26: else if (value1==10 && value2==0)
  8888  015C92  0E0A               	movlw	10
  8889  015C94  0101               	movlb	1	; () banked
  8890  015C96  198B               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  8891  015C98  A4D8               	btfss	status,2,c
  8892  015C9A  D007               	goto	l12847
  8893                           
  8894                           ; BSR set to: 1
  8895  015C9C  0101               	movlb	1	; () banked
  8896  015C9E  518A               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  8897  015CA0  0101               	movlb	1	; () banked
  8898  015CA2  A4D8               	btfss	status,2,c
  8899  015CA4  D002               	goto	l12847
  8900                           
  8901                           ; BSR set to: 1
  8902                           ;muta_messages.c: 27: return 0x01;
  8903  015CA6  0E01               	movlw	1
  8904                           
  8905                           ; BSR set to: 1
  8906                           
  8907                           ; BSR set to: 1
  8908  015CA8  0012               	return	
  8909  015CAA                     l12847:
  8910                           
  8911                           ; BSR set to: 1
  8912                           ;muta_messages.c: 28: else if (value1==5 && value2==0)
  8913  015CAA  0E05               	movlw	5
  8914  015CAC  0101               	movlb	1	; () banked
  8915  015CAE  198B               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  8916  015CB0  A4D8               	btfss	status,2,c
  8917  015CB2  D007               	goto	l12857
  8918                           
  8919                           ; BSR set to: 1
  8920  015CB4  0101               	movlb	1	; () banked
  8921  015CB6  518A               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  8922  015CB8  0101               	movlb	1	; () banked
  8923  015CBA  A4D8               	btfss	status,2,c
  8924  015CBC  D002               	goto	l12857
  8925                           
  8926                           ; BSR set to: 1
  8927                           ;muta_messages.c: 29: return 0x02;
  8928  015CBE  0E02               	movlw	2
  8929                           
  8930                           ; BSR set to: 1
  8931                           
  8932                           ; BSR set to: 1
  8933  015CC0  0012               	return	
  8934  015CC2                     l12857:
  8935                           
  8936                           ; BSR set to: 1
  8937                           ;muta_messages.c: 30: else if (value1==2 && value2==50)
  8938  015CC2  0E02               	movlw	2
  8939  015CC4  0101               	movlb	1	; () banked
  8940  015CC6  198B               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  8941  015CC8  A4D8               	btfss	status,2,c
  8942  015CCA  D007               	goto	l12867
  8943                           
  8944                           ; BSR set to: 1
  8945  015CCC  0E32               	movlw	50
  8946  015CCE  0101               	movlb	1	; () banked
  8947  015CD0  198A               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  8948  015CD2  A4D8               	btfss	status,2,c
  8949  015CD4  D002               	goto	l12867
  8950                           
  8951                           ; BSR set to: 1
  8952                           ;muta_messages.c: 31: return 0x03;
  8953  015CD6  0E03               	movlw	3
  8954                           
  8955                           ; BSR set to: 1
  8956                           
  8957                           ; BSR set to: 1
  8958  015CD8  0012               	return	
  8959  015CDA                     l12867:
  8960                           
  8961                           ; BSR set to: 1
  8962                           ;muta_messages.c: 32: else if (value1==1 && value2==25)
  8963  015CDA  0101               	movlb	1	; () banked
  8964  015CDC  058B               	decf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  8965  015CDE  A4D8               	btfss	status,2,c
  8966  015CE0  D007               	goto	l12877
  8967                           
  8968                           ; BSR set to: 1
  8969  015CE2  0E19               	movlw	25
  8970  015CE4  0101               	movlb	1	; () banked
  8971  015CE6  198A               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  8972  015CE8  A4D8               	btfss	status,2,c
  8973  015CEA  D002               	goto	l12877
  8974                           
  8975                           ; BSR set to: 1
  8976                           ;muta_messages.c: 33: return 0x04;
  8977  015CEC  0E04               	movlw	4
  8978                           
  8979                           ; BSR set to: 1
  8980                           
  8981                           ; BSR set to: 1
  8982  015CEE  0012               	return	
  8983  015CF0                     l12877:
  8984                           
  8985                           ; BSR set to: 1
  8986                           ;muta_messages.c: 34: else if (value1==0 && value2==60)
  8987  015CF0  0101               	movlb	1	; () banked
  8988  015CF2  518B               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  8989  015CF4  0101               	movlb	1	; () banked
  8990  015CF6  A4D8               	btfss	status,2,c
  8991  015CF8  D007               	goto	l12887
  8992                           
  8993                           ; BSR set to: 1
  8994  015CFA  0E3C               	movlw	60
  8995  015CFC  0101               	movlb	1	; () banked
  8996  015CFE  198A               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  8997  015D00  A4D8               	btfss	status,2,c
  8998  015D02  D002               	goto	l12887
  8999                           
  9000                           ; BSR set to: 1
  9001                           ;muta_messages.c: 35: return 0x05;
  9002  015D04  0E05               	movlw	5
  9003                           
  9004                           ; BSR set to: 1
  9005                           
  9006                           ; BSR set to: 1
  9007  015D06  0012               	return	
  9008  015D08                     l12887:
  9009                           
  9010                           ; BSR set to: 1
  9011                           ;muta_messages.c: 36: else if (value1==0 && value2==30)
  9012  015D08  0101               	movlb	1	; () banked
  9013  015D0A  518B               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  9014  015D0C  0101               	movlb	1	; () banked
  9015  015D0E  A4D8               	btfss	status,2,c
  9016  015D10  D007               	goto	l12897
  9017                           
  9018                           ; BSR set to: 1
  9019  015D12  0E1E               	movlw	30
  9020  015D14  0101               	movlb	1	; () banked
  9021  015D16  198A               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  9022  015D18  A4D8               	btfss	status,2,c
  9023  015D1A  D002               	goto	l12897
  9024                           
  9025                           ; BSR set to: 1
  9026                           ;muta_messages.c: 37: return 0x06;
  9027  015D1C  0E06               	movlw	6
  9028                           
  9029                           ; BSR set to: 1
  9030                           
  9031                           ; BSR set to: 1
  9032  015D1E  0012               	return	
  9033  015D20                     l12897:
  9034                           
  9035                           ; BSR set to: 1
  9036                           ;muta_messages.c: 38: else if (value1==0 && value2==15)
  9037  015D20  0101               	movlb	1	; () banked
  9038  015D22  518B               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  9039  015D24  0101               	movlb	1	; () banked
  9040  015D26  A4D8               	btfss	status,2,c
  9041  015D28  D007               	goto	l12907
  9042                           
  9043                           ; BSR set to: 1
  9044  015D2A  0E0F               	movlw	15
  9045  015D2C  0101               	movlb	1	; () banked
  9046  015D2E  198A               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  9047  015D30  A4D8               	btfss	status,2,c
  9048  015D32  D002               	goto	l12907
  9049                           
  9050                           ; BSR set to: 1
  9051                           ;muta_messages.c: 39: return 0x07;
  9052  015D34  0E07               	movlw	7
  9053                           
  9054                           ; BSR set to: 1
  9055                           
  9056                           ; BSR set to: 1
  9057  015D36  0012               	return	
  9058  015D38                     l12907:
  9059                           
  9060                           ; BSR set to: 1
  9061                           ;muta_messages.c: 40: else
  9062                           ;muta_messages.c: 41: return 0x07;
  9063  015D38  0E07               	movlw	7
  9064                           
  9065                           ; BSR set to: 1
  9066                           
  9067                           ; BSR set to: 1
  9068                           
  9069                           ; BSR set to: 1
  9070                           
  9071                           ; BSR set to: 1
  9072                           
  9073                           ; BSR set to: 1
  9074                           
  9075                           ; BSR set to: 1
  9076                           
  9077                           ; BSR set to: 1
  9078                           
  9079                           ; BSR set to: 1
  9080  015D3A  0012               	return	
  9081  015D3C                     __end_of_mW_ufixed16_to_dBm:
  9082                           	opt stack 0
  9083                           tblptru	equ	0xFF8
  9084                           tblptrh	equ	0xFF7
  9085                           tblptrl	equ	0xFF6
  9086                           tablat	equ	0xFF5
  9087                           prodh	equ	0xFF4
  9088                           prodl	equ	0xFF3
  9089                           postinc0	equ	0xFEE
  9090                           plusw0	equ	0xFEB
  9091                           wreg	equ	0xFE8
  9092                           indf1	equ	0xFE7
  9093                           postdec1	equ	0xFE5
  9094                           fsr1h	equ	0xFE2
  9095                           fsr1l	equ	0xFE1
  9096                           indf2	equ	0xFDF
  9097                           postinc2	equ	0xFDE
  9098                           postdec2	equ	0xFDD
  9099                           plusw2	equ	0xFDB
  9100                           fsr2h	equ	0xFDA
  9101                           fsr2l	equ	0xFD9
  9102                           status	equ	0xFD8
  9103                           
  9104 ;; *************** function _labelcmp *****************
  9105 ;; Defined at:
  9106 ;;		line 16 in file "../../muta/muta_messages.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  p1              2    0[BANK1 ] PTR unsigned char 
  9109 ;;		 -> m_var(10), 
  9110 ;;  p2              2    2[BANK1 ] PTR unsigned char 
  9111 ;;		 -> UPDATE_FREQUENCY_LABEL(4), POWER_LABEL(4), 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      unsigned char 
  9116 ;; Registers used:
  9117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9123 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9124 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9125 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9126 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9127 ;;Total ram usage:        8 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    9
  9130 ;; This function calls:
  9131 ;;		Nothing
  9132 ;; This function is called by:
  9133 ;;		_update_variable
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           	psect	text25
  9138  01602E                     __ptext25:
  9139                           	opt stack 0
  9140  01602E                     _labelcmp:
  9141                           	opt stack 19
  9142                           
  9143                           ;muta_messages.c: 18: return (*p1==*p2)&&(*(p1+1)==*(p2+1))&&(*(p1+2)==*(p2+2));
  9144                           
  9145                           ; BSR set to: 1
  9146                           ;incstack = 0
  9147  01602E  0E00               	movlw	0
  9148  016030  0101               	movlb	1	; () banked
  9149  016032  6F91               	movwf	_labelcmp$3774& (0+255),b
  9150                           
  9151                           ; BSR set to: 1
  9152  016034  C18A  FFD9         	movff	labelcmp@p1,fsr2l
  9153  016038  C18B  FFDA         	movff	labelcmp@p1+1,fsr2h
  9154  01603C  50DF               	movf	indf2,w,c
  9155  01603E  0101               	movlb	1	; () banked
  9156  016040  6F8E               	movwf	??_labelcmp& (0+255),b
  9157  016042  C18C  FFF6         	movff	labelcmp@p2,tblptrl
  9158  016046  C18D  FFF7         	movff	labelcmp@p2+1,tblptrh
  9159  01604A                     	if	0	;tblptru may be non-zero
  9160  01604A                     	endif
  9161  01604A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9162  01604A  0E00               	movlw	low (__mediumconst shr (0+16))
  9163  01604C  6EF8               	movwf	tblptru,c
  9164  01604E                     	endif
  9165  01604E  0008               	tblrd		*
  9166  016050  50F5               	movf	tablat,w,c
  9167  016052  0101               	movlb	1	; () banked
  9168  016054  198E               	xorwf	??_labelcmp& (0+255),w,b
  9169  016056  A4D8               	btfss	status,2,c
  9170  016058  D043               	goto	l1284
  9171                           
  9172                           ; BSR set to: 1
  9173  01605A  0101               	movlb	1	; () banked
  9174  01605C  EE20 F001          	lfsr	2,1
  9175  016060  518A               	movf	labelcmp@p1& (0+255),w,b
  9176  016062  26D9               	addwf	fsr2l,f,c
  9177  016064  518B               	movf	(labelcmp@p1+1)& (0+255),w,b
  9178  016066  22DA               	addwfc	fsr2h,f,c
  9179  016068  50DF               	movf	indf2,w,c
  9180  01606A  0101               	movlb	1	; () banked
  9181  01606C  6F8E               	movwf	??_labelcmp& (0+255),b
  9182  01606E  0E01               	movlw	1
  9183  016070  0101               	movlb	1	; () banked
  9184  016072  258C               	addwf	labelcmp@p2& (0+255),w,b
  9185  016074  0101               	movlb	1	; () banked
  9186  016076  6F8F               	movwf	(??_labelcmp+1)& (0+255),b
  9187  016078  0E00               	movlw	0
  9188  01607A  0101               	movlb	1	; () banked
  9189  01607C  218D               	addwfc	(labelcmp@p2+1)& (0+255),w,b
  9190  01607E  0101               	movlb	1	; () banked
  9191  016080  6F90               	movwf	(??_labelcmp+2)& (0+255),b
  9192  016082  C18F  FFF6         	movff	??_labelcmp+1,tblptrl
  9193  016086  C190  FFF7         	movff	??_labelcmp+2,tblptrh
  9194  01608A                     	if	0	;tblptru may be non-zero
  9195  01608A                     	endif
  9196  01608A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9197  01608A  0E00               	movlw	low (__mediumconst shr (0+16))
  9198  01608C  6EF8               	movwf	tblptru,c
  9199  01608E                     	endif
  9200  01608E  0008               	tblrd		*
  9201  016090  50F5               	movf	tablat,w,c
  9202  016092  0101               	movlb	1	; () banked
  9203  016094  198E               	xorwf	??_labelcmp& (0+255),w,b
  9204  016096  A4D8               	btfss	status,2,c
  9205  016098  D023               	goto	l1284
  9206                           
  9207                           ; BSR set to: 1
  9208  01609A  0101               	movlb	1	; () banked
  9209  01609C  EE20 F002          	lfsr	2,2
  9210  0160A0  518A               	movf	labelcmp@p1& (0+255),w,b
  9211  0160A2  26D9               	addwf	fsr2l,f,c
  9212  0160A4  518B               	movf	(labelcmp@p1+1)& (0+255),w,b
  9213  0160A6  22DA               	addwfc	fsr2h,f,c
  9214  0160A8  50DF               	movf	indf2,w,c
  9215  0160AA  0101               	movlb	1	; () banked
  9216  0160AC  6F8E               	movwf	??_labelcmp& (0+255),b
  9217  0160AE  0E02               	movlw	2
  9218  0160B0  0101               	movlb	1	; () banked
  9219  0160B2  258C               	addwf	labelcmp@p2& (0+255),w,b
  9220  0160B4  0101               	movlb	1	; () banked
  9221  0160B6  6F8F               	movwf	(??_labelcmp+1)& (0+255),b
  9222  0160B8  0E00               	movlw	0
  9223  0160BA  0101               	movlb	1	; () banked
  9224  0160BC  218D               	addwfc	(labelcmp@p2+1)& (0+255),w,b
  9225  0160BE  0101               	movlb	1	; () banked
  9226  0160C0  6F90               	movwf	(??_labelcmp+2)& (0+255),b
  9227  0160C2  C18F  FFF6         	movff	??_labelcmp+1,tblptrl
  9228  0160C6  C190  FFF7         	movff	??_labelcmp+2,tblptrh
  9229  0160CA                     	if	0	;tblptru may be non-zero
  9230  0160CA                     	endif
  9231  0160CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9232  0160CA  0E00               	movlw	low (__mediumconst shr (0+16))
  9233  0160CC  6EF8               	movwf	tblptru,c
  9234  0160CE                     	endif
  9235  0160CE  0008               	tblrd		*
  9236  0160D0  50F5               	movf	tablat,w,c
  9237  0160D2  0101               	movlb	1	; () banked
  9238  0160D4  198E               	xorwf	??_labelcmp& (0+255),w,b
  9239  0160D6  A4D8               	btfss	status,2,c
  9240  0160D8  D003               	goto	l1284
  9241                           
  9242                           ; BSR set to: 1
  9243  0160DA  0E01               	movlw	1
  9244  0160DC  0101               	movlb	1	; () banked
  9245  0160DE  6F91               	movwf	_labelcmp$3774& (0+255),b
  9246  0160E0                     l1284:
  9247                           
  9248                           ; BSR set to: 1
  9249  0160E0  0101               	movlb	1	; () banked
  9250  0160E2  5191               	movf	_labelcmp$3774& (0+255),w,b
  9251  0160E4  0012               	return	
  9252  0160E6                     __end_of_labelcmp:
  9253                           	opt stack 0
  9254                           tblptru	equ	0xFF8
  9255                           tblptrh	equ	0xFF7
  9256                           tblptrl	equ	0xFF6
  9257                           tablat	equ	0xFF5
  9258                           prodh	equ	0xFF4
  9259                           prodl	equ	0xFF3
  9260                           postinc0	equ	0xFEE
  9261                           plusw0	equ	0xFEB
  9262                           wreg	equ	0xFE8
  9263                           indf1	equ	0xFE7
  9264                           postdec1	equ	0xFE5
  9265                           fsr1h	equ	0xFE2
  9266                           fsr1l	equ	0xFE1
  9267                           indf2	equ	0xFDF
  9268                           postinc2	equ	0xFDE
  9269                           postdec2	equ	0xFDD
  9270                           plusw2	equ	0xFDB
  9271                           fsr2h	equ	0xFDA
  9272                           fsr2l	equ	0xFD9
  9273                           status	equ	0xFD8
  9274                           
  9275 ;; *************** function _timer_reset *****************
  9276 ;; Defined at:
  9277 ;;		line 702 in file "src/main.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;		None
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;		None
  9282 ;; Return value:  Size  Location     Type
  9283 ;;		None               void
  9284 ;; Registers used:
  9285 ;;		wreg, status,2
  9286 ;; Tracked objects:
  9287 ;;		On entry : 0/0
  9288 ;;		On exit  : 0/0
  9289 ;;		Unchanged: 0/0
  9290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9295 ;;Total ram usage:        0 bytes
  9296 ;; Hardware stack levels used:    1
  9297 ;; Hardware stack levels required when called:    9
  9298 ;; This function calls:
  9299 ;;		Nothing
  9300 ;; This function is called by:
  9301 ;;		_main
  9302 ;;		_process_update_answer
  9303 ;;		_sleep_and_reset
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text26
  9308  016F80                     __ptext26:
  9309                           	opt stack 0
  9310  016F80                     _timer_reset:
  9311                           	opt stack 21
  9312                           
  9313                           ;main.c: 704: if (m_update_frequency == 0)
  9314                           
  9315                           ; BSR set to: 1
  9316                           ;incstack = 0
  9317  016F80  0101               	movlb	1	; () banked
  9318  016F82  51FF               	movf	_m_update_frequency& (0+255),w,b	;volatile
  9319  016F84  A4D8               	btfss	status,2,c
  9320  016F86  D003               	goto	l1217
  9321                           
  9322                           ; BSR set to: 1
  9323                           ;main.c: 705: timer_count = 1;
  9324  016F88  0E01               	movlw	1
  9325  016F8A  6E48               	movwf	_timer_count,c	;volatile
  9326  016F8C  D002               	goto	l13355
  9327  016F8E                     l1217:
  9328                           
  9329                           ; BSR set to: 1
  9330                           ;main.c: 706: else
  9331                           ;main.c: 707: timer_count = m_update_frequency;
  9332  016F8E  C1FF  F048         	movff	_m_update_frequency,_timer_count	;volatile
  9333  016F92                     l13355:
  9334                           
  9335                           ; BSR set to: 1
  9336                           ;main.c: 708: timer_flag = 0;
  9337  016F92  0E00               	movlw	0
  9338  016F94  0101               	movlb	1	; () banked
  9339  016F96  6F4D               	movwf	_timer_flag& (0+255),b	;volatile
  9340                           
  9341                           ; BSR set to: 1
  9342  016F98  0012               	return		;funcret
  9343  016F9A                     __end_of_timer_reset:
  9344                           	opt stack 0
  9345                           tblptru	equ	0xFF8
  9346                           tblptrh	equ	0xFF7
  9347                           tblptrl	equ	0xFF6
  9348                           tablat	equ	0xFF5
  9349                           prodh	equ	0xFF4
  9350                           prodl	equ	0xFF3
  9351                           postinc0	equ	0xFEE
  9352                           plusw0	equ	0xFEB
  9353                           wreg	equ	0xFE8
  9354                           indf1	equ	0xFE7
  9355                           postdec1	equ	0xFE5
  9356                           fsr1h	equ	0xFE2
  9357                           fsr1l	equ	0xFE1
  9358                           indf2	equ	0xFDF
  9359                           postinc2	equ	0xFDE
  9360                           postdec2	equ	0xFDD
  9361                           plusw2	equ	0xFDB
  9362                           fsr2h	equ	0xFDA
  9363                           fsr2l	equ	0xFD9
  9364                           status	equ	0xFD8
  9365                           
  9366 ;; *************** function _send_writables_update *****************
  9367 ;; Defined at:
  9368 ;;		line 566 in file "src/main.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;		None
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;  tmp             2    0        unsigned int 
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  1    wreg      unsigned char 
  9375 ;; Registers used:
  9376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9377 ;; Tracked objects:
  9378 ;;		On entry : 0/0
  9379 ;;		On exit  : 0/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9384 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9385 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;Total ram usage:        1 bytes
  9387 ;; Hardware stack levels used:    1
  9388 ;; Hardware stack levels required when called:   18
  9389 ;; This function calls:
  9390 ;;		_dBm_to_mW_ufixed16
  9391 ;;		_do_UPDATE
  9392 ;;		_encode_ufixed16_variable
  9393 ;;		_encode_uint8_variable
  9394 ;;		_memcpy
  9395 ;; This function is called by:
  9396 ;;		_process_update_answer
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           	psect	text27
  9401  014DD0                     __ptext27:
  9402                           	opt stack 0
  9403  014DD0                     _send_writables_update:
  9404                           	opt stack 11
  9405                           
  9406                           ;main.c: 568: uint16_t tmp;
  9407                           ;main.c: 569: p_buffer = m_buffer;
  9408                           
  9409                           ; BSR set to: 1
  9410                           ;incstack = 0
  9411  014DD0  0EE0               	movlw	low _m_buffer
  9412  014DD2  0101               	movlb	1	; () banked
  9413  014DD4  6F3A               	movwf	_p_buffer& (0+255),b
  9414  014DD6  0E02               	movlw	high _m_buffer
  9415  014DD8  0101               	movlb	1	; () banked
  9416  014DDA  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  9417                           
  9418                           ; BSR set to: 1
  9419                           ;main.c: 571: if (Pwr_updated)
  9420  014DDC  0100               	movlb	0	; () banked
  9421  014DDE  51B7               	movf	_Pwr_updated& (0+255),w,b
  9422  014DE0  B4D8               	btfsc	status,2,c
  9423  014DE2  D046               	goto	l13477
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;main.c: 572: {
  9427                           ;main.c: 574: memcpy(m_var.label, POWER_LABEL, 3);
  9428  014DE4  0E79               	movlw	low _m_var
  9429  014DE6  0101               	movlb	1	; () banked
  9430  014DE8  6F8A               	movwf	memcpy@d1& (0+255),b
  9431  014DEA  0E01               	movlw	high _m_var
  9432  014DEC  0101               	movlb	1	; () banked
  9433  014DEE  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  9434  014DF0  0EEB               	movlw	low _POWER_LABEL
  9435  014DF2  0101               	movlb	1	; () banked
  9436  014DF4  6F8C               	movwf	memcpy@s1& (0+255),b
  9437  014DF6  0EFF               	movlw	high _POWER_LABEL
  9438  014DF8  0101               	movlb	1	; () banked
  9439  014DFA  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  9440  014DFC  0E00               	movlw	0
  9441  014DFE  0101               	movlb	1	; () banked
  9442  014E00  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  9443  014E02  0E03               	movlw	3
  9444  014E04  6F8E               	movwf	memcpy@n& (0+255),b
  9445  014E06  EC2A  F0B5         	call	_memcpy	;wreg free
  9446                           
  9447                           ;main.c: 575: m_var.unit = 8;
  9448  014E0A  0E08               	movlw	8
  9449  014E0C  0101               	movlb	1	; () banked
  9450  014E0E  6F7F               	movwf	(_m_var+6)& (0+255),b
  9451                           
  9452                           ; BSR set to: 1
  9453                           ;main.c: 576: dBm_to_mW_ufixed16(m_power, &(m_var.value_byte1), &(m_var.value_byte2));
  9454  014E10  0E7D               	movlw	low (_m_var+4)
  9455  014E12  0101               	movlb	1	; () banked
  9456  014E14  6F8A               	movwf	dBm_to_mW_ufixed16@value1& (0+255),b
  9457  014E16  0E01               	movlw	high (_m_var+4)
  9458  014E18  0101               	movlb	1	; () banked
  9459  014E1A  6F8B               	movwf	(dBm_to_mW_ufixed16@value1+1)& (0+255),b
  9460  014E1C  0E7E               	movlw	low (_m_var+5)
  9461  014E1E  0101               	movlb	1	; () banked
  9462  014E20  6F8C               	movwf	dBm_to_mW_ufixed16@value2& (0+255),b
  9463  014E22  0E01               	movlw	high (_m_var+5)
  9464  014E24  0101               	movlb	1	; () banked
  9465  014E26  6F8D               	movwf	(dBm_to_mW_ufixed16@value2+1)& (0+255),b
  9466  014E28  0101               	movlb	1	; () banked
  9467  014E2A  514A               	movf	_m_power& (0+255),w,b
  9468  014E2C  EC20  F0A8         	call	_dBm_to_mW_ufixed16
  9469                           
  9470                           ;main.c: 577: m_var.writable = 1;
  9471  014E30  0E01               	movlw	1
  9472  014E32  0101               	movlb	1	; () banked
  9473  014E34  6F80               	movwf	(_m_var+7)& (0+255),b
  9474                           
  9475                           ; BSR set to: 1
  9476                           ;main.c: 578: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  9477  014E36  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  9478  014E3A  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  9479  014E3E  EE21  F079         	lfsr	2,_m_var
  9480  014E42  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  9481  014E46  0E09               	movlw	9
  9482  014E48                     u15901:
  9483  014E48  CFDB FFEB          	movff	plusw2,plusw0
  9484  014E4C  06E8               	decf	wreg,f,c
  9485  014E4E  E2FC               	bc	u15901
  9486  014E50  EC5D  F0AF         	call	_encode_ufixed16_variable	;wreg free
  9487  014E54  0101               	movlb	1	; () banked
  9488  014E56  6FFB               	movwf	??_send_writables_update& (0+255),b
  9489  014E58  0101               	movlb	1	; () banked
  9490  014E5A  51FB               	movf	??_send_writables_update& (0+255),w,b
  9491  014E5C  0D01               	mullw	1
  9492  014E5E  50F3               	movf	prodl,w,c
  9493  014E60  0101               	movlb	1	; () banked
  9494  014E62  273A               	addwf	_p_buffer& (0+255),f,b
  9495  014E64  50F4               	movf	prodh,w,c
  9496  014E66  0101               	movlb	1	; () banked
  9497  014E68  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  9498                           
  9499                           ; BSR set to: 1
  9500                           ;main.c: 579: Pwr_updated = 0;
  9501  014E6A  0E00               	movlw	0
  9502  014E6C  0100               	movlb	0	; () banked
  9503  014E6E  6FB7               	movwf	_Pwr_updated& (0+255),b
  9504  014E70                     l13477:
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;main.c: 580: }
  9508                           ;main.c: 581: if (UpF_updated)
  9509  014E70  0100               	movlb	0	; () banked
  9510  014E72  51BB               	movf	_UpF_updated& (0+255),w,b
  9511  014E74  B4D8               	btfsc	status,2,c
  9512  014E76  D038               	goto	l13491
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;main.c: 582: {
  9516                           ;main.c: 584: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  9517  014E78  0E79               	movlw	low _m_var
  9518  014E7A  0101               	movlb	1	; () banked
  9519  014E7C  6F8A               	movwf	memcpy@d1& (0+255),b
  9520  014E7E  0E01               	movlw	high _m_var
  9521  014E80  0101               	movlb	1	; () banked
  9522  014E82  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  9523  014E84  0EF7               	movlw	low _UPDATE_FREQUENCY_LABEL
  9524  014E86  0101               	movlb	1	; () banked
  9525  014E88  6F8C               	movwf	memcpy@s1& (0+255),b
  9526  014E8A  0EFF               	movlw	high _UPDATE_FREQUENCY_LABEL
  9527  014E8C  0101               	movlb	1	; () banked
  9528  014E8E  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  9529  014E90  0E00               	movlw	0
  9530  014E92  0101               	movlb	1	; () banked
  9531  014E94  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  9532  014E96  0E03               	movlw	3
  9533  014E98  6F8E               	movwf	memcpy@n& (0+255),b
  9534  014E9A  EC2A  F0B5         	call	_memcpy	;wreg free
  9535                           
  9536                           ;main.c: 585: m_var.unit = 4;
  9537  014E9E  0E04               	movlw	4
  9538  014EA0  0101               	movlb	1	; () banked
  9539  014EA2  6F7F               	movwf	(_m_var+6)& (0+255),b
  9540                           
  9541                           ; BSR set to: 1
  9542                           ;main.c: 586: m_var.value_byte1 = m_update_frequency;
  9543  014EA4  C1FF  F17D         	movff	_m_update_frequency,_m_var+4	;volatile
  9544                           
  9545                           ; BSR set to: 1
  9546                           ;main.c: 587: m_var.writable = 1;
  9547  014EA8  0E01               	movlw	1
  9548  014EAA  0101               	movlb	1	; () banked
  9549  014EAC  6F80               	movwf	(_m_var+7)& (0+255),b
  9550                           
  9551                           ; BSR set to: 1
  9552                           ;main.c: 588: p_buffer += encode_uint8_variable(p_buffer, m_var);
  9553  014EAE  C13A  F18A         	movff	_p_buffer,encode_uint8_variable@buffer
  9554  014EB2  C13B  F18B         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  9555  014EB6  EE21  F079         	lfsr	2,_m_var
  9556  014EBA  EE01  F08C         	lfsr	0,encode_uint8_variable@var
  9557  014EBE  0E09               	movlw	9
  9558  014EC0                     u15921:
  9559  014EC0  CFDB FFEB          	movff	plusw2,plusw0
  9560  014EC4  06E8               	decf	wreg,f,c
  9561  014EC6  E2FC               	bc	u15921
  9562  014EC8  EC1F  F0B1         	call	_encode_uint8_variable	;wreg free
  9563  014ECC  0101               	movlb	1	; () banked
  9564  014ECE  6FFB               	movwf	??_send_writables_update& (0+255),b
  9565  014ED0  0101               	movlb	1	; () banked
  9566  014ED2  51FB               	movf	??_send_writables_update& (0+255),w,b
  9567  014ED4  0D01               	mullw	1
  9568  014ED6  50F3               	movf	prodl,w,c
  9569  014ED8  0101               	movlb	1	; () banked
  9570  014EDA  273A               	addwf	_p_buffer& (0+255),f,b
  9571  014EDC  50F4               	movf	prodh,w,c
  9572  014EDE  0101               	movlb	1	; () banked
  9573  014EE0  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  9574                           
  9575                           ; BSR set to: 1
  9576                           ;main.c: 589: UpF_updated = 0;
  9577  014EE2  0E00               	movlw	0
  9578  014EE4  0100               	movlb	0	; () banked
  9579  014EE6  6FBB               	movwf	_UpF_updated& (0+255),b
  9580  014EE8                     l13491:
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;main.c: 590: }
  9584                           ;main.c: 592: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  9585  014EE8  0EE0               	movlw	low _m_buffer
  9586  014EEA  0103               	movlb	3	; () banked
  9587  014EEC  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  9588  014EEE  0E02               	movlw	high _m_buffer
  9589  014EF0  0103               	movlb	3	; () banked
  9590  014EF2  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  9591  014EF4  0EE0               	movlw	_m_buffer& (0+255)
  9592  014EF6  0800               	sublw	0
  9593  014EF8  0101               	movlb	1	; () banked
  9594  014EFA  253A               	addwf	_p_buffer& (0+255),w,b
  9595  014EFC  0103               	movlb	3	; () banked
  9596  014EFE  6FE9               	movwf	do_UPDATE@size& (0+255),b
  9597  014F00  0E01               	movlw	1
  9598  014F02  0103               	movlb	3	; () banked
  9599  014F04  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  9600  014F06  EC2F  F0A2         	call	_do_UPDATE	;wreg free
  9601  014F0A  0012               	return	
  9602  014F0C                     __end_of_send_writables_update:
  9603                           	opt stack 0
  9604                           tblptru	equ	0xFF8
  9605                           tblptrh	equ	0xFF7
  9606                           tblptrl	equ	0xFF6
  9607                           tablat	equ	0xFF5
  9608                           prodh	equ	0xFF4
  9609                           prodl	equ	0xFF3
  9610                           postinc0	equ	0xFEE
  9611                           plusw0	equ	0xFEB
  9612                           wreg	equ	0xFE8
  9613                           indf1	equ	0xFE7
  9614                           postdec1	equ	0xFE5
  9615                           fsr1h	equ	0xFE2
  9616                           fsr1l	equ	0xFE1
  9617                           indf2	equ	0xFDF
  9618                           postinc2	equ	0xFDE
  9619                           postdec2	equ	0xFDD
  9620                           plusw2	equ	0xFDB
  9621                           fsr2h	equ	0xFDA
  9622                           fsr2l	equ	0xFD9
  9623                           status	equ	0xFD8
  9624                           
  9625 ;; *************** function _encode_uint8_variable *****************
  9626 ;; Defined at:
  9627 ;;		line 118 in file "../../muta/muta_messages.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
  9630 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
  9631 ;;  var            10    2[BANK1 ] struct .
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;  m_writable      1   14[BANK1 ] unsigned char 
  9634 ;;  m_signed        1   13[BANK1 ] unsigned char 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      unsigned char 
  9637 ;; Registers used:
  9638 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9644 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9645 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9646 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9647 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9648 ;;Total ram usage:       15 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    9
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_send_initial_update
  9655 ;;		_send_writables_update
  9656 ;;		_send_periodical_update
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text28
  9661  01623E                     __ptext28:
  9662                           	opt stack 0
  9663  01623E                     _encode_uint8_variable:
  9664                           	opt stack 20
  9665                           
  9666                           ;muta_messages.c: 120: *(buffer++) = var.label[0];
  9667                           
  9668                           ;incstack = 0
  9669  01623E  C18A  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9670  016242  C18B  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9671  016246  C18C  FFDF         	movff	encode_uint8_variable@var,indf2
  9672  01624A  0101               	movlb	1	; () banked
  9673  01624C  4B8A               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9674  01624E  2B8B               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9675                           
  9676                           ; BSR set to: 1
  9677                           ;muta_messages.c: 121: *(buffer++) = var.label[1];
  9678  016250  C18A  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9679  016254  C18B  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9680  016258  C18D  FFDF         	movff	encode_uint8_variable@var+1,indf2
  9681  01625C  0101               	movlb	1	; () banked
  9682  01625E  4B8A               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9683  016260  2B8B               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9684                           
  9685                           ; BSR set to: 1
  9686                           ;muta_messages.c: 122: *(buffer++) = var.label[2];
  9687  016262  C18A  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9688  016266  C18B  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9689  01626A  C18E  FFDF         	movff	encode_uint8_variable@var+2,indf2
  9690                           
  9691                           ; BSR set to: 1
  9692  01626E  0101               	movlb	1	; () banked
  9693  016270  4B8A               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9694  016272  2B8B               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9695                           
  9696                           ; BSR set to: 1
  9697                           ;muta_messages.c: 123: uint8_t m_signed = 0;
  9698  016274  0E00               	movlw	0
  9699  016276  0101               	movlb	1	; () banked
  9700  016278  6F97               	movwf	encode_uint8_variable@m_signed& (0+255),b
  9701                           
  9702                           ; BSR set to: 1
  9703                           ;muta_messages.c: 124: uint8_t m_writable = 0;
  9704  01627A  0E00               	movlw	0
  9705  01627C  0101               	movlb	1	; () banked
  9706  01627E  6F98               	movwf	encode_uint8_variable@m_writable& (0+255),b
  9707                           
  9708                           ; BSR set to: 1
  9709                           ;muta_messages.c: 125: if (var._signed)
  9710  016280  0101               	movlb	1	; () banked
  9711  016282  5194               	movf	(encode_uint8_variable@var+8)& (0+255),w,b
  9712  016284  B4D8               	btfsc	status,2,c
  9713  016286  D003               	goto	l1335
  9714                           
  9715                           ; BSR set to: 1
  9716                           ;muta_messages.c: 126: { m_signed = 1; }
  9717  016288  0E01               	movlw	1
  9718  01628A  0101               	movlb	1	; () banked
  9719  01628C  6F97               	movwf	encode_uint8_variable@m_signed& (0+255),b
  9720  01628E                     l1335:
  9721                           
  9722                           ; BSR set to: 1
  9723                           ;muta_messages.c: 127: if (var.writable)
  9724  01628E  0101               	movlb	1	; () banked
  9725  016290  5193               	movf	(encode_uint8_variable@var+7)& (0+255),w,b
  9726  016292  B4D8               	btfsc	status,2,c
  9727  016294  D003               	goto	l12703
  9728                           
  9729                           ; BSR set to: 1
  9730                           ;muta_messages.c: 128: { m_writable = 1; }
  9731  016296  0E01               	movlw	1
  9732  016298  0101               	movlb	1	; () banked
  9733  01629A  6F98               	movwf	encode_uint8_variable@m_writable& (0+255),b
  9734  01629C                     l12703:
  9735                           
  9736                           ; BSR set to: 1
  9737                           ;muta_messages.c: 129: var.type = (0 << 6)+ (m_signed << 5) + (m_writable << 4) + var.un
      +                          it;
  9738  01629C  C198  F196         	movff	encode_uint8_variable@m_writable,??_encode_uint8_variable
  9739  0162A0  0101               	movlb	1	; () banked
  9740  0162A2  3B96               	swapf	??_encode_uint8_variable& (0+255),f,b
  9741  0162A4  0EF0               	movlw	240
  9742  0162A6  1796               	andwf	??_encode_uint8_variable& (0+255),f,b
  9743  0162A8  0101               	movlb	1	; () banked
  9744  0162AA  3997               	swapf	encode_uint8_variable@m_signed& (0+255),w,b
  9745  0162AC  46E8               	rlncf	wreg,f,c
  9746  0162AE  0BE0               	andlw	224
  9747  0162B0  0101               	movlb	1	; () banked
  9748  0162B2  2596               	addwf	??_encode_uint8_variable& (0+255),w,b
  9749  0162B4  0101               	movlb	1	; () banked
  9750  0162B6  2592               	addwf	(encode_uint8_variable@var+6)& (0+255),w,b
  9751  0162B8  0101               	movlb	1	; () banked
  9752  0162BA  6F8F               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9753                           
  9754                           ; BSR set to: 1
  9755                           ;muta_messages.c: 130: *(buffer++) = var.type;
  9756  0162BC  C18A  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9757  0162C0  C18B  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9758  0162C4  C18F  FFDF         	movff	encode_uint8_variable@var+3,indf2
  9759                           
  9760                           ; BSR set to: 1
  9761  0162C8  0101               	movlb	1	; () banked
  9762  0162CA  4B8A               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9763  0162CC  2B8B               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9764                           
  9765                           ; BSR set to: 1
  9766                           ;muta_messages.c: 131: *(buffer++) = var.value_byte1;
  9767  0162CE  C18A  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9768  0162D2  C18B  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9769  0162D6  C190  FFDF         	movff	encode_uint8_variable@var+4,indf2
  9770                           
  9771                           ; BSR set to: 1
  9772  0162DA  0101               	movlb	1	; () banked
  9773  0162DC  4B8A               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9774  0162DE  2B8B               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9775                           
  9776                           ; BSR set to: 1
  9777                           ;muta_messages.c: 132: return 5;
  9778  0162E0  0E05               	movlw	5
  9779  0162E2  0012               	return	
  9780  0162E4                     __end_of_encode_uint8_variable:
  9781                           	opt stack 0
  9782                           tblptru	equ	0xFF8
  9783                           tblptrh	equ	0xFF7
  9784                           tblptrl	equ	0xFF6
  9785                           tablat	equ	0xFF5
  9786                           prodh	equ	0xFF4
  9787                           prodl	equ	0xFF3
  9788                           postinc0	equ	0xFEE
  9789                           plusw0	equ	0xFEB
  9790                           wreg	equ	0xFE8
  9791                           indf1	equ	0xFE7
  9792                           postdec1	equ	0xFE5
  9793                           fsr1h	equ	0xFE2
  9794                           fsr1l	equ	0xFE1
  9795                           indf2	equ	0xFDF
  9796                           postinc2	equ	0xFDE
  9797                           postdec2	equ	0xFDD
  9798                           plusw2	equ	0xFDB
  9799                           fsr2h	equ	0xFDA
  9800                           fsr2l	equ	0xFD9
  9801                           status	equ	0xFD8
  9802                           
  9803 ;; *************** function _encode_ufixed16_variable *****************
  9804 ;; Defined at:
  9805 ;;		line 153 in file "../../muta/muta_messages.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
  9808 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
  9809 ;;  var            10    2[BANK1 ] struct .
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;  m_writable      1   14[BANK1 ] unsigned char 
  9812 ;;  m_signed        1   13[BANK1 ] unsigned char 
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  1    wreg      unsigned char 
  9815 ;; Registers used:
  9816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9822 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9823 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9824 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9825 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9826 ;;Total ram usage:       15 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:    9
  9829 ;; This function calls:
  9830 ;;		Nothing
  9831 ;; This function is called by:
  9832 ;;		_send_initial_update
  9833 ;;		_send_writables_update
  9834 ;;		_send_periodical_update
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text29
  9839  015EBA                     __ptext29:
  9840                           	opt stack 0
  9841  015EBA                     _encode_ufixed16_variable:
  9842                           	opt stack 20
  9843                           
  9844                           ;muta_messages.c: 155: *(buffer++) = var.label[0];
  9845                           
  9846                           ; BSR set to: 1
  9847                           ;incstack = 0
  9848  015EBA  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9849  015EBE  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9850  015EC2  C18C  FFDF         	movff	encode_ufixed16_variable@var,indf2
  9851  015EC6  0101               	movlb	1	; () banked
  9852  015EC8  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9853  015ECA  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9854                           
  9855                           ; BSR set to: 1
  9856                           ;muta_messages.c: 156: *(buffer++) = var.label[1];
  9857  015ECC  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9858  015ED0  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9859  015ED4  C18D  FFDF         	movff	encode_ufixed16_variable@var+1,indf2
  9860  015ED8  0101               	movlb	1	; () banked
  9861  015EDA  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9862  015EDC  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9863                           
  9864                           ; BSR set to: 1
  9865                           ;muta_messages.c: 157: *(buffer++) = var.label[2];
  9866  015EDE  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9867  015EE2  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9868  015EE6  C18E  FFDF         	movff	encode_ufixed16_variable@var+2,indf2
  9869                           
  9870                           ; BSR set to: 1
  9871  015EEA  0101               	movlb	1	; () banked
  9872  015EEC  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9873  015EEE  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9874                           
  9875                           ; BSR set to: 1
  9876                           ;muta_messages.c: 158: uint8_t m_signed = 0;
  9877  015EF0  0E00               	movlw	0
  9878  015EF2  0101               	movlb	1	; () banked
  9879  015EF4  6F97               	movwf	encode_ufixed16_variable@m_signed& (0+255),b
  9880                           
  9881                           ; BSR set to: 1
  9882                           ;muta_messages.c: 159: uint8_t m_writable = 0;
  9883  015EF6  0E00               	movlw	0
  9884  015EF8  0101               	movlb	1	; () banked
  9885  015EFA  6F98               	movwf	encode_ufixed16_variable@m_writable& (0+255),b
  9886                           
  9887                           ; BSR set to: 1
  9888                           ;muta_messages.c: 160: if (var._signed)
  9889  015EFC  0101               	movlb	1	; () banked
  9890  015EFE  5194               	movf	(encode_ufixed16_variable@var+8)& (0+255),w,b
  9891  015F00  B4D8               	btfsc	status,2,c
  9892  015F02  D003               	goto	l1345
  9893                           
  9894                           ; BSR set to: 1
  9895                           ;muta_messages.c: 161: m_signed = 1;
  9896  015F04  0E01               	movlw	1
  9897  015F06  0101               	movlb	1	; () banked
  9898  015F08  6F97               	movwf	encode_ufixed16_variable@m_signed& (0+255),b
  9899  015F0A                     l1345:
  9900                           
  9901                           ; BSR set to: 1
  9902                           ;muta_messages.c: 162: if (var.writable)
  9903  015F0A  0101               	movlb	1	; () banked
  9904  015F0C  5193               	movf	(encode_ufixed16_variable@var+7)& (0+255),w,b
  9905  015F0E  B4D8               	btfsc	status,2,c
  9906  015F10  D003               	goto	l12665
  9907                           
  9908                           ; BSR set to: 1
  9909                           ;muta_messages.c: 163: m_writable = 1;
  9910  015F12  0E01               	movlw	1
  9911  015F14  0101               	movlb	1	; () banked
  9912  015F16  6F98               	movwf	encode_ufixed16_variable@m_writable& (0+255),b
  9913  015F18                     l12665:
  9914                           
  9915                           ; BSR set to: 1
  9916                           ;muta_messages.c: 164: var.type = (2 << 6)+ (m_signed << 5) + (m_writable << 4) + var.un
      +                          it;
  9917  015F18  C198  F196         	movff	encode_ufixed16_variable@m_writable,??_encode_ufixed16_variable
  9918  015F1C  0101               	movlb	1	; () banked
  9919  015F1E  3B96               	swapf	??_encode_ufixed16_variable& (0+255),f,b
  9920  015F20  0EF0               	movlw	240
  9921  015F22  1796               	andwf	??_encode_ufixed16_variable& (0+255),f,b
  9922  015F24  0101               	movlb	1	; () banked
  9923  015F26  3997               	swapf	encode_ufixed16_variable@m_signed& (0+255),w,b
  9924  015F28  46E8               	rlncf	wreg,f,c
  9925  015F2A  0BE0               	andlw	224
  9926  015F2C  0101               	movlb	1	; () banked
  9927  015F2E  2596               	addwf	??_encode_ufixed16_variable& (0+255),w,b
  9928  015F30  0101               	movlb	1	; () banked
  9929  015F32  2592               	addwf	(encode_ufixed16_variable@var+6)& (0+255),w,b
  9930  015F34  0F80               	addlw	128
  9931  015F36  0101               	movlb	1	; () banked
  9932  015F38  6F8F               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
  9933                           
  9934                           ; BSR set to: 1
  9935                           ;muta_messages.c: 165: *(buffer++) = var.type;
  9936  015F3A  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9937  015F3E  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9938  015F42  C18F  FFDF         	movff	encode_ufixed16_variable@var+3,indf2
  9939                           
  9940                           ; BSR set to: 1
  9941  015F46  0101               	movlb	1	; () banked
  9942  015F48  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9943  015F4A  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9944                           
  9945                           ; BSR set to: 1
  9946                           ;muta_messages.c: 166: *(buffer++) = var.value_byte2;
  9947  015F4C  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9948  015F50  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9949  015F54  C191  FFDF         	movff	encode_ufixed16_variable@var+5,indf2
  9950                           
  9951                           ; BSR set to: 1
  9952  015F58  0101               	movlb	1	; () banked
  9953  015F5A  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9954  015F5C  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9955                           
  9956                           ; BSR set to: 1
  9957                           ;muta_messages.c: 167: *(buffer++) = var.value_byte1;
  9958  015F5E  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9959  015F62  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9960  015F66  C190  FFDF         	movff	encode_ufixed16_variable@var+4,indf2
  9961                           
  9962                           ; BSR set to: 1
  9963  015F6A  0101               	movlb	1	; () banked
  9964  015F6C  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9965  015F6E  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9966                           
  9967                           ; BSR set to: 1
  9968                           ;muta_messages.c: 168: return 6;
  9969  015F70  0E06               	movlw	6
  9970  015F72  0012               	return	
  9971  015F74                     __end_of_encode_ufixed16_variable:
  9972                           	opt stack 0
  9973                           tblptru	equ	0xFF8
  9974                           tblptrh	equ	0xFF7
  9975                           tblptrl	equ	0xFF6
  9976                           tablat	equ	0xFF5
  9977                           prodh	equ	0xFF4
  9978                           prodl	equ	0xFF3
  9979                           postinc0	equ	0xFEE
  9980                           plusw0	equ	0xFEB
  9981                           wreg	equ	0xFE8
  9982                           indf1	equ	0xFE7
  9983                           postdec1	equ	0xFE5
  9984                           fsr1h	equ	0xFE2
  9985                           fsr1l	equ	0xFE1
  9986                           indf2	equ	0xFDF
  9987                           postinc2	equ	0xFDE
  9988                           postdec2	equ	0xFDD
  9989                           plusw2	equ	0xFDB
  9990                           fsr2h	equ	0xFDA
  9991                           fsr2l	equ	0xFD9
  9992                           status	equ	0xFD8
  9993                           
  9994 ;; *************** function _do_UPDATE *****************
  9995 ;; Defined at:
  9996 ;;		line 413 in file "../../muta/muta_messages.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  p_buff          2   19[BANK3 ] PTR unsigned char 
  9999 ;;		 -> m_buffer(32), 
 10000 ;;  size            1   21[BANK3 ] unsigned char 
 10001 ;;  ack_required    1   22[BANK3 ] unsigned char 
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;  i               2   25[BANK3 ] unsigned int 
 10004 ;;  shortaddress    2   23[BANK3 ] unsigned char [2]
 10005 ;;  result          1   27[BANK3 ] unsigned char 
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  1    wreg      unsigned char 
 10008 ;; Registers used:
 10009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10015 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
 10016 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0
 10017 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10018 ;;      Totals:         0       0       1       0       9       0       0       0       0       0       0       0       
      +0       0       0       0
 10019 ;;Total ram usage:       10 bytes
 10020 ;; Hardware stack levels used:    1
 10021 ;; Hardware stack levels required when called:   17
 10022 ;; This function calls:
 10023 ;;		_MiApp_DiscardMessage
 10024 ;;		_MiApp_MessageAvailable
 10025 ;;		_MiApp_UnicastAddress
 10026 ;;		_memcpy
 10027 ;; This function is called by:
 10028 ;;		_send_initial_update
 10029 ;;		_send_writables_update
 10030 ;;		_send_periodical_update
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text30
 10035  01445E                     __ptext30:
 10036                           	opt stack 0
 10037  01445E                     _do_UPDATE:
 10038                           	opt stack 12
 10039                           
 10040                           ;muta_messages.c: 415: uint8_t shortaddress[2] = { 0x00, 0x00 };
 10041                           
 10042                           ; BSR set to: 1
 10043                           ;incstack = 0
 10044  01445E  C140  F3EB         	movff	do_UPDATE@F10256,do_UPDATE@shortaddress
 10045  014462  C141  F3EC         	movff	do_UPDATE@F10256+1,do_UPDATE@shortaddress+1
 10046                           
 10047                           ;muta_messages.c: 416: {TxData = 11;};
 10048  014466  0E0B               	movlw	11
 10049  014468  0101               	movlb	1	; () banked
 10050  01446A  6F46               	movwf	_TxData& (0+255),b
 10051                           
 10052                           ; BSR set to: 1
 10053                           ;muta_messages.c: 417: TxBuffer[TxData++] = 04;
 10054  01446C  0101               	movlb	1	; () banked
 10055  01446E  5146               	movf	_TxData& (0+255),w,b
 10056  014470  0D01               	mullw	1
 10057  014472  0E4E               	movlw	low _TxBuffer
 10058  014474  24F3               	addwf	prodl,w,c
 10059  014476  6ED9               	movwf	fsr2l,c
 10060  014478  0E01               	movlw	high _TxBuffer
 10061  01447A  20F4               	addwfc	prodh,w,c
 10062  01447C  6EDA               	movwf	fsr2h,c
 10063  01447E  0E04               	movlw	4
 10064  014480  6EDF               	movwf	indf2,c
 10065                           
 10066                           ; BSR set to: 1
 10067  014482  0101               	movlb	1	; () banked
 10068  014484  2B46               	incf	_TxData& (0+255),f,b
 10069                           
 10070                           ; BSR set to: 1
 10071                           ;muta_messages.c: 418: if (ack_required)
 10072  014486  0103               	movlb	3	; () banked
 10073  014488  51EA               	movf	do_UPDATE@ack_required& (0+255),w,b
 10074  01448A  0103               	movlb	3	; () banked
 10075  01448C  B4D8               	btfsc	status,2,c
 10076  01448E  D00E               	goto	l12731
 10077                           
 10078                           ; BSR set to: 3
 10079                           ;muta_messages.c: 419: TxBuffer[TxData++] = 0xff;
 10080  014490  0101               	movlb	1	; () banked
 10081  014492  5146               	movf	_TxData& (0+255),w,b
 10082  014494  0D01               	mullw	1
 10083  014496  0E4E               	movlw	low _TxBuffer
 10084  014498  24F3               	addwf	prodl,w,c
 10085  01449A  6ED9               	movwf	fsr2l,c
 10086  01449C  0E01               	movlw	high _TxBuffer
 10087  01449E  20F4               	addwfc	prodh,w,c
 10088  0144A0  6EDA               	movwf	fsr2h,c
 10089  0144A2  0EFF               	movlw	255
 10090  0144A4  D00D               	goto	L1
 10091  0144A6                     l12729:
 10092                           
 10093                           ; BSR set to: 1
 10094  0144A6  0101               	movlb	1	; () banked
 10095  0144A8  2B46               	incf	_TxData& (0+255),f,b
 10096  0144AA  D00C               	goto	l12735
 10097  0144AC                     l12731:
 10098                           
 10099                           ;muta_messages.c: 420: else
 10100                           ;muta_messages.c: 421: TxBuffer[TxData++] = 0xf0;
 10101  0144AC  0101               	movlb	1	; () banked
 10102  0144AE  5146               	movf	_TxData& (0+255),w,b
 10103  0144B0  0D01               	mullw	1
 10104  0144B2  0E4E               	movlw	low _TxBuffer
 10105  0144B4  24F3               	addwf	prodl,w,c
 10106  0144B6  6ED9               	movwf	fsr2l,c
 10107  0144B8  0E01               	movlw	high _TxBuffer
 10108  0144BA  20F4               	addwfc	prodh,w,c
 10109  0144BC  6EDA               	movwf	fsr2h,c
 10110  0144BE  0EF0               	movlw	240
 10111  0144C0                     L1:
 10112  0144C0  6EDF               	movwf	indf2,c
 10113  0144C2  D7F1               	goto	l12729
 10114  0144C4                     l12735:
 10115                           
 10116                           ; BSR set to: 1
 10117                           ;muta_messages.c: 422: memcpy(&TxBuffer[TxData], p_buff, size);
 10118  0144C4  0101               	movlb	1	; () banked
 10119  0144C6  5146               	movf	_TxData& (0+255),w,b
 10120  0144C8  0D01               	mullw	1
 10121  0144CA  0E4E               	movlw	low _TxBuffer
 10122  0144CC  24F3               	addwf	prodl,w,c
 10123  0144CE  0101               	movlb	1	; () banked
 10124  0144D0  6F8A               	movwf	memcpy@d1& (0+255),b
 10125  0144D2  0E01               	movlw	high _TxBuffer
 10126  0144D4  20F4               	addwfc	prodh,w,c
 10127  0144D6  0101               	movlb	1	; () banked
 10128  0144D8  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
 10129  0144DA  C3E7  F18C         	movff	do_UPDATE@p_buff,memcpy@s1
 10130  0144DE  C3E8  F18D         	movff	do_UPDATE@p_buff+1,memcpy@s1+1
 10131  0144E2  C3E9  F18E         	movff	do_UPDATE@size,memcpy@n
 10132  0144E6  0101               	movlb	1	; () banked
 10133  0144E8  6B8F               	clrf	(memcpy@n+1)& (0+255),b
 10134  0144EA  EC2A  F0B5         	call	_memcpy	;wreg free
 10135                           
 10136                           ;muta_messages.c: 423: TxData = TxData + size;
 10137  0144EE  0101               	movlb	1	; () banked
 10138  0144F0  5146               	movf	_TxData& (0+255),w,b
 10139  0144F2  0103               	movlb	3	; () banked
 10140  0144F4  25E9               	addwf	do_UPDATE@size& (0+255),w,b
 10141  0144F6  0101               	movlb	1	; () banked
 10142  0144F8  6F46               	movwf	_TxData& (0+255),b
 10143                           
 10144                           ; BSR set to: 1
 10145                           ;muta_messages.c: 424: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 1);
 10146  0144FA  0EEB               	movlw	low do_UPDATE@shortaddress
 10147  0144FC  0101               	movlb	1	; () banked
 10148  0144FE  6FEE               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 10149  014500  0E03               	movlw	high do_UPDATE@shortaddress
 10150  014502  0101               	movlb	1	; () banked
 10151  014504  6FEF               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 10152  014506  0E00               	movlw	0
 10153  014508  0101               	movlb	1	; () banked
 10154  01450A  6FF0               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 10155  01450C  0E01               	movlw	1
 10156  01450E  0101               	movlb	1	; () banked
 10157  014510  6FF1               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 10158  014512  EC4A  F092         	call	_MiApp_UnicastAddress	;wreg free
 10159  014516  0103               	movlb	3	; () banked
 10160  014518  6FEF               	movwf	do_UPDATE@result& (0+255),b
 10161                           
 10162                           ; BSR set to: 3
 10163                           ;muta_messages.c: 425: if (!result)
 10164  01451A  0103               	movlb	3	; () banked
 10165  01451C  51EF               	movf	do_UPDATE@result& (0+255),w,b
 10166  01451E  0103               	movlb	3	; () banked
 10167  014520  A4D8               	btfss	status,2,c
 10168  014522  D009               	goto	l12749
 10169                           
 10170                           ; BSR set to: 3
 10171                           ;muta_messages.c: 426: {
 10172                           ;muta_messages.c: 427: m_failed_messages++;
 10173  014524  0E01               	movlw	1
 10174  014526  0101               	movlb	1	; () banked
 10175  014528  271E               	addwf	_m_failed_messages& (0+255),f,b
 10176  01452A  0E00               	movlw	0
 10177  01452C  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 10178  01452E  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 10179  014530  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 10180                           
 10181                           ; BSR set to: 1
 10182                           ;muta_messages.c: 428: return 0;
 10183  014532  0E00               	movlw	0
 10184                           
 10185                           ; BSR set to: 1
 10186  014534  0012               	return	
 10187  014536                     l12749:
 10188                           
 10189                           ;muta_messages.c: 429: }
 10190                           ;muta_messages.c: 430: if (ack_required)
 10191  014536  0103               	movlb	3	; () banked
 10192  014538  51EA               	movf	do_UPDATE@ack_required& (0+255),w,b
 10193  01453A  0103               	movlb	3	; () banked
 10194  01453C  B4D8               	btfsc	status,2,c
 10195  01453E  D04A               	goto	l12785
 10196                           
 10197                           ; BSR set to: 3
 10198                           ;muta_messages.c: 431: {
 10199                           ;muta_messages.c: 432: unsigned int i;
 10200                           ;muta_messages.c: 433: result = 0;
 10201  014540  0E00               	movlw	0
 10202  014542  0103               	movlb	3	; () banked
 10203  014544  6FEF               	movwf	do_UPDATE@result& (0+255),b
 10204                           
 10205                           ;muta_messages.c: 434: for (i=0; i<100; i++)
 10206  014546  0E00               	movlw	0
 10207  014548  0103               	movlb	3	; () banked
 10208  01454A  6FEE               	movwf	(do_UPDATE@i+1)& (0+255),b
 10209  01454C  0E00               	movlw	0
 10210  01454E  6FED               	movwf	do_UPDATE@i& (0+255),b
 10211  014550                     l12753:
 10212                           
 10213                           ; BSR set to: 3
 10214  014550  0103               	movlb	3	; () banked
 10215  014552  51EE               	movf	(do_UPDATE@i+1)& (0+255),w,b
 10216  014554  E128               	bnz	l12773
 10217  014556  0E64               	movlw	100
 10218  014558  0103               	movlb	3	; () banked
 10219  01455A  5DED               	subwf	do_UPDATE@i& (0+255),w,b
 10220  01455C  B0D8               	btfsc	status,0,c
 10221  01455E  D023               	goto	l12773
 10222                           
 10223                           ; BSR set to: 3
 10224                           ;muta_messages.c: 435: {
 10225                           ;muta_messages.c: 436: _delay((unsigned long)((10)*(8000000/4000.0)));
 10226                           
 10227                           ; BSR set to: 3
 10228                           
 10229                           ; BSR set to: 3
 10230  014560  0E1A               	movlw	26
 10231  014562  0101               	movlb	1	; () banked
 10232  014564  6FFA               	movwf	??_do_UPDATE& (0+255),b
 10233  014566  0EF8               	movlw	248
 10234  014568                     u18357:
 10235  014568  2EE8               	decfsz	wreg,f,c
 10236  01456A  D7FE               	goto	u18357
 10237  01456C  2FFA               	decfsz	??_do_UPDATE& (0+255),f,b
 10238  01456E  D7FC               	goto	u18357
 10239  014570  D000               	nop2	
 10240                           
 10241                           ;muta_messages.c: 437: if(MiApp_MessageAvailable())
 10242  014572  ECE2  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 10243  014576  0900               	iorlw	0
 10244  014578  B4D8               	btfsc	status,2,c
 10245  01457A  D011               	goto	l12769
 10246                           
 10247                           ;muta_messages.c: 438: {
 10248                           ;muta_messages.c: 440: last_rssi = rxMessage.PacketRSSI;
 10249  01457C  C114  F148         	movff	_rxMessage+8,_last_rssi
 10250                           
 10251                           ;muta_messages.c: 441: if (rxMessage.Payload[0] != 04)
 10252  014580  C111  FFD9         	movff	_rxMessage+5,fsr2l
 10253  014584  C112  FFDA         	movff	_rxMessage+6,fsr2h
 10254  014588  0E04               	movlw	4
 10255  01458A  18DE               	xorwf	postinc2,w,c
 10256  01458C  B4D8               	btfsc	status,2,c
 10257  01458E  D003               	goto	l12767
 10258                           
 10259                           ;muta_messages.c: 442: {
 10260                           ;muta_messages.c: 443: MiApp_DiscardMessage();
 10261  014590  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 10262                           
 10263                           ;muta_messages.c: 444: }
 10264  014594  D008               	goto	l12773
 10265  014596                     l12767:
 10266                           
 10267                           ;muta_messages.c: 445: else
 10268                           ;muta_messages.c: 446: result = 1;
 10269  014596  0E01               	movlw	1
 10270  014598  0103               	movlb	3	; () banked
 10271  01459A  6FEF               	movwf	do_UPDATE@result& (0+255),b
 10272                           
 10273                           ; BSR set to: 3
 10274                           ;muta_messages.c: 449: break;
 10275  01459C  D004               	goto	l12773
 10276  01459E                     l12769:
 10277  01459E  0103               	movlb	3	; () banked
 10278  0145A0  4BED               	infsnz	do_UPDATE@i& (0+255),f,b
 10279  0145A2  2BEE               	incf	(do_UPDATE@i+1)& (0+255),f,b
 10280  0145A4  D7D5               	goto	l12753
 10281  0145A6                     l12773:
 10282                           
 10283                           ;muta_messages.c: 450: }
 10284                           ;muta_messages.c: 451: }
 10285                           ;muta_messages.c: 452: if (!result)
 10286  0145A6  0103               	movlb	3	; () banked
 10287  0145A8  51EF               	movf	do_UPDATE@result& (0+255),w,b
 10288  0145AA  0103               	movlb	3	; () banked
 10289  0145AC  A4D8               	btfss	status,2,c
 10290  0145AE  D008               	goto	l12777
 10291                           
 10292                           ; BSR set to: 3
 10293                           ;muta_messages.c: 453: m_failed_messages++;
 10294  0145B0  0E01               	movlw	1
 10295  0145B2  0101               	movlb	1	; () banked
 10296  0145B4  271E               	addwf	_m_failed_messages& (0+255),f,b
 10297  0145B6  0E00               	movlw	0
 10298  0145B8  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 10299  0145BA  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 10300  0145BC  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 10301  0145BE  D007               	goto	l12779
 10302  0145C0                     l12777:
 10303                           
 10304                           ;muta_messages.c: 454: else
 10305                           ;muta_messages.c: 455: m_sent_messages++;
 10306  0145C0  0E01               	movlw	1
 10307  0145C2  0101               	movlb	1	; () banked
 10308  0145C4  2722               	addwf	_m_sent_messages& (0+255),f,b
 10309  0145C6  0E00               	movlw	0
 10310  0145C8  2323               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 10311  0145CA  2324               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 10312  0145CC  2325               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 10313  0145CE                     l12779:
 10314                           
 10315                           ; BSR set to: 1
 10316                           ;muta_messages.c: 456: return result;
 10317  0145CE  0103               	movlb	3	; () banked
 10318  0145D0  51EF               	movf	do_UPDATE@result& (0+255),w,b
 10319                           
 10320                           ; BSR set to: 3
 10321                           ;muta_messages.c: 457: }
 10322                           
 10323                           ; BSR set to: 3
 10324  0145D2  0012               	return	
 10325  0145D4                     l12785:
 10326                           
 10327                           ; BSR set to: 3
 10328                           ;muta_messages.c: 458: else
 10329                           ;muta_messages.c: 459: {
 10330                           ;muta_messages.c: 460: m_sent_messages++;
 10331  0145D4  0E01               	movlw	1
 10332  0145D6  0101               	movlb	1	; () banked
 10333  0145D8  2722               	addwf	_m_sent_messages& (0+255),f,b
 10334  0145DA  0E00               	movlw	0
 10335  0145DC  2323               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 10336  0145DE  2324               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 10337  0145E0  2325               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 10338                           
 10339                           ; BSR set to: 1
 10340                           ;muta_messages.c: 461: return 1;
 10341  0145E2  0E01               	movlw	1
 10342                           
 10343                           ; BSR set to: 1
 10344  0145E4  0012               	return	
 10345  0145E6                     __end_of_do_UPDATE:
 10346                           	opt stack 0
 10347                           tblptru	equ	0xFF8
 10348                           tblptrh	equ	0xFF7
 10349                           tblptrl	equ	0xFF6
 10350                           tablat	equ	0xFF5
 10351                           prodh	equ	0xFF4
 10352                           prodl	equ	0xFF3
 10353                           postinc0	equ	0xFEE
 10354                           plusw0	equ	0xFEB
 10355                           wreg	equ	0xFE8
 10356                           indf1	equ	0xFE7
 10357                           postdec1	equ	0xFE5
 10358                           fsr1h	equ	0xFE2
 10359                           fsr1l	equ	0xFE1
 10360                           indf2	equ	0xFDF
 10361                           postinc2	equ	0xFDE
 10362                           postdec2	equ	0xFDD
 10363                           plusw2	equ	0xFDB
 10364                           fsr2h	equ	0xFDA
 10365                           fsr2l	equ	0xFD9
 10366                           status	equ	0xFD8
 10367                           
 10368 ;; *************** function _dBm_to_mW_ufixed16 *****************
 10369 ;; Defined at:
 10370 ;;		line 45 in file "../../muta/muta_messages.c"
 10371 ;; Parameters:    Size  Location     Type
 10372 ;;  power           1    wreg     unsigned char 
 10373 ;;  value1          2    0[BANK1 ] PTR unsigned char 
 10374 ;;		 -> m_var(10), 
 10375 ;;  value2          2    2[BANK1 ] PTR unsigned char 
 10376 ;;		 -> m_var(10), 
 10377 ;; Auto vars:     Size  Location     Type
 10378 ;;  power           1    4[BANK1 ] unsigned char 
 10379 ;; Return value:  Size  Location     Type
 10380 ;;		None               void
 10381 ;; Registers used:
 10382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10383 ;; Tracked objects:
 10384 ;;		On entry : 0/0
 10385 ;;		On exit  : 0/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10388 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10389 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10391 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10392 ;;Total ram usage:        5 bytes
 10393 ;; Hardware stack levels used:    1
 10394 ;; Hardware stack levels required when called:    9
 10395 ;; This function calls:
 10396 ;;		Nothing
 10397 ;; This function is called by:
 10398 ;;		_send_initial_update
 10399 ;;		_send_writables_update
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403                           	psect	text31
 10404  015040                     __ptext31:
 10405                           	opt stack 0
 10406  015040                     _dBm_to_mW_ufixed16:
 10407                           	opt stack 20
 10408                           
 10409                           ;incstack = 0
 10410                           ;dBm_to_mW_ufixed16@power stored from wreg
 10411  015040  0101               	movlb	1	; () banked
 10412  015042  6F8E               	movwf	dBm_to_mW_ufixed16@power& (0+255),b
 10413                           
 10414                           ;muta_messages.c: 47: switch(power)
 10415  015044  D075               	goto	l12813
 10416  015046                     l12793:
 10417                           
 10418                           ;muta_messages.c: 50: *value1 = 20;
 10419  015046  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10420  01504A  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10421  01504E  0E14               	movlw	20
 10422  015050  6EDF               	movwf	indf2,c
 10423                           
 10424                           ;muta_messages.c: 51: *value2 = 0;
 10425  015052  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10426  015056  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10427  01505A  0E00               	movlw	0
 10428  01505C  6EDF               	movwf	indf2,c
 10429                           
 10430                           ;muta_messages.c: 52: break;
 10431  01505E  0012               	return	
 10432  015060                     l12795:
 10433                           
 10434                           ;muta_messages.c: 54: *value1 = 10;
 10435  015060  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10436  015064  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10437  015068  0E0A               	movlw	10
 10438  01506A  6EDF               	movwf	indf2,c
 10439                           
 10440                           ;muta_messages.c: 55: *value2 = 0;
 10441  01506C  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10442  015070  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10443  015074  0E00               	movlw	0
 10444  015076  6EDF               	movwf	indf2,c
 10445                           
 10446                           ;muta_messages.c: 56: break;
 10447  015078  0012               	return	
 10448  01507A                     l12797:
 10449                           
 10450                           ;muta_messages.c: 58: *value1 = 5;
 10451  01507A  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10452  01507E  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10453  015082  0E05               	movlw	5
 10454  015084  6EDF               	movwf	indf2,c
 10455                           
 10456                           ;muta_messages.c: 59: *value2 = 0;
 10457  015086  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10458  01508A  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10459  01508E  0E00               	movlw	0
 10460  015090  6EDF               	movwf	indf2,c
 10461                           
 10462                           ;muta_messages.c: 60: break;
 10463  015092  0012               	return	
 10464  015094                     l12799:
 10465                           
 10466                           ;muta_messages.c: 62: *value1 = 2;
 10467  015094  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10468  015098  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10469  01509C  0E02               	movlw	2
 10470  01509E  6EDF               	movwf	indf2,c
 10471                           
 10472                           ;muta_messages.c: 63: *value2 = 50;
 10473  0150A0  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10474  0150A4  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10475  0150A8  0E32               	movlw	50
 10476  0150AA  6EDF               	movwf	indf2,c
 10477                           
 10478                           ;muta_messages.c: 64: break;
 10479  0150AC  0012               	return	
 10480  0150AE                     l12801:
 10481                           
 10482                           ;muta_messages.c: 66: *value1 = 1;
 10483  0150AE  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10484  0150B2  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10485  0150B6  0E01               	movlw	1
 10486  0150B8  6EDF               	movwf	indf2,c
 10487                           
 10488                           ;muta_messages.c: 67: *value2 = 25;
 10489  0150BA  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10490  0150BE  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10491  0150C2  0E19               	movlw	25
 10492  0150C4  6EDF               	movwf	indf2,c
 10493                           
 10494                           ;muta_messages.c: 68: break;
 10495  0150C6  0012               	return	
 10496  0150C8                     l12803:
 10497                           
 10498                           ;muta_messages.c: 70: *value1 = 0;
 10499  0150C8  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10500  0150CC  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10501  0150D0  0E00               	movlw	0
 10502  0150D2  6EDF               	movwf	indf2,c
 10503                           
 10504                           ;muta_messages.c: 71: *value2 = 60;
 10505  0150D4  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10506  0150D8  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10507  0150DC  0E3C               	movlw	60
 10508  0150DE  6EDF               	movwf	indf2,c
 10509                           
 10510                           ;muta_messages.c: 72: break;
 10511  0150E0  0012               	return	
 10512  0150E2                     l12805:
 10513                           
 10514                           ;muta_messages.c: 74: *value1 = 0;
 10515  0150E2  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10516  0150E6  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10517  0150EA  0E00               	movlw	0
 10518  0150EC  6EDF               	movwf	indf2,c
 10519                           
 10520                           ;muta_messages.c: 75: *value2 = 30;
 10521  0150EE  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10522  0150F2  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10523  0150F6  0E1E               	movlw	30
 10524  0150F8  6EDF               	movwf	indf2,c
 10525                           
 10526                           ;muta_messages.c: 76: break;
 10527  0150FA  0012               	return	
 10528  0150FC                     l12807:
 10529                           
 10530                           ;muta_messages.c: 78: *value1 = 0;
 10531  0150FC  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10532  015100  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10533  015104  0E00               	movlw	0
 10534  015106  6EDF               	movwf	indf2,c
 10535                           
 10536                           ;muta_messages.c: 79: *value2 = 15;
 10537  015108  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10538  01510C  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10539  015110  0E0F               	movlw	15
 10540  015112  6EDF               	movwf	indf2,c
 10541                           
 10542                           ;muta_messages.c: 80: break;
 10543  015114  0012               	return	
 10544  015116                     l12809:
 10545                           
 10546                           ;muta_messages.c: 82: *value1 = 0;
 10547  015116  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10548  01511A  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10549  01511E  0E00               	movlw	0
 10550  015120  6EDF               	movwf	indf2,c
 10551                           
 10552                           ;muta_messages.c: 83: *value2 = 0;
 10553  015122  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10554  015126  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10555  01512A  0E00               	movlw	0
 10556  01512C  6EDF               	movwf	indf2,c
 10557                           
 10558                           ;muta_messages.c: 85: }
 10559                           
 10560                           ;muta_messages.c: 84: break;
 10561  01512E  0012               	return	
 10562  015130                     l12813:
 10563  015130  0101               	movlb	1	; () banked
 10564  015132  518E               	movf	dBm_to_mW_ufixed16@power& (0+255),w,b
 10565                           
 10566                           ; Switch size 1, requested type "space"
 10567                           ; Number of cases is 8, Range of values is 0 to 7
 10568                           ; switch strategies available:
 10569                           ; Name         Instructions Cycles
 10570                           ; simple_byte           25    13 (average)
 10571                           ;	Chosen strategy is simple_byte
 10572  015134  0A00               	xorlw	0	; case 0
 10573  015136  B4D8               	btfsc	status,2,c
 10574  015138  D786               	goto	l12793
 10575  01513A  0A01               	xorlw	1	; case 1
 10576  01513C  B4D8               	btfsc	status,2,c
 10577  01513E  D790               	goto	l12795
 10578  015140  0A03               	xorlw	3	; case 2
 10579  015142  B4D8               	btfsc	status,2,c
 10580  015144  D79A               	goto	l12797
 10581  015146  0A01               	xorlw	1	; case 3
 10582  015148  B4D8               	btfsc	status,2,c
 10583  01514A  D7A4               	goto	l12799
 10584  01514C  0A07               	xorlw	7	; case 4
 10585  01514E  B4D8               	btfsc	status,2,c
 10586  015150  D7AE               	goto	l12801
 10587  015152  0A01               	xorlw	1	; case 5
 10588  015154  B4D8               	btfsc	status,2,c
 10589  015156  D7B8               	goto	l12803
 10590  015158  0A03               	xorlw	3	; case 6
 10591  01515A  B4D8               	btfsc	status,2,c
 10592  01515C  D7C2               	goto	l12805
 10593  01515E  0A01               	xorlw	1	; case 7
 10594  015160  B4D8               	btfsc	status,2,c
 10595  015162  D7CC               	goto	l12807
 10596  015164  D7D8               	goto	l12809
 10597  015166                     __end_of_dBm_to_mW_ufixed16:
 10598                           	opt stack 0
 10599                           tblptru	equ	0xFF8
 10600                           tblptrh	equ	0xFF7
 10601                           tblptrl	equ	0xFF6
 10602                           tablat	equ	0xFF5
 10603                           prodh	equ	0xFF4
 10604                           prodl	equ	0xFF3
 10605                           postinc0	equ	0xFEE
 10606                           plusw0	equ	0xFEB
 10607                           wreg	equ	0xFE8
 10608                           indf1	equ	0xFE7
 10609                           postdec1	equ	0xFE5
 10610                           fsr1h	equ	0xFE2
 10611                           fsr1l	equ	0xFE1
 10612                           indf2	equ	0xFDF
 10613                           postinc2	equ	0xFDE
 10614                           postdec2	equ	0xFDD
 10615                           plusw2	equ	0xFDB
 10616                           fsr2h	equ	0xFDA
 10617                           fsr2l	equ	0xFD9
 10618                           status	equ	0xFD8
 10619                           
 10620 ;; *************** function _decode_variable *****************
 10621 ;; Defined at:
 10622 ;;		line 195 in file "../../muta/muta_messages.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;  p_buffer        2   10[BANK1 ] PTR unsigned char 
 10625 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 10626 ;; Auto vars:     Size  Location     Type
 10627 ;;  var            10   22[BANK1 ] struct .
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  10   10[BANK1 ] struct .
 10630 ;; Registers used:
 10631 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10637 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10638 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10639 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10640 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10641 ;;Total ram usage:       22 bytes
 10642 ;; Hardware stack levels used:    1
 10643 ;; Hardware stack levels required when called:   10
 10644 ;; This function calls:
 10645 ;;		_memcpy
 10646 ;; This function is called by:
 10647 ;;		_process_update_answer
 10648 ;; This function uses a non-reentrant model
 10649 ;;
 10650                           
 10651                           	psect	text32
 10652  015902                     __ptext32:
 10653                           	opt stack 0
 10654  015902                     _decode_variable:
 10655                           	opt stack 19
 10656                           
 10657                           ;muta_messages.c: 197: MUTA_VARIABLE var;
 10658                           ;muta_messages.c: 198: memcpy(var.label, p_buffer, 3);
 10659                           
 10660                           ;incstack = 0
 10661  015902  0EA0               	movlw	low decode_variable@var
 10662  015904  0101               	movlb	1	; () banked
 10663  015906  6F8A               	movwf	memcpy@d1& (0+255),b
 10664  015908  0E01               	movlw	high decode_variable@var
 10665  01590A  0101               	movlb	1	; () banked
 10666  01590C  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
 10667  01590E  C194  F18C         	movff	decode_variable@p_buffer,memcpy@s1
 10668  015912  C195  F18D         	movff	decode_variable@p_buffer+1,memcpy@s1+1
 10669  015916  0E00               	movlw	0
 10670  015918  0101               	movlb	1	; () banked
 10671  01591A  6F8F               	movwf	(memcpy@n+1)& (0+255),b
 10672  01591C  0E03               	movlw	3
 10673  01591E  6F8E               	movwf	memcpy@n& (0+255),b
 10674  015920  EC2A  F0B5         	call	_memcpy	;wreg free
 10675                           
 10676                           ;muta_messages.c: 199: p_buffer += 3;
 10677  015924  0E03               	movlw	3
 10678  015926  0101               	movlb	1	; () banked
 10679  015928  2794               	addwf	decode_variable@p_buffer& (0+255),f,b
 10680  01592A  0E00               	movlw	0
 10681  01592C  2395               	addwfc	(decode_variable@p_buffer+1)& (0+255),f,b
 10682                           
 10683                           ; BSR set to: 1
 10684                           ;muta_messages.c: 201: var.unit = *p_buffer & 0b00001111;
 10685  01592E  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10686  015932  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10687  015936  50DF               	movf	indf2,w,c
 10688  015938  0B0F               	andlw	15
 10689  01593A  0101               	movlb	1	; () banked
 10690  01593C  6FA6               	movwf	(decode_variable@var+6)& (0+255),b
 10691                           
 10692                           ; BSR set to: 1
 10693                           ;muta_messages.c: 202: if (*p_buffer & 0b00010000)
 10694  01593E  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10695  015942  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10696  015946  0101               	movlb	1	; () banked
 10697  015948  A8DF               	btfss	indf2,4,c
 10698  01594A  D002               	goto	l13377
 10699                           
 10700                           ; BSR set to: 1
 10701                           ;muta_messages.c: 203: var.writable = 1;
 10702  01594C  0E01               	movlw	1
 10703  01594E  D001               	goto	L2
 10704  015950                     l13377:
 10705                           
 10706                           ; BSR set to: 1
 10707                           ;muta_messages.c: 204: else
 10708                           ;muta_messages.c: 205: var.writable = 0;
 10709  015950  0E00               	movlw	0
 10710  015952                     L2:
 10711  015952  0101               	movlb	1	; () banked
 10712  015954  6FA7               	movwf	(decode_variable@var+7)& (0+255),b
 10713                           
 10714                           ; BSR set to: 1
 10715                           ;muta_messages.c: 206: if (*p_buffer & 0b00100000)
 10716                           
 10717                           ; BSR set to: 1
 10718  015956  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10719  01595A  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10720  01595E  0101               	movlb	1	; () banked
 10721  015960  AADF               	btfss	indf2,5,c
 10722  015962  D002               	goto	l13383
 10723                           
 10724                           ; BSR set to: 1
 10725                           ;muta_messages.c: 207: var._signed = 1;
 10726  015964  0E01               	movlw	1
 10727  015966  D001               	goto	L3
 10728  015968                     l13383:
 10729                           
 10730                           ; BSR set to: 1
 10731                           ;muta_messages.c: 208: else
 10732                           ;muta_messages.c: 209: var._signed = 0;
 10733  015968  0E00               	movlw	0
 10734  01596A                     L3:
 10735  01596A  0101               	movlb	1	; () banked
 10736  01596C  6FA8               	movwf	(decode_variable@var+8)& (0+255),b
 10737                           
 10738                           ; BSR set to: 1
 10739                           ;muta_messages.c: 211: var.type = (*p_buffer++ & 0b11000000) >> 6;
 10740                           
 10741                           ; BSR set to: 1
 10742  01596E  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10743  015972  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10744  015976  50DF               	movf	indf2,w,c
 10745  015978  0101               	movlb	1	; () banked
 10746  01597A  6F9E               	movwf	??_decode_variable& (0+255),b
 10747  01597C  0E06               	movlw	6
 10748  01597E  0101               	movlb	1	; () banked
 10749  015980  6F9F               	movwf	(??_decode_variable+1)& (0+255),b
 10750  015982                     u15805:
 10751  015982  0101               	movlb	1	; () banked
 10752  015984  90D8               	bcf	status,0,c
 10753  015986  339E               	rrcf	??_decode_variable& (0+255),f,b
 10754  015988  0101               	movlb	1	; () banked
 10755  01598A  2F9F               	decfsz	(??_decode_variable+1)& (0+255),f,b
 10756  01598C  D7FA               	goto	u15805
 10757  01598E  0101               	movlb	1	; () banked
 10758  015990  519E               	movf	??_decode_variable& (0+255),w,b
 10759  015992  0B03               	andlw	3
 10760  015994  0101               	movlb	1	; () banked
 10761  015996  6FA3               	movwf	(decode_variable@var+3)& (0+255),b
 10762                           
 10763                           ; BSR set to: 1
 10764  015998  0101               	movlb	1	; () banked
 10765  01599A  4B94               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10766  01599C  2B95               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10767                           
 10768                           ; BSR set to: 1
 10769                           ;muta_messages.c: 212: var.value_byte1 = *p_buffer++;
 10770  01599E  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10771  0159A2  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10772  0159A6  50DF               	movf	indf2,w,c
 10773  0159A8  0101               	movlb	1	; () banked
 10774  0159AA  6FA4               	movwf	(decode_variable@var+4)& (0+255),b
 10775                           
 10776                           ; BSR set to: 1
 10777  0159AC  0101               	movlb	1	; () banked
 10778  0159AE  4B94               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10779  0159B0  2B95               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10780                           
 10781                           ;muta_messages.c: 213: if ((var.type == 1) || (var.type == 2))
 10782  0159B2  0101               	movlb	1	; () banked
 10783  0159B4  05A3               	decf	(decode_variable@var+3)& (0+255),w,b
 10784  0159B6  B4D8               	btfsc	status,2,c
 10785  0159B8  D005               	goto	l13395
 10786                           
 10787                           ; BSR set to: 1
 10788  0159BA  0E02               	movlw	2
 10789  0159BC  0101               	movlb	1	; () banked
 10790  0159BE  19A3               	xorwf	(decode_variable@var+3)& (0+255),w,b
 10791  0159C0  A4D8               	btfss	status,2,c
 10792  0159C2  D00C               	goto	l13401
 10793  0159C4                     l13395:
 10794                           
 10795                           ; BSR set to: 1
 10796                           ;muta_messages.c: 214: {
 10797                           ;muta_messages.c: 215: var.value_byte2 = *p_buffer++;
 10798  0159C4  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10799  0159C8  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10800  0159CC  50DF               	movf	indf2,w,c
 10801  0159CE  0101               	movlb	1	; () banked
 10802  0159D0  6FA5               	movwf	(decode_variable@var+5)& (0+255),b
 10803                           
 10804                           ; BSR set to: 1
 10805  0159D2  0101               	movlb	1	; () banked
 10806  0159D4  4B94               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10807  0159D6  2B95               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10808                           
 10809                           ; BSR set to: 1
 10810                           ;muta_messages.c: 216: var.size = 6;
 10811  0159D8  0E06               	movlw	6
 10812  0159DA  D001               	goto	L4
 10813  0159DC                     l13401:
 10814                           
 10815                           ; BSR set to: 1
 10816                           ;muta_messages.c: 218: else
 10817                           ;muta_messages.c: 219: var.size = 5;
 10818  0159DC  0E05               	movlw	5
 10819  0159DE                     L4:
 10820  0159DE  0101               	movlb	1	; () banked
 10821  0159E0  6FA9               	movwf	(decode_variable@var+9)& (0+255),b
 10822                           
 10823                           ; BSR set to: 1
 10824                           ;muta_messages.c: 220: return var;
 10825                           
 10826                           ; BSR set to: 1
 10827  0159E2  EE21  F0A0         	lfsr	2,decode_variable@var
 10828  0159E6  EE01  F094         	lfsr	0,?_decode_variable
 10829  0159EA  0E09               	movlw	9
 10830  0159EC                     u15831:
 10831  0159EC  CFDB FFEB          	movff	plusw2,plusw0
 10832  0159F0  06E8               	decf	wreg,f,c
 10833  0159F2  E2FC               	bc	u15831
 10834  0159F4  0012               	return	
 10835  0159F6                     __end_of_decode_variable:
 10836                           	opt stack 0
 10837                           tblptru	equ	0xFF8
 10838                           tblptrh	equ	0xFF7
 10839                           tblptrl	equ	0xFF6
 10840                           tablat	equ	0xFF5
 10841                           prodh	equ	0xFF4
 10842                           prodl	equ	0xFF3
 10843                           postinc0	equ	0xFEE
 10844                           plusw0	equ	0xFEB
 10845                           wreg	equ	0xFE8
 10846                           indf1	equ	0xFE7
 10847                           postdec1	equ	0xFE5
 10848                           fsr1h	equ	0xFE2
 10849                           fsr1l	equ	0xFE1
 10850                           indf2	equ	0xFDF
 10851                           postinc2	equ	0xFDE
 10852                           postdec2	equ	0xFDD
 10853                           plusw2	equ	0xFDB
 10854                           fsr2h	equ	0xFDA
 10855                           fsr2l	equ	0xFD9
 10856                           status	equ	0xFD8
 10857                           
 10858 ;; *************** function _MiApp_TransceiverPowerState *****************
 10859 ;; Defined at:
 10860 ;;		line 3805 in file "src/miwi/miwi_mesh.c"
 10861 ;; Parameters:    Size  Location     Type
 10862 ;;  Mode            1    wreg     unsigned char 
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;  Mode            1   20[BANK1 ] unsigned char 
 10865 ;;  status          1    0        unsigned char 
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      unsigned char 
 10868 ;; Registers used:
 10869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10876 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10878 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10879 ;;Total ram usage:        1 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:   13
 10882 ;; This function calls:
 10883 ;;		_MiMAC_PowerState
 10884 ;; This function is called by:
 10885 ;;		_main
 10886 ;;		_process_update_answer
 10887 ;;		_sleep_and_reset
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891                           	psect	text33
 10892  016D56                     __ptext33:
 10893                           	opt stack 0
 10894  016D56                     _MiApp_TransceiverPowerState:
 10895                           	opt stack 16
 10896                           
 10897                           ; BSR set to: 1
 10898                           ;incstack = 0
 10899                           ;MiApp_TransceiverPowerState@Mode stored from wreg
 10900  016D56  0101               	movlb	1	; () banked
 10901  016D58  6F9E               	movwf	MiApp_TransceiverPowerState@Mode& (0+255),b
 10902                           
 10903                           ;miwi_mesh.c: 3807: uint8_t status;
 10904                           ;miwi_mesh.c: 3809: switch(Mode)
 10905  016D5A  D012               	goto	l13291
 10906  016D5C                     l13281:
 10907                           
 10908                           ;miwi_mesh.c: 3812: {
 10909                           ;miwi_mesh.c: 3820: if( MiMAC_PowerState(0x00) )
 10910  016D5C  0E00               	movlw	0
 10911  016D5E  ECA2  F0B3         	call	_MiMAC_PowerState
 10912  016D62  0900               	iorlw	0
 10913  016D64  B4D8               	btfsc	status,2,c
 10914  016D66  0012               	return	
 10915                           
 10916                           ;miwi_mesh.c: 3821: {
 10917                           ;miwi_mesh.c: 3822: MiWiStateMachine.bits.Sleeping = 1;
 10918  016D68  0101               	movlb	1	; () banked
 10919  016D6A  8139               	bsf	(_MiWiStateMachine+1)& (0+255),0,b
 10920                           
 10921                           ; BSR set to: 1
 10922                           ;miwi_mesh.c: 3824: }
 10923                           ;miwi_mesh.c: 3825: return 0x01;
 10924                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10925                           
 10926                           ;miwi_mesh.c: 3823: return 0x00;
 10927                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10928  016D6C  0012               	return	
 10929  016D6E                     l13285:
 10930                           
 10931                           ; BSR set to: 1
 10932                           ;miwi_mesh.c: 3829: {
 10933                           ;miwi_mesh.c: 3830: if( MiMAC_PowerState(0xFF) )
 10934  016D6E  0EFF               	movlw	255
 10935  016D70  ECA2  F0B3         	call	_MiMAC_PowerState
 10936  016D74  0900               	iorlw	0
 10937  016D76  B4D8               	btfsc	status,2,c
 10938  016D78  0012               	return	
 10939                           
 10940                           ;miwi_mesh.c: 3831: {
 10941                           ;miwi_mesh.c: 3832: MiWiStateMachine.bits.Sleeping = 0;
 10942  016D7A  0101               	movlb	1	; () banked
 10943  016D7C  9139               	bcf	(_MiWiStateMachine+1)& (0+255),0,b
 10944                           
 10945                           ; BSR set to: 1
 10946                           ;miwi_mesh.c: 3860: }
 10947                           
 10948                           ; BSR set to: 1
 10949                           ;miwi_mesh.c: 3859: break;
 10950                           
 10951                           ;miwi_mesh.c: 3836: }
 10952                           ;miwi_mesh.c: 3858: default:
 10953                           
 10954                           ; BSR set to: 1
 10955                           ;miwi_mesh.c: 3834: }
 10956                           ;miwi_mesh.c: 3835: return 0x01;
 10957                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10958                           
 10959                           ;miwi_mesh.c: 3833: return 0x00;
 10960                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10961  016D7E  0012               	return	
 10962  016D80                     l13291:
 10963  016D80  0101               	movlb	1	; () banked
 10964  016D82  519E               	movf	MiApp_TransceiverPowerState@Mode& (0+255),w,b
 10965                           
 10966                           ; Switch size 1, requested type "space"
 10967                           ; Number of cases is 2, Range of values is 0 to 1
 10968                           ; switch strategies available:
 10969                           ; Name         Instructions Cycles
 10970                           ; simple_byte            7     4 (average)
 10971                           ;	Chosen strategy is simple_byte
 10972  016D84  0A00               	xorlw	0	; case 0
 10973  016D86  B4D8               	btfsc	status,2,c
 10974  016D88  D7E9               	goto	l13281
 10975  016D8A  0A01               	xorlw	1	; case 1
 10976  016D8C  A4D8               	btfss	status,2,c
 10977  016D8E  0012               	return	
 10978  016D90  D7EE               	goto	l13285
 10979  016D92                     __end_of_MiApp_TransceiverPowerState:
 10980                           	opt stack 0
 10981                           tblptru	equ	0xFF8
 10982                           tblptrh	equ	0xFF7
 10983                           tblptrl	equ	0xFF6
 10984                           tablat	equ	0xFF5
 10985                           prodh	equ	0xFF4
 10986                           prodl	equ	0xFF3
 10987                           postinc0	equ	0xFEE
 10988                           plusw0	equ	0xFEB
 10989                           wreg	equ	0xFE8
 10990                           indf1	equ	0xFE7
 10991                           postdec1	equ	0xFE5
 10992                           fsr1h	equ	0xFE2
 10993                           fsr1l	equ	0xFE1
 10994                           indf2	equ	0xFDF
 10995                           postinc2	equ	0xFDE
 10996                           postdec2	equ	0xFDD
 10997                           plusw2	equ	0xFDB
 10998                           fsr2h	equ	0xFDA
 10999                           fsr2l	equ	0xFD9
 11000                           status	equ	0xFD8
 11001                           
 11002 ;; *************** function _MiMAC_PowerState *****************
 11003 ;; Defined at:
 11004 ;;		line 1174 in file "src/miwi/drv_mrf_miwi_89xa.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;  PowerState      1    wreg     unsigned char 
 11007 ;; Auto vars:     Size  Location     Type
 11008 ;;  PowerState      1   18[BANK1 ] unsigned char 
 11009 ;;  i               1   19[BANK1 ] unsigned char 
 11010 ;; Return value:  Size  Location     Type
 11011 ;;                  1    wreg      unsigned char 
 11012 ;; Registers used:
 11013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11014 ;; Tracked objects:
 11015 ;;		On entry : 0/0
 11016 ;;		On exit  : 0/0
 11017 ;;		Unchanged: 0/0
 11018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11020 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11022 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11023 ;;Total ram usage:        2 bytes
 11024 ;; Hardware stack levels used:    1
 11025 ;; Hardware stack levels required when called:   12
 11026 ;; This function calls:
 11027 ;;		_DELAY_ms
 11028 ;;		_SetRFMode
 11029 ;; This function is called by:
 11030 ;;		_MiApp_TransceiverPowerState
 11031 ;; This function uses a non-reentrant model
 11032 ;;
 11033                           
 11034                           	psect	text34
 11035  016744                     __ptext34:
 11036                           	opt stack 0
 11037  016744                     _MiMAC_PowerState:
 11038                           	opt stack 16
 11039                           
 11040                           ;incstack = 0
 11041                           ;MiMAC_PowerState@PowerState stored from wreg
 11042  016744  0101               	movlb	1	; () banked
 11043  016746  6F9C               	movwf	MiMAC_PowerState@PowerState& (0+255),b
 11044                           
 11045                           ;drv_mrf_miwi_89xa.c: 1176: switch(PowerState)
 11046  016748  D02D               	goto	l12619
 11047  01674A                     l12589:
 11048                           
 11049                           ;drv_mrf_miwi_89xa.c: 1179: {
 11050                           ;drv_mrf_miwi_89xa.c: 1180: SetRFMode(0x00);
 11051  01674A  0E00               	movlw	0
 11052  01674C  ECC1  F0B1         	call	_SetRFMode
 11053                           
 11054                           ;drv_mrf_miwi_89xa.c: 1182: INTCONbits.INT0IE = 0;
 11055  016750  98F2               	bcf	intcon,4,c	;volatile
 11056                           
 11057                           ;drv_mrf_miwi_89xa.c: 1184: INTCON3bits.INT1IE = 0;
 11058  016752  96F0               	bcf	intcon3,3,c	;volatile
 11059                           
 11060                           ;drv_mrf_miwi_89xa.c: 1185: }
 11061                           ;drv_mrf_miwi_89xa.c: 1186: break;
 11062  016754  D030               	goto	l12621
 11063  016756                     l12595:
 11064                           
 11065                           ;drv_mrf_miwi_89xa.c: 1189: {
 11066                           ;drv_mrf_miwi_89xa.c: 1190: uint8_t i;
 11067                           ;drv_mrf_miwi_89xa.c: 1192: SetRFMode(0x20);
 11068  016756  0E20               	movlw	32
 11069  016758  ECC1  F0B1         	call	_SetRFMode
 11070                           
 11071                           ;drv_mrf_miwi_89xa.c: 1193: SetRFMode(0x60);
 11072  01675C  0E60               	movlw	96
 11073  01675E  ECC1  F0B1         	call	_SetRFMode
 11074                           
 11075                           ;drv_mrf_miwi_89xa.c: 1195: INTCONbits.INT0IE = 1;
 11076  016762  88F2               	bsf	intcon,4,c	;volatile
 11077                           
 11078                           ;drv_mrf_miwi_89xa.c: 1197: INTCON3bits.INT1IE = 1;
 11079  016764  86F0               	bsf	intcon3,3,c	;volatile
 11080                           
 11081                           ;drv_mrf_miwi_89xa.c: 1198: DELAY_ms(10);
 11082  016766  0E00               	movlw	0
 11083  016768  0101               	movlb	1	; () banked
 11084  01676A  6F97               	movwf	(DELAY_ms@ms+1)& (0+255),b
 11085  01676C  0E0A               	movlw	10
 11086  01676E  6F96               	movwf	DELAY_ms@ms& (0+255),b
 11087  016770  ECCA  F0B0         	call	_DELAY_ms	;wreg free
 11088                           
 11089                           ;drv_mrf_miwi_89xa.c: 1200: for(i = 0; i < 5; i++)
 11090  016774  0E00               	movlw	0
 11091  016776  0101               	movlb	1	; () banked
 11092  016778  6F9D               	movwf	MiMAC_PowerState@i& (0+255),b
 11093  01677A                     l12603:
 11094                           
 11095                           ; BSR set to: 1
 11096  01677A  0E04               	movlw	4
 11097  01677C  0101               	movlb	1	; () banked
 11098  01677E  659D               	cpfsgt	MiMAC_PowerState@i& (0+255),b
 11099  016780  D001               	goto	l12607
 11100  016782  D019               	goto	l12621
 11101  016784                     l12607:
 11102                           
 11103                           ; BSR set to: 1
 11104                           ;drv_mrf_miwi_89xa.c: 1201: {
 11105                           ;drv_mrf_miwi_89xa.c: 1202: AckInfo[i].Valid = 0;
 11106  016784  0101               	movlb	1	; () banked
 11107  016786  519D               	movf	MiMAC_PowerState@i& (0+255),w,b
 11108  016788  0D06               	mullw	6
 11109  01678A  0E28               	movlw	low _AckInfo
 11110  01678C  24F3               	addwf	prodl,w,c
 11111  01678E  6ED9               	movwf	fsr2l,c
 11112  016790  0E02               	movlw	high _AckInfo
 11113  016792  20F4               	addwfc	prodh,w,c
 11114  016794  6EDA               	movwf	fsr2h,c
 11115  016796  0E00               	movlw	0
 11116  016798  6EDF               	movwf	indf2,c
 11117                           
 11118                           ; BSR set to: 1
 11119  01679A  0101               	movlb	1	; () banked
 11120  01679C  2B9D               	incf	MiMAC_PowerState@i& (0+255),f,b
 11121  01679E  D7ED               	goto	l12603
 11122  0167A0                     l12613:
 11123                           
 11124                           ; BSR set to: 1
 11125                           ;drv_mrf_miwi_89xa.c: 1209: return 0;
 11126  0167A0  0E00               	movlw	0
 11127                           
 11128                           ; BSR set to: 1
 11129  0167A2  0012               	return	
 11130  0167A4                     l12619:
 11131  0167A4  0101               	movlb	1	; () banked
 11132  0167A6  519C               	movf	MiMAC_PowerState@PowerState& (0+255),w,b
 11133                           
 11134                           ; Switch size 1, requested type "space"
 11135                           ; Number of cases is 2, Range of values is 0 to 255
 11136                           ; switch strategies available:
 11137                           ; Name         Instructions Cycles
 11138                           ; simple_byte            7     4 (average)
 11139                           ;	Chosen strategy is simple_byte
 11140  0167A8  0A00               	xorlw	0	; case 0
 11141  0167AA  B4D8               	btfsc	status,2,c
 11142  0167AC  D7CE               	goto	l12589
 11143  0167AE  0AFF               	xorlw	255	; case 255
 11144  0167B0  B4D8               	btfsc	status,2,c
 11145  0167B2  D7D1               	goto	l12595
 11146  0167B4  D7F5               	goto	l12613
 11147  0167B6                     l12621:
 11148                           
 11149                           ;drv_mrf_miwi_89xa.c: 1211: return 1;
 11150  0167B6  0E01               	movlw	1
 11151  0167B8  0012               	return	
 11152  0167BA                     __end_of_MiMAC_PowerState:
 11153                           	opt stack 0
 11154                           tblptru	equ	0xFF8
 11155                           tblptrh	equ	0xFF7
 11156                           tblptrl	equ	0xFF6
 11157                           tablat	equ	0xFF5
 11158                           prodh	equ	0xFF4
 11159                           prodl	equ	0xFF3
 11160                           intcon	equ	0xFF2
 11161                           intcon3	equ	0xFF0
 11162                           postinc0	equ	0xFEE
 11163                           plusw0	equ	0xFEB
 11164                           wreg	equ	0xFE8
 11165                           indf1	equ	0xFE7
 11166                           postdec1	equ	0xFE5
 11167                           fsr1h	equ	0xFE2
 11168                           fsr1l	equ	0xFE1
 11169                           indf2	equ	0xFDF
 11170                           postinc2	equ	0xFDE
 11171                           postdec2	equ	0xFDD
 11172                           plusw2	equ	0xFDB
 11173                           fsr2h	equ	0xFDA
 11174                           fsr2l	equ	0xFD9
 11175                           status	equ	0xFD8
 11176                           
 11177 ;; *************** function _do_NETWORK_REGISTER *****************
 11178 ;; Defined at:
 11179 ;;		line 226 in file "../../muta/muta_messages.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;  p_uid           2  112[BANK1 ] PTR unsigned char 
 11182 ;;		 -> myLongAddress(4), 
 11183 ;;  sleeping_dev    1  114[BANK1 ] unsigned char 
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;  i               2   22[BANK3 ] unsigned int 
 11186 ;;  shortaddress    2   20[BANK3 ] unsigned char [2]
 11187 ;;  result          1   24[BANK3 ] unsigned char 
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  1    wreg      unsigned char 
 11190 ;; Registers used:
 11191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11197 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11198 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0
 11199 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
 11200 ;;      Totals:         0       0       3       0       6       0       0       0       0       0       0       0       
      +0       0       0       0
 11201 ;;Total ram usage:        9 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; Hardware stack levels required when called:   17
 11204 ;; This function calls:
 11205 ;;		_MiApp_DiscardMessage
 11206 ;;		_MiApp_MessageAvailable
 11207 ;;		_MiApp_UnicastAddress
 11208 ;;		_memcpy
 11209 ;; This function is called by:
 11210 ;;		_main
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214                           	psect	text35
 11215  0142D2                     __ptext35:
 11216                           	opt stack 0
 11217  0142D2                     _do_NETWORK_REGISTER:
 11218                           	opt stack 13
 11219                           
 11220                           ;muta_messages.c: 228: uint8_t shortaddress[2] = { 0x00, 0x00 };
 11221                           
 11222                           ;incstack = 0
 11223  0142D2  C13E  F3E8         	movff	do_NETWORK_REGISTER@F10228,do_NETWORK_REGISTER@shortaddress
 11224  0142D6  C13F  F3E9         	movff	do_NETWORK_REGISTER@F10228+1,do_NETWORK_REGISTER@shortaddress+1
 11225                           
 11226                           ;muta_messages.c: 229: {TxData = 11;};
 11227  0142DA  0E0B               	movlw	11
 11228  0142DC  0101               	movlb	1	; () banked
 11229  0142DE  6F46               	movwf	_TxData& (0+255),b
 11230                           
 11231                           ; BSR set to: 1
 11232                           ;muta_messages.c: 230: TxBuffer[TxData++] = 02;
 11233  0142E0  0101               	movlb	1	; () banked
 11234  0142E2  5146               	movf	_TxData& (0+255),w,b
 11235  0142E4  0D01               	mullw	1
 11236  0142E6  0E4E               	movlw	low _TxBuffer
 11237  0142E8  24F3               	addwf	prodl,w,c
 11238  0142EA  6ED9               	movwf	fsr2l,c
 11239  0142EC  0E01               	movlw	high _TxBuffer
 11240  0142EE  20F4               	addwfc	prodh,w,c
 11241  0142F0  6EDA               	movwf	fsr2h,c
 11242  0142F2  0E02               	movlw	2
 11243  0142F4  6EDF               	movwf	indf2,c
 11244                           
 11245                           ; BSR set to: 1
 11246  0142F6  0101               	movlb	1	; () banked
 11247  0142F8  2B46               	incf	_TxData& (0+255),f,b
 11248                           
 11249                           ; BSR set to: 1
 11250                           ;muta_messages.c: 231: memcpy(&TxBuffer[TxData], p_uid, 4);
 11251  0142FA  0101               	movlb	1	; () banked
 11252  0142FC  5146               	movf	_TxData& (0+255),w,b
 11253  0142FE  0D01               	mullw	1
 11254  014300  0E4E               	movlw	low _TxBuffer
 11255  014302  24F3               	addwf	prodl,w,c
 11256  014304  0101               	movlb	1	; () banked
 11257  014306  6F8A               	movwf	memcpy@d1& (0+255),b
 11258  014308  0E01               	movlw	high _TxBuffer
 11259  01430A  20F4               	addwfc	prodh,w,c
 11260  01430C  0101               	movlb	1	; () banked
 11261  01430E  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
 11262  014310  C1FA  F18C         	movff	do_NETWORK_REGISTER@p_uid,memcpy@s1
 11263  014314  C1FB  F18D         	movff	do_NETWORK_REGISTER@p_uid+1,memcpy@s1+1
 11264  014318  0E00               	movlw	0
 11265  01431A  0101               	movlb	1	; () banked
 11266  01431C  6F8F               	movwf	(memcpy@n+1)& (0+255),b
 11267  01431E  0E04               	movlw	4
 11268  014320  6F8E               	movwf	memcpy@n& (0+255),b
 11269  014322  EC2A  F0B5         	call	_memcpy	;wreg free
 11270                           
 11271                           ;muta_messages.c: 232: TxData = TxData + 4;
 11272  014326  0101               	movlb	1	; () banked
 11273  014328  5146               	movf	_TxData& (0+255),w,b
 11274  01432A  0F04               	addlw	4
 11275  01432C  0101               	movlb	1	; () banked
 11276  01432E  6F46               	movwf	_TxData& (0+255),b
 11277                           
 11278                           ; BSR set to: 1
 11279                           ;muta_messages.c: 233: TxBuffer[TxData++] = sleeping_device;
 11280  014330  0101               	movlb	1	; () banked
 11281  014332  5146               	movf	_TxData& (0+255),w,b
 11282  014334  0D01               	mullw	1
 11283  014336  0E4E               	movlw	low _TxBuffer
 11284  014338  24F3               	addwf	prodl,w,c
 11285  01433A  6ED9               	movwf	fsr2l,c
 11286  01433C  0E01               	movlw	high _TxBuffer
 11287  01433E  20F4               	addwfc	prodh,w,c
 11288  014340  6EDA               	movwf	fsr2h,c
 11289  014342  C1FC  FFDF         	movff	do_NETWORK_REGISTER@sleeping_device,indf2
 11290                           
 11291                           ; BSR set to: 1
 11292  014346  0101               	movlb	1	; () banked
 11293  014348  2B46               	incf	_TxData& (0+255),f,b
 11294                           
 11295                           ; BSR set to: 1
 11296                           ;muta_messages.c: 234: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 0);
 11297  01434A  0EE8               	movlw	low do_NETWORK_REGISTER@shortaddress
 11298  01434C  0101               	movlb	1	; () banked
 11299  01434E  6FEE               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 11300  014350  0E03               	movlw	high do_NETWORK_REGISTER@shortaddress
 11301  014352  0101               	movlb	1	; () banked
 11302  014354  6FEF               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 11303  014356  0E00               	movlw	0
 11304  014358  0101               	movlb	1	; () banked
 11305  01435A  6FF0               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 11306  01435C  0E00               	movlw	0
 11307  01435E  0101               	movlb	1	; () banked
 11308  014360  6FF1               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 11309  014362  EC4A  F092         	call	_MiApp_UnicastAddress	;wreg free
 11310  014366  0103               	movlb	3	; () banked
 11311  014368  6FEC               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 11312                           
 11313                           ; BSR set to: 3
 11314                           ;muta_messages.c: 235: if (!result)
 11315  01436A  0103               	movlb	3	; () banked
 11316  01436C  51EC               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 11317  01436E  0103               	movlb	3	; () banked
 11318  014370  A4D8               	btfss	status,2,c
 11319  014372  D009               	goto	l14421
 11320                           
 11321                           ; BSR set to: 3
 11322                           ;muta_messages.c: 236: {
 11323                           ;muta_messages.c: 237: m_failed_messages++;
 11324  014374  0E01               	movlw	1
 11325  014376  0101               	movlb	1	; () banked
 11326  014378  271E               	addwf	_m_failed_messages& (0+255),f,b
 11327  01437A  0E00               	movlw	0
 11328  01437C  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 11329  01437E  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 11330  014380  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 11331                           
 11332                           ; BSR set to: 1
 11333                           ;muta_messages.c: 238: return 0;
 11334  014382  0E00               	movlw	0
 11335                           
 11336                           ; BSR set to: 1
 11337                           ;muta_messages.c: 239: }
 11338                           
 11339                           ; BSR set to: 1
 11340  014384  0012               	return	
 11341  014386                     l14421:
 11342                           
 11343                           ;muta_messages.c: 240: else
 11344                           ;muta_messages.c: 241: {
 11345                           ;muta_messages.c: 242: unsigned int i;
 11346                           ;muta_messages.c: 243: result = 0;
 11347  014386  0E00               	movlw	0
 11348  014388  0103               	movlb	3	; () banked
 11349  01438A  6FEC               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 11350                           
 11351                           ;muta_messages.c: 244: for (i=0; i<100; i++)
 11352  01438C  0E00               	movlw	0
 11353  01438E  0103               	movlb	3	; () banked
 11354  014390  6FEB               	movwf	(do_NETWORK_REGISTER@i+1)& (0+255),b
 11355  014392  0E00               	movlw	0
 11356  014394  6FEA               	movwf	do_NETWORK_REGISTER@i& (0+255),b
 11357  014396                     l14423:
 11358                           
 11359                           ; BSR set to: 3
 11360  014396  0103               	movlb	3	; () banked
 11361  014398  51EB               	movf	(do_NETWORK_REGISTER@i+1)& (0+255),w,b
 11362  01439A  E14A               	bnz	l14445
 11363  01439C  0E64               	movlw	100
 11364  01439E  0103               	movlb	3	; () banked
 11365  0143A0  5DEA               	subwf	do_NETWORK_REGISTER@i& (0+255),w,b
 11366  0143A2  B0D8               	btfsc	status,0,c
 11367  0143A4  D045               	goto	l14445
 11368                           
 11369                           ; BSR set to: 3
 11370                           ;muta_messages.c: 245: {
 11371                           ;muta_messages.c: 246: _delay((unsigned long)((10)*(8000000/4000.0)));
 11372                           
 11373                           ; BSR set to: 3
 11374                           
 11375                           ; BSR set to: 3
 11376  0143A6  0E1A               	movlw	26
 11377  0143A8  0103               	movlb	3	; () banked
 11378  0143AA  6FE7               	movwf	??_do_NETWORK_REGISTER& (0+255),b
 11379  0143AC  0EF8               	movlw	248
 11380  0143AE                     u18367:
 11381  0143AE  2EE8               	decfsz	wreg,f,c
 11382  0143B0  D7FE               	goto	u18367
 11383  0143B2  2FE7               	decfsz	??_do_NETWORK_REGISTER& (0+255),f,b
 11384  0143B4  D7FC               	goto	u18367
 11385  0143B6  D000               	nop2	
 11386                           
 11387                           ;muta_messages.c: 247: if(MiApp_MessageAvailable())
 11388  0143B8  ECE2  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 11389  0143BC  0900               	iorlw	0
 11390  0143BE  B4D8               	btfsc	status,2,c
 11391  0143C0  D033               	goto	l14441
 11392                           
 11393                           ;muta_messages.c: 248: {
 11394                           ;muta_messages.c: 250: last_rssi = rxMessage.PacketRSSI;
 11395  0143C2  C114  F148         	movff	_rxMessage+8,_last_rssi
 11396                           
 11397                           ;muta_messages.c: 251: if (rxMessage.Payload[0] != 02)
 11398  0143C6  C111  FFD9         	movff	_rxMessage+5,fsr2l
 11399  0143CA  C112  FFDA         	movff	_rxMessage+6,fsr2h
 11400  0143CE  0E02               	movlw	2
 11401  0143D0  18DE               	xorwf	postinc2,w,c
 11402  0143D2  B4D8               	btfsc	status,2,c
 11403  0143D4  D003               	goto	l14437
 11404                           
 11405                           ;muta_messages.c: 252: {
 11406                           ;muta_messages.c: 253: MiApp_DiscardMessage();
 11407  0143D6  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 11408                           
 11409                           ;muta_messages.c: 254: }
 11410  0143DA  D026               	goto	l14441
 11411  0143DC                     l14437:
 11412                           
 11413                           ;muta_messages.c: 255: else
 11414                           ;muta_messages.c: 256: {
 11415                           ;muta_messages.c: 257: result = (rxMessage.Payload[1] == 0xff);
 11416  0143DC  0101               	movlb	1	; () banked
 11417  0143DE  EE20 F001          	lfsr	2,1
 11418  0143E2  5111               	movf	(_rxMessage+5)& (0+255),w,b
 11419  0143E4  26D9               	addwf	fsr2l,f,c
 11420  0143E6  5112               	movf	(_rxMessage+6)& (0+255),w,b
 11421  0143E8  22DA               	addwfc	fsr2h,f,c
 11422  0143EA  28DE               	incf	postinc2,w,c
 11423  0143EC  A4D8               	btfss	status,2,c
 11424  0143EE  D002               	goto	u17160
 11425  0143F0  0E01               	movlw	1
 11426  0143F2  D001               	goto	u17170
 11427  0143F4                     u17160:
 11428  0143F4  0E00               	movlw	0
 11429  0143F6                     u17170:
 11430  0143F6  0103               	movlb	3	; () banked
 11431  0143F8  6FEC               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 11432                           
 11433                           ;muta_messages.c: 258: mySecurityKey[2] = rxMessage.Payload[2];
 11434  0143FA  0101               	movlb	1	; () banked
 11435  0143FC  EE20 F002          	lfsr	2,2
 11436  014400  5111               	movf	(_rxMessage+5)& (0+255),w,b
 11437  014402  26D9               	addwf	fsr2l,f,c
 11438  014404  5112               	movf	(_rxMessage+6)& (0+255),w,b
 11439  014406  22DA               	addwfc	fsr2h,f,c
 11440  014408  50DF               	movf	indf2,w,c
 11441  01440A  0100               	movlb	0	; () banked
 11442  01440C  6FA5               	movwf	(_mySecurityKey+2)& (0+255),b
 11443                           
 11444                           ;muta_messages.c: 259: mySecurityKey[6] = rxMessage.Payload[3];
 11445  01440E  0101               	movlb	1	; () banked
 11446  014410  EE20 F003          	lfsr	2,3
 11447  014414  5111               	movf	(_rxMessage+5)& (0+255),w,b
 11448  014416  26D9               	addwf	fsr2l,f,c
 11449  014418  5112               	movf	(_rxMessage+6)& (0+255),w,b
 11450  01441A  22DA               	addwfc	fsr2h,f,c
 11451  01441C  50DF               	movf	indf2,w,c
 11452  01441E  0100               	movlb	0	; () banked
 11453  014420  6FA9               	movwf	(_mySecurityKey+6)& (0+255),b
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;muta_messages.c: 260: MiApp_DiscardMessage();
 11457  014422  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 11458                           
 11459                           ;muta_messages.c: 261: break;
 11460  014426  D004               	goto	l14445
 11461  014428                     l14441:
 11462  014428  0103               	movlb	3	; () banked
 11463  01442A  4BEA               	infsnz	do_NETWORK_REGISTER@i& (0+255),f,b
 11464  01442C  2BEB               	incf	(do_NETWORK_REGISTER@i+1)& (0+255),f,b
 11465  01442E  D7B3               	goto	l14423
 11466  014430                     l14445:
 11467                           
 11468                           ;muta_messages.c: 262: }
 11469                           ;muta_messages.c: 263: }
 11470                           ;muta_messages.c: 264: }
 11471                           ;muta_messages.c: 266: if (!result)
 11472  014430  0103               	movlb	3	; () banked
 11473  014432  51EC               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 11474  014434  0103               	movlb	3	; () banked
 11475  014436  A4D8               	btfss	status,2,c
 11476  014438  D008               	goto	l14449
 11477                           
 11478                           ; BSR set to: 3
 11479                           ;muta_messages.c: 267: m_failed_messages++;
 11480  01443A  0E01               	movlw	1
 11481  01443C  0101               	movlb	1	; () banked
 11482  01443E  271E               	addwf	_m_failed_messages& (0+255),f,b
 11483  014440  0E00               	movlw	0
 11484  014442  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 11485  014444  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 11486  014446  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 11487  014448  D007               	goto	l14451
 11488  01444A                     l14449:
 11489                           
 11490                           ;muta_messages.c: 268: else
 11491                           ;muta_messages.c: 269: m_sent_messages++;
 11492  01444A  0E01               	movlw	1
 11493  01444C  0101               	movlb	1	; () banked
 11494  01444E  2722               	addwf	_m_sent_messages& (0+255),f,b
 11495  014450  0E00               	movlw	0
 11496  014452  2323               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 11497  014454  2324               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 11498  014456  2325               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 11499  014458                     l14451:
 11500                           
 11501                           ; BSR set to: 1
 11502                           ;muta_messages.c: 270: return result;
 11503  014458  0103               	movlb	3	; () banked
 11504  01445A  51EC               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 11505                           
 11506                           ; BSR set to: 3
 11507  01445C  0012               	return	
 11508  01445E                     __end_of_do_NETWORK_REGISTER:
 11509                           	opt stack 0
 11510                           tblptru	equ	0xFF8
 11511                           tblptrh	equ	0xFF7
 11512                           tblptrl	equ	0xFF6
 11513                           tablat	equ	0xFF5
 11514                           prodh	equ	0xFF4
 11515                           prodl	equ	0xFF3
 11516                           intcon	equ	0xFF2
 11517                           intcon3	equ	0xFF0
 11518                           postinc0	equ	0xFEE
 11519                           plusw0	equ	0xFEB
 11520                           wreg	equ	0xFE8
 11521                           indf1	equ	0xFE7
 11522                           postdec1	equ	0xFE5
 11523                           fsr1h	equ	0xFE2
 11524                           fsr1l	equ	0xFE1
 11525                           indf2	equ	0xFDF
 11526                           postinc2	equ	0xFDE
 11527                           postdec2	equ	0xFDD
 11528                           plusw2	equ	0xFDB
 11529                           fsr2h	equ	0xFDA
 11530                           fsr2l	equ	0xFD9
 11531                           status	equ	0xFD8
 11532                           
 11533 ;; *************** function _memcpy *****************
 11534 ;; Defined at:
 11535 ;;		line 11 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcpy.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;  d1              2    0[BANK1 ] PTR void 
 11538 ;;		 -> decode_variable@var(10), m_var(10), TxBuffer(43), 
 11539 ;;  s1              2    2[BANK1 ] PTR const void 
 11540 ;;		 -> do_PING@buffer(21), FAILEDMSG_LABEL(4), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), 
 11541 ;;		 -> POWER_LABEL(4), TEMPERATURE_LABEL(4), LIGHT_LEVEL_LABEL(4), BATTERY_VOLTAGE_LABEL(4), 
 11542 ;;		 -> m_buffer(32), myLongAddress(4), NULL(0), RxPacket.Payload(64), 
 11543 ;;		 -> RxPacket(132), 
 11544 ;;  n               2    4[BANK1 ] unsigned int 
 11545 ;; Auto vars:     Size  Location     Type
 11546 ;;  s               2    8[BANK1 ] PTR const unsigned char 
 11547 ;;		 -> do_PING@buffer(21), FAILEDMSG_LABEL(4), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), 
 11548 ;;		 -> POWER_LABEL(4), TEMPERATURE_LABEL(4), LIGHT_LEVEL_LABEL(4), BATTERY_VOLTAGE_LABEL(4), 
 11549 ;;		 -> m_buffer(32), myLongAddress(4), NULL(0), RxPacket.Payload(64), 
 11550 ;;		 -> RxPacket(132), 
 11551 ;;  d               2    6[BANK1 ] PTR unsigned char 
 11552 ;;		 -> decode_variable@var(10), m_var(10), TxBuffer(43), 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  2    0[BANK1 ] PTR void 
 11555 ;; Registers used:
 11556 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11562 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11563 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11565 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11566 ;;Total ram usage:       10 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:    9
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_send_initial_update
 11573 ;;		_send_writables_update
 11574 ;;		_send_periodical_update
 11575 ;;		_decode_variable
 11576 ;;		_do_NETWORK_REGISTER
 11577 ;;		_do_UPDATE
 11578 ;;		_do_PING
 11579 ;; This function uses a non-reentrant model
 11580 ;;
 11581                           
 11582                           	psect	text36
 11583  016A54                     __ptext36:
 11584                           	opt stack 0
 11585  016A54                     _memcpy:
 11586                           	opt stack 20
 11587                           
 11588                           ;incstack = 0
 11589  016A54  C18C  F192         	movff	memcpy@s1,memcpy@s
 11590  016A58  C18D  F193         	movff	memcpy@s1+1,memcpy@s+1
 11591  016A5C  C18A  F190         	movff	memcpy@d1,memcpy@d
 11592  016A60  C18B  F191         	movff	memcpy@d1+1,memcpy@d+1
 11593  016A64  D01C               	goto	l12509
 11594  016A66                     l12503:
 11595  016A66  C192  FFF6         	movff	memcpy@s,tblptrl
 11596  016A6A  C193  FFF7         	movff	memcpy@s+1,tblptrh
 11597  016A6E  0E00               	movlw	low (__mediumconst shr (0+16))
 11598  016A70  6EF8               	movwf	tblptru,c
 11599  016A72  C190  FFD9         	movff	memcpy@d,fsr2l
 11600  016A76  C191  FFDA         	movff	memcpy@d+1,fsr2h
 11601  016A7A  0E0E               	movlw	(high __ramtop+-1)
 11602  016A7C  64F7               	cpfsgt	tblptrh,c
 11603  016A7E  D003               	bra	u14627
 11604  016A80  0008               	tblrd		*
 11605  016A82  50F5               	movf	tablat,w,c
 11606  016A84  D005               	bra	u14620
 11607  016A86                     u14627:
 11608  016A86  CFF6 FFE9          	movff	tblptrl,fsr0l
 11609  016A8A  CFF7 FFEA          	movff	tblptrh,fsr0h
 11610  016A8E  50EF               	movf	indf0,w,c
 11611  016A90                     u14620:
 11612  016A90  6EDF               	movwf	indf2,c
 11613  016A92  0101               	movlb	1	; () banked
 11614  016A94  4B92               	infsnz	memcpy@s& (0+255),f,b
 11615  016A96  2B93               	incf	(memcpy@s+1)& (0+255),f,b
 11616                           
 11617                           ; BSR set to: 1
 11618  016A98  0101               	movlb	1	; () banked
 11619  016A9A  4B90               	infsnz	memcpy@d& (0+255),f,b
 11620  016A9C  2B91               	incf	(memcpy@d+1)& (0+255),f,b
 11621  016A9E                     l12509:
 11622  016A9E  0101               	movlb	1	; () banked
 11623  016AA0  078E               	decf	memcpy@n& (0+255),f,b
 11624  016AA2  A0D8               	btfss	status,0,c
 11625  016AA4  078F               	decf	(memcpy@n+1)& (0+255),f,b
 11626  016AA6  0101               	movlb	1	; () banked
 11627  016AA8  298E               	incf	memcpy@n& (0+255),w,b
 11628  016AAA  E1DD               	bnz	l12503
 11629  016AAC  0101               	movlb	1	; () banked
 11630  016AAE  298F               	incf	(memcpy@n+1)& (0+255),w,b
 11631  016AB0  B4D8               	btfsc	status,2,c
 11632  016AB2  0012               	return	
 11633  016AB4  D7D8               	goto	l12503
 11634  016AB6                     __end_of_memcpy:
 11635                           	opt stack 0
 11636                           tblptru	equ	0xFF8
 11637                           tblptrh	equ	0xFF7
 11638                           tblptrl	equ	0xFF6
 11639                           tablat	equ	0xFF5
 11640                           prodh	equ	0xFF4
 11641                           prodl	equ	0xFF3
 11642                           intcon	equ	0xFF2
 11643                           intcon3	equ	0xFF0
 11644                           indf0	equ	0xFEF
 11645                           postinc0	equ	0xFEE
 11646                           plusw0	equ	0xFEB
 11647                           fsr0h	equ	0xFEA
 11648                           fsr0l	equ	0xFE9
 11649                           wreg	equ	0xFE8
 11650                           indf1	equ	0xFE7
 11651                           postdec1	equ	0xFE5
 11652                           fsr1h	equ	0xFE2
 11653                           fsr1l	equ	0xFE1
 11654                           indf2	equ	0xFDF
 11655                           postinc2	equ	0xFDE
 11656                           postdec2	equ	0xFDD
 11657                           plusw2	equ	0xFDB
 11658                           fsr2h	equ	0xFDA
 11659                           fsr2l	equ	0xFD9
 11660                           status	equ	0xFD8
 11661                           
 11662 ;; *************** function _adapt_power_level *****************
 11663 ;; Defined at:
 11664 ;;		line 332 in file "../../muta/muta_messages.c"
 11665 ;; Parameters:    Size  Location     Type
 11666 ;;  power           1    wreg     unsigned char 
 11667 ;;  minimal_rssi    1  113[BANK1 ] unsigned char 
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;  power           1    0[COMRAM] unsigned char 
 11670 ;;  m_power         1   28[BANK3 ] unsigned char 
 11671 ;;  last_good_po    1   27[BANK3 ] unsigned char 
 11672 ;;  rssi            1   26[BANK3 ] unsigned char 
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  1    wreg      unsigned char 
 11675 ;; Registers used:
 11676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11682 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11683 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0
 11684 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11685 ;;      Totals:         0       0       2       0       3       0       0       0       0       0       0       0       
      +0       0       0       0
 11686 ;;Total ram usage:        5 bytes
 11687 ;; Hardware stack levels used:    1
 11688 ;; Hardware stack levels required when called:   18
 11689 ;; This function calls:
 11690 ;;		_MiMAC_SetPower
 11691 ;;		_do_POWER_TEST
 11692 ;; This function is called by:
 11693 ;;		_main
 11694 ;; This function uses a non-reentrant model
 11695 ;;
 11696                           
 11697                           	psect	text37
 11698  0169F0                     __ptext37:
 11699                           	opt stack 0
 11700  0169F0                     _adapt_power_level:
 11701                           	opt stack 12
 11702                           
 11703                           ;muta_messages.c: 334: uint8_t m_power = 0x00;
 11704                           
 11705                           ; BSR set to: 1
 11706                           ;incstack = 0
 11707  0169F0  0E00               	movlw	0
 11708  0169F2  0103               	movlb	3	; () banked
 11709  0169F4  6FF0               	movwf	adapt_power_level@m_power& (0+255),b
 11710                           
 11711                           ; BSR set to: 3
 11712                           ;muta_messages.c: 335: uint8_t last_good_power = m_power;
 11713  0169F6  C3F0  F3EF         	movff	adapt_power_level@m_power,adapt_power_level@last_good_power
 11714  0169FA                     l14459:
 11715                           
 11716                           ; BSR set to: 3
 11717                           ;muta_messages.c: 338: {
 11718                           ;muta_messages.c: 339: MiMAC_SetPower(m_power);
 11719  0169FA  0103               	movlb	3	; () banked
 11720  0169FC  51F0               	movf	adapt_power_level@m_power& (0+255),w,b
 11721  0169FE  ECC9  F0B6         	call	_MiMAC_SetPower
 11722                           
 11723                           ;muta_messages.c: 340: _delay((unsigned long)((20)*(8000000/4000.0)));
 11724  016A02  0E34               	movlw	52
 11725  016A04  0101               	movlb	1	; () banked
 11726  016A06  6FFC               	movwf	??_adapt_power_level& (0+255),b
 11727  016A08  0EF2               	movlw	242
 11728  016A0A                     u18377:
 11729  016A0A  2EE8               	decfsz	wreg,f,c
 11730  016A0C  D7FE               	goto	u18377
 11731  016A0E  2FFC               	decfsz	??_adapt_power_level& (0+255),f,b
 11732  016A10  D7FC               	goto	u18377
 11733                           
 11734                           ;muta_messages.c: 341: rssi = do_POWER_TEST(m_power);
 11735  016A12  0103               	movlb	3	; () banked
 11736  016A14  51F0               	movf	adapt_power_level@m_power& (0+255),w,b
 11737  016A16  ECF3  F0A2         	call	_do_POWER_TEST
 11738  016A1A  0103               	movlb	3	; () banked
 11739  016A1C  6FEE               	movwf	adapt_power_level@rssi& (0+255),b
 11740                           
 11741                           ; BSR set to: 3
 11742                           ;muta_messages.c: 342: if (rssi < minimal_rssi)
 11743  016A1E  0101               	movlb	1	; () banked
 11744  016A20  51FB               	movf	adapt_power_level@minimal_rssi& (0+255),w,b
 11745  016A22  0103               	movlb	3	; () banked
 11746  016A24  5DEE               	subwf	adapt_power_level@rssi& (0+255),w,b
 11747  016A26  A0D8               	btfss	status,0,c
 11748  016A28  D00C               	goto	l1401
 11749                           
 11750                           ; BSR set to: 3
 11751                           ;muta_messages.c: 346: else
 11752                           ;muta_messages.c: 347: {
 11753                           ;muta_messages.c: 348: last_good_power = m_power;
 11754                           
 11755                           ; BSR set to: 3
 11756                           ;muta_messages.c: 345: }
 11757                           
 11758                           ; BSR set to: 3
 11759                           ;muta_messages.c: 343: {
 11760                           ;muta_messages.c: 344: break;
 11761  016A2A  C3F0  F3EF         	movff	adapt_power_level@m_power,adapt_power_level@last_good_power
 11762                           
 11763                           ; BSR set to: 3
 11764                           ;muta_messages.c: 349: if (m_power == 0x07)
 11765  016A2E  0E07               	movlw	7
 11766  016A30  0103               	movlb	3	; () banked
 11767  016A32  19F0               	xorwf	adapt_power_level@m_power& (0+255),w,b
 11768  016A34  B4D8               	btfsc	status,2,c
 11769  016A36  D005               	goto	l1401
 11770                           
 11771                           ; BSR set to: 3
 11772                           ;muta_messages.c: 353: else
 11773                           ;muta_messages.c: 354: {
 11774                           ;muta_messages.c: 355: m_power = m_power + 1;
 11775                           
 11776                           ; BSR set to: 3
 11777                           
 11778                           ; BSR set to: 3
 11779                           ;muta_messages.c: 352: }
 11780                           
 11781                           ; BSR set to: 3
 11782                           ;muta_messages.c: 350: {
 11783                           ;muta_messages.c: 351: break;
 11784  016A38  0103               	movlb	3	; () banked
 11785  016A3A  29F0               	incf	adapt_power_level@m_power& (0+255),w,b
 11786  016A3C  0103               	movlb	3	; () banked
 11787  016A3E  6FF0               	movwf	adapt_power_level@m_power& (0+255),b
 11788                           
 11789                           ; BSR set to: 3
 11790                           
 11791                           ; BSR set to: 3
 11792                           
 11793                           ; BSR set to: 3
 11794  016A40  D7DC               	goto	l14459
 11795  016A42                     l1401:
 11796                           
 11797                           ; BSR set to: 3
 11798                           ;muta_messages.c: 356: }
 11799                           ;muta_messages.c: 357: }
 11800                           ;muta_messages.c: 358: }
 11801                           ;muta_messages.c: 359: m_power = last_good_power;
 11802  016A42  C3EF  F3F0         	movff	adapt_power_level@last_good_power,adapt_power_level@m_power
 11803                           
 11804                           ; BSR set to: 3
 11805                           ;muta_messages.c: 360: MiMAC_SetPower(m_power);
 11806  016A46  0103               	movlb	3	; () banked
 11807  016A48  51F0               	movf	adapt_power_level@m_power& (0+255),w,b
 11808  016A4A  ECC9  F0B6         	call	_MiMAC_SetPower
 11809                           
 11810                           ;muta_messages.c: 361: return m_power;
 11811  016A4E  0103               	movlb	3	; () banked
 11812  016A50  51F0               	movf	adapt_power_level@m_power& (0+255),w,b
 11813  016A52  0012               	return	
 11814  016A54                     __end_of_adapt_power_level:
 11815                           	opt stack 0
 11816                           tblptru	equ	0xFF8
 11817                           tblptrh	equ	0xFF7
 11818                           tblptrl	equ	0xFF6
 11819                           tablat	equ	0xFF5
 11820                           prodh	equ	0xFF4
 11821                           prodl	equ	0xFF3
 11822                           intcon	equ	0xFF2
 11823                           intcon3	equ	0xFF0
 11824                           indf0	equ	0xFEF
 11825                           postinc0	equ	0xFEE
 11826                           plusw0	equ	0xFEB
 11827                           fsr0h	equ	0xFEA
 11828                           fsr0l	equ	0xFE9
 11829                           wreg	equ	0xFE8
 11830                           indf1	equ	0xFE7
 11831                           postdec1	equ	0xFE5
 11832                           fsr1h	equ	0xFE2
 11833                           fsr1l	equ	0xFE1
 11834                           indf2	equ	0xFDF
 11835                           postinc2	equ	0xFDE
 11836                           postdec2	equ	0xFDD
 11837                           plusw2	equ	0xFDB
 11838                           fsr2h	equ	0xFDA
 11839                           fsr2l	equ	0xFD9
 11840                           status	equ	0xFD8
 11841                           
 11842 ;; *************** function _do_POWER_TEST *****************
 11843 ;; Defined at:
 11844 ;;		line 274 in file "../../muta/muta_messages.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;  power_lvl       1    wreg     unsigned char 
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;  power_lvl       1   20[BANK3 ] unsigned char 
 11849 ;;  i               2   21[BANK3 ] unsigned int 
 11850 ;;  rssi            1   23[BANK3 ] unsigned char 
 11851 ;;  shortaddress    2   24[BANK3 ] unsigned char [2]
 11852 ;;  result          1   19[BANK3 ] unsigned char 
 11853 ;; Return value:  Size  Location     Type
 11854 ;;                  1    wreg      unsigned char 
 11855 ;; Registers used:
 11856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11857 ;; Tracked objects:
 11858 ;;		On entry : 0/0
 11859 ;;		On exit  : 0/0
 11860 ;;		Unchanged: 0/0
 11861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11863 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 11864 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11865 ;;      Totals:         0       0       1       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 11866 ;;Total ram usage:        8 bytes
 11867 ;; Hardware stack levels used:    1
 11868 ;; Hardware stack levels required when called:   17
 11869 ;; This function calls:
 11870 ;;		_MiApp_DiscardMessage
 11871 ;;		_MiApp_MessageAvailable
 11872 ;;		_MiApp_UnicastAddress
 11873 ;; This function is called by:
 11874 ;;		_adapt_power_level
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           	psect	text38
 11879  0145E6                     __ptext38:
 11880                           	opt stack 0
 11881  0145E6                     _do_POWER_TEST:
 11882                           	opt stack 12
 11883                           
 11884                           ; BSR set to: 3
 11885                           ;incstack = 0
 11886                           ;do_POWER_TEST@power_lvl stored from wreg
 11887  0145E6  0103               	movlb	3	; () banked
 11888  0145E8  6FE8               	movwf	do_POWER_TEST@power_lvl& (0+255),b
 11889                           
 11890                           ;muta_messages.c: 276: uint8_t shortaddress[2];
 11891                           ;muta_messages.c: 277: {TxData = 11;};
 11892  0145EA  0E0B               	movlw	11
 11893  0145EC  0101               	movlb	1	; () banked
 11894  0145EE  6F46               	movwf	_TxData& (0+255),b
 11895                           
 11896                           ; BSR set to: 1
 11897                           ;muta_messages.c: 278: TxBuffer[TxData++] = 01;
 11898  0145F0  0101               	movlb	1	; () banked
 11899  0145F2  5146               	movf	_TxData& (0+255),w,b
 11900  0145F4  0D01               	mullw	1
 11901  0145F6  0E4E               	movlw	low _TxBuffer
 11902  0145F8  24F3               	addwf	prodl,w,c
 11903  0145FA  6ED9               	movwf	fsr2l,c
 11904  0145FC  0E01               	movlw	high _TxBuffer
 11905  0145FE  20F4               	addwfc	prodh,w,c
 11906  014600  6EDA               	movwf	fsr2h,c
 11907  014602  0E01               	movlw	1
 11908  014604  6EDF               	movwf	indf2,c
 11909                           
 11910                           ; BSR set to: 1
 11911  014606  0101               	movlb	1	; () banked
 11912  014608  2B46               	incf	_TxData& (0+255),f,b
 11913                           
 11914                           ; BSR set to: 1
 11915                           ;muta_messages.c: 279: TxBuffer[TxData++] = power_lvl;
 11916  01460A  0101               	movlb	1	; () banked
 11917  01460C  5146               	movf	_TxData& (0+255),w,b
 11918  01460E  0D01               	mullw	1
 11919  014610  0E4E               	movlw	low _TxBuffer
 11920  014612  24F3               	addwf	prodl,w,c
 11921  014614  6ED9               	movwf	fsr2l,c
 11922  014616  0E01               	movlw	high _TxBuffer
 11923  014618  20F4               	addwfc	prodh,w,c
 11924  01461A  6EDA               	movwf	fsr2h,c
 11925  01461C  C3E8  FFDF         	movff	do_POWER_TEST@power_lvl,indf2
 11926                           
 11927                           ; BSR set to: 1
 11928  014620  0101               	movlb	1	; () banked
 11929  014622  2B46               	incf	_TxData& (0+255),f,b
 11930                           
 11931                           ; BSR set to: 1
 11932                           ;muta_messages.c: 280: if (myShortAddress.v[0] == 0x00)
 11933  014624  0101               	movlb	1	; () banked
 11934  014626  5185               	movf	_myShortAddress& (0+255),w,b
 11935  014628  A4D8               	btfss	status,2,c
 11936  01462A  D00D               	goto	l13585
 11937                           
 11938                           ; BSR set to: 1
 11939                           ;muta_messages.c: 281: {
 11940                           ;muta_messages.c: 282: if (myShortAddress.v[1] == 0x00)
 11941  01462C  0101               	movlb	1	; () banked
 11942  01462E  5186               	movf	(_myShortAddress+1)& (0+255),w,b
 11943  014630  A4D8               	btfss	status,2,c
 11944  014632  D002               	goto	l13583
 11945                           
 11946                           ; BSR set to: 1
 11947                           ;muta_messages.c: 283: {
 11948                           ;muta_messages.c: 284: return 0;
 11949  014634  0E00               	movlw	0
 11950                           
 11951                           ; BSR set to: 1
 11952  014636  0012               	return	
 11953  014638                     l13583:
 11954                           
 11955                           ; BSR set to: 1
 11956                           ;muta_messages.c: 285: }
 11957                           ;muta_messages.c: 286: shortaddress[0] = 0x00;
 11958  014638  0E00               	movlw	0
 11959  01463A  0103               	movlb	3	; () banked
 11960  01463C  6FEC               	movwf	do_POWER_TEST@shortaddress& (0+255),b
 11961                           
 11962                           ;muta_messages.c: 287: shortaddress[1] = 0x00;
 11963  01463E  0E00               	movlw	0
 11964  014640  0103               	movlb	3	; () banked
 11965  014642  6FED               	movwf	(do_POWER_TEST@shortaddress+1)& (0+255),b
 11966                           
 11967                           ;muta_messages.c: 288: }
 11968  014644  D005               	goto	l13589
 11969  014646                     l13585:
 11970                           
 11971                           ;muta_messages.c: 289: else
 11972                           ;muta_messages.c: 290: {
 11973                           ;muta_messages.c: 291: shortaddress[0] = 0x00;
 11974  014646  0E00               	movlw	0
 11975  014648  0103               	movlb	3	; () banked
 11976  01464A  6FEC               	movwf	do_POWER_TEST@shortaddress& (0+255),b
 11977                           
 11978                           ; BSR set to: 3
 11979                           ;muta_messages.c: 292: shortaddress[1] = myShortAddress.v[1];
 11980  01464C  C186  F3ED         	movff	_myShortAddress+1,do_POWER_TEST@shortaddress+1
 11981  014650                     l13589:
 11982                           
 11983                           ; BSR set to: 3
 11984                           ;muta_messages.c: 293: }
 11985                           ;muta_messages.c: 294: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 1);
 11986  014650  0EEC               	movlw	low do_POWER_TEST@shortaddress
 11987  014652  0101               	movlb	1	; () banked
 11988  014654  6FEE               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 11989  014656  0E03               	movlw	high do_POWER_TEST@shortaddress
 11990  014658  0101               	movlb	1	; () banked
 11991  01465A  6FEF               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 11992  01465C  0E00               	movlw	0
 11993  01465E  0101               	movlb	1	; () banked
 11994  014660  6FF0               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 11995  014662  0E01               	movlw	1
 11996  014664  0101               	movlb	1	; () banked
 11997  014666  6FF1               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 11998  014668  EC4A  F092         	call	_MiApp_UnicastAddress	;wreg free
 11999  01466C  0103               	movlb	3	; () banked
 12000  01466E  6FE7               	movwf	do_POWER_TEST@result& (0+255),b
 12001                           
 12002                           ; BSR set to: 3
 12003                           ;muta_messages.c: 295: if (!result)
 12004  014670  0103               	movlb	3	; () banked
 12005  014672  51E7               	movf	do_POWER_TEST@result& (0+255),w,b
 12006  014674  0103               	movlb	3	; () banked
 12007  014676  A4D8               	btfss	status,2,c
 12008  014678  D009               	goto	l13601
 12009                           
 12010                           ; BSR set to: 3
 12011                           ;muta_messages.c: 296: {
 12012                           ;muta_messages.c: 297: m_failed_messages++;
 12013  01467A  0E01               	movlw	1
 12014  01467C  0101               	movlb	1	; () banked
 12015  01467E  271E               	addwf	_m_failed_messages& (0+255),f,b
 12016  014680  0E00               	movlw	0
 12017  014682  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 12018  014684  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 12019  014686  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 12020                           
 12021                           ; BSR set to: 1
 12022                           ;muta_messages.c: 298: return 0;
 12023  014688  0E00               	movlw	0
 12024                           
 12025                           ; BSR set to: 1
 12026                           ;muta_messages.c: 299: }
 12027                           
 12028                           ; BSR set to: 1
 12029  01468A  0012               	return	
 12030  01468C                     l13601:
 12031                           
 12032                           ;muta_messages.c: 300: else
 12033                           ;muta_messages.c: 301: {
 12034                           ;muta_messages.c: 302: unsigned int i;
 12035                           ;muta_messages.c: 303: uint8_t rssi = 0;
 12036  01468C  0E00               	movlw	0
 12037  01468E  0103               	movlb	3	; () banked
 12038  014690  6FEB               	movwf	do_POWER_TEST@rssi& (0+255),b
 12039                           
 12040                           ;muta_messages.c: 304: for (i=0; i<100; i++)
 12041  014692  0E00               	movlw	0
 12042  014694  0103               	movlb	3	; () banked
 12043  014696  6FEA               	movwf	(do_POWER_TEST@i+1)& (0+255),b
 12044  014698  0E00               	movlw	0
 12045  01469A  6FE9               	movwf	do_POWER_TEST@i& (0+255),b
 12046  01469C                     l13603:
 12047                           
 12048                           ; BSR set to: 3
 12049  01469C  0103               	movlb	3	; () banked
 12050  01469E  51EA               	movf	(do_POWER_TEST@i+1)& (0+255),w,b
 12051  0146A0  E13C               	bnz	l13627
 12052  0146A2  0E64               	movlw	100
 12053  0146A4  0103               	movlb	3	; () banked
 12054  0146A6  5DE9               	subwf	do_POWER_TEST@i& (0+255),w,b
 12055  0146A8  B0D8               	btfsc	status,0,c
 12056  0146AA  D037               	goto	l13627
 12057                           
 12058                           ; BSR set to: 3
 12059                           ;muta_messages.c: 305: {
 12060                           ;muta_messages.c: 306: _delay((unsigned long)((10)*(8000000/4000.0)));
 12061                           
 12062                           ; BSR set to: 3
 12063                           
 12064                           ; BSR set to: 3
 12065  0146AC  0E1A               	movlw	26
 12066  0146AE  0101               	movlb	1	; () banked
 12067  0146B0  6FFA               	movwf	??_do_POWER_TEST& (0+255),b
 12068  0146B2  0EF8               	movlw	248
 12069  0146B4                     u18387:
 12070  0146B4  2EE8               	decfsz	wreg,f,c
 12071  0146B6  D7FE               	goto	u18387
 12072  0146B8  2FFA               	decfsz	??_do_POWER_TEST& (0+255),f,b
 12073  0146BA  D7FC               	goto	u18387
 12074  0146BC  D000               	nop2	
 12075                           
 12076                           ;muta_messages.c: 307: if(MiApp_MessageAvailable())
 12077  0146BE  ECE2  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 12078  0146C2  0900               	iorlw	0
 12079  0146C4  B4D8               	btfsc	status,2,c
 12080  0146C6  D025               	goto	l13623
 12081                           
 12082                           ;muta_messages.c: 308: {
 12083                           ;muta_messages.c: 310: last_rssi = rxMessage.PacketRSSI;
 12084  0146C8  C114  F148         	movff	_rxMessage+8,_last_rssi
 12085                           
 12086                           ;muta_messages.c: 311: if (rxMessage.Payload[0] != 01 || rxMessage.Payload[1] != power_l
      +                          vl)
 12087  0146CC  C111  FFD9         	movff	_rxMessage+5,fsr2l
 12088  0146D0  C112  FFDA         	movff	_rxMessage+6,fsr2h
 12089  0146D4  04DE               	decf	postinc2,w,c
 12090  0146D6  A4D8               	btfss	status,2,c
 12091  0146D8  D00C               	goto	l13617
 12092  0146DA  0101               	movlb	1	; () banked
 12093  0146DC  EE20 F001          	lfsr	2,1
 12094  0146E0  5111               	movf	(_rxMessage+5)& (0+255),w,b
 12095  0146E2  26D9               	addwf	fsr2l,f,c
 12096  0146E4  5112               	movf	(_rxMessage+6)& (0+255),w,b
 12097  0146E6  22DA               	addwfc	fsr2h,f,c
 12098  0146E8  0103               	movlb	3	; () banked
 12099  0146EA  51E8               	movf	do_POWER_TEST@power_lvl& (0+255),w,b
 12100  0146EC  18DE               	xorwf	postinc2,w,c
 12101  0146EE  B4D8               	btfsc	status,2,c
 12102  0146F0  D003               	goto	l13619
 12103  0146F2                     l13617:
 12104                           
 12105                           ;muta_messages.c: 312: {
 12106                           ;muta_messages.c: 313: MiApp_DiscardMessage();
 12107  0146F2  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 12108                           
 12109                           ;muta_messages.c: 314: }
 12110  0146F6  D00D               	goto	l13623
 12111  0146F8                     l13619:
 12112                           
 12113                           ;muta_messages.c: 315: else
 12114                           ;muta_messages.c: 316: {
 12115                           ;muta_messages.c: 317: rssi = (rxMessage.Payload[2]);
 12116  0146F8  0101               	movlb	1	; () banked
 12117  0146FA  EE20 F002          	lfsr	2,2
 12118  0146FE  5111               	movf	(_rxMessage+5)& (0+255),w,b
 12119  014700  26D9               	addwf	fsr2l,f,c
 12120  014702  5112               	movf	(_rxMessage+6)& (0+255),w,b
 12121  014704  22DA               	addwfc	fsr2h,f,c
 12122  014706  50DF               	movf	indf2,w,c
 12123  014708  0103               	movlb	3	; () banked
 12124  01470A  6FEB               	movwf	do_POWER_TEST@rssi& (0+255),b
 12125                           
 12126                           ; BSR set to: 3
 12127                           ;muta_messages.c: 318: MiApp_DiscardMessage();
 12128  01470C  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 12129                           
 12130                           ;muta_messages.c: 319: break;
 12131  014710  D004               	goto	l13627
 12132  014712                     l13623:
 12133  014712  0103               	movlb	3	; () banked
 12134  014714  4BE9               	infsnz	do_POWER_TEST@i& (0+255),f,b
 12135  014716  2BEA               	incf	(do_POWER_TEST@i+1)& (0+255),f,b
 12136  014718  D7C1               	goto	l13603
 12137  01471A                     l13627:
 12138                           
 12139                           ;muta_messages.c: 320: }
 12140                           ;muta_messages.c: 321: }
 12141                           ;muta_messages.c: 322: }
 12142                           ;muta_messages.c: 324: if (rssi == 0)
 12143  01471A  0103               	movlb	3	; () banked
 12144  01471C  51EB               	movf	do_POWER_TEST@rssi& (0+255),w,b
 12145  01471E  0103               	movlb	3	; () banked
 12146  014720  A4D8               	btfss	status,2,c
 12147  014722  D008               	goto	l13631
 12148                           
 12149                           ; BSR set to: 3
 12150                           ;muta_messages.c: 325: m_failed_messages++;
 12151  014724  0E01               	movlw	1
 12152  014726  0101               	movlb	1	; () banked
 12153  014728  271E               	addwf	_m_failed_messages& (0+255),f,b
 12154  01472A  0E00               	movlw	0
 12155  01472C  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 12156  01472E  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 12157  014730  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 12158  014732  D007               	goto	l13633
 12159  014734                     l13631:
 12160                           
 12161                           ;muta_messages.c: 326: else
 12162                           ;muta_messages.c: 327: m_sent_messages++;
 12163  014734  0E01               	movlw	1
 12164  014736  0101               	movlb	1	; () banked
 12165  014738  2722               	addwf	_m_sent_messages& (0+255),f,b
 12166  01473A  0E00               	movlw	0
 12167  01473C  2323               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 12168  01473E  2324               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 12169  014740  2325               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 12170  014742                     l13633:
 12171                           
 12172                           ; BSR set to: 1
 12173                           ;muta_messages.c: 328: return rssi;
 12174  014742  0103               	movlb	3	; () banked
 12175  014744  51EB               	movf	do_POWER_TEST@rssi& (0+255),w,b
 12176                           
 12177                           ; BSR set to: 3
 12178  014746  0012               	return	
 12179  014748                     __end_of_do_POWER_TEST:
 12180                           	opt stack 0
 12181                           tblptru	equ	0xFF8
 12182                           tblptrh	equ	0xFF7
 12183                           tblptrl	equ	0xFF6
 12184                           tablat	equ	0xFF5
 12185                           prodh	equ	0xFF4
 12186                           prodl	equ	0xFF3
 12187                           intcon	equ	0xFF2
 12188                           intcon3	equ	0xFF0
 12189                           indf0	equ	0xFEF
 12190                           postinc0	equ	0xFEE
 12191                           plusw0	equ	0xFEB
 12192                           fsr0h	equ	0xFEA
 12193                           fsr0l	equ	0xFE9
 12194                           wreg	equ	0xFE8
 12195                           indf1	equ	0xFE7
 12196                           postdec1	equ	0xFE5
 12197                           fsr1h	equ	0xFE2
 12198                           fsr1l	equ	0xFE1
 12199                           indf2	equ	0xFDF
 12200                           postinc2	equ	0xFDE
 12201                           postdec2	equ	0xFDD
 12202                           plusw2	equ	0xFDB
 12203                           fsr2h	equ	0xFDA
 12204                           fsr2l	equ	0xFD9
 12205                           status	equ	0xFD8
 12206                           
 12207 ;; *************** function _MiMAC_SetPower *****************
 12208 ;; Defined at:
 12209 ;;		line 544 in file "src/miwi/drv_mrf_miwi_89xa.c"
 12210 ;; Parameters:    Size  Location     Type
 12211 ;;  outputPower     1    wreg     unsigned char 
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;  outputPower     1    8[BANK1 ] unsigned char 
 12214 ;; Return value:  Size  Location     Type
 12215 ;;                  1    wreg      unsigned char 
 12216 ;; Registers used:
 12217 ;;		wreg, status,2, status,0, cstack
 12218 ;; Tracked objects:
 12219 ;;		On entry : 0/0
 12220 ;;		On exit  : 0/0
 12221 ;;		Unchanged: 0/0
 12222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12224 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12225 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12226 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12227 ;;Total ram usage:        3 bytes
 12228 ;; Hardware stack levels used:    1
 12229 ;; Hardware stack levels required when called:   11
 12230 ;; This function calls:
 12231 ;;		_RegisterSet
 12232 ;; This function is called by:
 12233 ;;		_main
 12234 ;;		_update_variable
 12235 ;;		_adapt_power_level
 12236 ;; This function uses a non-reentrant model
 12237 ;;
 12238                           
 12239                           	psect	text39
 12240  016D92                     __ptext39:
 12241                           	opt stack 0
 12242  016D92                     _MiMAC_SetPower:
 12243                           	opt stack 17
 12244                           
 12245                           ;incstack = 0
 12246                           ;MiMAC_SetPower@outputPower stored from wreg
 12247  016D92  0101               	movlb	1	; () banked
 12248  016D94  6F92               	movwf	MiMAC_SetPower@outputPower& (0+255),b
 12249                           
 12250                           ;drv_mrf_miwi_89xa.c: 546: if( outputPower > 0x07 )
 12251  016D96  0E07               	movlw	7
 12252  016D98  0101               	movlb	1	; () banked
 12253  016D9A  6592               	cpfsgt	MiMAC_SetPower@outputPower& (0+255),b
 12254  016D9C  D001               	goto	l12583
 12255  016D9E  0012               	return	
 12256  016DA0                     l12583:
 12257                           
 12258                           ; BSR set to: 1
 12259                           ;drv_mrf_miwi_89xa.c: 549: }
 12260                           ;drv_mrf_miwi_89xa.c: 550: RegisterSet(0x3400 | ((0xF0 | (0x00<<1)) & 0xF0) | (outputPow
      +                          er<<1));
 12261  016DA0  0101               	movlb	1	; () banked
 12262  016DA2  5192               	movf	MiMAC_SetPower@outputPower& (0+255),w,b
 12263  016DA4  0101               	movlb	1	; () banked
 12264  016DA6  6F90               	movwf	??_MiMAC_SetPower& (0+255),b
 12265  016DA8  6B91               	clrf	(??_MiMAC_SetPower+1)& (0+255),b
 12266  016DAA  90D8               	bcf	status,0,c
 12267  016DAC  0101               	movlb	1	; () banked
 12268  016DAE  3790               	rlcf	??_MiMAC_SetPower& (0+255),f,b
 12269  016DB0  3791               	rlcf	(??_MiMAC_SetPower+1)& (0+255),f,b
 12270  016DB2  0EF0               	movlw	240
 12271  016DB4  0101               	movlb	1	; () banked
 12272  016DB6  1190               	iorwf	??_MiMAC_SetPower& (0+255),w,b
 12273  016DB8  0101               	movlb	1	; () banked
 12274  016DBA  6F8C               	movwf	RegisterSet@setting& (0+255),b
 12275  016DBC  0E34               	movlw	52
 12276  016DBE  0101               	movlb	1	; () banked
 12277  016DC0  1191               	iorwf	(??_MiMAC_SetPower+1)& (0+255),w,b
 12278  016DC2  0101               	movlb	1	; () banked
 12279  016DC4  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 12280  016DC6  EC03  F0B6         	call	_RegisterSet	;wreg free
 12281  016DCA  0012               	return	
 12282  016DCC                     __end_of_MiMAC_SetPower:
 12283                           	opt stack 0
 12284                           tblptru	equ	0xFF8
 12285                           tblptrh	equ	0xFF7
 12286                           tblptrl	equ	0xFF6
 12287                           tablat	equ	0xFF5
 12288                           prodh	equ	0xFF4
 12289                           prodl	equ	0xFF3
 12290                           intcon	equ	0xFF2
 12291                           intcon3	equ	0xFF0
 12292                           indf0	equ	0xFEF
 12293                           postinc0	equ	0xFEE
 12294                           plusw0	equ	0xFEB
 12295                           fsr0h	equ	0xFEA
 12296                           fsr0l	equ	0xFE9
 12297                           wreg	equ	0xFE8
 12298                           indf1	equ	0xFE7
 12299                           postdec1	equ	0xFE5
 12300                           fsr1h	equ	0xFE2
 12301                           fsr1l	equ	0xFE1
 12302                           indf2	equ	0xFDF
 12303                           postinc2	equ	0xFDE
 12304                           postdec2	equ	0xFDD
 12305                           plusw2	equ	0xFDB
 12306                           fsr2h	equ	0xFDA
 12307                           fsr2l	equ	0xFD9
 12308                           status	equ	0xFD8
 12309                           
 12310 ;; *************** function _SYSTEM_Initialize *****************
 12311 ;; Defined at:
 12312 ;;		line 58 in file "src/18F27J53/system.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;		None
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;		None
 12317 ;; Return value:  Size  Location     Type
 12318 ;;		None               void
 12319 ;; Registers used:
 12320 ;;		wreg, status,2, cstack
 12321 ;; Tracked objects:
 12322 ;;		On entry : 0/0
 12323 ;;		On exit  : 0/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12330 ;;Total ram usage:        0 bytes
 12331 ;; Hardware stack levels used:    1
 12332 ;; Hardware stack levels required when called:   10
 12333 ;; This function calls:
 12334 ;;		_RtccWrOn
 12335 ;; This function is called by:
 12336 ;;		_main
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340                           	psect	text40
 12341  0154D0                     __ptext40:
 12342                           	opt stack 0
 12343  0154D0                     _SYSTEM_Initialize:
 12344                           	opt stack 20
 12345                           
 12346                           ;system.c: 61: PLLEN = 0;
 12347                           
 12348                           ;incstack = 0
 12349  0154D0  9C9B               	bcf	3995,6,c	;volatile
 12350                           
 12351                           ;system.c: 64: OSCCONbits.IRCF = 0b111;
 12352  0154D2  88D3               	bsf	4051,4,c	;volatile
 12353  0154D4  8AD3               	bsf	4051,5,c	;volatile
 12354  0154D6  8CD3               	bsf	4051,6,c	;volatile
 12355                           
 12356                           ;system.c: 67: ANCON0 = 0xFF;
 12357  0154D8  010F               	movlb	15	; () banked
 12358  0154DA  6948               	setf	72,b	;volatile
 12359                           
 12360                           ; BSR set to: 15
 12361                           ;system.c: 68: ANCON1 = 0x1F;
 12362  0154DC  0E1F               	movlw	31
 12363  0154DE  010F               	movlb	15	; () banked
 12364  0154E0  6F49               	movwf	73,b	;volatile
 12365                           
 12366                           ;system.c: 71: TRISA = 0;
 12367  0154E2  0E00               	movlw	0
 12368  0154E4  6E92               	movwf	3986,c	;volatile
 12369                           
 12370                           ;system.c: 72: TRISB = 0;
 12371  0154E6  0E00               	movlw	0
 12372  0154E8  6E93               	movwf	3987,c	;volatile
 12373                           
 12374                           ;system.c: 73: TRISC = 0;
 12375  0154EA  0E00               	movlw	0
 12376  0154EC  6E94               	movwf	3988,c	;volatile
 12377                           
 12378                           ; BSR set to: 15
 12379                           ;system.c: 75: LATCbits.LATC0 = 1;
 12380  0154EE  808B               	bsf	3979,0,c	;volatile
 12381                           
 12382                           ; BSR set to: 15
 12383                           ;system.c: 77: UPUEN = 0;
 12384  0154F0  010F               	movlb	15	; () banked
 12385  0154F2  9939               	bcf	57,4,b	;volatile
 12386                           
 12387                           ; BSR set to: 15
 12388                           ;system.c: 78: UCONbits.USBEN = 0;
 12389  0154F4  9665               	bcf	3941,3,c	;volatile
 12390                           
 12391                           ; BSR set to: 15
 12392                           ;system.c: 80: RCONbits.IPEN = 1;
 12393  0154F6  8ED0               	bsf	4048,7,c	;volatile
 12394                           
 12395                           ;system.c: 83: ALRMCFGbits.AMASK = 0b0011;
 12396  0154F8  010F               	movlb	15	; () banked
 12397  0154FA  5147               	movf	71,w,b	;volatile
 12398  0154FC  0BC3               	andlw	-61
 12399  0154FE  090C               	iorlw	12
 12400  015500  6F47               	movwf	71,b	;volatile
 12401                           
 12402                           ; BSR set to: 15
 12403                           ;system.c: 85: ALRMCFGbits.CHIME = 1;
 12404  015502  010F               	movlb	15	; () banked
 12405  015504  8D47               	bsf	71,6,b	;volatile
 12406                           
 12407                           ; BSR set to: 15
 12408                           ;system.c: 86: ALRMCFGbits.ALRMEN = 1;
 12409  015506  010F               	movlb	15	; () banked
 12410  015508  8F47               	bsf	71,7,b	;volatile
 12411                           
 12412                           ;system.c: 91: RTCCFG = 0x0;
 12413  01550A  0E00               	movlw	0
 12414  01550C  010F               	movlb	15	; () banked
 12415  01550E  6F3F               	movwf	63,b	;volatile
 12416                           
 12417                           ;system.c: 92: RTCCAL = 0x00;
 12418  015510  0E00               	movlw	0
 12419  015512  010F               	movlb	15	; () banked
 12420  015514  6F3E               	movwf	62,b	;volatile
 12421                           
 12422                           ; BSR set to: 15
 12423                           ;system.c: 93: if((RTCCFGbits.RTCEN))
 12424  015516  010F               	movlb	15	; () banked
 12425  015518  AF3F               	btfss	63,7,b	;volatile
 12426  01551A  D006               	goto	l13847
 12427                           
 12428                           ; BSR set to: 15
 12429                           ;system.c: 94: {
 12430                           ;system.c: 95: if(!(RTCCFGbits.RTCWREN))
 12431  01551C  010F               	movlb	15	; () banked
 12432  01551E  AB3F               	btfss	63,5,b	;volatile
 12433                           
 12434                           ; BSR set to: 15
 12435                           ;system.c: 96: {
 12436                           ;system.c: 97: RtccWrOn();
 12437  015520  ECD9  F0B7         	call	_RtccWrOn	;wreg free
 12438                           
 12439                           ;system.c: 98: }
 12440                           ;system.c: 99: (RTCCFGbits.RTCEN=0);
 12441  015524  010F               	movlb	15	; () banked
 12442  015526  9F3F               	bcf	63,7,b	;volatile
 12443  015528                     l13847:
 12444                           
 12445                           ; BSR set to: 15
 12446                           ;system.c: 100: }
 12447                           ;system.c: 101: (RTCCFGbits.RTCWREN = 0);
 12448  015528  010F               	movlb	15	; () banked
 12449  01552A  9B3F               	bcf	63,5,b	;volatile
 12450                           
 12451                           ;system.c: 102: RtccWrOn();
 12452  01552C  ECD9  F0B7         	call	_RtccWrOn	;wreg free
 12453                           
 12454                           ;system.c: 103: (RTCCFGbits.RTCEN=1);
 12455  015530  010F               	movlb	15	; () banked
 12456  015532  8F3F               	bsf	63,7,b	;volatile
 12457                           
 12458                           ; BSR set to: 15
 12459                           ;system.c: 104: (ALRMCFGbits.ALRMEN=1);
 12460  015534  010F               	movlb	15	; () banked
 12461  015536  8F47               	bsf	71,7,b	;volatile
 12462                           
 12463                           ; BSR set to: 15
 12464                           ;system.c: 105: RTCCFGbits.RTCPTR0 = 0;
 12465  015538  010F               	movlb	15	; () banked
 12466  01553A  913F               	bcf	63,0,b	;volatile
 12467                           
 12468                           ; BSR set to: 15
 12469                           ;system.c: 106: RTCCFGbits.RTCPTR1 = 0;
 12470  01553C  010F               	movlb	15	; () banked
 12471  01553E  933F               	bcf	63,1,b	;volatile
 12472                           
 12473                           ; BSR set to: 15
 12474                           ;system.c: 107: RTCVALHbits.RTCVALH = 0x00;
 12475  015540  0E00               	movlw	0
 12476  015542  010F               	movlb	15	; () banked
 12477  015544  6F3B               	movwf	59,b	;volatile
 12478                           
 12479                           ; BSR set to: 15
 12480                           ;system.c: 108: RTCVALLbits.RTCVALL = 0x00;
 12481  015546  0E00               	movlw	0
 12482  015548  010F               	movlb	15	; () banked
 12483  01554A  6F3A               	movwf	58,b	;volatile
 12484                           
 12485                           ; BSR set to: 15
 12486                           ;system.c: 109: (RTCCFGbits.RTCWREN = 0);
 12487  01554C  010F               	movlb	15	; () banked
 12488  01554E  9B3F               	bcf	63,5,b	;volatile
 12489                           
 12490                           ; BSR set to: 15
 12491                           ;system.c: 112: IPR3bits.RTCCIP = 0;
 12492  015550  90A5               	bcf	4005,0,c	;volatile
 12493                           
 12494                           ; BSR set to: 15
 12495                           ;system.c: 113: PIR3bits.RTCCIF = 0;
 12496  015552  90A4               	bcf	4004,0,c	;volatile
 12497                           
 12498                           ; BSR set to: 15
 12499                           ;system.c: 114: PIE3bits.RTCCIE = 1;
 12500  015554  80A3               	bsf	4003,0,c	;volatile
 12501                           
 12502                           ; BSR set to: 15
 12503                           ;system.c: 119: TRISBbits.TRISB4 = 1;
 12504  015556  8893               	bsf	3987,4,c	;volatile
 12505                           
 12506                           ; BSR set to: 15
 12507                           ;system.c: 120: TRISBbits.TRISB5 = 1;
 12508  015558  8A93               	bsf	3987,5,c	;volatile
 12509                           
 12510                           ; BSR set to: 15
 12511                           ;system.c: 122: SSP1ADD = 19;
 12512  01555A  0E13               	movlw	19
 12513  01555C  6EC8               	movwf	4040,c	;volatile
 12514                           
 12515                           ; BSR set to: 15
 12516                           ;system.c: 128: LATAbits.LATA6 = 0;
 12517  01555E  9C89               	bcf	3977,6,c	;volatile
 12518                           
 12519                           ; BSR set to: 15
 12520                           ;system.c: 131: ADCON0bits.ADON = 0;
 12521  015560  90C2               	bcf	4034,0,c	;volatile
 12522                           
 12523                           ; BSR set to: 15
 12524                           ;system.c: 134: TRISAbits.TRISA0 = 1;
 12525  015562  8092               	bsf	3986,0,c	;volatile
 12526                           
 12527                           ; BSR set to: 15
 12528                           ;system.c: 136: ANCON0bits.PCFG0 = 0;
 12529  015564  010F               	movlb	15	; () banked
 12530  015566  9148               	bcf	72,0,b	;volatile
 12531                           
 12532                           ; BSR set to: 15
 12533                           ;system.c: 139: TRISAbits.TRISA1 = 1;
 12534  015568  8292               	bsf	3986,1,c	;volatile
 12535                           
 12536                           ; BSR set to: 15
 12537                           ;system.c: 141: ANCON0bits.PCFG1 = 0;
 12538  01556A  010F               	movlb	15	; () banked
 12539  01556C  9348               	bcf	72,1,b	;volatile
 12540                           
 12541                           ; BSR set to: 15
 12542                           ;system.c: 143: ANCON1bits.VBGEN = 0;
 12543  01556E  010F               	movlb	15	; () banked
 12544  015570  9F49               	bcf	73,7,b	;volatile
 12545                           
 12546                           ; BSR set to: 15
 12547                           ;system.c: 148: ADCON0bits.VCFG0 = 0;
 12548  015572  9CC2               	bcf	4034,6,c	;volatile
 12549                           
 12550                           ; BSR set to: 15
 12551                           ;system.c: 149: ADCON0bits.VCFG1 = 0;
 12552  015574  9EC2               	bcf	4034,7,c	;volatile
 12553                           
 12554                           ; BSR set to: 15
 12555                           ;system.c: 151: ADCON1bits.ADCS = 0b001;
 12556  015576  50C1               	movf	4033,w,c	;volatile
 12557  015578  0BF8               	andlw	-8
 12558  01557A  0901               	iorlw	1
 12559  01557C  6EC1               	movwf	4033,c	;volatile
 12560                           
 12561                           ; BSR set to: 15
 12562                           ;system.c: 153: ADCON1bits.ACQT = 0b111;
 12563  01557E  86C1               	bsf	4033,3,c	;volatile
 12564  015580  88C1               	bsf	4033,4,c	;volatile
 12565  015582  8AC1               	bsf	4033,5,c	;volatile
 12566                           
 12567                           ; BSR set to: 15
 12568                           ;system.c: 154: ADCON1bits.ADFM = 1;
 12569  015584  8EC1               	bsf	4033,7,c	;volatile
 12570                           
 12571                           ; BSR set to: 15
 12572                           ;system.c: 160: EECON2 = 0x55;
 12573  015586  0E55               	movlw	85
 12574  015588  6EA7               	movwf	4007,c	;volatile
 12575                           
 12576                           ; BSR set to: 15
 12577                           ;system.c: 161: EECON2 = 0xAA;
 12578  01558A  0EAA               	movlw	170
 12579  01558C  6EA7               	movwf	4007,c	;volatile
 12580                           
 12581                           ; BSR set to: 15
 12582                           ;system.c: 162: PPSCONbits.IOLOCK = 0;
 12583  01558E  010E               	movlb	14	; () banked
 12584  015590  91BF               	bcf	191,0,b	;volatile
 12585                           
 12586                           ; BSR set to: 14
 12587                           ;system.c: 165: RPINR1 = 13;
 12588  015592  0E0D               	movlw	13
 12589  015594  010E               	movlb	14	; () banked
 12590  015596  6FE1               	movwf	225,b	;volatile
 12591                           
 12592                           ; BSR set to: 14
 12593                           ;system.c: 166: RPINR21 = 12;
 12594  015598  0E0C               	movlw	12
 12595  01559A  010E               	movlb	14	; () banked
 12596  01559C  6FFC               	movwf	252,b	;volatile
 12597                           
 12598                           ; BSR set to: 14
 12599                           ;system.c: 167: RPINR22 = 5;
 12600  01559E  0E05               	movlw	5
 12601  0155A0  010E               	movlb	14	; () banked
 12602  0155A2  6FFD               	movwf	253,b	;volatile
 12603                           
 12604                           ; BSR set to: 14
 12605                           ;system.c: 170: RPOR4 = 10;
 12606  0155A4  0E0A               	movlw	10
 12607  0155A6  010E               	movlb	14	; () banked
 12608  0155A8  6FC4               	movwf	196,b	;volatile
 12609                           
 12610                           ; BSR set to: 14
 12611                           ;system.c: 171: RPOR5 = 11;
 12612  0155AA  0E0B               	movlw	11
 12613  0155AC  010E               	movlb	14	; () banked
 12614  0155AE  6FC5               	movwf	197,b	;volatile
 12615                           
 12616                           ; BSR set to: 14
 12617                           ;system.c: 175: EECON2 = 0x55;
 12618  0155B0  0E55               	movlw	85
 12619  0155B2  6EA7               	movwf	4007,c	;volatile
 12620                           
 12621                           ; BSR set to: 14
 12622                           ;system.c: 176: EECON2 = 0xAA;
 12623  0155B4  0EAA               	movlw	170
 12624  0155B6  6EA7               	movwf	4007,c	;volatile
 12625                           
 12626                           ; BSR set to: 14
 12627                           ;system.c: 177: PPSCONbits.IOLOCK = 1;
 12628  0155B8  010E               	movlb	14	; () banked
 12629  0155BA  81BF               	bsf	191,0,b	;volatile
 12630                           
 12631                           ; BSR set to: 14
 12632                           ;system.c: 189: LATCbits.LATC6 = 1;
 12633  0155BC  8C8B               	bsf	3979,6,c	;volatile
 12634                           
 12635                           ; BSR set to: 14
 12636                           ;system.c: 190: LATBbits.LATB3 = 1;
 12637  0155BE  868A               	bsf	3978,3,c	;volatile
 12638                           
 12639                           ; BSR set to: 14
 12640                           ;system.c: 192: TRISCbits.TRISC6 = 0;
 12641  0155C0  9C94               	bcf	3988,6,c	;volatile
 12642                           
 12643                           ; BSR set to: 14
 12644                           ;system.c: 193: TRISBbits.TRISB3 = 0;
 12645  0155C2  9693               	bcf	3987,3,c	;volatile
 12646                           
 12647                           ; BSR set to: 14
 12648                           ;system.c: 196: TRISBbits.TRISB0 = 1;
 12649  0155C4  8093               	bsf	3987,0,c	;volatile
 12650                           
 12651                           ; BSR set to: 14
 12652                           ;system.c: 197: TRISCbits.TRISC2 = 1;
 12653  0155C6  8494               	bsf	3988,2,c	;volatile
 12654                           
 12655                           ; BSR set to: 14
 12656                           ;system.c: 200: INTCON2bits.INTEDG1 = 1;
 12657  0155C8  8AF1               	bsf	intcon2,5,c	;volatile
 12658                           
 12659                           ; BSR set to: 14
 12660                           ;system.c: 203: INTCON2bits.INTEDG0 = 1;
 12661  0155CA  8CF1               	bsf	intcon2,6,c	;volatile
 12662                           
 12663                           ; BSR set to: 14
 12664                           ;system.c: 205: INTCONbits.INT0IF = 0;
 12665  0155CC  92F2               	bcf	intcon,1,c	;volatile
 12666                           
 12667                           ; BSR set to: 14
 12668                           ;system.c: 206: INTCONbits.INT0IE = 1;
 12669  0155CE  88F2               	bsf	intcon,4,c	;volatile
 12670                           
 12671                           ; BSR set to: 14
 12672                           ;system.c: 208: INTCON3bits.INT1IF = 0;
 12673  0155D0  90F0               	bcf	intcon3,0,c	;volatile
 12674                           
 12675                           ; BSR set to: 14
 12676                           ;system.c: 209: INTCON3bits.INT1IP = 1;
 12677  0155D2  8CF0               	bsf	intcon3,6,c	;volatile
 12678                           
 12679                           ; BSR set to: 14
 12680                           ;system.c: 210: INTCON3bits.INT1IE = 1;
 12681  0155D4  86F0               	bsf	intcon3,3,c	;volatile
 12682                           
 12683                           ; BSR set to: 14
 12684                           ;system.c: 216: TRISCbits.TRISC1 = 1;
 12685  0155D6  8294               	bsf	3988,1,c	;volatile
 12686                           
 12687                           ; BSR set to: 14
 12688                           ;system.c: 217: TRISBbits.TRISB1 = 0;
 12689  0155D8  9293               	bcf	3987,1,c	;volatile
 12690                           
 12691                           ; BSR set to: 14
 12692                           ;system.c: 218: TRISBbits.TRISB2 = 0;
 12693  0155DA  9493               	bcf	3987,2,c	;volatile
 12694                           
 12695                           ; BSR set to: 14
 12696                           ;system.c: 220: SSP2STAT = 0xC0;
 12697  0155DC  0EC0               	movlw	192
 12698  0155DE  6E73               	movwf	3955,c	;volatile
 12699                           
 12700                           ; BSR set to: 14
 12701                           ;system.c: 221: SSP2CON1 = 0b00101010;
 12702  0155E0  0E2A               	movlw	42
 12703  0155E2  6E72               	movwf	3954,c	;volatile
 12704                           
 12705                           ; BSR set to: 14
 12706                           ;system.c: 225: LATAbits.LATA5 = 0;
 12707  0155E4  9A89               	bcf	3977,5,c	;volatile
 12708                           
 12709                           ; BSR set to: 14
 12710                           ;system.c: 226: TRISAbits.TRISA5 = 1;
 12711  0155E6  8A92               	bsf	3986,5,c	;volatile
 12712                           
 12713                           ; BSR set to: 14
 12714                           ;system.c: 231: INTCONbits.GIEH = 1;
 12715  0155E8  8EF2               	bsf	intcon,7,c	;volatile
 12716                           
 12717                           ; BSR set to: 14
 12718                           ;system.c: 232: INTCONbits.GIEL = 1;
 12719  0155EA  8CF2               	bsf	intcon,6,c	;volatile
 12720                           
 12721                           ; BSR set to: 14
 12722  0155EC  0012               	return		;funcret
 12723  0155EE                     __end_of_SYSTEM_Initialize:
 12724                           	opt stack 0
 12725                           tblptru	equ	0xFF8
 12726                           tblptrh	equ	0xFF7
 12727                           tblptrl	equ	0xFF6
 12728                           tablat	equ	0xFF5
 12729                           prodh	equ	0xFF4
 12730                           prodl	equ	0xFF3
 12731                           intcon	equ	0xFF2
 12732                           intcon2	equ	0xFF1
 12733                           intcon3	equ	0xFF0
 12734                           indf0	equ	0xFEF
 12735                           postinc0	equ	0xFEE
 12736                           plusw0	equ	0xFEB
 12737                           fsr0h	equ	0xFEA
 12738                           fsr0l	equ	0xFE9
 12739                           wreg	equ	0xFE8
 12740                           indf1	equ	0xFE7
 12741                           postdec1	equ	0xFE5
 12742                           fsr1h	equ	0xFE2
 12743                           fsr1l	equ	0xFE1
 12744                           indf2	equ	0xFDF
 12745                           postinc2	equ	0xFDE
 12746                           postdec2	equ	0xFDD
 12747                           plusw2	equ	0xFDB
 12748                           fsr2h	equ	0xFDA
 12749                           fsr2l	equ	0xFD9
 12750                           status	equ	0xFD8
 12751                           
 12752 ;; *************** function _RTCC_reset *****************
 12753 ;; Defined at:
 12754 ;;		line 691 in file "src/main.c"
 12755 ;; Parameters:    Size  Location     Type
 12756 ;;		None
 12757 ;; Auto vars:     Size  Location     Type
 12758 ;;		None
 12759 ;; Return value:  Size  Location     Type
 12760 ;;		None               void
 12761 ;; Registers used:
 12762 ;;		wreg, status,2, cstack
 12763 ;; Tracked objects:
 12764 ;;		On entry : 0/0
 12765 ;;		On exit  : 0/0
 12766 ;;		Unchanged: 0/0
 12767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12772 ;;Total ram usage:        0 bytes
 12773 ;; Hardware stack levels used:    1
 12774 ;; Hardware stack levels required when called:   10
 12775 ;; This function calls:
 12776 ;;		_RtccWrOn
 12777 ;; This function is called by:
 12778 ;;		_main
 12779 ;; This function uses a non-reentrant model
 12780 ;;
 12781                           
 12782                           	psect	text41
 12783  016EF0                     __ptext41:
 12784                           	opt stack 0
 12785  016EF0                     _RTCC_reset:
 12786                           	opt stack 20
 12787                           
 12788                           ;main.c: 693: RtccWrOn();
 12789                           
 12790                           ; BSR set to: 14
 12791                           ;incstack = 0
 12792  016EF0  ECD9  F0B7         	call	_RtccWrOn	;wreg free
 12793                           
 12794                           ;main.c: 694: RTCCFGbits.RTCPTR0 = 0;
 12795  016EF4  010F               	movlb	15	; () banked
 12796  016EF6  913F               	bcf	63,0,b	;volatile
 12797                           
 12798                           ; BSR set to: 15
 12799                           ;main.c: 695: RTCCFGbits.RTCPTR1 = 0;
 12800  016EF8  010F               	movlb	15	; () banked
 12801  016EFA  933F               	bcf	63,1,b	;volatile
 12802                           
 12803                           ; BSR set to: 15
 12804                           ;main.c: 696: RTCVALHbits.RTCVALH = 0x00;
 12805  016EFC  0E00               	movlw	0
 12806  016EFE  010F               	movlb	15	; () banked
 12807  016F00  6F3B               	movwf	59,b	;volatile
 12808                           
 12809                           ; BSR set to: 15
 12810                           ;main.c: 697: RTCVALLbits.RTCVALL = 0x00;
 12811  016F02  0E00               	movlw	0
 12812  016F04  010F               	movlb	15	; () banked
 12813  016F06  6F3A               	movwf	58,b	;volatile
 12814                           
 12815                           ; BSR set to: 15
 12816                           ;main.c: 698: (RTCCFGbits.RTCWREN = 0);
 12817  016F08  010F               	movlb	15	; () banked
 12818  016F0A  9B3F               	bcf	63,5,b	;volatile
 12819                           
 12820                           ; BSR set to: 15
 12821  016F0C  0012               	return		;funcret
 12822  016F0E                     __end_of_RTCC_reset:
 12823                           	opt stack 0
 12824                           tblptru	equ	0xFF8
 12825                           tblptrh	equ	0xFF7
 12826                           tblptrl	equ	0xFF6
 12827                           tablat	equ	0xFF5
 12828                           prodh	equ	0xFF4
 12829                           prodl	equ	0xFF3
 12830                           intcon	equ	0xFF2
 12831                           intcon2	equ	0xFF1
 12832                           intcon3	equ	0xFF0
 12833                           indf0	equ	0xFEF
 12834                           postinc0	equ	0xFEE
 12835                           plusw0	equ	0xFEB
 12836                           fsr0h	equ	0xFEA
 12837                           fsr0l	equ	0xFE9
 12838                           wreg	equ	0xFE8
 12839                           indf1	equ	0xFE7
 12840                           postdec1	equ	0xFE5
 12841                           fsr1h	equ	0xFE2
 12842                           fsr1l	equ	0xFE1
 12843                           indf2	equ	0xFDF
 12844                           postinc2	equ	0xFDE
 12845                           postdec2	equ	0xFDD
 12846                           plusw2	equ	0xFDB
 12847                           fsr2h	equ	0xFDA
 12848                           fsr2l	equ	0xFD9
 12849                           status	equ	0xFD8
 12850                           
 12851 ;; *************** function _RtccWrOn *****************
 12852 ;; Defined at:
 12853 ;;		line 21 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\rtcc\RtccWrOn.c"
 12854 ;; Parameters:    Size  Location     Type
 12855 ;;		None
 12856 ;; Auto vars:     Size  Location     Type
 12857 ;;  data            2    0        unsigned int 
 12858 ;; Return value:  Size  Location     Type
 12859 ;;		None               void
 12860 ;; Registers used:
 12861 ;;		wreg, status,2
 12862 ;; Tracked objects:
 12863 ;;		On entry : 0/0
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12871 ;;Total ram usage:        0 bytes
 12872 ;; Hardware stack levels used:    1
 12873 ;; Hardware stack levels required when called:    9
 12874 ;; This function calls:
 12875 ;;		Nothing
 12876 ;; This function is called by:
 12877 ;;		_SYSTEM_Initialize
 12878 ;;		_update_variable
 12879 ;;		_RTCC_reset
 12880 ;; This function uses a non-reentrant model
 12881 ;;
 12882                           
 12883                           	psect	text42
 12884  016FB2                     __ptext42:
 12885                           	opt stack 0
 12886  016FB2                     _RtccWrOn:
 12887                           	opt stack 19
 12888                           
 12889                           ; BSR set to: 15
 12890                           ;incstack = 0
 12891  016FB2  9CF2               	bcf	intcon,6,c	;volatile
 12892  016FB4  0E55               	movlw	85
 12893  016FB6  6EA7               	movwf	4007,c	;volatile
 12894  016FB8  0EAA               	movlw	170
 12895  016FBA  6EA7               	movwf	4007,c	;volatile
 12896  016FBC  010F               	movlb	15	; () banked
 12897  016FBE  8B3F               	bsf	63,5,b	;volatile
 12898                           
 12899                           ; BSR set to: 15
 12900  016FC0  8CF2               	bsf	intcon,6,c	;volatile
 12901                           
 12902                           ; BSR set to: 15
 12903  016FC2  0012               	return		;funcret
 12904  016FC4                     __end_of_RtccWrOn:
 12905                           	opt stack 0
 12906                           tblptru	equ	0xFF8
 12907                           tblptrh	equ	0xFF7
 12908                           tblptrl	equ	0xFF6
 12909                           tablat	equ	0xFF5
 12910                           prodh	equ	0xFF4
 12911                           prodl	equ	0xFF3
 12912                           intcon	equ	0xFF2
 12913                           intcon2	equ	0xFF1
 12914                           intcon3	equ	0xFF0
 12915                           indf0	equ	0xFEF
 12916                           postinc0	equ	0xFEE
 12917                           plusw0	equ	0xFEB
 12918                           fsr0h	equ	0xFEA
 12919                           fsr0l	equ	0xFE9
 12920                           wreg	equ	0xFE8
 12921                           indf1	equ	0xFE7
 12922                           postdec1	equ	0xFE5
 12923                           fsr1h	equ	0xFE2
 12924                           fsr1l	equ	0xFE1
 12925                           indf2	equ	0xFDF
 12926                           postinc2	equ	0xFDE
 12927                           postdec2	equ	0xFDD
 12928                           plusw2	equ	0xFDB
 12929                           fsr2h	equ	0xFDA
 12930                           fsr2l	equ	0xFD9
 12931                           status	equ	0xFD8
 12932                           
 12933 ;; *************** function _MiApp_ProtocolInit *****************
 12934 ;; Defined at:
 12935 ;;		line 3563 in file "src/miwi/miwi_mesh.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;  bNetworkFree    1    wreg     unsigned char 
 12938 ;; Auto vars:     Size  Location     Type
 12939 ;;  bNetworkFree    1   23[BANK1 ] unsigned char 
 12940 ;;  MIP             3   24[BANK1 ] struct .
 12941 ;;  i               1   27[BANK1 ] unsigned char 
 12942 ;; Return value:  Size  Location     Type
 12943 ;;                  1    wreg      unsigned char 
 12944 ;; Registers used:
 12945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12946 ;; Tracked objects:
 12947 ;;		On entry : 0/0
 12948 ;;		On exit  : 0/0
 12949 ;;		Unchanged: 0/0
 12950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12952 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12953 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12954 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12955 ;;Total ram usage:        6 bytes
 12956 ;; Hardware stack levels used:    1
 12957 ;; Hardware stack levels required when called:   14
 12958 ;; This function calls:
 12959 ;;		_InitSymbolTimer
 12960 ;;		_MiApp_SetChannel
 12961 ;;		_MiMAC_Init
 12962 ;;		_MiMAC_SetAltAddress
 12963 ;; This function is called by:
 12964 ;;		_main
 12965 ;; This function uses a non-reentrant model
 12966 ;;
 12967                           
 12968                           	psect	text43
 12969  015166                     __ptext43:
 12970                           	opt stack 0
 12971  015166                     _MiApp_ProtocolInit:
 12972                           	opt stack 16
 12973                           
 12974                           ; BSR set to: 15
 12975                           ;incstack = 0
 12976                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
 12977  015166  0101               	movlb	1	; () banked
 12978  015168  6FA1               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
 12979                           
 12980                           ;miwi_mesh.c: 3565: MACINIT_PARAM MIP;
 12981                           ;miwi_mesh.c: 3566: uint8_t i;
 12982                           ;miwi_mesh.c: 3601: myShortAddress.Val = 0xFFFF;
 12983  01516A  0101               	movlb	1	; () banked
 12984  01516C  6985               	setf	_myShortAddress& (0+255),b
 12985  01516E  6986               	setf	(_myShortAddress+1)& (0+255),b
 12986                           
 12987                           ; BSR set to: 1
 12988                           ;miwi_mesh.c: 3602: myPANID.Val = 0x1337;
 12989  015170  0E13               	movlw	19
 12990  015172  0101               	movlb	1	; () banked
 12991  015174  6F84               	movwf	(_myPANID+1)& (0+255),b
 12992  015176  0E37               	movlw	55
 12993  015178  6F83               	movwf	_myPANID& (0+255),b
 12994                           
 12995                           ;miwi_mesh.c: 3607: for(i = 0; i < 10; i++)
 12996  01517A  0E00               	movlw	0
 12997  01517C  0101               	movlb	1	; () banked
 12998  01517E  6FA5               	movwf	MiApp_ProtocolInit@i& (0+255),b
 12999  015180                     l14187:
 13000                           
 13001                           ; BSR set to: 1
 13002  015180  0E09               	movlw	9
 13003  015182  0101               	movlb	1	; () banked
 13004  015184  65A5               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 13005  015186  D001               	goto	l14191
 13006  015188  D012               	goto	l14197
 13007  01518A                     l14191:
 13008                           
 13009                           ; BSR set to: 1
 13010                           ;miwi_mesh.c: 3608: {
 13011                           ;miwi_mesh.c: 3609: ConnectionTable[i].status.Val = 0;
 13012  01518A  0101               	movlb	1	; () banked
 13013  01518C  51A5               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 13014  01518E  0D09               	mullw	9
 13015  015190  0E08               	movlw	8
 13016  015192  26F3               	addwf	prodl,f,c
 13017  015194  0E00               	movlw	0
 13018  015196  22F4               	addwfc	prodh,f,c
 13019  015198  0E46               	movlw	low _ConnectionTable
 13020  01519A  24F3               	addwf	prodl,w,c
 13021  01519C  6ED9               	movwf	fsr2l,c
 13022  01519E  0E02               	movlw	high _ConnectionTable
 13023  0151A0  20F4               	addwfc	prodh,w,c
 13024  0151A2  6EDA               	movwf	fsr2h,c
 13025  0151A4  0E00               	movlw	0
 13026  0151A6  6EDF               	movwf	indf2,c
 13027                           
 13028                           ; BSR set to: 1
 13029  0151A8  0101               	movlb	1	; () banked
 13030  0151AA  2BA5               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 13031  0151AC  D7E9               	goto	l14187
 13032  0151AE                     l14197:
 13033                           
 13034                           ; BSR set to: 1
 13035                           ;miwi_mesh.c: 3610: }
 13036                           ;miwi_mesh.c: 3621: MiWiStateMachine.Val = 0;
 13037  0151AE  0E00               	movlw	0
 13038  0151B0  0101               	movlb	1	; () banked
 13039  0151B2  6F39               	movwf	(_MiWiStateMachine+1)& (0+255),b
 13040  0151B4  0E00               	movlw	0
 13041  0151B6  6F38               	movwf	_MiWiStateMachine& (0+255),b
 13042                           
 13043                           ;miwi_mesh.c: 3623: openSocketInfo.status.Val = 0;
 13044  0151B8  0E00               	movlw	0
 13045  0151BA  0101               	movlb	1	; () banked
 13046  0151BC  6F00               	movwf	_openSocketInfo& (0+255),b
 13047                           
 13048                           ;miwi_mesh.c: 3624: MiWiCapacityInfo.Val = 0;
 13049  0151BE  0E00               	movlw	0
 13050  0151C0  0101               	movlb	1	; () banked
 13051  0151C2  6F43               	movwf	_MiWiCapacityInfo& (0+255),b
 13052                           
 13053                           ; BSR set to: 1
 13054                           ;miwi_mesh.c: 3626: InitSymbolTimer();
 13055  0151C4  ECCD  F0B7         	call	_InitSymbolTimer	;wreg free
 13056                           
 13057                           ;miwi_mesh.c: 3628: TxData = 0;
 13058  0151C8  0E00               	movlw	0
 13059  0151CA  0101               	movlb	1	; () banked
 13060  0151CC  6F46               	movwf	_TxData& (0+255),b
 13061                           
 13062                           ; BSR set to: 1
 13063                           ;miwi_mesh.c: 3644: for(i = 0; i < 10; i++)
 13064  0151CE  0E00               	movlw	0
 13065  0151D0  0101               	movlb	1	; () banked
 13066  0151D2  6FA5               	movwf	MiApp_ProtocolInit@i& (0+255),b
 13067  0151D4                     l14205:
 13068                           
 13069                           ; BSR set to: 1
 13070  0151D4  0E09               	movlw	9
 13071  0151D6  0101               	movlb	1	; () banked
 13072  0151D8  65A5               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 13073  0151DA  D001               	goto	l14209
 13074  0151DC  D010               	goto	l14215
 13075  0151DE                     l14209:
 13076                           
 13077                           ; BSR set to: 1
 13078                           ;miwi_mesh.c: 3645: {
 13079                           ;miwi_mesh.c: 3646: IncomingFrameCounter[i].Val = 0;
 13080  0151DE  0101               	movlb	1	; () banked
 13081  0151E0  51A5               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 13082  0151E2  0D04               	mullw	4
 13083  0151E4  0E00               	movlw	low _IncomingFrameCounter
 13084  0151E6  24F3               	addwf	prodl,w,c
 13085  0151E8  6ED9               	movwf	fsr2l,c
 13086  0151EA  0E02               	movlw	high _IncomingFrameCounter
 13087  0151EC  20F4               	addwfc	prodh,w,c
 13088  0151EE  6EDA               	movwf	fsr2h,c
 13089  0151F0  6ADE               	clrf	postinc2,c
 13090  0151F2  6ADE               	clrf	postinc2,c
 13091  0151F4  6ADE               	clrf	postinc2,c
 13092  0151F6  6ADD               	clrf	postdec2,c
 13093                           
 13094                           ; BSR set to: 1
 13095  0151F8  0101               	movlb	1	; () banked
 13096  0151FA  2BA5               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 13097  0151FC  D7EB               	goto	l14205
 13098  0151FE                     l14215:
 13099                           
 13100                           ; BSR set to: 1
 13101                           ;miwi_mesh.c: 3647: }
 13102                           ;miwi_mesh.c: 3708: MIP.actionFlags.Val = 0;
 13103  0151FE  0E00               	movlw	0
 13104  015200  0101               	movlb	1	; () banked
 13105  015202  6FA2               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 13106                           
 13107                           ;miwi_mesh.c: 3709: MIP.actionFlags.bits.PAddrLength = 4;
 13108  015204  0101               	movlb	1	; () banked
 13109  015206  51A2               	movf	MiApp_ProtocolInit@MIP& (0+255),w,b
 13110  015208  0B87               	andlw	-121
 13111  01520A  0920               	iorlw	32
 13112  01520C  6FA2               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 13113                           
 13114                           ; BSR set to: 1
 13115                           ;miwi_mesh.c: 3710: MIP.actionFlags.bits.CCAEnable = 1;
 13116  01520E  0101               	movlb	1	; () banked
 13117  015210  83A2               	bsf	MiApp_ProtocolInit@MIP& (0+255),1,b
 13118                           
 13119                           ; BSR set to: 1
 13120                           ;miwi_mesh.c: 3711: MIP.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
 13121  015212  0101               	movlb	1	; () banked
 13122  015214  B1A1               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
 13123  015216  D003               	bra	u16925
 13124  015218  0101               	movlb	1	; () banked
 13125  01521A  95A2               	bcf	MiApp_ProtocolInit@MIP& (0+255),2,b
 13126  01521C  D002               	bra	u16926
 13127  01521E                     u16925:
 13128  01521E  0101               	movlb	1	; () banked
 13129  015220  85A2               	bsf	MiApp_ProtocolInit@MIP& (0+255),2,b
 13130  015222                     u16926:
 13131                           
 13132                           ; BSR set to: 1
 13133                           ;miwi_mesh.c: 3712: MIP.PAddress = myLongAddress;
 13134  015222  0EC8               	movlw	low _myLongAddress
 13135  015224  0101               	movlb	1	; () banked
 13136  015226  6FA3               	movwf	(MiApp_ProtocolInit@MIP+1)& (0+255),b
 13137  015228  0E00               	movlw	high _myLongAddress
 13138  01522A  0101               	movlb	1	; () banked
 13139  01522C  6FA4               	movwf	(MiApp_ProtocolInit@MIP+2)& (0+255),b
 13140                           
 13141                           ; BSR set to: 1
 13142                           ;miwi_mesh.c: 3714: MiMAC_Init(MIP);
 13143  01522E  C1A2  F19C         	movff	MiApp_ProtocolInit@MIP,MiMAC_Init@initValue
 13144  015232  C1A3  F19D         	movff	MiApp_ProtocolInit@MIP+1,MiMAC_Init@initValue+1
 13145  015236  C1A4  F19E         	movff	MiApp_ProtocolInit@MIP+2,MiMAC_Init@initValue+2
 13146  01523A  EC46  F0A6         	call	_MiMAC_Init	;wreg free
 13147                           
 13148                           ;miwi_mesh.c: 3716: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 13149  01523E  0E85               	movlw	low _myShortAddress
 13150  015240  0101               	movlb	1	; () banked
 13151  015242  6F8A               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 13152  015244  0E01               	movlw	high _myShortAddress
 13153  015246  0101               	movlb	1	; () banked
 13154  015248  6F8B               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 13155  01524A  0E83               	movlw	low _myPANID
 13156  01524C  0101               	movlb	1	; () banked
 13157  01524E  6F8C               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 13158  015250  0E01               	movlw	high _myPANID
 13159  015252  0101               	movlb	1	; () banked
 13160  015254  6F8D               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 13161  015256  ECFC  F0B7         	call	_MiMAC_SetAltAddress	;wreg free
 13162                           
 13163                           ;miwi_mesh.c: 3717: MiApp_SetChannel(currentChannel);
 13164  01525A  0101               	movlb	1	; () banked
 13165  01525C  5189               	movf	_currentChannel& (0+255),w,b
 13166  01525E  EC87  F0B7         	call	_MiApp_SetChannel
 13167                           
 13168                           ;miwi_mesh.c: 3722: MiWiCapacityInfo.bits.Sleep = 1;
 13169  015262  0101               	movlb	1	; () banked
 13170  015264  8143               	bsf	_MiWiCapacityInfo& (0+255),0,b
 13171                           
 13172                           ; BSR set to: 1
 13173                           ;miwi_mesh.c: 3725: MiWiCapacityInfo.bits.Security = 1;
 13174  015266  0101               	movlb	1	; () banked
 13175  015268  8743               	bsf	_MiWiCapacityInfo& (0+255),3,b
 13176                           
 13177                           ; BSR set to: 1
 13178                           ;miwi_mesh.c: 3727: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 13179  01526A  C0B2  F1A0         	movff	_ConnMode,??_MiApp_ProtocolInit
 13180  01526E  0101               	movlb	1	; () banked
 13181  015270  3BA0               	swapf	??_MiApp_ProtocolInit& (0+255),f,b
 13182  015272  0101               	movlb	1	; () banked
 13183  015274  5143               	movf	_MiWiCapacityInfo& (0+255),w,b
 13184  015276  0101               	movlb	1	; () banked
 13185  015278  19A0               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 13186  01527A  0BCF               	andlw	-49
 13187  01527C  19A0               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 13188  01527E  0101               	movlb	1	; () banked
 13189  015280  6F43               	movwf	_MiWiCapacityInfo& (0+255),b
 13190                           
 13191                           ; BSR set to: 1
 13192                           ;miwi_mesh.c: 3742: MiWiSeqNum = TMR1L;
 13193  015282  CFCE F0B6          	movff	4046,_MiWiSeqNum	;volatile
 13194                           
 13195                           ; BSR set to: 1
 13196                           ;miwi_mesh.c: 3744: INTCON3bits.INT1IF = 0;
 13197  015286  90F0               	bcf	intcon3,0,c	;volatile
 13198                           
 13199                           ; BSR set to: 1
 13200                           ;miwi_mesh.c: 3745: INTCON3bits.INT1IE = 1;
 13201  015288  86F0               	bsf	intcon3,3,c	;volatile
 13202  01528A  0012               	return	
 13203  01528C                     __end_of_MiApp_ProtocolInit:
 13204                           	opt stack 0
 13205                           tblptru	equ	0xFF8
 13206                           tblptrh	equ	0xFF7
 13207                           tblptrl	equ	0xFF6
 13208                           tablat	equ	0xFF5
 13209                           prodh	equ	0xFF4
 13210                           prodl	equ	0xFF3
 13211                           intcon	equ	0xFF2
 13212                           intcon2	equ	0xFF1
 13213                           intcon3	equ	0xFF0
 13214                           indf0	equ	0xFEF
 13215                           postinc0	equ	0xFEE
 13216                           plusw0	equ	0xFEB
 13217                           fsr0h	equ	0xFEA
 13218                           fsr0l	equ	0xFE9
 13219                           wreg	equ	0xFE8
 13220                           indf1	equ	0xFE7
 13221                           postdec1	equ	0xFE5
 13222                           fsr1h	equ	0xFE2
 13223                           fsr1l	equ	0xFE1
 13224                           indf2	equ	0xFDF
 13225                           postinc2	equ	0xFDE
 13226                           postdec2	equ	0xFDD
 13227                           plusw2	equ	0xFDB
 13228                           fsr2h	equ	0xFDA
 13229                           fsr2l	equ	0xFD9
 13230                           status	equ	0xFD8
 13231                           
 13232 ;; *************** function _MiMAC_Init *****************
 13233 ;; Defined at:
 13234 ;;		line 585 in file "src/miwi/drv_mrf_miwi_89xa.c"
 13235 ;; Parameters:    Size  Location     Type
 13236 ;;  initValue       3   18[BANK1 ] struct .
 13237 ;; Auto vars:     Size  Location     Type
 13238 ;;  i               1   21[BANK1 ] unsigned char 
 13239 ;; Return value:  Size  Location     Type
 13240 ;;                  1    wreg      unsigned char 
 13241 ;; Registers used:
 13242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13243 ;; Tracked objects:
 13244 ;;		On entry : 0/0
 13245 ;;		On exit  : 0/0
 13246 ;;		Unchanged: 0/0
 13247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13248 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13249 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13251 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13252 ;;Total ram usage:        4 bytes
 13253 ;; Hardware stack levels used:    1
 13254 ;; Hardware stack levels required when called:   12
 13255 ;; This function calls:
 13256 ;;		_DELAY_ms
 13257 ;;		_RegisterSet
 13258 ;;		_SetRFMode
 13259 ;; This function is called by:
 13260 ;;		_MiApp_ProtocolInit
 13261 ;; This function uses a non-reentrant model
 13262 ;;
 13263                           
 13264                           	psect	text44
 13265  014C8C                     __ptext44:
 13266                           	opt stack 0
 13267  014C8C                     _MiMAC_Init:
 13268                           	opt stack 17
 13269                           
 13270                           ;drv_mrf_miwi_89xa.c: 587: uint8_t i;
 13271                           ;drv_mrf_miwi_89xa.c: 589: MACInitParams = initValue;
 13272                           
 13273                           ; BSR set to: 1
 13274                           ;incstack = 0
 13275  014C8C  C19C  F0AF         	movff	MiMAC_Init@initValue,_MACInitParams
 13276  014C90  C19D  F0B0         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
 13277  014C94  C19E  F0B1         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
 13278                           
 13279                           ;drv_mrf_miwi_89xa.c: 591: DELAY_ms(20);
 13280  014C98  0E00               	movlw	0
 13281  014C9A  0101               	movlb	1	; () banked
 13282  014C9C  6F97               	movwf	(DELAY_ms@ms+1)& (0+255),b
 13283  014C9E  0E14               	movlw	20
 13284  014CA0  6F96               	movwf	DELAY_ms@ms& (0+255),b
 13285  014CA2  ECCA  F0B0         	call	_DELAY_ms	;wreg free
 13286                           
 13287                           ;drv_mrf_miwi_89xa.c: 592: LATBbits.LATB3 = 1;
 13288  014CA6  868A               	bsf	3978,3,c	;volatile
 13289                           
 13290                           ;drv_mrf_miwi_89xa.c: 593: LATCbits.LATC6 = 1;
 13291  014CA8  8C8B               	bsf	3979,6,c	;volatile
 13292                           
 13293                           ;drv_mrf_miwi_89xa.c: 596: MACSeq = TMR1L;
 13294  014CAA  CFCE F0B4          	movff	4046,_MACSeq	;volatile
 13295                           
 13296                           ;drv_mrf_miwi_89xa.c: 597: ReceivedBankIndex = 0xFF;
 13297  014CAE  0101               	movlb	1	; () banked
 13298  014CB0  6945               	setf	_ReceivedBankIndex& (0+255),b
 13299                           
 13300                           ; BSR set to: 1
 13301                           ;drv_mrf_miwi_89xa.c: 599: for(i = 0; i < 2; i++)
 13302  014CB2  0E00               	movlw	0
 13303  014CB4  0101               	movlb	1	; () banked
 13304  014CB6  6F9F               	movwf	MiMAC_Init@i& (0+255),b
 13305  014CB8                     l13181:
 13306                           
 13307                           ; BSR set to: 1
 13308  014CB8  0E01               	movlw	1
 13309  014CBA  0101               	movlb	1	; () banked
 13310  014CBC  659F               	cpfsgt	MiMAC_Init@i& (0+255),b
 13311  014CBE  D001               	goto	l13185
 13312  014CC0  D00E               	goto	l13191
 13313  014CC2                     l13185:
 13314                           
 13315                           ; BSR set to: 1
 13316                           ;drv_mrf_miwi_89xa.c: 600: {
 13317                           ;drv_mrf_miwi_89xa.c: 601: RxPacket[i].flags.Val = 0;
 13318  014CC2  0101               	movlb	1	; () banked
 13319  014CC4  519F               	movf	MiMAC_Init@i& (0+255),w,b
 13320  014CC6  0D42               	mullw	66
 13321  014CC8  0E50               	movlw	low _RxPacket
 13322  014CCA  24F3               	addwf	prodl,w,c
 13323  014CCC  6ED9               	movwf	fsr2l,c
 13324  014CCE  0E03               	movlw	high _RxPacket
 13325  014CD0  20F4               	addwfc	prodh,w,c
 13326  014CD2  6EDA               	movwf	fsr2h,c
 13327  014CD4  0E00               	movlw	0
 13328  014CD6  6EDF               	movwf	indf2,c
 13329                           
 13330                           ; BSR set to: 1
 13331  014CD8  0101               	movlb	1	; () banked
 13332  014CDA  2B9F               	incf	MiMAC_Init@i& (0+255),f,b
 13333  014CDC  D7ED               	goto	l13181
 13334  014CDE                     l13191:
 13335                           
 13336                           ; BSR set to: 1
 13337                           ;drv_mrf_miwi_89xa.c: 602: }
 13338                           ;drv_mrf_miwi_89xa.c: 605: for(i = 0; i < 5; i++)
 13339  014CDE  0E00               	movlw	0
 13340  014CE0  0101               	movlb	1	; () banked
 13341  014CE2  6F9F               	movwf	MiMAC_Init@i& (0+255),b
 13342  014CE4                     l13193:
 13343                           
 13344                           ; BSR set to: 1
 13345  014CE4  0E04               	movlw	4
 13346  014CE6  0101               	movlb	1	; () banked
 13347  014CE8  659F               	cpfsgt	MiMAC_Init@i& (0+255),b
 13348  014CEA  D001               	goto	l13197
 13349  014CEC  D00E               	goto	l13203
 13350  014CEE                     l13197:
 13351                           
 13352                           ; BSR set to: 1
 13353                           ;drv_mrf_miwi_89xa.c: 606: {
 13354                           ;drv_mrf_miwi_89xa.c: 607: AckInfo[i].Valid = FALSE;
 13355  014CEE  0101               	movlb	1	; () banked
 13356  014CF0  519F               	movf	MiMAC_Init@i& (0+255),w,b
 13357  014CF2  0D06               	mullw	6
 13358  014CF4  0E28               	movlw	low _AckInfo
 13359  014CF6  24F3               	addwf	prodl,w,c
 13360  014CF8  6ED9               	movwf	fsr2l,c
 13361  014CFA  0E02               	movlw	high _AckInfo
 13362  014CFC  20F4               	addwfc	prodh,w,c
 13363  014CFE  6EDA               	movwf	fsr2h,c
 13364  014D00  0E00               	movlw	0
 13365  014D02  6EDF               	movwf	indf2,c
 13366                           
 13367                           ; BSR set to: 1
 13368  014D04  0101               	movlb	1	; () banked
 13369  014D06  2B9F               	incf	MiMAC_Init@i& (0+255),f,b
 13370  014D08  D7ED               	goto	l13193
 13371  014D0A                     l13203:
 13372                           
 13373                           ; BSR set to: 1
 13374                           ;drv_mrf_miwi_89xa.c: 608: }
 13375                           ;drv_mrf_miwi_89xa.c: 626: OutgoingFrameCounter.Val = 1;
 13376  014D0A  0E01               	movlw	1
 13377  014D0C  0100               	movlb	0	; () banked
 13378  014D0E  6FAB               	movwf	_OutgoingFrameCounter& (0+255),b
 13379  014D10  0E00               	movlw	0
 13380  014D12  6FAC               	movwf	(_OutgoingFrameCounter+1)& (0+255),b
 13381  014D14  0E00               	movlw	0
 13382  014D16  6FAD               	movwf	(_OutgoingFrameCounter+2)& (0+255),b
 13383  014D18  0E00               	movlw	0
 13384  014D1A  6FAE               	movwf	(_OutgoingFrameCounter+3)& (0+255),b
 13385                           
 13386                           ;drv_mrf_miwi_89xa.c: 628: for(i = 0; i < 8; i++)
 13387  014D1C  0E00               	movlw	0
 13388  014D1E  0101               	movlb	1	; () banked
 13389  014D20  6F9F               	movwf	MiMAC_Init@i& (0+255),b
 13390  014D22                     l13205:
 13391                           
 13392                           ; BSR set to: 1
 13393  014D22  0E07               	movlw	7
 13394  014D24  0101               	movlb	1	; () banked
 13395  014D26  659F               	cpfsgt	MiMAC_Init@i& (0+255),b
 13396  014D28  D001               	goto	l13209
 13397  014D2A  D017               	goto	l13215
 13398  014D2C                     l13209:
 13399                           
 13400                           ; BSR set to: 1
 13401                           ;drv_mrf_miwi_89xa.c: 629: {
 13402                           ;drv_mrf_miwi_89xa.c: 630: key[i] = mySecurityKey[i];
 13403  014D2C  0101               	movlb	1	; () banked
 13404  014D2E  519F               	movf	MiMAC_Init@i& (0+255),w,b
 13405  014D30  0D01               	mullw	1
 13406  014D32  0EA3               	movlw	low _mySecurityKey
 13407  014D34  24F3               	addwf	prodl,w,c
 13408  014D36  6ED9               	movwf	fsr2l,c
 13409  014D38  0E00               	movlw	high _mySecurityKey
 13410  014D3A  20F4               	addwfc	prodh,w,c
 13411  014D3C  6EDA               	movwf	fsr2h,c
 13412  014D3E  0101               	movlb	1	; () banked
 13413  014D40  519F               	movf	MiMAC_Init@i& (0+255),w,b
 13414  014D42  0D01               	mullw	1
 13415  014D44  0EC0               	movlw	low _key
 13416  014D46  24F3               	addwf	prodl,w,c
 13417  014D48  6EE1               	movwf	fsr1l,c
 13418  014D4A  0E00               	movlw	high _key
 13419  014D4C  20F4               	addwfc	prodh,w,c
 13420  014D4E  6EE2               	movwf	fsr1h,c
 13421  014D50  CFDF FFE7          	movff	indf2,indf1
 13422                           
 13423                           ; BSR set to: 1
 13424  014D54  0101               	movlb	1	; () banked
 13425  014D56  2B9F               	incf	MiMAC_Init@i& (0+255),f,b
 13426  014D58  D7E4               	goto	l13205
 13427  014D5A                     l13215:
 13428                           
 13429                           ; BSR set to: 1
 13430                           ;drv_mrf_miwi_89xa.c: 631: }
 13431                           ;drv_mrf_miwi_89xa.c: 636: for (i = 0 ; i <= 31; i++)
 13432  014D5A  0E00               	movlw	0
 13433  014D5C  0101               	movlb	1	; () banked
 13434  014D5E  6F9F               	movwf	MiMAC_Init@i& (0+255),b
 13435  014D60                     l13217:
 13436                           
 13437                           ; BSR set to: 1
 13438  014D60  0E1F               	movlw	31
 13439  014D62  0101               	movlb	1	; () banked
 13440  014D64  659F               	cpfsgt	MiMAC_Init@i& (0+255),b
 13441  014D66  D001               	goto	l13221
 13442  014D68  D017               	goto	l13227
 13443  014D6A                     l13221:
 13444                           
 13445                           ; BSR set to: 1
 13446                           ;drv_mrf_miwi_89xa.c: 637: {
 13447                           ;drv_mrf_miwi_89xa.c: 638: RegisterSet(InitConfigRegs[i]);
 13448  014D6A  0101               	movlb	1	; () banked
 13449  014D6C  519F               	movf	MiMAC_Init@i& (0+255),w,b
 13450  014D6E  0D02               	mullw	2
 13451  014D70  0EF3               	movlw	low _InitConfigRegs
 13452  014D72  24F3               	addwf	prodl,w,c
 13453  014D74  6EF6               	movwf	tblptrl,c
 13454  014D76  0EFE               	movlw	high _InitConfigRegs
 13455  014D78  20F4               	addwfc	prodh,w,c
 13456  014D7A  6EF7               	movwf	tblptrh,c
 13457  014D7C                     	if	1	;There are 3 active tblptr bytes
 13458  014D7C  6AF8               	clrf	tblptru,c
 13459  014D7E  0E00               	movlw	low (__mediumconst shr (0+16))
 13460  014D80  22F8               	addwfc	tblptru,f,c
 13461  014D82                     	endif
 13462  014D82  0009               	tblrd		*+
 13463  014D84  CFF5 F18C          	movff	tablat,RegisterSet@setting
 13464  014D88  000A               	tblrd		*-
 13465  014D8A  CFF5 F18D          	movff	tablat,RegisterSet@setting+1
 13466  014D8E  EC03  F0B6         	call	_RegisterSet	;wreg free
 13467  014D92  0101               	movlb	1	; () banked
 13468  014D94  2B9F               	incf	MiMAC_Init@i& (0+255),f,b
 13469  014D96  D7E4               	goto	l13217
 13470  014D98                     l13227:
 13471                           
 13472                           ; BSR set to: 1
 13473                           ;drv_mrf_miwi_89xa.c: 639: }
 13474                           ;drv_mrf_miwi_89xa.c: 640: SetRFMode(0x20);
 13475  014D98  0E20               	movlw	32
 13476  014D9A  ECC1  F0B1         	call	_SetRFMode
 13477                           
 13478                           ;drv_mrf_miwi_89xa.c: 642: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 13479  014D9E  0E00               	movlw	0
 13480  014DA0  0101               	movlb	1	; () banked
 13481  014DA2  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 13482  014DA4  0E56               	movlw	86
 13483  014DA6  6F8C               	movwf	RegisterSet@setting& (0+255),b
 13484  014DA8  EC03  F0B6         	call	_RegisterSet	;wreg free
 13485                           
 13486                           ;drv_mrf_miwi_89xa.c: 643: SetRFMode(0x40);
 13487  014DAC  0E40               	movlw	64
 13488  014DAE  ECC1  F0B1         	call	_SetRFMode
 13489                           
 13490                           ;drv_mrf_miwi_89xa.c: 646: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 13491  014DB2  0E1C               	movlw	28
 13492  014DB4  0101               	movlb	1	; () banked
 13493  014DB6  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 13494  014DB8  0E0F               	movlw	15
 13495  014DBA  6F8C               	movwf	RegisterSet@setting& (0+255),b
 13496  014DBC  EC03  F0B6         	call	_RegisterSet	;wreg free
 13497                           
 13498                           ;drv_mrf_miwi_89xa.c: 648: SetRFMode(0x60);
 13499  014DC0  0E60               	movlw	96
 13500  014DC2  ECC1  F0B1         	call	_SetRFMode
 13501                           
 13502                           ;drv_mrf_miwi_89xa.c: 651: INTCONbits.INT0IF = 0;
 13503  014DC6  92F2               	bcf	intcon,1,c	;volatile
 13504                           
 13505                           ;drv_mrf_miwi_89xa.c: 652: INTCONbits.INT0IE = 1;
 13506  014DC8  88F2               	bsf	intcon,4,c	;volatile
 13507                           
 13508                           ;drv_mrf_miwi_89xa.c: 654: INTCON3bits.INT1IF = 0;
 13509  014DCA  90F0               	bcf	intcon3,0,c	;volatile
 13510                           
 13511                           ;drv_mrf_miwi_89xa.c: 655: INTCON3bits.INT1IE = 1;
 13512  014DCC  86F0               	bsf	intcon3,3,c	;volatile
 13513  014DCE  0012               	return	
 13514  014DD0                     __end_of_MiMAC_Init:
 13515                           	opt stack 0
 13516                           tblptru	equ	0xFF8
 13517                           tblptrh	equ	0xFF7
 13518                           tblptrl	equ	0xFF6
 13519                           tablat	equ	0xFF5
 13520                           prodh	equ	0xFF4
 13521                           prodl	equ	0xFF3
 13522                           intcon	equ	0xFF2
 13523                           intcon2	equ	0xFF1
 13524                           intcon3	equ	0xFF0
 13525                           indf0	equ	0xFEF
 13526                           postinc0	equ	0xFEE
 13527                           plusw0	equ	0xFEB
 13528                           fsr0h	equ	0xFEA
 13529                           fsr0l	equ	0xFE9
 13530                           wreg	equ	0xFE8
 13531                           indf1	equ	0xFE7
 13532                           postdec1	equ	0xFE5
 13533                           fsr1h	equ	0xFE2
 13534                           fsr1l	equ	0xFE1
 13535                           indf2	equ	0xFDF
 13536                           postinc2	equ	0xFDE
 13537                           postdec2	equ	0xFDD
 13538                           plusw2	equ	0xFDB
 13539                           fsr2h	equ	0xFDA
 13540                           fsr2l	equ	0xFD9
 13541                           status	equ	0xFD8
 13542                           
 13543 ;; *************** function _DELAY_ms *****************
 13544 ;; Defined at:
 13545 ;;		line 108 in file "src/18F27J53/delay.c"
 13546 ;; Parameters:    Size  Location     Type
 13547 ;;  ms              2   12[BANK1 ] unsigned int 
 13548 ;; Auto vars:     Size  Location     Type
 13549 ;;  cyclesRequir    4   14[BANK1 ] long 
 13550 ;; Return value:  Size  Location     Type
 13551 ;;		None               void
 13552 ;; Registers used:
 13553 ;;		wreg, status,2, status,0, cstack
 13554 ;; Tracked objects:
 13555 ;;		On entry : 0/0
 13556 ;;		On exit  : 0/0
 13557 ;;		Unchanged: 0/0
 13558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13559 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13560 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13562 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13563 ;;Total ram usage:        6 bytes
 13564 ;; Hardware stack levels used:    1
 13565 ;; Hardware stack levels required when called:   10
 13566 ;; This function calls:
 13567 ;;		___lmul
 13568 ;; This function is called by:
 13569 ;;		_MiMAC_Init
 13570 ;;		_MiMAC_PowerState
 13571 ;; This function uses a non-reentrant model
 13572 ;;
 13573                           
 13574                           	psect	text45
 13575  016194                     __ptext45:
 13576                           	opt stack 0
 13577  016194                     _DELAY_ms:
 13578                           	opt stack 17
 13579                           
 13580                           ;delay.c: 110: int32_t cyclesRequiredForEntireDelay = 0;
 13581                           
 13582                           ;incstack = 0
 13583  016194  0E00               	movlw	0
 13584  016196  0101               	movlb	1	; () banked
 13585  016198  6F98               	movwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),b
 13586  01619A  0E00               	movlw	0
 13587  01619C  6F99               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),b
 13588  01619E  0E00               	movlw	0
 13589  0161A0  6F9A               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),b
 13590  0161A2  0E00               	movlw	0
 13591  0161A4  6F9B               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),b
 13592                           
 13593                           ; BSR set to: 1
 13594                           ;delay.c: 113: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 13595  0161A6  C196  F18A         	movff	DELAY_ms@ms,___lmul@multiplier
 13596  0161AA  C197  F18B         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
 13597  0161AE  0101               	movlb	1	; () banked
 13598  0161B0  6B8C               	clrf	(___lmul@multiplier+2)& (0+255),b
 13599  0161B2  6B8D               	clrf	(___lmul@multiplier+3)& (0+255),b
 13600  0161B4  0EA0               	movlw	160
 13601  0161B6  0101               	movlb	1	; () banked
 13602  0161B8  6F8E               	movwf	___lmul@multiplicand& (0+255),b
 13603  0161BA  0E0F               	movlw	15
 13604  0161BC  6F8F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13605  0161BE  0E00               	movlw	0
 13606  0161C0  6F90               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13607  0161C2  0E00               	movlw	0
 13608  0161C4  6F91               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13609  0161C6  ECDD  F0B3         	call	___lmul	;wreg free
 13610  0161CA  C18A  F198         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
 13611  0161CE  C18B  F199         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
 13612  0161D2  C18C  F19A         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
 13613  0161D6  C18D  F19B         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
 13614                           
 13615                           ;delay.c: 117: cyclesRequiredForEntireDelay -= (148 + 22);
 13616  0161DA  0E56               	movlw	86
 13617  0161DC  0101               	movlb	1	; () banked
 13618  0161DE  2798               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 13619  0161E0  0EFF               	movlw	255
 13620  0161E2  2399               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 13621  0161E4  0EFF               	movlw	255
 13622  0161E6  239A               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 13623  0161E8  0EFF               	movlw	255
 13624  0161EA  239B               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 13625                           
 13626                           ; BSR set to: 1
 13627                           ;delay.c: 119: if (cyclesRequiredForEntireDelay <= (170+25))
 13628  0161EC  0101               	movlb	1	; () banked
 13629  0161EE  BF9B               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 13630  0161F0  0012               	return	
 13631  0161F2  0101               	movlb	1	; () banked
 13632  0161F4  519B               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 13633  0161F6  0101               	movlb	1	; () banked
 13634  0161F8  119A               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 13635  0161FA  0101               	movlb	1	; () banked
 13636  0161FC  1199               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 13637  0161FE  E110               	bnz	l18
 13638  016200  0EC4               	movlw	196
 13639  016202  0101               	movlb	1	; () banked
 13640  016204  5D98               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 13641  016206  A0D8               	btfss	status,0,c
 13642  016208  0012               	return	
 13643  01620A  D00A               	goto	l18
 13644  01620C                     l19:
 13645                           
 13646                           ; BSR set to: 1
 13647                           ;delay.c: 126: {
 13648                           ;delay.c: 127: __nop();
 13649  01620C  F000               	nop	
 13650                           
 13651                           ;delay.c: 128: cyclesRequiredForEntireDelay -= 39;
 13652  01620E  0ED9               	movlw	217
 13653  016210  0101               	movlb	1	; () banked
 13654  016212  2798               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 13655  016214  0EFF               	movlw	255
 13656  016216  2399               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 13657  016218  0EFF               	movlw	255
 13658  01621A  239A               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 13659  01621C  0EFF               	movlw	255
 13660  01621E  239B               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 13661  016220                     l18:
 13662                           
 13663                           ; BSR set to: 1
 13664  016220  0101               	movlb	1	; () banked
 13665  016222  BF9B               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 13666  016224  0012               	return	
 13667  016226  0101               	movlb	1	; () banked
 13668  016228  519B               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 13669  01622A  0101               	movlb	1	; () banked
 13670  01622C  119A               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 13671  01622E  0101               	movlb	1	; () banked
 13672  016230  1199               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 13673  016232  E1EC               	bnz	l19
 13674  016234  0101               	movlb	1	; () banked
 13675  016236  0598               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 13676  016238  A0D8               	btfss	status,0,c
 13677  01623A  0012               	return	
 13678  01623C  D7E7               	goto	l19
 13679  01623E                     __end_of_DELAY_ms:
 13680                           	opt stack 0
 13681                           tblptru	equ	0xFF8
 13682                           tblptrh	equ	0xFF7
 13683                           tblptrl	equ	0xFF6
 13684                           tablat	equ	0xFF5
 13685                           prodh	equ	0xFF4
 13686                           prodl	equ	0xFF3
 13687                           intcon	equ	0xFF2
 13688                           intcon2	equ	0xFF1
 13689                           intcon3	equ	0xFF0
 13690                           indf0	equ	0xFEF
 13691                           postinc0	equ	0xFEE
 13692                           plusw0	equ	0xFEB
 13693                           fsr0h	equ	0xFEA
 13694                           fsr0l	equ	0xFE9
 13695                           wreg	equ	0xFE8
 13696                           indf1	equ	0xFE7
 13697                           postdec1	equ	0xFE5
 13698                           fsr1h	equ	0xFE2
 13699                           fsr1l	equ	0xFE1
 13700                           indf2	equ	0xFDF
 13701                           postinc2	equ	0xFDE
 13702                           postdec2	equ	0xFDD
 13703                           plusw2	equ	0xFDB
 13704                           fsr2h	equ	0xFDA
 13705                           fsr2l	equ	0xFD9
 13706                           status	equ	0xFD8
 13707                           
 13708 ;; *************** function ___lmul *****************
 13709 ;; Defined at:
 13710 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 13711 ;; Parameters:    Size  Location     Type
 13712 ;;  multiplier      4    0[BANK1 ] unsigned long 
 13713 ;;  multiplicand    4    4[BANK1 ] unsigned long 
 13714 ;; Auto vars:     Size  Location     Type
 13715 ;;  product         4    8[BANK1 ] unsigned long 
 13716 ;; Return value:  Size  Location     Type
 13717 ;;                  4    0[BANK1 ] unsigned long 
 13718 ;; Registers used:
 13719 ;;		wreg, status,2, status,0
 13720 ;; Tracked objects:
 13721 ;;		On entry : 0/0
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13725 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13726 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13728 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13729 ;;Total ram usage:       12 bytes
 13730 ;; Hardware stack levels used:    1
 13731 ;; Hardware stack levels required when called:    9
 13732 ;; This function calls:
 13733 ;;		Nothing
 13734 ;; This function is called by:
 13735 ;;		_DELAY_ms
 13736 ;;		_send_initial_update
 13737 ;;		_send_periodical_update
 13738 ;;		_DELAY_10us
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742                           	psect	text46
 13743  0167BA                     __ptext46:
 13744                           	opt stack 0
 13745  0167BA                     ___lmul:
 13746                           	opt stack 17
 13747                           
 13748                           ; BSR set to: 1
 13749                           ;incstack = 0
 13750  0167BA  0E00               	movlw	0
 13751  0167BC  0101               	movlb	1	; () banked
 13752  0167BE  6F92               	movwf	___lmul@product& (0+255),b
 13753  0167C0  0E00               	movlw	0
 13754  0167C2  6F93               	movwf	(___lmul@product+1)& (0+255),b
 13755  0167C4  0E00               	movlw	0
 13756  0167C6  6F94               	movwf	(___lmul@product+2)& (0+255),b
 13757  0167C8  0E00               	movlw	0
 13758  0167CA  6F95               	movwf	(___lmul@product+3)& (0+255),b
 13759  0167CC                     l12235:
 13760                           
 13761                           ; BSR set to: 1
 13762  0167CC  0101               	movlb	1	; () banked
 13763  0167CE  A18A               	btfss	___lmul@multiplier& (0+255),0,b
 13764  0167D0  D010               	goto	l12239
 13765                           
 13766                           ; BSR set to: 1
 13767  0167D2  0101               	movlb	1	; () banked
 13768  0167D4  518E               	movf	___lmul@multiplicand& (0+255),w,b
 13769  0167D6  0101               	movlb	1	; () banked
 13770  0167D8  2792               	addwf	___lmul@product& (0+255),f,b
 13771  0167DA  0101               	movlb	1	; () banked
 13772  0167DC  518F               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13773  0167DE  0101               	movlb	1	; () banked
 13774  0167E0  2393               	addwfc	(___lmul@product+1)& (0+255),f,b
 13775  0167E2  0101               	movlb	1	; () banked
 13776  0167E4  5190               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13777  0167E6  0101               	movlb	1	; () banked
 13778  0167E8  2394               	addwfc	(___lmul@product+2)& (0+255),f,b
 13779  0167EA  0101               	movlb	1	; () banked
 13780  0167EC  5191               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13781  0167EE  0101               	movlb	1	; () banked
 13782  0167F0  2395               	addwfc	(___lmul@product+3)& (0+255),f,b
 13783  0167F2                     l12239:
 13784                           
 13785                           ; BSR set to: 1
 13786  0167F2  0101               	movlb	1	; () banked
 13787  0167F4  90D8               	bcf	status,0,c
 13788  0167F6  378E               	rlcf	___lmul@multiplicand& (0+255),f,b
 13789  0167F8  378F               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13790  0167FA  3790               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13791  0167FC  3791               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13792                           
 13793                           ; BSR set to: 1
 13794  0167FE  0101               	movlb	1	; () banked
 13795  016800  90D8               	bcf	status,0,c
 13796  016802  338D               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13797  016804  338C               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13798  016806  338B               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13799  016808  338A               	rrcf	___lmul@multiplier& (0+255),f,b
 13800  01680A  0101               	movlb	1	; () banked
 13801  01680C  518A               	movf	___lmul@multiplier& (0+255),w,b
 13802  01680E  0101               	movlb	1	; () banked
 13803  016810  118B               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13804  016812  0101               	movlb	1	; () banked
 13805  016814  118C               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13806  016816  0101               	movlb	1	; () banked
 13807  016818  118D               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13808  01681A  A4D8               	btfss	status,2,c
 13809  01681C  D7D7               	goto	l12235
 13810                           
 13811                           ; BSR set to: 1
 13812  01681E  C192  F18A         	movff	___lmul@product,?___lmul
 13813  016822  C193  F18B         	movff	___lmul@product+1,?___lmul+1
 13814  016826  C194  F18C         	movff	___lmul@product+2,?___lmul+2
 13815  01682A  C195  F18D         	movff	___lmul@product+3,?___lmul+3
 13816                           
 13817                           ; BSR set to: 1
 13818  01682E  0012               	return		;funcret
 13819  016830                     __end_of___lmul:
 13820                           	opt stack 0
 13821                           tblptru	equ	0xFF8
 13822                           tblptrh	equ	0xFF7
 13823                           tblptrl	equ	0xFF6
 13824                           tablat	equ	0xFF5
 13825                           prodh	equ	0xFF4
 13826                           prodl	equ	0xFF3
 13827                           intcon	equ	0xFF2
 13828                           intcon2	equ	0xFF1
 13829                           intcon3	equ	0xFF0
 13830                           indf0	equ	0xFEF
 13831                           postinc0	equ	0xFEE
 13832                           plusw0	equ	0xFEB
 13833                           fsr0h	equ	0xFEA
 13834                           fsr0l	equ	0xFE9
 13835                           wreg	equ	0xFE8
 13836                           indf1	equ	0xFE7
 13837                           postdec1	equ	0xFE5
 13838                           fsr1h	equ	0xFE2
 13839                           fsr1l	equ	0xFE1
 13840                           indf2	equ	0xFDF
 13841                           postinc2	equ	0xFDE
 13842                           postdec2	equ	0xFDD
 13843                           plusw2	equ	0xFDB
 13844                           fsr2h	equ	0xFDA
 13845                           fsr2l	equ	0xFD9
 13846                           status	equ	0xFD8
 13847                           
 13848 ;; *************** function _InitSymbolTimer *****************
 13849 ;; Defined at:
 13850 ;;		line 59 in file "src/18F27J53/symbol.c"
 13851 ;; Parameters:    Size  Location     Type
 13852 ;;		None
 13853 ;; Auto vars:     Size  Location     Type
 13854 ;;		None
 13855 ;; Return value:  Size  Location     Type
 13856 ;;		None               void
 13857 ;; Registers used:
 13858 ;;		wreg, status,2
 13859 ;; Tracked objects:
 13860 ;;		On entry : 0/0
 13861 ;;		On exit  : 0/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13868 ;;Total ram usage:        0 bytes
 13869 ;; Hardware stack levels used:    1
 13870 ;; Hardware stack levels required when called:    9
 13871 ;; This function calls:
 13872 ;;		Nothing
 13873 ;; This function is called by:
 13874 ;;		_MiApp_ProtocolInit
 13875 ;; This function uses a non-reentrant model
 13876 ;;
 13877                           
 13878                           	psect	text47
 13879  016F9A                     __ptext47:
 13880                           	opt stack 0
 13881  016F9A                     _InitSymbolTimer:
 13882                           	opt stack 20
 13883                           
 13884                           ;symbol.c: 62: T1CON = 0b00110000;
 13885                           
 13886                           ; BSR set to: 1
 13887                           ;incstack = 0
 13888  016F9A  0E30               	movlw	48
 13889  016F9C  6ECD               	movwf	4045,c	;volatile
 13890                           
 13891                           ;symbol.c: 63: PIR1bits.TMR1IF = 0;
 13892  016F9E  909E               	bcf	3998,0,c	;volatile
 13893                           
 13894                           ;symbol.c: 64: PIE1bits.TMR1IE = 1;
 13895  016FA0  809D               	bsf	3997,0,c	;volatile
 13896                           
 13897                           ;symbol.c: 65: T1CONbits.TMR1ON = 1;
 13898  016FA2  80CD               	bsf	4045,0,c	;volatile
 13899                           
 13900                           ;symbol.c: 74: timerExtension1 = 0;
 13901  016FA4  0E00               	movlw	0
 13902  016FA6  0100               	movlb	0	; () banked
 13903  016FA8  6FBE               	movwf	_timerExtension1& (0+255),b	;volatile
 13904                           
 13905                           ;symbol.c: 75: timerExtension2 = 0;
 13906  016FAA  0E00               	movlw	0
 13907  016FAC  0100               	movlb	0	; () banked
 13908  016FAE  6FBF               	movwf	_timerExtension2& (0+255),b	;volatile
 13909                           
 13910                           ; BSR set to: 0
 13911  016FB0  0012               	return		;funcret
 13912  016FB2                     __end_of_InitSymbolTimer:
 13913                           	opt stack 0
 13914                           tblptru	equ	0xFF8
 13915                           tblptrh	equ	0xFF7
 13916                           tblptrl	equ	0xFF6
 13917                           tablat	equ	0xFF5
 13918                           prodh	equ	0xFF4
 13919                           prodl	equ	0xFF3
 13920                           intcon	equ	0xFF2
 13921                           intcon2	equ	0xFF1
 13922                           intcon3	equ	0xFF0
 13923                           indf0	equ	0xFEF
 13924                           postinc0	equ	0xFEE
 13925                           plusw0	equ	0xFEB
 13926                           fsr0h	equ	0xFEA
 13927                           fsr0l	equ	0xFE9
 13928                           wreg	equ	0xFE8
 13929                           indf1	equ	0xFE7
 13930                           postdec1	equ	0xFE5
 13931                           fsr1h	equ	0xFE2
 13932                           fsr1l	equ	0xFE1
 13933                           indf2	equ	0xFDF
 13934                           postinc2	equ	0xFDE
 13935                           postdec2	equ	0xFDD
 13936                           plusw2	equ	0xFDB
 13937                           fsr2h	equ	0xFDA
 13938                           fsr2l	equ	0xFD9
 13939                           status	equ	0xFD8
 13940                           
 13941 ;; *************** function _MiApp_EstablishConnection *****************
 13942 ;; Defined at:
 13943 ;;		line 4095 in file "src/miwi/miwi_mesh.c"
 13944 ;; Parameters:    Size  Location     Type
 13945 ;;  ActiveScanIn    1    wreg     unsigned char 
 13946 ;;  Mode            1  113[BANK1 ] unsigned char 
 13947 ;; Auto vars:     Size  Location     Type
 13948 ;;  ActiveScanIn    1   36[BANK3 ] unsigned char 
 13949 ;;  t2              4   31[BANK3 ] struct _MIWI_TICK
 13950 ;;  t1              4   27[BANK3 ] struct _MIWI_TICK
 13951 ;;  i               1   37[BANK3 ] unsigned char 
 13952 ;;  retry           1   35[BANK3 ] unsigned char 
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  1    wreg      unsigned char 
 13955 ;; Registers used:
 13956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13962 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13963 ;;      Locals:         0       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0
 13964 ;;      Temps:          0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0
 13965 ;;      Totals:         0       0       1       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 13966 ;;Total ram usage:       20 bytes
 13967 ;; Hardware stack levels used:    1
 13968 ;; Hardware stack levels required when called:   18
 13969 ;; This function calls:
 13970 ;;		_MiApp_DiscardMessage
 13971 ;;		_MiApp_MessageAvailable
 13972 ;;		_MiApp_SearchConnection
 13973 ;;		_MiApp_SetChannel
 13974 ;;		_MiMAC_SetAltAddress
 13975 ;;		_MiWi_TickGet
 13976 ;;		_OpenSocket
 13977 ;;		_SearchForLongAddress
 13978 ;;		_SendMACPacket
 13979 ;;		_findNextNetworkEntry
 13980 ;; This function is called by:
 13981 ;;		_main
 13982 ;; This function uses a non-reentrant model
 13983 ;;
 13984                           
 13985                           	psect	text48
 13986  012932                     __ptext48:
 13987                           	opt stack 0
 13988  012932                     _MiApp_EstablishConnection:
 13989                           	opt stack 12
 13990                           
 13991                           ; BSR set to: 0
 13992                           ;incstack = 0
 13993                           ;MiApp_EstablishConnection@ActiveScanIndex stored from wreg
 13994  012932  0103               	movlb	3	; () banked
 13995  012934  6FF8               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 13996                           
 13997                           ;miwi_mesh.c: 4097: uint8_t retry = 3;
 13998  012936  0E03               	movlw	3
 13999  012938  0103               	movlb	3	; () banked
 14000  01293A  6FF7               	movwf	MiApp_EstablishConnection@retry& (0+255),b
 14001                           
 14002                           ; BSR set to: 3
 14003                           ;miwi_mesh.c: 4098: uint8_t i;
 14004                           ;miwi_mesh.c: 4099: MIWI_TICK t1, t2;
 14005                           ;miwi_mesh.c: 4101: if( Mode == 0x01 )
 14006  01293C  0101               	movlb	1	; () banked
 14007  01293E  05FB               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
 14008  012940  A4D8               	btfss	status,2,c
 14009  012942  D014               	goto	l14271
 14010                           
 14011                           ; BSR set to: 1
 14012                           ;miwi_mesh.c: 4102: {
 14013                           ;miwi_mesh.c: 4106: OpenSocket();
 14014  012944  EC9E  F0AE         	call	_OpenSocket	;wreg free
 14015                           
 14016                           ;miwi_mesh.c: 4107: while(openSocketInfo.status.bits.requestIsOpen)
 14017  012948  D006               	goto	l14259
 14018  01294A                     l14255:
 14019                           
 14020                           ;miwi_mesh.c: 4108: {
 14021                           ;miwi_mesh.c: 4109: if( MiApp_MessageAvailable())
 14022  01294A  ECE2  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 14023  01294E  0900               	iorlw	0
 14024  012950  A4D8               	btfss	status,2,c
 14025                           
 14026                           ;miwi_mesh.c: 4110: {
 14027                           ;miwi_mesh.c: 4111: MiApp_DiscardMessage();
 14028  012952  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 14029  012956                     l14259:
 14030  012956  0101               	movlb	1	; () banked
 14031  012958  B300               	btfsc	_openSocketInfo& (0+255),1,b
 14032  01295A  D7F7               	goto	l14255
 14033                           
 14034                           ; BSR set to: 1
 14035                           ;miwi_mesh.c: 4112: }
 14036                           ;miwi_mesh.c: 4122: }
 14037                           ;miwi_mesh.c: 4123: if( openSocketInfo.status.bits.matchFound )
 14038  01295C  0101               	movlb	1	; () banked
 14039  01295E  A100               	btfss	_openSocketInfo& (0+255),0,b
 14040  012960  D003               	goto	l14265
 14041                           
 14042                           ; BSR set to: 1
 14043                           ;miwi_mesh.c: 4124: {
 14044                           ;miwi_mesh.c: 4125: return openSocketInfo.socketHandle;
 14045  012962  0101               	movlb	1	; () banked
 14046  012964  5101               	movf	(_openSocketInfo+1)& (0+255),w,b
 14047                           
 14048                           ; BSR set to: 1
 14049  012966  0012               	return	
 14050  012968                     l14265:
 14051                           
 14052                           ; BSR set to: 1
 14053                           ;miwi_mesh.c: 4126: }
 14054                           ;miwi_mesh.c: 4127: return 0xFF;
 14055  012968  0EFF               	movlw	255
 14056                           
 14057                           ; BSR set to: 1
 14058  01296A  0012               	return	
 14059  01296C                     l14271:
 14060                           
 14061                           ; BSR set to: 1
 14062                           ;miwi_mesh.c: 4129: else if( Mode == 0x00)
 14063  01296C  0101               	movlb	1	; () banked
 14064  01296E  51FB               	movf	MiApp_EstablishConnection@Mode& (0+255),w,b
 14065  012970  0101               	movlb	1	; () banked
 14066  012972  A4D8               	btfss	status,2,c
 14067  012974  D1F7               	goto	l14367
 14068                           
 14069                           ; BSR set to: 1
 14070                           ;miwi_mesh.c: 4130: {
 14071                           ;miwi_mesh.c: 4131: if( ActiveScanIndex == 0xFF )
 14072  012976  0103               	movlb	3	; () banked
 14073  012978  29F8               	incf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14074  01297A  B4D8               	btfsc	status,2,c
 14075  01297C  D006               	goto	l14281
 14076  01297E  D02A               	goto	l14285
 14077  012980                     l784:
 14078                           
 14079                           ;miwi_mesh.c: 4134: {
 14080                           ;miwi_mesh.c: 4135: if( --retry == 0 )
 14081  012980  0103               	movlb	3	; () banked
 14082  012982  2FF7               	decfsz	MiApp_EstablishConnection@retry& (0+255),f,b
 14083  012984  D002               	goto	l14281
 14084                           
 14085                           ; BSR set to: 3
 14086                           ;miwi_mesh.c: 4136: {
 14087                           ;miwi_mesh.c: 4137: return 0xFF;
 14088  012986  0EFF               	movlw	255
 14089                           
 14090                           ; BSR set to: 3
 14091  012988  0012               	return	
 14092  01298A                     l14281:
 14093                           
 14094                           ; BSR set to: 3
 14095  01298A  C189  F3E7         	movff	_currentChannel,??_MiApp_EstablishConnection
 14096  01298E  0E01               	movlw	1
 14097  012990  0103               	movlb	3	; () banked
 14098  012992  6FE8               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 14099  012994  6BE9               	clrf	(??_MiApp_EstablishConnection+2)& (0+255),b
 14100  012996  6BEA               	clrf	(??_MiApp_EstablishConnection+3)& (0+255),b
 14101  012998  6BEB               	clrf	(??_MiApp_EstablishConnection+4)& (0+255),b
 14102  01299A  0103               	movlb	3	; () banked
 14103  01299C  2BE7               	incf	??_MiApp_EstablishConnection& (0+255),f,b
 14104  01299E  D006               	goto	u17000
 14105  0129A0                     u17005:
 14106  0129A0  90D8               	bcf	status,0,c
 14107  0129A2  0103               	movlb	3	; () banked
 14108  0129A4  37E8               	rlcf	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14109  0129A6  37E9               	rlcf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14110  0129A8  37EA               	rlcf	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14111  0129AA  37EB               	rlcf	(??_MiApp_EstablishConnection+4)& (0+255),f,b
 14112  0129AC                     u17000:
 14113  0129AC  0103               	movlb	3	; () banked
 14114  0129AE  2FE7               	decfsz	??_MiApp_EstablishConnection& (0+255),f,b
 14115  0129B0  D7F7               	goto	u17005
 14116  0129B2  C3E8  F1EE         	movff	??_MiApp_EstablishConnection+1,MiApp_SearchConnection@ChannelMap
 14117  0129B6  C3E9  F1EF         	movff	??_MiApp_EstablishConnection+2,MiApp_SearchConnection@ChannelMap+1
 14118  0129BA  C3EA  F1F0         	movff	??_MiApp_EstablishConnection+3,MiApp_SearchConnection@ChannelMap+2
 14119  0129BE  C3EB  F1F1         	movff	??_MiApp_EstablishConnection+4,MiApp_SearchConnection@ChannelMap+3
 14120  0129C2  0E0A               	movlw	10
 14121  0129C4  EC00  F09D         	call	_MiApp_SearchConnection
 14122  0129C8  0900               	iorlw	0
 14123  0129CA  B4D8               	btfsc	status,2,c
 14124  0129CC  D7D9               	goto	l784
 14125                           
 14126                           ;miwi_mesh.c: 4138: }
 14127                           ;miwi_mesh.c: 4139: }
 14128                           ;miwi_mesh.c: 4140: ActiveScanIndex = 0;
 14129  0129CE  0E00               	movlw	0
 14130  0129D0  0103               	movlb	3	; () banked
 14131  0129D2  6FF8               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 14132  0129D4                     l14285:
 14133                           
 14134                           ; BSR set to: 3
 14135                           ;miwi_mesh.c: 4141: }
 14136                           ;miwi_mesh.c: 4149: tempPANID.Val = ActiveScanResults[ActiveScanIndex].PANID.Val;
 14137  0129D4  0103               	movlb	3	; () banked
 14138  0129D6  51F8               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14139  0129D8  0D0A               	mullw	10
 14140  0129DA  0E05               	movlw	5
 14141  0129DC  26F3               	addwf	prodl,f,c
 14142  0129DE  0E00               	movlw	0
 14143  0129E0  22F4               	addwfc	prodh,f,c
 14144  0129E2  0E00               	movlw	low _ActiveScanResults
 14145  0129E4  24F3               	addwf	prodl,w,c
 14146  0129E6  6ED9               	movwf	fsr2l,c
 14147  0129E8  0E03               	movlw	high _ActiveScanResults
 14148  0129EA  20F4               	addwfc	prodh,w,c
 14149  0129EC  6EDA               	movwf	fsr2h,c
 14150  0129EE  CFDE F13C          	movff	postinc2,_tempPANID
 14151  0129F2  CFDD F13D          	movff	postdec2,_tempPANID+1
 14152                           
 14153                           ; BSR set to: 3
 14154                           ;miwi_mesh.c: 4150: for(i = 0; i < 4; i++)
 14155  0129F6  0E00               	movlw	0
 14156  0129F8  0103               	movlb	3	; () banked
 14157  0129FA  6FF9               	movwf	MiApp_EstablishConnection@i& (0+255),b
 14158  0129FC                     l14289:
 14159                           
 14160                           ; BSR set to: 3
 14161  0129FC  0E03               	movlw	3
 14162  0129FE  0103               	movlb	3	; () banked
 14163  012A00  65F9               	cpfsgt	MiApp_EstablishConnection@i& (0+255),b
 14164  012A02  D001               	goto	l14293
 14165  012A04  D02C               	goto	l14299
 14166  012A06                     l14293:
 14167                           
 14168                           ; BSR set to: 3
 14169                           ;miwi_mesh.c: 4151: {
 14170                           ;miwi_mesh.c: 4152: tempLongAddress[i] = ActiveScanResults[ActiveScanIndex].Address[i];
 14171  012A06  0103               	movlb	3	; () banked
 14172  012A08  51F9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 14173  012A0A  0D01               	mullw	1
 14174  012A0C  0E01               	movlw	1
 14175  012A0E  26F3               	addwf	prodl,f,c
 14176  012A10  0E00               	movlw	0
 14177  012A12  22F4               	addwfc	prodh,f,c
 14178  012A14  0E00               	movlw	low _ActiveScanResults
 14179  012A16  0103               	movlb	3	; () banked
 14180  012A18  6FE7               	movwf	??_MiApp_EstablishConnection& (0+255),b
 14181  012A1A  0E03               	movlw	high _ActiveScanResults
 14182  012A1C  0103               	movlb	3	; () banked
 14183  012A1E  6FE8               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 14184  012A20  50F3               	movf	prodl,w,c
 14185  012A22  0103               	movlb	3	; () banked
 14186  012A24  27E7               	addwf	??_MiApp_EstablishConnection& (0+255),f,b
 14187  012A26  50F4               	movf	prodh,w,c
 14188  012A28  0103               	movlb	3	; () banked
 14189  012A2A  23E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14190  012A2C  0103               	movlb	3	; () banked
 14191  012A2E  51F8               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14192  012A30  0D0A               	mullw	10
 14193  012A32  50F3               	movf	prodl,w,c
 14194  012A34  0103               	movlb	3	; () banked
 14195  012A36  25E7               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 14196  012A38  6ED9               	movwf	fsr2l,c
 14197  012A3A  50F4               	movf	prodh,w,c
 14198  012A3C  0103               	movlb	3	; () banked
 14199  012A3E  21E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 14200  012A40  6EDA               	movwf	fsr2h,c
 14201  012A42  0103               	movlb	3	; () banked
 14202  012A44  51F9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 14203  012A46  0D01               	mullw	1
 14204  012A48  0E26               	movlw	low _tempLongAddress
 14205  012A4A  24F3               	addwf	prodl,w,c
 14206  012A4C  6EE1               	movwf	fsr1l,c
 14207  012A4E  0E01               	movlw	high _tempLongAddress
 14208  012A50  20F4               	addwfc	prodh,w,c
 14209  012A52  6EE2               	movwf	fsr1h,c
 14210  012A54  CFDF FFE7          	movff	indf2,indf1
 14211                           
 14212                           ; BSR set to: 3
 14213  012A58  0103               	movlb	3	; () banked
 14214  012A5A  2BF9               	incf	MiApp_EstablishConnection@i& (0+255),f,b
 14215  012A5C  D7CF               	goto	l14289
 14216  012A5E                     l14299:
 14217                           
 14218                           ; BSR set to: 3
 14219                           ;miwi_mesh.c: 4153: }
 14220                           ;miwi_mesh.c: 4154: myParent = SearchForLongAddress();
 14221  012A5E  EC71  F0AD         	call	_SearchForLongAddress	;wreg free
 14222  012A62  0101               	movlb	1	; () banked
 14223  012A64  6F4C               	movwf	_myParent& (0+255),b
 14224                           
 14225                           ; BSR set to: 1
 14226                           ;miwi_mesh.c: 4157: if( myParent == 0xFF )
 14227  012A66  0101               	movlb	1	; () banked
 14228  012A68  294C               	incf	_myParent& (0+255),w,b
 14229  012A6A  A4D8               	btfss	status,2,c
 14230  012A6C  D00A               	goto	l14309
 14231                           
 14232                           ; BSR set to: 1
 14233                           ;miwi_mesh.c: 4158: {
 14234                           ;miwi_mesh.c: 4159: if( (myParent = findNextNetworkEntry()) == 0xFF )
 14235  012A6E  EC8B  F0B6         	call	_findNextNetworkEntry	;wreg free
 14236  012A72  0101               	movlb	1	; () banked
 14237  012A74  6F4C               	movwf	_myParent& (0+255),b
 14238  012A76  0101               	movlb	1	; () banked
 14239  012A78  294C               	incf	_myParent& (0+255),w,b
 14240  012A7A  A4D8               	btfss	status,2,c
 14241  012A7C  D002               	goto	l14309
 14242                           
 14243                           ; BSR set to: 1
 14244                           ;miwi_mesh.c: 4160: {
 14245                           ;miwi_mesh.c: 4161: return 0xFF;
 14246  012A7E  0EFF               	movlw	255
 14247                           
 14248                           ; BSR set to: 1
 14249  012A80  0012               	return	
 14250  012A82                     l14309:
 14251                           
 14252                           ; BSR set to: 1
 14253                           ;miwi_mesh.c: 4162: }
 14254                           ;miwi_mesh.c: 4163: }
 14255                           ;miwi_mesh.c: 4165: ConnectionTable[myParent].status.Val = 0;
 14256  012A82  0101               	movlb	1	; () banked
 14257  012A84  514C               	movf	_myParent& (0+255),w,b
 14258  012A86  0D09               	mullw	9
 14259  012A88  0E08               	movlw	8
 14260  012A8A  26F3               	addwf	prodl,f,c
 14261  012A8C  0E00               	movlw	0
 14262  012A8E  22F4               	addwfc	prodh,f,c
 14263  012A90  0E46               	movlw	low _ConnectionTable
 14264  012A92  24F3               	addwf	prodl,w,c
 14265  012A94  6ED9               	movwf	fsr2l,c
 14266  012A96  0E02               	movlw	high _ConnectionTable
 14267  012A98  20F4               	addwfc	prodh,w,c
 14268  012A9A  6EDA               	movwf	fsr2h,c
 14269  012A9C  0E00               	movlw	0
 14270  012A9E  6EDF               	movwf	indf2,c
 14271                           
 14272                           ; BSR set to: 1
 14273                           ;miwi_mesh.c: 4166: ConnectionTable[myParent].PANID.Val = ActiveScanResults[ActiveScanIn
      +                          dex].PANID.Val;
 14274  012AA0  0103               	movlb	3	; () banked
 14275  012AA2  51F8               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14276  012AA4  0D0A               	mullw	10
 14277  012AA6  0E05               	movlw	5
 14278  012AA8  26F3               	addwf	prodl,f,c
 14279  012AAA  0E00               	movlw	0
 14280  012AAC  22F4               	addwfc	prodh,f,c
 14281  012AAE  0E00               	movlw	low _ActiveScanResults
 14282  012AB0  24F3               	addwf	prodl,w,c
 14283  012AB2  6ED9               	movwf	fsr2l,c
 14284  012AB4  0E03               	movlw	high _ActiveScanResults
 14285  012AB6  20F4               	addwfc	prodh,w,c
 14286  012AB8  6EDA               	movwf	fsr2h,c
 14287  012ABA  0101               	movlb	1	; () banked
 14288  012ABC  514C               	movf	_myParent& (0+255),w,b
 14289  012ABE  0D09               	mullw	9
 14290  012AC0  0E46               	movlw	low _ConnectionTable
 14291  012AC2  24F3               	addwf	prodl,w,c
 14292  012AC4  6EE1               	movwf	fsr1l,c
 14293  012AC6  0E02               	movlw	high _ConnectionTable
 14294  012AC8  20F4               	addwfc	prodh,w,c
 14295  012ACA  6EE2               	movwf	fsr1h,c
 14296  012ACC  CFDE FFE6          	movff	postinc2,postinc1
 14297  012AD0  CFDD FFE5          	movff	postdec2,postdec1
 14298                           
 14299                           ; BSR set to: 1
 14300                           ;miwi_mesh.c: 4172: for(i = 0; i < 4; i++)
 14301  012AD4  0E00               	movlw	0
 14302  012AD6  0103               	movlb	3	; () banked
 14303  012AD8  6FF9               	movwf	MiApp_EstablishConnection@i& (0+255),b
 14304  012ADA                     l14315:
 14305                           
 14306                           ; BSR set to: 3
 14307  012ADA  0E03               	movlw	3
 14308  012ADC  0103               	movlb	3	; () banked
 14309  012ADE  65F9               	cpfsgt	MiApp_EstablishConnection@i& (0+255),b
 14310  012AE0  D001               	goto	l14319
 14311  012AE2  D041               	goto	l14325
 14312  012AE4                     l14319:
 14313                           
 14314                           ; BSR set to: 3
 14315                           ;miwi_mesh.c: 4173: {
 14316                           ;miwi_mesh.c: 4174: ConnectionTable[myParent].Address[i] = ActiveScanResults[ActiveScanI
      +                          ndex].Address[i];
 14317  012AE4  0103               	movlb	3	; () banked
 14318  012AE6  51F9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 14319  012AE8  0D01               	mullw	1
 14320  012AEA  0E01               	movlw	1
 14321  012AEC  26F3               	addwf	prodl,f,c
 14322  012AEE  0E00               	movlw	0
 14323  012AF0  22F4               	addwfc	prodh,f,c
 14324  012AF2  0E00               	movlw	low _ActiveScanResults
 14325  012AF4  0103               	movlb	3	; () banked
 14326  012AF6  6FE7               	movwf	??_MiApp_EstablishConnection& (0+255),b
 14327  012AF8  0E03               	movlw	high _ActiveScanResults
 14328  012AFA  0103               	movlb	3	; () banked
 14329  012AFC  6FE8               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 14330  012AFE  50F3               	movf	prodl,w,c
 14331  012B00  0103               	movlb	3	; () banked
 14332  012B02  27E7               	addwf	??_MiApp_EstablishConnection& (0+255),f,b
 14333  012B04  50F4               	movf	prodh,w,c
 14334  012B06  0103               	movlb	3	; () banked
 14335  012B08  23E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14336  012B0A  0103               	movlb	3	; () banked
 14337  012B0C  51F8               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14338  012B0E  0D0A               	mullw	10
 14339  012B10  50F3               	movf	prodl,w,c
 14340  012B12  0103               	movlb	3	; () banked
 14341  012B14  25E7               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 14342  012B16  6ED9               	movwf	fsr2l,c
 14343  012B18  50F4               	movf	prodh,w,c
 14344  012B1A  0103               	movlb	3	; () banked
 14345  012B1C  21E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 14346  012B1E  6EDA               	movwf	fsr2h,c
 14347  012B20  0103               	movlb	3	; () banked
 14348  012B22  51F9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 14349  012B24  0D01               	mullw	1
 14350  012B26  0E04               	movlw	4
 14351  012B28  26F3               	addwf	prodl,f,c
 14352  012B2A  0E00               	movlw	0
 14353  012B2C  22F4               	addwfc	prodh,f,c
 14354  012B2E  0E46               	movlw	low _ConnectionTable
 14355  012B30  0103               	movlb	3	; () banked
 14356  012B32  6FE9               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
 14357  012B34  0E02               	movlw	high _ConnectionTable
 14358  012B36  0103               	movlb	3	; () banked
 14359  012B38  6FEA               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
 14360  012B3A  50F3               	movf	prodl,w,c
 14361  012B3C  0103               	movlb	3	; () banked
 14362  012B3E  27E9               	addwf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14363  012B40  50F4               	movf	prodh,w,c
 14364  012B42  0103               	movlb	3	; () banked
 14365  012B44  23EA               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14366  012B46  0101               	movlb	1	; () banked
 14367  012B48  514C               	movf	_myParent& (0+255),w,b
 14368  012B4A  0D09               	mullw	9
 14369  012B4C  50F3               	movf	prodl,w,c
 14370  012B4E  0103               	movlb	3	; () banked
 14371  012B50  25E9               	addwf	(??_MiApp_EstablishConnection+2)& (0+255),w,b
 14372  012B52  6EE1               	movwf	fsr1l,c
 14373  012B54  50F4               	movf	prodh,w,c
 14374  012B56  0103               	movlb	3	; () banked
 14375  012B58  21EA               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),w,b
 14376  012B5A  6EE2               	movwf	fsr1h,c
 14377  012B5C  CFDF FFE7          	movff	indf2,indf1
 14378                           
 14379                           ; BSR set to: 3
 14380  012B60  0103               	movlb	3	; () banked
 14381  012B62  2BF9               	incf	MiApp_EstablishConnection@i& (0+255),f,b
 14382  012B64  D7BA               	goto	l14315
 14383  012B66                     l14325:
 14384                           
 14385                           ; BSR set to: 3
 14386                           ;miwi_mesh.c: 4175: }
 14387                           ;miwi_mesh.c: 4176: ConnectionTable[myParent].status.bits.longAddressValid = 1;
 14388  012B66  0101               	movlb	1	; () banked
 14389  012B68  514C               	movf	_myParent& (0+255),w,b
 14390  012B6A  0D09               	mullw	9
 14391  012B6C  0E08               	movlw	8
 14392  012B6E  26F3               	addwf	prodl,f,c
 14393  012B70  0E00               	movlw	0
 14394  012B72  22F4               	addwfc	prodh,f,c
 14395  012B74  0E46               	movlw	low _ConnectionTable
 14396  012B76  24F3               	addwf	prodl,w,c
 14397  012B78  6ED9               	movwf	fsr2l,c
 14398  012B7A  0E02               	movlw	high _ConnectionTable
 14399  012B7C  20F4               	addwfc	prodh,w,c
 14400  012B7E  6EDA               	movwf	fsr2h,c
 14401  012B80  0102               	movlb	2	; () banked
 14402  012B82  84DF               	bsf	indf2,2,c
 14403                           
 14404                           ;miwi_mesh.c: 4185: ConnectionTable[myParent].status.bits.directConnection = 1;
 14405  012B84  0101               	movlb	1	; () banked
 14406  012B86  514C               	movf	_myParent& (0+255),w,b
 14407  012B88  0D09               	mullw	9
 14408  012B8A  0E08               	movlw	8
 14409  012B8C  26F3               	addwf	prodl,f,c
 14410  012B8E  0E00               	movlw	0
 14411  012B90  22F4               	addwfc	prodh,f,c
 14412  012B92  0E46               	movlw	low _ConnectionTable
 14413  012B94  24F3               	addwf	prodl,w,c
 14414  012B96  6ED9               	movwf	fsr2l,c
 14415  012B98  0E02               	movlw	high _ConnectionTable
 14416  012B9A  20F4               	addwfc	prodh,w,c
 14417  012B9C  6EDA               	movwf	fsr2h,c
 14418  012B9E  0102               	movlb	2	; () banked
 14419  012BA0  82DF               	bsf	indf2,1,c
 14420                           
 14421                           ;miwi_mesh.c: 4186: ConnectionTable[myParent].status.bits.isFamily = 1;
 14422  012BA2  0101               	movlb	1	; () banked
 14423  012BA4  514C               	movf	_myParent& (0+255),w,b
 14424  012BA6  0D09               	mullw	9
 14425  012BA8  0E08               	movlw	8
 14426  012BAA  26F3               	addwf	prodl,f,c
 14427  012BAC  0E00               	movlw	0
 14428  012BAE  22F4               	addwfc	prodh,f,c
 14429  012BB0  0E46               	movlw	low _ConnectionTable
 14430  012BB2  24F3               	addwf	prodl,w,c
 14431  012BB4  6ED9               	movwf	fsr2l,c
 14432  012BB6  0E02               	movlw	high _ConnectionTable
 14433  012BB8  20F4               	addwfc	prodh,w,c
 14434  012BBA  6EDA               	movwf	fsr2h,c
 14435  012BBC  0102               	movlb	2	; () banked
 14436  012BBE  8ADF               	bsf	indf2,5,c
 14437                           
 14438                           ;miwi_mesh.c: 4187: ConnectionTable[myParent].status.bits.RXOnWhenIdle = 1;
 14439  012BC0  0101               	movlb	1	; () banked
 14440  012BC2  514C               	movf	_myParent& (0+255),w,b
 14441  012BC4  0D09               	mullw	9
 14442  012BC6  0E08               	movlw	8
 14443  012BC8  26F3               	addwf	prodl,f,c
 14444  012BCA  0E00               	movlw	0
 14445  012BCC  22F4               	addwfc	prodh,f,c
 14446  012BCE  0E46               	movlw	low _ConnectionTable
 14447  012BD0  24F3               	addwf	prodl,w,c
 14448  012BD2  6ED9               	movwf	fsr2l,c
 14449  012BD4  0E02               	movlw	high _ConnectionTable
 14450  012BD6  20F4               	addwfc	prodh,w,c
 14451  012BD8  6EDA               	movwf	fsr2h,c
 14452  012BDA  0102               	movlb	2	; () banked
 14453  012BDC  80DF               	bsf	indf2,0,c
 14454                           
 14455                           ; BSR set to: 2
 14456                           ;miwi_mesh.c: 4189: MiApp_SetChannel(ActiveScanResults[ActiveScanIndex].Channel);
 14457  012BDE  0103               	movlb	3	; () banked
 14458  012BE0  51F8               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14459  012BE2  0D0A               	mullw	10
 14460  012BE4  0E00               	movlw	low _ActiveScanResults
 14461  012BE6  24F3               	addwf	prodl,w,c
 14462  012BE8  6ED9               	movwf	fsr2l,c
 14463  012BEA  0E03               	movlw	high _ActiveScanResults
 14464  012BEC  20F4               	addwfc	prodh,w,c
 14465  012BEE  6EDA               	movwf	fsr2h,c
 14466  012BF0  50DF               	movf	indf2,w,c
 14467  012BF2  EC87  F0B7         	call	_MiApp_SetChannel
 14468                           
 14469                           ;miwi_mesh.c: 4192: myPANID.Val = ConnectionTable[myParent].PANID.Val;
 14470  012BF6  0101               	movlb	1	; () banked
 14471  012BF8  514C               	movf	_myParent& (0+255),w,b
 14472  012BFA  0D09               	mullw	9
 14473  012BFC  0E46               	movlw	low _ConnectionTable
 14474  012BFE  24F3               	addwf	prodl,w,c
 14475  012C00  6ED9               	movwf	fsr2l,c
 14476  012C02  0E02               	movlw	high _ConnectionTable
 14477  012C04  20F4               	addwfc	prodh,w,c
 14478  012C06  6EDA               	movwf	fsr2h,c
 14479  012C08  CFDE F183          	movff	postinc2,_myPANID
 14480  012C0C  CFDD F184          	movff	postdec2,_myPANID+1
 14481                           
 14482                           ; BSR set to: 1
 14483                           ;miwi_mesh.c: 4193: tempShortAddress.Val = 0xFFFF;
 14484  012C10  0101               	movlb	1	; () banked
 14485  012C12  6987               	setf	_tempShortAddress& (0+255),b
 14486  012C14  6988               	setf	(_tempShortAddress+1)& (0+255),b
 14487                           
 14488                           ; BSR set to: 1
 14489                           ;miwi_mesh.c: 4194: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 14490  012C16  0E87               	movlw	low _tempShortAddress
 14491  012C18  0101               	movlb	1	; () banked
 14492  012C1A  6F8A               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 14493  012C1C  0E01               	movlw	high _tempShortAddress
 14494  012C1E  0101               	movlb	1	; () banked
 14495  012C20  6F8B               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 14496  012C22  0E83               	movlw	low _myPANID
 14497  012C24  0101               	movlb	1	; () banked
 14498  012C26  6F8C               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 14499  012C28  0E01               	movlw	high _myPANID
 14500  012C2A  0101               	movlb	1	; () banked
 14501  012C2C  6F8D               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 14502  012C2E  ECFC  F0B7         	call	_MiMAC_SetAltAddress	;wreg free
 14503                           
 14504                           ;miwi_mesh.c: 4197: {TxData = 0;};
 14505  012C32  0E00               	movlw	0
 14506  012C34  0101               	movlb	1	; () banked
 14507  012C36  6F46               	movwf	_TxData& (0+255),b
 14508                           
 14509                           ; BSR set to: 1
 14510                           ;miwi_mesh.c: 4198: TxBuffer[TxData++] = 0x01;
 14511  012C38  0101               	movlb	1	; () banked
 14512  012C3A  5146               	movf	_TxData& (0+255),w,b
 14513  012C3C  0D01               	mullw	1
 14514  012C3E  0E4E               	movlw	low _TxBuffer
 14515  012C40  24F3               	addwf	prodl,w,c
 14516  012C42  6ED9               	movwf	fsr2l,c
 14517  012C44  0E01               	movlw	high _TxBuffer
 14518  012C46  20F4               	addwfc	prodh,w,c
 14519  012C48  6EDA               	movwf	fsr2h,c
 14520  012C4A  0E01               	movlw	1
 14521  012C4C  6EDF               	movwf	indf2,c
 14522                           
 14523                           ; BSR set to: 1
 14524  012C4E  0101               	movlb	1	; () banked
 14525  012C50  2B46               	incf	_TxData& (0+255),f,b
 14526                           
 14527                           ; BSR set to: 1
 14528                           ;miwi_mesh.c: 4199: TxBuffer[TxData++] = MiWiCapacityInfo.Val;
 14529  012C52  0101               	movlb	1	; () banked
 14530  012C54  5146               	movf	_TxData& (0+255),w,b
 14531  012C56  0D01               	mullw	1
 14532  012C58  0E4E               	movlw	low _TxBuffer
 14533  012C5A  24F3               	addwf	prodl,w,c
 14534  012C5C  6ED9               	movwf	fsr2l,c
 14535  012C5E  0E01               	movlw	high _TxBuffer
 14536  012C60  20F4               	addwfc	prodh,w,c
 14537  012C62  6EDA               	movwf	fsr2h,c
 14538  012C64  C143  FFDF         	movff	_MiWiCapacityInfo,indf2
 14539                           
 14540                           ; BSR set to: 1
 14541  012C68  0101               	movlb	1	; () banked
 14542  012C6A  2B46               	incf	_TxData& (0+255),f,b
 14543                           
 14544                           ; BSR set to: 1
 14545                           ;miwi_mesh.c: 4210: SendMACPacket(ConnectionTable[myParent].Address, 0x01);
 14546  012C6C  0101               	movlb	1	; () banked
 14547  012C6E  514C               	movf	_myParent& (0+255),w,b
 14548  012C70  0D09               	mullw	9
 14549  012C72  0E04               	movlw	4
 14550  012C74  26F3               	addwf	prodl,f,c
 14551  012C76  0E00               	movlw	0
 14552  012C78  22F4               	addwfc	prodh,f,c
 14553  012C7A  0E46               	movlw	low _ConnectionTable
 14554  012C7C  24F3               	addwf	prodl,w,c
 14555  012C7E  0101               	movlb	1	; () banked
 14556  012C80  6FC3               	movwf	SendMACPacket@Address& (0+255),b
 14557  012C82  0E02               	movlw	high _ConnectionTable
 14558  012C84  20F4               	addwfc	prodh,w,c
 14559  012C86  0101               	movlb	1	; () banked
 14560  012C88  6FC4               	movwf	(SendMACPacket@Address+1)& (0+255),b
 14561  012C8A  0E01               	movlw	1
 14562  012C8C  0101               	movlb	1	; () banked
 14563  012C8E  6FC5               	movwf	SendMACPacket@PacketType& (0+255),b
 14564  012C90  EC64  F0B3         	call	_SendMACPacket	;wreg free
 14565                           
 14566                           ;miwi_mesh.c: 4213: t1 = MiWi_TickGet();
 14567  012C94  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 14568  012C98  C18A  F3EF         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
 14569  012C9C  C18B  F3F0         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
 14570  012CA0  C18C  F3F1         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
 14571  012CA4  C18D  F3F2         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
 14572                           
 14573                           ;miwi_mesh.c: 4214: while(ConnectionTable[myParent].status.bits.FinishJoin == 0 )
 14574  012CA8  D04A               	goto	l14361
 14575  012CAA                     l14349:
 14576                           
 14577                           ;miwi_mesh.c: 4215: {
 14578                           ;miwi_mesh.c: 4216: if( MiApp_MessageAvailable())
 14579  012CAA  ECE2  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 14580  012CAE  0900               	iorlw	0
 14581  012CB0  A4D8               	btfss	status,2,c
 14582                           
 14583                           ;miwi_mesh.c: 4217: {
 14584                           ;miwi_mesh.c: 4218: MiApp_DiscardMessage();
 14585  012CB2  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 14586                           
 14587                           ;miwi_mesh.c: 4219: }
 14588                           ;miwi_mesh.c: 4221: t2 = MiWi_TickGet();
 14589  012CB6  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 14590  012CBA  C18A  F3F3         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
 14591  012CBE  C18B  F3F4         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
 14592  012CC2  C18C  F3F5         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
 14593  012CC6  C18D  F3F6         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
 14594                           
 14595                           ;miwi_mesh.c: 4222: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32) )
 14596  012CCA  C3EF  F3E7         	movff	MiApp_EstablishConnection@t1,??_MiApp_EstablishConnection
 14597  012CCE  C3F0  F3E8         	movff	MiApp_EstablishConnection@t1+1,??_MiApp_EstablishConnection+1
 14598  012CD2  C3F1  F3E9         	movff	MiApp_EstablishConnection@t1+2,??_MiApp_EstablishConnection+2
 14599  012CD6  C3F2  F3EA         	movff	MiApp_EstablishConnection@t1+3,??_MiApp_EstablishConnection+3
 14600  012CDA  0103               	movlb	3	; () banked
 14601  012CDC  1FE7               	comf	??_MiApp_EstablishConnection& (0+255),f,b
 14602  012CDE  1FE8               	comf	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14603  012CE0  1FE9               	comf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14604  012CE2  1FEA               	comf	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14605  012CE4  2BE7               	incf	??_MiApp_EstablishConnection& (0+255),f,b
 14606  012CE6  0E00               	movlw	0
 14607  012CE8  23E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14608  012CEA  23E9               	addwfc	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14609  012CEC  23EA               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14610  012CEE  0103               	movlb	3	; () banked
 14611  012CF0  51F3               	movf	MiApp_EstablishConnection@t2& (0+255),w,b
 14612  012CF2  0103               	movlb	3	; () banked
 14613  012CF4  25E7               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 14614  012CF6  0103               	movlb	3	; () banked
 14615  012CF8  6FEB               	movwf	(??_MiApp_EstablishConnection+4)& (0+255),b
 14616  012CFA  0103               	movlb	3	; () banked
 14617  012CFC  51F4               	movf	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
 14618  012CFE  0103               	movlb	3	; () banked
 14619  012D00  21E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 14620  012D02  0103               	movlb	3	; () banked
 14621  012D04  6FEC               	movwf	(??_MiApp_EstablishConnection+5)& (0+255),b
 14622  012D06  0103               	movlb	3	; () banked
 14623  012D08  51F5               	movf	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
 14624  012D0A  0103               	movlb	3	; () banked
 14625  012D0C  21E9               	addwfc	(??_MiApp_EstablishConnection+2)& (0+255),w,b
 14626  012D0E  0103               	movlb	3	; () banked
 14627  012D10  6FED               	movwf	(??_MiApp_EstablishConnection+6)& (0+255),b
 14628  012D12  0103               	movlb	3	; () banked
 14629  012D14  51F6               	movf	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
 14630  012D16  0103               	movlb	3	; () banked
 14631  012D18  21EA               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),w,b
 14632  012D1A  0103               	movlb	3	; () banked
 14633  012D1C  6FEE               	movwf	(??_MiApp_EstablishConnection+7)& (0+255),b
 14634  012D1E  0103               	movlb	3	; () banked
 14635  012D20  51EE               	movf	(??_MiApp_EstablishConnection+7)& (0+255),w,b
 14636  012D22  E10B               	bnz	u17090
 14637  012D24  0E21               	movlw	33
 14638  012D26  0103               	movlb	3	; () banked
 14639  012D28  5DEB               	subwf	(??_MiApp_EstablishConnection+4)& (0+255),w,b
 14640  012D2A  0EA1               	movlw	161
 14641  012D2C  0103               	movlb	3	; () banked
 14642  012D2E  59EC               	subwfb	(??_MiApp_EstablishConnection+5)& (0+255),w,b
 14643  012D30  0E07               	movlw	7
 14644  012D32  0103               	movlb	3	; () banked
 14645  012D34  59ED               	subwfb	(??_MiApp_EstablishConnection+6)& (0+255),w,b
 14646  012D36  A0D8               	btfss	status,0,c
 14647  012D38  D002               	goto	l14361
 14648  012D3A                     u17090:
 14649                           
 14650                           ; BSR set to: 3
 14651                           ;miwi_mesh.c: 4223: {
 14652                           ;miwi_mesh.c: 4224: return 0xFF;
 14653  012D3A  0EFF               	movlw	255
 14654                           
 14655                           ; BSR set to: 3
 14656  012D3C  0012               	return	
 14657  012D3E                     l14361:
 14658  012D3E  0101               	movlb	1	; () banked
 14659  012D40  514C               	movf	_myParent& (0+255),w,b
 14660  012D42  0D09               	mullw	9
 14661  012D44  0E08               	movlw	8
 14662  012D46  26F3               	addwf	prodl,f,c
 14663  012D48  0E00               	movlw	0
 14664  012D4A  22F4               	addwfc	prodh,f,c
 14665  012D4C  0E46               	movlw	low _ConnectionTable
 14666  012D4E  24F3               	addwf	prodl,w,c
 14667  012D50  6ED9               	movwf	fsr2l,c
 14668  012D52  0E02               	movlw	high _ConnectionTable
 14669  012D54  20F4               	addwfc	prodh,w,c
 14670  012D56  6EDA               	movwf	fsr2h,c
 14671  012D58  0102               	movlb	2	; () banked
 14672  012D5A  A8DF               	btfss	indf2,4,c
 14673  012D5C  D7A6               	goto	l14349
 14674                           
 14675                           ; BSR set to: 2
 14676                           ;miwi_mesh.c: 4225: }
 14677                           ;miwi_mesh.c: 4226: }
 14678                           ;miwi_mesh.c: 4231: return myParent;
 14679                           
 14680                           ; BSR set to: 2
 14681  012D5E  0101               	movlb	1	; () banked
 14682  012D60  514C               	movf	_myParent& (0+255),w,b
 14683                           
 14684                           ; BSR set to: 1
 14685  012D62  0012               	return	
 14686  012D64                     l14367:
 14687                           
 14688                           ; BSR set to: 1
 14689                           ;miwi_mesh.c: 4232: }
 14690                           ;miwi_mesh.c: 4233: return 0xFF;
 14691  012D64  0EFF               	movlw	255
 14692  012D66  0012               	return	
 14693  012D68                     __end_of_MiApp_EstablishConnection:
 14694                           	opt stack 0
 14695                           tblptru	equ	0xFF8
 14696                           tblptrh	equ	0xFF7
 14697                           tblptrl	equ	0xFF6
 14698                           tablat	equ	0xFF5
 14699                           prodh	equ	0xFF4
 14700                           prodl	equ	0xFF3
 14701                           intcon	equ	0xFF2
 14702                           intcon2	equ	0xFF1
 14703                           intcon3	equ	0xFF0
 14704                           indf0	equ	0xFEF
 14705                           postinc0	equ	0xFEE
 14706                           plusw0	equ	0xFEB
 14707                           fsr0h	equ	0xFEA
 14708                           fsr0l	equ	0xFE9
 14709                           wreg	equ	0xFE8
 14710                           indf1	equ	0xFE7
 14711                           postinc1	equ	0xFE6
 14712                           postdec1	equ	0xFE5
 14713                           fsr1h	equ	0xFE2
 14714                           fsr1l	equ	0xFE1
 14715                           indf2	equ	0xFDF
 14716                           postinc2	equ	0xFDE
 14717                           postdec2	equ	0xFDD
 14718                           plusw2	equ	0xFDB
 14719                           fsr2h	equ	0xFDA
 14720                           fsr2l	equ	0xFD9
 14721                           status	equ	0xFD8
 14722                           
 14723 ;; *************** function _OpenSocket *****************
 14724 ;; Defined at:
 14725 ;;		line 2959 in file "src/miwi/miwi_mesh.c"
 14726 ;; Parameters:    Size  Location     Type
 14727 ;;		None
 14728 ;; Auto vars:     Size  Location     Type
 14729 ;;  i               1  112[BANK1 ] unsigned char 
 14730 ;; Return value:  Size  Location     Type
 14731 ;;		None               void
 14732 ;; Registers used:
 14733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14734 ;; Tracked objects:
 14735 ;;		On entry : 0/0
 14736 ;;		On exit  : 0/0
 14737 ;;		Unchanged: 0/0
 14738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14740 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14742 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14743 ;;Total ram usage:        1 bytes
 14744 ;; Hardware stack levels used:    1
 14745 ;; Hardware stack levels required when called:   17
 14746 ;; This function calls:
 14747 ;;		_MiApp_UnicastAddress
 14748 ;;		_MiWi_TickGet
 14749 ;; This function is called by:
 14750 ;;		_MiApp_EstablishConnection
 14751 ;; This function uses a non-reentrant model
 14752 ;;
 14753                           
 14754                           	psect	text49
 14755  015D3C                     __ptext49:
 14756                           	opt stack 0
 14757  015D3C                     _OpenSocket:
 14758                           	opt stack 12
 14759                           
 14760                           ;miwi_mesh.c: 2961: uint8_t i;
 14761                           ;miwi_mesh.c: 2963: openSocketInfo.status.bits.matchFound = 0;
 14762                           
 14763                           ;incstack = 0
 14764  015D3C  0101               	movlb	1	; () banked
 14765  015D3E  9100               	bcf	_openSocketInfo& (0+255),0,b
 14766                           
 14767                           ; BSR set to: 1
 14768                           ;miwi_mesh.c: 3069: openSocketInfo.socketStart = MiWi_TickGet();
 14769  015D40  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 14770  015D44  C18A  F108         	movff	?_MiWi_TickGet,_openSocketInfo+8
 14771  015D48  C18B  F109         	movff	?_MiWi_TickGet+1,_openSocketInfo+9
 14772  015D4C  C18C  F10A         	movff	?_MiWi_TickGet+2,_openSocketInfo+10
 14773  015D50  C18D  F10B         	movff	?_MiWi_TickGet+3,_openSocketInfo+11
 14774                           
 14775                           ;miwi_mesh.c: 3072: tempShortAddress.Val = 0x0000;
 14776  015D54  0E00               	movlw	0
 14777  015D56  0101               	movlb	1	; () banked
 14778  015D58  6F88               	movwf	(_tempShortAddress+1)& (0+255),b
 14779  015D5A  0E00               	movlw	0
 14780  015D5C  6F87               	movwf	_tempShortAddress& (0+255),b
 14781                           
 14782                           ; BSR set to: 1
 14783                           ;miwi_mesh.c: 3074: {TxData = 11;};
 14784  015D5E  0E0B               	movlw	11
 14785  015D60  0101               	movlb	1	; () banked
 14786  015D62  6F46               	movwf	_TxData& (0+255),b
 14787                           
 14788                           ; BSR set to: 1
 14789                           ;miwi_mesh.c: 3075: TxBuffer[TxData++] = 0x00;
 14790  015D64  0101               	movlb	1	; () banked
 14791  015D66  5146               	movf	_TxData& (0+255),w,b
 14792  015D68  0D01               	mullw	1
 14793  015D6A  0E4E               	movlw	low _TxBuffer
 14794  015D6C  24F3               	addwf	prodl,w,c
 14795  015D6E  6ED9               	movwf	fsr2l,c
 14796  015D70  0E01               	movlw	high _TxBuffer
 14797  015D72  20F4               	addwfc	prodh,w,c
 14798  015D74  6EDA               	movwf	fsr2h,c
 14799  015D76  0E00               	movlw	0
 14800  015D78  6EDF               	movwf	indf2,c
 14801                           
 14802                           ; BSR set to: 1
 14803  015D7A  0101               	movlb	1	; () banked
 14804  015D7C  2B46               	incf	_TxData& (0+255),f,b
 14805                           
 14806                           ; BSR set to: 1
 14807                           ;miwi_mesh.c: 3076: TxBuffer[TxData++] = 0x10;
 14808  015D7E  0101               	movlb	1	; () banked
 14809  015D80  5146               	movf	_TxData& (0+255),w,b
 14810  015D82  0D01               	mullw	1
 14811  015D84  0E4E               	movlw	low _TxBuffer
 14812  015D86  24F3               	addwf	prodl,w,c
 14813  015D88  6ED9               	movwf	fsr2l,c
 14814  015D8A  0E01               	movlw	high _TxBuffer
 14815  015D8C  20F4               	addwfc	prodh,w,c
 14816  015D8E  6EDA               	movwf	fsr2h,c
 14817  015D90  0E10               	movlw	16
 14818  015D92  6EDF               	movwf	indf2,c
 14819                           
 14820                           ; BSR set to: 1
 14821  015D94  0101               	movlb	1	; () banked
 14822  015D96  2B46               	incf	_TxData& (0+255),f,b
 14823                           
 14824                           ; BSR set to: 1
 14825                           ;miwi_mesh.c: 3077: for(i = 0; i < 4; i++)
 14826  015D98  0E00               	movlw	0
 14827  015D9A  0101               	movlb	1	; () banked
 14828  015D9C  6FFA               	movwf	OpenSocket@i& (0+255),b
 14829  015D9E                     l13263:
 14830                           
 14831                           ; BSR set to: 1
 14832  015D9E  0E03               	movlw	3
 14833  015DA0  0101               	movlb	1	; () banked
 14834  015DA2  65FA               	cpfsgt	OpenSocket@i& (0+255),b
 14835  015DA4  D001               	goto	l13267
 14836  015DA6  D019               	goto	l13275
 14837  015DA8                     l13267:
 14838                           
 14839                           ; BSR set to: 1
 14840                           ;miwi_mesh.c: 3078: {
 14841                           ;miwi_mesh.c: 3079: TxBuffer[TxData++] = myLongAddress[i];
 14842  015DA8  0101               	movlb	1	; () banked
 14843  015DAA  51FA               	movf	OpenSocket@i& (0+255),w,b
 14844  015DAC  0D01               	mullw	1
 14845  015DAE  0EC8               	movlw	low _myLongAddress
 14846  015DB0  24F3               	addwf	prodl,w,c
 14847  015DB2  6ED9               	movwf	fsr2l,c
 14848  015DB4  0E00               	movlw	high _myLongAddress
 14849  015DB6  20F4               	addwfc	prodh,w,c
 14850  015DB8  6EDA               	movwf	fsr2h,c
 14851  015DBA  0101               	movlb	1	; () banked
 14852  015DBC  5146               	movf	_TxData& (0+255),w,b
 14853  015DBE  0D01               	mullw	1
 14854  015DC0  0E4E               	movlw	low _TxBuffer
 14855  015DC2  24F3               	addwf	prodl,w,c
 14856  015DC4  6EE1               	movwf	fsr1l,c
 14857  015DC6  0E01               	movlw	high _TxBuffer
 14858  015DC8  20F4               	addwfc	prodh,w,c
 14859  015DCA  6EE2               	movwf	fsr1h,c
 14860  015DCC  CFDF FFE7          	movff	indf2,indf1
 14861                           
 14862                           ; BSR set to: 1
 14863  015DD0  0101               	movlb	1	; () banked
 14864  015DD2  2B46               	incf	_TxData& (0+255),f,b
 14865                           
 14866                           ; BSR set to: 1
 14867  015DD4  0101               	movlb	1	; () banked
 14868  015DD6  2BFA               	incf	OpenSocket@i& (0+255),f,b
 14869  015DD8  D7E2               	goto	l13263
 14870  015DDA                     l13275:
 14871                           
 14872                           ; BSR set to: 1
 14873                           ;miwi_mesh.c: 3080: }
 14874                           ;miwi_mesh.c: 3088: MiApp_UnicastAddress(tempShortAddress.v, 0, 0);
 14875  015DDA  0E87               	movlw	low _tempShortAddress
 14876  015DDC  0101               	movlb	1	; () banked
 14877  015DDE  6FEE               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 14878  015DE0  0E01               	movlw	high _tempShortAddress
 14879  015DE2  0101               	movlb	1	; () banked
 14880  015DE4  6FEF               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 14881  015DE6  0E00               	movlw	0
 14882  015DE8  0101               	movlb	1	; () banked
 14883  015DEA  6FF0               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 14884  015DEC  0E00               	movlw	0
 14885  015DEE  0101               	movlb	1	; () banked
 14886  015DF0  6FF1               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 14887  015DF2  EC4A  F092         	call	_MiApp_UnicastAddress	;wreg free
 14888                           
 14889                           ;miwi_mesh.c: 3090: openSocketInfo.status.bits.requestIsOpen = 1;
 14890  015DF6  0101               	movlb	1	; () banked
 14891  015DF8  8300               	bsf	_openSocketInfo& (0+255),1,b
 14892                           
 14893                           ; BSR set to: 1
 14894  015DFA  0012               	return		;funcret
 14895  015DFC                     __end_of_OpenSocket:
 14896                           	opt stack 0
 14897                           tblptru	equ	0xFF8
 14898                           tblptrh	equ	0xFF7
 14899                           tblptrl	equ	0xFF6
 14900                           tablat	equ	0xFF5
 14901                           prodh	equ	0xFF4
 14902                           prodl	equ	0xFF3
 14903                           intcon	equ	0xFF2
 14904                           intcon2	equ	0xFF1
 14905                           intcon3	equ	0xFF0
 14906                           indf0	equ	0xFEF
 14907                           postinc0	equ	0xFEE
 14908                           plusw0	equ	0xFEB
 14909                           fsr0h	equ	0xFEA
 14910                           fsr0l	equ	0xFE9
 14911                           wreg	equ	0xFE8
 14912                           indf1	equ	0xFE7
 14913                           postinc1	equ	0xFE6
 14914                           postdec1	equ	0xFE5
 14915                           fsr1h	equ	0xFE2
 14916                           fsr1l	equ	0xFE1
 14917                           indf2	equ	0xFDF
 14918                           postinc2	equ	0xFDE
 14919                           postdec2	equ	0xFDD
 14920                           plusw2	equ	0xFDB
 14921                           fsr2h	equ	0xFDA
 14922                           fsr2l	equ	0xFD9
 14923                           status	equ	0xFD8
 14924                           
 14925 ;; *************** function _MiApp_UnicastAddress *****************
 14926 ;; Defined at:
 14927 ;;		line 4565 in file "src/miwi/miwi_mesh.c"
 14928 ;; Parameters:    Size  Location     Type
 14929 ;;  DestAddress     2  100[BANK1 ] PTR unsigned char 
 14930 ;;		 -> do_UPDATE@shortaddress(2), do_POWER_TEST@shortaddress(2), do_NETWORK_REGISTER@shortaddress(2), tempShortAddress(
      +2), 
 14931 ;;  PermanentAdd    1  102[BANK1 ] unsigned char 
 14932 ;;  SecEn           1  103[BANK1 ] unsigned char 
 14933 ;; Auto vars:     Size  Location     Type
 14934 ;;  t2              4    4[BANK3 ] struct _MIWI_TICK
 14935 ;;  t1              4    0[BANK3 ] struct _MIWI_TICK
 14936 ;;  t2              4   12[BANK3 ] struct _MIWI_TICK
 14937 ;;  t1              4    8[BANK3 ] struct _MIWI_TICK
 14938 ;;  handle          1   18[BANK3 ] unsigned char 
 14939 ;;  i               1   17[BANK3 ] unsigned char 
 14940 ;;  MiWiFrameCon    1   16[BANK3 ] unsigned char 
 14941 ;; Return value:  Size  Location     Type
 14942 ;;                  1    wreg      unsigned char 
 14943 ;; Registers used:
 14944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14945 ;; Tracked objects:
 14946 ;;		On entry : 0/0
 14947 ;;		On exit  : 0/0
 14948 ;;		Unchanged: 0/0
 14949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14950 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14951 ;;      Locals:         0       0       0       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 14952 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14953 ;;      Totals:         0       0      12       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 14954 ;;Total ram usage:       31 bytes
 14955 ;; Hardware stack levels used:    1
 14956 ;; Hardware stack levels required when called:   16
 14957 ;; This function calls:
 14958 ;;		_MiApp_DiscardMessage
 14959 ;;		_MiApp_MessageAvailable
 14960 ;;		_MiMAC_SendPacket
 14961 ;;		_MiWi_TickGet
 14962 ;;		_SearchForLongAddress
 14963 ;; This function is called by:
 14964 ;;		_OpenSocket
 14965 ;;		_do_NETWORK_REGISTER
 14966 ;;		_do_POWER_TEST
 14967 ;;		_do_UPDATE
 14968 ;;		_do_PING
 14969 ;; This function uses a non-reentrant model
 14970 ;;
 14971                           
 14972                           	psect	text50
 14973  012494                     __ptext50:
 14974                           	opt stack 0
 14975  012494                     _MiApp_UnicastAddress:
 14976                           	opt stack 12
 14977                           
 14978                           ;miwi_mesh.c: 4567: uint8_t handle;
 14979                           ;miwi_mesh.c: 4568: uint8_t i;
 14980                           ;miwi_mesh.c: 4569: uint8_t MiWiFrameControl;
 14981                           ;miwi_mesh.c: 4571: if( MiWiAckRequired && TxBuffer[11])
 14982                           
 14983                           ; BSR set to: 1
 14984                           ;incstack = 0
 14985  012494  0100               	movlb	0	; () banked
 14986  012496  51B5               	movf	_MiWiAckRequired& (0+255),w,b
 14987  012498  B4D8               	btfsc	status,2,c
 14988  01249A  D00C               	goto	l12297
 14989                           
 14990                           ; BSR set to: 0
 14991  01249C  0101               	movlb	1	; () banked
 14992  01249E  5159               	movf	(_TxBuffer+11)& (0+255),w,b
 14993  0124A0  B4D8               	btfsc	status,2,c
 14994  0124A2  D008               	goto	l12297
 14995                           
 14996                           ; BSR set to: 1
 14997                           ;miwi_mesh.c: 4572: {
 14998                           ;miwi_mesh.c: 4573: MiWiStateMachine.bits.MiWiAckInProgress = 1;
 14999  0124A4  0101               	movlb	1	; () banked
 15000  0124A6  8738               	bsf	_MiWiStateMachine& (0+255),3,b
 15001                           
 15002                           ;miwi_mesh.c: 4574: AcknowledgementSeq = MiWiSeqNum;
 15003  0124A8  C0B6  F1FD         	movff	_MiWiSeqNum,_AcknowledgementSeq
 15004                           
 15005                           ; BSR set to: 1
 15006                           ;miwi_mesh.c: 4575: MiWiFrameControl = 0x06;
 15007  0124AC  0E06               	movlw	6
 15008  0124AE  0103               	movlb	3	; () banked
 15009  0124B0  6FE4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 15010                           
 15011                           ;miwi_mesh.c: 4576: }
 15012  0124B2  D005               	goto	l829
 15013  0124B4                     l12297:
 15014                           
 15015                           ;miwi_mesh.c: 4577: else
 15016                           ;miwi_mesh.c: 4578: {
 15017                           ;miwi_mesh.c: 4579: MiWiFrameControl = 0x02;
 15018  0124B4  0E02               	movlw	2
 15019  0124B6  0103               	movlb	3	; () banked
 15020  0124B8  6FE4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 15021                           
 15022                           ; BSR set to: 3
 15023                           ;miwi_mesh.c: 4580: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15024  0124BA  0101               	movlb	1	; () banked
 15025  0124BC  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15026  0124BE                     l829:
 15027                           
 15028                           ;miwi_mesh.c: 4581: }
 15029                           ;miwi_mesh.c: 4583: if( PermanentAddr )
 15030  0124BE  0101               	movlb	1	; () banked
 15031  0124C0  51F0               	movf	MiApp_UnicastAddress@PermanentAddr& (0+255),w,b
 15032  0124C2  0101               	movlb	1	; () banked
 15033  0124C4  B4D8               	btfsc	status,2,c
 15034  0124C6  D16B               	goto	l12429
 15035                           
 15036                           ; BSR set to: 1
 15037                           ;miwi_mesh.c: 4584: {
 15038                           ;miwi_mesh.c: 4585: for(i = 0; i < 4; i++)
 15039  0124C8  0E00               	movlw	0
 15040  0124CA  0103               	movlb	3	; () banked
 15041  0124CC  6FE5               	movwf	MiApp_UnicastAddress@i& (0+255),b
 15042  0124CE                     l12303:
 15043                           
 15044                           ; BSR set to: 3
 15045  0124CE  0E03               	movlw	3
 15046  0124D0  0103               	movlb	3	; () banked
 15047  0124D2  65E5               	cpfsgt	MiApp_UnicastAddress@i& (0+255),b
 15048  0124D4  D001               	goto	l12307
 15049  0124D6  D019               	goto	l12313
 15050  0124D8                     l12307:
 15051                           
 15052                           ; BSR set to: 3
 15053                           ;miwi_mesh.c: 4586: {
 15054                           ;miwi_mesh.c: 4587: tempLongAddress[i] = DestAddress[i];
 15055  0124D8  0103               	movlb	3	; () banked
 15056  0124DA  51E5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 15057  0124DC  0D01               	mullw	1
 15058  0124DE  50F3               	movf	prodl,w,c
 15059  0124E0  0101               	movlb	1	; () banked
 15060  0124E2  25EE               	addwf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 15061  0124E4  6ED9               	movwf	fsr2l,c
 15062  0124E6  50F4               	movf	prodh,w,c
 15063  0124E8  0101               	movlb	1	; () banked
 15064  0124EA  21EF               	addwfc	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 15065  0124EC  6EDA               	movwf	fsr2h,c
 15066  0124EE  0103               	movlb	3	; () banked
 15067  0124F0  51E5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 15068  0124F2  0D01               	mullw	1
 15069  0124F4  0E26               	movlw	low _tempLongAddress
 15070  0124F6  24F3               	addwf	prodl,w,c
 15071  0124F8  6EE1               	movwf	fsr1l,c
 15072  0124FA  0E01               	movlw	high _tempLongAddress
 15073  0124FC  20F4               	addwfc	prodh,w,c
 15074  0124FE  6EE2               	movwf	fsr1h,c
 15075  012500  CFDF FFE7          	movff	indf2,indf1
 15076                           
 15077                           ; BSR set to: 3
 15078  012504  0103               	movlb	3	; () banked
 15079  012506  2BE5               	incf	MiApp_UnicastAddress@i& (0+255),f,b
 15080  012508  D7E2               	goto	l12303
 15081  01250A                     l12313:
 15082                           
 15083                           ; BSR set to: 3
 15084                           ;miwi_mesh.c: 4588: }
 15085                           ;miwi_mesh.c: 4589: if( (handle = SearchForLongAddress()) == 0xFF )
 15086  01250A  EC71  F0AD         	call	_SearchForLongAddress	;wreg free
 15087  01250E  0103               	movlb	3	; () banked
 15088  012510  6FE6               	movwf	MiApp_UnicastAddress@handle& (0+255),b
 15089  012512  0103               	movlb	3	; () banked
 15090  012514  29E6               	incf	MiApp_UnicastAddress@handle& (0+255),w,b
 15091  012516  A4D8               	btfss	status,2,c
 15092  012518  D03D               	goto	l12353
 15093  01251A                     l834:
 15094                           
 15095                           ;miwi_mesh.c: 4593: TxBuffer[0] = defaultHops;
 15096  01251A  C1FE  F14E         	movff	_defaultHops,_TxBuffer
 15097                           
 15098                           ;miwi_mesh.c: 4594: TxBuffer[1] = 0x02;
 15099  01251E  0E02               	movlw	2
 15100  012520  0101               	movlb	1	; () banked
 15101  012522  6F4F               	movwf	(_TxBuffer+1)& (0+255),b
 15102                           
 15103                           ; BSR set to: 1
 15104                           ;miwi_mesh.c: 4595: TxBuffer[2] = 0xFF;
 15105  012524  0101               	movlb	1	; () banked
 15106  012526  6950               	setf	(_TxBuffer+2)& (0+255),b
 15107                           
 15108                           ; BSR set to: 1
 15109                           ;miwi_mesh.c: 4596: TxBuffer[3] = 0xFF;
 15110  012528  0101               	movlb	1	; () banked
 15111  01252A  6951               	setf	(_TxBuffer+3)& (0+255),b
 15112                           
 15113                           ; BSR set to: 1
 15114                           ;miwi_mesh.c: 4597: TxBuffer[4] = 0xFF;
 15115  01252C  0101               	movlb	1	; () banked
 15116  01252E  6952               	setf	(_TxBuffer+4)& (0+255),b
 15117                           
 15118                           ; BSR set to: 1
 15119                           ;miwi_mesh.c: 4598: TxBuffer[5] = 0xFF;
 15120  012530  0101               	movlb	1	; () banked
 15121  012532  6953               	setf	(_TxBuffer+5)& (0+255),b
 15122                           
 15123                           ; BSR set to: 1
 15124                           ;miwi_mesh.c: 4599: TxBuffer[6] = myPANID.v[0];
 15125  012534  C183  F154         	movff	_myPANID,_TxBuffer+6
 15126                           
 15127                           ; BSR set to: 1
 15128                           ;miwi_mesh.c: 4600: TxBuffer[7] = myPANID.v[1];
 15129  012538  C184  F155         	movff	_myPANID+1,_TxBuffer+7
 15130                           
 15131                           ; BSR set to: 1
 15132                           ;miwi_mesh.c: 4601: TxBuffer[8] = myShortAddress.v[0];
 15133  01253C  C185  F156         	movff	_myShortAddress,_TxBuffer+8
 15134                           
 15135                           ; BSR set to: 1
 15136                           ;miwi_mesh.c: 4602: TxBuffer[9] = myShortAddress.v[1];
 15137  012540  C186  F157         	movff	_myShortAddress+1,_TxBuffer+9
 15138                           
 15139                           ; BSR set to: 1
 15140                           ;miwi_mesh.c: 4603: TxBuffer[10] = MiWiSeqNum++;
 15141  012544  C0B6  F158         	movff	_MiWiSeqNum,_TxBuffer+10
 15142                           
 15143                           ; BSR set to: 1
 15144  012548  0100               	movlb	0	; () banked
 15145  01254A  2BB6               	incf	_MiWiSeqNum& (0+255),f,b
 15146                           
 15147                           ; BSR set to: 0
 15148                           ;miwi_mesh.c: 4616: MTP.flags.Val = 0;
 15149  01254C  0E00               	movlw	0
 15150  01254E  0101               	movlb	1	; () banked
 15151  012550  6F2A               	movwf	_MTP& (0+255),b
 15152                           
 15153                           ; BSR set to: 1
 15154                           ;miwi_mesh.c: 4617: MTP.flags.bits.ackReq = 1;
 15155  012552  0101               	movlb	1	; () banked
 15156  012554  8B2A               	bsf	_MTP& (0+255),5,b
 15157                           
 15158                           ; BSR set to: 1
 15159                           ;miwi_mesh.c: 4618: MTP.flags.bits.secEn = SecEn;
 15160  012556  0101               	movlb	1	; () banked
 15161  012558  B1F1               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 15162  01255A  D003               	bra	u14475
 15163  01255C  0101               	movlb	1	; () banked
 15164  01255E  972A               	bcf	_MTP& (0+255),3,b
 15165  012560  D002               	bra	u14476
 15166  012562                     u14475:
 15167  012562  0101               	movlb	1	; () banked
 15168  012564  872A               	bsf	_MTP& (0+255),3,b
 15169  012566                     u14476:
 15170                           
 15171                           ; BSR set to: 1
 15172                           ;miwi_mesh.c: 4619: MTP.DestAddress = DestAddress;
 15173  012566  C1EE  F12B         	movff	MiApp_UnicastAddress@DestAddress,_MTP+1
 15174  01256A  C1EF  F12C         	movff	MiApp_UnicastAddress@DestAddress+1,_MTP+2
 15175                           
 15176                           ; BSR set to: 1
 15177                           ;miwi_mesh.c: 4625: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15178  01256E  0101               	movlb	1	; () banked
 15179  012570  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15180                           
 15181                           ; BSR set to: 1
 15182                           ;miwi_mesh.c: 4627: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 15183  012572  C12A  F1B9         	movff	_MTP,MiMAC_SendPacket@transParam
 15184  012576  C12B  F1BA         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15185  01257A  C12C  F1BB         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15186  01257E  0E4E               	movlw	low _TxBuffer
 15187  012580  0101               	movlb	1	; () banked
 15188  012582  6FBC               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15189  012584  0E01               	movlw	high _TxBuffer
 15190  012586  0101               	movlb	1	; () banked
 15191  012588  6FBD               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15192  01258A  C146  F1BE         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15193  01258E  ECC9  F09A         	call	_MiMAC_SendPacket	;wreg free
 15194  012592  0012               	return	
 15195  012594                     l12353:
 15196                           
 15197                           ;miwi_mesh.c: 4629: else
 15198                           ;miwi_mesh.c: 4630: {
 15199                           ;miwi_mesh.c: 4631: if( ConnectionTable[handle].status.bits.shortAddressValid == 0 )
 15200  012594  0103               	movlb	3	; () banked
 15201  012596  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15202  012598  0D09               	mullw	9
 15203  01259A  0E08               	movlw	8
 15204  01259C  26F3               	addwf	prodl,f,c
 15205  01259E  0E00               	movlw	0
 15206  0125A0  22F4               	addwfc	prodh,f,c
 15207  0125A2  0E46               	movlw	low _ConnectionTable
 15208  0125A4  24F3               	addwf	prodl,w,c
 15209  0125A6  6ED9               	movwf	fsr2l,c
 15210  0125A8  0E02               	movlw	high _ConnectionTable
 15211  0125AA  20F4               	addwfc	prodh,w,c
 15212  0125AC  6EDA               	movwf	fsr2h,c
 15213  0125AE  0102               	movlb	2	; () banked
 15214  0125B0  A6DF               	btfss	indf2,3,c
 15215  0125B2  D7B3               	goto	l834
 15216                           
 15217                           ; BSR set to: 2
 15218                           ;miwi_mesh.c: 4634: }
 15219                           ;miwi_mesh.c: 4636: if( MiWiAckRequired )
 15220                           
 15221                           ; BSR set to: 2
 15222                           
 15223                           ; BSR set to: 2
 15224                           ;miwi_mesh.c: 4632: {
 15225                           ;miwi_mesh.c: 4633: goto DIRECT_LONG_ADDRESS;
 15226  0125B4  0100               	movlb	0	; () banked
 15227  0125B6  51B5               	movf	_MiWiAckRequired& (0+255),w,b
 15228  0125B8  B4D8               	btfsc	status,2,c
 15229  0125BA  D011               	goto	l12361
 15230                           
 15231                           ; BSR set to: 0
 15232                           ;miwi_mesh.c: 4637: {
 15233                           ;miwi_mesh.c: 4638: AcknowledgementAddr.Val = ConnectionTable[handle].AltAddress.Val;
 15234  0125BC  0103               	movlb	3	; () banked
 15235  0125BE  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15236  0125C0  0D09               	mullw	9
 15237  0125C2  0E02               	movlw	2
 15238  0125C4  26F3               	addwf	prodl,f,c
 15239  0125C6  0E00               	movlw	0
 15240  0125C8  22F4               	addwfc	prodh,f,c
 15241  0125CA  0E46               	movlw	low _ConnectionTable
 15242  0125CC  24F3               	addwf	prodl,w,c
 15243  0125CE  6ED9               	movwf	fsr2l,c
 15244  0125D0  0E02               	movlw	high _ConnectionTable
 15245  0125D2  20F4               	addwfc	prodh,w,c
 15246  0125D4  6EDA               	movwf	fsr2h,c
 15247  0125D6  CFDE F136          	movff	postinc2,_AcknowledgementAddr
 15248  0125DA  CFDD F137          	movff	postdec2,_AcknowledgementAddr+1
 15249  0125DE                     l12361:
 15250                           
 15251                           ;miwi_mesh.c: 4639: }
 15252                           ;miwi_mesh.c: 4641: TxBuffer[0] = 4;
 15253  0125DE  0E04               	movlw	4
 15254  0125E0  0101               	movlb	1	; () banked
 15255  0125E2  6F4E               	movwf	_TxBuffer& (0+255),b
 15256                           
 15257                           ; BSR set to: 1
 15258                           ;miwi_mesh.c: 4642: TxBuffer[1] = MiWiFrameControl;
 15259  0125E4  C3E4  F14F         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 15260                           
 15261                           ; BSR set to: 1
 15262                           ;miwi_mesh.c: 4643: TxBuffer[2] = ConnectionTable[handle].PANID.v[0];
 15263  0125E8  0103               	movlb	3	; () banked
 15264  0125EA  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15265  0125EC  0D09               	mullw	9
 15266  0125EE  0E46               	movlw	low _ConnectionTable
 15267  0125F0  24F3               	addwf	prodl,w,c
 15268  0125F2  6ED9               	movwf	fsr2l,c
 15269  0125F4  0E02               	movlw	high _ConnectionTable
 15270  0125F6  20F4               	addwfc	prodh,w,c
 15271  0125F8  6EDA               	movwf	fsr2h,c
 15272  0125FA  50DF               	movf	indf2,w,c
 15273  0125FC  0101               	movlb	1	; () banked
 15274  0125FE  6F50               	movwf	(_TxBuffer+2)& (0+255),b
 15275                           
 15276                           ; BSR set to: 1
 15277                           ;miwi_mesh.c: 4644: TxBuffer[3] = ConnectionTable[handle].PANID.v[1];
 15278  012600  0103               	movlb	3	; () banked
 15279  012602  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15280  012604  0D09               	mullw	9
 15281  012606  0E01               	movlw	1
 15282  012608  26F3               	addwf	prodl,f,c
 15283  01260A  0E00               	movlw	0
 15284  01260C  22F4               	addwfc	prodh,f,c
 15285  01260E  0E46               	movlw	low _ConnectionTable
 15286  012610  24F3               	addwf	prodl,w,c
 15287  012612  6ED9               	movwf	fsr2l,c
 15288  012614  0E02               	movlw	high _ConnectionTable
 15289  012616  20F4               	addwfc	prodh,w,c
 15290  012618  6EDA               	movwf	fsr2h,c
 15291  01261A  50DF               	movf	indf2,w,c
 15292  01261C  0101               	movlb	1	; () banked
 15293  01261E  6F51               	movwf	(_TxBuffer+3)& (0+255),b
 15294                           
 15295                           ; BSR set to: 1
 15296                           ;miwi_mesh.c: 4645: TxBuffer[4] = ConnectionTable[handle].AltAddress.v[0];
 15297  012620  0103               	movlb	3	; () banked
 15298  012622  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15299  012624  0D09               	mullw	9
 15300  012626  0E02               	movlw	2
 15301  012628  26F3               	addwf	prodl,f,c
 15302  01262A  0E00               	movlw	0
 15303  01262C  22F4               	addwfc	prodh,f,c
 15304  01262E  0E46               	movlw	low _ConnectionTable
 15305  012630  24F3               	addwf	prodl,w,c
 15306  012632  6ED9               	movwf	fsr2l,c
 15307  012634  0E02               	movlw	high _ConnectionTable
 15308  012636  20F4               	addwfc	prodh,w,c
 15309  012638  6EDA               	movwf	fsr2h,c
 15310  01263A  50DF               	movf	indf2,w,c
 15311  01263C  0101               	movlb	1	; () banked
 15312  01263E  6F52               	movwf	(_TxBuffer+4)& (0+255),b
 15313                           
 15314                           ; BSR set to: 1
 15315                           ;miwi_mesh.c: 4646: TxBuffer[5] = ConnectionTable[handle].AltAddress.v[1];
 15316  012640  0103               	movlb	3	; () banked
 15317  012642  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15318  012644  0D09               	mullw	9
 15319  012646  0E03               	movlw	3
 15320  012648  26F3               	addwf	prodl,f,c
 15321  01264A  0E00               	movlw	0
 15322  01264C  22F4               	addwfc	prodh,f,c
 15323  01264E  0E46               	movlw	low _ConnectionTable
 15324  012650  24F3               	addwf	prodl,w,c
 15325  012652  6ED9               	movwf	fsr2l,c
 15326  012654  0E02               	movlw	high _ConnectionTable
 15327  012656  20F4               	addwfc	prodh,w,c
 15328  012658  6EDA               	movwf	fsr2h,c
 15329  01265A  50DF               	movf	indf2,w,c
 15330  01265C  0101               	movlb	1	; () banked
 15331  01265E  6F53               	movwf	(_TxBuffer+5)& (0+255),b
 15332                           
 15333                           ; BSR set to: 1
 15334                           ;miwi_mesh.c: 4647: TxBuffer[6] = myPANID.v[0];
 15335  012660  C183  F154         	movff	_myPANID,_TxBuffer+6
 15336                           
 15337                           ; BSR set to: 1
 15338                           ;miwi_mesh.c: 4648: TxBuffer[7] = myPANID.v[1];
 15339  012664  C184  F155         	movff	_myPANID+1,_TxBuffer+7
 15340                           
 15341                           ; BSR set to: 1
 15342                           ;miwi_mesh.c: 4649: TxBuffer[8] = myShortAddress.v[0];
 15343  012668  C185  F156         	movff	_myShortAddress,_TxBuffer+8
 15344                           
 15345                           ; BSR set to: 1
 15346                           ;miwi_mesh.c: 4650: TxBuffer[9] = myShortAddress.v[1];
 15347  01266C  C186  F157         	movff	_myShortAddress+1,_TxBuffer+9
 15348                           
 15349                           ; BSR set to: 1
 15350                           ;miwi_mesh.c: 4651: TxBuffer[10] = MiWiSeqNum++;
 15351  012670  C0B6  F158         	movff	_MiWiSeqNum,_TxBuffer+10
 15352                           
 15353                           ; BSR set to: 1
 15354  012674  0100               	movlb	0	; () banked
 15355  012676  2BB6               	incf	_MiWiSeqNum& (0+255),f,b
 15356                           
 15357                           ; BSR set to: 0
 15358                           ;miwi_mesh.c: 4696: MTP.flags.Val = 0;
 15359  012678  0E00               	movlw	0
 15360  01267A  0101               	movlb	1	; () banked
 15361  01267C  6F2A               	movwf	_MTP& (0+255),b
 15362                           
 15363                           ; BSR set to: 1
 15364                           ;miwi_mesh.c: 4697: MTP.flags.bits.ackReq = 1;
 15365  01267E  0101               	movlb	1	; () banked
 15366  012680  8B2A               	bsf	_MTP& (0+255),5,b
 15367                           
 15368                           ; BSR set to: 1
 15369                           ;miwi_mesh.c: 4698: MTP.flags.bits.secEn = SecEn;
 15370  012682  0101               	movlb	1	; () banked
 15371  012684  B1F1               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 15372  012686  D003               	bra	u14505
 15373  012688  0101               	movlb	1	; () banked
 15374  01268A  972A               	bcf	_MTP& (0+255),3,b
 15375  01268C  D002               	bra	u14506
 15376  01268E                     u14505:
 15377  01268E  0101               	movlb	1	; () banked
 15378  012690  872A               	bsf	_MTP& (0+255),3,b
 15379  012692                     u14506:
 15380                           
 15381                           ; BSR set to: 1
 15382                           ;miwi_mesh.c: 4706: MTP.DestAddress = ConnectionTable[myParent].Address;
 15383  012692  0101               	movlb	1	; () banked
 15384  012694  514C               	movf	_myParent& (0+255),w,b
 15385  012696  0D09               	mullw	9
 15386  012698  0E04               	movlw	4
 15387  01269A  26F3               	addwf	prodl,f,c
 15388  01269C  0E00               	movlw	0
 15389  01269E  22F4               	addwfc	prodh,f,c
 15390  0126A0  0E46               	movlw	low _ConnectionTable
 15391  0126A2  24F3               	addwf	prodl,w,c
 15392  0126A4  0101               	movlb	1	; () banked
 15393  0126A6  6F2B               	movwf	(_MTP+1)& (0+255),b
 15394  0126A8  0E02               	movlw	high _ConnectionTable
 15395  0126AA  20F4               	addwfc	prodh,w,c
 15396  0126AC  0101               	movlb	1	; () banked
 15397  0126AE  6F2C               	movwf	(_MTP+2)& (0+255),b
 15398                           
 15399                           ; BSR set to: 1
 15400                           ;miwi_mesh.c: 4709: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 15401  0126B0  C12A  F1B9         	movff	_MTP,MiMAC_SendPacket@transParam
 15402  0126B4  C12B  F1BA         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15403  0126B8  C12C  F1BB         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15404  0126BC  0E4E               	movlw	low _TxBuffer
 15405  0126BE  0101               	movlb	1	; () banked
 15406  0126C0  6FBC               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15407  0126C2  0E01               	movlw	high _TxBuffer
 15408  0126C4  0101               	movlb	1	; () banked
 15409  0126C6  6FBD               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15410  0126C8  C146  F1BE         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15411  0126CC  ECC9  F09A         	call	_MiMAC_SendPacket	;wreg free
 15412  0126D0  0900               	iorlw	0
 15413  0126D2  A4D8               	btfss	status,2,c
 15414  0126D4  D004               	goto	l839
 15415                           
 15416                           ;miwi_mesh.c: 4710: {
 15417                           ;miwi_mesh.c: 4711: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15418  0126D6  0101               	movlb	1	; () banked
 15419  0126D8  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15420                           
 15421                           ; BSR set to: 1
 15422                           ;miwi_mesh.c: 4712: return 0;
 15423  0126DA  0E00               	movlw	0
 15424                           
 15425                           ; BSR set to: 1
 15426  0126DC  0012               	return	
 15427  0126DE                     l839:
 15428                           
 15429                           ;miwi_mesh.c: 4714: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 15430  0126DE  0101               	movlb	1	; () banked
 15431  0126E0  A738               	btfss	_MiWiStateMachine& (0+255),3,b
 15432  0126E2  D05B               	goto	l12425
 15433                           
 15434                           ; BSR set to: 1
 15435                           ;miwi_mesh.c: 4715: {
 15436                           ;miwi_mesh.c: 4716: MIWI_TICK t1, t2;
 15437                           ;miwi_mesh.c: 4717: t1 = MiWi_TickGet();
 15438  0126E4  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 15439  0126E8  C18A  F3D4         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1
 15440  0126EC  C18B  F3D5         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1+1
 15441  0126F0  C18C  F3D6         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1+2
 15442  0126F4  C18D  F3D7         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1+3
 15443  0126F8                     l12405:
 15444                           
 15445                           ;miwi_mesh.c: 4719: {
 15446                           ;miwi_mesh.c: 4720: if( MiApp_MessageAvailable())
 15447  0126F8  ECE2  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 15448  0126FC  0900               	iorlw	0
 15449  0126FE  A4D8               	btfss	status,2,c
 15450                           
 15451                           ;miwi_mesh.c: 4721: {
 15452                           ;miwi_mesh.c: 4722: MiApp_DiscardMessage();
 15453  012700  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 15454                           
 15455                           ;miwi_mesh.c: 4723: }
 15456                           ;miwi_mesh.c: 4725: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 15457  012704  0101               	movlb	1	; () banked
 15458  012706  B738               	btfsc	_MiWiStateMachine& (0+255),3,b
 15459  012708  D002               	goto	l12415
 15460                           
 15461                           ; BSR set to: 1
 15462                           ;miwi_mesh.c: 4726: {
 15463                           ;miwi_mesh.c: 4727: return 1;
 15464  01270A  0E01               	movlw	1
 15465                           
 15466                           ; BSR set to: 1
 15467  01270C  0012               	return	
 15468  01270E                     l12415:
 15469                           
 15470                           ; BSR set to: 1
 15471                           ;miwi_mesh.c: 4728: }
 15472                           ;miwi_mesh.c: 4729: t2 = MiWi_TickGet();
 15473  01270E  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 15474  012712  C18A  F3D8         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2
 15475  012716  C18B  F3D9         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2+1
 15476  01271A  C18C  F3DA         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2+2
 15477  01271E  C18D  F3DB         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2+3
 15478                           
 15479                           ;miwi_mesh.c: 4730: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 15480  012722  C3D4  F1F2         	movff	MiApp_UnicastAddress@t1,??_MiApp_UnicastAddress
 15481  012726  C3D5  F1F3         	movff	MiApp_UnicastAddress@t1+1,??_MiApp_UnicastAddress+1
 15482  01272A  C3D6  F1F4         	movff	MiApp_UnicastAddress@t1+2,??_MiApp_UnicastAddress+2
 15483  01272E  C3D7  F1F5         	movff	MiApp_UnicastAddress@t1+3,??_MiApp_UnicastAddress+3
 15484  012732  0101               	movlb	1	; () banked
 15485  012734  1FF2               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 15486  012736  1FF3               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15487  012738  1FF4               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15488  01273A  1FF5               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15489  01273C  2BF2               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 15490  01273E  0E00               	movlw	0
 15491  012740  23F3               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15492  012742  23F4               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15493  012744  23F5               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15494  012746  0103               	movlb	3	; () banked
 15495  012748  51D8               	movf	MiApp_UnicastAddress@t2& (0+255),w,b
 15496  01274A  0101               	movlb	1	; () banked
 15497  01274C  25F2               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 15498  01274E  0101               	movlb	1	; () banked
 15499  012750  6FF6               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 15500  012752  0103               	movlb	3	; () banked
 15501  012754  51D9               	movf	(MiApp_UnicastAddress@t2+1)& (0+255),w,b
 15502  012756  0101               	movlb	1	; () banked
 15503  012758  21F3               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 15504  01275A  0101               	movlb	1	; () banked
 15505  01275C  6FF7               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 15506  01275E  0103               	movlb	3	; () banked
 15507  012760  51DA               	movf	(MiApp_UnicastAddress@t2+2)& (0+255),w,b
 15508  012762  0101               	movlb	1	; () banked
 15509  012764  21F4               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 15510  012766  0101               	movlb	1	; () banked
 15511  012768  6FF8               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 15512  01276A  0103               	movlb	3	; () banked
 15513  01276C  51DB               	movf	(MiApp_UnicastAddress@t2+3)& (0+255),w,b
 15514  01276E  0101               	movlb	1	; () banked
 15515  012770  21F5               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 15516  012772  0101               	movlb	1	; () banked
 15517  012774  6FF9               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 15518  012776  0101               	movlb	1	; () banked
 15519  012778  51F9               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 15520  01277A  E10B               	bnz	u14550
 15521  01277C  0E21               	movlw	33
 15522  01277E  0101               	movlb	1	; () banked
 15523  012780  5DF6               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 15524  012782  0EA1               	movlw	161
 15525  012784  0101               	movlb	1	; () banked
 15526  012786  59F7               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 15527  012788  0E07               	movlw	7
 15528  01278A  0101               	movlb	1	; () banked
 15529  01278C  59F8               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 15530  01278E  A0D8               	btfss	status,0,c
 15531  012790  D7B3               	goto	l12405
 15532  012792                     u14550:
 15533                           
 15534                           ; BSR set to: 1
 15535                           ;miwi_mesh.c: 4731: {
 15536                           ;miwi_mesh.c: 4732: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15537  012792  0101               	movlb	1	; () banked
 15538  012794  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15539                           
 15540                           ; BSR set to: 1
 15541                           ;miwi_mesh.c: 4733: return 0;
 15542  012796  0E00               	movlw	0
 15543                           
 15544                           ; BSR set to: 1
 15545  012798  0012               	return	
 15546  01279A                     l12425:
 15547                           
 15548                           ; BSR set to: 1
 15549                           ;miwi_mesh.c: 4734: }
 15550                           ;miwi_mesh.c: 4735: }
 15551                           ;miwi_mesh.c: 4736: }
 15552                           ;miwi_mesh.c: 4737: return 1;
 15553  01279A  0E01               	movlw	1
 15554                           
 15555                           ; BSR set to: 1
 15556  01279C  0012               	return	
 15557  01279E                     l12429:
 15558                           
 15559                           ;miwi_mesh.c: 4739: }
 15560                           ;miwi_mesh.c: 4740: }
 15561                           ;miwi_mesh.c: 4742: TxBuffer[0] = 4;
 15562  01279E  0E04               	movlw	4
 15563  0127A0  0101               	movlb	1	; () banked
 15564  0127A2  6F4E               	movwf	_TxBuffer& (0+255),b
 15565                           
 15566                           ; BSR set to: 1
 15567                           ;miwi_mesh.c: 4743: TxBuffer[1] = MiWiFrameControl;
 15568  0127A4  C3E4  F14F         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 15569                           
 15570                           ; BSR set to: 1
 15571                           ;miwi_mesh.c: 4744: TxBuffer[2] = myPANID.v[0];
 15572  0127A8  C183  F150         	movff	_myPANID,_TxBuffer+2
 15573                           
 15574                           ; BSR set to: 1
 15575                           ;miwi_mesh.c: 4745: TxBuffer[3] = myPANID.v[1];
 15576  0127AC  C184  F151         	movff	_myPANID+1,_TxBuffer+3
 15577                           
 15578                           ; BSR set to: 1
 15579                           ;miwi_mesh.c: 4746: TxBuffer[4] = DestAddress[0];
 15580  0127B0  C1EE  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 15581  0127B4  C1EF  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 15582  0127B8  50DF               	movf	indf2,w,c
 15583  0127BA  0101               	movlb	1	; () banked
 15584  0127BC  6F52               	movwf	(_TxBuffer+4)& (0+255),b
 15585                           
 15586                           ; BSR set to: 1
 15587                           ;miwi_mesh.c: 4747: TxBuffer[5] = DestAddress[1];
 15588  0127BE  0101               	movlb	1	; () banked
 15589  0127C0  EE20 F001          	lfsr	2,1
 15590  0127C4  51EE               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 15591  0127C6  26D9               	addwf	fsr2l,f,c
 15592  0127C8  51EF               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 15593  0127CA  22DA               	addwfc	fsr2h,f,c
 15594  0127CC  50DF               	movf	indf2,w,c
 15595  0127CE  0101               	movlb	1	; () banked
 15596  0127D0  6F53               	movwf	(_TxBuffer+5)& (0+255),b
 15597                           
 15598                           ; BSR set to: 1
 15599                           ;miwi_mesh.c: 4748: TxBuffer[6] = myPANID.v[0];
 15600  0127D2  C183  F154         	movff	_myPANID,_TxBuffer+6
 15601                           
 15602                           ; BSR set to: 1
 15603                           ;miwi_mesh.c: 4749: TxBuffer[7] = myPANID.v[1];
 15604  0127D6  C184  F155         	movff	_myPANID+1,_TxBuffer+7
 15605                           
 15606                           ; BSR set to: 1
 15607                           ;miwi_mesh.c: 4750: TxBuffer[8] = myShortAddress.v[0];
 15608  0127DA  C185  F156         	movff	_myShortAddress,_TxBuffer+8
 15609                           
 15610                           ; BSR set to: 1
 15611                           ;miwi_mesh.c: 4751: TxBuffer[9] = myShortAddress.v[1];
 15612  0127DE  C186  F157         	movff	_myShortAddress+1,_TxBuffer+9
 15613                           
 15614                           ; BSR set to: 1
 15615                           ;miwi_mesh.c: 4752: TxBuffer[10] = MiWiSeqNum++;
 15616  0127E2  C0B6  F158         	movff	_MiWiSeqNum,_TxBuffer+10
 15617                           
 15618                           ; BSR set to: 1
 15619  0127E6  0100               	movlb	0	; () banked
 15620  0127E8  2BB6               	incf	_MiWiSeqNum& (0+255),f,b
 15621                           
 15622                           ; BSR set to: 0
 15623                           ;miwi_mesh.c: 4754: AcknowledgementAddr.v[0] = DestAddress[0];
 15624  0127EA  C1EE  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 15625  0127EE  C1EF  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 15626  0127F2  50DF               	movf	indf2,w,c
 15627  0127F4  0101               	movlb	1	; () banked
 15628  0127F6  6F36               	movwf	_AcknowledgementAddr& (0+255),b
 15629                           
 15630                           ; BSR set to: 1
 15631                           ;miwi_mesh.c: 4755: AcknowledgementAddr.v[1] = DestAddress[1];
 15632  0127F8  0101               	movlb	1	; () banked
 15633  0127FA  EE20 F001          	lfsr	2,1
 15634  0127FE  51EE               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 15635  012800  26D9               	addwf	fsr2l,f,c
 15636  012802  51EF               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 15637  012804  22DA               	addwfc	fsr2h,f,c
 15638  012806  50DF               	movf	indf2,w,c
 15639  012808  0101               	movlb	1	; () banked
 15640  01280A  6F37               	movwf	(_AcknowledgementAddr+1)& (0+255),b
 15641                           
 15642                           ; BSR set to: 1
 15643                           ;miwi_mesh.c: 4803: MTP.flags.Val = 0;
 15644  01280C  0E00               	movlw	0
 15645  01280E  0101               	movlb	1	; () banked
 15646  012810  6F2A               	movwf	_MTP& (0+255),b
 15647                           
 15648                           ; BSR set to: 1
 15649                           ;miwi_mesh.c: 4804: MTP.flags.bits.ackReq = 1;
 15650  012812  0101               	movlb	1	; () banked
 15651  012814  8B2A               	bsf	_MTP& (0+255),5,b
 15652                           
 15653                           ; BSR set to: 1
 15654                           ;miwi_mesh.c: 4805: MTP.flags.bits.secEn = SecEn;
 15655  012816  0101               	movlb	1	; () banked
 15656  012818  B1F1               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 15657  01281A  D003               	bra	u14565
 15658  01281C  0101               	movlb	1	; () banked
 15659  01281E  972A               	bcf	_MTP& (0+255),3,b
 15660  012820  D002               	bra	u14566
 15661  012822                     u14565:
 15662  012822  0101               	movlb	1	; () banked
 15663  012824  872A               	bsf	_MTP& (0+255),3,b
 15664  012826                     u14566:
 15665                           
 15666                           ; BSR set to: 1
 15667                           ;miwi_mesh.c: 4813: MTP.DestAddress = ConnectionTable[myParent].Address;
 15668  012826  0101               	movlb	1	; () banked
 15669  012828  514C               	movf	_myParent& (0+255),w,b
 15670  01282A  0D09               	mullw	9
 15671  01282C  0E04               	movlw	4
 15672  01282E  26F3               	addwf	prodl,f,c
 15673  012830  0E00               	movlw	0
 15674  012832  22F4               	addwfc	prodh,f,c
 15675  012834  0E46               	movlw	low _ConnectionTable
 15676  012836  24F3               	addwf	prodl,w,c
 15677  012838  0101               	movlb	1	; () banked
 15678  01283A  6F2B               	movwf	(_MTP+1)& (0+255),b
 15679  01283C  0E02               	movlw	high _ConnectionTable
 15680  01283E  20F4               	addwfc	prodh,w,c
 15681  012840  0101               	movlb	1	; () banked
 15682  012842  6F2C               	movwf	(_MTP+2)& (0+255),b
 15683                           
 15684                           ; BSR set to: 1
 15685                           ;miwi_mesh.c: 4817: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 15686  012844  C12A  F1B9         	movff	_MTP,MiMAC_SendPacket@transParam
 15687  012848  C12B  F1BA         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15688  01284C  C12C  F1BB         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15689  012850  0E4E               	movlw	low _TxBuffer
 15690  012852  0101               	movlb	1	; () banked
 15691  012854  6FBC               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15692  012856  0E01               	movlw	high _TxBuffer
 15693  012858  0101               	movlb	1	; () banked
 15694  01285A  6FBD               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15695  01285C  C146  F1BE         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15696  012860  ECC9  F09A         	call	_MiMAC_SendPacket	;wreg free
 15697  012864  0900               	iorlw	0
 15698  012866  A4D8               	btfss	status,2,c
 15699  012868  D004               	goto	l848
 15700                           
 15701                           ;miwi_mesh.c: 4818: {
 15702                           ;miwi_mesh.c: 4819: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15703  01286A  0101               	movlb	1	; () banked
 15704  01286C  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15705                           
 15706                           ; BSR set to: 1
 15707                           ;miwi_mesh.c: 4820: return 0;
 15708  01286E  0E00               	movlw	0
 15709                           
 15710                           ; BSR set to: 1
 15711  012870  0012               	return	
 15712  012872                     l848:
 15713                           
 15714                           ;miwi_mesh.c: 4822: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 15715  012872  0101               	movlb	1	; () banked
 15716  012874  A738               	btfss	_MiWiStateMachine& (0+255),3,b
 15717  012876  D05B               	goto	l12497
 15718                           
 15719                           ; BSR set to: 1
 15720                           ;miwi_mesh.c: 4823: {
 15721                           ;miwi_mesh.c: 4824: MIWI_TICK t1, t2;
 15722                           ;miwi_mesh.c: 4825: t1 = MiWi_TickGet();
 15723  012878  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 15724  01287C  C18A  F3DC         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1_2763
 15725  012880  C18B  F3DD         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1_2763+1
 15726  012884  C18C  F3DE         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1_2763+2
 15727  012888  C18D  F3DF         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1_2763+3
 15728  01288C                     l12477:
 15729                           
 15730                           ;miwi_mesh.c: 4827: {
 15731                           ;miwi_mesh.c: 4828: if( MiApp_MessageAvailable())
 15732  01288C  ECE2  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 15733  012890  0900               	iorlw	0
 15734  012892  A4D8               	btfss	status,2,c
 15735                           
 15736                           ;miwi_mesh.c: 4829: {
 15737                           ;miwi_mesh.c: 4830: MiApp_DiscardMessage();
 15738  012894  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 15739                           
 15740                           ;miwi_mesh.c: 4831: }
 15741                           ;miwi_mesh.c: 4833: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 15742  012898  0101               	movlb	1	; () banked
 15743  01289A  B738               	btfsc	_MiWiStateMachine& (0+255),3,b
 15744  01289C  D002               	goto	l12487
 15745                           
 15746                           ; BSR set to: 1
 15747                           ;miwi_mesh.c: 4834: {
 15748                           ;miwi_mesh.c: 4835: return 1;
 15749  01289E  0E01               	movlw	1
 15750                           
 15751                           ; BSR set to: 1
 15752  0128A0  0012               	return	
 15753  0128A2                     l12487:
 15754                           
 15755                           ; BSR set to: 1
 15756                           ;miwi_mesh.c: 4836: }
 15757                           ;miwi_mesh.c: 4837: t2 = MiWi_TickGet();
 15758  0128A2  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 15759  0128A6  C18A  F3E0         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2_2774
 15760  0128AA  C18B  F3E1         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2_2774+1
 15761  0128AE  C18C  F3E2         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2_2774+2
 15762  0128B2  C18D  F3E3         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2_2774+3
 15763                           
 15764                           ;miwi_mesh.c: 4838: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 15765  0128B6  C3DC  F1F2         	movff	MiApp_UnicastAddress@t1_2763,??_MiApp_UnicastAddress
 15766  0128BA  C3DD  F1F3         	movff	MiApp_UnicastAddress@t1_2763+1,??_MiApp_UnicastAddress+1
 15767  0128BE  C3DE  F1F4         	movff	MiApp_UnicastAddress@t1_2763+2,??_MiApp_UnicastAddress+2
 15768  0128C2  C3DF  F1F5         	movff	MiApp_UnicastAddress@t1_2763+3,??_MiApp_UnicastAddress+3
 15769  0128C6  0101               	movlb	1	; () banked
 15770  0128C8  1FF2               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 15771  0128CA  1FF3               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15772  0128CC  1FF4               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15773  0128CE  1FF5               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15774  0128D0  2BF2               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 15775  0128D2  0E00               	movlw	0
 15776  0128D4  23F3               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15777  0128D6  23F4               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15778  0128D8  23F5               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15779  0128DA  0103               	movlb	3	; () banked
 15780  0128DC  51E0               	movf	MiApp_UnicastAddress@t2_2774& (0+255),w,b
 15781  0128DE  0101               	movlb	1	; () banked
 15782  0128E0  25F2               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 15783  0128E2  0101               	movlb	1	; () banked
 15784  0128E4  6FF6               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 15785  0128E6  0103               	movlb	3	; () banked
 15786  0128E8  51E1               	movf	(MiApp_UnicastAddress@t2_2774+1)& (0+255),w,b
 15787  0128EA  0101               	movlb	1	; () banked
 15788  0128EC  21F3               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 15789  0128EE  0101               	movlb	1	; () banked
 15790  0128F0  6FF7               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 15791  0128F2  0103               	movlb	3	; () banked
 15792  0128F4  51E2               	movf	(MiApp_UnicastAddress@t2_2774+2)& (0+255),w,b
 15793  0128F6  0101               	movlb	1	; () banked
 15794  0128F8  21F4               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 15795  0128FA  0101               	movlb	1	; () banked
 15796  0128FC  6FF8               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 15797  0128FE  0103               	movlb	3	; () banked
 15798  012900  51E3               	movf	(MiApp_UnicastAddress@t2_2774+3)& (0+255),w,b
 15799  012902  0101               	movlb	1	; () banked
 15800  012904  21F5               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 15801  012906  0101               	movlb	1	; () banked
 15802  012908  6FF9               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 15803  01290A  0101               	movlb	1	; () banked
 15804  01290C  51F9               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 15805  01290E  E10B               	bnz	u14610
 15806  012910  0E21               	movlw	33
 15807  012912  0101               	movlb	1	; () banked
 15808  012914  5DF6               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 15809  012916  0EA1               	movlw	161
 15810  012918  0101               	movlb	1	; () banked
 15811  01291A  59F7               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 15812  01291C  0E07               	movlw	7
 15813  01291E  0101               	movlb	1	; () banked
 15814  012920  59F8               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 15815  012922  A0D8               	btfss	status,0,c
 15816  012924  D7B3               	goto	l12477
 15817  012926                     u14610:
 15818                           
 15819                           ; BSR set to: 1
 15820                           ;miwi_mesh.c: 4839: {
 15821                           ;miwi_mesh.c: 4840: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15822  012926  0101               	movlb	1	; () banked
 15823  012928  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15824                           
 15825                           ; BSR set to: 1
 15826                           ;miwi_mesh.c: 4841: return 0;
 15827  01292A  0E00               	movlw	0
 15828                           
 15829                           ; BSR set to: 1
 15830  01292C  0012               	return	
 15831  01292E                     l12497:
 15832                           
 15833                           ; BSR set to: 1
 15834                           ;miwi_mesh.c: 4842: }
 15835                           ;miwi_mesh.c: 4843: }
 15836                           ;miwi_mesh.c: 4844: }
 15837                           ;miwi_mesh.c: 4846: return 1;
 15838  01292E  0E01               	movlw	1
 15839  012930  0012               	return	
 15840  012932                     __end_of_MiApp_UnicastAddress:
 15841                           	opt stack 0
 15842                           tblptru	equ	0xFF8
 15843                           tblptrh	equ	0xFF7
 15844                           tblptrl	equ	0xFF6
 15845                           tablat	equ	0xFF5
 15846                           prodh	equ	0xFF4
 15847                           prodl	equ	0xFF3
 15848                           intcon	equ	0xFF2
 15849                           intcon2	equ	0xFF1
 15850                           intcon3	equ	0xFF0
 15851                           indf0	equ	0xFEF
 15852                           postinc0	equ	0xFEE
 15853                           plusw0	equ	0xFEB
 15854                           fsr0h	equ	0xFEA
 15855                           fsr0l	equ	0xFE9
 15856                           wreg	equ	0xFE8
 15857                           indf1	equ	0xFE7
 15858                           postinc1	equ	0xFE6
 15859                           postdec1	equ	0xFE5
 15860                           fsr1h	equ	0xFE2
 15861                           fsr1l	equ	0xFE1
 15862                           indf2	equ	0xFDF
 15863                           postinc2	equ	0xFDE
 15864                           postdec2	equ	0xFDD
 15865                           plusw2	equ	0xFDB
 15866                           fsr2h	equ	0xFDA
 15867                           fsr2l	equ	0xFD9
 15868                           status	equ	0xFD8
 15869                           
 15870 ;; *************** function _MiApp_SearchConnection *****************
 15871 ;; Defined at:
 15872 ;;		line 3979 in file "src/miwi/miwi_mesh.c"
 15873 ;; Parameters:    Size  Location     Type
 15874 ;;  ScanDuration    1    wreg     unsigned char 
 15875 ;;  ChannelMap      4  100[BANK1 ] unsigned long 
 15876 ;; Auto vars:     Size  Location     Type
 15877 ;;  ScanDuration    1   12[BANK3 ] unsigned char 
 15878 ;;  t2              4    8[BANK3 ] struct _MIWI_TICK
 15879 ;;  t1              4    4[BANK3 ] struct _MIWI_TICK
 15880 ;;  channelMask     4    0[BANK3 ] unsigned long 
 15881 ;;  i               1   14[BANK3 ] unsigned char 
 15882 ;;  backupChanne    1   13[BANK3 ] unsigned char 
 15883 ;; Return value:  Size  Location     Type
 15884 ;;                  1    wreg      unsigned char 
 15885 ;; Registers used:
 15886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15887 ;; Tracked objects:
 15888 ;;		On entry : 0/0
 15889 ;;		On exit  : 0/0
 15890 ;;		Unchanged: 0/0
 15891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15892 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15893 ;;      Locals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
 15894 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15895 ;;      Totals:         0       0      13       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
 15896 ;;Total ram usage:       28 bytes
 15897 ;; Hardware stack levels used:    1
 15898 ;; Hardware stack levels required when called:   16
 15899 ;; This function calls:
 15900 ;;		_MiApp_DiscardMessage
 15901 ;;		_MiApp_MessageAvailable
 15902 ;;		_MiApp_SetChannel
 15903 ;;		_MiWi_TickGet
 15904 ;;		_SendMACPacket
 15905 ;; This function is called by:
 15906 ;;		_MiApp_EstablishConnection
 15907 ;;		_main
 15908 ;; This function uses a non-reentrant model
 15909 ;;
 15910                           
 15911                           	psect	text51
 15912  013A00                     __ptext51:
 15913                           	opt stack 0
 15914  013A00                     _MiApp_SearchConnection:
 15915                           	opt stack 14
 15916                           
 15917                           ;incstack = 0
 15918                           ;MiApp_SearchConnection@ScanDuration stored from wreg
 15919  013A00  0103               	movlb	3	; () banked
 15920  013A02  6FE0               	movwf	MiApp_SearchConnection@ScanDuration& (0+255),b
 15921                           
 15922                           ;miwi_mesh.c: 3981: uint8_t i;
 15923                           ;miwi_mesh.c: 3982: uint32_t channelMask = 0x00000001;
 15924  013A04  0E01               	movlw	1
 15925  013A06  0103               	movlb	3	; () banked
 15926  013A08  6FD4               	movwf	MiApp_SearchConnection@channelMask& (0+255),b
 15927  013A0A  0E00               	movlw	0
 15928  013A0C  6FD5               	movwf	(MiApp_SearchConnection@channelMask+1)& (0+255),b
 15929  013A0E  0E00               	movlw	0
 15930  013A10  6FD6               	movwf	(MiApp_SearchConnection@channelMask+2)& (0+255),b
 15931  013A12  0E00               	movlw	0
 15932  013A14  6FD7               	movwf	(MiApp_SearchConnection@channelMask+3)& (0+255),b
 15933                           
 15934                           ; BSR set to: 3
 15935                           ;miwi_mesh.c: 3983: uint8_t backupChannel = currentChannel;
 15936  013A16  C189  F3E1         	movff	_currentChannel,MiApp_SearchConnection@backupChannel
 15937                           
 15938                           ;miwi_mesh.c: 3984: MIWI_TICK t1, t2;
 15939                           ;miwi_mesh.c: 3986: for(i = 0; i < 8; i++)
 15940  013A1A  0E00               	movlw	0
 15941  013A1C  0103               	movlb	3	; () banked
 15942  013A1E  6FE2               	movwf	MiApp_SearchConnection@i& (0+255),b
 15943  013A20                     l13297:
 15944                           
 15945                           ; BSR set to: 3
 15946  013A20  0E07               	movlw	7
 15947  013A22  0103               	movlb	3	; () banked
 15948  013A24  65E2               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
 15949  013A26  D001               	goto	l13301
 15950  013A28  D00E               	goto	l13307
 15951  013A2A                     l13301:
 15952                           
 15953                           ; BSR set to: 3
 15954                           ;miwi_mesh.c: 3987: {
 15955                           ;miwi_mesh.c: 3988: ActiveScanResults[i].Channel = 0xFF;
 15956  013A2A  0103               	movlb	3	; () banked
 15957  013A2C  51E2               	movf	MiApp_SearchConnection@i& (0+255),w,b
 15958  013A2E  0D0A               	mullw	10
 15959  013A30  0E00               	movlw	low _ActiveScanResults
 15960  013A32  24F3               	addwf	prodl,w,c
 15961  013A34  6ED9               	movwf	fsr2l,c
 15962  013A36  0E03               	movlw	high _ActiveScanResults
 15963  013A38  20F4               	addwfc	prodh,w,c
 15964  013A3A  6EDA               	movwf	fsr2h,c
 15965  013A3C  0EFF               	movlw	255
 15966  013A3E  6EDF               	movwf	indf2,c
 15967                           
 15968                           ; BSR set to: 3
 15969  013A40  0103               	movlb	3	; () banked
 15970  013A42  2BE2               	incf	MiApp_SearchConnection@i& (0+255),f,b
 15971  013A44  D7ED               	goto	l13297
 15972  013A46                     l13307:
 15973                           
 15974                           ; BSR set to: 3
 15975                           ;miwi_mesh.c: 3989: }
 15976                           ;miwi_mesh.c: 3990: ActiveScanResultIndex = 0;
 15977  013A46  0E00               	movlw	0
 15978  013A48  0101               	movlb	1	; () banked
 15979  013A4A  6F42               	movwf	_ActiveScanResultIndex& (0+255),b
 15980                           
 15981                           ; BSR set to: 1
 15982                           ;miwi_mesh.c: 3991: MiWiStateMachine.bits.searchingForNetwork = 1;
 15983  013A4C  0101               	movlb	1	; () banked
 15984  013A4E  8138               	bsf	_MiWiStateMachine& (0+255),0,b
 15985                           
 15986                           ;miwi_mesh.c: 3993: i = 0;
 15987  013A50  0E00               	movlw	0
 15988  013A52  0103               	movlb	3	; () banked
 15989  013A54  6FE2               	movwf	MiApp_SearchConnection@i& (0+255),b
 15990                           
 15991                           ;miwi_mesh.c: 3994: while(i < 32 )
 15992  013A56  D0C8               	goto	l13341
 15993  013A58                     l13311:
 15994                           
 15995                           ; BSR set to: 3
 15996                           ;miwi_mesh.c: 3995: {
 15997                           ;miwi_mesh.c: 3996: if( ChannelMap & 0xFFFFFFFF & (channelMask << i) )
 15998  013A58  C3E2  F1F2         	movff	MiApp_SearchConnection@i,??_MiApp_SearchConnection
 15999  013A5C  C3D4  F1F3         	movff	MiApp_SearchConnection@channelMask,??_MiApp_SearchConnection+1
 16000  013A60  C3D5  F1F4         	movff	MiApp_SearchConnection@channelMask+1,??_MiApp_SearchConnection+2
 16001  013A64  C3D6  F1F5         	movff	MiApp_SearchConnection@channelMask+2,??_MiApp_SearchConnection+3
 16002  013A68  C3D7  F1F6         	movff	MiApp_SearchConnection@channelMask+3,??_MiApp_SearchConnection+4
 16003  013A6C  0101               	movlb	1	; () banked
 16004  013A6E  2BF2               	incf	??_MiApp_SearchConnection& (0+255),f,b
 16005  013A70  D006               	goto	u15700
 16006  013A72                     u15705:
 16007  013A72  90D8               	bcf	status,0,c
 16008  013A74  0101               	movlb	1	; () banked
 16009  013A76  37F3               	rlcf	(??_MiApp_SearchConnection+1)& (0+255),f,b
 16010  013A78  37F4               	rlcf	(??_MiApp_SearchConnection+2)& (0+255),f,b
 16011  013A7A  37F5               	rlcf	(??_MiApp_SearchConnection+3)& (0+255),f,b
 16012  013A7C  37F6               	rlcf	(??_MiApp_SearchConnection+4)& (0+255),f,b
 16013  013A7E                     u15700:
 16014  013A7E  0101               	movlb	1	; () banked
 16015  013A80  2FF2               	decfsz	??_MiApp_SearchConnection& (0+255),f,b
 16016  013A82  D7F7               	goto	u15705
 16017  013A84  0101               	movlb	1	; () banked
 16018  013A86  51EE               	movf	MiApp_SearchConnection@ChannelMap& (0+255),w,b
 16019  013A88  0101               	movlb	1	; () banked
 16020  013A8A  15F3               	andwf	(??_MiApp_SearchConnection+1)& (0+255),w,b
 16021  013A8C  0101               	movlb	1	; () banked
 16022  013A8E  6FF7               	movwf	(??_MiApp_SearchConnection+5)& (0+255),b
 16023  013A90  0101               	movlb	1	; () banked
 16024  013A92  51EF               	movf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),w,b
 16025  013A94  0101               	movlb	1	; () banked
 16026  013A96  15F4               	andwf	(??_MiApp_SearchConnection+2)& (0+255),w,b
 16027  013A98  0101               	movlb	1	; () banked
 16028  013A9A  6FF8               	movwf	(??_MiApp_SearchConnection+6)& (0+255),b
 16029  013A9C  0101               	movlb	1	; () banked
 16030  013A9E  51F0               	movf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),w,b
 16031  013AA0  0101               	movlb	1	; () banked
 16032  013AA2  15F5               	andwf	(??_MiApp_SearchConnection+3)& (0+255),w,b
 16033  013AA4  0101               	movlb	1	; () banked
 16034  013AA6  6FF9               	movwf	(??_MiApp_SearchConnection+7)& (0+255),b
 16035  013AA8  0101               	movlb	1	; () banked
 16036  013AAA  51F1               	movf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),w,b
 16037  013AAC  0101               	movlb	1	; () banked
 16038  013AAE  15F6               	andwf	(??_MiApp_SearchConnection+4)& (0+255),w,b
 16039  013AB0  0101               	movlb	1	; () banked
 16040  013AB2  6FFA               	movwf	(??_MiApp_SearchConnection+8)& (0+255),b
 16041  013AB4  0101               	movlb	1	; () banked
 16042  013AB6  51F7               	movf	(??_MiApp_SearchConnection+5)& (0+255),w,b
 16043  013AB8  0101               	movlb	1	; () banked
 16044  013ABA  11F8               	iorwf	(??_MiApp_SearchConnection+6)& (0+255),w,b
 16045  013ABC  0101               	movlb	1	; () banked
 16046  013ABE  11F9               	iorwf	(??_MiApp_SearchConnection+7)& (0+255),w,b
 16047  013AC0  0101               	movlb	1	; () banked
 16048  013AC2  11FA               	iorwf	(??_MiApp_SearchConnection+8)& (0+255),w,b
 16049  013AC4  B4D8               	btfsc	status,2,c
 16050  013AC6  D08E               	goto	l13339
 16051                           
 16052                           ; BSR set to: 1
 16053                           ;miwi_mesh.c: 3997: {
 16054                           ;miwi_mesh.c: 3998: ;
 16055                           ;miwi_mesh.c: 3999: ;
 16056                           ;miwi_mesh.c: 4001: MiApp_SetChannel( i );
 16057  013AC8  0103               	movlb	3	; () banked
 16058  013ACA  51E2               	movf	MiApp_SearchConnection@i& (0+255),w,b
 16059  013ACC  EC87  F0B7         	call	_MiApp_SetChannel
 16060                           
 16061                           ;miwi_mesh.c: 4003: {TxData = 0;};
 16062  013AD0  0E00               	movlw	0
 16063  013AD2  0101               	movlb	1	; () banked
 16064  013AD4  6F46               	movwf	_TxData& (0+255),b
 16065                           
 16066                           ; BSR set to: 1
 16067                           ;miwi_mesh.c: 4004: TxBuffer[TxData++] = 0x07;
 16068  013AD6  0101               	movlb	1	; () banked
 16069  013AD8  5146               	movf	_TxData& (0+255),w,b
 16070  013ADA  0D01               	mullw	1
 16071  013ADC  0E4E               	movlw	low _TxBuffer
 16072  013ADE  24F3               	addwf	prodl,w,c
 16073  013AE0  6ED9               	movwf	fsr2l,c
 16074  013AE2  0E01               	movlw	high _TxBuffer
 16075  013AE4  20F4               	addwfc	prodh,w,c
 16076  013AE6  6EDA               	movwf	fsr2h,c
 16077  013AE8  0E07               	movlw	7
 16078  013AEA  6EDF               	movwf	indf2,c
 16079                           
 16080                           ; BSR set to: 1
 16081  013AEC  0101               	movlb	1	; () banked
 16082  013AEE  2B46               	incf	_TxData& (0+255),f,b
 16083                           
 16084                           ; BSR set to: 1
 16085                           ;miwi_mesh.c: 4005: TxBuffer[TxData++] = currentChannel;
 16086  013AF0  0101               	movlb	1	; () banked
 16087  013AF2  5146               	movf	_TxData& (0+255),w,b
 16088  013AF4  0D01               	mullw	1
 16089  013AF6  0E4E               	movlw	low _TxBuffer
 16090  013AF8  24F3               	addwf	prodl,w,c
 16091  013AFA  6ED9               	movwf	fsr2l,c
 16092  013AFC  0E01               	movlw	high _TxBuffer
 16093  013AFE  20F4               	addwfc	prodh,w,c
 16094  013B00  6EDA               	movwf	fsr2h,c
 16095  013B02  C189  FFDF         	movff	_currentChannel,indf2
 16096                           
 16097                           ; BSR set to: 1
 16098  013B06  0101               	movlb	1	; () banked
 16099  013B08  2B46               	incf	_TxData& (0+255),f,b
 16100                           
 16101                           ; BSR set to: 1
 16102                           ;miwi_mesh.c: 4010: SendMACPacket((0), 0x01);
 16103  013B0A  0E00               	movlw	0
 16104  013B0C  0101               	movlb	1	; () banked
 16105  013B0E  6FC3               	movwf	SendMACPacket@Address& (0+255),b
 16106  013B10  0E00               	movlw	0
 16107  013B12  0101               	movlb	1	; () banked
 16108  013B14  6FC4               	movwf	(SendMACPacket@Address+1)& (0+255),b
 16109  013B16  0E01               	movlw	1
 16110  013B18  0101               	movlb	1	; () banked
 16111  013B1A  6FC5               	movwf	SendMACPacket@PacketType& (0+255),b
 16112  013B1C  EC64  F0B3         	call	_SendMACPacket	;wreg free
 16113                           
 16114                           ;miwi_mesh.c: 4013: t1 = MiWi_TickGet();
 16115  013B20  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 16116  013B24  C18A  F3D8         	movff	?_MiWi_TickGet,MiApp_SearchConnection@t1
 16117  013B28  C18B  F3D9         	movff	?_MiWi_TickGet+1,MiApp_SearchConnection@t1+1
 16118  013B2C  C18C  F3DA         	movff	?_MiWi_TickGet+2,MiApp_SearchConnection@t1+2
 16119  013B30  C18D  F3DB         	movff	?_MiWi_TickGet+3,MiApp_SearchConnection@t1+3
 16120  013B34                     l13329:
 16121                           
 16122                           ;miwi_mesh.c: 4015: {
 16123                           ;miwi_mesh.c: 4016: if( MiApp_MessageAvailable() )
 16124  013B34  ECE2  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 16125  013B38  0900               	iorlw	0
 16126  013B3A  A4D8               	btfss	status,2,c
 16127                           
 16128                           ;miwi_mesh.c: 4017: {
 16129                           ;miwi_mesh.c: 4018: MiApp_DiscardMessage();
 16130  013B3C  ECF0  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 16131                           
 16132                           ;miwi_mesh.c: 4019: }
 16133                           ;miwi_mesh.c: 4021: t2 = MiWi_TickGet();
 16134  013B40  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 16135  013B44  C18A  F3DC         	movff	?_MiWi_TickGet,MiApp_SearchConnection@t2
 16136  013B48  C18B  F3DD         	movff	?_MiWi_TickGet+1,MiApp_SearchConnection@t2+1
 16137  013B4C  C18C  F3DE         	movff	?_MiWi_TickGet+2,MiApp_SearchConnection@t2+2
 16138  013B50  C18D  F3DF         	movff	?_MiWi_TickGet+3,MiApp_SearchConnection@t2+3
 16139                           
 16140                           ;miwi_mesh.c: 4022: if( (t2.Val - t1.Val) > ((uint32_t)(ScanTime[ScanDuration])) )
 16141  013B54  C3D8  F1F2         	movff	MiApp_SearchConnection@t1,??_MiApp_SearchConnection
 16142  013B58  C3D9  F1F3         	movff	MiApp_SearchConnection@t1+1,??_MiApp_SearchConnection+1
 16143  013B5C  C3DA  F1F4         	movff	MiApp_SearchConnection@t1+2,??_MiApp_SearchConnection+2
 16144  013B60  C3DB  F1F5         	movff	MiApp_SearchConnection@t1+3,??_MiApp_SearchConnection+3
 16145  013B64  0101               	movlb	1	; () banked
 16146  013B66  1FF2               	comf	??_MiApp_SearchConnection& (0+255),f,b
 16147  013B68  1FF3               	comf	(??_MiApp_SearchConnection+1)& (0+255),f,b
 16148  013B6A  1FF4               	comf	(??_MiApp_SearchConnection+2)& (0+255),f,b
 16149  013B6C  1FF5               	comf	(??_MiApp_SearchConnection+3)& (0+255),f,b
 16150  013B6E  2BF2               	incf	??_MiApp_SearchConnection& (0+255),f,b
 16151  013B70  0E00               	movlw	0
 16152  013B72  23F3               	addwfc	(??_MiApp_SearchConnection+1)& (0+255),f,b
 16153  013B74  23F4               	addwfc	(??_MiApp_SearchConnection+2)& (0+255),f,b
 16154  013B76  23F5               	addwfc	(??_MiApp_SearchConnection+3)& (0+255),f,b
 16155  013B78  0103               	movlb	3	; () banked
 16156  013B7A  51DC               	movf	MiApp_SearchConnection@t2& (0+255),w,b
 16157  013B7C  0101               	movlb	1	; () banked
 16158  013B7E  25F2               	addwf	??_MiApp_SearchConnection& (0+255),w,b
 16159  013B80  0101               	movlb	1	; () banked
 16160  013B82  6FF6               	movwf	(??_MiApp_SearchConnection+4)& (0+255),b
 16161  013B84  0103               	movlb	3	; () banked
 16162  013B86  51DD               	movf	(MiApp_SearchConnection@t2+1)& (0+255),w,b
 16163  013B88  0101               	movlb	1	; () banked
 16164  013B8A  21F3               	addwfc	(??_MiApp_SearchConnection+1)& (0+255),w,b
 16165  013B8C  0101               	movlb	1	; () banked
 16166  013B8E  6FF7               	movwf	(??_MiApp_SearchConnection+5)& (0+255),b
 16167  013B90  0103               	movlb	3	; () banked
 16168  013B92  51DE               	movf	(MiApp_SearchConnection@t2+2)& (0+255),w,b
 16169  013B94  0101               	movlb	1	; () banked
 16170  013B96  21F4               	addwfc	(??_MiApp_SearchConnection+2)& (0+255),w,b
 16171  013B98  0101               	movlb	1	; () banked
 16172  013B9A  6FF8               	movwf	(??_MiApp_SearchConnection+6)& (0+255),b
 16173  013B9C  0103               	movlb	3	; () banked
 16174  013B9E  51DF               	movf	(MiApp_SearchConnection@t2+3)& (0+255),w,b
 16175  013BA0  0101               	movlb	1	; () banked
 16176  013BA2  21F5               	addwfc	(??_MiApp_SearchConnection+3)& (0+255),w,b
 16177  013BA4  0101               	movlb	1	; () banked
 16178  013BA6  6FF9               	movwf	(??_MiApp_SearchConnection+7)& (0+255),b
 16179  013BA8  0103               	movlb	3	; () banked
 16180  013BAA  51E0               	movf	MiApp_SearchConnection@ScanDuration& (0+255),w,b
 16181  013BAC  0D04               	mullw	4
 16182  013BAE  0E33               	movlw	low _ScanTime
 16183  013BB0  24F3               	addwf	prodl,w,c
 16184  013BB2  6EF6               	movwf	tblptrl,c
 16185  013BB4  0EFF               	movlw	high _ScanTime
 16186  013BB6  20F4               	addwfc	prodh,w,c
 16187  013BB8  6EF7               	movwf	tblptrh,c
 16188  013BBA                     	if	1	;There are 3 active tblptr bytes
 16189  013BBA  6AF8               	clrf	tblptru,c
 16190  013BBC  0E00               	movlw	low (__mediumconst shr (0+16))
 16191  013BBE  22F8               	addwfc	tblptru,f,c
 16192  013BC0                     	endif
 16193  013BC0  0101               	movlb	1	; () banked
 16194  013BC2  51F6               	movf	(??_MiApp_SearchConnection+4)& (0+255),w,b
 16195  013BC4  0009               	tblrd		*+
 16196  013BC6  5CF5               	subwf	tablat,w,c
 16197  013BC8  0101               	movlb	1	; () banked
 16198  013BCA  51F7               	movf	(??_MiApp_SearchConnection+5)& (0+255),w,b
 16199  013BCC  0009               	tblrd		*+
 16200  013BCE  58F5               	subwfb	tablat,w,c
 16201  013BD0  0101               	movlb	1	; () banked
 16202  013BD2  51F8               	movf	(??_MiApp_SearchConnection+6)& (0+255),w,b
 16203  013BD4  0009               	tblrd		*+
 16204  013BD6  58F5               	subwfb	tablat,w,c
 16205  013BD8  0101               	movlb	1	; () banked
 16206  013BDA  51F9               	movf	(??_MiApp_SearchConnection+7)& (0+255),w,b
 16207  013BDC  0009               	tblrd		*+
 16208  013BDE  58F5               	subwfb	tablat,w,c
 16209  013BE0  B0D8               	btfsc	status,0,c
 16210  013BE2  D7A8               	goto	l13329
 16211  013BE4                     l13339:
 16212                           
 16213                           ; BSR set to: 1
 16214                           ;miwi_mesh.c: 4026: }
 16215                           ;miwi_mesh.c: 4027: }
 16216                           ;miwi_mesh.c: 4028: }
 16217                           ;miwi_mesh.c: 4029: i++;
 16218  013BE4  0103               	movlb	3	; () banked
 16219  013BE6  2BE2               	incf	MiApp_SearchConnection@i& (0+255),f,b
 16220  013BE8                     l13341:
 16221                           
 16222                           ; BSR set to: 3
 16223  013BE8  0E1F               	movlw	31
 16224  013BEA  0103               	movlb	3	; () banked
 16225  013BEC  65E2               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
 16226  013BEE  D734               	goto	l13311
 16227                           
 16228                           ; BSR set to: 3
 16229                           ;miwi_mesh.c: 4030: }
 16230                           ;miwi_mesh.c: 4032: MiApp_SetChannel(backupChannel);
 16231                           
 16232                           ; BSR set to: 3
 16233  013BF0  0103               	movlb	3	; () banked
 16234  013BF2  51E1               	movf	MiApp_SearchConnection@backupChannel& (0+255),w,b
 16235  013BF4  EC87  F0B7         	call	_MiApp_SetChannel
 16236                           
 16237                           ;miwi_mesh.c: 4033: MiWiStateMachine.bits.searchingForNetwork = 0;
 16238  013BF8  0101               	movlb	1	; () banked
 16239  013BFA  9138               	bcf	_MiWiStateMachine& (0+255),0,b
 16240                           
 16241                           ; BSR set to: 1
 16242                           ;miwi_mesh.c: 4035: return ActiveScanResultIndex;
 16243  013BFC  0101               	movlb	1	; () banked
 16244  013BFE  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 16245  013C00  0012               	return	
 16246  013C02                     __end_of_MiApp_SearchConnection:
 16247                           	opt stack 0
 16248                           tblptru	equ	0xFF8
 16249                           tblptrh	equ	0xFF7
 16250                           tblptrl	equ	0xFF6
 16251                           tablat	equ	0xFF5
 16252                           prodh	equ	0xFF4
 16253                           prodl	equ	0xFF3
 16254                           intcon	equ	0xFF2
 16255                           intcon2	equ	0xFF1
 16256                           intcon3	equ	0xFF0
 16257                           indf0	equ	0xFEF
 16258                           postinc0	equ	0xFEE
 16259                           plusw0	equ	0xFEB
 16260                           fsr0h	equ	0xFEA
 16261                           fsr0l	equ	0xFE9
 16262                           wreg	equ	0xFE8
 16263                           indf1	equ	0xFE7
 16264                           postinc1	equ	0xFE6
 16265                           postdec1	equ	0xFE5
 16266                           fsr1h	equ	0xFE2
 16267                           fsr1l	equ	0xFE1
 16268                           indf2	equ	0xFDF
 16269                           postinc2	equ	0xFDE
 16270                           postdec2	equ	0xFDD
 16271                           plusw2	equ	0xFDB
 16272                           fsr2h	equ	0xFDA
 16273                           fsr2l	equ	0xFD9
 16274                           status	equ	0xFD8
 16275                           
 16276 ;; *************** function _SendMACPacket *****************
 16277 ;; Defined at:
 16278 ;;		line 2251 in file "src/miwi/miwi_mesh.c"
 16279 ;; Parameters:    Size  Location     Type
 16280 ;;  Address         2   57[BANK1 ] PTR unsigned char 
 16281 ;;		 -> ConnectionTable(90), NULL(0), 
 16282 ;;  PacketType      1   59[BANK1 ] unsigned char 
 16283 ;; Auto vars:     Size  Location     Type
 16284 ;;		None
 16285 ;; Return value:  Size  Location     Type
 16286 ;;                  1    wreg      unsigned char 
 16287 ;; Registers used:
 16288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16289 ;; Tracked objects:
 16290 ;;		On entry : 0/0
 16291 ;;		On exit  : 0/0
 16292 ;;		Unchanged: 0/0
 16293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16294 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16296 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16297 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16298 ;;Total ram usage:        4 bytes
 16299 ;; Hardware stack levels used:    1
 16300 ;; Hardware stack levels required when called:   14
 16301 ;; This function calls:
 16302 ;;		_MiMAC_SendPacket
 16303 ;; This function is called by:
 16304 ;;		_MiApp_SearchConnection
 16305 ;;		_MiApp_EstablishConnection
 16306 ;; This function uses a non-reentrant model
 16307 ;;
 16308                           
 16309                           	psect	text52
 16310  0166C8                     __ptext52:
 16311                           	opt stack 0
 16312  0166C8                     _SendMACPacket:
 16313                           	opt stack 15
 16314                           
 16315                           ;miwi_mesh.c: 2254: MTP.flags.Val = 0;
 16316                           
 16317                           ; BSR set to: 1
 16318                           ;incstack = 0
 16319  0166C8  0E00               	movlw	0
 16320  0166CA  0101               	movlb	1	; () banked
 16321  0166CC  6F2A               	movwf	_MTP& (0+255),b
 16322                           
 16323                           ; BSR set to: 1
 16324                           ;miwi_mesh.c: 2256: MTP.flags.bits.packetType = PacketType;
 16325  0166CE  0101               	movlb	1	; () banked
 16326  0166D0  512A               	movf	_MTP& (0+255),w,b
 16327  0166D2  0101               	movlb	1	; () banked
 16328  0166D4  19C5               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 16329  0166D6  0BFC               	andlw	-4
 16330  0166D8  19C5               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 16331  0166DA  0101               	movlb	1	; () banked
 16332  0166DC  6F2A               	movwf	_MTP& (0+255),b
 16333                           
 16334                           ; BSR set to: 1
 16335                           ;miwi_mesh.c: 2257: if( Address == (0) )
 16336  0166DE  0101               	movlb	1	; () banked
 16337  0166E0  51C3               	movf	SendMACPacket@Address& (0+255),w,b
 16338  0166E2  0101               	movlb	1	; () banked
 16339  0166E4  11C4               	iorwf	(SendMACPacket@Address+1)& (0+255),w,b
 16340  0166E6  A4D8               	btfss	status,2,c
 16341  0166E8  D002               	goto	l12633
 16342                           
 16343                           ; BSR set to: 1
 16344                           ;miwi_mesh.c: 2258: {
 16345                           ;miwi_mesh.c: 2259: MTP.flags.bits.broadcast = 1;
 16346  0166EA  0101               	movlb	1	; () banked
 16347  0166EC  852A               	bsf	_MTP& (0+255),2,b
 16348  0166EE                     l12633:
 16349                           
 16350                           ; BSR set to: 1
 16351                           ;miwi_mesh.c: 2260: }
 16352                           ;miwi_mesh.c: 2261: MTP.flags.bits.ackReq = (MTP.flags.bits.broadcast) ? 0:1;
 16353  0166EE  0101               	movlb	1	; () banked
 16354  0166F0  B52A               	btfsc	_MTP& (0+255),2,b
 16355  0166F2  D004               	goto	u14780
 16356  0166F4  0101               	movlb	1	; () banked
 16357  0166F6  6BC6               	clrf	??_SendMACPacket& (0+255),b
 16358  0166F8  2BC6               	incf	??_SendMACPacket& (0+255),f,b
 16359  0166FA  D002               	goto	u14798
 16360  0166FC                     u14780:
 16361  0166FC  0101               	movlb	1	; () banked
 16362  0166FE  6BC6               	clrf	??_SendMACPacket& (0+255),b
 16363  016700                     u14798:
 16364  016700  0101               	movlb	1	; () banked
 16365  016702  3BC6               	swapf	??_SendMACPacket& (0+255),f,b
 16366  016704  47C6               	rlncf	??_SendMACPacket& (0+255),f,b
 16367  016706  0101               	movlb	1	; () banked
 16368  016708  512A               	movf	_MTP& (0+255),w,b
 16369  01670A  0101               	movlb	1	; () banked
 16370  01670C  19C6               	xorwf	??_SendMACPacket& (0+255),w,b
 16371  01670E  0BDF               	andlw	-33
 16372  016710  19C6               	xorwf	??_SendMACPacket& (0+255),w,b
 16373  016712  0101               	movlb	1	; () banked
 16374  016714  6F2A               	movwf	_MTP& (0+255),b
 16375                           
 16376                           ; BSR set to: 1
 16377                           ;miwi_mesh.c: 2262: MTP.flags.bits.sourcePrsnt = 1;
 16378  016716  0101               	movlb	1	; () banked
 16379  016718  8F2A               	bsf	_MTP& (0+255),7,b
 16380                           
 16381                           ;miwi_mesh.c: 2264: MTP.DestAddress = Address;
 16382  01671A  C1C3  F12B         	movff	SendMACPacket@Address,_MTP+1
 16383  01671E  C1C4  F12C         	movff	SendMACPacket@Address+1,_MTP+2
 16384                           
 16385                           ; BSR set to: 1
 16386                           ;miwi_mesh.c: 2287: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 16387                           ;	Return value of _SendMACPacket is never used
 16388  016722  C12A  F1B9         	movff	_MTP,MiMAC_SendPacket@transParam
 16389  016726  C12B  F1BA         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 16390  01672A  C12C  F1BB         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 16391  01672E  0E4E               	movlw	low _TxBuffer
 16392  016730  0101               	movlb	1	; () banked
 16393  016732  6FBC               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 16394  016734  0E01               	movlw	high _TxBuffer
 16395  016736  0101               	movlb	1	; () banked
 16396  016738  6FBD               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 16397  01673A  C146  F1BE         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 16398  01673E  ECC9  F09A         	call	_MiMAC_SendPacket	;wreg free
 16399  016742  0012               	return	
 16400  016744                     __end_of_SendMACPacket:
 16401                           	opt stack 0
 16402                           tblptru	equ	0xFF8
 16403                           tblptrh	equ	0xFF7
 16404                           tblptrl	equ	0xFF6
 16405                           tablat	equ	0xFF5
 16406                           prodh	equ	0xFF4
 16407                           prodl	equ	0xFF3
 16408                           intcon	equ	0xFF2
 16409                           intcon2	equ	0xFF1
 16410                           intcon3	equ	0xFF0
 16411                           indf0	equ	0xFEF
 16412                           postinc0	equ	0xFEE
 16413                           plusw0	equ	0xFEB
 16414                           fsr0h	equ	0xFEA
 16415                           fsr0l	equ	0xFE9
 16416                           wreg	equ	0xFE8
 16417                           indf1	equ	0xFE7
 16418                           postinc1	equ	0xFE6
 16419                           postdec1	equ	0xFE5
 16420                           fsr1h	equ	0xFE2
 16421                           fsr1l	equ	0xFE1
 16422                           indf2	equ	0xFDF
 16423                           postinc2	equ	0xFDE
 16424                           postdec2	equ	0xFDD
 16425                           plusw2	equ	0xFDB
 16426                           fsr2h	equ	0xFDA
 16427                           fsr2l	equ	0xFD9
 16428                           status	equ	0xFD8
 16429                           
 16430 ;; *************** function _MiApp_SetChannel *****************
 16431 ;; Defined at:
 16432 ;;		line 3867 in file "src/miwi/miwi_mesh.c"
 16433 ;; Parameters:    Size  Location     Type
 16434 ;;  channel         1    wreg     unsigned char 
 16435 ;; Auto vars:     Size  Location     Type
 16436 ;;  channel         1   10[BANK1 ] unsigned char 
 16437 ;; Return value:  Size  Location     Type
 16438 ;;                  1    wreg      unsigned char 
 16439 ;; Registers used:
 16440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16441 ;; Tracked objects:
 16442 ;;		On entry : 0/0
 16443 ;;		On exit  : 0/0
 16444 ;;		Unchanged: 0/0
 16445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16447 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16449 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16450 ;;Total ram usage:        1 bytes
 16451 ;; Hardware stack levels used:    1
 16452 ;; Hardware stack levels required when called:   13
 16453 ;; This function calls:
 16454 ;;		_MiMAC_SetChannel
 16455 ;; This function is called by:
 16456 ;;		_MiApp_ProtocolInit
 16457 ;;		_MiApp_SearchConnection
 16458 ;;		_MiApp_EstablishConnection
 16459 ;; This function uses a non-reentrant model
 16460 ;;
 16461                           
 16462                           	psect	text53
 16463  016F0E                     __ptext53:
 16464                           	opt stack 0
 16465  016F0E                     _MiApp_SetChannel:
 16466                           	opt stack 16
 16467                           
 16468                           ;incstack = 0
 16469                           ;MiApp_SetChannel@channel stored from wreg
 16470  016F0E  0101               	movlb	1	; () banked
 16471  016F10  6F94               	movwf	MiApp_SetChannel@channel& (0+255),b
 16472                           
 16473                           ;miwi_mesh.c: 3869: if( MiMAC_SetChannel(channel, 0) )
 16474  016F12  0E00               	movlw	0
 16475  016F14  0101               	movlb	1	; () banked
 16476  016F16  6F91               	movwf	MiMAC_SetChannel@offsetFreq& (0+255),b
 16477  016F18  0101               	movlb	1	; () banked
 16478  016F1A  5194               	movf	MiApp_SetChannel@channel& (0+255),w,b
 16479  016F1C  ECBA  F0AF         	call	_MiMAC_SetChannel
 16480  016F20  0900               	iorlw	0
 16481  016F22  B4D8               	btfsc	status,2,c
 16482  016F24  0012               	return	
 16483                           
 16484                           ;miwi_mesh.c: 3870: {
 16485                           ;miwi_mesh.c: 3871: currentChannel = channel;
 16486  016F26  C194  F189         	movff	MiApp_SetChannel@channel,_currentChannel
 16487                           
 16488                           ;miwi_mesh.c: 3875: return 1;
 16489                           ;	Return value of _MiApp_SetChannel is never used
 16490  016F2A  0012               	return	
 16491  016F2C                     __end_of_MiApp_SetChannel:
 16492                           	opt stack 0
 16493                           tblptru	equ	0xFF8
 16494                           tblptrh	equ	0xFF7
 16495                           tblptrl	equ	0xFF6
 16496                           tablat	equ	0xFF5
 16497                           prodh	equ	0xFF4
 16498                           prodl	equ	0xFF3
 16499                           intcon	equ	0xFF2
 16500                           intcon2	equ	0xFF1
 16501                           intcon3	equ	0xFF0
 16502                           indf0	equ	0xFEF
 16503                           postinc0	equ	0xFEE
 16504                           plusw0	equ	0xFEB
 16505                           fsr0h	equ	0xFEA
 16506                           fsr0l	equ	0xFE9
 16507                           wreg	equ	0xFE8
 16508                           indf1	equ	0xFE7
 16509                           postinc1	equ	0xFE6
 16510                           postdec1	equ	0xFE5
 16511                           fsr1h	equ	0xFE2
 16512                           fsr1l	equ	0xFE1
 16513                           indf2	equ	0xFDF
 16514                           postinc2	equ	0xFDE
 16515                           postdec2	equ	0xFDD
 16516                           plusw2	equ	0xFDB
 16517                           fsr2h	equ	0xFDA
 16518                           fsr2l	equ	0xFD9
 16519                           status	equ	0xFD8
 16520                           
 16521 ;; *************** function _MiMAC_SetChannel *****************
 16522 ;; Defined at:
 16523 ;;		line 490 in file "src/miwi/drv_mrf_miwi_89xa.c"
 16524 ;; Parameters:    Size  Location     Type
 16525 ;;  channel         1    wreg     unsigned char 
 16526 ;;  offsetFreq      1    7[BANK1 ] unsigned char 
 16527 ;; Auto vars:     Size  Location     Type
 16528 ;;  channel         1    9[BANK1 ] unsigned char 
 16529 ;; Return value:  Size  Location     Type
 16530 ;;                  1    wreg      unsigned char 
 16531 ;; Registers used:
 16532 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16533 ;; Tracked objects:
 16534 ;;		On entry : 0/0
 16535 ;;		On exit  : 0/0
 16536 ;;		Unchanged: 0/0
 16537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16538 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16539 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16540 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16541 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16542 ;;Total ram usage:        3 bytes
 16543 ;; Hardware stack levels used:    1
 16544 ;; Hardware stack levels required when called:   12
 16545 ;; This function calls:
 16546 ;;		_RegisterSet
 16547 ;;		_SetRFMode
 16548 ;; This function is called by:
 16549 ;;		_MiApp_SetChannel
 16550 ;; This function uses a non-reentrant model
 16551 ;;
 16552                           
 16553                           	psect	text54
 16554  015F74                     __ptext54:
 16555                           	opt stack 0
 16556  015F74                     _MiMAC_SetChannel:
 16557                           	opt stack 16
 16558                           
 16559                           ;incstack = 0
 16560                           ;MiMAC_SetChannel@channel stored from wreg
 16561  015F74  0101               	movlb	1	; () banked
 16562  015F76  6F93               	movwf	MiMAC_SetChannel@channel& (0+255),b
 16563                           
 16564                           ;drv_mrf_miwi_89xa.c: 492: if( channel >= 32 )
 16565  015F78  0E1F               	movlw	31
 16566  015F7A  0101               	movlb	1	; () banked
 16567  015F7C  6593               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 16568  015F7E  D002               	goto	l12269
 16569                           
 16570                           ; BSR set to: 1
 16571                           ;drv_mrf_miwi_89xa.c: 493: {
 16572                           ;drv_mrf_miwi_89xa.c: 494: return 0;
 16573  015F80  0E00               	movlw	0
 16574                           
 16575                           ; BSR set to: 1
 16576  015F82  0012               	return	
 16577  015F84                     l12269:
 16578                           
 16579                           ; BSR set to: 1
 16580                           ;drv_mrf_miwi_89xa.c: 495: }
 16581                           ;drv_mrf_miwi_89xa.c: 498: RegisterSet(0x0C00 | 100);
 16582  015F84  0E0C               	movlw	12
 16583  015F86  0101               	movlb	1	; () banked
 16584  015F88  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 16585  015F8A  0E64               	movlw	100
 16586  015F8C  6F8C               	movwf	RegisterSet@setting& (0+255),b
 16587  015F8E  EC03  F0B6         	call	_RegisterSet	;wreg free
 16588                           
 16589                           ;drv_mrf_miwi_89xa.c: 499: RegisterSet(0x0E00 | PVALUE[channel]);
 16590  015F92  0101               	movlb	1	; () banked
 16591  015F94  5193               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 16592  015F96  0D01               	mullw	1
 16593  015F98  0E6F               	movlw	low _PVALUE
 16594  015F9A  24F3               	addwf	prodl,w,c
 16595  015F9C  6EF6               	movwf	tblptrl,c
 16596  015F9E  0EFF               	movlw	high _PVALUE
 16597  015FA0  20F4               	addwfc	prodh,w,c
 16598  015FA2  6EF7               	movwf	tblptrh,c
 16599  015FA4                     	if	1	;There are 3 active tblptr bytes
 16600  015FA4  6AF8               	clrf	tblptru,c
 16601  015FA6  0E00               	movlw	low (__mediumconst shr (0+16))
 16602  015FA8  22F8               	addwfc	tblptru,f,c
 16603  015FAA                     	endif
 16604  015FAA  0008               	tblrd		*
 16605  015FAC  CFF5 F192          	movff	tablat,??_MiMAC_SetChannel
 16606  015FB0  0E00               	movlw	0
 16607  015FB2  0101               	movlb	1	; () banked
 16608  015FB4  1192               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 16609  015FB6  0101               	movlb	1	; () banked
 16610  015FB8  6F8C               	movwf	RegisterSet@setting& (0+255),b
 16611  015FBA  0E0E               	movlw	14
 16612  015FBC  0101               	movlb	1	; () banked
 16613  015FBE  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 16614  015FC0  EC03  F0B6         	call	_RegisterSet	;wreg free
 16615                           
 16616                           ;drv_mrf_miwi_89xa.c: 500: RegisterSet(0x1000 | SVALUE[channel]);
 16617  015FC4  0101               	movlb	1	; () banked
 16618  015FC6  5193               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 16619  015FC8  0D01               	mullw	1
 16620  015FCA  0E8F               	movlw	low _SVALUE
 16621  015FCC  24F3               	addwf	prodl,w,c
 16622  015FCE  6EF6               	movwf	tblptrl,c
 16623  015FD0  0EFF               	movlw	high _SVALUE
 16624  015FD2  20F4               	addwfc	prodh,w,c
 16625  015FD4  6EF7               	movwf	tblptrh,c
 16626  015FD6                     	if	1	;There are 3 active tblptr bytes
 16627  015FD6  6AF8               	clrf	tblptru,c
 16628  015FD8  0E00               	movlw	low (__mediumconst shr (0+16))
 16629  015FDA  22F8               	addwfc	tblptru,f,c
 16630  015FDC                     	endif
 16631  015FDC  0008               	tblrd		*
 16632  015FDE  CFF5 F192          	movff	tablat,??_MiMAC_SetChannel
 16633  015FE2  0E00               	movlw	0
 16634  015FE4  0101               	movlb	1	; () banked
 16635  015FE6  1192               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 16636  015FE8  0101               	movlb	1	; () banked
 16637  015FEA  6F8C               	movwf	RegisterSet@setting& (0+255),b
 16638  015FEC  0E10               	movlw	16
 16639  015FEE  0101               	movlb	1	; () banked
 16640  015FF0  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 16641  015FF2  EC03  F0B6         	call	_RegisterSet	;wreg free
 16642                           
 16643                           ;drv_mrf_miwi_89xa.c: 501: SetRFMode(0x20);
 16644  015FF6  0E20               	movlw	32
 16645  015FF8  ECC1  F0B1         	call	_SetRFMode
 16646                           
 16647                           ;drv_mrf_miwi_89xa.c: 502: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 16648  015FFC  0E00               	movlw	0
 16649  015FFE  0101               	movlb	1	; () banked
 16650  016000  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 16651  016002  0E56               	movlw	86
 16652  016004  6F8C               	movwf	RegisterSet@setting& (0+255),b
 16653  016006  EC03  F0B6         	call	_RegisterSet	;wreg free
 16654                           
 16655                           ;drv_mrf_miwi_89xa.c: 503: SetRFMode(0x40);
 16656  01600A  0E40               	movlw	64
 16657  01600C  ECC1  F0B1         	call	_SetRFMode
 16658                           
 16659                           ;drv_mrf_miwi_89xa.c: 504: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 16660  016010  0E1C               	movlw	28
 16661  016012  0101               	movlb	1	; () banked
 16662  016014  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 16663  016016  0E0F               	movlw	15
 16664  016018  6F8C               	movwf	RegisterSet@setting& (0+255),b
 16665  01601A  EC03  F0B6         	call	_RegisterSet	;wreg free
 16666                           
 16667                           ;drv_mrf_miwi_89xa.c: 505: SetRFMode(0x20);
 16668  01601E  0E20               	movlw	32
 16669  016020  ECC1  F0B1         	call	_SetRFMode
 16670                           
 16671                           ;drv_mrf_miwi_89xa.c: 506: SetRFMode(0x60);
 16672  016024  0E60               	movlw	96
 16673  016026  ECC1  F0B1         	call	_SetRFMode
 16674                           
 16675                           ;drv_mrf_miwi_89xa.c: 508: return 1;
 16676  01602A  0E01               	movlw	1
 16677  01602C  0012               	return	
 16678  01602E                     __end_of_MiMAC_SetChannel:
 16679                           	opt stack 0
 16680                           tblptru	equ	0xFF8
 16681                           tblptrh	equ	0xFF7
 16682                           tblptrl	equ	0xFF6
 16683                           tablat	equ	0xFF5
 16684                           prodh	equ	0xFF4
 16685                           prodl	equ	0xFF3
 16686                           intcon	equ	0xFF2
 16687                           intcon2	equ	0xFF1
 16688                           intcon3	equ	0xFF0
 16689                           indf0	equ	0xFEF
 16690                           postinc0	equ	0xFEE
 16691                           plusw0	equ	0xFEB
 16692                           fsr0h	equ	0xFEA
 16693                           fsr0l	equ	0xFE9
 16694                           wreg	equ	0xFE8
 16695                           indf1	equ	0xFE7
 16696                           postinc1	equ	0xFE6
 16697                           postdec1	equ	0xFE5
 16698                           fsr1h	equ	0xFE2
 16699                           fsr1l	equ	0xFE1
 16700                           indf2	equ	0xFDF
 16701                           postinc2	equ	0xFDE
 16702                           postdec2	equ	0xFDD
 16703                           plusw2	equ	0xFDB
 16704                           fsr2h	equ	0xFDA
 16705                           fsr2l	equ	0xFD9
 16706                           status	equ	0xFD8
 16707                           
 16708 ;; *************** function _MiApp_MessageAvailable *****************
 16709 ;; Defined at:
 16710 ;;		line 4236 in file "src/miwi/miwi_mesh.c"
 16711 ;; Parameters:    Size  Location     Type
 16712 ;;		None
 16713 ;; Auto vars:     Size  Location     Type
 16714 ;;		None
 16715 ;; Return value:  Size  Location     Type
 16716 ;;                  1    wreg      unsigned char 
 16717 ;; Registers used:
 16718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16719 ;; Tracked objects:
 16720 ;;		On entry : 0/0
 16721 ;;		On exit  : 0/0
 16722 ;;		Unchanged: 0/0
 16723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16728 ;;Total ram usage:        0 bytes
 16729 ;; Hardware stack levels used:    1
 16730 ;; Hardware stack levels required when called:   15
 16731 ;; This function calls:
 16732 ;;		_MiWiTasks
 16733 ;; This function is called by:
 16734 ;;		_MiApp_SearchConnection
 16735 ;;		_MiApp_EstablishConnection
 16736 ;;		_MiApp_UnicastAddress
 16737 ;;		_main
 16738 ;;		_process_update_answer
 16739 ;;		_do_NETWORK_REGISTER
 16740 ;;		_do_POWER_TEST
 16741 ;;		_do_UPDATE
 16742 ;;		_MiApp_UnicastConnection
 16743 ;;		_do_PING
 16744 ;; This function uses a non-reentrant model
 16745 ;;
 16746                           
 16747                           	psect	text55
 16748  016FC4                     __ptext55:
 16749                           	opt stack 0
 16750  016FC4                     _MiApp_MessageAvailable:
 16751                           	opt stack 12
 16752                           
 16753                           ;miwi_mesh.c: 4238: MiWiTasks();
 16754                           
 16755                           ;incstack = 0
 16756  016FC4  EC00  F080         	call	_MiWiTasks	;wreg free
 16757                           
 16758                           ;miwi_mesh.c: 4239: return MiWiStateMachine.bits.RxHasUserData;
 16759  016FC8  0101               	movlb	1	; () banked
 16760  016FCA  A538               	btfss	_MiWiStateMachine& (0+255),2,b
 16761  016FCC  D002               	goto	u14330
 16762  016FCE  0E01               	movlw	1
 16763  016FD0  0012               	return	
 16764  016FD2                     u14330:
 16765  016FD2  0E00               	movlw	0
 16766  016FD4  0012               	return	
 16767  016FD6                     __end_of_MiApp_MessageAvailable:
 16768                           	opt stack 0
 16769                           tblptru	equ	0xFF8
 16770                           tblptrh	equ	0xFF7
 16771                           tblptrl	equ	0xFF6
 16772                           tablat	equ	0xFF5
 16773                           prodh	equ	0xFF4
 16774                           prodl	equ	0xFF3
 16775                           intcon	equ	0xFF2
 16776                           intcon2	equ	0xFF1
 16777                           intcon3	equ	0xFF0
 16778                           indf0	equ	0xFEF
 16779                           postinc0	equ	0xFEE
 16780                           plusw0	equ	0xFEB
 16781                           fsr0h	equ	0xFEA
 16782                           fsr0l	equ	0xFE9
 16783                           wreg	equ	0xFE8
 16784                           indf1	equ	0xFE7
 16785                           postinc1	equ	0xFE6
 16786                           postdec1	equ	0xFE5
 16787                           fsr1h	equ	0xFE2
 16788                           fsr1l	equ	0xFE1
 16789                           indf2	equ	0xFDF
 16790                           postinc2	equ	0xFDE
 16791                           postdec2	equ	0xFDD
 16792                           plusw2	equ	0xFDB
 16793                           fsr2h	equ	0xFDA
 16794                           fsr2l	equ	0xFD9
 16795                           status	equ	0xFD8
 16796                           
 16797 ;; *************** function _MiWiTasks *****************
 16798 ;; Defined at:
 16799 ;;		line 282 in file "src/miwi/miwi_mesh.c"
 16800 ;; Parameters:    Size  Location     Type
 16801 ;;		None
 16802 ;; Auto vars:     Size  Location     Type
 16803 ;;  j               1   94[BANK1 ] unsigned char 
 16804 ;;  CapacityByte    1   93[BANK1 ] struct .
 16805 ;;  cIndex          1   83[BANK1 ] unsigned char 
 16806 ;;  rxIndex         1   92[BANK1 ] unsigned char 
 16807 ;;  sourceShortA    2   97[BANK1 ] struct .
 16808 ;;  sourcePANID     2   95[BANK1 ] struct .
 16809 ;;  destShortAdd    2   90[BANK1 ] struct .
 16810 ;;  destPANID       2   88[BANK1 ] struct .
 16811 ;;  t1              4   84[BANK1 ] struct _MIWI_TICK
 16812 ;;  t2              4   79[BANK1 ] struct _MIWI_TICK
 16813 ;;  i               1   99[BANK1 ] unsigned char 
 16814 ;; Return value:  Size  Location     Type
 16815 ;;		None               void
 16816 ;; Registers used:
 16817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16818 ;; Tracked objects:
 16819 ;;		On entry : 0/0
 16820 ;;		On exit  : 0/0
 16821 ;;		Unchanged: 0/0
 16822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16824 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16825 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16826 ;;      Totals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16827 ;;Total ram usage:       29 bytes
 16828 ;; Hardware stack levels used:    1
 16829 ;; Hardware stack levels required when called:   14
 16830 ;; This function calls:
 16831 ;;		_AddNodeToNetworkTable
 16832 ;;		_MiMAC_DiscardPacket
 16833 ;;		_MiMAC_ReceivedPacket
 16834 ;;		_MiMAC_SendPacket
 16835 ;;		_MiMAC_SetAltAddress
 16836 ;;		_MiWi_TickGet
 16837 ;;		_SearchForLongAddress
 16838 ;;		_SearchForShortAddress
 16839 ;; This function is called by:
 16840 ;;		_MiApp_MessageAvailable
 16841 ;;		_main
 16842 ;; This function uses a non-reentrant model
 16843 ;;
 16844                           
 16845                           	psect	text56
 16846  010000                     __ptext56:
 16847                           	opt stack 0
 16848  010000                     _MiWiTasks:
 16849                           	opt stack 12
 16850                           
 16851                           ;miwi_mesh.c: 284: uint8_t i;
 16852                           ;miwi_mesh.c: 285: MIWI_TICK t1, t2;
 16853                           ;miwi_mesh.c: 287: if( MiMAC_ReceivedPacket() )
 16854                           
 16855                           ; BSR set to: 1
 16856                           ;incstack = 0
 16857  010000  ECED  F08F         	call	_MiMAC_ReceivedPacket	;wreg free
 16858  010004  0900               	iorlw	0
 16859  010006  B4D8               	btfsc	status,2,c
 16860  010008  EF83  F085         	goto	l12197
 16861                           
 16862                           ;miwi_mesh.c: 288: {
 16863                           ;miwi_mesh.c: 289: if( MiWiStateMachine.bits.RxHasUserData )
 16864  01000C  0101               	movlb	1	; () banked
 16865  01000E  B538               	btfsc	_MiWiStateMachine& (0+255),2,b
 16866  010010  0012               	return	
 16867                           
 16868                           ; BSR set to: 1
 16869                           ;miwi_mesh.c: 292: }
 16870                           ;miwi_mesh.c: 294: rxMessage.flags.Val = 0;
 16871                           
 16872                           ; BSR set to: 1
 16873                           
 16874                           ; BSR set to: 1
 16875                           ;miwi_mesh.c: 290: {
 16876                           ;miwi_mesh.c: 291: return;
 16877  010012  0E00               	movlw	0
 16878  010014  0101               	movlb	1	; () banked
 16879  010016  6F0C               	movwf	_rxMessage& (0+255),b
 16880                           
 16881                           ; BSR set to: 1
 16882                           ;miwi_mesh.c: 295: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
 16883  010018  0101               	movlb	1	; () banked
 16884  01001A  A516               	btfss	_MACRxPacket& (0+255),2,b
 16885  01001C  D004               	goto	u13660
 16886  01001E  0101               	movlb	1	; () banked
 16887  010020  6BD1               	clrf	??_MiWiTasks& (0+255),b
 16888  010022  2BD1               	incf	??_MiWiTasks& (0+255),f,b
 16889  010024  D002               	goto	u13668
 16890  010026                     u13660:
 16891  010026  0101               	movlb	1	; () banked
 16892  010028  6BD1               	clrf	??_MiWiTasks& (0+255),b
 16893  01002A                     u13668:
 16894  01002A  0101               	movlb	1	; () banked
 16895  01002C  510C               	movf	_rxMessage& (0+255),w,b
 16896  01002E  0101               	movlb	1	; () banked
 16897  010030  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 16898  010032  0BFC               	andlw	-4
 16899  010034  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 16900  010036  0101               	movlb	1	; () banked
 16901  010038  6F0C               	movwf	_rxMessage& (0+255),b
 16902                           
 16903                           ; BSR set to: 1
 16904                           ;miwi_mesh.c: 296: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 16905  01003A  0101               	movlb	1	; () banked
 16906  01003C  A716               	btfss	_MACRxPacket& (0+255),3,b
 16907  01003E  D003               	bra	u13675
 16908  010040  0101               	movlb	1	; () banked
 16909  010042  870C               	bsf	_rxMessage& (0+255),3,b
 16910  010044  D002               	bra	u13677
 16911  010046                     u13675:
 16912  010046  0101               	movlb	1	; () banked
 16913  010048  970C               	bcf	_rxMessage& (0+255),3,b
 16914  01004A                     u13677:
 16915                           
 16916                           ; BSR set to: 1
 16917                           ;miwi_mesh.c: 297: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 
      +                          0x01) ? 1:0;
 16918  01004A  0101               	movlb	1	; () banked
 16919  01004C  5116               	movf	_MACRxPacket& (0+255),w,b
 16920  01004E  0B03               	andlw	3
 16921  010050  06E8               	decf	wreg,f,c
 16922  010052  A4D8               	btfss	status,2,c
 16923  010054  D004               	goto	u13680
 16924  010056  0101               	movlb	1	; () banked
 16925  010058  6BD1               	clrf	??_MiWiTasks& (0+255),b
 16926  01005A  2BD1               	incf	??_MiWiTasks& (0+255),f,b
 16927  01005C  D002               	goto	u13698
 16928  01005E                     u13680:
 16929  01005E  0101               	movlb	1	; () banked
 16930  010060  6BD1               	clrf	??_MiWiTasks& (0+255),b
 16931  010062                     u13698:
 16932  010062  0101               	movlb	1	; () banked
 16933  010064  3BD1               	swapf	??_MiWiTasks& (0+255),f,b
 16934  010066  47D1               	rlncf	??_MiWiTasks& (0+255),f,b
 16935  010068  0101               	movlb	1	; () banked
 16936  01006A  510C               	movf	_rxMessage& (0+255),w,b
 16937  01006C  0101               	movlb	1	; () banked
 16938  01006E  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 16939  010070  0BDF               	andlw	-33
 16940  010072  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 16941  010074  0101               	movlb	1	; () banked
 16942  010076  6F0C               	movwf	_rxMessage& (0+255),b
 16943                           
 16944                           ; BSR set to: 1
 16945                           ;miwi_mesh.c: 298: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 16946  010078  0101               	movlb	1	; () banked
 16947  01007A  AF16               	btfss	_MACRxPacket& (0+255),7,b
 16948  01007C  D003               	bra	u13705
 16949  01007E  0101               	movlb	1	; () banked
 16950  010080  8D0C               	bsf	_rxMessage& (0+255),6,b
 16951  010082  D002               	bra	u13707
 16952  010084                     u13705:
 16953  010084  0101               	movlb	1	; () banked
 16954  010086  9D0C               	bcf	_rxMessage& (0+255),6,b
 16955  010088                     u13707:
 16956                           
 16957                           ; BSR set to: 1
 16958                           ;miwi_mesh.c: 299: if( MACRxPacket.flags.bits.sourcePrsnt )
 16959  010088  0101               	movlb	1	; () banked
 16960  01008A  AF16               	btfss	_MACRxPacket& (0+255),7,b
 16961  01008C  D006               	goto	l11869
 16962                           
 16963                           ; BSR set to: 1
 16964                           ;miwi_mesh.c: 300: {
 16965                           ;miwi_mesh.c: 304: rxMessage.flags.bits.altSrcAddr = 1;
 16966  01008E  0101               	movlb	1	; () banked
 16967  010090  8F0C               	bsf	_rxMessage& (0+255),7,b
 16968                           
 16969                           ; BSR set to: 1
 16970                           ;miwi_mesh.c: 306: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 16971  010092  C117  F10F         	movff	_MACRxPacket+1,_rxMessage+3
 16972  010096  C118  F110         	movff	_MACRxPacket+2,_rxMessage+4
 16973  01009A                     l11869:
 16974                           
 16975                           ; BSR set to: 1
 16976                           ;miwi_mesh.c: 307: }
 16977                           ;miwi_mesh.c: 311: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 16978  01009A  C11D  F115         	movff	_MACRxPacket+7,_rxMessage+9
 16979                           
 16980                           ; BSR set to: 1
 16981                           ;miwi_mesh.c: 312: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 16982  01009E  C11C  F114         	movff	_MACRxPacket+6,_rxMessage+8
 16983                           
 16984                           ; BSR set to: 1
 16985                           ;miwi_mesh.c: 314: MiWiStateMachine.bits.RxHasUserData = 0;
 16986  0100A2  0101               	movlb	1	; () banked
 16987  0100A4  9538               	bcf	_MiWiStateMachine& (0+255),2,b
 16988                           
 16989                           ;miwi_mesh.c: 317: switch(MACRxPacket.flags.bits.packetType)
 16990  0100A6  EF72  F085         	goto	l12193
 16991  0100AA                     l11875:
 16992                           
 16993                           ; BSR set to: 1
 16994                           ;miwi_mesh.c: 347: if( MACRxPacket.PayloadLen < 10 )
 16995  0100AA  0E0A               	movlw	10
 16996  0100AC  0101               	movlb	1	; () banked
 16997  0100AE  611B               	cpfslt	(_MACRxPacket+5)& (0+255),b
 16998  0100B0  D002               	goto	l11879
 16999  0100B2  EF7F  F085         	goto	l601
 17000  0100B6                     l11879:
 17001                           
 17002                           ; BSR set to: 1
 17003                           ;miwi_mesh.c: 350: }
 17004                           ;miwi_mesh.c: 353: destPANID.v[0] = MACRxPacket.Payload[2];
 17005  0100B6  0101               	movlb	1	; () banked
 17006  0100B8  EE20 F002          	lfsr	2,2
 17007  0100BC  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17008  0100BE  26D9               	addwf	fsr2l,f,c
 17009  0100C0  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17010  0100C2  22DA               	addwfc	fsr2h,f,c
 17011  0100C4  50DF               	movf	indf2,w,c
 17012  0100C6  0101               	movlb	1	; () banked
 17013  0100C8  6FE2               	movwf	MiWiTasks@destPANID& (0+255),b
 17014                           
 17015                           ;miwi_mesh.c: 354: destPANID.v[1] = MACRxPacket.Payload[3];
 17016  0100CA  0101               	movlb	1	; () banked
 17017  0100CC  EE20 F003          	lfsr	2,3
 17018  0100D0  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17019  0100D2  26D9               	addwf	fsr2l,f,c
 17020  0100D4  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17021  0100D6  22DA               	addwfc	fsr2h,f,c
 17022  0100D8  50DF               	movf	indf2,w,c
 17023  0100DA  0101               	movlb	1	; () banked
 17024  0100DC  6FE3               	movwf	(MiWiTasks@destPANID+1)& (0+255),b
 17025                           
 17026                           ;miwi_mesh.c: 355: destShortAddress.v[0] = MACRxPacket.Payload[4];
 17027  0100DE  0101               	movlb	1	; () banked
 17028  0100E0  EE20 F004          	lfsr	2,4
 17029  0100E4  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17030  0100E6  26D9               	addwf	fsr2l,f,c
 17031  0100E8  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17032  0100EA  22DA               	addwfc	fsr2h,f,c
 17033  0100EC  50DF               	movf	indf2,w,c
 17034  0100EE  0101               	movlb	1	; () banked
 17035  0100F0  6FE4               	movwf	MiWiTasks@destShortAddress& (0+255),b
 17036                           
 17037                           ;miwi_mesh.c: 356: destShortAddress.v[1] = MACRxPacket.Payload[5];
 17038  0100F2  0101               	movlb	1	; () banked
 17039  0100F4  EE20 F005          	lfsr	2,5
 17040  0100F8  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17041  0100FA  26D9               	addwf	fsr2l,f,c
 17042  0100FC  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17043  0100FE  22DA               	addwfc	fsr2h,f,c
 17044  010100  50DF               	movf	indf2,w,c
 17045  010102  0101               	movlb	1	; () banked
 17046  010104  6FE5               	movwf	(MiWiTasks@destShortAddress+1)& (0+255),b
 17047                           
 17048                           ;miwi_mesh.c: 357: sourcePANID.v[0] = MACRxPacket.Payload[6];
 17049  010106  0101               	movlb	1	; () banked
 17050  010108  EE20 F006          	lfsr	2,6
 17051  01010C  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17052  01010E  26D9               	addwf	fsr2l,f,c
 17053  010110  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17054  010112  22DA               	addwfc	fsr2h,f,c
 17055  010114  50DF               	movf	indf2,w,c
 17056  010116  0101               	movlb	1	; () banked
 17057  010118  6FE9               	movwf	MiWiTasks@sourcePANID& (0+255),b
 17058                           
 17059                           ;miwi_mesh.c: 358: sourcePANID.v[1] = MACRxPacket.Payload[7];
 17060  01011A  0101               	movlb	1	; () banked
 17061  01011C  EE20 F007          	lfsr	2,7
 17062  010120  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17063  010122  26D9               	addwf	fsr2l,f,c
 17064  010124  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17065  010126  22DA               	addwfc	fsr2h,f,c
 17066  010128  50DF               	movf	indf2,w,c
 17067  01012A  0101               	movlb	1	; () banked
 17068  01012C  6FEA               	movwf	(MiWiTasks@sourcePANID+1)& (0+255),b
 17069                           
 17070                           ;miwi_mesh.c: 359: sourceShortAddress.v[0] = MACRxPacket.Payload[8];
 17071  01012E  0101               	movlb	1	; () banked
 17072  010130  EE20 F008          	lfsr	2,8
 17073  010134  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17074  010136  26D9               	addwf	fsr2l,f,c
 17075  010138  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17076  01013A  22DA               	addwfc	fsr2h,f,c
 17077  01013C  50DF               	movf	indf2,w,c
 17078  01013E  0101               	movlb	1	; () banked
 17079  010140  6FEB               	movwf	MiWiTasks@sourceShortAddress& (0+255),b
 17080                           
 17081                           ;miwi_mesh.c: 360: sourceShortAddress.v[1] = MACRxPacket.Payload[9];
 17082  010142  0101               	movlb	1	; () banked
 17083  010144  EE20 F009          	lfsr	2,9
 17084  010148  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17085  01014A  26D9               	addwf	fsr2l,f,c
 17086  01014C  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17087  01014E  22DA               	addwfc	fsr2h,f,c
 17088  010150  50DF               	movf	indf2,w,c
 17089  010152  0101               	movlb	1	; () banked
 17090  010154  6FEC               	movwf	(MiWiTasks@sourceShortAddress+1)& (0+255),b
 17091                           
 17092                           ; BSR set to: 1
 17093                           ;miwi_mesh.c: 362: rxMessage.flags.Val = 0;
 17094  010156  0E00               	movlw	0
 17095  010158  0101               	movlb	1	; () banked
 17096  01015A  6F0C               	movwf	_rxMessage& (0+255),b
 17097                           
 17098                           ; BSR set to: 1
 17099                           ;miwi_mesh.c: 363: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 17100  01015C  0101               	movlb	1	; () banked
 17101  01015E  A716               	btfss	_MACRxPacket& (0+255),3,b
 17102  010160  D003               	bra	u13735
 17103  010162  0101               	movlb	1	; () banked
 17104  010164  870C               	bsf	_rxMessage& (0+255),3,b
 17105  010166  D002               	bra	u13737
 17106  010168                     u13735:
 17107  010168  0101               	movlb	1	; () banked
 17108  01016A  970C               	bcf	_rxMessage& (0+255),3,b
 17109  01016C                     u13737:
 17110                           
 17111                           ; BSR set to: 1
 17112                           ;miwi_mesh.c: 365: if(rxMessage.flags.bits.broadcast || destShortAddress.Val == 0xFFFF)
 17113  01016C  0101               	movlb	1	; () banked
 17114  01016E  510C               	movf	_rxMessage& (0+255),w,b
 17115  010170  0B03               	andlw	3
 17116  010172  0900               	iorlw	0
 17117  010174  A4D8               	btfss	status,2,c
 17118  010176  D007               	goto	l11889
 17119                           
 17120                           ; BSR set to: 1
 17121  010178  0101               	movlb	1	; () banked
 17122  01017A  29E4               	incf	MiWiTasks@destShortAddress& (0+255),w,b
 17123  01017C  E103               	bnz	u13751
 17124  01017E  0101               	movlb	1	; () banked
 17125  010180  29E5               	incf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 17126  010182  A4D8               	btfss	status,2,c
 17127  010184                     u13751:
 17128  010184  D0D4               	goto	l11943
 17129  010186                     l11889:
 17130                           
 17131                           ; BSR set to: 1
 17132                           ;miwi_mesh.c: 366: {
 17133                           ;miwi_mesh.c: 368: if( sourceShortAddress.Val == myShortAddress.Val &&
 17134                           ;miwi_mesh.c: 369: sourcePANID.Val == myPANID.Val )
 17135  010186  0101               	movlb	1	; () banked
 17136  010188  5185               	movf	_myShortAddress& (0+255),w,b
 17137  01018A  0101               	movlb	1	; () banked
 17138  01018C  19EB               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 17139  01018E  E112               	bnz	l11895
 17140  010190  0101               	movlb	1	; () banked
 17141  010192  5186               	movf	(_myShortAddress+1)& (0+255),w,b
 17142  010194  0101               	movlb	1	; () banked
 17143  010196  19EC               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 17144  010198  A4D8               	btfss	status,2,c
 17145  01019A  D00C               	goto	l11895
 17146                           
 17147                           ; BSR set to: 1
 17148  01019C  0101               	movlb	1	; () banked
 17149  01019E  5183               	movf	_myPANID& (0+255),w,b
 17150  0101A0  0101               	movlb	1	; () banked
 17151  0101A2  19E9               	xorwf	MiWiTasks@sourcePANID& (0+255),w,b
 17152  0101A4  E107               	bnz	l11895
 17153  0101A6  0101               	movlb	1	; () banked
 17154  0101A8  5184               	movf	(_myPANID+1)& (0+255),w,b
 17155  0101AA  0101               	movlb	1	; () banked
 17156  0101AC  19EA               	xorwf	(MiWiTasks@sourcePANID+1)& (0+255),w,b
 17157  0101AE  B4D8               	btfsc	status,2,c
 17158  0101B0  EF7F  F085         	goto	l601
 17159  0101B4                     l11895:
 17160                           
 17161                           ; BSR set to: 1
 17162                           ;miwi_mesh.c: 372: }
 17163                           ;miwi_mesh.c: 420: for(i = 0; i < 4; i++)
 17164  0101B4  0E00               	movlw	0
 17165  0101B6  0101               	movlb	1	; () banked
 17166  0101B8  6FED               	movwf	MiWiTasks@i& (0+255),b
 17167  0101BA                     l11897:
 17168                           
 17169                           ; BSR set to: 1
 17170  0101BA  0E03               	movlw	3
 17171  0101BC  0101               	movlb	1	; () banked
 17172  0101BE  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 17173  0101C0  D001               	goto	l11901
 17174  0101C2  D03D               	goto	l11913
 17175  0101C4                     l11901:
 17176                           
 17177                           ; BSR set to: 1
 17178                           ;miwi_mesh.c: 421: {
 17179                           ;miwi_mesh.c: 422: if( BroadcastRecords[i].RxCounter &&
 17180                           ;miwi_mesh.c: 423: BroadcastRecords[i].AltSourceAddr.Val == sourceShortAddress.Val &&
 17181                           ;miwi_mesh.c: 424: BroadcastRecords[i].MiWiSeq == MACRxPacket.Payload[10] )
 17182  0101C4  0101               	movlb	1	; () banked
 17183  0101C6  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17184  0101C8  0D08               	mullw	8
 17185  0101CA  0E03               	movlw	3
 17186  0101CC  26F3               	addwf	prodl,f,c
 17187  0101CE  0E00               	movlw	0
 17188  0101D0  22F4               	addwfc	prodh,f,c
 17189  0101D2  0E26               	movlw	low _BroadcastRecords
 17190  0101D4  24F3               	addwf	prodl,w,c
 17191  0101D6  6ED9               	movwf	fsr2l,c
 17192  0101D8  0E00               	movlw	high _BroadcastRecords
 17193  0101DA  20F4               	addwfc	prodh,w,c
 17194  0101DC  6EDA               	movwf	fsr2h,c
 17195  0101DE  50DF               	movf	indf2,w,c
 17196  0101E0  B4D8               	btfsc	status,2,c
 17197  0101E2  D02A               	goto	l11909
 17198                           
 17199                           ; BSR set to: 1
 17200  0101E4  0101               	movlb	1	; () banked
 17201  0101E6  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17202  0101E8  0D08               	mullw	8
 17203  0101EA  0E26               	movlw	low _BroadcastRecords
 17204  0101EC  24F3               	addwf	prodl,w,c
 17205  0101EE  6ED9               	movwf	fsr2l,c
 17206  0101F0  0E00               	movlw	high _BroadcastRecords
 17207  0101F2  20F4               	addwfc	prodh,w,c
 17208  0101F4  6EDA               	movwf	fsr2h,c
 17209  0101F6  0101               	movlb	1	; () banked
 17210  0101F8  51EB               	movf	MiWiTasks@sourceShortAddress& (0+255),w,b
 17211  0101FA  18DE               	xorwf	postinc2,w,c
 17212  0101FC  E11D               	bnz	l11909
 17213  0101FE  0101               	movlb	1	; () banked
 17214  010200  51EC               	movf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 17215  010202  18DE               	xorwf	postinc2,w,c
 17216  010204  A4D8               	btfss	status,2,c
 17217  010206  D018               	goto	l11909
 17218                           
 17219                           ; BSR set to: 1
 17220  010208  0101               	movlb	1	; () banked
 17221  01020A  EE20 F00A          	lfsr	2,10
 17222  01020E  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17223  010210  26D9               	addwf	fsr2l,f,c
 17224  010212  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17225  010214  22DA               	addwfc	fsr2h,f,c
 17226  010216  0101               	movlb	1	; () banked
 17227  010218  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17228  01021A  0D08               	mullw	8
 17229  01021C  0E02               	movlw	2
 17230  01021E  26F3               	addwf	prodl,f,c
 17231  010220  0E00               	movlw	0
 17232  010222  22F4               	addwfc	prodh,f,c
 17233  010224  0E26               	movlw	low _BroadcastRecords
 17234  010226  24F3               	addwf	prodl,w,c
 17235  010228  6EE1               	movwf	fsr1l,c
 17236  01022A  0E00               	movlw	high _BroadcastRecords
 17237  01022C  20F4               	addwfc	prodh,w,c
 17238  01022E  6EE2               	movwf	fsr1h,c
 17239  010230  50DE               	movf	postinc2,w,c
 17240  010232  18E6               	xorwf	postinc1,w,c
 17241  010234  B4D8               	btfsc	status,2,c
 17242  010236  D003               	goto	l11913
 17243  010238                     l11909:
 17244                           
 17245                           ; BSR set to: 1
 17246  010238  0101               	movlb	1	; () banked
 17247  01023A  2BED               	incf	MiWiTasks@i& (0+255),f,b
 17248  01023C  D7BE               	goto	l11897
 17249  01023E                     l11913:
 17250                           
 17251                           ; BSR set to: 1
 17252                           ;miwi_mesh.c: 427: }
 17253                           ;miwi_mesh.c: 428: }
 17254                           ;miwi_mesh.c: 431: if( i < 4 )
 17255  01023E  0E04               	movlw	4
 17256  010240  0101               	movlb	1	; () banked
 17257  010242  61ED               	cpfslt	MiWiTasks@i& (0+255),b
 17258  010244  D002               	goto	l11917
 17259  010246  EF7F  F085         	goto	l601
 17260  01024A                     l11917:
 17261                           
 17262                           ; BSR set to: 1
 17263                           ;miwi_mesh.c: 437: }
 17264                           ;miwi_mesh.c: 441: for(i = 0; i < 4; i++)
 17265  01024A  0E00               	movlw	0
 17266  01024C  0101               	movlb	1	; () banked
 17267  01024E  6FED               	movwf	MiWiTasks@i& (0+255),b
 17268  010250                     l11919:
 17269                           
 17270                           ; BSR set to: 1
 17271  010250  0E03               	movlw	3
 17272  010252  0101               	movlb	1	; () banked
 17273  010254  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 17274  010256  D001               	goto	l11923
 17275  010258  D013               	goto	l11931
 17276  01025A                     l11923:
 17277                           
 17278                           ; BSR set to: 1
 17279                           ;miwi_mesh.c: 442: {
 17280                           ;miwi_mesh.c: 443: if( BroadcastRecords[i].RxCounter == 0 )
 17281  01025A  0101               	movlb	1	; () banked
 17282  01025C  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17283  01025E  0D08               	mullw	8
 17284  010260  0E03               	movlw	3
 17285  010262  26F3               	addwf	prodl,f,c
 17286  010264  0E00               	movlw	0
 17287  010266  22F4               	addwfc	prodh,f,c
 17288  010268  0E26               	movlw	low _BroadcastRecords
 17289  01026A  24F3               	addwf	prodl,w,c
 17290  01026C  6ED9               	movwf	fsr2l,c
 17291  01026E  0E00               	movlw	high _BroadcastRecords
 17292  010270  20F4               	addwfc	prodh,w,c
 17293  010272  6EDA               	movwf	fsr2h,c
 17294  010274  50DF               	movf	indf2,w,c
 17295  010276  B4D8               	btfsc	status,2,c
 17296  010278  D003               	goto	l11931
 17297                           
 17298                           ; BSR set to: 1
 17299                           
 17300                           ; BSR set to: 1
 17301                           
 17302                           ; BSR set to: 1
 17303                           ;miwi_mesh.c: 444: {
 17304                           ;miwi_mesh.c: 445: break;
 17305  01027A  0101               	movlb	1	; () banked
 17306  01027C  2BED               	incf	MiWiTasks@i& (0+255),f,b
 17307  01027E  D7E8               	goto	l11919
 17308  010280                     l11931:
 17309                           
 17310                           ; BSR set to: 1
 17311                           ;miwi_mesh.c: 446: }
 17312                           ;miwi_mesh.c: 447: }
 17313                           ;miwi_mesh.c: 449: if( i < 4 )
 17314  010280  0E04               	movlw	4
 17315  010282  0101               	movlb	1	; () banked
 17316  010284  61ED               	cpfslt	MiWiTasks@i& (0+255),b
 17317  010286  D04D               	goto	l11941
 17318                           
 17319                           ; BSR set to: 1
 17320                           ;miwi_mesh.c: 450: {
 17321                           ;miwi_mesh.c: 451: BroadcastRecords[i].AltSourceAddr.Val = sourceShortAddress.Val;
 17322  010288  0101               	movlb	1	; () banked
 17323  01028A  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17324  01028C  0D08               	mullw	8
 17325  01028E  0E26               	movlw	low _BroadcastRecords
 17326  010290  24F3               	addwf	prodl,w,c
 17327  010292  6ED9               	movwf	fsr2l,c
 17328  010294  0E00               	movlw	high _BroadcastRecords
 17329  010296  20F4               	addwfc	prodh,w,c
 17330  010298  6EDA               	movwf	fsr2h,c
 17331  01029A  C1EB  FFDE         	movff	MiWiTasks@sourceShortAddress,postinc2
 17332  01029E  C1EC  FFDD         	movff	MiWiTasks@sourceShortAddress+1,postdec2
 17333                           
 17334                           ; BSR set to: 1
 17335                           ;miwi_mesh.c: 452: BroadcastRecords[i].MiWiSeq = MACRxPacket.Payload[10];
 17336  0102A2  0101               	movlb	1	; () banked
 17337  0102A4  EE20 F00A          	lfsr	2,10
 17338  0102A8  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17339  0102AA  26D9               	addwf	fsr2l,f,c
 17340  0102AC  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17341  0102AE  22DA               	addwfc	fsr2h,f,c
 17342  0102B0  0101               	movlb	1	; () banked
 17343  0102B2  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17344  0102B4  0D08               	mullw	8
 17345  0102B6  0E02               	movlw	2
 17346  0102B8  26F3               	addwf	prodl,f,c
 17347  0102BA  0E00               	movlw	0
 17348  0102BC  22F4               	addwfc	prodh,f,c
 17349  0102BE  0E26               	movlw	low _BroadcastRecords
 17350  0102C0  24F3               	addwf	prodl,w,c
 17351  0102C2  6EE1               	movwf	fsr1l,c
 17352  0102C4  0E00               	movlw	high _BroadcastRecords
 17353  0102C6  20F4               	addwfc	prodh,w,c
 17354  0102C8  6EE2               	movwf	fsr1h,c
 17355  0102CA  CFDF FFE7          	movff	indf2,indf1
 17356                           
 17357                           ; BSR set to: 1
 17358                           ;miwi_mesh.c: 453: BroadcastRecords[i].RxCounter = 2 + 1;
 17359  0102CE  0101               	movlb	1	; () banked
 17360  0102D0  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17361  0102D2  0D08               	mullw	8
 17362  0102D4  0E03               	movlw	3
 17363  0102D6  26F3               	addwf	prodl,f,c
 17364  0102D8  0E00               	movlw	0
 17365  0102DA  22F4               	addwfc	prodh,f,c
 17366  0102DC  0E26               	movlw	low _BroadcastRecords
 17367  0102DE  24F3               	addwf	prodl,w,c
 17368  0102E0  6ED9               	movwf	fsr2l,c
 17369  0102E2  0E00               	movlw	high _BroadcastRecords
 17370  0102E4  20F4               	addwfc	prodh,w,c
 17371  0102E6  6EDA               	movwf	fsr2h,c
 17372  0102E8  0E03               	movlw	3
 17373  0102EA  6EDF               	movwf	indf2,c
 17374                           
 17375                           ; BSR set to: 1
 17376                           ;miwi_mesh.c: 455: BroadcastRecords[i].StartTick = MiWi_TickGet();
 17377  0102EC  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 17378  0102F0  0101               	movlb	1	; () banked
 17379  0102F2  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17380  0102F4  0D08               	mullw	8
 17381  0102F6  0E04               	movlw	4
 17382  0102F8  26F3               	addwf	prodl,f,c
 17383  0102FA  0E00               	movlw	0
 17384  0102FC  22F4               	addwfc	prodh,f,c
 17385  0102FE  0E26               	movlw	low _BroadcastRecords
 17386  010300  24F3               	addwf	prodl,w,c
 17387  010302  6ED9               	movwf	fsr2l,c
 17388  010304  0E00               	movlw	high _BroadcastRecords
 17389  010306  20F4               	addwfc	prodh,w,c
 17390  010308  6EDA               	movwf	fsr2h,c
 17391  01030A  0101               	movlb	1	; () banked
 17392  01030C  C18A  FFDE         	movff	?_MiWi_TickGet,postinc2
 17393  010310  0101               	movlb	1	; () banked
 17394  010312  C18B  FFDE         	movff	?_MiWi_TickGet+1,postinc2
 17395  010316  0101               	movlb	1	; () banked
 17396  010318  C18C  FFDE         	movff	?_MiWi_TickGet+2,postinc2
 17397  01031C  0101               	movlb	1	; () banked
 17398  01031E  C18D  FFDE         	movff	?_MiWi_TickGet+3,postinc2
 17399  010322                     l11941:
 17400                           
 17401                           ; BSR set to: 1
 17402                           ;miwi_mesh.c: 457: }
 17403                           ;miwi_mesh.c: 459: rxMessage.flags.bits.broadcast = 1;
 17404  010322  0101               	movlb	1	; () banked
 17405  010324  510C               	movf	_rxMessage& (0+255),w,b
 17406  010326  0BFC               	andlw	-4
 17407  010328  0901               	iorlw	1
 17408  01032A  6F0C               	movwf	_rxMessage& (0+255),b
 17409                           
 17410                           ;miwi_mesh.c: 460: goto ThisPacketIsForMe;
 17411  01032C  D06E               	goto	l11987
 17412  01032E                     l11943:
 17413                           
 17414                           ; BSR set to: 1
 17415                           ;miwi_mesh.c: 461: }
 17416                           ;miwi_mesh.c: 464: if((destPANID.Val == myPANID.Val) && (destShortAddress.Val == myShort
      +                          Address.Val))
 17417  01032E  0101               	movlb	1	; () banked
 17418  010330  5183               	movf	_myPANID& (0+255),w,b
 17419  010332  0101               	movlb	1	; () banked
 17420  010334  19E2               	xorwf	MiWiTasks@destPANID& (0+255),w,b
 17421  010336  E105               	bnz	u13881
 17422  010338  0101               	movlb	1	; () banked
 17423  01033A  5184               	movf	(_myPANID+1)& (0+255),w,b
 17424  01033C  0101               	movlb	1	; () banked
 17425  01033E  19E3               	xorwf	(MiWiTasks@destPANID+1)& (0+255),w,b
 17426  010340  A4D8               	btfss	status,2,c
 17427  010342                     u13881:
 17428  010342  D3DD               	goto	l601
 17429                           
 17430                           ; BSR set to: 1
 17431  010344  0101               	movlb	1	; () banked
 17432  010346  5185               	movf	_myShortAddress& (0+255),w,b
 17433  010348  0101               	movlb	1	; () banked
 17434  01034A  19E4               	xorwf	MiWiTasks@destShortAddress& (0+255),w,b
 17435  01034C  E105               	bnz	u13891
 17436  01034E  0101               	movlb	1	; () banked
 17437  010350  5186               	movf	(_myShortAddress+1)& (0+255),w,b
 17438  010352  0101               	movlb	1	; () banked
 17439  010354  19E5               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 17440  010356  A4D8               	btfss	status,2,c
 17441  010358                     u13891:
 17442  010358  D3D2               	goto	l601
 17443                           
 17444                           ; BSR set to: 1
 17445                           ;miwi_mesh.c: 465: {
 17446                           ;miwi_mesh.c: 467: if(MACRxPacket.Payload[1] & 0x04)
 17447  01035A  0101               	movlb	1	; () banked
 17448  01035C  EE20 F001          	lfsr	2,1
 17449  010360  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17450  010362  26D9               	addwf	fsr2l,f,c
 17451  010364  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17452  010366  22DA               	addwfc	fsr2h,f,c
 17453  010368  0101               	movlb	1	; () banked
 17454  01036A  A4DF               	btfss	indf2,2,c
 17455  01036C  D04E               	goto	l11987
 17456                           
 17457                           ; BSR set to: 1
 17458                           ;miwi_mesh.c: 468: {
 17459                           ;miwi_mesh.c: 469: TxBuffer[0] = defaultHops;
 17460  01036E  C1FE  F14E         	movff	_defaultHops,_TxBuffer
 17461                           
 17462                           ; BSR set to: 1
 17463                           ;miwi_mesh.c: 470: TxBuffer[1] = 0x02;
 17464  010372  0E02               	movlw	2
 17465  010374  0101               	movlb	1	; () banked
 17466  010376  6F4F               	movwf	(_TxBuffer+1)& (0+255),b
 17467                           
 17468                           ; BSR set to: 1
 17469                           ;miwi_mesh.c: 471: TxBuffer[2] = sourcePANID.v[0];
 17470  010378  C1E9  F150         	movff	MiWiTasks@sourcePANID,_TxBuffer+2
 17471                           
 17472                           ; BSR set to: 1
 17473                           ;miwi_mesh.c: 472: TxBuffer[3] = sourcePANID.v[1];
 17474  01037C  C1EA  F151         	movff	MiWiTasks@sourcePANID+1,_TxBuffer+3
 17475                           
 17476                           ; BSR set to: 1
 17477                           ;miwi_mesh.c: 473: TxBuffer[4] = sourceShortAddress.v[0];
 17478  010380  C1EB  F152         	movff	MiWiTasks@sourceShortAddress,_TxBuffer+4
 17479                           
 17480                           ; BSR set to: 1
 17481                           ;miwi_mesh.c: 474: TxBuffer[5] = sourceShortAddress.v[1];
 17482  010384  C1EC  F153         	movff	MiWiTasks@sourceShortAddress+1,_TxBuffer+5
 17483                           
 17484                           ; BSR set to: 1
 17485                           ;miwi_mesh.c: 475: TxBuffer[6] = myPANID.v[0];
 17486  010388  C183  F154         	movff	_myPANID,_TxBuffer+6
 17487                           
 17488                           ; BSR set to: 1
 17489                           ;miwi_mesh.c: 476: TxBuffer[7] = myPANID.v[1];
 17490  01038C  C184  F155         	movff	_myPANID+1,_TxBuffer+7
 17491                           
 17492                           ; BSR set to: 1
 17493                           ;miwi_mesh.c: 477: TxBuffer[8] = myShortAddress.v[0];
 17494  010390  C185  F156         	movff	_myShortAddress,_TxBuffer+8
 17495                           
 17496                           ; BSR set to: 1
 17497                           ;miwi_mesh.c: 478: TxBuffer[9] = myShortAddress.v[1];
 17498  010394  C186  F157         	movff	_myShortAddress+1,_TxBuffer+9
 17499                           
 17500                           ; BSR set to: 1
 17501                           ;miwi_mesh.c: 479: TxBuffer[10] = MACRxPacket.Payload[11-1];
 17502  010398  0101               	movlb	1	; () banked
 17503  01039A  EE20 F00A          	lfsr	2,10
 17504  01039E  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17505  0103A0  26D9               	addwf	fsr2l,f,c
 17506  0103A2  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17507  0103A4  22DA               	addwfc	fsr2h,f,c
 17508  0103A6  50DF               	movf	indf2,w,c
 17509  0103A8  0101               	movlb	1	; () banked
 17510  0103AA  6F58               	movwf	(_TxBuffer+10)& (0+255),b
 17511                           
 17512                           ; BSR set to: 1
 17513                           ;miwi_mesh.c: 480: TxBuffer[11] = 0x00;
 17514  0103AC  0E00               	movlw	0
 17515  0103AE  0101               	movlb	1	; () banked
 17516  0103B0  6F59               	movwf	(_TxBuffer+11)& (0+255),b
 17517                           
 17518                           ; BSR set to: 1
 17519                           ;miwi_mesh.c: 481: TxBuffer[12] = 0x30;
 17520  0103B2  0E30               	movlw	48
 17521  0103B4  0101               	movlb	1	; () banked
 17522  0103B6  6F5A               	movwf	(_TxBuffer+12)& (0+255),b
 17523                           
 17524                           ; BSR set to: 1
 17525                           ;miwi_mesh.c: 482: TxData = 13;
 17526  0103B8  0E0D               	movlw	13
 17527  0103BA  0101               	movlb	1	; () banked
 17528  0103BC  6F46               	movwf	_TxData& (0+255),b
 17529                           
 17530                           ; BSR set to: 1
 17531                           ;miwi_mesh.c: 512: MTP.flags.Val = 0;
 17532  0103BE  0E00               	movlw	0
 17533  0103C0  0101               	movlb	1	; () banked
 17534  0103C2  6F2A               	movwf	_MTP& (0+255),b
 17535                           
 17536                           ; BSR set to: 1
 17537                           ;miwi_mesh.c: 513: MTP.flags.bits.ackReq = 1;
 17538  0103C4  0101               	movlb	1	; () banked
 17539  0103C6  8B2A               	bsf	_MTP& (0+255),5,b
 17540                           
 17541                           ; BSR set to: 1
 17542                           ;miwi_mesh.c: 521: MTP.DestAddress = ConnectionTable[myParent].Address;
 17543  0103C8  0101               	movlb	1	; () banked
 17544  0103CA  514C               	movf	_myParent& (0+255),w,b
 17545  0103CC  0D09               	mullw	9
 17546  0103CE  0E04               	movlw	4
 17547  0103D0  26F3               	addwf	prodl,f,c
 17548  0103D2  0E00               	movlw	0
 17549  0103D4  22F4               	addwfc	prodh,f,c
 17550  0103D6  0E46               	movlw	low _ConnectionTable
 17551  0103D8  24F3               	addwf	prodl,w,c
 17552  0103DA  0101               	movlb	1	; () banked
 17553  0103DC  6F2B               	movwf	(_MTP+1)& (0+255),b
 17554  0103DE  0E02               	movlw	high _ConnectionTable
 17555  0103E0  20F4               	addwfc	prodh,w,c
 17556  0103E2  0101               	movlb	1	; () banked
 17557  0103E4  6F2C               	movwf	(_MTP+2)& (0+255),b
 17558                           
 17559                           ; BSR set to: 1
 17560                           ;miwi_mesh.c: 524: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 17561  0103E6  C12A  F1B9         	movff	_MTP,MiMAC_SendPacket@transParam
 17562  0103EA  C12B  F1BA         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 17563  0103EE  C12C  F1BB         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 17564  0103F2  0E4E               	movlw	low _TxBuffer
 17565  0103F4  0101               	movlb	1	; () banked
 17566  0103F6  6FBC               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 17567  0103F8  0E01               	movlw	high _TxBuffer
 17568  0103FA  0101               	movlb	1	; () banked
 17569  0103FC  6FBD               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 17570  0103FE  C146  F1BE         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 17571  010402  ECC9  F09A         	call	_MiMAC_SendPacket	;wreg free
 17572                           
 17573                           ;miwi_mesh.c: 526: rxMessage.flags.bits.ackReq = 1;
 17574  010406  0101               	movlb	1	; () banked
 17575  010408  850C               	bsf	_rxMessage& (0+255),2,b
 17576  01040A                     l11987:
 17577                           
 17578                           ; BSR set to: 1
 17579                           ;miwi_mesh.c: 531: if(MACRxPacket.Payload[11] == 0x00)
 17580  01040A  0101               	movlb	1	; () banked
 17581  01040C  EE20 F00B          	lfsr	2,11
 17582  010410  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17583  010412  26D9               	addwf	fsr2l,f,c
 17584  010414  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17585  010416  22DA               	addwfc	fsr2h,f,c
 17586  010418  50DF               	movf	indf2,w,c
 17587  01041A  A4D8               	btfss	status,2,c
 17588  01041C  D0B8               	goto	l12047
 17589                           
 17590                           ; BSR set to: 1
 17591                           ;miwi_mesh.c: 532: {
 17592                           ;miwi_mesh.c: 533: if( MACRxPacket.Payload[11+1] != 0x30)
 17593  01041E  0101               	movlb	1	; () banked
 17594  010420  EE20 F00C          	lfsr	2,12
 17595  010424  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17596  010426  26D9               	addwf	fsr2l,f,c
 17597  010428  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17598  01042A  22DA               	addwfc	fsr2h,f,c
 17599  01042C  0E30               	movlw	48
 17600  01042E  18DE               	xorwf	postinc2,w,c
 17601  010430  A4D8               	btfss	status,2,c
 17602  010432  D087               	goto	l12039
 17603  010434  D092               	goto	l12041
 17604  010436                     l11993:
 17605                           
 17606                           ; BSR set to: 1
 17607                           ;miwi_mesh.c: 826: {
 17608                           ;miwi_mesh.c: 827: uint8_t j;
 17609                           ;miwi_mesh.c: 830: for(j=0;j<4;j++)
 17610  010436  0E00               	movlw	0
 17611  010438  0101               	movlb	1	; () banked
 17612  01043A  6FE8               	movwf	MiWiTasks@j& (0+255),b
 17613  01043C                     l11995:
 17614                           
 17615                           ; BSR set to: 1
 17616  01043C  0E03               	movlw	3
 17617  01043E  0101               	movlb	1	; () banked
 17618  010440  65E8               	cpfsgt	MiWiTasks@j& (0+255),b
 17619  010442  D001               	goto	l11999
 17620  010444  D022               	goto	l12005
 17621  010446                     l11999:
 17622                           
 17623                           ; BSR set to: 1
 17624                           ;miwi_mesh.c: 831: {
 17625                           ;miwi_mesh.c: 832: tempLongAddress[j] = MACRxPacket.Payload[j+13];
 17626  010446  0101               	movlb	1	; () banked
 17627  010448  51E8               	movf	MiWiTasks@j& (0+255),w,b
 17628  01044A  0101               	movlb	1	; () banked
 17629  01044C  6FD1               	movwf	??_MiWiTasks& (0+255),b
 17630  01044E  6BD2               	clrf	(??_MiWiTasks+1)& (0+255),b
 17631  010450  0E0D               	movlw	13
 17632  010452  0101               	movlb	1	; () banked
 17633  010454  27D1               	addwf	??_MiWiTasks& (0+255),f,b
 17634  010456  0E00               	movlw	0
 17635  010458  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17636  01045A  0101               	movlb	1	; () banked
 17637  01045C  51D1               	movf	??_MiWiTasks& (0+255),w,b
 17638  01045E  0101               	movlb	1	; () banked
 17639  010460  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17640  010462  6ED9               	movwf	fsr2l,c
 17641  010464  0101               	movlb	1	; () banked
 17642  010466  51D2               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17643  010468  0101               	movlb	1	; () banked
 17644  01046A  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17645  01046C  6EDA               	movwf	fsr2h,c
 17646  01046E  0101               	movlb	1	; () banked
 17647  010470  51E8               	movf	MiWiTasks@j& (0+255),w,b
 17648  010472  0D01               	mullw	1
 17649  010474  0E26               	movlw	low _tempLongAddress
 17650  010476  24F3               	addwf	prodl,w,c
 17651  010478  6EE1               	movwf	fsr1l,c
 17652  01047A  0E01               	movlw	high _tempLongAddress
 17653  01047C  20F4               	addwfc	prodh,w,c
 17654  01047E  6EE2               	movwf	fsr1h,c
 17655  010480  CFDF FFE7          	movff	indf2,indf1
 17656                           
 17657                           ; BSR set to: 1
 17658  010484  0101               	movlb	1	; () banked
 17659  010486  2BE8               	incf	MiWiTasks@j& (0+255),f,b
 17660  010488  D7D9               	goto	l11995
 17661  01048A                     l12005:
 17662                           
 17663                           ; BSR set to: 1
 17664                           ;miwi_mesh.c: 833: }
 17665                           ;miwi_mesh.c: 836: tempNodeStatus.Val = 0x8D;
 17666  01048A  0E8D               	movlw	141
 17667  01048C  0100               	movlb	0	; () banked
 17668  01048E  6FBD               	movwf	_tempNodeStatus& (0+255),b
 17669                           
 17670                           ; BSR set to: 0
 17671                           ;miwi_mesh.c: 838: if(MACRxPacket.Payload[13+4] & 0x80)
 17672  010490  0101               	movlb	1	; () banked
 17673  010492  EE20 F011          	lfsr	2,17
 17674  010496  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17675  010498  26D9               	addwf	fsr2l,f,c
 17676  01049A  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17677  01049C  22DA               	addwfc	fsr2h,f,c
 17678  01049E  0101               	movlb	1	; () banked
 17679  0104A0  AEDF               	btfss	indf2,7,c
 17680  0104A2  D002               	goto	l12011
 17681                           
 17682                           ; BSR set to: 1
 17683                           ;miwi_mesh.c: 839: {
 17684                           ;miwi_mesh.c: 840: tempNodeStatus.bits.RXOnWhenIdle = 0;
 17685  0104A4  0100               	movlb	0	; () banked
 17686  0104A6  91BD               	bcf	_tempNodeStatus& (0+255),0,b
 17687  0104A8                     l12011:
 17688                           
 17689                           ;miwi_mesh.c: 841: }
 17690                           ;miwi_mesh.c: 844: tempShortAddress.v[0] = MACRxPacket.Payload[4+13];
 17691  0104A8  0101               	movlb	1	; () banked
 17692  0104AA  EE20 F011          	lfsr	2,17
 17693  0104AE  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17694  0104B0  26D9               	addwf	fsr2l,f,c
 17695  0104B2  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17696  0104B4  22DA               	addwfc	fsr2h,f,c
 17697  0104B6  50DF               	movf	indf2,w,c
 17698  0104B8  0101               	movlb	1	; () banked
 17699  0104BA  6F87               	movwf	_tempShortAddress& (0+255),b
 17700                           
 17701                           ;miwi_mesh.c: 845: tempShortAddress.v[1] = MACRxPacket.Payload[4+14];
 17702  0104BC  0101               	movlb	1	; () banked
 17703  0104BE  EE20 F012          	lfsr	2,18
 17704  0104C2  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17705  0104C4  26D9               	addwf	fsr2l,f,c
 17706  0104C6  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17707  0104C8  22DA               	addwfc	fsr2h,f,c
 17708  0104CA  50DF               	movf	indf2,w,c
 17709  0104CC  0101               	movlb	1	; () banked
 17710  0104CE  6F88               	movwf	(_tempShortAddress+1)& (0+255),b
 17711                           
 17712                           ; BSR set to: 1
 17713                           ;miwi_mesh.c: 848: tempPANID.Val = myPANID.Val;
 17714  0104D0  C183  F13C         	movff	_myPANID,_tempPANID
 17715  0104D4  C184  F13D         	movff	_myPANID+1,_tempPANID+1
 17716                           
 17717                           ; BSR set to: 1
 17718                           ;miwi_mesh.c: 851: openSocketInfo.socketHandle = SearchForShortAddress();
 17719  0104D8  ECA1  F0B2         	call	_SearchForShortAddress	;wreg free
 17720  0104DC  0101               	movlb	1	; () banked
 17721  0104DE  6F01               	movwf	(_openSocketInfo+1)& (0+255),b
 17722                           
 17723                           ; BSR set to: 1
 17724                           ;miwi_mesh.c: 853: if(openSocketInfo.socketHandle != 0xFF)
 17725  0104E0  0101               	movlb	1	; () banked
 17726  0104E2  2901               	incf	(_openSocketInfo+1)& (0+255),w,b
 17727  0104E4  B4D8               	btfsc	status,2,c
 17728  0104E6  D015               	goto	l12025
 17729                           
 17730                           ; BSR set to: 1
 17731                           ;miwi_mesh.c: 854: {
 17732                           ;miwi_mesh.c: 856: tempNodeStatus.Val = ConnectionTable[openSocketInfo.socketHandle].sta
      +                          tus.Val;
 17733  0104E8  0101               	movlb	1	; () banked
 17734  0104EA  5101               	movf	(_openSocketInfo+1)& (0+255),w,b
 17735  0104EC  0D09               	mullw	9
 17736  0104EE  0E08               	movlw	8
 17737  0104F0  26F3               	addwf	prodl,f,c
 17738  0104F2  0E00               	movlw	0
 17739  0104F4  22F4               	addwfc	prodh,f,c
 17740  0104F6  0E46               	movlw	low _ConnectionTable
 17741  0104F8  24F3               	addwf	prodl,w,c
 17742  0104FA  6ED9               	movwf	fsr2l,c
 17743  0104FC  0E02               	movlw	high _ConnectionTable
 17744  0104FE  20F4               	addwfc	prodh,w,c
 17745  010500  6EDA               	movwf	fsr2h,c
 17746  010502  50DF               	movf	indf2,w,c
 17747  010504  0100               	movlb	0	; () banked
 17748  010506  6FBD               	movwf	_tempNodeStatus& (0+255),b
 17749                           
 17750                           ; BSR set to: 0
 17751                           ;miwi_mesh.c: 857: tempNodeStatus.bits.longAddressValid = 1;
 17752  010508  0100               	movlb	0	; () banked
 17753  01050A  85BD               	bsf	_tempNodeStatus& (0+255),2,b
 17754                           
 17755                           ; BSR set to: 0
 17756                           ;miwi_mesh.c: 858: tempNodeStatus.bits.shortAddressValid = 1;
 17757  01050C  0100               	movlb	0	; () banked
 17758  01050E  87BD               	bsf	_tempNodeStatus& (0+255),3,b
 17759                           
 17760                           ;miwi_mesh.c: 859: }
 17761  010510  D008               	goto	l12031
 17762  010512                     l12025:
 17763                           
 17764                           ;miwi_mesh.c: 860: else
 17765                           ;miwi_mesh.c: 861: {
 17766                           ;miwi_mesh.c: 863: tempNodeStatus.Val = 0x8D;
 17767  010512  0E8D               	movlw	141
 17768  010514  0100               	movlb	0	; () banked
 17769  010516  6FBD               	movwf	_tempNodeStatus& (0+255),b
 17770                           
 17771                           ; BSR set to: 0
 17772                           ;miwi_mesh.c: 864: if(tempShortAddress.v[0] & 0x80)
 17773  010518  0101               	movlb	1	; () banked
 17774  01051A  AF87               	btfss	_tempShortAddress& (0+255),7,b
 17775  01051C  D002               	goto	l12031
 17776                           
 17777                           ; BSR set to: 1
 17778                           ;miwi_mesh.c: 865: {
 17779                           ;miwi_mesh.c: 866: tempNodeStatus.bits.RXOnWhenIdle = 0;
 17780  01051E  0100               	movlb	0	; () banked
 17781  010520  91BD               	bcf	_tempNodeStatus& (0+255),0,b
 17782  010522                     l12031:
 17783                           
 17784                           ;miwi_mesh.c: 867: }
 17785                           ;miwi_mesh.c: 868: }
 17786                           ;miwi_mesh.c: 870: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 17787  010522  EC46  F0A9         	call	_AddNodeToNetworkTable	;wreg free
 17788  010526  0101               	movlb	1	; () banked
 17789  010528  6F01               	movwf	(_openSocketInfo+1)& (0+255),b
 17790                           
 17791                           ; BSR set to: 1
 17792                           ;miwi_mesh.c: 871: if( openSocketInfo.socketHandle < 0xFF )
 17793  01052A  0101               	movlb	1	; () banked
 17794  01052C  2901               	incf	(_openSocketInfo+1)& (0+255),w,b
 17795  01052E  B4D8               	btfsc	status,2,c
 17796  010530  D003               	goto	l627
 17797                           
 17798                           ; BSR set to: 1
 17799                           ;miwi_mesh.c: 872: {
 17800                           ;miwi_mesh.c: 882: openSocketInfo.status.bits.matchFound = 1;
 17801  010532  0101               	movlb	1	; () banked
 17802  010534  8100               	bsf	_openSocketInfo& (0+255),0,b
 17803                           
 17804                           ;miwi_mesh.c: 883: }
 17805  010536  D002               	goto	l628
 17806  010538                     l627:
 17807                           
 17808                           ; BSR set to: 1
 17809                           ;miwi_mesh.c: 884: else
 17810                           ;miwi_mesh.c: 885: {
 17811                           ;miwi_mesh.c: 886: openSocketInfo.status.bits.matchFound = 0;
 17812  010538  0101               	movlb	1	; () banked
 17813  01053A  9100               	bcf	_openSocketInfo& (0+255),0,b
 17814  01053C                     l628:
 17815                           
 17816                           ; BSR set to: 1
 17817                           ;miwi_mesh.c: 887: }
 17818                           ;miwi_mesh.c: 890: openSocketInfo.status.bits.requestIsOpen = 0;
 17819  01053C  0101               	movlb	1	; () banked
 17820  01053E  9300               	bcf	_openSocketInfo& (0+255),1,b
 17821                           
 17822                           ; BSR set to: 1
 17823                           ;miwi_mesh.c: 968: }
 17824                           
 17825                           ; BSR set to: 1
 17826                           ;miwi_mesh.c: 967: break;
 17827                           
 17828                           ;miwi_mesh.c: 964: default:
 17829                           
 17830                           ;miwi_mesh.c: 892: }
 17831                           ;miwi_mesh.c: 893: break;
 17832  010540  D2DE               	goto	l601
 17833  010542                     l12039:
 17834                           
 17835                           ; BSR set to: 1
 17836  010542  0101               	movlb	1	; () banked
 17837  010544  EE20 F00C          	lfsr	2,12
 17838  010548  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17839  01054A  26D9               	addwf	fsr2l,f,c
 17840  01054C  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17841  01054E  22DA               	addwfc	fsr2h,f,c
 17842  010550  50DF               	movf	indf2,w,c
 17843                           
 17844                           ; Switch size 1, requested type "space"
 17845                           ; Number of cases is 1, Range of values is 17 to 17
 17846                           ; switch strategies available:
 17847                           ; Name         Instructions Cycles
 17848                           ; simple_byte            4     3 (average)
 17849                           ;	Chosen strategy is simple_byte
 17850  010552  0A11               	xorlw	17	; case 17
 17851  010554  B4D8               	btfsc	status,2,c
 17852  010556  D76F               	goto	l11993
 17853                           
 17854                           ; BSR set to: 1
 17855                           ;miwi_mesh.c: 969: }
 17856  010558  D2D2               	goto	l601
 17857  01055A                     l12041:
 17858                           
 17859                           ; BSR set to: 1
 17860                           ;miwi_mesh.c: 970: else
 17861                           ;miwi_mesh.c: 971: {
 17862                           ;miwi_mesh.c: 973: if( AcknowledgementSeq == MACRxPacket.Payload[11-1] &&
 17863                           ;miwi_mesh.c: 974: sourceShortAddress.Val == AcknowledgementAddr.Val)
 17864  01055A  0101               	movlb	1	; () banked
 17865  01055C  EE20 F00A          	lfsr	2,10
 17866  010560  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17867  010562  26D9               	addwf	fsr2l,f,c
 17868  010564  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17869  010566  22DA               	addwfc	fsr2h,f,c
 17870  010568  0101               	movlb	1	; () banked
 17871  01056A  51FD               	movf	_AcknowledgementSeq& (0+255),w,b
 17872  01056C  18DE               	xorwf	postinc2,w,c
 17873  01056E  A4D8               	btfss	status,2,c
 17874  010570  D2C6               	goto	l601
 17875                           
 17876                           ; BSR set to: 1
 17877  010572  0101               	movlb	1	; () banked
 17878  010574  5136               	movf	_AcknowledgementAddr& (0+255),w,b
 17879  010576  0101               	movlb	1	; () banked
 17880  010578  19EB               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 17881  01057A  E105               	bnz	u14001
 17882  01057C  0101               	movlb	1	; () banked
 17883  01057E  5137               	movf	(_AcknowledgementAddr+1)& (0+255),w,b
 17884  010580  0101               	movlb	1	; () banked
 17885  010582  19EC               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 17886  010584  A4D8               	btfss	status,2,c
 17887  010586                     u14001:
 17888  010586  D2BB               	goto	l601
 17889                           
 17890                           ; BSR set to: 1
 17891                           ;miwi_mesh.c: 975: {
 17892                           ;miwi_mesh.c: 976: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 17893  010588  0101               	movlb	1	; () banked
 17894  01058A  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 17895                           
 17896                           ; BSR set to: 1
 17897                           ;miwi_mesh.c: 980: }
 17898                           ;miwi_mesh.c: 981: }
 17899                           
 17900                           ; BSR set to: 1
 17901                           ;miwi_mesh.c: 977: }
 17902                           ;miwi_mesh.c: 979: break;
 17903  01058C  D2B8               	goto	l601
 17904  01058E                     l12047:
 17905                           
 17906                           ; BSR set to: 1
 17907                           ;miwi_mesh.c: 982: else
 17908                           ;miwi_mesh.c: 983: {
 17909                           ;miwi_mesh.c: 988: rxMessage.PayloadSize = MACRxPacket.PayloadLen - 11;
 17910  01058E  0101               	movlb	1	; () banked
 17911  010590  511B               	movf	(_MACRxPacket+5)& (0+255),w,b
 17912  010592  0FF5               	addlw	245
 17913  010594  0101               	movlb	1	; () banked
 17914  010596  6F13               	movwf	(_rxMessage+7)& (0+255),b
 17915                           
 17916                           ;miwi_mesh.c: 989: rxMessage.Payload = &MACRxPacket.Payload[11];
 17917  010598  0E0B               	movlw	11
 17918  01059A  0101               	movlb	1	; () banked
 17919  01059C  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17920  01059E  0101               	movlb	1	; () banked
 17921  0105A0  6F11               	movwf	(_rxMessage+5)& (0+255),b
 17922  0105A2  0E00               	movlw	0
 17923  0105A4  0101               	movlb	1	; () banked
 17924  0105A6  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17925  0105A8  0101               	movlb	1	; () banked
 17926  0105AA  6F12               	movwf	(_rxMessage+6)& (0+255),b
 17927                           
 17928                           ; BSR set to: 1
 17929                           ;miwi_mesh.c: 990: rxMessage.SourcePANID.Val = sourcePANID.Val;
 17930  0105AC  C1E9  F10D         	movff	MiWiTasks@sourcePANID,_rxMessage+1
 17931  0105B0  C1EA  F10E         	movff	MiWiTasks@sourcePANID+1,_rxMessage+2
 17932                           
 17933                           ; BSR set to: 1
 17934                           ;miwi_mesh.c: 991: if( MACRxPacket.Payload[8] == 0xFF && MACRxPacket.Payload[9] == 0xFF 
      +                          )
 17935  0105B4  0101               	movlb	1	; () banked
 17936  0105B6  EE20 F008          	lfsr	2,8
 17937  0105BA  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17938  0105BC  26D9               	addwf	fsr2l,f,c
 17939  0105BE  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17940  0105C0  22DA               	addwfc	fsr2h,f,c
 17941  0105C2  28DE               	incf	postinc2,w,c
 17942  0105C4  A4D8               	btfss	status,2,c
 17943  0105C6  D012               	goto	l634
 17944                           
 17945                           ; BSR set to: 1
 17946  0105C8  0101               	movlb	1	; () banked
 17947  0105CA  EE20 F009          	lfsr	2,9
 17948  0105CE  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17949  0105D0  26D9               	addwf	fsr2l,f,c
 17950  0105D2  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17951  0105D4  22DA               	addwfc	fsr2h,f,c
 17952  0105D6  28DE               	incf	postinc2,w,c
 17953  0105D8  A4D8               	btfss	status,2,c
 17954  0105DA  D008               	goto	l634
 17955                           
 17956                           ; BSR set to: 1
 17957                           ;miwi_mesh.c: 992: {
 17958                           ;miwi_mesh.c: 997: if( MACRxPacket.flags.bits.sourcePrsnt )
 17959  0105DC  0101               	movlb	1	; () banked
 17960  0105DE  AF16               	btfss	_MACRxPacket& (0+255),7,b
 17961  0105E0  D005               	goto	l634
 17962                           
 17963                           ; BSR set to: 1
 17964                           ;miwi_mesh.c: 998: {
 17965                           ;miwi_mesh.c: 999: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 17966  0105E2  C117  F10F         	movff	_MACRxPacket+1,_rxMessage+3
 17967  0105E6  C118  F110         	movff	_MACRxPacket+2,_rxMessage+4
 17968                           
 17969                           ;miwi_mesh.c: 1000: }
 17970  0105EA  D00C               	goto	l12063
 17971  0105EC                     l634:
 17972                           
 17973                           ; BSR set to: 1
 17974                           ;miwi_mesh.c: 1009: else
 17975                           ;miwi_mesh.c: 1010: {
 17976                           ;miwi_mesh.c: 1011: rxMessage.flags.bits.altSrcAddr = 1;
 17977  0105EC  0101               	movlb	1	; () banked
 17978  0105EE  8F0C               	bsf	_rxMessage& (0+255),7,b
 17979                           
 17980                           ; BSR set to: 1
 17981                           ;miwi_mesh.c: 1012: rxMessage.SourceAddress = &(MACRxPacket.Payload[8]);
 17982  0105F0  0E08               	movlw	8
 17983  0105F2  0101               	movlb	1	; () banked
 17984  0105F4  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17985  0105F6  0101               	movlb	1	; () banked
 17986  0105F8  6F0F               	movwf	(_rxMessage+3)& (0+255),b
 17987  0105FA  0E00               	movlw	0
 17988  0105FC  0101               	movlb	1	; () banked
 17989  0105FE  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17990  010600  0101               	movlb	1	; () banked
 17991  010602  6F10               	movwf	(_rxMessage+4)& (0+255),b
 17992  010604                     l12063:
 17993                           
 17994                           ; BSR set to: 1
 17995                           ;miwi_mesh.c: 1013: }
 17996                           ;miwi_mesh.c: 1014: rxMessage.flags.bits.srcPrsnt = 1;
 17997  010604  0101               	movlb	1	; () banked
 17998  010606  8D0C               	bsf	_rxMessage& (0+255),6,b
 17999                           
 18000                           ; BSR set to: 1
 18001                           ;miwi_mesh.c: 1016: if( rxMessage.PayloadSize > 0 )
 18002  010608  0101               	movlb	1	; () banked
 18003  01060A  5113               	movf	(_rxMessage+7)& (0+255),w,b
 18004  01060C  B4D8               	btfsc	status,2,c
 18005  01060E  D277               	goto	l601
 18006                           
 18007                           ; BSR set to: 1
 18008                           ;miwi_mesh.c: 1017: {
 18009                           ;miwi_mesh.c: 1018: MiWiStateMachine.bits.RxHasUserData = 1;
 18010  010610  0101               	movlb	1	; () banked
 18011  010612  8538               	bsf	_MiWiStateMachine& (0+255),2,b
 18012                           
 18013                           ; BSR set to: 1
 18014                           ;miwi_mesh.c: 1066: }
 18015                           ;miwi_mesh.c: 1068: }
 18016                           ;miwi_mesh.c: 1069: break;
 18017                           
 18018                           ;miwi_mesh.c: 1023: else
 18019                           ;miwi_mesh.c: 1024: {
 18020                           
 18021                           ; BSR set to: 1
 18022                           
 18023                           ; BSR set to: 1
 18024                           ;miwi_mesh.c: 1019: }
 18025                           ;miwi_mesh.c: 1021: }
 18026                           ;miwi_mesh.c: 1022: }
 18027                           
 18028                           ; BSR set to: 1
 18029  010614  D274               	goto	l601
 18030  010616                     l12069:
 18031                           
 18032                           ; BSR set to: 1
 18033                           ;miwi_mesh.c: 1073: {
 18034                           ;miwi_mesh.c: 1074: uint8_t rxIndex;
 18035                           ;miwi_mesh.c: 1079: rxIndex = 4;
 18036  010616  0E04               	movlw	4
 18037  010618  0101               	movlb	1	; () banked
 18038  01061A  6FE6               	movwf	MiWiTasks@rxIndex& (0+255),b
 18039                           
 18040                           ; BSR set to: 1
 18041                           ;miwi_mesh.c: 1083: if(MACRxPacket.Payload[rxIndex+4] != 0x4D )
 18042  01061C  0101               	movlb	1	; () banked
 18043  01061E  51E6               	movf	MiWiTasks@rxIndex& (0+255),w,b
 18044  010620  0101               	movlb	1	; () banked
 18045  010622  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18046  010624  6BD2               	clrf	(??_MiWiTasks+1)& (0+255),b
 18047  010626  0E04               	movlw	4
 18048  010628  0101               	movlb	1	; () banked
 18049  01062A  27D1               	addwf	??_MiWiTasks& (0+255),f,b
 18050  01062C  0E00               	movlw	0
 18051  01062E  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18052  010630  0101               	movlb	1	; () banked
 18053  010632  51D1               	movf	??_MiWiTasks& (0+255),w,b
 18054  010634  0101               	movlb	1	; () banked
 18055  010636  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 18056  010638  6ED9               	movwf	fsr2l,c
 18057  01063A  0101               	movlb	1	; () banked
 18058  01063C  51D2               	movf	(??_MiWiTasks+1)& (0+255),w,b
 18059  01063E  0101               	movlb	1	; () banked
 18060  010640  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 18061  010642  6EDA               	movwf	fsr2h,c
 18062  010644  0E4D               	movlw	77
 18063  010646  18DE               	xorwf	postinc2,w,c
 18064  010648  B4D8               	btfsc	status,2,c
 18065  01064A  D018               	goto	l641
 18066                           
 18067                           ; BSR set to: 1
 18068                           ;miwi_mesh.c: 1084: {
 18069                           ;miwi_mesh.c: 1086: if(MACRxPacket.Payload[rxIndex+4] != 0x5D)
 18070  01064C  0101               	movlb	1	; () banked
 18071  01064E  51E6               	movf	MiWiTasks@rxIndex& (0+255),w,b
 18072  010650  0101               	movlb	1	; () banked
 18073  010652  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18074  010654  6BD2               	clrf	(??_MiWiTasks+1)& (0+255),b
 18075  010656  0E04               	movlw	4
 18076  010658  0101               	movlb	1	; () banked
 18077  01065A  27D1               	addwf	??_MiWiTasks& (0+255),f,b
 18078  01065C  0E00               	movlw	0
 18079  01065E  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18080  010660  0101               	movlb	1	; () banked
 18081  010662  51D1               	movf	??_MiWiTasks& (0+255),w,b
 18082  010664  0101               	movlb	1	; () banked
 18083  010666  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 18084  010668  6ED9               	movwf	fsr2l,c
 18085  01066A  0101               	movlb	1	; () banked
 18086  01066C  51D2               	movf	(??_MiWiTasks+1)& (0+255),w,b
 18087  01066E  0101               	movlb	1	; () banked
 18088  010670  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 18089  010672  6EDA               	movwf	fsr2h,c
 18090  010674  0E5D               	movlw	93
 18091  010676  18DE               	xorwf	postinc2,w,c
 18092  010678  A4D8               	btfss	status,2,c
 18093  01067A  D241               	goto	l601
 18094  01067C                     l641:
 18095                           
 18096                           ; BSR set to: 1
 18097                           ;miwi_mesh.c: 1090: }
 18098                           ;miwi_mesh.c: 1091: }
 18099                           ;miwi_mesh.c: 1186: if(MiWiStateMachine.bits.searchingForNetwork)
 18100  01067C  0101               	movlb	1	; () banked
 18101  01067E  A138               	btfss	_MiWiStateMachine& (0+255),0,b
 18102  010680  D23E               	goto	l601
 18103                           
 18104                           ; BSR set to: 1
 18105                           ;miwi_mesh.c: 1187: {
 18106                           ;miwi_mesh.c: 1193: tempPANID.v[0] = MACRxPacket.Payload[0];
 18107  010682  C119  FFD9         	movff	_MACRxPacket+3,fsr2l
 18108  010686  C11A  FFDA         	movff	_MACRxPacket+4,fsr2h
 18109  01068A  50DF               	movf	indf2,w,c
 18110  01068C  0101               	movlb	1	; () banked
 18111  01068E  6F3C               	movwf	_tempPANID& (0+255),b
 18112                           
 18113                           ; BSR set to: 1
 18114                           ;miwi_mesh.c: 1194: tempPANID.v[1] = MACRxPacket.Payload[1];
 18115  010690  0101               	movlb	1	; () banked
 18116  010692  EE20 F001          	lfsr	2,1
 18117  010696  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18118  010698  26D9               	addwf	fsr2l,f,c
 18119  01069A  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18120  01069C  22DA               	addwfc	fsr2h,f,c
 18121  01069E  50DF               	movf	indf2,w,c
 18122  0106A0  0101               	movlb	1	; () banked
 18123  0106A2  6F3D               	movwf	(_tempPANID+1)& (0+255),b
 18124                           
 18125                           ; BSR set to: 1
 18126                           ;miwi_mesh.c: 1195: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 18127  0106A4  0101               	movlb	1	; () banked
 18128  0106A6  EE20 F002          	lfsr	2,2
 18129  0106AA  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18130  0106AC  26D9               	addwf	fsr2l,f,c
 18131  0106AE  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18132  0106B0  22DA               	addwfc	fsr2h,f,c
 18133  0106B2  50DF               	movf	indf2,w,c
 18134  0106B4  0101               	movlb	1	; () banked
 18135  0106B6  6F87               	movwf	_tempShortAddress& (0+255),b
 18136                           
 18137                           ; BSR set to: 1
 18138                           ;miwi_mesh.c: 1196: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 18139  0106B8  0101               	movlb	1	; () banked
 18140  0106BA  EE20 F003          	lfsr	2,3
 18141  0106BE  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18142  0106C0  26D9               	addwf	fsr2l,f,c
 18143  0106C2  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18144  0106C4  22DA               	addwfc	fsr2h,f,c
 18145  0106C6  50DF               	movf	indf2,w,c
 18146  0106C8  0101               	movlb	1	; () banked
 18147  0106CA  6F88               	movwf	(_tempShortAddress+1)& (0+255),b
 18148                           
 18149                           ; BSR set to: 1
 18150                           ;miwi_mesh.c: 1200: if(MACRxPacket.Payload[rxIndex] == 0xFF)
 18151  0106CC  0101               	movlb	1	; () banked
 18152  0106CE  51E6               	movf	MiWiTasks@rxIndex& (0+255),w,b
 18153  0106D0  0D01               	mullw	1
 18154  0106D2  50F3               	movf	prodl,w,c
 18155  0106D4  0101               	movlb	1	; () banked
 18156  0106D6  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 18157  0106D8  6ED9               	movwf	fsr2l,c
 18158  0106DA  50F4               	movf	prodh,w,c
 18159  0106DC  0101               	movlb	1	; () banked
 18160  0106DE  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 18161  0106E0  6EDA               	movwf	fsr2h,c
 18162  0106E2  28DE               	incf	postinc2,w,c
 18163  0106E4  A4D8               	btfss	status,2,c
 18164  0106E6  D20B               	goto	l601
 18165                           
 18166                           ; BSR set to: 1
 18167                           ;miwi_mesh.c: 1201: {
 18168                           ;miwi_mesh.c: 1202: MIWI_CAPACITY_INFO CapacityByte;
 18169                           ;miwi_mesh.c: 1203: CapacityByte.Val = MACRxPacket.Payload[rxIndex+1];
 18170  0106E8  0101               	movlb	1	; () banked
 18171  0106EA  51E6               	movf	MiWiTasks@rxIndex& (0+255),w,b
 18172  0106EC  0101               	movlb	1	; () banked
 18173  0106EE  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18174  0106F0  6BD2               	clrf	(??_MiWiTasks+1)& (0+255),b
 18175  0106F2  0E01               	movlw	1
 18176  0106F4  0101               	movlb	1	; () banked
 18177  0106F6  27D1               	addwf	??_MiWiTasks& (0+255),f,b
 18178  0106F8  0E00               	movlw	0
 18179  0106FA  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18180  0106FC  0101               	movlb	1	; () banked
 18181  0106FE  51D1               	movf	??_MiWiTasks& (0+255),w,b
 18182  010700  0101               	movlb	1	; () banked
 18183  010702  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 18184  010704  6ED9               	movwf	fsr2l,c
 18185  010706  0101               	movlb	1	; () banked
 18186  010708  51D2               	movf	(??_MiWiTasks+1)& (0+255),w,b
 18187  01070A  0101               	movlb	1	; () banked
 18188  01070C  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 18189  01070E  6EDA               	movwf	fsr2h,c
 18190  010710  50DF               	movf	indf2,w,c
 18191  010712  0101               	movlb	1	; () banked
 18192  010714  6FE7               	movwf	MiWiTasks@CapacityByte& (0+255),b
 18193                           
 18194                           ; BSR set to: 1
 18195                           ;miwi_mesh.c: 1204: if( (ActiveScanResultIndex < 8) && (CapacityByte.bits.ConnMode <= 0x
      +                          01) )
 18196  010716  0E08               	movlw	8
 18197  010718  0101               	movlb	1	; () banked
 18198  01071A  6142               	cpfslt	_ActiveScanResultIndex& (0+255),b
 18199  01071C  D1F0               	goto	l601
 18200                           
 18201                           ; BSR set to: 1
 18202  01071E  0101               	movlb	1	; () banked
 18203  010720  39E7               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 18204  010722  0B03               	andlw	3
 18205  010724  0101               	movlb	1	; () banked
 18206  010726  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18207  010728  0E02               	movlw	2
 18208  01072A  0101               	movlb	1	; () banked
 18209  01072C  61D1               	cpfslt	??_MiWiTasks& (0+255),b
 18210  01072E  D1E7               	goto	l601
 18211                           
 18212                           ; BSR set to: 1
 18213                           ;miwi_mesh.c: 1205: {
 18214                           ;miwi_mesh.c: 1207: ActiveScanResults[ActiveScanResultIndex].Channel = currentChannel;
 18215  010730  0101               	movlb	1	; () banked
 18216  010732  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18217  010734  0D0A               	mullw	10
 18218  010736  0E00               	movlw	low _ActiveScanResults
 18219  010738  24F3               	addwf	prodl,w,c
 18220  01073A  6ED9               	movwf	fsr2l,c
 18221  01073C  0E03               	movlw	high _ActiveScanResults
 18222  01073E  20F4               	addwfc	prodh,w,c
 18223  010740  6EDA               	movwf	fsr2h,c
 18224  010742  C189  FFDF         	movff	_currentChannel,indf2
 18225                           
 18226                           ;miwi_mesh.c: 1208: ActiveScanResults[ActiveScanResultIndex].RSSIValue = rxMessage.Packe
      +                          tRSSI;
 18227  010746  0101               	movlb	1	; () banked
 18228  010748  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18229  01074A  0D0A               	mullw	10
 18230  01074C  0E07               	movlw	7
 18231  01074E  26F3               	addwf	prodl,f,c
 18232  010750  0E00               	movlw	0
 18233  010752  22F4               	addwfc	prodh,f,c
 18234  010754  0E00               	movlw	low _ActiveScanResults
 18235  010756  24F3               	addwf	prodl,w,c
 18236  010758  6ED9               	movwf	fsr2l,c
 18237  01075A  0E03               	movlw	high _ActiveScanResults
 18238  01075C  20F4               	addwfc	prodh,w,c
 18239  01075E  6EDA               	movwf	fsr2h,c
 18240  010760  C114  FFDF         	movff	_rxMessage+8,indf2
 18241                           
 18242                           ;miwi_mesh.c: 1209: ActiveScanResults[ActiveScanResultIndex].LQIValue = rxMessage.Packet
      +                          LQI;
 18243  010764  0101               	movlb	1	; () banked
 18244  010766  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18245  010768  0D0A               	mullw	10
 18246  01076A  0E08               	movlw	8
 18247  01076C  26F3               	addwf	prodl,f,c
 18248  01076E  0E00               	movlw	0
 18249  010770  22F4               	addwfc	prodh,f,c
 18250  010772  0E00               	movlw	low _ActiveScanResults
 18251  010774  24F3               	addwf	prodl,w,c
 18252  010776  6ED9               	movwf	fsr2l,c
 18253  010778  0E03               	movlw	high _ActiveScanResults
 18254  01077A  20F4               	addwfc	prodh,w,c
 18255  01077C  6EDA               	movwf	fsr2h,c
 18256  01077E  C115  FFDF         	movff	_rxMessage+9,indf2
 18257                           
 18258                           ;miwi_mesh.c: 1210: ActiveScanResults[ActiveScanResultIndex].PANID.Val = tempPANID.Val;
 18259  010782  0101               	movlb	1	; () banked
 18260  010784  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18261  010786  0D0A               	mullw	10
 18262  010788  0E05               	movlw	5
 18263  01078A  26F3               	addwf	prodl,f,c
 18264  01078C  0E00               	movlw	0
 18265  01078E  22F4               	addwfc	prodh,f,c
 18266  010790  0E00               	movlw	low _ActiveScanResults
 18267  010792  24F3               	addwf	prodl,w,c
 18268  010794  6ED9               	movwf	fsr2l,c
 18269  010796  0E03               	movlw	high _ActiveScanResults
 18270  010798  20F4               	addwfc	prodh,w,c
 18271  01079A  6EDA               	movwf	fsr2h,c
 18272  01079C  C13C  FFDE         	movff	_tempPANID,postinc2
 18273  0107A0  C13D  FFDD         	movff	_tempPANID+1,postdec2
 18274                           
 18275                           ;miwi_mesh.c: 1212: ActiveScanResults[ActiveScanResultIndex].Capability.Val = 0;
 18276  0107A4  0101               	movlb	1	; () banked
 18277  0107A6  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18278  0107A8  0D0A               	mullw	10
 18279  0107AA  0E09               	movlw	9
 18280  0107AC  26F3               	addwf	prodl,f,c
 18281  0107AE  0E00               	movlw	0
 18282  0107B0  22F4               	addwfc	prodh,f,c
 18283  0107B2  0E00               	movlw	low _ActiveScanResults
 18284  0107B4  24F3               	addwf	prodl,w,c
 18285  0107B6  6ED9               	movwf	fsr2l,c
 18286  0107B8  0E03               	movlw	high _ActiveScanResults
 18287  0107BA  20F4               	addwfc	prodh,w,c
 18288  0107BC  6EDA               	movwf	fsr2h,c
 18289  0107BE  0E00               	movlw	0
 18290  0107C0  6EDF               	movwf	indf2,c
 18291                           
 18292                           ;miwi_mesh.c: 1213: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Direct = 1;
 18293  0107C2  0101               	movlb	1	; () banked
 18294  0107C4  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18295  0107C6  0D0A               	mullw	10
 18296  0107C8  0E09               	movlw	9
 18297  0107CA  26F3               	addwf	prodl,f,c
 18298  0107CC  0E00               	movlw	0
 18299  0107CE  22F4               	addwfc	prodh,f,c
 18300  0107D0  0E00               	movlw	low _ActiveScanResults
 18301  0107D2  24F3               	addwf	prodl,w,c
 18302  0107D4  6ED9               	movwf	fsr2l,c
 18303  0107D6  0E03               	movlw	high _ActiveScanResults
 18304  0107D8  20F4               	addwfc	prodh,w,c
 18305  0107DA  6EDA               	movwf	fsr2h,c
 18306  0107DC  0103               	movlb	3	; () banked
 18307  0107DE  8CDF               	bsf	indf2,6,c
 18308                           
 18309                           ;miwi_mesh.c: 1214: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Role = Capa
      +                          cityByte.bits.Role;
 18310  0107E0  0101               	movlb	1	; () banked
 18311  0107E2  31E7               	rrcf	MiWiTasks@CapacityByte& (0+255),w,b
 18312  0107E4  0B03               	andlw	3
 18313  0107E6  0101               	movlb	1	; () banked
 18314  0107E8  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18315  0107EA  0101               	movlb	1	; () banked
 18316  0107EC  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18317  0107EE  0D0A               	mullw	10
 18318  0107F0  0E09               	movlw	9
 18319  0107F2  26F3               	addwf	prodl,f,c
 18320  0107F4  0E00               	movlw	0
 18321  0107F6  22F4               	addwfc	prodh,f,c
 18322  0107F8  0E00               	movlw	low _ActiveScanResults
 18323  0107FA  24F3               	addwf	prodl,w,c
 18324  0107FC  6ED9               	movwf	fsr2l,c
 18325  0107FE  0E03               	movlw	high _ActiveScanResults
 18326  010800  20F4               	addwfc	prodh,w,c
 18327  010802  6EDA               	movwf	fsr2h,c
 18328  010804  0103               	movlb	3	; () banked
 18329  010806  50DF               	movf	223,w,c
 18330  010808  0101               	movlb	1	; () banked
 18331  01080A  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 18332  01080C  0BFC               	andlw	-4
 18333  01080E  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 18334  010810  0103               	movlb	3	; () banked
 18335  010812  6EDF               	movwf	223,c
 18336                           
 18337                           ; BSR set to: 3
 18338                           ;miwi_mesh.c: 1215: if( CapacityByte.bits.Security )
 18339  010814  0101               	movlb	1	; () banked
 18340  010816  A7E7               	btfss	MiWiTasks@CapacityByte& (0+255),3,b
 18341  010818  D00F               	goto	l12099
 18342                           
 18343                           ; BSR set to: 1
 18344                           ;miwi_mesh.c: 1216: {
 18345                           ;miwi_mesh.c: 1217: ActiveScanResults[ActiveScanResultIndex].Capability.bits.SecurityEn 
      +                          = 1;
 18346  01081A  0101               	movlb	1	; () banked
 18347  01081C  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18348  01081E  0D0A               	mullw	10
 18349  010820  0E09               	movlw	9
 18350  010822  26F3               	addwf	prodl,f,c
 18351  010824  0E00               	movlw	0
 18352  010826  22F4               	addwfc	prodh,f,c
 18353  010828  0E00               	movlw	low _ActiveScanResults
 18354  01082A  24F3               	addwf	prodl,w,c
 18355  01082C  6ED9               	movwf	fsr2l,c
 18356  01082E  0E03               	movlw	high _ActiveScanResults
 18357  010830  20F4               	addwfc	prodh,w,c
 18358  010832  6EDA               	movwf	fsr2h,c
 18359  010834  0103               	movlb	3	; () banked
 18360  010836  86DF               	bsf	indf2,3,c
 18361  010838                     l12099:
 18362                           
 18363                           ;miwi_mesh.c: 1218: }
 18364                           ;miwi_mesh.c: 1219: if( CapacityByte.bits.ConnMode <= 0x01 )
 18365  010838  0101               	movlb	1	; () banked
 18366  01083A  39E7               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 18367  01083C  0B03               	andlw	3
 18368  01083E  0101               	movlb	1	; () banked
 18369  010840  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18370  010842  0E02               	movlw	2
 18371  010844  0101               	movlb	1	; () banked
 18372  010846  61D1               	cpfslt	??_MiWiTasks& (0+255),b
 18373  010848  D00F               	goto	l12103
 18374                           
 18375                           ; BSR set to: 1
 18376                           ;miwi_mesh.c: 1220: {
 18377                           ;miwi_mesh.c: 1221: ActiveScanResults[ActiveScanResultIndex].Capability.bits.AllowJoin =
      +                           1;
 18378  01084A  0101               	movlb	1	; () banked
 18379  01084C  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18380  01084E  0D0A               	mullw	10
 18381  010850  0E09               	movlw	9
 18382  010852  26F3               	addwf	prodl,f,c
 18383  010854  0E00               	movlw	0
 18384  010856  22F4               	addwfc	prodh,f,c
 18385  010858  0E00               	movlw	low _ActiveScanResults
 18386  01085A  24F3               	addwf	prodl,w,c
 18387  01085C  6ED9               	movwf	fsr2l,c
 18388  01085E  0E03               	movlw	high _ActiveScanResults
 18389  010860  20F4               	addwfc	prodh,w,c
 18390  010862  6EDA               	movwf	fsr2h,c
 18391  010864  0103               	movlb	3	; () banked
 18392  010866  8ADF               	bsf	indf2,5,c
 18393  010868                     l12103:
 18394                           
 18395                           ;miwi_mesh.c: 1222: }
 18396                           ;miwi_mesh.c: 1230: for(i = 0; i < 4; i++)
 18397  010868  0E00               	movlw	0
 18398  01086A  0101               	movlb	1	; () banked
 18399  01086C  6FED               	movwf	MiWiTasks@i& (0+255),b
 18400  01086E                     l12105:
 18401                           
 18402                           ; BSR set to: 1
 18403  01086E  0E03               	movlw	3
 18404  010870  0101               	movlb	1	; () banked
 18405  010872  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 18406  010874  D001               	goto	l12109
 18407  010876  D02E               	goto	l12115
 18408  010878                     l12109:
 18409                           
 18410                           ; BSR set to: 1
 18411                           ;miwi_mesh.c: 1231: {
 18412                           ;miwi_mesh.c: 1232: ActiveScanResults[ActiveScanResultIndex].Address[i] = rxMessage.Sour
      +                          ceAddress[i];
 18413  010878  0101               	movlb	1	; () banked
 18414  01087A  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18415  01087C  0D01               	mullw	1
 18416  01087E  50F3               	movf	prodl,w,c
 18417  010880  0101               	movlb	1	; () banked
 18418  010882  250F               	addwf	(_rxMessage+3)& (0+255),w,b
 18419  010884  6ED9               	movwf	fsr2l,c
 18420  010886  50F4               	movf	prodh,w,c
 18421  010888  0101               	movlb	1	; () banked
 18422  01088A  2110               	addwfc	(_rxMessage+4)& (0+255),w,b
 18423  01088C  6EDA               	movwf	fsr2h,c
 18424  01088E  0101               	movlb	1	; () banked
 18425  010890  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18426  010892  0D01               	mullw	1
 18427  010894  0E01               	movlw	1
 18428  010896  26F3               	addwf	prodl,f,c
 18429  010898  0E00               	movlw	0
 18430  01089A  22F4               	addwfc	prodh,f,c
 18431  01089C  0E00               	movlw	low _ActiveScanResults
 18432  01089E  0101               	movlb	1	; () banked
 18433  0108A0  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18434  0108A2  0E03               	movlw	high _ActiveScanResults
 18435  0108A4  0101               	movlb	1	; () banked
 18436  0108A6  6FD2               	movwf	(??_MiWiTasks+1)& (0+255),b
 18437  0108A8  50F3               	movf	prodl,w,c
 18438  0108AA  0101               	movlb	1	; () banked
 18439  0108AC  27D1               	addwf	??_MiWiTasks& (0+255),f,b
 18440  0108AE  50F4               	movf	prodh,w,c
 18441  0108B0  0101               	movlb	1	; () banked
 18442  0108B2  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18443  0108B4  0101               	movlb	1	; () banked
 18444  0108B6  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18445  0108B8  0D0A               	mullw	10
 18446  0108BA  50F3               	movf	prodl,w,c
 18447  0108BC  0101               	movlb	1	; () banked
 18448  0108BE  25D1               	addwf	??_MiWiTasks& (0+255),w,b
 18449  0108C0  6EE1               	movwf	fsr1l,c
 18450  0108C2  50F4               	movf	prodh,w,c
 18451  0108C4  0101               	movlb	1	; () banked
 18452  0108C6  21D2               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 18453  0108C8  6EE2               	movwf	fsr1h,c
 18454  0108CA  CFDF FFE7          	movff	indf2,indf1
 18455                           
 18456                           ; BSR set to: 1
 18457  0108CE  0101               	movlb	1	; () banked
 18458  0108D0  2BED               	incf	MiWiTasks@i& (0+255),f,b
 18459  0108D2  D7CD               	goto	l12105
 18460  0108D4                     l12115:
 18461                           
 18462                           ; BSR set to: 1
 18463                           ;miwi_mesh.c: 1233: }
 18464                           ;miwi_mesh.c: 1241: ActiveScanResultIndex++;
 18465  0108D4  0101               	movlb	1	; () banked
 18466  0108D6  2B42               	incf	_ActiveScanResultIndex& (0+255),f,b
 18467                           
 18468                           ; BSR set to: 1
 18469                           ;miwi_mesh.c: 1242: }
 18470                           ;miwi_mesh.c: 1243: }
 18471                           ;miwi_mesh.c: 1244: }
 18472                           ;miwi_mesh.c: 1245: }
 18473                           ;miwi_mesh.c: 1246: break;
 18474                           
 18475                           ; BSR set to: 1
 18476                           
 18477                           ; BSR set to: 1
 18478  0108D8  D112               	goto	l601
 18479  0108DA                     l12117:
 18480                           
 18481                           ; BSR set to: 1
 18482                           ;miwi_mesh.c: 1412: {
 18483                           ;miwi_mesh.c: 1413: if(MACRxPacket.Payload[3] == 0x00)
 18484  0108DA  0101               	movlb	1	; () banked
 18485  0108DC  EE20 F003          	lfsr	2,3
 18486  0108E0  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18487  0108E2  26D9               	addwf	fsr2l,f,c
 18488  0108E4  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18489  0108E6  22DA               	addwfc	fsr2h,f,c
 18490  0108E8  50DF               	movf	indf2,w,c
 18491  0108EA  A4D8               	btfss	status,2,c
 18492  0108EC  D06C               	goto	l654
 18493                           
 18494                           ; BSR set to: 1
 18495                           ;miwi_mesh.c: 1414: {
 18496                           ;miwi_mesh.c: 1417: myShortAddress.v[0] = MACRxPacket.Payload[1];
 18497  0108EE  0101               	movlb	1	; () banked
 18498  0108F0  EE20 F001          	lfsr	2,1
 18499  0108F4  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18500  0108F6  26D9               	addwf	fsr2l,f,c
 18501  0108F8  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18502  0108FA  22DA               	addwfc	fsr2h,f,c
 18503  0108FC  50DF               	movf	indf2,w,c
 18504  0108FE  0101               	movlb	1	; () banked
 18505  010900  6F85               	movwf	_myShortAddress& (0+255),b
 18506                           
 18507                           ;miwi_mesh.c: 1418: myShortAddress.v[1] = MACRxPacket.Payload[2];
 18508  010902  0101               	movlb	1	; () banked
 18509  010904  EE20 F002          	lfsr	2,2
 18510  010908  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18511  01090A  26D9               	addwf	fsr2l,f,c
 18512  01090C  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18513  01090E  22DA               	addwfc	fsr2h,f,c
 18514  010910  50DF               	movf	indf2,w,c
 18515  010912  0101               	movlb	1	; () banked
 18516  010914  6F86               	movwf	(_myShortAddress+1)& (0+255),b
 18517                           
 18518                           ; BSR set to: 1
 18519                           ;miwi_mesh.c: 1441: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 18520  010916  0E85               	movlw	low _myShortAddress
 18521  010918  0101               	movlb	1	; () banked
 18522  01091A  6F8A               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18523  01091C  0E01               	movlw	high _myShortAddress
 18524  01091E  0101               	movlb	1	; () banked
 18525  010920  6F8B               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18526  010922  0E83               	movlw	low _myPANID
 18527  010924  0101               	movlb	1	; () banked
 18528  010926  6F8C               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18529  010928  0E01               	movlw	high _myPANID
 18530  01092A  0101               	movlb	1	; () banked
 18531  01092C  6F8D               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18532  01092E  ECFC  F0B7         	call	_MiMAC_SetAltAddress	;wreg free
 18533                           
 18534                           ;miwi_mesh.c: 1444: MiWiStateMachine.bits.memberOfNetwork = 1;
 18535  010932  0101               	movlb	1	; () banked
 18536  010934  8338               	bsf	_MiWiStateMachine& (0+255),1,b
 18537                           
 18538                           ; BSR set to: 1
 18539                           ;miwi_mesh.c: 1447: tempNodeStatus.Val = 0xBF;
 18540  010936  0EBF               	movlw	191
 18541  010938  0100               	movlb	0	; () banked
 18542  01093A  6FBD               	movwf	_tempNodeStatus& (0+255),b
 18543                           
 18544                           ; BSR set to: 0
 18545                           ;miwi_mesh.c: 1448: for(i = 0; i < 4; i++)
 18546  01093C  0E00               	movlw	0
 18547  01093E  0101               	movlb	1	; () banked
 18548  010940  6FED               	movwf	MiWiTasks@i& (0+255),b
 18549  010942                     l12129:
 18550                           
 18551                           ; BSR set to: 1
 18552  010942  0E03               	movlw	3
 18553  010944  0101               	movlb	1	; () banked
 18554  010946  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 18555  010948  D001               	goto	l12133
 18556  01094A  D019               	goto	l12139
 18557  01094C                     l12133:
 18558                           
 18559                           ; BSR set to: 1
 18560                           ;miwi_mesh.c: 1449: {
 18561                           ;miwi_mesh.c: 1450: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18562  01094C  0101               	movlb	1	; () banked
 18563  01094E  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18564  010950  0D01               	mullw	1
 18565  010952  50F3               	movf	prodl,w,c
 18566  010954  0101               	movlb	1	; () banked
 18567  010956  2517               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18568  010958  6ED9               	movwf	fsr2l,c
 18569  01095A  50F4               	movf	prodh,w,c
 18570  01095C  0101               	movlb	1	; () banked
 18571  01095E  2118               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18572  010960  6EDA               	movwf	fsr2h,c
 18573  010962  0101               	movlb	1	; () banked
 18574  010964  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18575  010966  0D01               	mullw	1
 18576  010968  0E26               	movlw	low _tempLongAddress
 18577  01096A  24F3               	addwf	prodl,w,c
 18578  01096C  6EE1               	movwf	fsr1l,c
 18579  01096E  0E01               	movlw	high _tempLongAddress
 18580  010970  20F4               	addwfc	prodh,w,c
 18581  010972  6EE2               	movwf	fsr1h,c
 18582  010974  CFDF FFE7          	movff	indf2,indf1
 18583                           
 18584                           ; BSR set to: 1
 18585  010978  0101               	movlb	1	; () banked
 18586  01097A  2BED               	incf	MiWiTasks@i& (0+255),f,b
 18587  01097C  D7E2               	goto	l12129
 18588  01097E                     l12139:
 18589                           
 18590                           ; BSR set to: 1
 18591                           ;miwi_mesh.c: 1451: }
 18592                           ;miwi_mesh.c: 1453: if(myShortAddress.v[0] == 0x00)
 18593  01097E  0101               	movlb	1	; () banked
 18594  010980  5185               	movf	_myShortAddress& (0+255),w,b
 18595  010982  A4D8               	btfss	status,2,c
 18596  010984  D005               	goto	l657
 18597                           
 18598                           ; BSR set to: 1
 18599                           ;miwi_mesh.c: 1454: {
 18600                           ;miwi_mesh.c: 1457: tempShortAddress.Val = 0x0000;
 18601  010986  0E00               	movlw	0
 18602  010988  0101               	movlb	1	; () banked
 18603  01098A  6F88               	movwf	(_tempShortAddress+1)& (0+255),b
 18604  01098C  0E00               	movlw	0
 18605  01098E  D004               	goto	L5
 18606  010990                     l657:
 18607                           
 18608                           ; BSR set to: 1
 18609                           ;miwi_mesh.c: 1459: else
 18610                           ;miwi_mesh.c: 1460: {
 18611                           ;miwi_mesh.c: 1461: tempShortAddress.v[1] = myShortAddress.v[1];
 18612  010990  C186  F188         	movff	_myShortAddress+1,_tempShortAddress+1
 18613                           
 18614                           ; BSR set to: 1
 18615                           ;miwi_mesh.c: 1462: tempShortAddress.v[0] = 0x00;
 18616  010994  0E00               	movlw	0
 18617  010996  0101               	movlb	1	; () banked
 18618  010998                     L5:
 18619  010998  6F87               	movwf	_tempShortAddress& (0+255),b
 18620                           
 18621                           ; BSR set to: 1
 18622                           ;miwi_mesh.c: 1463: }
 18623                           ;miwi_mesh.c: 1465: tempPANID.Val = myPANID.Val;
 18624                           
 18625                           ; BSR set to: 1
 18626  01099A  C183  F13C         	movff	_myPANID,_tempPANID
 18627  01099E  C184  F13D         	movff	_myPANID+1,_tempPANID+1
 18628                           
 18629                           ; BSR set to: 1
 18630                           ;miwi_mesh.c: 1468: myParent = AddNodeToNetworkTable();
 18631  0109A2  EC46  F0A9         	call	_AddNodeToNetworkTable	;wreg free
 18632  0109A6  0101               	movlb	1	; () banked
 18633  0109A8  6F4C               	movwf	_myParent& (0+255),b
 18634                           
 18635                           ; BSR set to: 1
 18636                           ;miwi_mesh.c: 1470: IncomingFrameCounter[myParent].Val = 0;
 18637  0109AA  0101               	movlb	1	; () banked
 18638  0109AC  514C               	movf	_myParent& (0+255),w,b
 18639  0109AE  0D04               	mullw	4
 18640  0109B0  0E00               	movlw	low _IncomingFrameCounter
 18641  0109B2  24F3               	addwf	prodl,w,c
 18642  0109B4  6ED9               	movwf	fsr2l,c
 18643  0109B6  0E02               	movlw	high _IncomingFrameCounter
 18644  0109B8  20F4               	addwfc	prodh,w,c
 18645  0109BA  6EDA               	movwf	fsr2h,c
 18646  0109BC  6ADE               	clrf	postinc2,c
 18647  0109BE  6ADE               	clrf	postinc2,c
 18648  0109C0  6ADE               	clrf	postinc2,c
 18649  0109C2  6ADD               	clrf	postdec2,c
 18650                           
 18651                           ;miwi_mesh.c: 1490: ;
 18652                           ;miwi_mesh.c: 1491: }
 18653  0109C4  D09C               	goto	l601
 18654  0109C6                     l654:
 18655                           
 18656                           ; BSR set to: 1
 18657                           ;miwi_mesh.c: 1492: else
 18658                           ;miwi_mesh.c: 1493: {
 18659                           ;miwi_mesh.c: 1495: myParent = 0xFF;
 18660  0109C6  0101               	movlb	1	; () banked
 18661  0109C8  694C               	setf	_myParent& (0+255),b
 18662                           
 18663                           ;miwi_mesh.c: 1496: myPANID.Val = 0xFFFF;
 18664  0109CA  0101               	movlb	1	; () banked
 18665  0109CC  6983               	setf	_myPANID& (0+255),b
 18666  0109CE  6984               	setf	(_myPANID+1)& (0+255),b
 18667                           
 18668                           ;miwi_mesh.c: 1497: tempShortAddress.Val = 0xFFFF;
 18669  0109D0  0101               	movlb	1	; () banked
 18670  0109D2  6987               	setf	_tempShortAddress& (0+255),b
 18671  0109D4  6988               	setf	(_tempShortAddress+1)& (0+255),b
 18672                           
 18673                           ; BSR set to: 1
 18674                           ;miwi_mesh.c: 1498: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 18675  0109D6  0E87               	movlw	low _tempShortAddress
 18676  0109D8  0101               	movlb	1	; () banked
 18677  0109DA  6F8A               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18678  0109DC  0E01               	movlw	high _tempShortAddress
 18679  0109DE  0101               	movlb	1	; () banked
 18680  0109E0  6F8B               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18681  0109E2  0E83               	movlw	low _myPANID
 18682  0109E4  0101               	movlb	1	; () banked
 18683  0109E6  6F8C               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18684  0109E8  0E01               	movlw	high _myPANID
 18685  0109EA  0101               	movlb	1	; () banked
 18686  0109EC  6F8D               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18687  0109EE  ECFC  F0B7         	call	_MiMAC_SetAltAddress	;wreg free
 18688                           
 18689                           ;miwi_mesh.c: 1504: }
 18690                           ;miwi_mesh.c: 1505: }
 18691                           ;miwi_mesh.c: 1506: break;
 18692  0109F2  D085               	goto	l601
 18693  0109F4                     l12153:
 18694                           
 18695                           ;miwi_mesh.c: 1510: {
 18696                           ;miwi_mesh.c: 1511: uint8_t cIndex;
 18697                           ;miwi_mesh.c: 1526: {
 18698                           ;miwi_mesh.c: 1527: for(i = 0; i < 4; i++)
 18699  0109F4  0E00               	movlw	0
 18700  0109F6  0101               	movlb	1	; () banked
 18701  0109F8  6FED               	movwf	MiWiTasks@i& (0+255),b
 18702  0109FA                     l12155:
 18703                           
 18704                           ; BSR set to: 1
 18705  0109FA  0E03               	movlw	3
 18706  0109FC  0101               	movlb	1	; () banked
 18707  0109FE  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 18708  010A00  D001               	goto	l12159
 18709  010A02  D019               	goto	l12165
 18710  010A04                     l12159:
 18711                           
 18712                           ; BSR set to: 1
 18713                           ;miwi_mesh.c: 1528: {
 18714                           ;miwi_mesh.c: 1529: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18715  010A04  0101               	movlb	1	; () banked
 18716  010A06  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18717  010A08  0D01               	mullw	1
 18718  010A0A  50F3               	movf	prodl,w,c
 18719  010A0C  0101               	movlb	1	; () banked
 18720  010A0E  2517               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18721  010A10  6ED9               	movwf	fsr2l,c
 18722  010A12  50F4               	movf	prodh,w,c
 18723  010A14  0101               	movlb	1	; () banked
 18724  010A16  2118               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18725  010A18  6EDA               	movwf	fsr2h,c
 18726  010A1A  0101               	movlb	1	; () banked
 18727  010A1C  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18728  010A1E  0D01               	mullw	1
 18729  010A20  0E26               	movlw	low _tempLongAddress
 18730  010A22  24F3               	addwf	prodl,w,c
 18731  010A24  6EE1               	movwf	fsr1l,c
 18732  010A26  0E01               	movlw	high _tempLongAddress
 18733  010A28  20F4               	addwfc	prodh,w,c
 18734  010A2A  6EE2               	movwf	fsr1h,c
 18735  010A2C  CFDF FFE7          	movff	indf2,indf1
 18736                           
 18737                           ; BSR set to: 1
 18738  010A30  0101               	movlb	1	; () banked
 18739  010A32  2BED               	incf	MiWiTasks@i& (0+255),f,b
 18740  010A34  D7E2               	goto	l12155
 18741  010A36                     l12165:
 18742                           
 18743                           ; BSR set to: 1
 18744                           ;miwi_mesh.c: 1530: }
 18745                           ;miwi_mesh.c: 1531: if( (cIndex = SearchForLongAddress()) == 0xFF )
 18746  010A36  EC71  F0AD         	call	_SearchForLongAddress	;wreg free
 18747  010A3A  0101               	movlb	1	; () banked
 18748  010A3C  6FDD               	movwf	MiWiTasks@cIndex& (0+255),b
 18749  010A3E  0101               	movlb	1	; () banked
 18750  010A40  29DD               	incf	MiWiTasks@cIndex& (0+255),w,b
 18751  010A42  B4D8               	btfsc	status,2,c
 18752  010A44  D05C               	goto	l601
 18753                           
 18754                           ; BSR set to: 1
 18755                           ;miwi_mesh.c: 1534: }
 18756                           ;miwi_mesh.c: 1535: }
 18757                           ;miwi_mesh.c: 1590: if( ConnectionTable[cIndex].status.bits.isFamily )
 18758                           
 18759                           ; BSR set to: 1
 18760                           
 18761                           ; BSR set to: 1
 18762                           ;miwi_mesh.c: 1532: {
 18763                           ;miwi_mesh.c: 1533: break;
 18764  010A46  0101               	movlb	1	; () banked
 18765  010A48  51DD               	movf	MiWiTasks@cIndex& (0+255),w,b
 18766  010A4A  0D09               	mullw	9
 18767  010A4C  0E08               	movlw	8
 18768  010A4E  26F3               	addwf	prodl,f,c
 18769  010A50  0E00               	movlw	0
 18770  010A52  22F4               	addwfc	prodh,f,c
 18771  010A54  0E46               	movlw	low _ConnectionTable
 18772  010A56  24F3               	addwf	prodl,w,c
 18773  010A58  6ED9               	movwf	fsr2l,c
 18774  010A5A  0E02               	movlw	high _ConnectionTable
 18775  010A5C  20F4               	addwfc	prodh,w,c
 18776  010A5E  6EDA               	movwf	fsr2h,c
 18777  010A60  0102               	movlb	2	; () banked
 18778  010A62  AADF               	btfss	indf2,5,c
 18779  010A64  D04C               	goto	l601
 18780                           
 18781                           ; BSR set to: 2
 18782                           ;miwi_mesh.c: 1591: {
 18783                           ;miwi_mesh.c: 1592: for(i = 0; i < 10; i++)
 18784  010A66  0E00               	movlw	0
 18785  010A68  0101               	movlb	1	; () banked
 18786  010A6A  6FED               	movwf	MiWiTasks@i& (0+255),b
 18787  010A6C                     l12173:
 18788                           
 18789                           ; BSR set to: 1
 18790  010A6C  0E09               	movlw	9
 18791  010A6E  0101               	movlb	1	; () banked
 18792  010A70  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 18793  010A72  D001               	goto	l12177
 18794  010A74  D012               	goto	l667
 18795  010A76                     l12177:
 18796                           
 18797                           ; BSR set to: 1
 18798                           ;miwi_mesh.c: 1593: {
 18799                           ;miwi_mesh.c: 1594: ConnectionTable[i].status.Val = 0;
 18800  010A76  0101               	movlb	1	; () banked
 18801  010A78  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18802  010A7A  0D09               	mullw	9
 18803  010A7C  0E08               	movlw	8
 18804  010A7E  26F3               	addwf	prodl,f,c
 18805  010A80  0E00               	movlw	0
 18806  010A82  22F4               	addwfc	prodh,f,c
 18807  010A84  0E46               	movlw	low _ConnectionTable
 18808  010A86  24F3               	addwf	prodl,w,c
 18809  010A88  6ED9               	movwf	fsr2l,c
 18810  010A8A  0E02               	movlw	high _ConnectionTable
 18811  010A8C  20F4               	addwfc	prodh,w,c
 18812  010A8E  6EDA               	movwf	fsr2h,c
 18813  010A90  0E00               	movlw	0
 18814  010A92  6EDF               	movwf	indf2,c
 18815                           
 18816                           ; BSR set to: 1
 18817  010A94  0101               	movlb	1	; () banked
 18818  010A96  2BED               	incf	MiWiTasks@i& (0+255),f,b
 18819  010A98  D7E9               	goto	l12173
 18820  010A9A                     l667:
 18821                           
 18822                           ; BSR set to: 1
 18823                           ;miwi_mesh.c: 1595: }
 18824                           ;miwi_mesh.c: 1596: myParent = 0xFF;
 18825  010A9A  0101               	movlb	1	; () banked
 18826  010A9C  694C               	setf	_myParent& (0+255),b
 18827                           
 18828                           ;miwi_mesh.c: 1597: myShortAddress.Val = 0xFFFF;
 18829  010A9E  0101               	movlb	1	; () banked
 18830  010AA0  6985               	setf	_myShortAddress& (0+255),b
 18831  010AA2  6986               	setf	(_myShortAddress+1)& (0+255),b
 18832                           
 18833                           ;miwi_mesh.c: 1598: myPANID.Val = 0xFFFF;
 18834  010AA4  0101               	movlb	1	; () banked
 18835  010AA6  6983               	setf	_myPANID& (0+255),b
 18836  010AA8  6984               	setf	(_myPANID+1)& (0+255),b
 18837                           
 18838                           ; BSR set to: 1
 18839                           ;miwi_mesh.c: 1599: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 18840  010AAA  0E85               	movlw	low _myShortAddress
 18841  010AAC  0101               	movlb	1	; () banked
 18842  010AAE  6F8A               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18843  010AB0  0E01               	movlw	high _myShortAddress
 18844  010AB2  0101               	movlb	1	; () banked
 18845  010AB4  6F8B               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18846  010AB6  0E83               	movlw	low _myPANID
 18847  010AB8  0101               	movlb	1	; () banked
 18848  010ABA  6F8C               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18849  010ABC  0E01               	movlw	high _myPANID
 18850  010ABE  0101               	movlb	1	; () banked
 18851  010AC0  6F8D               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18852  010AC2  ECFC  F0B7         	call	_MiMAC_SetAltAddress	;wreg free
 18853                           
 18854                           ;miwi_mesh.c: 1600: MiWiStateMachine.bits.memberOfNetwork = 0;
 18855  010AC6  0101               	movlb	1	; () banked
 18856  010AC8  9338               	bcf	_MiWiStateMachine& (0+255),1,b
 18857                           
 18858                           ; BSR set to: 1
 18859                           ;miwi_mesh.c: 1763: }
 18860                           
 18861                           ; BSR set to: 1
 18862                           ;miwi_mesh.c: 1762: break;
 18863                           
 18864                           ;miwi_mesh.c: 1761: default:
 18865                           
 18866                           ; BSR set to: 1
 18867                           ;miwi_mesh.c: 1606: }
 18868                           ;miwi_mesh.c: 1609: }
 18869                           ;miwi_mesh.c: 1610: break;
 18870  010ACA  D019               	goto	l601
 18871  010ACC                     l12189:
 18872                           
 18873                           ; BSR set to: 1
 18874  010ACC  C119  FFD9         	movff	_MACRxPacket+3,fsr2l
 18875  010AD0  C11A  FFDA         	movff	_MACRxPacket+4,fsr2h
 18876  010AD4  50DF               	movf	indf2,w,c
 18877                           
 18878                           ; Switch size 1, requested type "space"
 18879                           ; Number of cases is 2, Range of values is 2 to 3
 18880                           ; switch strategies available:
 18881                           ; Name         Instructions Cycles
 18882                           ; simple_byte            7     4 (average)
 18883                           ;	Chosen strategy is simple_byte
 18884  010AD6  0A02               	xorlw	2	; case 2
 18885  010AD8  B4D8               	btfsc	status,2,c
 18886  010ADA  D6FF               	goto	l12117
 18887  010ADC  0A01               	xorlw	1	; case 3
 18888  010ADE  B4D8               	btfsc	status,2,c
 18889  010AE0  D789               	goto	l12153
 18890                           
 18891                           ; BSR set to: 1
 18892                           ;miwi_mesh.c: 1769: }
 18893                           
 18894                           ; BSR set to: 1
 18895                           ;miwi_mesh.c: 1767: break;
 18896                           
 18897                           ;miwi_mesh.c: 1766: default:
 18898                           
 18899                           ; BSR set to: 1
 18900                           ;miwi_mesh.c: 1764: break;
 18901  010AE2  D00D               	goto	l601
 18902  010AE4                     l12193:
 18903                           
 18904                           ; BSR set to: 1
 18905  010AE4  0101               	movlb	1	; () banked
 18906  010AE6  5116               	movf	_MACRxPacket& (0+255),w,b
 18907  010AE8  0B03               	andlw	3
 18908                           
 18909                           ; Switch size 1, requested type "space"
 18910                           ; Number of cases is 3, Range of values is 0 to 3
 18911                           ; switch strategies available:
 18912                           ; Name         Instructions Cycles
 18913                           ; simple_byte           10     6 (average)
 18914                           ;	Chosen strategy is simple_byte
 18915  010AEA  0A00               	xorlw	0	; case 0
 18916  010AEC  B4D8               	btfsc	status,2,c
 18917  010AEE  EF55  F080         	goto	l11875
 18918  010AF2  0A01               	xorlw	1	; case 1
 18919  010AF4  B4D8               	btfsc	status,2,c
 18920  010AF6  D7EA               	goto	l12189
 18921  010AF8  0A02               	xorlw	2	; case 3
 18922  010AFA  B4D8               	btfsc	status,2,c
 18923  010AFC  D58C               	goto	l12069
 18924  010AFE                     l601:
 18925                           
 18926                           ;miwi_mesh.c: 1771: if( MiWiStateMachine.bits.RxHasUserData == 0 )
 18927  010AFE  0101               	movlb	1	; () banked
 18928  010B00  A538               	btfss	_MiWiStateMachine& (0+255),2,b
 18929                           
 18930                           ; BSR set to: 1
 18931                           ;miwi_mesh.c: 1772: {
 18932                           ;miwi_mesh.c: 1773: MiMAC_DiscardPacket();
 18933  010B02  EC56  F0B7         	call	_MiMAC_DiscardPacket	;wreg free
 18934  010B06                     l12197:
 18935                           
 18936                           ;miwi_mesh.c: 1774: }
 18937                           ;miwi_mesh.c: 1775: }
 18938                           ;miwi_mesh.c: 1777: t1 = MiWi_TickGet();
 18939  010B06  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 18940  010B0A  C18A  F1DE         	movff	?_MiWi_TickGet,MiWiTasks@t1
 18941  010B0E  C18B  F1DF         	movff	?_MiWi_TickGet+1,MiWiTasks@t1+1
 18942  010B12  C18C  F1E0         	movff	?_MiWi_TickGet+2,MiWiTasks@t1+2
 18943  010B16  C18D  F1E1         	movff	?_MiWi_TickGet+3,MiWiTasks@t1+3
 18944                           
 18945                           ;miwi_mesh.c: 1844: for(i = 0; i < 4; i++)
 18946  010B1A  0E00               	movlw	0
 18947  010B1C  0101               	movlb	1	; () banked
 18948  010B1E  6FED               	movwf	MiWiTasks@i& (0+255),b
 18949  010B20                     l12201:
 18950                           
 18951                           ; BSR set to: 1
 18952  010B20  0E03               	movlw	3
 18953  010B22  0101               	movlb	1	; () banked
 18954  010B24  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 18955  010B26  D001               	goto	l12205
 18956  010B28  D067               	goto	l672
 18957  010B2A                     l12205:
 18958                           
 18959                           ; BSR set to: 1
 18960                           ;miwi_mesh.c: 1845: {
 18961                           ;miwi_mesh.c: 1846: if( BroadcastRecords[i].RxCounter > 0 )
 18962  010B2A  0101               	movlb	1	; () banked
 18963  010B2C  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18964  010B2E  0D08               	mullw	8
 18965  010B30  0E03               	movlw	3
 18966  010B32  26F3               	addwf	prodl,f,c
 18967  010B34  0E00               	movlw	0
 18968  010B36  22F4               	addwfc	prodh,f,c
 18969  010B38  0E26               	movlw	low _BroadcastRecords
 18970  010B3A  24F3               	addwf	prodl,w,c
 18971  010B3C  6ED9               	movwf	fsr2l,c
 18972  010B3E  0E00               	movlw	high _BroadcastRecords
 18973  010B40  20F4               	addwfc	prodh,w,c
 18974  010B42  6EDA               	movwf	fsr2h,c
 18975  010B44  50DF               	movf	indf2,w,c
 18976  010B46  B4D8               	btfsc	status,2,c
 18977  010B48  D054               	goto	l12211
 18978                           
 18979                           ; BSR set to: 1
 18980                           ;miwi_mesh.c: 1847: {
 18981                           ;miwi_mesh.c: 1848: if( (t1.Val - BroadcastRecords[i].StartTick.Val) > (((uint32_t)(1600
      +                          0000)/32)) )
 18982  010B4A  0101               	movlb	1	; () banked
 18983  010B4C  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18984  010B4E  0D08               	mullw	8
 18985  010B50  0E04               	movlw	4
 18986  010B52  26F3               	addwf	prodl,f,c
 18987  010B54  0E00               	movlw	0
 18988  010B56  22F4               	addwfc	prodh,f,c
 18989  010B58  0E26               	movlw	low _BroadcastRecords
 18990  010B5A  24F3               	addwf	prodl,w,c
 18991  010B5C  6ED9               	movwf	fsr2l,c
 18992  010B5E  0E00               	movlw	high _BroadcastRecords
 18993  010B60  20F4               	addwfc	prodh,w,c
 18994  010B62  6EDA               	movwf	fsr2h,c
 18995  010B64  CFDE F1D1          	movff	postinc2,??_MiWiTasks
 18996  010B68  CFDE F1D2          	movff	postinc2,??_MiWiTasks+1
 18997  010B6C  CFDE F1D3          	movff	postinc2,??_MiWiTasks+2
 18998  010B70  CFDE F1D4          	movff	postinc2,??_MiWiTasks+3
 18999  010B74  0101               	movlb	1	; () banked
 19000  010B76  1FD1               	comf	??_MiWiTasks& (0+255),f,b
 19001  010B78  1FD2               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19002  010B7A  1FD3               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19003  010B7C  1FD4               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19004  010B7E  2BD1               	incf	??_MiWiTasks& (0+255),f,b
 19005  010B80  0E00               	movlw	0
 19006  010B82  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19007  010B84  23D3               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19008  010B86  23D4               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19009  010B88  0101               	movlb	1	; () banked
 19010  010B8A  51DE               	movf	MiWiTasks@t1& (0+255),w,b
 19011  010B8C  0101               	movlb	1	; () banked
 19012  010B8E  25D1               	addwf	??_MiWiTasks& (0+255),w,b
 19013  010B90  0101               	movlb	1	; () banked
 19014  010B92  6FD5               	movwf	(??_MiWiTasks+4)& (0+255),b
 19015  010B94  0101               	movlb	1	; () banked
 19016  010B96  51DF               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 19017  010B98  0101               	movlb	1	; () banked
 19018  010B9A  21D2               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19019  010B9C  0101               	movlb	1	; () banked
 19020  010B9E  6FD6               	movwf	(??_MiWiTasks+5)& (0+255),b
 19021  010BA0  0101               	movlb	1	; () banked
 19022  010BA2  51E0               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 19023  010BA4  0101               	movlb	1	; () banked
 19024  010BA6  21D3               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19025  010BA8  0101               	movlb	1	; () banked
 19026  010BAA  6FD7               	movwf	(??_MiWiTasks+6)& (0+255),b
 19027  010BAC  0101               	movlb	1	; () banked
 19028  010BAE  51E1               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 19029  010BB0  0101               	movlb	1	; () banked
 19030  010BB2  21D4               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19031  010BB4  0101               	movlb	1	; () banked
 19032  010BB6  6FD8               	movwf	(??_MiWiTasks+7)& (0+255),b
 19033  010BB8  0101               	movlb	1	; () banked
 19034  010BBA  51D8               	movf	(??_MiWiTasks+7)& (0+255),w,b
 19035  010BBC  E10B               	bnz	u14280
 19036  010BBE  0E21               	movlw	33
 19037  010BC0  0101               	movlb	1	; () banked
 19038  010BC2  5DD5               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 19039  010BC4  0EA1               	movlw	161
 19040  010BC6  0101               	movlb	1	; () banked
 19041  010BC8  59D6               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 19042  010BCA  0E07               	movlw	7
 19043  010BCC  0101               	movlb	1	; () banked
 19044  010BCE  59D7               	subwfb	(??_MiWiTasks+6)& (0+255),w,b
 19045  010BD0  A0D8               	btfss	status,0,c
 19046  010BD2  D00F               	goto	l12211
 19047  010BD4                     u14280:
 19048                           
 19049                           ; BSR set to: 1
 19050                           ;miwi_mesh.c: 1849: {
 19051                           ;miwi_mesh.c: 1850: BroadcastRecords[i].RxCounter = 0;
 19052  010BD4  0101               	movlb	1	; () banked
 19053  010BD6  51ED               	movf	MiWiTasks@i& (0+255),w,b
 19054  010BD8  0D08               	mullw	8
 19055  010BDA  0E03               	movlw	3
 19056  010BDC  26F3               	addwf	prodl,f,c
 19057  010BDE  0E00               	movlw	0
 19058  010BE0  22F4               	addwfc	prodh,f,c
 19059  010BE2  0E26               	movlw	low _BroadcastRecords
 19060  010BE4  24F3               	addwf	prodl,w,c
 19061  010BE6  6ED9               	movwf	fsr2l,c
 19062  010BE8  0E00               	movlw	high _BroadcastRecords
 19063  010BEA  20F4               	addwfc	prodh,w,c
 19064  010BEC  6EDA               	movwf	fsr2h,c
 19065  010BEE  0E00               	movlw	0
 19066  010BF0  6EDF               	movwf	indf2,c
 19067  010BF2                     l12211:
 19068                           
 19069                           ; BSR set to: 1
 19070  010BF2  0101               	movlb	1	; () banked
 19071  010BF4  2BED               	incf	MiWiTasks@i& (0+255),f,b
 19072  010BF6  D794               	goto	l12201
 19073  010BF8                     l672:
 19074                           
 19075                           ; BSR set to: 1
 19076                           ;miwi_mesh.c: 1851: }
 19077                           ;miwi_mesh.c: 1852: }
 19078                           ;miwi_mesh.c: 1853: }
 19079                           ;miwi_mesh.c: 1857: if(openSocketInfo.status.bits.requestIsOpen)
 19080  010BF8  0101               	movlb	1	; () banked
 19081  010BFA  A300               	btfss	_openSocketInfo& (0+255),1,b
 19082  010BFC  0012               	return	
 19083                           
 19084                           ; BSR set to: 1
 19085                           ;miwi_mesh.c: 1858: {
 19086                           ;miwi_mesh.c: 1859: if(openSocketInfo.status.bits.matchFound)
 19087  010BFE  0101               	movlb	1	; () banked
 19088  010C00  B100               	btfsc	_openSocketInfo& (0+255),0,b
 19089  010C02  0012               	return	
 19090                           
 19091                           ; BSR set to: 1
 19092                           ;miwi_mesh.c: 1894: else
 19093                           ;miwi_mesh.c: 1895: {
 19094                           ;miwi_mesh.c: 1896: t2.Val = (t1.Val - openSocketInfo.socketStart.Val);
 19095                           
 19096                           ; BSR set to: 1
 19097                           
 19098                           ; BSR set to: 1
 19099                           ;miwi_mesh.c: 1860: {
 19100                           ;miwi_mesh.c: 1893: }
 19101  010C04  C108  F1D1         	movff	_openSocketInfo+8,??_MiWiTasks
 19102  010C08  C109  F1D2         	movff	_openSocketInfo+9,??_MiWiTasks+1
 19103  010C0C  C10A  F1D3         	movff	_openSocketInfo+10,??_MiWiTasks+2
 19104  010C10  C10B  F1D4         	movff	_openSocketInfo+11,??_MiWiTasks+3
 19105  010C14  0101               	movlb	1	; () banked
 19106  010C16  1FD1               	comf	??_MiWiTasks& (0+255),f,b
 19107  010C18  1FD2               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19108  010C1A  1FD3               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19109  010C1C  1FD4               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19110  010C1E  2BD1               	incf	??_MiWiTasks& (0+255),f,b
 19111  010C20  0E00               	movlw	0
 19112  010C22  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19113  010C24  23D3               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19114  010C26  23D4               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19115  010C28  0101               	movlb	1	; () banked
 19116  010C2A  51DE               	movf	MiWiTasks@t1& (0+255),w,b
 19117  010C2C  0101               	movlb	1	; () banked
 19118  010C2E  25D1               	addwf	??_MiWiTasks& (0+255),w,b
 19119  010C30  0101               	movlb	1	; () banked
 19120  010C32  6FD9               	movwf	MiWiTasks@t2& (0+255),b
 19121  010C34  0101               	movlb	1	; () banked
 19122  010C36  51DF               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 19123  010C38  0101               	movlb	1	; () banked
 19124  010C3A  21D2               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19125  010C3C  0101               	movlb	1	; () banked
 19126  010C3E  6FDA               	movwf	(MiWiTasks@t2+1)& (0+255),b
 19127  010C40  0101               	movlb	1	; () banked
 19128  010C42  51E0               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 19129  010C44  0101               	movlb	1	; () banked
 19130  010C46  21D3               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19131  010C48  0101               	movlb	1	; () banked
 19132  010C4A  6FDB               	movwf	(MiWiTasks@t2+2)& (0+255),b
 19133  010C4C  0101               	movlb	1	; () banked
 19134  010C4E  51E1               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 19135  010C50  0101               	movlb	1	; () banked
 19136  010C52  21D4               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19137  010C54  0101               	movlb	1	; () banked
 19138  010C56  6FDC               	movwf	(MiWiTasks@t2+3)& (0+255),b
 19139                           
 19140                           ;miwi_mesh.c: 1898: if(t2.Val > (((uint32_t)(16000000)/32) * 3))
 19141  010C58  0101               	movlb	1	; () banked
 19142  010C5A  51DC               	movf	(MiWiTasks@t2+3)& (0+255),w,b
 19143  010C5C  E10B               	bnz	u14320
 19144  010C5E  0E61               	movlw	97
 19145  010C60  0101               	movlb	1	; () banked
 19146  010C62  5DD9               	subwf	MiWiTasks@t2& (0+255),w,b
 19147  010C64  0EE3               	movlw	227
 19148  010C66  0101               	movlb	1	; () banked
 19149  010C68  59DA               	subwfb	(MiWiTasks@t2+1)& (0+255),w,b
 19150  010C6A  0E16               	movlw	22
 19151  010C6C  0101               	movlb	1	; () banked
 19152  010C6E  59DB               	subwfb	(MiWiTasks@t2+2)& (0+255),w,b
 19153  010C70  A0D8               	btfss	status,0,c
 19154  010C72  0012               	return	
 19155  010C74                     u14320:
 19156                           
 19157                           ; BSR set to: 1
 19158                           ;miwi_mesh.c: 1899: {
 19159                           ;miwi_mesh.c: 1901: openSocketInfo.status.bits.requestIsOpen = 0;
 19160  010C74  0101               	movlb	1	; () banked
 19161  010C76  9300               	bcf	_openSocketInfo& (0+255),1,b
 19162                           
 19163                           ; BSR set to: 1
 19164                           
 19165                           ; BSR set to: 1
 19166  010C78  0012               	return	
 19167  010C7A                     __end_of_MiWiTasks:
 19168                           	opt stack 0
 19169                           tblptru	equ	0xFF8
 19170                           tblptrh	equ	0xFF7
 19171                           tblptrl	equ	0xFF6
 19172                           tablat	equ	0xFF5
 19173                           prodh	equ	0xFF4
 19174                           prodl	equ	0xFF3
 19175                           intcon	equ	0xFF2
 19176                           intcon2	equ	0xFF1
 19177                           intcon3	equ	0xFF0
 19178                           indf0	equ	0xFEF
 19179                           postinc0	equ	0xFEE
 19180                           plusw0	equ	0xFEB
 19181                           fsr0h	equ	0xFEA
 19182                           fsr0l	equ	0xFE9
 19183                           wreg	equ	0xFE8
 19184                           indf1	equ	0xFE7
 19185                           postinc1	equ	0xFE6
 19186                           postdec1	equ	0xFE5
 19187                           fsr1h	equ	0xFE2
 19188                           fsr1l	equ	0xFE1
 19189                           indf2	equ	0xFDF
 19190                           postinc2	equ	0xFDE
 19191                           postdec2	equ	0xFDD
 19192                           plusw2	equ	0xFDB
 19193                           fsr2h	equ	0xFDA
 19194                           fsr2l	equ	0xFD9
 19195                           status	equ	0xFD8
 19196                           
 19197 ;; *************** function _MiMAC_SetAltAddress *****************
 19198 ;; Defined at:
 19199 ;;		line 445 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19200 ;; Parameters:    Size  Location     Type
 19201 ;;  Address         2    0[BANK1 ] PTR unsigned char 
 19202 ;;		 -> tempShortAddress(2), myShortAddress(2), 
 19203 ;;  PANID           2    2[BANK1 ] PTR unsigned char 
 19204 ;;		 -> myPANID(2), 
 19205 ;; Auto vars:     Size  Location     Type
 19206 ;;		None
 19207 ;; Return value:  Size  Location     Type
 19208 ;;                  1    wreg      unsigned char 
 19209 ;; Registers used:
 19210 ;;		None
 19211 ;; Tracked objects:
 19212 ;;		On entry : 0/0
 19213 ;;		On exit  : 0/0
 19214 ;;		Unchanged: 0/0
 19215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19216 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19219 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19220 ;;Total ram usage:        4 bytes
 19221 ;; Hardware stack levels used:    1
 19222 ;; Hardware stack levels required when called:    9
 19223 ;; This function calls:
 19224 ;;		Nothing
 19225 ;; This function is called by:
 19226 ;;		_MiWiTasks
 19227 ;;		_MiApp_ProtocolInit
 19228 ;;		_MiApp_EstablishConnection
 19229 ;;		_MiApp_RemoveConnection
 19230 ;; This function uses a non-reentrant model
 19231 ;;
 19232                           
 19233                           	psect	text57
 19234  016FF8                     __ptext57:
 19235                           	opt stack 0
 19236  016FF8                     _MiMAC_SetAltAddress:
 19237                           	opt stack 16
 19238                           
 19239                           ;drv_mrf_miwi_89xa.c: 447: return 0;
 19240                           ;	Return value of _MiMAC_SetAltAddress is never used
 19241                           
 19242                           ; BSR set to: 1
 19243                           ;incstack = 0
 19244  016FF8  0012               	return		;funcret
 19245  016FFA                     __end_of_MiMAC_SetAltAddress:
 19246                           	opt stack 0
 19247                           tblptru	equ	0xFF8
 19248                           tblptrh	equ	0xFF7
 19249                           tblptrl	equ	0xFF6
 19250                           tablat	equ	0xFF5
 19251                           prodh	equ	0xFF4
 19252                           prodl	equ	0xFF3
 19253                           intcon	equ	0xFF2
 19254                           intcon2	equ	0xFF1
 19255                           intcon3	equ	0xFF0
 19256                           indf0	equ	0xFEF
 19257                           postinc0	equ	0xFEE
 19258                           plusw0	equ	0xFEB
 19259                           fsr0h	equ	0xFEA
 19260                           fsr0l	equ	0xFE9
 19261                           wreg	equ	0xFE8
 19262                           indf1	equ	0xFE7
 19263                           postinc1	equ	0xFE6
 19264                           postdec1	equ	0xFE5
 19265                           fsr1h	equ	0xFE2
 19266                           fsr1l	equ	0xFE1
 19267                           indf2	equ	0xFDF
 19268                           postinc2	equ	0xFDE
 19269                           postdec2	equ	0xFDD
 19270                           plusw2	equ	0xFDB
 19271                           fsr2h	equ	0xFDA
 19272                           fsr2l	equ	0xFD9
 19273                           status	equ	0xFD8
 19274                           
 19275 ;; *************** function _MiMAC_SendPacket *****************
 19276 ;; Defined at:
 19277 ;;		line 735 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19278 ;; Parameters:    Size  Location     Type
 19279 ;;  transParam      3   47[BANK1 ] struct .
 19280 ;;  MACPayload      2   50[BANK1 ] PTR unsigned char 
 19281 ;;		 -> TxBuffer(43), 
 19282 ;;  MACPayloadLe    1   52[BANK1 ] unsigned char 
 19283 ;; Auto vars:     Size  Location     Type
 19284 ;;  headerLen       1   54[BANK1 ] unsigned char 
 19285 ;;  i               1   56[BANK1 ] unsigned char 
 19286 ;;  TxIndex         1   55[BANK1 ] unsigned char 
 19287 ;; Return value:  Size  Location     Type
 19288 ;;                  1    wreg      unsigned char 
 19289 ;; Registers used:
 19290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19291 ;; Tracked objects:
 19292 ;;		On entry : 0/0
 19293 ;;		On exit  : 0/0
 19294 ;;		Unchanged: 0/0
 19295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19296 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19297 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19298 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19299 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19300 ;;Total ram usage:       10 bytes
 19301 ;; Hardware stack levels used:    1
 19302 ;; Hardware stack levels required when called:   13
 19303 ;; This function calls:
 19304 ;;		_CCM_Enc
 19305 ;;		_TxPacket
 19306 ;; This function is called by:
 19307 ;;		_MiWiTasks
 19308 ;;		_SendMACPacket
 19309 ;;		_MiApp_UnicastAddress
 19310 ;;		_MiApp_BroadcastPacket
 19311 ;;		_MiApp_UnicastConnection
 19312 ;;		_UnicastShortAddress
 19313 ;;		_MiApp_RemoveConnection
 19314 ;; This function uses a non-reentrant model
 19315 ;;
 19316                           
 19317                           	psect	text58
 19318  013592                     __ptext58:
 19319                           	opt stack 0
 19320  013592                     _MiMAC_SendPacket:
 19321                           	opt stack 14
 19322                           
 19323                           ;drv_mrf_miwi_89xa.c: 739: uint8_t i;
 19324                           ;drv_mrf_miwi_89xa.c: 740: uint8_t TxIndex;
 19325                           ;drv_mrf_miwi_89xa.c: 742: if( MACPayloadLen > 32 )
 19326                           
 19327                           ;incstack = 0
 19328  013592  0E20               	movlw	32
 19329  013594  0101               	movlb	1	; () banked
 19330  013596  65BE               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 19331  013598  D002               	goto	l11593
 19332                           
 19333                           ; BSR set to: 1
 19334                           ;drv_mrf_miwi_89xa.c: 743: {
 19335                           ;drv_mrf_miwi_89xa.c: 744: return 0;
 19336  01359A  0E00               	movlw	0
 19337                           
 19338                           ; BSR set to: 1
 19339  01359C  0012               	return	
 19340  01359E                     l11593:
 19341                           
 19342                           ; BSR set to: 1
 19343                           ;drv_mrf_miwi_89xa.c: 745: }
 19344                           ;drv_mrf_miwi_89xa.c: 750: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 19345  01359E  0101               	movlb	1	; () banked
 19346  0135A0  B5B9               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 19347  0135A2  D004               	goto	u13200
 19348  0135A4  0101               	movlb	1	; () banked
 19349  0135A6  6BBF               	clrf	??_MiMAC_SendPacket& (0+255),b
 19350  0135A8  2BBF               	incf	??_MiMAC_SendPacket& (0+255),f,b
 19351  0135AA  D002               	goto	u13218
 19352  0135AC                     u13200:
 19353  0135AC  0101               	movlb	1	; () banked
 19354  0135AE  6BBF               	clrf	??_MiMAC_SendPacket& (0+255),b
 19355  0135B0                     u13218:
 19356  0135B0  0101               	movlb	1	; () banked
 19357  0135B2  3BBF               	swapf	??_MiMAC_SendPacket& (0+255),f,b
 19358  0135B4  47BF               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 19359  0135B6  47BF               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 19360  0135B8  0101               	movlb	1	; () banked
 19361  0135BA  51B9               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 19362  0135BC  0101               	movlb	1	; () banked
 19363  0135BE  19BF               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 19364  0135C0  0BBF               	andlw	-65
 19365  0135C2  19BF               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 19366  0135C4  0101               	movlb	1	; () banked
 19367  0135C6  6FB9               	movwf	MiMAC_SendPacket@transParam& (0+255),b
 19368                           
 19369                           ;drv_mrf_miwi_89xa.c: 757: if( transParam.flags.bits.packetType == 0x01 )
 19370  0135C8  0101               	movlb	1	; () banked
 19371  0135CA  51B9               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 19372  0135CC  0B03               	andlw	3
 19373  0135CE  06E8               	decf	wreg,f,c
 19374  0135D0  A4D8               	btfss	status,2,c
 19375  0135D2  D002               	goto	l318
 19376                           
 19377                           ; BSR set to: 1
 19378                           ;drv_mrf_miwi_89xa.c: 758: {
 19379                           ;drv_mrf_miwi_89xa.c: 759: transParam.flags.bits.sourcePrsnt = 1;
 19380  0135D4  0101               	movlb	1	; () banked
 19381  0135D6  8FB9               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 19382  0135D8                     l318:
 19383                           
 19384                           ; BSR set to: 1
 19385                           ;drv_mrf_miwi_89xa.c: 760: }
 19386                           ;drv_mrf_miwi_89xa.c: 762: MACTxBuffer[0] = transParam.flags.Val;
 19387  0135D8  C1B9  F2A0         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 19388                           
 19389                           ;drv_mrf_miwi_89xa.c: 763: MACTxBuffer[1] = MACSeq++;
 19390  0135DC  C0B4  F2A1         	movff	_MACSeq,_MACTxBuffer+1	;volatile
 19391                           
 19392                           ; BSR set to: 1
 19393  0135E0  0100               	movlb	0	; () banked
 19394  0135E2  2BB4               	incf	_MACSeq& (0+255),f,b
 19395                           
 19396                           ; BSR set to: 0
 19397                           ;drv_mrf_miwi_89xa.c: 766: TxIndex = 2;
 19398  0135E4  0E02               	movlw	2
 19399  0135E6  0101               	movlb	1	; () banked
 19400  0135E8  6FC1               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
 19401                           
 19402                           ; BSR set to: 1
 19403                           ;drv_mrf_miwi_89xa.c: 768: if( transParam.flags.bits.destPrsnt )
 19404  0135EA  0101               	movlb	1	; () banked
 19405  0135EC  ADB9               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 19406  0135EE  D02B               	goto	l323
 19407                           
 19408                           ; BSR set to: 1
 19409                           ;drv_mrf_miwi_89xa.c: 769: {
 19410                           ;drv_mrf_miwi_89xa.c: 770: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 19411  0135F0  0E00               	movlw	0
 19412  0135F2  0101               	movlb	1	; () banked
 19413  0135F4  6FC2               	movwf	MiMAC_SendPacket@i& (0+255),b
 19414  0135F6  D01A               	goto	l11611
 19415  0135F8                     l11605:
 19416                           
 19417                           ; BSR set to: 1
 19418                           ;drv_mrf_miwi_89xa.c: 771: {
 19419                           ;drv_mrf_miwi_89xa.c: 772: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 19420  0135F8  0101               	movlb	1	; () banked
 19421  0135FA  51C2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19422  0135FC  0D01               	mullw	1
 19423  0135FE  50F3               	movf	prodl,w,c
 19424  013600  0101               	movlb	1	; () banked
 19425  013602  25BA               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 19426  013604  6ED9               	movwf	fsr2l,c
 19427  013606  50F4               	movf	prodh,w,c
 19428  013608  0101               	movlb	1	; () banked
 19429  01360A  21BB               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 19430  01360C  6EDA               	movwf	fsr2h,c
 19431  01360E  0101               	movlb	1	; () banked
 19432  013610  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19433  013612  0D01               	mullw	1
 19434  013614  0EA0               	movlw	low _MACTxBuffer
 19435  013616  24F3               	addwf	prodl,w,c
 19436  013618  6EE1               	movwf	fsr1l,c
 19437  01361A  0E02               	movlw	high _MACTxBuffer
 19438  01361C  20F4               	addwfc	prodh,w,c
 19439  01361E  6EE2               	movwf	fsr1h,c
 19440  013620  CFDF FFE7          	movff	indf2,indf1
 19441                           
 19442                           ; BSR set to: 1
 19443  013624  0101               	movlb	1	; () banked
 19444  013626  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19445                           
 19446                           ; BSR set to: 1
 19447  013628  0101               	movlb	1	; () banked
 19448  01362A  2BC2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19449  01362C                     l11611:
 19450                           
 19451                           ; BSR set to: 1
 19452  01362C  0100               	movlb	0	; () banked
 19453  01362E  31AF               	rrcf	_MACInitParams& (0+255),w,b
 19454  013630  32E8               	rrcf	wreg,f,c
 19455  013632  32E8               	rrcf	wreg,f,c
 19456  013634  0B0F               	andlw	15
 19457  013636  0101               	movlb	1	; () banked
 19458  013638  6FBF               	movwf	??_MiMAC_SendPacket& (0+255),b
 19459  01363A  0101               	movlb	1	; () banked
 19460  01363C  51BF               	movf	??_MiMAC_SendPacket& (0+255),w,b
 19461  01363E  0101               	movlb	1	; () banked
 19462  013640  5DC2               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19463  013642  A0D8               	btfss	status,0,c
 19464  013644  D7D9               	goto	l11605
 19465  013646                     l323:
 19466                           
 19467                           ; BSR set to: 1
 19468                           ;drv_mrf_miwi_89xa.c: 778: }
 19469                           ;drv_mrf_miwi_89xa.c: 780: if( transParam.flags.bits.sourcePrsnt )
 19470  013646  0101               	movlb	1	; () banked
 19471  013648  AFB9               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 19472  01364A  D02B               	goto	l324
 19473                           
 19474                           ; BSR set to: 1
 19475                           ;drv_mrf_miwi_89xa.c: 781: {
 19476                           ;drv_mrf_miwi_89xa.c: 782: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 19477  01364C  0E00               	movlw	0
 19478  01364E  0101               	movlb	1	; () banked
 19479  013650  6FC2               	movwf	MiMAC_SendPacket@i& (0+255),b
 19480  013652  D01A               	goto	l11621
 19481  013654                     l11615:
 19482                           
 19483                           ; BSR set to: 1
 19484                           ;drv_mrf_miwi_89xa.c: 783: {
 19485                           ;drv_mrf_miwi_89xa.c: 784: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 19486  013654  0101               	movlb	1	; () banked
 19487  013656  51C2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19488  013658  0D01               	mullw	1
 19489  01365A  50F3               	movf	prodl,w,c
 19490  01365C  0100               	movlb	0	; () banked
 19491  01365E  25B0               	addwf	(_MACInitParams+1)& (0+255),w,b
 19492  013660  6ED9               	movwf	fsr2l,c
 19493  013662  50F4               	movf	prodh,w,c
 19494  013664  0100               	movlb	0	; () banked
 19495  013666  21B1               	addwfc	(_MACInitParams+2)& (0+255),w,b
 19496  013668  6EDA               	movwf	fsr2h,c
 19497  01366A  0101               	movlb	1	; () banked
 19498  01366C  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19499  01366E  0D01               	mullw	1
 19500  013670  0EA0               	movlw	low _MACTxBuffer
 19501  013672  24F3               	addwf	prodl,w,c
 19502  013674  6EE1               	movwf	fsr1l,c
 19503  013676  0E02               	movlw	high _MACTxBuffer
 19504  013678  20F4               	addwfc	prodh,w,c
 19505  01367A  6EE2               	movwf	fsr1h,c
 19506  01367C  CFDF FFE7          	movff	indf2,indf1
 19507                           
 19508                           ; BSR set to: 1
 19509  013680  0101               	movlb	1	; () banked
 19510  013682  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19511                           
 19512                           ; BSR set to: 1
 19513  013684  0101               	movlb	1	; () banked
 19514  013686  2BC2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19515  013688                     l11621:
 19516                           
 19517                           ; BSR set to: 1
 19518  013688  0100               	movlb	0	; () banked
 19519  01368A  31AF               	rrcf	_MACInitParams& (0+255),w,b
 19520  01368C  32E8               	rrcf	wreg,f,c
 19521  01368E  32E8               	rrcf	wreg,f,c
 19522  013690  0B0F               	andlw	15
 19523  013692  0101               	movlb	1	; () banked
 19524  013694  6FBF               	movwf	??_MiMAC_SendPacket& (0+255),b
 19525  013696  0101               	movlb	1	; () banked
 19526  013698  51BF               	movf	??_MiMAC_SendPacket& (0+255),w,b
 19527  01369A  0101               	movlb	1	; () banked
 19528  01369C  5DC2               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19529  01369E  A0D8               	btfss	status,0,c
 19530  0136A0  D7D9               	goto	l11615
 19531  0136A2                     l324:
 19532                           
 19533                           ; BSR set to: 1
 19534                           ;drv_mrf_miwi_89xa.c: 785: }
 19535                           ;drv_mrf_miwi_89xa.c: 787: }
 19536                           ;drv_mrf_miwi_89xa.c: 790: if( transParam.flags.bits.secEn )
 19537  0136A2  0101               	movlb	1	; () banked
 19538  0136A4  A7B9               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 19539  0136A6  D071               	goto	l11659
 19540                           
 19541                           ; BSR set to: 1
 19542                           ;drv_mrf_miwi_89xa.c: 791: {
 19543                           ;drv_mrf_miwi_89xa.c: 793: for(i = 0; i < 4; i++)
 19544  0136A8  0E00               	movlw	0
 19545  0136AA  0101               	movlb	1	; () banked
 19546  0136AC  6FC2               	movwf	MiMAC_SendPacket@i& (0+255),b
 19547  0136AE                     l11625:
 19548                           
 19549                           ; BSR set to: 1
 19550  0136AE  0E03               	movlw	3
 19551  0136B0  0101               	movlb	1	; () banked
 19552  0136B2  65C2               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 19553  0136B4  D001               	goto	l11629
 19554  0136B6  D019               	goto	l11637
 19555  0136B8                     l11629:
 19556                           
 19557                           ; BSR set to: 1
 19558                           ;drv_mrf_miwi_89xa.c: 794: {
 19559                           ;drv_mrf_miwi_89xa.c: 795: MACTxBuffer[TxIndex++] = OutgoingFrameCounter.v[i];
 19560  0136B8  0101               	movlb	1	; () banked
 19561  0136BA  51C2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19562  0136BC  0D01               	mullw	1
 19563  0136BE  0EAB               	movlw	low _OutgoingFrameCounter
 19564  0136C0  24F3               	addwf	prodl,w,c
 19565  0136C2  6ED9               	movwf	fsr2l,c
 19566  0136C4  0E00               	movlw	high _OutgoingFrameCounter
 19567  0136C6  20F4               	addwfc	prodh,w,c
 19568  0136C8  6EDA               	movwf	fsr2h,c
 19569  0136CA  0101               	movlb	1	; () banked
 19570  0136CC  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19571  0136CE  0D01               	mullw	1
 19572  0136D0  0EA0               	movlw	low _MACTxBuffer
 19573  0136D2  24F3               	addwf	prodl,w,c
 19574  0136D4  6EE1               	movwf	fsr1l,c
 19575  0136D6  0E02               	movlw	high _MACTxBuffer
 19576  0136D8  20F4               	addwfc	prodh,w,c
 19577  0136DA  6EE2               	movwf	fsr1h,c
 19578  0136DC  CFDF FFE7          	movff	indf2,indf1
 19579                           
 19580                           ; BSR set to: 1
 19581  0136E0  0101               	movlb	1	; () banked
 19582  0136E2  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19583                           
 19584                           ; BSR set to: 1
 19585  0136E4  0101               	movlb	1	; () banked
 19586  0136E6  2BC2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19587  0136E8  D7E2               	goto	l11625
 19588  0136EA                     l11637:
 19589                           
 19590                           ; BSR set to: 1
 19591                           ;drv_mrf_miwi_89xa.c: 796: }
 19592                           ;drv_mrf_miwi_89xa.c: 797: OutgoingFrameCounter.Val++;
 19593  0136EA  0E01               	movlw	1
 19594  0136EC  0100               	movlb	0	; () banked
 19595  0136EE  27AB               	addwf	_OutgoingFrameCounter& (0+255),f,b
 19596  0136F0  0E00               	movlw	0
 19597  0136F2  23AC               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 19598  0136F4  23AD               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 19599  0136F6  23AE               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 19600                           
 19601                           ; BSR set to: 0
 19602                           ;drv_mrf_miwi_89xa.c: 804: MACTxBuffer[TxIndex++] = 0x00;
 19603  0136F8  0101               	movlb	1	; () banked
 19604  0136FA  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19605  0136FC  0D01               	mullw	1
 19606  0136FE  0EA0               	movlw	low _MACTxBuffer
 19607  013700  24F3               	addwf	prodl,w,c
 19608  013702  6ED9               	movwf	fsr2l,c
 19609  013704  0E02               	movlw	high _MACTxBuffer
 19610  013706  20F4               	addwfc	prodh,w,c
 19611  013708  6EDA               	movwf	fsr2h,c
 19612  01370A  0E00               	movlw	0
 19613  01370C  6EDF               	movwf	indf2,c
 19614                           
 19615                           ; BSR set to: 1
 19616  01370E  0101               	movlb	1	; () banked
 19617  013710  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19618                           
 19619                           ; BSR set to: 1
 19620                           ;drv_mrf_miwi_89xa.c: 806: {
 19621                           ;drv_mrf_miwi_89xa.c: 807: uint8_t headerLen;
 19622                           ;drv_mrf_miwi_89xa.c: 809: headerLen = TxIndex;
 19623  013712  C1C1  F1C0         	movff	MiMAC_SendPacket@TxIndex,MiMAC_SendPacket@headerLen
 19624                           
 19625                           ; BSR set to: 1
 19626                           ;drv_mrf_miwi_89xa.c: 811: for(i = 0; i < MACPayloadLen; i++)
 19627  013716  0E00               	movlw	0
 19628  013718  0101               	movlb	1	; () banked
 19629  01371A  6FC2               	movwf	MiMAC_SendPacket@i& (0+255),b
 19630  01371C  D01A               	goto	l11653
 19631  01371E                     l11647:
 19632                           
 19633                           ; BSR set to: 1
 19634                           ;drv_mrf_miwi_89xa.c: 812: {
 19635                           ;drv_mrf_miwi_89xa.c: 813: MACTxBuffer[TxIndex++] = MACPayload[i];
 19636  01371E  0101               	movlb	1	; () banked
 19637  013720  51C2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19638  013722  0D01               	mullw	1
 19639  013724  50F3               	movf	prodl,w,c
 19640  013726  0101               	movlb	1	; () banked
 19641  013728  25BC               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 19642  01372A  6ED9               	movwf	fsr2l,c
 19643  01372C  50F4               	movf	prodh,w,c
 19644  01372E  0101               	movlb	1	; () banked
 19645  013730  21BD               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 19646  013732  6EDA               	movwf	fsr2h,c
 19647  013734  0101               	movlb	1	; () banked
 19648  013736  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19649  013738  0D01               	mullw	1
 19650  01373A  0EA0               	movlw	low _MACTxBuffer
 19651  01373C  24F3               	addwf	prodl,w,c
 19652  01373E  6EE1               	movwf	fsr1l,c
 19653  013740  0E02               	movlw	high _MACTxBuffer
 19654  013742  20F4               	addwfc	prodh,w,c
 19655  013744  6EE2               	movwf	fsr1h,c
 19656  013746  CFDF FFE7          	movff	indf2,indf1
 19657                           
 19658                           ; BSR set to: 1
 19659  01374A  0101               	movlb	1	; () banked
 19660  01374C  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19661                           
 19662                           ; BSR set to: 1
 19663  01374E  0101               	movlb	1	; () banked
 19664  013750  2BC2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19665  013752                     l11653:
 19666                           
 19667                           ; BSR set to: 1
 19668  013752  0101               	movlb	1	; () banked
 19669  013754  51BE               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 19670  013756  0101               	movlb	1	; () banked
 19671  013758  5DC2               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19672  01375A  A0D8               	btfss	status,0,c
 19673  01375C  D7E0               	goto	l11647
 19674                           
 19675                           ; BSR set to: 1
 19676                           ;drv_mrf_miwi_89xa.c: 814: }
 19677                           ;drv_mrf_miwi_89xa.c: 834: CCM_Enc((uint8_t *)MACTxBuffer, headerLen, MACPayloadLen, key
      +                          );
 19678                           
 19679                           ; BSR set to: 1
 19680  01375E  0EA0               	movlw	low _MACTxBuffer
 19681  013760  0101               	movlb	1	; () banked
 19682  013762  6FAE               	movwf	CCM_Enc@text& (0+255),b
 19683  013764  0E02               	movlw	high _MACTxBuffer
 19684  013766  0101               	movlb	1	; () banked
 19685  013768  6FAF               	movwf	(CCM_Enc@text+1)& (0+255),b
 19686  01376A  C1C0  F1B0         	movff	MiMAC_SendPacket@headerLen,CCM_Enc@headerLen
 19687  01376E  C1BE  F1B1         	movff	MiMAC_SendPacket@MACPayloadLen,CCM_Enc@payloadLen
 19688  013772  0EC0               	movlw	low _key
 19689  013774  0101               	movlb	1	; () banked
 19690  013776  6FB2               	movwf	CCM_Enc@key& (0+255),b
 19691  013778  0E00               	movlw	high _key
 19692  01377A  0101               	movlb	1	; () banked
 19693  01377C  6FB3               	movwf	(CCM_Enc@key+1)& (0+255),b
 19694  01377E  EC86  F0A7         	call	_CCM_Enc	;wreg free
 19695                           
 19696                           ;drv_mrf_miwi_89xa.c: 835: TxIndex += 2;
 19697  013782  0E02               	movlw	2
 19698  013784  0101               	movlb	1	; () banked
 19699  013786  27C1               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19700                           
 19701                           ;drv_mrf_miwi_89xa.c: 842: }
 19702                           ;drv_mrf_miwi_89xa.c: 843: }
 19703  013788  D024               	goto	l11669
 19704  01378A                     l11659:
 19705                           
 19706                           ; BSR set to: 1
 19707                           ;drv_mrf_miwi_89xa.c: 844: else
 19708                           ;drv_mrf_miwi_89xa.c: 848: for(i = 0; i < MACPayloadLen; i++)
 19709  01378A  0E00               	movlw	0
 19710  01378C  0101               	movlb	1	; () banked
 19711  01378E  6FC2               	movwf	MiMAC_SendPacket@i& (0+255),b
 19712  013790  D01A               	goto	l11667
 19713  013792                     l11661:
 19714                           
 19715                           ; BSR set to: 1
 19716                           ;drv_mrf_miwi_89xa.c: 849: {
 19717                           ;drv_mrf_miwi_89xa.c: 850: MACTxBuffer[TxIndex++] = MACPayload[i];
 19718  013792  0101               	movlb	1	; () banked
 19719  013794  51C2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19720  013796  0D01               	mullw	1
 19721  013798  50F3               	movf	prodl,w,c
 19722  01379A  0101               	movlb	1	; () banked
 19723  01379C  25BC               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 19724  01379E  6ED9               	movwf	fsr2l,c
 19725  0137A0  50F4               	movf	prodh,w,c
 19726  0137A2  0101               	movlb	1	; () banked
 19727  0137A4  21BD               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 19728  0137A6  6EDA               	movwf	fsr2h,c
 19729  0137A8  0101               	movlb	1	; () banked
 19730  0137AA  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19731  0137AC  0D01               	mullw	1
 19732  0137AE  0EA0               	movlw	low _MACTxBuffer
 19733  0137B0  24F3               	addwf	prodl,w,c
 19734  0137B2  6EE1               	movwf	fsr1l,c
 19735  0137B4  0E02               	movlw	high _MACTxBuffer
 19736  0137B6  20F4               	addwfc	prodh,w,c
 19737  0137B8  6EE2               	movwf	fsr1h,c
 19738  0137BA  CFDF FFE7          	movff	indf2,indf1
 19739                           
 19740                           ; BSR set to: 1
 19741  0137BE  0101               	movlb	1	; () banked
 19742  0137C0  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19743                           
 19744                           ; BSR set to: 1
 19745  0137C2  0101               	movlb	1	; () banked
 19746  0137C4  2BC2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19747  0137C6                     l11667:
 19748                           
 19749                           ; BSR set to: 1
 19750  0137C6  0101               	movlb	1	; () banked
 19751  0137C8  51BE               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 19752  0137CA  0101               	movlb	1	; () banked
 19753  0137CC  5DC2               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19754  0137CE  A0D8               	btfss	status,0,c
 19755  0137D0  D7E0               	goto	l11661
 19756  0137D2                     l11669:
 19757                           
 19758                           ; BSR set to: 1
 19759                           ;drv_mrf_miwi_89xa.c: 851: }
 19760                           ;drv_mrf_miwi_89xa.c: 853: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 19761  0137D2  0E00               	movlw	0
 19762  0137D4  B3AF               	btfsc	_MACInitParams& (0+255),1,b
 19763  0137D6  0E01               	movlw	1
 19764  0137D8  0101               	movlb	1	; () banked
 19765  0137DA  6F94               	movwf	TxPacket@CCA& (0+255),b
 19766  0137DC  0101               	movlb	1	; () banked
 19767  0137DE  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19768  0137E0  EC94  F0A0         	call	_TxPacket
 19769  0137E4  0012               	return	
 19770  0137E6                     __end_of_MiMAC_SendPacket:
 19771                           	opt stack 0
 19772                           tblptru	equ	0xFF8
 19773                           tblptrh	equ	0xFF7
 19774                           tblptrl	equ	0xFF6
 19775                           tablat	equ	0xFF5
 19776                           prodh	equ	0xFF4
 19777                           prodl	equ	0xFF3
 19778                           intcon	equ	0xFF2
 19779                           intcon2	equ	0xFF1
 19780                           intcon3	equ	0xFF0
 19781                           indf0	equ	0xFEF
 19782                           postinc0	equ	0xFEE
 19783                           plusw0	equ	0xFEB
 19784                           fsr0h	equ	0xFEA
 19785                           fsr0l	equ	0xFE9
 19786                           wreg	equ	0xFE8
 19787                           indf1	equ	0xFE7
 19788                           postinc1	equ	0xFE6
 19789                           postdec1	equ	0xFE5
 19790                           fsr1h	equ	0xFE2
 19791                           fsr1l	equ	0xFE1
 19792                           indf2	equ	0xFDF
 19793                           postinc2	equ	0xFDE
 19794                           postdec2	equ	0xFDD
 19795                           plusw2	equ	0xFDB
 19796                           fsr2h	equ	0xFDA
 19797                           fsr2l	equ	0xFD9
 19798                           status	equ	0xFD8
 19799                           
 19800 ;; *************** function _TxPacket *****************
 19801 ;; Defined at:
 19802 ;;		line 295 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19803 ;; Parameters:    Size  Location     Type
 19804 ;;  TxPacketLen     1    wreg     unsigned char 
 19805 ;;  CCA             1   10[BANK1 ] unsigned char 
 19806 ;; Auto vars:     Size  Location     Type
 19807 ;;  TxPacketLen     1   31[BANK1 ] unsigned char 
 19808 ;;  allowedTxFai    1   29[BANK1 ] unsigned char 
 19809 ;;  t2              4   23[BANK1 ] struct _MIWI_TICK
 19810 ;;  t1              4   19[BANK1 ] struct _MIWI_TICK
 19811 ;;  rssival         1   33[BANK1 ] unsigned char 
 19812 ;;  i               1   32[BANK1 ] unsigned char 
 19813 ;;  status          1   30[BANK1 ] unsigned char 
 19814 ;;  reTry           1   28[BANK1 ] unsigned char 
 19815 ;;  CCARetries      1   27[BANK1 ] unsigned char 
 19816 ;; Return value:  Size  Location     Type
 19817 ;;                  1    wreg      unsigned char 
 19818 ;; Registers used:
 19819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19820 ;; Tracked objects:
 19821 ;;		On entry : 0/0
 19822 ;;		On exit  : 0/0
 19823 ;;		Unchanged: 0/0
 19824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19825 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19826 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19827 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19828 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19829 ;;Total ram usage:       24 bytes
 19830 ;; Hardware stack levels used:    1
 19831 ;; Hardware stack levels required when called:   12
 19832 ;; This function calls:
 19833 ;;		_MiWi_TickGet
 19834 ;;		_RegisterRead
 19835 ;;		_RegisterSet
 19836 ;;		_SetRFMode
 19837 ;;		_WriteFIFO
 19838 ;; This function is called by:
 19839 ;;		_MiMAC_SendPacket
 19840 ;; This function uses a non-reentrant model
 19841 ;;
 19842                           
 19843                           	psect	text59
 19844  014128                     __ptext59:
 19845                           	opt stack 0
 19846  014128                     _TxPacket:
 19847                           	opt stack 14
 19848                           
 19849                           ;incstack = 0
 19850                           ;TxPacket@TxPacketLen stored from wreg
 19851  014128  0101               	movlb	1	; () banked
 19852  01412A  6FA9               	movwf	TxPacket@TxPacketLen& (0+255),b
 19853                           
 19854                           ;drv_mrf_miwi_89xa.c: 297: bool status;
 19855                           ;drv_mrf_miwi_89xa.c: 298: uint8_t i;
 19856                           ;drv_mrf_miwi_89xa.c: 299: MIWI_TICK t1, t2;
 19857                           ;drv_mrf_miwi_89xa.c: 301: uint8_t CCARetries;
 19858                           ;drv_mrf_miwi_89xa.c: 302: uint8_t rssival;
 19859                           ;drv_mrf_miwi_89xa.c: 306: uint8_t reTry = 3;
 19860  01412C  0E03               	movlw	3
 19861  01412E  0101               	movlb	1	; () banked
 19862  014130  6FA6               	movwf	TxPacket@reTry& (0+255),b
 19863                           
 19864                           ;drv_mrf_miwi_89xa.c: 310: while( reTry-- )
 19865  014132  D0C3               	goto	l11407
 19866  014134                     l11339:
 19867                           
 19868                           ; BSR set to: 1
 19869                           ;drv_mrf_miwi_89xa.c: 312: {
 19870                           ;drv_mrf_miwi_89xa.c: 313: uint8_t allowedTxFailure;
 19871                           ;drv_mrf_miwi_89xa.c: 314: allowedTxFailure = 0;
 19872  014134  0E00               	movlw	0
 19873  014136  0101               	movlb	1	; () banked
 19874  014138  6FA7               	movwf	TxPacket@allowedTxFailure& (0+255),b
 19875  01413A                     l258:
 19876                           
 19877                           ; BSR set to: 1
 19878                           ;drv_mrf_miwi_89xa.c: 319: hasAck = 0;
 19879  01413A  0E00               	movlw	0
 19880  01413C  0100               	movlb	0	; () banked
 19881  01413E  6FBC               	movwf	_hasAck& (0+255),b	;volatile
 19882                           
 19883                           ;drv_mrf_miwi_89xa.c: 323: CCARetries = 0;
 19884  014140  0E00               	movlw	0
 19885  014142  0101               	movlb	1	; () banked
 19886  014144  6FA5               	movwf	TxPacket@CCARetries& (0+255),b
 19887                           
 19888                           ; BSR set to: 1
 19889                           ;drv_mrf_miwi_89xa.c: 325: if( CCA )
 19890  014146  0101               	movlb	1	; () banked
 19891  014148  5194               	movf	TxPacket@CCA& (0+255),w,b
 19892  01414A  0101               	movlb	1	; () banked
 19893  01414C  B4D8               	btfsc	status,2,c
 19894  01414E  D019               	goto	l259
 19895  014150                     l11343:
 19896                           
 19897                           ; BSR set to: 1
 19898                           ;drv_mrf_miwi_89xa.c: 329: rssival = RegisterRead(0x2800>>8);
 19899  014150  0E28               	movlw	40
 19900  014152  EC5B  F0B5         	call	_RegisterRead
 19901  014156  0101               	movlb	1	; () banked
 19902  014158  6FAB               	movwf	TxPacket@rssival& (0+255),b
 19903                           
 19904                           ; BSR set to: 1
 19905                           ;drv_mrf_miwi_89xa.c: 330: rssival = (rssival>>1);
 19906  01415A  0101               	movlb	1	; () banked
 19907  01415C  90D8               	bcf	status,0,c
 19908  01415E  31AB               	rrcf	TxPacket@rssival& (0+255),w,b
 19909  014160  0101               	movlb	1	; () banked
 19910  014162  6FAB               	movwf	TxPacket@rssival& (0+255),b
 19911                           
 19912                           ; BSR set to: 1
 19913                           ;drv_mrf_miwi_89xa.c: 332: if( rssival > 65 )
 19914  014164  0E41               	movlw	65
 19915  014166  0101               	movlb	1	; () banked
 19916  014168  65AB               	cpfsgt	TxPacket@rssival& (0+255),b
 19917  01416A  D00B               	goto	l259
 19918                           
 19919                           ; BSR set to: 1
 19920                           ;drv_mrf_miwi_89xa.c: 333: {
 19921                           ;drv_mrf_miwi_89xa.c: 334: if(CCARetries++ > 4 )
 19922  01416C  0101               	movlb	1	; () banked
 19923  01416E  2BA5               	incf	TxPacket@CCARetries& (0+255),f,b
 19924  014170  05A5               	decf	TxPacket@CCARetries& (0+255),w,b
 19925  014172  0101               	movlb	1	; () banked
 19926  014174  6F95               	movwf	??_TxPacket& (0+255),b
 19927  014176  0E04               	movlw	4
 19928  014178  0101               	movlb	1	; () banked
 19929  01417A  6595               	cpfsgt	??_TxPacket& (0+255),b
 19930  01417C  D7E9               	goto	l11343
 19931                           
 19932                           ; BSR set to: 1
 19933                           ;drv_mrf_miwi_89xa.c: 335: {
 19934                           ;drv_mrf_miwi_89xa.c: 336: return 0;
 19935  01417E  0E00               	movlw	0
 19936                           
 19937                           ; BSR set to: 1
 19938  014180  0012               	return	
 19939  014182                     l259:
 19940                           
 19941                           ; BSR set to: 1
 19942                           ;drv_mrf_miwi_89xa.c: 340: }
 19943                           ;drv_mrf_miwi_89xa.c: 341: }
 19944                           ;drv_mrf_miwi_89xa.c: 346: INTCONbits.INT0IE = 0;
 19945  014182  98F2               	bcf	intcon,4,c	;volatile
 19946                           
 19947                           ;drv_mrf_miwi_89xa.c: 348: INTCON3bits.INT1IE = 0;
 19948  014184  96F0               	bcf	intcon3,3,c	;volatile
 19949                           
 19950                           ; BSR set to: 1
 19951                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x20);
 19952  014186  0E20               	movlw	32
 19953  014188  ECC1  F0B1         	call	_SetRFMode
 19954                           
 19955                           ;drv_mrf_miwi_89xa.c: 350: RegisterSet(0x1A00 | (0xC8) | 0x01);
 19956  01418C  0E1A               	movlw	26
 19957  01418E  0101               	movlb	1	; () banked
 19958  014190  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 19959  014192  0EC9               	movlw	201
 19960  014194  6F8C               	movwf	RegisterSet@setting& (0+255),b
 19961  014196  EC03  F0B6         	call	_RegisterSet	;wreg free
 19962                           
 19963                           ;drv_mrf_miwi_89xa.c: 351: WriteFIFO(TxPacketLen);
 19964  01419A  0101               	movlb	1	; () banked
 19965  01419C  51A9               	movf	TxPacket@TxPacketLen& (0+255),w,b
 19966  01419E  EC49  F0B6         	call	_WriteFIFO
 19967                           
 19968                           ;drv_mrf_miwi_89xa.c: 352: for(i=0; i< TxPacketLen; i++)
 19969  0141A2  0E00               	movlw	0
 19970  0141A4  0101               	movlb	1	; () banked
 19971  0141A6  6FAA               	movwf	TxPacket@i& (0+255),b
 19972  0141A8  D00E               	goto	l11367
 19973  0141AA                     l11363:
 19974                           
 19975                           ; BSR set to: 1
 19976                           ;drv_mrf_miwi_89xa.c: 353: {
 19977                           ;drv_mrf_miwi_89xa.c: 354: WriteFIFO(MACTxBuffer[i]);
 19978  0141AA  0101               	movlb	1	; () banked
 19979  0141AC  51AA               	movf	TxPacket@i& (0+255),w,b
 19980  0141AE  0D01               	mullw	1
 19981  0141B0  0EA0               	movlw	low _MACTxBuffer
 19982  0141B2  24F3               	addwf	prodl,w,c
 19983  0141B4  6ED9               	movwf	fsr2l,c
 19984  0141B6  0E02               	movlw	high _MACTxBuffer
 19985  0141B8  20F4               	addwfc	prodh,w,c
 19986  0141BA  6EDA               	movwf	fsr2h,c
 19987  0141BC  50DF               	movf	indf2,w,c
 19988  0141BE  EC49  F0B6         	call	_WriteFIFO
 19989  0141C2  0101               	movlb	1	; () banked
 19990  0141C4  2BAA               	incf	TxPacket@i& (0+255),f,b
 19991  0141C6                     l11367:
 19992                           
 19993                           ; BSR set to: 1
 19994  0141C6  0101               	movlb	1	; () banked
 19995  0141C8  51A9               	movf	TxPacket@TxPacketLen& (0+255),w,b
 19996  0141CA  0101               	movlb	1	; () banked
 19997  0141CC  5DAA               	subwf	TxPacket@i& (0+255),w,b
 19998  0141CE  A0D8               	btfss	status,0,c
 19999  0141D0  D7EC               	goto	l11363
 20000                           
 20001                           ; BSR set to: 1
 20002                           ;drv_mrf_miwi_89xa.c: 355: }
 20003                           ;drv_mrf_miwi_89xa.c: 356: SetRFMode(0x80);
 20004                           
 20005                           ; BSR set to: 1
 20006  0141D2  0E80               	movlw	128
 20007  0141D4  ECC1  F0B1         	call	_SetRFMode
 20008                           
 20009                           ;drv_mrf_miwi_89xa.c: 358: INTCONbits.INT0IE = 1;
 20010  0141D8  88F2               	bsf	intcon,4,c	;volatile
 20011                           
 20012                           ;drv_mrf_miwi_89xa.c: 360: INTCON3bits.INT1IE = 1;
 20013  0141DA  86F0               	bsf	intcon3,3,c	;volatile
 20014  0141DC                     l11375:
 20015  0141DC  0100               	movlb	0	; () banked
 20016  0141DE  51B3               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 20017  0141E0  B4D8               	btfsc	status,2,c
 20018                           
 20019                           ; BSR set to: 0
 20020  0141E2  B0F0               	btfsc	intcon3,0,c	;volatile
 20021  0141E4  D001               	goto	l11379
 20022  0141E6  D7FA               	goto	l11375
 20023  0141E8                     l11379:
 20024                           
 20025                           ; BSR set to: 0
 20026                           ;drv_mrf_miwi_89xa.c: 364: };
 20027                           ;drv_mrf_miwi_89xa.c: 368: IRQ1_Received = 0;
 20028  0141E8  0E00               	movlw	0
 20029  0141EA  0100               	movlb	0	; () banked
 20030  0141EC  6FB3               	movwf	_IRQ1_Received& (0+255),b	;volatile
 20031                           
 20032                           ; BSR set to: 0
 20033                           ;drv_mrf_miwi_89xa.c: 369: SetRFMode(0x20);
 20034  0141EE  0E20               	movlw	32
 20035  0141F0  ECC1  F0B1         	call	_SetRFMode
 20036                           
 20037                           ;drv_mrf_miwi_89xa.c: 370: SetRFMode(0x60);
 20038  0141F4  0E60               	movlw	96
 20039  0141F6  ECC1  F0B1         	call	_SetRFMode
 20040                           
 20041                           ;drv_mrf_miwi_89xa.c: 373: if( (MACTxBuffer[0] & 0x20) > 0 )
 20042  0141FA  0102               	movlb	2	; () banked
 20043  0141FC  ABA0               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 20044  0141FE  D05B               	goto	l11405
 20045                           
 20046                           ; BSR set to: 2
 20047                           ;drv_mrf_miwi_89xa.c: 374: {
 20048                           ;drv_mrf_miwi_89xa.c: 375: TxMACSeq = MACTxBuffer[1];
 20049  014200  C2A1  F0BA         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 20050                           
 20051                           ; BSR set to: 2
 20052                           ;drv_mrf_miwi_89xa.c: 376: t1 = MiWi_TickGet();
 20053  014204  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 20054  014208  C18A  F19D         	movff	?_MiWi_TickGet,TxPacket@t1
 20055  01420C  C18B  F19E         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 20056  014210  C18C  F19F         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 20057  014214  C18D  F1A0         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 20058  014218                     l11391:
 20059                           
 20060                           ;drv_mrf_miwi_89xa.c: 378: {
 20061                           ;drv_mrf_miwi_89xa.c: 379: if( hasAck )
 20062  014218  0100               	movlb	0	; () banked
 20063  01421A  51BC               	movf	_hasAck& (0+255),w,b	;volatile
 20064  01421C  A4D8               	btfss	status,2,c
 20065  01421E  D04B               	goto	l11405
 20066                           
 20067                           ;drv_mrf_miwi_89xa.c: 383: }
 20068                           ;drv_mrf_miwi_89xa.c: 384: t2 = MiWi_TickGet();
 20069                           
 20070                           ; BSR set to: 1
 20071                           
 20072                           ;drv_mrf_miwi_89xa.c: 382: goto TX_END_HERE;
 20073                           
 20074                           ; BSR set to: 0
 20075                           ;drv_mrf_miwi_89xa.c: 380: {
 20076                           ;drv_mrf_miwi_89xa.c: 381: status = 1;
 20077  014220  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 20078  014224  C18A  F1A1         	movff	?_MiWi_TickGet,TxPacket@t2
 20079  014228  C18B  F1A2         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 20080  01422C  C18C  F1A3         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 20081  014230  C18D  F1A4         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 20082                           
 20083                           ;drv_mrf_miwi_89xa.c: 385: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 20084  014234  C19D  F195         	movff	TxPacket@t1,??_TxPacket
 20085  014238  C19E  F196         	movff	TxPacket@t1+1,??_TxPacket+1
 20086  01423C  C19F  F197         	movff	TxPacket@t1+2,??_TxPacket+2
 20087  014240  C1A0  F198         	movff	TxPacket@t1+3,??_TxPacket+3
 20088  014244  0101               	movlb	1	; () banked
 20089  014246  1F95               	comf	??_TxPacket& (0+255),f,b
 20090  014248  1F96               	comf	(??_TxPacket+1)& (0+255),f,b
 20091  01424A  1F97               	comf	(??_TxPacket+2)& (0+255),f,b
 20092  01424C  1F98               	comf	(??_TxPacket+3)& (0+255),f,b
 20093  01424E  2B95               	incf	??_TxPacket& (0+255),f,b
 20094  014250  0E00               	movlw	0
 20095  014252  2396               	addwfc	(??_TxPacket+1)& (0+255),f,b
 20096  014254  2397               	addwfc	(??_TxPacket+2)& (0+255),f,b
 20097  014256  2398               	addwfc	(??_TxPacket+3)& (0+255),f,b
 20098  014258  0101               	movlb	1	; () banked
 20099  01425A  51A1               	movf	TxPacket@t2& (0+255),w,b
 20100  01425C  0101               	movlb	1	; () banked
 20101  01425E  2595               	addwf	??_TxPacket& (0+255),w,b
 20102  014260  0101               	movlb	1	; () banked
 20103  014262  6F99               	movwf	(??_TxPacket+4)& (0+255),b
 20104  014264  0101               	movlb	1	; () banked
 20105  014266  51A2               	movf	(TxPacket@t2+1)& (0+255),w,b
 20106  014268  0101               	movlb	1	; () banked
 20107  01426A  2196               	addwfc	(??_TxPacket+1)& (0+255),w,b
 20108  01426C  0101               	movlb	1	; () banked
 20109  01426E  6F9A               	movwf	(??_TxPacket+5)& (0+255),b
 20110  014270  0101               	movlb	1	; () banked
 20111  014272  51A3               	movf	(TxPacket@t2+2)& (0+255),w,b
 20112  014274  0101               	movlb	1	; () banked
 20113  014276  2197               	addwfc	(??_TxPacket+2)& (0+255),w,b
 20114  014278  0101               	movlb	1	; () banked
 20115  01427A  6F9B               	movwf	(??_TxPacket+6)& (0+255),b
 20116  01427C  0101               	movlb	1	; () banked
 20117  01427E  51A4               	movf	(TxPacket@t2+3)& (0+255),w,b
 20118  014280  0101               	movlb	1	; () banked
 20119  014282  2198               	addwfc	(??_TxPacket+3)& (0+255),w,b
 20120  014284  0101               	movlb	1	; () banked
 20121  014286  6F9C               	movwf	(??_TxPacket+7)& (0+255),b
 20122  014288  0101               	movlb	1	; () banked
 20123  01428A  519C               	movf	(??_TxPacket+7)& (0+255),w,b
 20124  01428C  0101               	movlb	1	; () banked
 20125  01428E  119B               	iorwf	(??_TxPacket+6)& (0+255),w,b
 20126  014290  E108               	bnz	l11401
 20127  014292  0EA9               	movlw	169
 20128  014294  0101               	movlb	1	; () banked
 20129  014296  5D99               	subwf	(??_TxPacket+4)& (0+255),w,b
 20130  014298  0E61               	movlw	97
 20131  01429A  0101               	movlb	1	; () banked
 20132  01429C  599A               	subwfb	(??_TxPacket+5)& (0+255),w,b
 20133  01429E  A0D8               	btfss	status,0,c
 20134  0142A0  D7BB               	goto	l11391
 20135  0142A2                     l11401:
 20136                           
 20137                           ; BSR set to: 1
 20138                           ;drv_mrf_miwi_89xa.c: 388: }
 20139                           ;drv_mrf_miwi_89xa.c: 389: }
 20140                           ;drv_mrf_miwi_89xa.c: 391: if(allowedTxFailure++ <= 3)
 20141  0142A2  0101               	movlb	1	; () banked
 20142  0142A4  2BA7               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 20143  0142A6  05A7               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 20144  0142A8  0101               	movlb	1	; () banked
 20145  0142AA  6F95               	movwf	??_TxPacket& (0+255),b
 20146  0142AC  0E04               	movlw	4
 20147  0142AE  0101               	movlb	1	; () banked
 20148  0142B0  6195               	cpfslt	??_TxPacket& (0+255),b
 20149  0142B2  D003               	goto	l11407
 20150  0142B4  D742               	goto	l258
 20151  0142B6                     l11405:
 20152                           
 20153                           ;drv_mrf_miwi_89xa.c: 395: else
 20154                           ;drv_mrf_miwi_89xa.c: 397: {
 20155                           ;drv_mrf_miwi_89xa.c: 398: status = 1;
 20156  0142B6  0E01               	movlw	1
 20157  0142B8  D007               	goto	L6
 20158  0142BA                     l11407:
 20159                           
 20160                           ; BSR set to: 1
 20161  0142BA  0101               	movlb	1	; () banked
 20162  0142BC  07A6               	decf	TxPacket@reTry& (0+255),f,b
 20163  0142BE  0101               	movlb	1	; () banked
 20164  0142C0  29A6               	incf	TxPacket@reTry& (0+255),w,b
 20165  0142C2  A4D8               	btfss	status,2,c
 20166  0142C4  D737               	goto	l11339
 20167                           
 20168                           ; BSR set to: 1
 20169                           ;drv_mrf_miwi_89xa.c: 400: }
 20170                           ;drv_mrf_miwi_89xa.c: 401: }
 20171                           ;drv_mrf_miwi_89xa.c: 403: status = 0;
 20172                           
 20173                           ; BSR set to: 1
 20174  0142C6  0E00               	movlw	0
 20175  0142C8                     L6:
 20176  0142C8  0101               	movlb	1	; () banked
 20177  0142CA  6FA8               	movwf	TxPacket@status& (0+255),b
 20178                           
 20179                           ; BSR set to: 1
 20180                           ;drv_mrf_miwi_89xa.c: 405: return status;
 20181                           
 20182                           ;drv_mrf_miwi_89xa.c: 404: TX_END_HERE:
 20183  0142CC  0101               	movlb	1	; () banked
 20184  0142CE  51A8               	movf	TxPacket@status& (0+255),w,b
 20185  0142D0  0012               	return	
 20186  0142D2                     __end_of_TxPacket:
 20187                           	opt stack 0
 20188                           tblptru	equ	0xFF8
 20189                           tblptrh	equ	0xFF7
 20190                           tblptrl	equ	0xFF6
 20191                           tablat	equ	0xFF5
 20192                           prodh	equ	0xFF4
 20193                           prodl	equ	0xFF3
 20194                           intcon	equ	0xFF2
 20195                           intcon2	equ	0xFF1
 20196                           intcon3	equ	0xFF0
 20197                           indf0	equ	0xFEF
 20198                           postinc0	equ	0xFEE
 20199                           plusw0	equ	0xFEB
 20200                           fsr0h	equ	0xFEA
 20201                           fsr0l	equ	0xFE9
 20202                           wreg	equ	0xFE8
 20203                           indf1	equ	0xFE7
 20204                           postinc1	equ	0xFE6
 20205                           postdec1	equ	0xFE5
 20206                           fsr1h	equ	0xFE2
 20207                           fsr1l	equ	0xFE1
 20208                           indf2	equ	0xFDF
 20209                           postinc2	equ	0xFDE
 20210                           postdec2	equ	0xFDD
 20211                           plusw2	equ	0xFDB
 20212                           fsr2h	equ	0xFDA
 20213                           fsr2l	equ	0xFD9
 20214                           status	equ	0xFD8
 20215                           
 20216 ;; *************** function _WriteFIFO *****************
 20217 ;; Defined at:
 20218 ;;		line 251 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20219 ;; Parameters:    Size  Location     Type
 20220 ;;  Data            1    wreg     unsigned char 
 20221 ;; Auto vars:     Size  Location     Type
 20222 ;;  Data            1    2[BANK1 ] unsigned char 
 20223 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 20224 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 20225 ;; Return value:  Size  Location     Type
 20226 ;;		None               void
 20227 ;; Registers used:
 20228 ;;		wreg, status,2, cstack
 20229 ;; Tracked objects:
 20230 ;;		On entry : 0/0
 20231 ;;		On exit  : 0/0
 20232 ;;		Unchanged: 0/0
 20233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20235 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20237 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20238 ;;Total ram usage:        3 bytes
 20239 ;; Hardware stack levels used:    1
 20240 ;; Hardware stack levels required when called:   10
 20241 ;; This function calls:
 20242 ;;		_SPIPut
 20243 ;; This function is called by:
 20244 ;;		_TxPacket
 20245 ;; This function uses a non-reentrant model
 20246 ;;
 20247                           
 20248                           	psect	text60
 20249  016C92                     __ptext60:
 20250                           	opt stack 0
 20251  016C92                     _WriteFIFO:
 20252                           	opt stack 15
 20253                           
 20254                           ; BSR set to: 1
 20255                           ;incstack = 0
 20256                           ;WriteFIFO@Data stored from wreg
 20257  016C92  0101               	movlb	1	; () banked
 20258  016C94  6F8C               	movwf	WriteFIFO@Data& (0+255),b
 20259                           
 20260                           ;drv_mrf_miwi_89xa.c: 253: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20261  016C96  0E00               	movlw	0
 20262  016C98  B6F0               	btfsc	intcon3,3,c	;volatile
 20263  016C9A  0E01               	movlw	1
 20264  016C9C  0101               	movlb	1	; () banked
 20265  016C9E  6F8D               	movwf	WriteFIFO@IRQ1select& (0+255),b
 20266                           
 20267                           ;drv_mrf_miwi_89xa.c: 255: bool IRQ0select = INTCONbits.INT0IE;
 20268  016CA0  0E00               	movlw	0
 20269  016CA2  B8F2               	btfsc	intcon,4,c	;volatile
 20270  016CA4  0E01               	movlw	1
 20271  016CA6  0101               	movlb	1	; () banked
 20272  016CA8  6F8E               	movwf	WriteFIFO@IRQ0select& (0+255),b
 20273                           
 20274                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.INT0IE = 0;
 20275  016CAA  98F2               	bcf	intcon,4,c	;volatile
 20276                           
 20277                           ;drv_mrf_miwi_89xa.c: 260: INTCON3bits.INT1IE = 0;
 20278  016CAC  96F0               	bcf	intcon3,3,c	;volatile
 20279                           
 20280                           ;drv_mrf_miwi_89xa.c: 261: LATCbits.LATC6 = 0;
 20281  016CAE  9C8B               	bcf	3979,6,c	;volatile
 20282                           
 20283                           ; BSR set to: 1
 20284                           ;drv_mrf_miwi_89xa.c: 262: SPIPut(Data);
 20285  016CB0  0101               	movlb	1	; () banked
 20286  016CB2  518C               	movf	WriteFIFO@Data& (0+255),w,b
 20287  016CB4  ECA4  F0B7         	call	_SPIPut
 20288                           
 20289                           ;drv_mrf_miwi_89xa.c: 263: LATCbits.LATC6 = 1;
 20290  016CB8  8C8B               	bsf	3979,6,c	;volatile
 20291                           
 20292                           ;drv_mrf_miwi_89xa.c: 264: INTCON3bits.INT1IE = IRQ1select;
 20293  016CBA  0101               	movlb	1	; () banked
 20294  016CBC  B18D               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 20295  016CBE  D002               	bra	u12655
 20296  016CC0  96F0               	bcf	intcon3,3,c	;volatile
 20297  016CC2  D001               	bra	u12656
 20298  016CC4                     u12655:
 20299  016CC4  86F0               	bsf	intcon3,3,c	;volatile
 20300  016CC6                     u12656:
 20301                           
 20302                           ;drv_mrf_miwi_89xa.c: 267: INTCONbits.INT0IE = IRQ0select;
 20303  016CC6  0101               	movlb	1	; () banked
 20304  016CC8  B18E               	btfsc	WriteFIFO@IRQ0select& (0+255),0,b
 20305  016CCA  D002               	bra	u12665
 20306  016CCC  98F2               	bcf	intcon,4,c	;volatile
 20307  016CCE  D001               	bra	u12666
 20308  016CD0                     u12665:
 20309  016CD0  88F2               	bsf	intcon,4,c	;volatile
 20310  016CD2                     u12666:
 20311  016CD2  0012               	return		;funcret
 20312  016CD4                     __end_of_WriteFIFO:
 20313                           	opt stack 0
 20314                           tblptru	equ	0xFF8
 20315                           tblptrh	equ	0xFF7
 20316                           tblptrl	equ	0xFF6
 20317                           tablat	equ	0xFF5
 20318                           prodh	equ	0xFF4
 20319                           prodl	equ	0xFF3
 20320                           intcon	equ	0xFF2
 20321                           intcon2	equ	0xFF1
 20322                           intcon3	equ	0xFF0
 20323                           indf0	equ	0xFEF
 20324                           postinc0	equ	0xFEE
 20325                           plusw0	equ	0xFEB
 20326                           fsr0h	equ	0xFEA
 20327                           fsr0l	equ	0xFE9
 20328                           wreg	equ	0xFE8
 20329                           indf1	equ	0xFE7
 20330                           postinc1	equ	0xFE6
 20331                           postdec1	equ	0xFE5
 20332                           fsr1h	equ	0xFE2
 20333                           fsr1l	equ	0xFE1
 20334                           indf2	equ	0xFDF
 20335                           postinc2	equ	0xFDE
 20336                           postdec2	equ	0xFDD
 20337                           plusw2	equ	0xFDB
 20338                           fsr2h	equ	0xFDA
 20339                           fsr2l	equ	0xFD9
 20340                           status	equ	0xFD8
 20341                           
 20342 ;; *************** function _SetRFMode *****************
 20343 ;; Defined at:
 20344 ;;		line 674 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20345 ;; Parameters:    Size  Location     Type
 20346 ;;  mode            1    wreg     unsigned char 
 20347 ;; Auto vars:     Size  Location     Type
 20348 ;;  mode            1    6[BANK1 ] unsigned char 
 20349 ;; Return value:  Size  Location     Type
 20350 ;;		None               void
 20351 ;; Registers used:
 20352 ;;		wreg, status,2, status,0, cstack
 20353 ;; Tracked objects:
 20354 ;;		On entry : 0/0
 20355 ;;		On exit  : 0/0
 20356 ;;		Unchanged: 0/0
 20357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20359 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20361 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20362 ;;Total ram usage:        1 bytes
 20363 ;; Hardware stack levels used:    1
 20364 ;; Hardware stack levels required when called:   11
 20365 ;; This function calls:
 20366 ;;		_RegisterSet
 20367 ;; This function is called by:
 20368 ;;		_TxPacket
 20369 ;;		_MiMAC_SetChannel
 20370 ;;		_MiMAC_Init
 20371 ;;		_MiMAC_PowerState
 20372 ;; This function uses a non-reentrant model
 20373 ;;
 20374                           
 20375                           	psect	text61
 20376  016382                     __ptext61:
 20377                           	opt stack 0
 20378  016382                     _SetRFMode:
 20379                           	opt stack 16
 20380                           
 20381                           ;incstack = 0
 20382                           ;SetRFMode@mode stored from wreg
 20383  016382  0101               	movlb	1	; () banked
 20384  016384  6F90               	movwf	SetRFMode@mode& (0+255),b
 20385                           
 20386                           ;drv_mrf_miwi_89xa.c: 676: switch (mode) {
 20387  016386  D037               	goto	l11259
 20388  016388                     l11237:
 20389                           
 20390                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 20391  016388  0E00               	movlw	0
 20392  01638A  0101               	movlb	1	; () banked
 20393  01638C  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 20394  01638E  0E96               	movlw	150
 20395  016390  6F8C               	movwf	RegisterSet@setting& (0+255),b
 20396  016392  EC03  F0B6         	call	_RegisterSet	;wreg free
 20397                           
 20398                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x80;
 20399  016396  0E80               	movlw	128
 20400  016398  0100               	movlb	0	; () banked
 20401  01639A  6FB8               	movwf	_RF_Mode& (0+255),b
 20402                           
 20403                           ;drv_mrf_miwi_89xa.c: 680: break;
 20404  01639C  0012               	return	
 20405  01639E                     l11241:
 20406                           
 20407                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 20408  01639E  0E00               	movlw	0
 20409  0163A0  0101               	movlb	1	; () banked
 20410  0163A2  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 20411  0163A4  0E76               	movlw	118
 20412  0163A6  6F8C               	movwf	RegisterSet@setting& (0+255),b
 20413  0163A8  EC03  F0B6         	call	_RegisterSet	;wreg free
 20414                           
 20415                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x60;
 20416  0163AC  0E60               	movlw	96
 20417  0163AE  0100               	movlb	0	; () banked
 20418  0163B0  6FB8               	movwf	_RF_Mode& (0+255),b
 20419                           
 20420                           ;drv_mrf_miwi_89xa.c: 684: break;
 20421  0163B2  0012               	return	
 20422  0163B4                     l11245:
 20423                           
 20424                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 20425  0163B4  0E00               	movlw	0
 20426  0163B6  0101               	movlb	1	; () banked
 20427  0163B8  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 20428  0163BA  0E56               	movlw	86
 20429  0163BC  6F8C               	movwf	RegisterSet@setting& (0+255),b
 20430  0163BE  EC03  F0B6         	call	_RegisterSet	;wreg free
 20431                           
 20432                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x40;
 20433  0163C2  0E40               	movlw	64
 20434  0163C4  0100               	movlb	0	; () banked
 20435  0163C6  6FB8               	movwf	_RF_Mode& (0+255),b
 20436                           
 20437                           ;drv_mrf_miwi_89xa.c: 688: break;
 20438  0163C8  0012               	return	
 20439  0163CA                     l11249:
 20440                           
 20441                           ;drv_mrf_miwi_89xa.c: 690: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 20442  0163CA  0E00               	movlw	0
 20443  0163CC  0101               	movlb	1	; () banked
 20444  0163CE  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 20445  0163D0  0E36               	movlw	54
 20446  0163D2  6F8C               	movwf	RegisterSet@setting& (0+255),b
 20447  0163D4  EC03  F0B6         	call	_RegisterSet	;wreg free
 20448                           
 20449                           ;drv_mrf_miwi_89xa.c: 691: RF_Mode = 0x20;
 20450  0163D8  0E20               	movlw	32
 20451  0163DA  0100               	movlb	0	; () banked
 20452  0163DC  6FB8               	movwf	_RF_Mode& (0+255),b
 20453                           
 20454                           ;drv_mrf_miwi_89xa.c: 692: break;
 20455  0163DE  0012               	return	
 20456  0163E0                     l11253:
 20457                           
 20458                           ;drv_mrf_miwi_89xa.c: 694: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 20459  0163E0  0E00               	movlw	0
 20460  0163E2  0101               	movlb	1	; () banked
 20461  0163E4  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 20462  0163E6  0E16               	movlw	22
 20463  0163E8  6F8C               	movwf	RegisterSet@setting& (0+255),b
 20464  0163EA  EC03  F0B6         	call	_RegisterSet	;wreg free
 20465                           
 20466                           ;drv_mrf_miwi_89xa.c: 695: RF_Mode = 0x00;
 20467  0163EE  0E00               	movlw	0
 20468  0163F0  0100               	movlb	0	; () banked
 20469  0163F2  6FB8               	movwf	_RF_Mode& (0+255),b
 20470                           
 20471                           ; BSR set to: 0
 20472                           ;drv_mrf_miwi_89xa.c: 697: }
 20473                           
 20474                           ;drv_mrf_miwi_89xa.c: 696: break;
 20475  0163F4  0012               	return	
 20476  0163F6                     l11259:
 20477  0163F6  0101               	movlb	1	; () banked
 20478  0163F8  5190               	movf	SetRFMode@mode& (0+255),w,b
 20479                           
 20480                           ; Switch size 1, requested type "space"
 20481                           ; Number of cases is 5, Range of values is 0 to 128
 20482                           ; switch strategies available:
 20483                           ; Name         Instructions Cycles
 20484                           ; simple_byte           16     9 (average)
 20485                           ;	Chosen strategy is simple_byte
 20486  0163FA  0A00               	xorlw	0	; case 0
 20487  0163FC  B4D8               	btfsc	status,2,c
 20488  0163FE  D7F0               	goto	l11253
 20489  016400  0A20               	xorlw	32	; case 32
 20490  016402  B4D8               	btfsc	status,2,c
 20491  016404  D7E2               	goto	l11249
 20492  016406  0A60               	xorlw	96	; case 64
 20493  016408  B4D8               	btfsc	status,2,c
 20494  01640A  D7D4               	goto	l11245
 20495  01640C  0A20               	xorlw	32	; case 96
 20496  01640E  B4D8               	btfsc	status,2,c
 20497  016410  D7C6               	goto	l11241
 20498  016412  0AE0               	xorlw	224	; case 128
 20499  016414  A4D8               	btfss	status,2,c
 20500  016416  0012               	return	
 20501  016418  D7B7               	goto	l11237
 20502  01641A                     __end_of_SetRFMode:
 20503                           	opt stack 0
 20504                           tblptru	equ	0xFF8
 20505                           tblptrh	equ	0xFF7
 20506                           tblptrl	equ	0xFF6
 20507                           tablat	equ	0xFF5
 20508                           prodh	equ	0xFF4
 20509                           prodl	equ	0xFF3
 20510                           intcon	equ	0xFF2
 20511                           intcon2	equ	0xFF1
 20512                           intcon3	equ	0xFF0
 20513                           indf0	equ	0xFEF
 20514                           postinc0	equ	0xFEE
 20515                           plusw0	equ	0xFEB
 20516                           fsr0h	equ	0xFEA
 20517                           fsr0l	equ	0xFE9
 20518                           wreg	equ	0xFE8
 20519                           indf1	equ	0xFE7
 20520                           postinc1	equ	0xFE6
 20521                           postdec1	equ	0xFE5
 20522                           fsr1h	equ	0xFE2
 20523                           fsr1l	equ	0xFE1
 20524                           indf2	equ	0xFDF
 20525                           postinc2	equ	0xFDE
 20526                           postdec2	equ	0xFDD
 20527                           plusw2	equ	0xFDB
 20528                           fsr2h	equ	0xFDA
 20529                           fsr2l	equ	0xFD9
 20530                           status	equ	0xFD8
 20531                           
 20532 ;; *************** function _RegisterSet *****************
 20533 ;; Defined at:
 20534 ;;		line 171 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20535 ;; Parameters:    Size  Location     Type
 20536 ;;  setting         2    2[BANK1 ] unsigned int 
 20537 ;; Auto vars:     Size  Location     Type
 20538 ;;  IRQ0select      1    5[BANK1 ] unsigned char 
 20539 ;;  IRQ1select      1    4[BANK1 ] unsigned char 
 20540 ;; Return value:  Size  Location     Type
 20541 ;;		None               void
 20542 ;; Registers used:
 20543 ;;		wreg, status,2, cstack
 20544 ;; Tracked objects:
 20545 ;;		On entry : 0/0
 20546 ;;		On exit  : 0/0
 20547 ;;		Unchanged: 0/0
 20548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20549 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20550 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20552 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20553 ;;Total ram usage:        4 bytes
 20554 ;; Hardware stack levels used:    1
 20555 ;; Hardware stack levels required when called:   10
 20556 ;; This function calls:
 20557 ;;		_SPIPut
 20558 ;; This function is called by:
 20559 ;;		_TxPacket
 20560 ;;		_MiMAC_SetChannel
 20561 ;;		_MiMAC_SetPower
 20562 ;;		_MiMAC_Init
 20563 ;;		_SetRFMode
 20564 ;; This function uses a non-reentrant model
 20565 ;;
 20566                           
 20567                           	psect	text62
 20568  016C06                     __ptext62:
 20569                           	opt stack 0
 20570  016C06                     _RegisterSet:
 20571                           	opt stack 16
 20572                           
 20573                           ;drv_mrf_miwi_89xa.c: 173: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20574                           
 20575                           ;incstack = 0
 20576  016C06  0E00               	movlw	0
 20577  016C08  B6F0               	btfsc	intcon3,3,c	;volatile
 20578  016C0A  0E01               	movlw	1
 20579  016C0C  0101               	movlb	1	; () banked
 20580  016C0E  6F8E               	movwf	RegisterSet@IRQ1select& (0+255),b
 20581                           
 20582                           ;drv_mrf_miwi_89xa.c: 175: bool IRQ0select = INTCONbits.INT0IE;
 20583  016C10  0E00               	movlw	0
 20584  016C12  B8F2               	btfsc	intcon,4,c	;volatile
 20585  016C14  0E01               	movlw	1
 20586  016C16  0101               	movlb	1	; () banked
 20587  016C18  6F8F               	movwf	RegisterSet@IRQ0select& (0+255),b
 20588                           
 20589                           ; BSR set to: 1
 20590                           ;drv_mrf_miwi_89xa.c: 176: INTCONbits.INT0IE = 0;
 20591  016C1A  98F2               	bcf	intcon,4,c	;volatile
 20592                           
 20593                           ; BSR set to: 1
 20594                           ;drv_mrf_miwi_89xa.c: 179: INTCON3bits.INT1IE = 0;
 20595  016C1C  96F0               	bcf	intcon3,3,c	;volatile
 20596                           
 20597                           ; BSR set to: 1
 20598                           ;drv_mrf_miwi_89xa.c: 180: LATBbits.LATB3 = 0;
 20599  016C1E  968A               	bcf	3978,3,c	;volatile
 20600                           
 20601                           ; BSR set to: 1
 20602                           ;drv_mrf_miwi_89xa.c: 181: SPIPut((uint8_t)(setting >> 8));
 20603  016C20  0101               	movlb	1	; () banked
 20604  016C22  518D               	movf	(RegisterSet@setting+1)& (0+255),w,b
 20605  016C24  ECA4  F0B7         	call	_SPIPut
 20606                           
 20607                           ;drv_mrf_miwi_89xa.c: 182: SPIPut((uint8_t)setting);
 20608  016C28  0101               	movlb	1	; () banked
 20609  016C2A  518C               	movf	RegisterSet@setting& (0+255),w,b
 20610  016C2C  ECA4  F0B7         	call	_SPIPut
 20611                           
 20612                           ;drv_mrf_miwi_89xa.c: 183: LATBbits.LATB3 = 1;
 20613  016C30  868A               	bsf	3978,3,c	;volatile
 20614                           
 20615                           ;drv_mrf_miwi_89xa.c: 184: INTCON3bits.INT1IE = IRQ1select;
 20616  016C32  0101               	movlb	1	; () banked
 20617  016C34  B18E               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 20618  016C36  D002               	bra	u12465
 20619  016C38  96F0               	bcf	intcon3,3,c	;volatile
 20620  016C3A  D001               	bra	u12466
 20621  016C3C                     u12465:
 20622  016C3C  86F0               	bsf	intcon3,3,c	;volatile
 20623  016C3E                     u12466:
 20624                           
 20625                           ;drv_mrf_miwi_89xa.c: 187: INTCONbits.INT0IE = IRQ0select;
 20626  016C3E  0101               	movlb	1	; () banked
 20627  016C40  B18F               	btfsc	RegisterSet@IRQ0select& (0+255),0,b
 20628  016C42  D002               	bra	u12475
 20629  016C44  98F2               	bcf	intcon,4,c	;volatile
 20630  016C46  D001               	bra	u12476
 20631  016C48                     u12475:
 20632  016C48  88F2               	bsf	intcon,4,c	;volatile
 20633  016C4A                     u12476:
 20634  016C4A  0012               	return		;funcret
 20635  016C4C                     __end_of_RegisterSet:
 20636                           	opt stack 0
 20637                           tblptru	equ	0xFF8
 20638                           tblptrh	equ	0xFF7
 20639                           tblptrl	equ	0xFF6
 20640                           tablat	equ	0xFF5
 20641                           prodh	equ	0xFF4
 20642                           prodl	equ	0xFF3
 20643                           intcon	equ	0xFF2
 20644                           intcon2	equ	0xFF1
 20645                           intcon3	equ	0xFF0
 20646                           indf0	equ	0xFEF
 20647                           postinc0	equ	0xFEE
 20648                           plusw0	equ	0xFEB
 20649                           fsr0h	equ	0xFEA
 20650                           fsr0l	equ	0xFE9
 20651                           wreg	equ	0xFE8
 20652                           indf1	equ	0xFE7
 20653                           postinc1	equ	0xFE6
 20654                           postdec1	equ	0xFE5
 20655                           fsr1h	equ	0xFE2
 20656                           fsr1l	equ	0xFE1
 20657                           indf2	equ	0xFDF
 20658                           postinc2	equ	0xFDE
 20659                           postdec2	equ	0xFDD
 20660                           plusw2	equ	0xFDB
 20661                           fsr2h	equ	0xFDA
 20662                           fsr2l	equ	0xFD9
 20663                           status	equ	0xFD8
 20664                           
 20665 ;; *************** function _RegisterRead *****************
 20666 ;; Defined at:
 20667 ;;		line 207 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20668 ;; Parameters:    Size  Location     Type
 20669 ;;  address         1    wreg     unsigned char 
 20670 ;; Auto vars:     Size  Location     Type
 20671 ;;  address         1    5[BANK1 ] unsigned char 
 20672 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 20673 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 20674 ;;  value           1    2[BANK1 ] unsigned char 
 20675 ;; Return value:  Size  Location     Type
 20676 ;;                  1    wreg      unsigned char 
 20677 ;; Registers used:
 20678 ;;		wreg, status,2, status,0, cstack
 20679 ;; Tracked objects:
 20680 ;;		On entry : 0/0
 20681 ;;		On exit  : 0/0
 20682 ;;		Unchanged: 0/0
 20683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20685 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20687 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20688 ;;Total ram usage:        4 bytes
 20689 ;; Hardware stack levels used:    1
 20690 ;; Hardware stack levels required when called:   11
 20691 ;; This function calls:
 20692 ;;		_SPIGet
 20693 ;;		_SPIPut
 20694 ;; This function is called by:
 20695 ;;		_TxPacket
 20696 ;;		_getReceiverBW
 20697 ;; This function uses a non-reentrant model
 20698 ;;
 20699                           
 20700                           	psect	text63
 20701  016AB6                     __ptext63:
 20702                           	opt stack 0
 20703  016AB6                     _RegisterRead:
 20704                           	opt stack 14
 20705                           
 20706                           ;incstack = 0
 20707                           ;RegisterRead@address stored from wreg
 20708  016AB6  0101               	movlb	1	; () banked
 20709  016AB8  6F8F               	movwf	RegisterRead@address& (0+255),b
 20710                           
 20711                           ;drv_mrf_miwi_89xa.c: 209: uint8_t value;
 20712                           ;drv_mrf_miwi_89xa.c: 210: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20713  016ABA  0E00               	movlw	0
 20714  016ABC  B6F0               	btfsc	intcon3,3,c	;volatile
 20715  016ABE  0E01               	movlw	1
 20716  016AC0  0101               	movlb	1	; () banked
 20717  016AC2  6F8D               	movwf	RegisterRead@IRQ1select& (0+255),b
 20718                           
 20719                           ;drv_mrf_miwi_89xa.c: 212: bool IRQ0select = INTCONbits.INT0IE;
 20720  016AC4  0E00               	movlw	0
 20721  016AC6  B8F2               	btfsc	intcon,4,c	;volatile
 20722  016AC8  0E01               	movlw	1
 20723  016ACA  0101               	movlb	1	; () banked
 20724  016ACC  6F8E               	movwf	RegisterRead@IRQ0select& (0+255),b
 20725                           
 20726                           ;drv_mrf_miwi_89xa.c: 214: INTCONbits.INT0IE = 0;
 20727  016ACE  98F2               	bcf	intcon,4,c	;volatile
 20728                           
 20729                           ;drv_mrf_miwi_89xa.c: 217: INTCON3bits.INT1IE = 0;
 20730  016AD0  96F0               	bcf	intcon3,3,c	;volatile
 20731                           
 20732                           ;drv_mrf_miwi_89xa.c: 218: LATBbits.LATB3 = 0;
 20733  016AD2  968A               	bcf	3978,3,c	;volatile
 20734                           
 20735                           ; BSR set to: 1
 20736                           ;drv_mrf_miwi_89xa.c: 219: address = (address|0x40);
 20737  016AD4  0101               	movlb	1	; () banked
 20738  016AD6  518F               	movf	RegisterRead@address& (0+255),w,b
 20739  016AD8  0940               	iorlw	64
 20740  016ADA  0101               	movlb	1	; () banked
 20741  016ADC  6F8F               	movwf	RegisterRead@address& (0+255),b
 20742                           
 20743                           ; BSR set to: 1
 20744                           ;drv_mrf_miwi_89xa.c: 220: SPIPut(address);
 20745  016ADE  0101               	movlb	1	; () banked
 20746  016AE0  518F               	movf	RegisterRead@address& (0+255),w,b
 20747  016AE2  ECA4  F0B7         	call	_SPIPut
 20748                           
 20749                           ;drv_mrf_miwi_89xa.c: 221: value = SPIGet();
 20750  016AE6  ECEB  F0B7         	call	_SPIGet	;wreg free
 20751  016AEA  0101               	movlb	1	; () banked
 20752  016AEC  6F8C               	movwf	RegisterRead@value& (0+255),b
 20753                           
 20754                           ; BSR set to: 1
 20755                           ;drv_mrf_miwi_89xa.c: 222: LATBbits.LATB3 = 1;
 20756  016AEE  868A               	bsf	3978,3,c	;volatile
 20757                           
 20758                           ; BSR set to: 1
 20759                           ;drv_mrf_miwi_89xa.c: 223: INTCON3bits.INT1IE = IRQ1select;
 20760  016AF0  0101               	movlb	1	; () banked
 20761  016AF2  B18D               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 20762  016AF4  D002               	bra	u12635
 20763  016AF6  96F0               	bcf	intcon3,3,c	;volatile
 20764  016AF8  D001               	bra	u12636
 20765  016AFA                     u12635:
 20766  016AFA  86F0               	bsf	intcon3,3,c	;volatile
 20767  016AFC                     u12636:
 20768                           
 20769                           ;drv_mrf_miwi_89xa.c: 226: INTCONbits.INT0IE = IRQ0select;
 20770  016AFC  0101               	movlb	1	; () banked
 20771  016AFE  B18E               	btfsc	RegisterRead@IRQ0select& (0+255),0,b
 20772  016B00  D002               	bra	u12645
 20773  016B02  98F2               	bcf	intcon,4,c	;volatile
 20774  016B04  D001               	bra	u12646
 20775  016B06                     u12645:
 20776  016B06  88F2               	bsf	intcon,4,c	;volatile
 20777  016B08                     u12646:
 20778                           
 20779                           ;drv_mrf_miwi_89xa.c: 229: return value;
 20780  016B08  0101               	movlb	1	; () banked
 20781  016B0A  518C               	movf	RegisterRead@value& (0+255),w,b
 20782  016B0C  0012               	return	
 20783  016B0E                     __end_of_RegisterRead:
 20784                           	opt stack 0
 20785                           tblptru	equ	0xFF8
 20786                           tblptrh	equ	0xFF7
 20787                           tblptrl	equ	0xFF6
 20788                           tablat	equ	0xFF5
 20789                           prodh	equ	0xFF4
 20790                           prodl	equ	0xFF3
 20791                           intcon	equ	0xFF2
 20792                           intcon2	equ	0xFF1
 20793                           intcon3	equ	0xFF0
 20794                           indf0	equ	0xFEF
 20795                           postinc0	equ	0xFEE
 20796                           plusw0	equ	0xFEB
 20797                           fsr0h	equ	0xFEA
 20798                           fsr0l	equ	0xFE9
 20799                           wreg	equ	0xFE8
 20800                           indf1	equ	0xFE7
 20801                           postinc1	equ	0xFE6
 20802                           postdec1	equ	0xFE5
 20803                           fsr1h	equ	0xFE2
 20804                           fsr1l	equ	0xFE1
 20805                           indf2	equ	0xFDF
 20806                           postinc2	equ	0xFDE
 20807                           postdec2	equ	0xFDD
 20808                           plusw2	equ	0xFDB
 20809                           fsr2h	equ	0xFDA
 20810                           fsr2l	equ	0xFD9
 20811                           status	equ	0xFD8
 20812                           
 20813 ;; *************** function _SPIGet *****************
 20814 ;; Defined at:
 20815 ;;		line 104 in file "src/18F27J53/spi.c"
 20816 ;; Parameters:    Size  Location     Type
 20817 ;;		None
 20818 ;; Auto vars:     Size  Location     Type
 20819 ;;		None
 20820 ;; Return value:  Size  Location     Type
 20821 ;;                  1    wreg      unsigned char 
 20822 ;; Registers used:
 20823 ;;		wreg, status,2, cstack
 20824 ;; Tracked objects:
 20825 ;;		On entry : 0/0
 20826 ;;		On exit  : 0/0
 20827 ;;		Unchanged: 0/0
 20828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20833 ;;Total ram usage:        0 bytes
 20834 ;; Hardware stack levels used:    1
 20835 ;; Hardware stack levels required when called:   10
 20836 ;; This function calls:
 20837 ;;		_SPIPut
 20838 ;; This function is called by:
 20839 ;;		_RegisterRead
 20840 ;; This function uses a non-reentrant model
 20841 ;;
 20842                           
 20843                           	psect	text64
 20844  016FD6                     __ptext64:
 20845                           	opt stack 0
 20846  016FD6                     _SPIGet:
 20847                           	opt stack 14
 20848                           
 20849                           ;spi.c: 128: SPIPut(0x00);
 20850                           
 20851                           ; BSR set to: 1
 20852                           ;incstack = 0
 20853  016FD6  0E00               	movlw	0
 20854  016FD8  ECA4  F0B7         	call	_SPIPut
 20855                           
 20856                           ;spi.c: 129: return SSP2BUF;
 20857  016FDC  5075               	movf	3957,w,c	;volatile
 20858  016FDE  0012               	return	
 20859  016FE0                     __end_of_SPIGet:
 20860                           	opt stack 0
 20861                           tblptru	equ	0xFF8
 20862                           tblptrh	equ	0xFF7
 20863                           tblptrl	equ	0xFF6
 20864                           tablat	equ	0xFF5
 20865                           prodh	equ	0xFF4
 20866                           prodl	equ	0xFF3
 20867                           intcon	equ	0xFF2
 20868                           intcon2	equ	0xFF1
 20869                           intcon3	equ	0xFF0
 20870                           indf0	equ	0xFEF
 20871                           postinc0	equ	0xFEE
 20872                           plusw0	equ	0xFEB
 20873                           fsr0h	equ	0xFEA
 20874                           fsr0l	equ	0xFE9
 20875                           wreg	equ	0xFE8
 20876                           indf1	equ	0xFE7
 20877                           postinc1	equ	0xFE6
 20878                           postdec1	equ	0xFE5
 20879                           fsr1h	equ	0xFE2
 20880                           fsr1l	equ	0xFE1
 20881                           indf2	equ	0xFDF
 20882                           postinc2	equ	0xFDE
 20883                           postdec2	equ	0xFDD
 20884                           plusw2	equ	0xFDB
 20885                           fsr2h	equ	0xFDA
 20886                           fsr2l	equ	0xFD9
 20887                           status	equ	0xFD8
 20888                           
 20889 ;; *************** function _SPIPut *****************
 20890 ;; Defined at:
 20891 ;;		line 45 in file "src/18F27J53/spi.c"
 20892 ;; Parameters:    Size  Location     Type
 20893 ;;  v               1    wreg     unsigned char 
 20894 ;; Auto vars:     Size  Location     Type
 20895 ;;  v               1    1[BANK1 ] unsigned char 
 20896 ;;  i               1    0[BANK1 ] unsigned char 
 20897 ;; Return value:  Size  Location     Type
 20898 ;;		None               void
 20899 ;; Registers used:
 20900 ;;		wreg
 20901 ;; Tracked objects:
 20902 ;;		On entry : 0/0
 20903 ;;		On exit  : 0/0
 20904 ;;		Unchanged: 0/0
 20905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20907 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20909 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20910 ;;Total ram usage:        2 bytes
 20911 ;; Hardware stack levels used:    1
 20912 ;; Hardware stack levels required when called:    9
 20913 ;; This function calls:
 20914 ;;		Nothing
 20915 ;; This function is called by:
 20916 ;;		_SPIGet
 20917 ;;		_RegisterSet
 20918 ;;		_RegisterRead
 20919 ;;		_WriteFIFO
 20920 ;; This function uses a non-reentrant model
 20921 ;;
 20922                           
 20923                           	psect	text65
 20924  016F48                     __ptext65:
 20925                           	opt stack 0
 20926  016F48                     _SPIPut:
 20927                           	opt stack 16
 20928                           
 20929                           ;incstack = 0
 20930                           ;SPIPut@v stored from wreg
 20931  016F48  0101               	movlb	1	; () banked
 20932  016F4A  6F8B               	movwf	SPIPut@v& (0+255),b
 20933                           
 20934                           ;spi.c: 66: {
 20935                           ;spi.c: 68: uint8_t i;
 20936                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 20937  016F4C  9EA4               	bcf	4004,7,c	;volatile
 20938                           
 20939                           ;spi.c: 72: i = SSP2BUF;
 20940  016F4E  CF75 F18A          	movff	3957,SPIPut@i	;volatile
 20941  016F52                     l29:
 20942                           
 20943                           ;spi.c: 75: {
 20944                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 20945  016F52  9E72               	bcf	3954,7,c	;volatile
 20946                           
 20947                           ;spi.c: 77: SSP2BUF = v;
 20948  016F54  C18B  FF75         	movff	SPIPut@v,3957	;volatile
 20949                           
 20950                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 20951  016F58  BE72               	btfsc	3954,7,c	;volatile
 20952  016F5A  D7FB               	goto	l29
 20953  016F5C                     l31:
 20954  016F5C  AEA4               	btfss	4004,7,c	;volatile
 20955  016F5E  D7FE               	goto	l31
 20956                           
 20957                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 20958  016F60  9EA4               	bcf	4004,7,c	;volatile
 20959  016F62  0012               	return		;funcret
 20960  016F64                     __end_of_SPIPut:
 20961                           	opt stack 0
 20962                           tblptru	equ	0xFF8
 20963                           tblptrh	equ	0xFF7
 20964                           tblptrl	equ	0xFF6
 20965                           tablat	equ	0xFF5
 20966                           prodh	equ	0xFF4
 20967                           prodl	equ	0xFF3
 20968                           intcon	equ	0xFF2
 20969                           intcon2	equ	0xFF1
 20970                           intcon3	equ	0xFF0
 20971                           indf0	equ	0xFEF
 20972                           postinc0	equ	0xFEE
 20973                           plusw0	equ	0xFEB
 20974                           fsr0h	equ	0xFEA
 20975                           fsr0l	equ	0xFE9
 20976                           wreg	equ	0xFE8
 20977                           indf1	equ	0xFE7
 20978                           postinc1	equ	0xFE6
 20979                           postdec1	equ	0xFE5
 20980                           fsr1h	equ	0xFE2
 20981                           fsr1l	equ	0xFE1
 20982                           indf2	equ	0xFDF
 20983                           postinc2	equ	0xFDE
 20984                           postdec2	equ	0xFDD
 20985                           plusw2	equ	0xFDB
 20986                           fsr2h	equ	0xFDA
 20987                           fsr2l	equ	0xFD9
 20988                           status	equ	0xFD8
 20989                           
 20990 ;; *************** function _CCM_Enc *****************
 20991 ;; Defined at:
 20992 ;;		line 240 in file "src/miwi/drv_mrf_miwi_security.c"
 20993 ;; Parameters:    Size  Location     Type
 20994 ;;  text            2   36[BANK1 ] PTR unsigned char 
 20995 ;;		 -> MACTxBuffer(64), 
 20996 ;;  headerLen       1   38[BANK1 ] unsigned char 
 20997 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 20998 ;;  key             2   40[BANK1 ] PTR unsigned char 
 20999 ;;		 -> key(8), 
 21000 ;; Auto vars:     Size  Location     Type
 21001 ;;  i               1   46[BANK1 ] unsigned char 
 21002 ;; Return value:  Size  Location     Type
 21003 ;;		None               void
 21004 ;; Registers used:
 21005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21006 ;; Tracked objects:
 21007 ;;		On entry : 0/0
 21008 ;;		On exit  : 0/0
 21009 ;;		Unchanged: 0/0
 21010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21011 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21012 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21013 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21014 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21015 ;;Total ram usage:       11 bytes
 21016 ;; Hardware stack levels used:    1
 21017 ;; Hardware stack levels required when called:   11
 21018 ;; This function calls:
 21019 ;;		_CBC_MAC
 21020 ;;		_CTR
 21021 ;; This function is called by:
 21022 ;;		_MiMAC_SendPacket
 21023 ;; This function uses a non-reentrant model
 21024 ;;
 21025                           
 21026                           	psect	text66
 21027  014F0C                     __ptext66:
 21028                           	opt stack 0
 21029  014F0C                     _CCM_Enc:
 21030                           	opt stack 15
 21031                           
 21032                           ;drv_mrf_miwi_security.c: 245: uint8_t i;
 21033                           ;drv_mrf_miwi_security.c: 252: CBC_MAC(text, (headerLen + payloadLen), key, tmpBlock);
 21034                           
 21035                           ;incstack = 0
 21036  014F0C  C1AE  F1A1         	movff	CCM_Enc@text,CBC_MAC@text
 21037  014F10  C1AF  F1A2         	movff	CCM_Enc@text+1,CBC_MAC@text+1
 21038  014F14  0101               	movlb	1	; () banked
 21039  014F16  51B0               	movf	CCM_Enc@headerLen& (0+255),w,b
 21040  014F18  0101               	movlb	1	; () banked
 21041  014F1A  25B1               	addwf	CCM_Enc@payloadLen& (0+255),w,b
 21042  014F1C  0101               	movlb	1	; () banked
 21043  014F1E  6FA3               	movwf	CBC_MAC@len& (0+255),b
 21044  014F20  C1B2  F1A4         	movff	CCM_Enc@key,CBC_MAC@key
 21045  014F24  C1B3  F1A5         	movff	CCM_Enc@key+1,CBC_MAC@key+1
 21046  014F28  0ECC               	movlw	low _tmpBlock
 21047  014F2A  0101               	movlb	1	; () banked
 21048  014F2C  6FA6               	movwf	CBC_MAC@MIC& (0+255),b
 21049  014F2E  0E00               	movlw	high _tmpBlock
 21050  014F30  0101               	movlb	1	; () banked
 21051  014F32  6FA7               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 21052  014F34  EC7D  F0AB         	call	_CBC_MAC	;wreg free
 21053                           
 21054                           ;drv_mrf_miwi_security.c: 254: for(i = 0; i < 4; i++)
 21055  014F38  0E00               	movlw	0
 21056  014F3A  0101               	movlb	1	; () banked
 21057  014F3C  6FB8               	movwf	CCM_Enc@i& (0+255),b
 21058  014F3E                     l11417:
 21059                           
 21060                           ; BSR set to: 1
 21061  014F3E  0E03               	movlw	3
 21062  014F40  0101               	movlb	1	; () banked
 21063  014F42  65B8               	cpfsgt	CCM_Enc@i& (0+255),b
 21064  014F44  D001               	goto	l11421
 21065  014F46  D028               	goto	l11427
 21066  014F48                     l11421:
 21067                           
 21068                           ; BSR set to: 1
 21069                           ;drv_mrf_miwi_security.c: 255: {
 21070                           ;drv_mrf_miwi_security.c: 256: text[headerLen + payloadLen + i] = tmpBlock[i];
 21071  014F48  0101               	movlb	1	; () banked
 21072  014F4A  51B8               	movf	CCM_Enc@i& (0+255),w,b
 21073  014F4C  0D01               	mullw	1
 21074  014F4E  0ECC               	movlw	low _tmpBlock
 21075  014F50  24F3               	addwf	prodl,w,c
 21076  014F52  6ED9               	movwf	fsr2l,c
 21077  014F54  0E00               	movlw	high _tmpBlock
 21078  014F56  20F4               	addwfc	prodh,w,c
 21079  014F58  6EDA               	movwf	fsr2h,c
 21080  014F5A  0101               	movlb	1	; () banked
 21081  014F5C  51B1               	movf	CCM_Enc@payloadLen& (0+255),w,b
 21082  014F5E  C1B0  F1B4         	movff	CCM_Enc@headerLen,??_CCM_Enc
 21083  014F62  0101               	movlb	1	; () banked
 21084  014F64  6BB5               	clrf	(??_CCM_Enc+1)& (0+255),b
 21085  014F66  0101               	movlb	1	; () banked
 21086  014F68  27B4               	addwf	??_CCM_Enc& (0+255),f,b
 21087  014F6A  0E00               	movlw	0
 21088  014F6C  23B5               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 21089  014F6E  0101               	movlb	1	; () banked
 21090  014F70  51B8               	movf	CCM_Enc@i& (0+255),w,b
 21091  014F72  0101               	movlb	1	; () banked
 21092  014F74  27B4               	addwf	??_CCM_Enc& (0+255),f,b
 21093  014F76  0E00               	movlw	0
 21094  014F78  23B5               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 21095  014F7A  0101               	movlb	1	; () banked
 21096  014F7C  51B4               	movf	??_CCM_Enc& (0+255),w,b
 21097  014F7E  0101               	movlb	1	; () banked
 21098  014F80  25AE               	addwf	CCM_Enc@text& (0+255),w,b
 21099  014F82  6EE1               	movwf	fsr1l,c
 21100  014F84  0101               	movlb	1	; () banked
 21101  014F86  51B5               	movf	(??_CCM_Enc+1)& (0+255),w,b
 21102  014F88  0101               	movlb	1	; () banked
 21103  014F8A  21AF               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 21104  014F8C  6EE2               	movwf	fsr1h,c
 21105  014F8E  CFDF FFE7          	movff	indf2,indf1
 21106                           
 21107                           ; BSR set to: 1
 21108  014F92  0101               	movlb	1	; () banked
 21109  014F94  2BB8               	incf	CCM_Enc@i& (0+255),f,b
 21110  014F96  D7D3               	goto	l11417
 21111  014F98                     l11427:
 21112                           
 21113                           ; BSR set to: 1
 21114                           ;drv_mrf_miwi_security.c: 257: }
 21115                           ;drv_mrf_miwi_security.c: 259: for(i = 0; i < 4-1; i++)
 21116  014F98  0E00               	movlw	0
 21117  014F9A  0101               	movlb	1	; () banked
 21118  014F9C  6FB8               	movwf	CCM_Enc@i& (0+255),b
 21119  014F9E                     l11429:
 21120                           
 21121                           ; BSR set to: 1
 21122  014F9E  0E02               	movlw	2
 21123  014FA0  0101               	movlb	1	; () banked
 21124  014FA2  65B8               	cpfsgt	CCM_Enc@i& (0+255),b
 21125  014FA4  D001               	goto	l11433
 21126  014FA6  D02D               	goto	l11443
 21127  014FA8                     l11433:
 21128                           
 21129                           ; BSR set to: 1
 21130                           ;drv_mrf_miwi_security.c: 260: {
 21131                           ;drv_mrf_miwi_security.c: 261: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 21132  014FA8  0101               	movlb	1	; () banked
 21133  014FAA  51B0               	movf	CCM_Enc@headerLen& (0+255),w,b
 21134  014FAC  0101               	movlb	1	; () banked
 21135  014FAE  5DB8               	subwf	CCM_Enc@i& (0+255),w,b
 21136  014FB0  A0D8               	btfss	status,0,c
 21137  014FB2  D006               	goto	l11437
 21138                           
 21139                           ; BSR set to: 1
 21140  014FB4  0E00               	movlw	0
 21141  014FB6  0101               	movlb	1	; () banked
 21142  014FB8  6FB7               	movwf	(_CCM_Enc$2085+1)& (0+255),b
 21143  014FBA  0E00               	movlw	0
 21144  014FBC  6FB6               	movwf	_CCM_Enc$2085& (0+255),b
 21145  014FBE  D013               	goto	l468
 21146  014FC0                     l11437:
 21147                           
 21148                           ; BSR set to: 1
 21149  014FC0  0101               	movlb	1	; () banked
 21150  014FC2  51B8               	movf	CCM_Enc@i& (0+255),w,b
 21151  014FC4  0D01               	mullw	1
 21152  014FC6  50F3               	movf	prodl,w,c
 21153  014FC8  0101               	movlb	1	; () banked
 21154  014FCA  25AE               	addwf	CCM_Enc@text& (0+255),w,b
 21155  014FCC  6ED9               	movwf	fsr2l,c
 21156  014FCE  50F4               	movf	prodh,w,c
 21157  014FD0  0101               	movlb	1	; () banked
 21158  014FD2  21AF               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 21159  014FD4  6EDA               	movwf	fsr2h,c
 21160  014FD6  50DF               	movf	indf2,w,c
 21161  014FD8  0101               	movlb	1	; () banked
 21162  014FDA  6FB4               	movwf	??_CCM_Enc& (0+255),b
 21163  014FDC  0101               	movlb	1	; () banked
 21164  014FDE  51B4               	movf	??_CCM_Enc& (0+255),w,b
 21165  014FE0  0101               	movlb	1	; () banked
 21166  014FE2  6FB6               	movwf	_CCM_Enc$2085& (0+255),b
 21167  014FE4  6BB7               	clrf	(_CCM_Enc$2085+1)& (0+255),b
 21168  014FE6                     l468:
 21169                           
 21170                           ; BSR set to: 1
 21171  014FE6  0101               	movlb	1	; () banked
 21172  014FE8  51B8               	movf	CCM_Enc@i& (0+255),w,b
 21173  014FEA  0D01               	mullw	1
 21174  014FEC  0ECC               	movlw	low _tmpBlock
 21175  014FEE  24F3               	addwf	prodl,w,c
 21176  014FF0  6ED9               	movwf	fsr2l,c
 21177  014FF2  0E00               	movlw	high _tmpBlock
 21178  014FF4  20F4               	addwfc	prodh,w,c
 21179  014FF6  6EDA               	movwf	fsr2h,c
 21180  014FF8  C1B6  FFDF         	movff	_CCM_Enc$2085,indf2
 21181                           
 21182                           ; BSR set to: 1
 21183  014FFC  0101               	movlb	1	; () banked
 21184  014FFE  2BB8               	incf	CCM_Enc@i& (0+255),f,b
 21185  015000  D7CE               	goto	l11429
 21186  015002                     l11443:
 21187                           
 21188                           ; BSR set to: 1
 21189                           ;drv_mrf_miwi_security.c: 262: }
 21190                           ;drv_mrf_miwi_security.c: 264: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBlock);
 21191  015002  0101               	movlb	1	; () banked
 21192  015004  51B0               	movf	CCM_Enc@headerLen& (0+255),w,b
 21193  015006  0D01               	mullw	1
 21194  015008  50F3               	movf	prodl,w,c
 21195  01500A  0101               	movlb	1	; () banked
 21196  01500C  25AE               	addwf	CCM_Enc@text& (0+255),w,b
 21197  01500E  0101               	movlb	1	; () banked
 21198  015010  6FA1               	movwf	CTR@text& (0+255),b
 21199  015012  50F4               	movf	prodh,w,c
 21200  015014  0101               	movlb	1	; () banked
 21201  015016  21AF               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 21202  015018  0101               	movlb	1	; () banked
 21203  01501A  6FA2               	movwf	(CTR@text+1)& (0+255),b
 21204  01501C  0101               	movlb	1	; () banked
 21205  01501E  51B1               	movf	CCM_Enc@payloadLen& (0+255),w,b
 21206  015020  0F04               	addlw	4
 21207  015022  0101               	movlb	1	; () banked
 21208  015024  6FA3               	movwf	CTR@len& (0+255),b
 21209  015026  C1B2  F1A4         	movff	CCM_Enc@key,CTR@key
 21210  01502A  C1B3  F1A5         	movff	CCM_Enc@key+1,CTR@key+1
 21211  01502E  0ECC               	movlw	low _tmpBlock
 21212  015030  0101               	movlb	1	; () banked
 21213  015032  6FA6               	movwf	CTR@nounce& (0+255),b
 21214  015034  0E00               	movlw	high _tmpBlock
 21215  015036  0101               	movlb	1	; () banked
 21216  015038  6FA7               	movwf	(CTR@nounce+1)& (0+255),b
 21217  01503A  ECD8  F0A9         	call	_CTR	;wreg free
 21218  01503E  0012               	return		;funcret
 21219  015040                     __end_of_CCM_Enc:
 21220                           	opt stack 0
 21221                           tblptru	equ	0xFF8
 21222                           tblptrh	equ	0xFF7
 21223                           tblptrl	equ	0xFF6
 21224                           tablat	equ	0xFF5
 21225                           prodh	equ	0xFF4
 21226                           prodl	equ	0xFF3
 21227                           intcon	equ	0xFF2
 21228                           intcon2	equ	0xFF1
 21229                           intcon3	equ	0xFF0
 21230                           indf0	equ	0xFEF
 21231                           postinc0	equ	0xFEE
 21232                           plusw0	equ	0xFEB
 21233                           fsr0h	equ	0xFEA
 21234                           fsr0l	equ	0xFE9
 21235                           wreg	equ	0xFE8
 21236                           indf1	equ	0xFE7
 21237                           postinc1	equ	0xFE6
 21238                           postdec1	equ	0xFE5
 21239                           fsr1h	equ	0xFE2
 21240                           fsr1l	equ	0xFE1
 21241                           indf2	equ	0xFDF
 21242                           postinc2	equ	0xFDE
 21243                           postdec2	equ	0xFDD
 21244                           plusw2	equ	0xFDB
 21245                           fsr2h	equ	0xFDA
 21246                           fsr2l	equ	0xFD9
 21247                           status	equ	0xFD8
 21248                           
 21249 ;; *************** function _MiMAC_ReceivedPacket *****************
 21250 ;; Defined at:
 21251 ;;		line 858 in file "src/miwi/drv_mrf_miwi_89xa.c"
 21252 ;; Parameters:    Size  Location     Type
 21253 ;;		None
 21254 ;; Auto vars:     Size  Location     Type
 21255 ;;  FrameCounter    4   63[BANK1 ] struct .
 21256 ;;  k               1   67[BANK1 ] unsigned char 
 21257 ;;  PayloadIndex    1   69[BANK1 ] unsigned char 
 21258 ;;  j               1   68[BANK1 ] unsigned char 
 21259 ;;  currentTick     4   59[BANK1 ] struct _MIWI_TICK
 21260 ;;  i               1   70[BANK1 ] unsigned char 
 21261 ;; Return value:  Size  Location     Type
 21262 ;;                  1    wreg      unsigned char 
 21263 ;; Registers used:
 21264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21265 ;; Tracked objects:
 21266 ;;		On entry : 0/0
 21267 ;;		On exit  : 0/0
 21268 ;;		Unchanged: 0/0
 21269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21271 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21272 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21273 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21274 ;;Total ram usage:       20 bytes
 21275 ;; Hardware stack levels used:    1
 21276 ;; Hardware stack levels required when called:   12
 21277 ;; This function calls:
 21278 ;;		_CCM_Dec
 21279 ;;		_MiWi_TickGet
 21280 ;;		_isSameAddress
 21281 ;; This function is called by:
 21282 ;;		_MiWiTasks
 21283 ;; This function uses a non-reentrant model
 21284 ;;
 21285                           
 21286                           	psect	text67
 21287  011FDA                     __ptext67:
 21288                           	opt stack 0
 21289  011FDA                     _MiMAC_ReceivedPacket:
 21290                           	opt stack 13
 21291                           
 21292                           ;drv_mrf_miwi_89xa.c: 860: uint8_t i;
 21293                           ;drv_mrf_miwi_89xa.c: 861: MIWI_TICK currentTick;
 21294                           ;drv_mrf_miwi_89xa.c: 865: for(i = 0; i < 5; i++)
 21295                           
 21296                           ;incstack = 0
 21297  011FDA  0E00               	movlw	0
 21298  011FDC  0101               	movlb	1	; () banked
 21299  011FDE  6FD0               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 21300  011FE0                     l11675:
 21301                           
 21302                           ; BSR set to: 1
 21303  011FE0  0E04               	movlw	4
 21304  011FE2  0101               	movlb	1	; () banked
 21305  011FE4  65D0               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 21306  011FE6  D001               	goto	l11679
 21307  011FE8  D084               	goto	l11693
 21308  011FEA                     l11679:
 21309                           
 21310                           ; BSR set to: 1
 21311                           ;drv_mrf_miwi_89xa.c: 866: {
 21312                           ;drv_mrf_miwi_89xa.c: 867: currentTick = MiWi_TickGet();
 21313  011FEA  EC18  F0B4         	call	_MiWi_TickGet	;wreg free
 21314  011FEE  C18A  F1C5         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
 21315  011FF2  C18B  F1C6         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
 21316  011FF6  C18C  F1C7         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
 21317  011FFA  C18D  F1C8         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
 21318                           
 21319                           ;drv_mrf_miwi_89xa.c: 868: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
 21320                           ;drv_mrf_miwi_89xa.c: 869: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          6000000)/32)) )
 21321  011FFE  0101               	movlb	1	; () banked
 21322  012000  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21323  012002  0D06               	mullw	6
 21324  012004  0E28               	movlw	low _AckInfo
 21325  012006  24F3               	addwf	prodl,w,c
 21326  012008  6ED9               	movwf	fsr2l,c
 21327  01200A  0E02               	movlw	high _AckInfo
 21328  01200C  20F4               	addwfc	prodh,w,c
 21329  01200E  6EDA               	movwf	fsr2h,c
 21330  012010  50DF               	movf	indf2,w,c
 21331  012012  B4D8               	btfsc	status,2,c
 21332  012014  D06B               	goto	l11689
 21333                           
 21334                           ; BSR set to: 1
 21335  012016  0101               	movlb	1	; () banked
 21336  012018  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21337  01201A  0D06               	mullw	6
 21338  01201C  0E02               	movlw	2
 21339  01201E  26F3               	addwf	prodl,f,c
 21340  012020  0E00               	movlw	0
 21341  012022  22F4               	addwfc	prodh,f,c
 21342  012024  0E28               	movlw	low _AckInfo
 21343  012026  24F3               	addwf	prodl,w,c
 21344  012028  6ED9               	movwf	fsr2l,c
 21345  01202A  0E02               	movlw	high _AckInfo
 21346  01202C  20F4               	addwfc	prodh,w,c
 21347  01202E  6EDA               	movwf	fsr2h,c
 21348  012030  0101               	movlb	1	; () banked
 21349  012032  51C5               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 21350  012034  5CDE               	subwf	postinc2,w,c
 21351  012036  0101               	movlb	1	; () banked
 21352  012038  51C6               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 21353  01203A  58DE               	subwfb	postinc2,w,c
 21354  01203C  0101               	movlb	1	; () banked
 21355  01203E  51C7               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 21356  012040  58DE               	subwfb	postinc2,w,c
 21357  012042  0101               	movlb	1	; () banked
 21358  012044  51C8               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 21359  012046  58DE               	subwfb	postinc2,w,c
 21360  012048  B0D8               	btfsc	status,0,c
 21361  01204A  D050               	goto	l11689
 21362                           
 21363                           ; BSR set to: 1
 21364  01204C  0101               	movlb	1	; () banked
 21365  01204E  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21366  012050  0D06               	mullw	6
 21367  012052  0E02               	movlw	2
 21368  012054  26F3               	addwf	prodl,f,c
 21369  012056  0E00               	movlw	0
 21370  012058  22F4               	addwfc	prodh,f,c
 21371  01205A  0E28               	movlw	low _AckInfo
 21372  01205C  24F3               	addwf	prodl,w,c
 21373  01205E  6ED9               	movwf	fsr2l,c
 21374  012060  0E02               	movlw	high _AckInfo
 21375  012062  20F4               	addwfc	prodh,w,c
 21376  012064  6EDA               	movwf	fsr2h,c
 21377  012066  CFDE F1BD          	movff	postinc2,??_MiMAC_ReceivedPacket
 21378  01206A  CFDE F1BE          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 21379  01206E  CFDE F1BF          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 21380  012072  CFDE F1C0          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 21381  012076  0101               	movlb	1	; () banked
 21382  012078  1FBD               	comf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21383  01207A  1FBE               	comf	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21384  01207C  1FBF               	comf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21385  01207E  1FC0               	comf	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21386  012080  2BBD               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21387  012082  0E00               	movlw	0
 21388  012084  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21389  012086  23BF               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21390  012088  23C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21391  01208A  0101               	movlb	1	; () banked
 21392  01208C  51C5               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 21393  01208E  0101               	movlb	1	; () banked
 21394  012090  25BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21395  012092  0101               	movlb	1	; () banked
 21396  012094  6FC1               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 21397  012096  0101               	movlb	1	; () banked
 21398  012098  51C6               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 21399  01209A  0101               	movlb	1	; () banked
 21400  01209C  21BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21401  01209E  0101               	movlb	1	; () banked
 21402  0120A0  6FC2               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 21403  0120A2  0101               	movlb	1	; () banked
 21404  0120A4  51C7               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 21405  0120A6  0101               	movlb	1	; () banked
 21406  0120A8  21BF               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21407  0120AA  0101               	movlb	1	; () banked
 21408  0120AC  6FC3               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 21409  0120AE  0101               	movlb	1	; () banked
 21410  0120B0  51C8               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 21411  0120B2  0101               	movlb	1	; () banked
 21412  0120B4  21C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21413  0120B6  0101               	movlb	1	; () banked
 21414  0120B8  6FC4               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 21415  0120BA  0101               	movlb	1	; () banked
 21416  0120BC  51C4               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 21417  0120BE  E10B               	bnz	u13350
 21418  0120C0  0E21               	movlw	33
 21419  0120C2  0101               	movlb	1	; () banked
 21420  0120C4  5DC1               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 21421  0120C6  0EA1               	movlw	161
 21422  0120C8  0101               	movlb	1	; () banked
 21423  0120CA  59C2               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 21424  0120CC  0E07               	movlw	7
 21425  0120CE  0101               	movlb	1	; () banked
 21426  0120D0  59C3               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 21427  0120D2  A0D8               	btfss	status,0,c
 21428  0120D4  D00B               	goto	l11689
 21429  0120D6                     u13350:
 21430                           
 21431                           ; BSR set to: 1
 21432                           ;drv_mrf_miwi_89xa.c: 870: {
 21433                           ;drv_mrf_miwi_89xa.c: 871: AckInfo[i].Valid = 0;
 21434  0120D6  0101               	movlb	1	; () banked
 21435  0120D8  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21436  0120DA  0D06               	mullw	6
 21437  0120DC  0E28               	movlw	low _AckInfo
 21438  0120DE  24F3               	addwf	prodl,w,c
 21439  0120E0  6ED9               	movwf	fsr2l,c
 21440  0120E2  0E02               	movlw	high _AckInfo
 21441  0120E4  20F4               	addwfc	prodh,w,c
 21442  0120E6  6EDA               	movwf	fsr2h,c
 21443  0120E8  0E00               	movlw	0
 21444  0120EA  6EDF               	movwf	indf2,c
 21445  0120EC                     l11689:
 21446                           
 21447                           ; BSR set to: 1
 21448  0120EC  0101               	movlb	1	; () banked
 21449  0120EE  2BD0               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 21450  0120F0  D777               	goto	l11675
 21451  0120F2                     l11693:
 21452                           
 21453                           ; BSR set to: 1
 21454                           ;drv_mrf_miwi_89xa.c: 872: }
 21455                           ;drv_mrf_miwi_89xa.c: 873: }
 21456                           ;drv_mrf_miwi_89xa.c: 876: if( ReceivedBankIndex != 0xFF )
 21457  0120F2  0101               	movlb	1	; () banked
 21458  0120F4  2945               	incf	_ReceivedBankIndex& (0+255),w,b
 21459  0120F6  B4D8               	btfsc	status,2,c
 21460  0120F8  D002               	goto	l11699
 21461                           
 21462                           ; BSR set to: 1
 21463                           ;drv_mrf_miwi_89xa.c: 877: {
 21464                           ;drv_mrf_miwi_89xa.c: 878: return 0;
 21465  0120FA  0E00               	movlw	0
 21466                           
 21467                           ; BSR set to: 1
 21468  0120FC  0012               	return	
 21469  0120FE                     l11699:
 21470                           
 21471                           ; BSR set to: 1
 21472                           ;drv_mrf_miwi_89xa.c: 879: }
 21473                           ;drv_mrf_miwi_89xa.c: 881: for(i = 0; i < 2; i++)
 21474  0120FE  0E00               	movlw	0
 21475  012100  0101               	movlb	1	; () banked
 21476  012102  6FD0               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 21477  012104                     l11701:
 21478                           
 21479                           ; BSR set to: 1
 21480  012104  0E01               	movlw	1
 21481  012106  0101               	movlb	1	; () banked
 21482  012108  65D0               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 21483  01210A  D001               	goto	l11705
 21484  01210C  D1C1               	goto	l11803
 21485  01210E                     l11705:
 21486                           
 21487                           ; BSR set to: 1
 21488                           ;drv_mrf_miwi_89xa.c: 882: {
 21489                           ;drv_mrf_miwi_89xa.c: 883: if( RxPacket[i].flags.bits.Valid )
 21490  01210E  0101               	movlb	1	; () banked
 21491  012110  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21492  012112  0D42               	mullw	66
 21493  012114  0E50               	movlw	low _RxPacket
 21494  012116  24F3               	addwf	prodl,w,c
 21495  012118  6ED9               	movwf	fsr2l,c
 21496  01211A  0E03               	movlw	high _RxPacket
 21497  01211C  20F4               	addwfc	prodh,w,c
 21498  01211E  6EDA               	movwf	fsr2h,c
 21499  012120  0103               	movlb	3	; () banked
 21500  012122  A0DF               	btfss	indf2,0,c
 21501  012124  D1B2               	goto	l11799
 21502                           
 21503                           ; BSR set to: 3
 21504                           ;drv_mrf_miwi_89xa.c: 884: {
 21505                           ;drv_mrf_miwi_89xa.c: 885: uint8_t PayloadIndex;
 21506                           ;drv_mrf_miwi_89xa.c: 886: uint8_t j;
 21507                           ;drv_mrf_miwi_89xa.c: 888: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 21508  012126  0101               	movlb	1	; () banked
 21509  012128  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21510  01212A  0D42               	mullw	66
 21511  01212C  0E01               	movlw	1
 21512  01212E  26F3               	addwf	prodl,f,c
 21513  012130  0E00               	movlw	0
 21514  012132  22F4               	addwfc	prodh,f,c
 21515  012134  0E50               	movlw	low _RxPacket
 21516  012136  24F3               	addwf	prodl,w,c
 21517  012138  6ED9               	movwf	fsr2l,c
 21518  01213A  0E03               	movlw	high _RxPacket
 21519  01213C  20F4               	addwfc	prodh,w,c
 21520  01213E  6EDA               	movwf	fsr2h,c
 21521  012140  50DF               	movf	indf2,w,c
 21522  012142  0101               	movlb	1	; () banked
 21523  012144  6F16               	movwf	_MACRxPacket& (0+255),b
 21524                           
 21525                           ;drv_mrf_miwi_89xa.c: 889: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 21526  012146  0101               	movlb	1	; () banked
 21527  012148  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21528  01214A  0D42               	mullw	66
 21529  01214C  0E41               	movlw	65
 21530  01214E  26F3               	addwf	prodl,f,c
 21531  012150  0E00               	movlw	0
 21532  012152  22F4               	addwfc	prodh,f,c
 21533  012154  0E50               	movlw	low _RxPacket
 21534  012156  24F3               	addwf	prodl,w,c
 21535  012158  6ED9               	movwf	fsr2l,c
 21536  01215A  0E03               	movlw	high _RxPacket
 21537  01215C  20F4               	addwfc	prodh,w,c
 21538  01215E  6EDA               	movwf	fsr2h,c
 21539  012160  50DF               	movf	indf2,w,c
 21540  012162  0101               	movlb	1	; () banked
 21541  012164  6F1B               	movwf	(_MACRxPacket+5)& (0+255),b
 21542                           
 21543                           ; BSR set to: 1
 21544                           ;drv_mrf_miwi_89xa.c: 890: PayloadIndex = 2;
 21545  012166  0E02               	movlw	2
 21546  012168  0101               	movlb	1	; () banked
 21547  01216A  6FCF               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 21548                           
 21549                           ; BSR set to: 1
 21550                           ;drv_mrf_miwi_89xa.c: 892: if( MACRxPacket.flags.bits.destPrsnt )
 21551  01216C  0101               	movlb	1	; () banked
 21552  01216E  AD16               	btfss	_MACRxPacket& (0+255),6,b
 21553  012170  D007               	goto	l11715
 21554                           
 21555                           ; BSR set to: 1
 21556                           ;drv_mrf_miwi_89xa.c: 893: {
 21557                           ;drv_mrf_miwi_89xa.c: 894: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 21558  012172  0100               	movlb	0	; () banked
 21559  012174  31AF               	rrcf	_MACInitParams& (0+255),w,b
 21560  012176  32E8               	rrcf	wreg,f,c
 21561  012178  32E8               	rrcf	wreg,f,c
 21562  01217A  0B0F               	andlw	15
 21563  01217C  0101               	movlb	1	; () banked
 21564  01217E  27CF               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21565  012180                     l11715:
 21566                           
 21567                           ; BSR set to: 1
 21568                           ;drv_mrf_miwi_89xa.c: 895: }
 21569                           ;drv_mrf_miwi_89xa.c: 897: if( MACRxPacket.flags.bits.sourcePrsnt )
 21570  012180  0101               	movlb	1	; () banked
 21571  012182  AF16               	btfss	_MACRxPacket& (0+255),7,b
 21572  012184  D028               	goto	l11721
 21573                           
 21574                           ; BSR set to: 1
 21575                           ;drv_mrf_miwi_89xa.c: 898: {
 21576                           ;drv_mrf_miwi_89xa.c: 899: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 21577  012186  0101               	movlb	1	; () banked
 21578  012188  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21579  01218A  0D01               	mullw	1
 21580  01218C  0E01               	movlw	1
 21581  01218E  26F3               	addwf	prodl,f,c
 21582  012190  0E00               	movlw	0
 21583  012192  22F4               	addwfc	prodh,f,c
 21584  012194  0E50               	movlw	low _RxPacket
 21585  012196  0101               	movlb	1	; () banked
 21586  012198  6FBD               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21587  01219A  0E03               	movlw	high _RxPacket
 21588  01219C  0101               	movlb	1	; () banked
 21589  01219E  6FBE               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21590  0121A0  50F3               	movf	prodl,w,c
 21591  0121A2  0101               	movlb	1	; () banked
 21592  0121A4  27BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21593  0121A6  50F4               	movf	prodh,w,c
 21594  0121A8  0101               	movlb	1	; () banked
 21595  0121AA  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21596  0121AC  0101               	movlb	1	; () banked
 21597  0121AE  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21598  0121B0  0D42               	mullw	66
 21599  0121B2  50F3               	movf	prodl,w,c
 21600  0121B4  0101               	movlb	1	; () banked
 21601  0121B6  25BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21602  0121B8  0101               	movlb	1	; () banked
 21603  0121BA  6F17               	movwf	(_MACRxPacket+1)& (0+255),b
 21604  0121BC  50F4               	movf	prodh,w,c
 21605  0121BE  0101               	movlb	1	; () banked
 21606  0121C0  21BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21607  0121C2  0101               	movlb	1	; () banked
 21608  0121C4  6F18               	movwf	(_MACRxPacket+2)& (0+255),b
 21609                           
 21610                           ; BSR set to: 1
 21611                           ;drv_mrf_miwi_89xa.c: 900: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 21612  0121C6  0100               	movlb	0	; () banked
 21613  0121C8  31AF               	rrcf	_MACInitParams& (0+255),w,b
 21614  0121CA  32E8               	rrcf	wreg,f,c
 21615  0121CC  32E8               	rrcf	wreg,f,c
 21616  0121CE  0B0F               	andlw	15
 21617  0121D0  0101               	movlb	1	; () banked
 21618  0121D2  27CF               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21619                           
 21620                           ;drv_mrf_miwi_89xa.c: 901: }
 21621  0121D4  D006               	goto	l11723
 21622  0121D6                     l11721:
 21623                           
 21624                           ; BSR set to: 1
 21625                           ;drv_mrf_miwi_89xa.c: 902: else
 21626                           ;drv_mrf_miwi_89xa.c: 903: {
 21627                           ;drv_mrf_miwi_89xa.c: 904: MACRxPacket.SourceAddress = (0);
 21628  0121D6  0E00               	movlw	0
 21629  0121D8  0101               	movlb	1	; () banked
 21630  0121DA  6F17               	movwf	(_MACRxPacket+1)& (0+255),b
 21631  0121DC  0E00               	movlw	0
 21632  0121DE  0101               	movlb	1	; () banked
 21633  0121E0  6F18               	movwf	(_MACRxPacket+2)& (0+255),b
 21634  0121E2                     l11723:
 21635                           
 21636                           ; BSR set to: 1
 21637                           ;drv_mrf_miwi_89xa.c: 905: }
 21638                           ;drv_mrf_miwi_89xa.c: 909: if( MACRxPacket.flags.bits.secEn )
 21639  0121E2  0101               	movlb	1	; () banked
 21640  0121E4  A716               	btfss	_MACRxPacket& (0+255),3,b
 21641  0121E6  D127               	goto	l11787
 21642                           
 21643                           ; BSR set to: 1
 21644                           ;drv_mrf_miwi_89xa.c: 910: {
 21645                           ;drv_mrf_miwi_89xa.c: 912: if( 0x00 != RxPacket[i].Payload[PayloadIndex+4] )
 21646  0121E8  0101               	movlb	1	; () banked
 21647  0121EA  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21648  0121EC  0D42               	mullw	66
 21649  0121EE  0101               	movlb	1	; () banked
 21650  0121F0  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21651  0121F2  0101               	movlb	1	; () banked
 21652  0121F4  6FBD               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21653  0121F6  6BBE               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21654  0121F8  0E05               	movlw	5
 21655  0121FA  0101               	movlb	1	; () banked
 21656  0121FC  27BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21657  0121FE  0E00               	movlw	0
 21658  012200  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21659  012202  0E50               	movlw	low _RxPacket
 21660  012204  0101               	movlb	1	; () banked
 21661  012206  6FBF               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 21662  012208  0E03               	movlw	high _RxPacket
 21663  01220A  0101               	movlb	1	; () banked
 21664  01220C  6FC0               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 21665  01220E  0101               	movlb	1	; () banked
 21666  012210  51BD               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21667  012212  0101               	movlb	1	; () banked
 21668  012214  27BF               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21669  012216  0101               	movlb	1	; () banked
 21670  012218  51BE               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21671  01221A  0101               	movlb	1	; () banked
 21672  01221C  23C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21673  01221E  50F3               	movf	prodl,w,c
 21674  012220  0101               	movlb	1	; () banked
 21675  012222  25BF               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21676  012224  6ED9               	movwf	fsr2l,c
 21677  012226  50F4               	movf	prodh,w,c
 21678  012228  0101               	movlb	1	; () banked
 21679  01222A  21C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21680  01222C  6EDA               	movwf	fsr2h,c
 21681  01222E  50DF               	movf	indf2,w,c
 21682  012230  B4D8               	btfsc	status,2,c
 21683  012232  D00D               	goto	l352
 21684                           
 21685                           ; BSR set to: 1
 21686                           ;drv_mrf_miwi_89xa.c: 913: {
 21687                           ;drv_mrf_miwi_89xa.c: 914: RxPacket[i].flags.Val = 0;
 21688  012234  0101               	movlb	1	; () banked
 21689  012236  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21690  012238  0D42               	mullw	66
 21691  01223A  0E50               	movlw	low _RxPacket
 21692  01223C  24F3               	addwf	prodl,w,c
 21693  01223E  6ED9               	movwf	fsr2l,c
 21694  012240  0E03               	movlw	high _RxPacket
 21695  012242  20F4               	addwfc	prodh,w,c
 21696  012244  6EDA               	movwf	fsr2h,c
 21697  012246  0E00               	movlw	0
 21698  012248  6EDF               	movwf	indf2,c
 21699                           
 21700                           ; BSR set to: 1
 21701                           ;drv_mrf_miwi_89xa.c: 915: return 0;
 21702  01224A  0E00               	movlw	0
 21703                           
 21704                           ; BSR set to: 1
 21705  01224C  0012               	return	
 21706  01224E                     l352:
 21707                           
 21708                           ; BSR set to: 1
 21709                           ;drv_mrf_miwi_89xa.c: 916: }
 21710                           ;drv_mrf_miwi_89xa.c: 919: if( MACRxPacket.flags.bits.sourcePrsnt )
 21711  01224E  0101               	movlb	1	; () banked
 21712  012250  AF16               	btfss	_MACRxPacket& (0+255),7,b
 21713  012252  D0AA               	goto	l11775
 21714                           
 21715                           ; BSR set to: 1
 21716                           ;drv_mrf_miwi_89xa.c: 920: {
 21717                           ;drv_mrf_miwi_89xa.c: 922: for(j = 0; j < 10; j++)
 21718  012254  0E00               	movlw	0
 21719  012256  0101               	movlb	1	; () banked
 21720  012258  6FCE               	movwf	MiMAC_ReceivedPacket@j& (0+255),b
 21721  01225A                     l11735:
 21722                           
 21723                           ; BSR set to: 1
 21724  01225A  0E09               	movlw	9
 21725  01225C  0101               	movlb	1	; () banked
 21726  01225E  65CE               	cpfsgt	MiMAC_ReceivedPacket@j& (0+255),b
 21727  012260  D001               	goto	l11739
 21728  012262  D02B               	goto	l11749
 21729  012264                     l11739:
 21730                           
 21731                           ; BSR set to: 1
 21732                           ;drv_mrf_miwi_89xa.c: 923: {
 21733                           ;drv_mrf_miwi_89xa.c: 924: if( (ConnectionTable[j].status.bits.isValid) &&
 21734                           ;drv_mrf_miwi_89xa.c: 925: isSameAddress(ConnectionTable[j].Address, MACRxPacket.SourceA
      +                          ddress) )
 21735  012264  0101               	movlb	1	; () banked
 21736  012266  51CE               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21737  012268  0D09               	mullw	9
 21738  01226A  0E08               	movlw	8
 21739  01226C  26F3               	addwf	prodl,f,c
 21740  01226E  0E00               	movlw	0
 21741  012270  22F4               	addwfc	prodh,f,c
 21742  012272  0E46               	movlw	low _ConnectionTable
 21743  012274  24F3               	addwf	prodl,w,c
 21744  012276  6ED9               	movwf	fsr2l,c
 21745  012278  0E02               	movlw	high _ConnectionTable
 21746  01227A  20F4               	addwfc	prodh,w,c
 21747  01227C  6EDA               	movwf	fsr2h,c
 21748  01227E  0102               	movlb	2	; () banked
 21749  012280  AEDF               	btfss	indf2,7,c
 21750  012282  D018               	goto	l11745
 21751                           
 21752                           ; BSR set to: 2
 21753  012284  0101               	movlb	1	; () banked
 21754  012286  51CE               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21755  012288  0D09               	mullw	9
 21756  01228A  0E04               	movlw	4
 21757  01228C  26F3               	addwf	prodl,f,c
 21758  01228E  0E00               	movlw	0
 21759  012290  22F4               	addwfc	prodh,f,c
 21760  012292  0E46               	movlw	low _ConnectionTable
 21761  012294  24F3               	addwf	prodl,w,c
 21762  012296  0101               	movlb	1	; () banked
 21763  012298  6F8A               	movwf	isSameAddress@Address1& (0+255),b
 21764  01229A  0E02               	movlw	high _ConnectionTable
 21765  01229C  20F4               	addwfc	prodh,w,c
 21766  01229E  0101               	movlb	1	; () banked
 21767  0122A0  6F8B               	movwf	(isSameAddress@Address1+1)& (0+255),b
 21768  0122A2  C117  F18C         	movff	_MACRxPacket+1,isSameAddress@Address2
 21769  0122A6  C118  F18D         	movff	_MACRxPacket+2,isSameAddress@Address2+1
 21770  0122AA  ECB3  F0B5         	call	_isSameAddress	;wreg free
 21771  0122AE  0900               	iorlw	0
 21772  0122B0  A4D8               	btfss	status,2,c
 21773  0122B2  D003               	goto	l11749
 21774  0122B4                     l11745:
 21775  0122B4  0101               	movlb	1	; () banked
 21776  0122B6  2BCE               	incf	MiMAC_ReceivedPacket@j& (0+255),f,b
 21777  0122B8  D7D0               	goto	l11735
 21778  0122BA                     l11749:
 21779                           
 21780                           ;drv_mrf_miwi_89xa.c: 928: }
 21781                           ;drv_mrf_miwi_89xa.c: 929: }
 21782                           ;drv_mrf_miwi_89xa.c: 930: if( j < 10 )
 21783  0122BA  0E0A               	movlw	10
 21784  0122BC  0101               	movlb	1	; () banked
 21785  0122BE  61CE               	cpfslt	MiMAC_ReceivedPacket@j& (0+255),b
 21786  0122C0  D073               	goto	l11775
 21787                           
 21788                           ; BSR set to: 1
 21789                           ;drv_mrf_miwi_89xa.c: 931: {
 21790                           ;drv_mrf_miwi_89xa.c: 932: API_UINT32_UNION FrameCounter;
 21791                           ;drv_mrf_miwi_89xa.c: 933: uint8_t k;
 21792                           ;drv_mrf_miwi_89xa.c: 935: for(k = 0; k < 4; k++)
 21793  0122C2  0E00               	movlw	0
 21794  0122C4  0101               	movlb	1	; () banked
 21795  0122C6  6FCD               	movwf	MiMAC_ReceivedPacket@k& (0+255),b
 21796  0122C8                     l11753:
 21797                           
 21798                           ; BSR set to: 1
 21799  0122C8  0E03               	movlw	3
 21800  0122CA  0101               	movlb	1	; () banked
 21801  0122CC  65CD               	cpfsgt	MiMAC_ReceivedPacket@k& (0+255),b
 21802  0122CE  D001               	goto	l11757
 21803  0122D0  D036               	goto	l11763
 21804  0122D2                     l11757:
 21805                           
 21806                           ; BSR set to: 1
 21807                           ;drv_mrf_miwi_89xa.c: 936: {
 21808                           ;drv_mrf_miwi_89xa.c: 937: FrameCounter.v[k] = RxPacket[i].Payload[PayloadIndex+k];
 21809  0122D2  0101               	movlb	1	; () banked
 21810  0122D4  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21811  0122D6  0D42               	mullw	66
 21812  0122D8  0101               	movlb	1	; () banked
 21813  0122DA  51CD               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 21814  0122DC  C1CF  F1BD         	movff	MiMAC_ReceivedPacket@PayloadIndex,??_MiMAC_ReceivedPacket
 21815  0122E0  0101               	movlb	1	; () banked
 21816  0122E2  6BBE               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21817  0122E4  0101               	movlb	1	; () banked
 21818  0122E6  27BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21819  0122E8  0E00               	movlw	0
 21820  0122EA  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21821  0122EC  0E01               	movlw	1
 21822  0122EE  0101               	movlb	1	; () banked
 21823  0122F0  27BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21824  0122F2  0E00               	movlw	0
 21825  0122F4  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21826  0122F6  0E50               	movlw	low _RxPacket
 21827  0122F8  0101               	movlb	1	; () banked
 21828  0122FA  6FBF               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 21829  0122FC  0E03               	movlw	high _RxPacket
 21830  0122FE  0101               	movlb	1	; () banked
 21831  012300  6FC0               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 21832  012302  0101               	movlb	1	; () banked
 21833  012304  51BD               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21834  012306  0101               	movlb	1	; () banked
 21835  012308  27BF               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21836  01230A  0101               	movlb	1	; () banked
 21837  01230C  51BE               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21838  01230E  0101               	movlb	1	; () banked
 21839  012310  23C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21840  012312  50F3               	movf	prodl,w,c
 21841  012314  0101               	movlb	1	; () banked
 21842  012316  25BF               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21843  012318  6ED9               	movwf	fsr2l,c
 21844  01231A  50F4               	movf	prodh,w,c
 21845  01231C  0101               	movlb	1	; () banked
 21846  01231E  21C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21847  012320  6EDA               	movwf	fsr2h,c
 21848  012322  0101               	movlb	1	; () banked
 21849  012324  51CD               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 21850  012326  0D01               	mullw	1
 21851  012328  0EC9               	movlw	low MiMAC_ReceivedPacket@FrameCounter
 21852  01232A  24F3               	addwf	prodl,w,c
 21853  01232C  6EE1               	movwf	fsr1l,c
 21854  01232E  0E01               	movlw	high MiMAC_ReceivedPacket@FrameCounter
 21855  012330  20F4               	addwfc	prodh,w,c
 21856  012332  6EE2               	movwf	fsr1h,c
 21857  012334  CFDF FFE7          	movff	indf2,indf1
 21858                           
 21859                           ; BSR set to: 1
 21860  012338  0101               	movlb	1	; () banked
 21861  01233A  2BCD               	incf	MiMAC_ReceivedPacket@k& (0+255),f,b
 21862  01233C  D7C5               	goto	l11753
 21863  01233E                     l11763:
 21864                           
 21865                           ; BSR set to: 1
 21866                           ;drv_mrf_miwi_89xa.c: 938: }
 21867                           ;drv_mrf_miwi_89xa.c: 940: if( IncomingFrameCounter[j].Val > FrameCounter.Val )
 21868  01233E  0101               	movlb	1	; () banked
 21869  012340  51CE               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21870  012342  0D04               	mullw	4
 21871  012344  0E00               	movlw	low _IncomingFrameCounter
 21872  012346  24F3               	addwf	prodl,w,c
 21873  012348  6ED9               	movwf	fsr2l,c
 21874  01234A  0E02               	movlw	high _IncomingFrameCounter
 21875  01234C  20F4               	addwfc	prodh,w,c
 21876  01234E  6EDA               	movwf	fsr2h,c
 21877  012350  50DE               	movf	postinc2,w,c
 21878  012352  0101               	movlb	1	; () banked
 21879  012354  5DC9               	subwf	MiMAC_ReceivedPacket@FrameCounter& (0+255),w,b
 21880  012356  50DE               	movf	postinc2,w,c
 21881  012358  0101               	movlb	1	; () banked
 21882  01235A  59CA               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+1)& (0+255),w,b
 21883  01235C  50DE               	movf	postinc2,w,c
 21884  01235E  0101               	movlb	1	; () banked
 21885  012360  59CB               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+2)& (0+255),w,b
 21886  012362  50DE               	movf	postinc2,w,c
 21887  012364  0101               	movlb	1	; () banked
 21888  012366  59CC               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+3)& (0+255),w,b
 21889  012368  B0D8               	btfsc	status,0,c
 21890  01236A  D00D               	goto	l11773
 21891                           
 21892                           ; BSR set to: 1
 21893                           ;drv_mrf_miwi_89xa.c: 941: {
 21894                           ;drv_mrf_miwi_89xa.c: 942: RxPacket[i].flags.Val = 0;
 21895  01236C  0101               	movlb	1	; () banked
 21896  01236E  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21897  012370  0D42               	mullw	66
 21898  012372  0E50               	movlw	low _RxPacket
 21899  012374  24F3               	addwf	prodl,w,c
 21900  012376  6ED9               	movwf	fsr2l,c
 21901  012378  0E03               	movlw	high _RxPacket
 21902  01237A  20F4               	addwfc	prodh,w,c
 21903  01237C  6EDA               	movwf	fsr2h,c
 21904  01237E  0E00               	movlw	0
 21905  012380  6EDF               	movwf	indf2,c
 21906                           
 21907                           ; BSR set to: 1
 21908                           ;drv_mrf_miwi_89xa.c: 943: return 0;
 21909  012382  0E00               	movlw	0
 21910                           
 21911                           ; BSR set to: 1
 21912  012384  0012               	return	
 21913  012386                     l11773:
 21914                           
 21915                           ; BSR set to: 1
 21916                           ;drv_mrf_miwi_89xa.c: 945: else
 21917                           ;drv_mrf_miwi_89xa.c: 946: {
 21918                           ;drv_mrf_miwi_89xa.c: 947: IncomingFrameCounter[j].Val = FrameCounter.Val;
 21919  012386  0101               	movlb	1	; () banked
 21920  012388  51CE               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21921  01238A  0D04               	mullw	4
 21922  01238C  0E00               	movlw	low _IncomingFrameCounter
 21923  01238E  24F3               	addwf	prodl,w,c
 21924  012390  6ED9               	movwf	fsr2l,c
 21925  012392  0E02               	movlw	high _IncomingFrameCounter
 21926  012394  20F4               	addwfc	prodh,w,c
 21927  012396  6EDA               	movwf	fsr2h,c
 21928  012398  C1C9  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter,postinc2
 21929  01239C  C1CA  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+1,postinc2
 21930  0123A0  C1CB  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+2,postinc2
 21931  0123A4  C1CC  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+3,postinc2
 21932  0123A8                     l11775:
 21933                           
 21934                           ; BSR set to: 1
 21935                           ;drv_mrf_miwi_89xa.c: 948: }
 21936                           ;drv_mrf_miwi_89xa.c: 949: }
 21937                           ;drv_mrf_miwi_89xa.c: 950: }
 21938                           ;drv_mrf_miwi_89xa.c: 953: PayloadIndex += 5;
 21939  0123A8  0E05               	movlw	5
 21940  0123AA  0101               	movlb	1	; () banked
 21941  0123AC  27CF               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21942                           
 21943                           ; BSR set to: 1
 21944                           ;drv_mrf_miwi_89xa.c: 975: if(CCM_Dec((uint8_t *)RxPacket[i].Payload, PayloadIndex, RxPa
      +                          cket[i].PayloadLen-PayloadIndex, key) == 0)
 21945  0123AE  0101               	movlb	1	; () banked
 21946  0123B0  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21947  0123B2  0D42               	mullw	66
 21948  0123B4  0E01               	movlw	1
 21949  0123B6  26F3               	addwf	prodl,f,c
 21950  0123B8  0E00               	movlw	0
 21951  0123BA  22F4               	addwfc	prodh,f,c
 21952  0123BC  0E50               	movlw	low _RxPacket
 21953  0123BE  24F3               	addwf	prodl,w,c
 21954  0123C0  0101               	movlb	1	; () banked
 21955  0123C2  6FAE               	movwf	CCM_Dec@text& (0+255),b
 21956  0123C4  0E03               	movlw	high _RxPacket
 21957  0123C6  20F4               	addwfc	prodh,w,c
 21958  0123C8  0101               	movlb	1	; () banked
 21959  0123CA  6FAF               	movwf	(CCM_Dec@text+1)& (0+255),b
 21960  0123CC  C1CF  F1B0         	movff	MiMAC_ReceivedPacket@PayloadIndex,CCM_Dec@headerLen
 21961  0123D0  0101               	movlb	1	; () banked
 21962  0123D2  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21963  0123D4  0D42               	mullw	66
 21964  0123D6  0E41               	movlw	65
 21965  0123D8  26F3               	addwf	prodl,f,c
 21966  0123DA  0E00               	movlw	0
 21967  0123DC  22F4               	addwfc	prodh,f,c
 21968  0123DE  0E50               	movlw	low _RxPacket
 21969  0123E0  24F3               	addwf	prodl,w,c
 21970  0123E2  6ED9               	movwf	fsr2l,c
 21971  0123E4  0E03               	movlw	high _RxPacket
 21972  0123E6  20F4               	addwfc	prodh,w,c
 21973  0123E8  6EDA               	movwf	fsr2h,c
 21974  0123EA  50DF               	movf	indf2,w,c
 21975  0123EC  0101               	movlb	1	; () banked
 21976  0123EE  6FBD               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21977  0123F0  0101               	movlb	1	; () banked
 21978  0123F2  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21979  0123F4  0800               	sublw	0
 21980  0123F6  0101               	movlb	1	; () banked
 21981  0123F8  25BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21982  0123FA  0101               	movlb	1	; () banked
 21983  0123FC  6FB1               	movwf	CCM_Dec@payloadLen& (0+255),b
 21984  0123FE  0EC0               	movlw	low _key
 21985  012400  0101               	movlb	1	; () banked
 21986  012402  6FB2               	movwf	CCM_Dec@key& (0+255),b
 21987  012404  0E00               	movlw	high _key
 21988  012406  0101               	movlb	1	; () banked
 21989  012408  6FB3               	movwf	(CCM_Dec@key+1)& (0+255),b
 21990  01240A  EC53  F0A4         	call	_CCM_Dec	;wreg free
 21991  01240E  0900               	iorlw	0
 21992  012410  A4D8               	btfss	status,2,c
 21993  012412  D00D               	goto	l11785
 21994                           
 21995                           ;drv_mrf_miwi_89xa.c: 976: {
 21996                           ;drv_mrf_miwi_89xa.c: 977: RxPacket[i].flags.Val = 0;
 21997  012414  0101               	movlb	1	; () banked
 21998  012416  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21999  012418  0D42               	mullw	66
 22000  01241A  0E50               	movlw	low _RxPacket
 22001  01241C  24F3               	addwf	prodl,w,c
 22002  01241E  6ED9               	movwf	fsr2l,c
 22003  012420  0E03               	movlw	high _RxPacket
 22004  012422  20F4               	addwfc	prodh,w,c
 22005  012424  6EDA               	movwf	fsr2h,c
 22006  012426  0E00               	movlw	0
 22007  012428  6EDF               	movwf	indf2,c
 22008                           
 22009                           ; BSR set to: 1
 22010                           ;drv_mrf_miwi_89xa.c: 978: return 0;
 22011  01242A  0E00               	movlw	0
 22012                           
 22013                           ; BSR set to: 1
 22014  01242C  0012               	return	
 22015  01242E                     l11785:
 22016                           
 22017                           ;drv_mrf_miwi_89xa.c: 979: }
 22018                           ;drv_mrf_miwi_89xa.c: 996: MACRxPacket.PayloadLen -= (PayloadIndex + 2);
 22019  01242E  0101               	movlb	1	; () banked
 22020  012430  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 22021  012432  0F02               	addlw	2
 22022  012434  D002               	goto	L7
 22023  012436                     l11787:
 22024                           
 22025                           ; BSR set to: 1
 22026                           ;drv_mrf_miwi_89xa.c: 998: else
 22027                           ;drv_mrf_miwi_89xa.c: 999: {
 22028                           ;drv_mrf_miwi_89xa.c: 1000: MACRxPacket.PayloadLen -= PayloadIndex;
 22029  012436  0101               	movlb	1	; () banked
 22030  012438  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 22031  01243A                     L7:
 22032  01243A  0101               	movlb	1	; () banked
 22033  01243C  5F1B               	subwf	(_MACRxPacket+5)& (0+255),f,b
 22034                           
 22035                           ; BSR set to: 1
 22036                           ;drv_mrf_miwi_89xa.c: 1001: }
 22037                           ;drv_mrf_miwi_89xa.c: 1009: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
 22038                           
 22039                           ; BSR set to: 1
 22040  01243E  0101               	movlb	1	; () banked
 22041  012440  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 22042  012442  0D01               	mullw	1
 22043  012444  0E01               	movlw	1
 22044  012446  26F3               	addwf	prodl,f,c
 22045  012448  0E00               	movlw	0
 22046  01244A  22F4               	addwfc	prodh,f,c
 22047  01244C  0E50               	movlw	low _RxPacket
 22048  01244E  0101               	movlb	1	; () banked
 22049  012450  6FBD               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 22050  012452  0E03               	movlw	high _RxPacket
 22051  012454  0101               	movlb	1	; () banked
 22052  012456  6FBE               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 22053  012458  50F3               	movf	prodl,w,c
 22054  01245A  0101               	movlb	1	; () banked
 22055  01245C  27BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 22056  01245E  50F4               	movf	prodh,w,c
 22057  012460  0101               	movlb	1	; () banked
 22058  012462  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 22059  012464  0101               	movlb	1	; () banked
 22060  012466  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 22061  012468  0D42               	mullw	66
 22062  01246A  50F3               	movf	prodl,w,c
 22063  01246C  0101               	movlb	1	; () banked
 22064  01246E  25BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 22065  012470  0101               	movlb	1	; () banked
 22066  012472  6F19               	movwf	(_MACRxPacket+3)& (0+255),b
 22067  012474  50F4               	movf	prodh,w,c
 22068  012476  0101               	movlb	1	; () banked
 22069  012478  21BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 22070  01247A  0101               	movlb	1	; () banked
 22071  01247C  6F1A               	movwf	(_MACRxPacket+4)& (0+255),b
 22072                           
 22073                           ; BSR set to: 1
 22074                           ;drv_mrf_miwi_89xa.c: 1011: MACRxPacket.RSSIValue = RSSILock;
 22075  01247E  C144  F11C         	movff	_RSSILock,_MACRxPacket+6
 22076                           
 22077                           ; BSR set to: 1
 22078                           ;drv_mrf_miwi_89xa.c: 1014: ReceivedBankIndex = i;
 22079  012482  C1D0  F145         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 22080                           
 22081                           ; BSR set to: 1
 22082                           ;drv_mrf_miwi_89xa.c: 1015: return 1;
 22083  012486  0E01               	movlw	1
 22084                           
 22085                           ; BSR set to: 1
 22086  012488  0012               	return	
 22087  01248A                     l11799:
 22088  01248A  0101               	movlb	1	; () banked
 22089  01248C  2BD0               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 22090  01248E  D63A               	goto	l11701
 22091  012490                     l11803:
 22092                           
 22093                           ; BSR set to: 1
 22094                           ;drv_mrf_miwi_89xa.c: 1016: }
 22095                           ;drv_mrf_miwi_89xa.c: 1017: }
 22096                           ;drv_mrf_miwi_89xa.c: 1019: return 0;
 22097  012490  0E00               	movlw	0
 22098  012492  0012               	return	
 22099  012494                     __end_of_MiMAC_ReceivedPacket:
 22100                           	opt stack 0
 22101                           tblptru	equ	0xFF8
 22102                           tblptrh	equ	0xFF7
 22103                           tblptrl	equ	0xFF6
 22104                           tablat	equ	0xFF5
 22105                           prodh	equ	0xFF4
 22106                           prodl	equ	0xFF3
 22107                           intcon	equ	0xFF2
 22108                           intcon2	equ	0xFF1
 22109                           intcon3	equ	0xFF0
 22110                           indf0	equ	0xFEF
 22111                           postinc0	equ	0xFEE
 22112                           plusw0	equ	0xFEB
 22113                           fsr0h	equ	0xFEA
 22114                           fsr0l	equ	0xFE9
 22115                           wreg	equ	0xFE8
 22116                           indf1	equ	0xFE7
 22117                           postinc1	equ	0xFE6
 22118                           postdec1	equ	0xFE5
 22119                           fsr1h	equ	0xFE2
 22120                           fsr1l	equ	0xFE1
 22121                           indf2	equ	0xFDF
 22122                           postinc2	equ	0xFDE
 22123                           postdec2	equ	0xFDD
 22124                           plusw2	equ	0xFDB
 22125                           fsr2h	equ	0xFDA
 22126                           fsr2l	equ	0xFD9
 22127                           status	equ	0xFD8
 22128                           
 22129 ;; *************** function _isSameAddress *****************
 22130 ;; Defined at:
 22131 ;;		line 3442 in file "src/miwi/miwi_mesh.c"
 22132 ;; Parameters:    Size  Location     Type
 22133 ;;  Address1        2    0[BANK1 ] PTR unsigned char 
 22134 ;;		 -> ConnectionTable(90), 
 22135 ;;  Address2        2    2[BANK1 ] PTR unsigned char 
 22136 ;;		 -> NULL(0), RxPacket.Payload(64), RxPacket(132), 
 22137 ;; Auto vars:     Size  Location     Type
 22138 ;;  i               1    6[BANK1 ] unsigned char 
 22139 ;; Return value:  Size  Location     Type
 22140 ;;                  1    wreg      unsigned char 
 22141 ;; Registers used:
 22142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22143 ;; Tracked objects:
 22144 ;;		On entry : 0/0
 22145 ;;		On exit  : 0/0
 22146 ;;		Unchanged: 0/0
 22147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22148 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22149 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22150 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22151 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22152 ;;Total ram usage:        7 bytes
 22153 ;; Hardware stack levels used:    1
 22154 ;; Hardware stack levels required when called:    9
 22155 ;; This function calls:
 22156 ;;		Nothing
 22157 ;; This function is called by:
 22158 ;;		_MiMAC_ReceivedPacket
 22159 ;; This function uses a non-reentrant model
 22160 ;;
 22161                           
 22162                           	psect	text68
 22163  016B66                     __ptext68:
 22164                           	opt stack 0
 22165  016B66                     _isSameAddress:
 22166                           	opt stack 15
 22167                           
 22168                           ;miwi_mesh.c: 3444: uint8_t i;
 22169                           ;miwi_mesh.c: 3446: for(i = 0; i < 4; i++)
 22170                           
 22171                           ; BSR set to: 1
 22172                           ;incstack = 0
 22173  016B66  0E00               	movlw	0
 22174  016B68  0101               	movlb	1	; () banked
 22175  016B6A  6F90               	movwf	isSameAddress@i& (0+255),b
 22176  016B6C                     l11447:
 22177                           
 22178                           ; BSR set to: 1
 22179  016B6C  0E03               	movlw	3
 22180  016B6E  0101               	movlb	1	; () banked
 22181  016B70  6590               	cpfsgt	isSameAddress@i& (0+255),b
 22182  016B72  D001               	goto	l11451
 22183  016B74  D01F               	goto	l11461
 22184  016B76                     l11451:
 22185                           
 22186                           ; BSR set to: 1
 22187                           ;miwi_mesh.c: 3447: {
 22188                           ;miwi_mesh.c: 3448: if( Address1[i] != Address2[i] )
 22189  016B76  0101               	movlb	1	; () banked
 22190  016B78  5190               	movf	isSameAddress@i& (0+255),w,b
 22191  016B7A  0D01               	mullw	1
 22192  016B7C  50F3               	movf	prodl,w,c
 22193  016B7E  0101               	movlb	1	; () banked
 22194  016B80  258C               	addwf	isSameAddress@Address2& (0+255),w,b
 22195  016B82  6ED9               	movwf	fsr2l,c
 22196  016B84  50F4               	movf	prodh,w,c
 22197  016B86  0101               	movlb	1	; () banked
 22198  016B88  218D               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 22199  016B8A  6EDA               	movwf	fsr2h,c
 22200  016B8C  0101               	movlb	1	; () banked
 22201  016B8E  5190               	movf	isSameAddress@i& (0+255),w,b
 22202  016B90  0D01               	mullw	1
 22203  016B92  50F3               	movf	prodl,w,c
 22204  016B94  0101               	movlb	1	; () banked
 22205  016B96  258A               	addwf	isSameAddress@Address1& (0+255),w,b
 22206  016B98  6EE1               	movwf	fsr1l,c
 22207  016B9A  50F4               	movf	prodh,w,c
 22208  016B9C  0101               	movlb	1	; () banked
 22209  016B9E  218B               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 22210  016BA0  6EE2               	movwf	fsr1h,c
 22211  016BA2  50DE               	movf	postinc2,w,c
 22212  016BA4  18E6               	xorwf	postinc1,w,c
 22213  016BA6  B4D8               	btfsc	status,2,c
 22214  016BA8  D002               	goto	l11457
 22215                           
 22216                           ; BSR set to: 1
 22217                           ;miwi_mesh.c: 3449: {
 22218                           ;miwi_mesh.c: 3450: return 0;
 22219  016BAA  0E00               	movlw	0
 22220                           
 22221                           ; BSR set to: 1
 22222  016BAC  0012               	return	
 22223  016BAE                     l11457:
 22224                           
 22225                           ; BSR set to: 1
 22226  016BAE  0101               	movlb	1	; () banked
 22227  016BB0  2B90               	incf	isSameAddress@i& (0+255),f,b
 22228  016BB2  D7DC               	goto	l11447
 22229  016BB4                     l11461:
 22230                           
 22231                           ; BSR set to: 1
 22232                           ;miwi_mesh.c: 3451: }
 22233                           ;miwi_mesh.c: 3452: }
 22234                           ;miwi_mesh.c: 3453: return 1;
 22235  016BB4  0E01               	movlw	1
 22236  016BB6  0012               	return	
 22237  016BB8                     __end_of_isSameAddress:
 22238                           	opt stack 0
 22239                           tblptru	equ	0xFF8
 22240                           tblptrh	equ	0xFF7
 22241                           tblptrl	equ	0xFF6
 22242                           tablat	equ	0xFF5
 22243                           prodh	equ	0xFF4
 22244                           prodl	equ	0xFF3
 22245                           intcon	equ	0xFF2
 22246                           intcon2	equ	0xFF1
 22247                           intcon3	equ	0xFF0
 22248                           indf0	equ	0xFEF
 22249                           postinc0	equ	0xFEE
 22250                           plusw0	equ	0xFEB
 22251                           fsr0h	equ	0xFEA
 22252                           fsr0l	equ	0xFE9
 22253                           wreg	equ	0xFE8
 22254                           indf1	equ	0xFE7
 22255                           postinc1	equ	0xFE6
 22256                           postdec1	equ	0xFE5
 22257                           fsr1h	equ	0xFE2
 22258                           fsr1l	equ	0xFE1
 22259                           indf2	equ	0xFDF
 22260                           postinc2	equ	0xFDE
 22261                           postdec2	equ	0xFDD
 22262                           plusw2	equ	0xFDB
 22263                           fsr2h	equ	0xFDA
 22264                           fsr2l	equ	0xFD9
 22265                           status	equ	0xFD8
 22266                           
 22267 ;; *************** function _MiWi_TickGet *****************
 22268 ;; Defined at:
 22269 ;;		line 104 in file "src/18F27J53/symbol.c"
 22270 ;; Parameters:    Size  Location     Type
 22271 ;;		None
 22272 ;; Auto vars:     Size  Location     Type
 22273 ;;  currentTime     4    6[BANK1 ] struct _MIWI_TICK
 22274 ;;  failureCount    1    5[BANK1 ] unsigned char 
 22275 ;; Return value:  Size  Location     Type
 22276 ;;                  4    0[BANK1 ] struct _MIWI_TICK
 22277 ;; Registers used:
 22278 ;;		wreg, status,2, status,0
 22279 ;; Tracked objects:
 22280 ;;		On entry : 0/0
 22281 ;;		On exit  : 0/0
 22282 ;;		Unchanged: 0/0
 22283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22284 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22285 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22286 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22287 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22288 ;;Total ram usage:       10 bytes
 22289 ;; Hardware stack levels used:    1
 22290 ;; Hardware stack levels required when called:    9
 22291 ;; This function calls:
 22292 ;;		Nothing
 22293 ;; This function is called by:
 22294 ;;		_TxPacket
 22295 ;;		_MiMAC_ReceivedPacket
 22296 ;;		_MiWiTasks
 22297 ;;		_OpenSocket
 22298 ;;		_MiApp_SearchConnection
 22299 ;;		_MiApp_EstablishConnection
 22300 ;;		_MiApp_UnicastAddress
 22301 ;;		_BroadcastJitter
 22302 ;;		_MiApp_UnicastConnection
 22303 ;; This function uses a non-reentrant model
 22304 ;;
 22305                           
 22306                           	psect	text69
 22307  016830                     __ptext69:
 22308                           	opt stack 0
 22309  016830                     _MiWi_TickGet:
 22310                           	opt stack 18
 22311                           
 22312                           ;symbol.c: 106: MIWI_TICK currentTime;
 22313                           ;symbol.c: 109: uint8_t failureCounter;
 22314                           ;symbol.c: 112: PIE1bits.TMR1IE = 0;
 22315                           
 22316                           ; BSR set to: 1
 22317                           ;incstack = 0
 22318  016830  909D               	bcf	3997,0,c	;volatile
 22319                           
 22320                           ;symbol.c: 115: currentTime.byte.b2 = 0;
 22321  016832  0E00               	movlw	0
 22322  016834  0101               	movlb	1	; () banked
 22323  016836  6F92               	movwf	(MiWi_TickGet@currentTime+2)& (0+255),b
 22324                           
 22325                           ;symbol.c: 116: currentTime.byte.b3 = 0;
 22326  016838  0E00               	movlw	0
 22327  01683A  0101               	movlb	1	; () banked
 22328  01683C  6F93               	movwf	(MiWi_TickGet@currentTime+3)& (0+255),b
 22329                           
 22330                           ;symbol.c: 118: failureCounter = 0;
 22331  01683E  0E00               	movlw	0
 22332  016840  0101               	movlb	1	; () banked
 22333  016842  6F8F               	movwf	MiWi_TickGet@failureCounter& (0+255),b
 22334  016844                     l11183:
 22335                           
 22336                           ; BSR set to: 1
 22337                           ;symbol.c: 121: {
 22338                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 22339  016844  CFCE F190          	movff	4046,MiWi_TickGet@currentTime	;volatile
 22340                           
 22341                           ; BSR set to: 1
 22342                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 22343  016848  CFCF F191          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 22344                           
 22345                           ; BSR set to: 1
 22346                           ;symbol.c: 124: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 22347  01684C  0101               	movlb	1	; () banked
 22348  01684E  2990               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 22349  016850  E10D               	bnz	l62
 22350  016852  0101               	movlb	1	; () banked
 22351  016854  2991               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 22352  016856  A4D8               	btfss	status,2,c
 22353  016858  D009               	goto	l62
 22354                           
 22355                           ; BSR set to: 1
 22356  01685A  0101               	movlb	1	; () banked
 22357  01685C  2B8F               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 22358  01685E  058F               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 22359  016860  0101               	movlb	1	; () banked
 22360  016862  6F8E               	movwf	??_MiWi_TickGet& (0+255),b
 22361  016864  0E02               	movlw	2
 22362  016866  0101               	movlb	1	; () banked
 22363  016868  658E               	cpfsgt	??_MiWi_TickGet& (0+255),b
 22364  01686A  D7EC               	goto	l11183
 22365  01686C                     l62:
 22366                           
 22367                           ; BSR set to: 1
 22368                           ;symbol.c: 128: if(PIR1bits.TMR1IF)
 22369  01686C  A09E               	btfss	3998,0,c	;volatile
 22370  01686E  D008               	goto	l11197
 22371                           
 22372                           ; BSR set to: 1
 22373                           ;symbol.c: 129: {
 22374                           ;symbol.c: 131: {
 22375                           ;symbol.c: 134: currentTime.byte.b2++;
 22376  016870  0101               	movlb	1	; () banked
 22377  016872  2B92               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 22378                           
 22379                           ; BSR set to: 1
 22380                           ;symbol.c: 135: if(timerExtension1 == 0xFF)
 22381  016874  0100               	movlb	0	; () banked
 22382  016876  29BE               	incf	_timerExtension1& (0+255),w,b	;volatile
 22383  016878  A4D8               	btfss	status,2,c
 22384  01687A  D002               	goto	l11197
 22385                           
 22386                           ; BSR set to: 0
 22387                           ;symbol.c: 136: {
 22388                           ;symbol.c: 137: currentTime.byte.b3++;
 22389  01687C  0101               	movlb	1	; () banked
 22390  01687E  2B93               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 22391  016880                     l11197:
 22392                           
 22393                           ;symbol.c: 138: }
 22394                           ;symbol.c: 139: }
 22395                           ;symbol.c: 140: }
 22396                           ;symbol.c: 143: currentTime.byte.b2 += timerExtension1;
 22397  016880  0100               	movlb	0	; () banked
 22398  016882  51BE               	movf	_timerExtension1& (0+255),w,b	;volatile
 22399  016884  0101               	movlb	1	; () banked
 22400  016886  2792               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 22401                           
 22402                           ; BSR set to: 1
 22403                           ;symbol.c: 144: currentTime.byte.b3 += timerExtension2;
 22404  016888  0100               	movlb	0	; () banked
 22405  01688A  51BF               	movf	_timerExtension2& (0+255),w,b	;volatile
 22406  01688C  0101               	movlb	1	; () banked
 22407  01688E  2793               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 22408                           
 22409                           ; BSR set to: 1
 22410                           ;symbol.c: 147: PIE1bits.TMR1IE = 1;
 22411  016890  809D               	bsf	3997,0,c	;volatile
 22412                           
 22413                           ; BSR set to: 1
 22414                           ;symbol.c: 149: return currentTime;
 22415  016892  C190  F18A         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 22416  016896  C191  F18B         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 22417  01689A  C192  F18C         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 22418  01689E  C193  F18D         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 22419  0168A2  0012               	return	
 22420  0168A4                     __end_of_MiWi_TickGet:
 22421                           	opt stack 0
 22422                           tblptru	equ	0xFF8
 22423                           tblptrh	equ	0xFF7
 22424                           tblptrl	equ	0xFF6
 22425                           tablat	equ	0xFF5
 22426                           prodh	equ	0xFF4
 22427                           prodl	equ	0xFF3
 22428                           intcon	equ	0xFF2
 22429                           intcon2	equ	0xFF1
 22430                           intcon3	equ	0xFF0
 22431                           indf0	equ	0xFEF
 22432                           postinc0	equ	0xFEE
 22433                           plusw0	equ	0xFEB
 22434                           fsr0h	equ	0xFEA
 22435                           fsr0l	equ	0xFE9
 22436                           wreg	equ	0xFE8
 22437                           indf1	equ	0xFE7
 22438                           postinc1	equ	0xFE6
 22439                           postdec1	equ	0xFE5
 22440                           fsr1h	equ	0xFE2
 22441                           fsr1l	equ	0xFE1
 22442                           indf2	equ	0xFDF
 22443                           postinc2	equ	0xFDE
 22444                           postdec2	equ	0xFDD
 22445                           plusw2	equ	0xFDB
 22446                           fsr2h	equ	0xFDA
 22447                           fsr2l	equ	0xFD9
 22448                           status	equ	0xFD8
 22449                           
 22450 ;; *************** function _CCM_Dec *****************
 22451 ;; Defined at:
 22452 ;;		line 299 in file "src/miwi/drv_mrf_miwi_security.c"
 22453 ;; Parameters:    Size  Location     Type
 22454 ;;  text            2   36[BANK1 ] PTR unsigned char 
 22455 ;;		 -> RxPacket.Payload(64), RxPacket(132), 
 22456 ;;  headerLen       1   38[BANK1 ] unsigned char 
 22457 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 22458 ;;  key             2   40[BANK1 ] PTR unsigned char 
 22459 ;;		 -> key(8), 
 22460 ;; Auto vars:     Size  Location     Type
 22461 ;;  i               1   50[BANK1 ] unsigned char 
 22462 ;; Return value:  Size  Location     Type
 22463 ;;                  1    wreg      unsigned char 
 22464 ;; Registers used:
 22465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22466 ;; Tracked objects:
 22467 ;;		On entry : 0/0
 22468 ;;		On exit  : 0/0
 22469 ;;		Unchanged: 0/0
 22470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22471 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22472 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22473 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22474 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22475 ;;Total ram usage:       15 bytes
 22476 ;; Hardware stack levels used:    1
 22477 ;; Hardware stack levels required when called:   11
 22478 ;; This function calls:
 22479 ;;		_CBC_MAC
 22480 ;;		_CTR
 22481 ;; This function is called by:
 22482 ;;		_MiMAC_ReceivedPacket
 22483 ;; This function uses a non-reentrant model
 22484 ;;
 22485                           
 22486                           	psect	text70
 22487  0148A6                     __ptext70:
 22488                           	opt stack 0
 22489  0148A6                     _CCM_Dec:
 22490                           	opt stack 13
 22491                           
 22492                           ;drv_mrf_miwi_security.c: 301: uint8_t i;
 22493                           ;drv_mrf_miwi_security.c: 308: for(i = 0; i < 4-1; i++)
 22494                           
 22495                           ; BSR set to: 1
 22496                           ;incstack = 0
 22497  0148A6  0E00               	movlw	0
 22498  0148A8  0101               	movlb	1	; () banked
 22499  0148AA  6FBC               	movwf	CCM_Dec@i& (0+255),b
 22500  0148AC                     l11467:
 22501                           
 22502                           ; BSR set to: 1
 22503  0148AC  0E02               	movlw	2
 22504  0148AE  0101               	movlb	1	; () banked
 22505  0148B0  65BC               	cpfsgt	CCM_Dec@i& (0+255),b
 22506  0148B2  D001               	goto	l11471
 22507  0148B4  D02D               	goto	l11481
 22508  0148B6                     l11471:
 22509                           
 22510                           ; BSR set to: 1
 22511                           ;drv_mrf_miwi_security.c: 309: {
 22512                           ;drv_mrf_miwi_security.c: 310: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 22513  0148B6  0101               	movlb	1	; () banked
 22514  0148B8  51B0               	movf	CCM_Dec@headerLen& (0+255),w,b
 22515  0148BA  0101               	movlb	1	; () banked
 22516  0148BC  5DBC               	subwf	CCM_Dec@i& (0+255),w,b
 22517  0148BE  A0D8               	btfss	status,0,c
 22518  0148C0  D006               	goto	l11475
 22519                           
 22520                           ; BSR set to: 1
 22521  0148C2  0E00               	movlw	0
 22522  0148C4  0101               	movlb	1	; () banked
 22523  0148C6  6FBB               	movwf	(_CCM_Dec$2093+1)& (0+255),b
 22524  0148C8  0E00               	movlw	0
 22525  0148CA  6FBA               	movwf	_CCM_Dec$2093& (0+255),b
 22526  0148CC  D013               	goto	l477
 22527  0148CE                     l11475:
 22528                           
 22529                           ; BSR set to: 1
 22530  0148CE  0101               	movlb	1	; () banked
 22531  0148D0  51BC               	movf	CCM_Dec@i& (0+255),w,b
 22532  0148D2  0D01               	mullw	1
 22533  0148D4  50F3               	movf	prodl,w,c
 22534  0148D6  0101               	movlb	1	; () banked
 22535  0148D8  25AE               	addwf	CCM_Dec@text& (0+255),w,b
 22536  0148DA  6ED9               	movwf	fsr2l,c
 22537  0148DC  50F4               	movf	prodh,w,c
 22538  0148DE  0101               	movlb	1	; () banked
 22539  0148E0  21AF               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 22540  0148E2  6EDA               	movwf	fsr2h,c
 22541  0148E4  50DF               	movf	indf2,w,c
 22542  0148E6  0101               	movlb	1	; () banked
 22543  0148E8  6FB4               	movwf	??_CCM_Dec& (0+255),b
 22544  0148EA  0101               	movlb	1	; () banked
 22545  0148EC  51B4               	movf	??_CCM_Dec& (0+255),w,b
 22546  0148EE  0101               	movlb	1	; () banked
 22547  0148F0  6FBA               	movwf	_CCM_Dec$2093& (0+255),b
 22548  0148F2  6BBB               	clrf	(_CCM_Dec$2093+1)& (0+255),b
 22549  0148F4                     l477:
 22550                           
 22551                           ; BSR set to: 1
 22552  0148F4  0101               	movlb	1	; () banked
 22553  0148F6  51BC               	movf	CCM_Dec@i& (0+255),w,b
 22554  0148F8  0D01               	mullw	1
 22555  0148FA  0ECC               	movlw	low _tmpBlock
 22556  0148FC  24F3               	addwf	prodl,w,c
 22557  0148FE  6ED9               	movwf	fsr2l,c
 22558  014900  0E00               	movlw	high _tmpBlock
 22559  014902  20F4               	addwfc	prodh,w,c
 22560  014904  6EDA               	movwf	fsr2h,c
 22561  014906  C1BA  FFDF         	movff	_CCM_Dec$2093,indf2
 22562                           
 22563                           ; BSR set to: 1
 22564  01490A  0101               	movlb	1	; () banked
 22565  01490C  2BBC               	incf	CCM_Dec@i& (0+255),f,b
 22566  01490E  D7CE               	goto	l11467
 22567  014910                     l11481:
 22568                           
 22569                           ; BSR set to: 1
 22570                           ;drv_mrf_miwi_security.c: 311: }
 22571                           ;drv_mrf_miwi_security.c: 312: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
 22572  014910  0101               	movlb	1	; () banked
 22573  014912  51B0               	movf	CCM_Dec@headerLen& (0+255),w,b
 22574  014914  0D01               	mullw	1
 22575  014916  50F3               	movf	prodl,w,c
 22576  014918  0101               	movlb	1	; () banked
 22577  01491A  25AE               	addwf	CCM_Dec@text& (0+255),w,b
 22578  01491C  0101               	movlb	1	; () banked
 22579  01491E  6FA1               	movwf	CTR@text& (0+255),b
 22580  014920  50F4               	movf	prodh,w,c
 22581  014922  0101               	movlb	1	; () banked
 22582  014924  21AF               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 22583  014926  0101               	movlb	1	; () banked
 22584  014928  6FA2               	movwf	(CTR@text+1)& (0+255),b
 22585  01492A  C1B1  F1A3         	movff	CCM_Dec@payloadLen,CTR@len
 22586  01492E  C1B2  F1A4         	movff	CCM_Dec@key,CTR@key
 22587  014932  C1B3  F1A5         	movff	CCM_Dec@key+1,CTR@key+1
 22588  014936  0ECC               	movlw	low _tmpBlock
 22589  014938  0101               	movlb	1	; () banked
 22590  01493A  6FA6               	movwf	CTR@nounce& (0+255),b
 22591  01493C  0E00               	movlw	high _tmpBlock
 22592  01493E  0101               	movlb	1	; () banked
 22593  014940  6FA7               	movwf	(CTR@nounce+1)& (0+255),b
 22594  014942  ECD8  F0A9         	call	_CTR	;wreg free
 22595                           
 22596                           ;drv_mrf_miwi_security.c: 314: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmpBlock
      +                          );
 22597  014946  C1AE  F1A1         	movff	CCM_Dec@text,CBC_MAC@text
 22598  01494A  C1AF  F1A2         	movff	CCM_Dec@text+1,CBC_MAC@text+1
 22599  01494E  0101               	movlb	1	; () banked
 22600  014950  51B0               	movf	CCM_Dec@headerLen& (0+255),w,b
 22601  014952  0101               	movlb	1	; () banked
 22602  014954  25B1               	addwf	CCM_Dec@payloadLen& (0+255),w,b
 22603  014956  0FFE               	addlw	254
 22604  014958  0101               	movlb	1	; () banked
 22605  01495A  6FA3               	movwf	CBC_MAC@len& (0+255),b
 22606  01495C  C1B2  F1A4         	movff	CCM_Dec@key,CBC_MAC@key
 22607  014960  C1B3  F1A5         	movff	CCM_Dec@key+1,CBC_MAC@key+1
 22608  014964  0ECC               	movlw	low _tmpBlock
 22609  014966  0101               	movlb	1	; () banked
 22610  014968  6FA6               	movwf	CBC_MAC@MIC& (0+255),b
 22611  01496A  0E00               	movlw	high _tmpBlock
 22612  01496C  0101               	movlb	1	; () banked
 22613  01496E  6FA7               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 22614  014970  EC7D  F0AB         	call	_CBC_MAC	;wreg free
 22615                           
 22616                           ;drv_mrf_miwi_security.c: 315: for(i = 0; i < 2; i++)
 22617  014974  0E00               	movlw	0
 22618  014976  0101               	movlb	1	; () banked
 22619  014978  6FBC               	movwf	CCM_Dec@i& (0+255),b
 22620  01497A                     l11487:
 22621                           
 22622                           ; BSR set to: 1
 22623  01497A  0E01               	movlw	1
 22624  01497C  0101               	movlb	1	; () banked
 22625  01497E  65BC               	cpfsgt	CCM_Dec@i& (0+255),b
 22626  014980  D001               	goto	l11491
 22627  014982  D03A               	goto	l11501
 22628  014984                     l11491:
 22629                           
 22630                           ; BSR set to: 1
 22631                           ;drv_mrf_miwi_security.c: 316: {
 22632                           ;drv_mrf_miwi_security.c: 317: if( tmpBlock[i] != text[headerLen + payloadLen - 2 + i] )
 22633  014984  0EFE               	movlw	254
 22634  014986  0101               	movlb	1	; () banked
 22635  014988  6FB4               	movwf	??_CCM_Dec& (0+255),b
 22636  01498A  0EFF               	movlw	255
 22637  01498C  0101               	movlb	1	; () banked
 22638  01498E  6FB5               	movwf	(??_CCM_Dec+1)& (0+255),b
 22639  014990  0101               	movlb	1	; () banked
 22640  014992  51B1               	movf	CCM_Dec@payloadLen& (0+255),w,b
 22641  014994  C1B0  F1B6         	movff	CCM_Dec@headerLen,??_CCM_Dec+2
 22642  014998  0101               	movlb	1	; () banked
 22643  01499A  6BB7               	clrf	(??_CCM_Dec+3)& (0+255),b
 22644  01499C  0101               	movlb	1	; () banked
 22645  01499E  27B6               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22646  0149A0  0E00               	movlw	0
 22647  0149A2  23B7               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22648  0149A4  0101               	movlb	1	; () banked
 22649  0149A6  51BC               	movf	CCM_Dec@i& (0+255),w,b
 22650  0149A8  0101               	movlb	1	; () banked
 22651  0149AA  27B6               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22652  0149AC  0E00               	movlw	0
 22653  0149AE  23B7               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22654  0149B0  0101               	movlb	1	; () banked
 22655  0149B2  51B4               	movf	??_CCM_Dec& (0+255),w,b
 22656  0149B4  0101               	movlb	1	; () banked
 22657  0149B6  27B6               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22658  0149B8  0101               	movlb	1	; () banked
 22659  0149BA  51B5               	movf	(??_CCM_Dec+1)& (0+255),w,b
 22660  0149BC  0101               	movlb	1	; () banked
 22661  0149BE  23B7               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22662  0149C0  0101               	movlb	1	; () banked
 22663  0149C2  51B6               	movf	(??_CCM_Dec+2)& (0+255),w,b
 22664  0149C4  0101               	movlb	1	; () banked
 22665  0149C6  25AE               	addwf	CCM_Dec@text& (0+255),w,b
 22666  0149C8  6ED9               	movwf	fsr2l,c
 22667  0149CA  0101               	movlb	1	; () banked
 22668  0149CC  51B7               	movf	(??_CCM_Dec+3)& (0+255),w,b
 22669  0149CE  0101               	movlb	1	; () banked
 22670  0149D0  21AF               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 22671  0149D2  6EDA               	movwf	fsr2h,c
 22672  0149D4  0101               	movlb	1	; () banked
 22673  0149D6  51BC               	movf	CCM_Dec@i& (0+255),w,b
 22674  0149D8  0D01               	mullw	1
 22675  0149DA  0ECC               	movlw	low _tmpBlock
 22676  0149DC  24F3               	addwf	prodl,w,c
 22677  0149DE  6EE1               	movwf	fsr1l,c
 22678  0149E0  0E00               	movlw	high _tmpBlock
 22679  0149E2  20F4               	addwfc	prodh,w,c
 22680  0149E4  6EE2               	movwf	fsr1h,c
 22681  0149E6  50DE               	movf	postinc2,w,c
 22682  0149E8  18E6               	xorwf	postinc1,w,c
 22683  0149EA  B4D8               	btfsc	status,2,c
 22684  0149EC  D002               	goto	l11497
 22685                           
 22686                           ; BSR set to: 1
 22687                           ;drv_mrf_miwi_security.c: 318: {
 22688                           ;drv_mrf_miwi_security.c: 322: return 0;
 22689  0149EE  0E00               	movlw	0
 22690                           
 22691                           ; BSR set to: 1
 22692  0149F0  0012               	return	
 22693  0149F2                     l11497:
 22694                           
 22695                           ; BSR set to: 1
 22696  0149F2  0101               	movlb	1	; () banked
 22697  0149F4  2BBC               	incf	CCM_Dec@i& (0+255),f,b
 22698  0149F6  D7C1               	goto	l11487
 22699  0149F8                     l11501:
 22700                           
 22701                           ; BSR set to: 1
 22702                           ;drv_mrf_miwi_security.c: 323: }
 22703                           ;drv_mrf_miwi_security.c: 324: }
 22704                           ;drv_mrf_miwi_security.c: 328: return 1;
 22705  0149F8  0E01               	movlw	1
 22706  0149FA  0012               	return	
 22707  0149FC                     __end_of_CCM_Dec:
 22708                           	opt stack 0
 22709                           tblptru	equ	0xFF8
 22710                           tblptrh	equ	0xFF7
 22711                           tblptrl	equ	0xFF6
 22712                           tablat	equ	0xFF5
 22713                           prodh	equ	0xFF4
 22714                           prodl	equ	0xFF3
 22715                           intcon	equ	0xFF2
 22716                           intcon2	equ	0xFF1
 22717                           intcon3	equ	0xFF0
 22718                           indf0	equ	0xFEF
 22719                           postinc0	equ	0xFEE
 22720                           plusw0	equ	0xFEB
 22721                           fsr0h	equ	0xFEA
 22722                           fsr0l	equ	0xFE9
 22723                           wreg	equ	0xFE8
 22724                           indf1	equ	0xFE7
 22725                           postinc1	equ	0xFE6
 22726                           postdec1	equ	0xFE5
 22727                           fsr1h	equ	0xFE2
 22728                           fsr1l	equ	0xFE1
 22729                           indf2	equ	0xFDF
 22730                           postinc2	equ	0xFDE
 22731                           postdec2	equ	0xFDD
 22732                           plusw2	equ	0xFDB
 22733                           fsr2h	equ	0xFDA
 22734                           fsr2l	equ	0xFD9
 22735                           status	equ	0xFD8
 22736                           
 22737 ;; *************** function _CTR *****************
 22738 ;; Defined at:
 22739 ;;		line 118 in file "src/miwi/drv_mrf_miwi_security.c"
 22740 ;; Parameters:    Size  Location     Type
 22741 ;;  text            2   23[BANK1 ] PTR unsigned char 
 22742 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 22743 ;;  len             1   25[BANK1 ] unsigned char 
 22744 ;;  key             2   26[BANK1 ] PTR unsigned char 
 22745 ;;		 -> key(8), 
 22746 ;;  nounce          2   28[BANK1 ] PTR unsigned char 
 22747 ;;		 -> tmpBlock(4), 
 22748 ;; Auto vars:     Size  Location     Type
 22749 ;;  j               1   35[BANK1 ] unsigned char 
 22750 ;;  i               1   34[BANK1 ] unsigned char 
 22751 ;;  block           1   33[BANK1 ] unsigned char 
 22752 ;; Return value:  Size  Location     Type
 22753 ;;		None               void
 22754 ;; Registers used:
 22755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22756 ;; Tracked objects:
 22757 ;;		On entry : 0/0
 22758 ;;		On exit  : 0/0
 22759 ;;		Unchanged: 0/0
 22760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22761 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22762 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22763 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22764 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22765 ;;Total ram usage:       13 bytes
 22766 ;; Hardware stack levels used:    1
 22767 ;; Hardware stack levels required when called:   10
 22768 ;; This function calls:
 22769 ;;		___awdiv
 22770 ;;		_encode
 22771 ;; This function is called by:
 22772 ;;		_CCM_Enc
 22773 ;;		_CCM_Dec
 22774 ;; This function uses a non-reentrant model
 22775 ;;
 22776                           
 22777                           	psect	text71
 22778  0153B0                     __ptext71:
 22779                           	opt stack 0
 22780  0153B0                     _CTR:
 22781                           	opt stack 15
 22782                           
 22783                           ;drv_mrf_miwi_security.c: 120: uint8_t block = len/4+1;
 22784                           
 22785                           ; BSR set to: 1
 22786                           ;incstack = 0
 22787  0153B0  C1A3  F18A         	movff	CTR@len,___awdiv@dividend
 22788  0153B4  0101               	movlb	1	; () banked
 22789  0153B6  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
 22790  0153B8  0E00               	movlw	0
 22791  0153BA  0101               	movlb	1	; () banked
 22792  0153BC  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
 22793  0153BE  0E04               	movlw	4
 22794  0153C0  6F8C               	movwf	___awdiv@divisor& (0+255),b
 22795  0153C2  ECFE  F0AE         	call	___awdiv	;wreg free
 22796  0153C6  0101               	movlb	1	; () banked
 22797  0153C8  298A               	incf	?___awdiv& (0+255),w,b
 22798  0153CA  0101               	movlb	1	; () banked
 22799  0153CC  6FAB               	movwf	CTR@block& (0+255),b
 22800                           
 22801                           ; BSR set to: 1
 22802                           ;drv_mrf_miwi_security.c: 121: uint8_t i, j;
 22803                           ;drv_mrf_miwi_security.c: 128: for(i = 0; i < block; i++)
 22804  0153CE  0E00               	movlw	0
 22805  0153D0  0101               	movlb	1	; () banked
 22806  0153D2  6FAC               	movwf	CTR@i& (0+255),b
 22807  0153D4  D076               	goto	l11297
 22808  0153D6                     l11265:
 22809                           
 22810                           ; BSR set to: 1
 22811                           ;drv_mrf_miwi_security.c: 129: {
 22812                           ;drv_mrf_miwi_security.c: 130: for(j = 0; j < 4-1; j++)
 22813  0153D6  0E00               	movlw	0
 22814  0153D8  0101               	movlb	1	; () banked
 22815  0153DA  6FAD               	movwf	CTR@j& (0+255),b
 22816  0153DC                     l11267:
 22817                           
 22818                           ; BSR set to: 1
 22819  0153DC  0E02               	movlw	2
 22820  0153DE  0101               	movlb	1	; () banked
 22821  0153E0  65AD               	cpfsgt	CTR@j& (0+255),b
 22822  0153E2  D001               	goto	l11271
 22823  0153E4  D019               	goto	l442
 22824  0153E6                     l11271:
 22825                           
 22826                           ; BSR set to: 1
 22827                           ;drv_mrf_miwi_security.c: 131: {
 22828                           ;drv_mrf_miwi_security.c: 132: tmpBlock[j] = nounce[j];
 22829  0153E6  0101               	movlb	1	; () banked
 22830  0153E8  51AD               	movf	CTR@j& (0+255),w,b
 22831  0153EA  0D01               	mullw	1
 22832  0153EC  50F3               	movf	prodl,w,c
 22833  0153EE  0101               	movlb	1	; () banked
 22834  0153F0  25A6               	addwf	CTR@nounce& (0+255),w,b
 22835  0153F2  6ED9               	movwf	fsr2l,c
 22836  0153F4  50F4               	movf	prodh,w,c
 22837  0153F6  0101               	movlb	1	; () banked
 22838  0153F8  21A7               	addwfc	(CTR@nounce+1)& (0+255),w,b
 22839  0153FA  6EDA               	movwf	fsr2h,c
 22840  0153FC  0101               	movlb	1	; () banked
 22841  0153FE  51AD               	movf	CTR@j& (0+255),w,b
 22842  015400  0D01               	mullw	1
 22843  015402  0ECC               	movlw	low _tmpBlock
 22844  015404  24F3               	addwf	prodl,w,c
 22845  015406  6EE1               	movwf	fsr1l,c
 22846  015408  0E00               	movlw	high _tmpBlock
 22847  01540A  20F4               	addwfc	prodh,w,c
 22848  01540C  6EE2               	movwf	fsr1h,c
 22849  01540E  CFDF FFE7          	movff	indf2,indf1
 22850                           
 22851                           ; BSR set to: 1
 22852  015412  0101               	movlb	1	; () banked
 22853  015414  2BAD               	incf	CTR@j& (0+255),f,b
 22854  015416  D7E2               	goto	l11267
 22855  015418                     l442:
 22856                           
 22857                           ; BSR set to: 1
 22858                           ;drv_mrf_miwi_security.c: 133: }
 22859                           ;drv_mrf_miwi_security.c: 134: tmpBlock[4-1] = i;
 22860  015418  C1AC  F0CF         	movff	CTR@i,_tmpBlock+3
 22861                           
 22862                           ; BSR set to: 1
 22863                           ;drv_mrf_miwi_security.c: 135: encode((uint16_t *)tmpBlock, (uint16_t *)key);
 22864  01541C  0ECC               	movlw	low _tmpBlock
 22865  01541E  0101               	movlb	1	; () banked
 22866  015420  6F8A               	movwf	encode@text& (0+255),b
 22867  015422  0E00               	movlw	high _tmpBlock
 22868  015424  0101               	movlb	1	; () banked
 22869  015426  6F8B               	movwf	(encode@text+1)& (0+255),b
 22870  015428  C1A4  F18C         	movff	CTR@key,encode@key
 22871  01542C  C1A5  F18D         	movff	CTR@key+1,encode@key+1
 22872  015430  ECF3  F09B         	call	_encode	;wreg free
 22873                           
 22874                           ;drv_mrf_miwi_security.c: 136: for(j = 0; j < 4; j++)
 22875  015434  0E00               	movlw	0
 22876  015436  0101               	movlb	1	; () banked
 22877  015438  6FAD               	movwf	CTR@j& (0+255),b
 22878  01543A                     l11281:
 22879                           
 22880                           ; BSR set to: 1
 22881  01543A  0E03               	movlw	3
 22882  01543C  0101               	movlb	1	; () banked
 22883  01543E  65AD               	cpfsgt	CTR@j& (0+255),b
 22884  015440  D001               	goto	l11285
 22885  015442  D03D               	goto	l11295
 22886  015444                     l11285:
 22887                           
 22888                           ; BSR set to: 1
 22889                           ;drv_mrf_miwi_security.c: 137: {
 22890                           ;drv_mrf_miwi_security.c: 138: if( (i * 4 + j) >= len )
 22891  015444  0101               	movlb	1	; () banked
 22892  015446  51A3               	movf	CTR@len& (0+255),w,b
 22893  015448  0101               	movlb	1	; () banked
 22894  01544A  6FA8               	movwf	??_CTR& (0+255),b
 22895  01544C  6BA9               	clrf	(??_CTR+1)& (0+255),b
 22896  01544E  0101               	movlb	1	; () banked
 22897  015450  51AC               	movf	CTR@i& (0+255),w,b
 22898  015452  0D04               	mullw	4
 22899  015454  0101               	movlb	1	; () banked
 22900  015456  51AD               	movf	CTR@j& (0+255),w,b
 22901  015458  26F3               	addwf	prodl,f,c
 22902  01545A  0E00               	movlw	0
 22903  01545C  22F4               	addwfc	prodh,f,c
 22904  01545E  0101               	movlb	1	; () banked
 22905  015460  51A8               	movf	??_CTR& (0+255),w,b
 22906  015462  5CF3               	subwf	prodl,w,c
 22907  015464  50F4               	movf	prodh,w,c
 22908  015466  0A80               	xorlw	128
 22909  015468  0101               	movlb	1	; () banked
 22910  01546A  6FAA               	movwf	(??_CTR+2)& (0+255),b
 22911  01546C  0101               	movlb	1	; () banked
 22912  01546E  51A9               	movf	(??_CTR+1)& (0+255),w,b
 22913  015470  0A80               	xorlw	128
 22914  015472  0101               	movlb	1	; () banked
 22915  015474  59AA               	subwfb	(??_CTR+2)& (0+255),w,b
 22916  015476  B0D8               	btfsc	status,0,c
 22917  015478  D022               	goto	l11295
 22918                           
 22919                           ; BSR set to: 1
 22920                           ;drv_mrf_miwi_security.c: 141: }
 22921                           ;drv_mrf_miwi_security.c: 142: text[i * 4 + j] ^= tmpBlock[j];
 22922                           
 22923                           ; BSR set to: 1
 22924                           
 22925                           ; BSR set to: 1
 22926                           ;drv_mrf_miwi_security.c: 139: {
 22927                           ;drv_mrf_miwi_security.c: 140: break;
 22928  01547A  0101               	movlb	1	; () banked
 22929  01547C  51AD               	movf	CTR@j& (0+255),w,b
 22930  01547E  0D01               	mullw	1
 22931  015480  0ECC               	movlw	low _tmpBlock
 22932  015482  24F3               	addwf	prodl,w,c
 22933  015484  6ED9               	movwf	fsr2l,c
 22934  015486  0E00               	movlw	high _tmpBlock
 22935  015488  20F4               	addwfc	prodh,w,c
 22936  01548A  6EDA               	movwf	fsr2h,c
 22937  01548C  50DF               	movf	indf2,w,c
 22938  01548E  0101               	movlb	1	; () banked
 22939  015490  6FA8               	movwf	??_CTR& (0+255),b
 22940  015492  0101               	movlb	1	; () banked
 22941  015494  51AC               	movf	CTR@i& (0+255),w,b
 22942  015496  0D04               	mullw	4
 22943  015498  0101               	movlb	1	; () banked
 22944  01549A  51AD               	movf	CTR@j& (0+255),w,b
 22945  01549C  26F3               	addwf	prodl,f,c
 22946  01549E  0E00               	movlw	0
 22947  0154A0  22F4               	addwfc	prodh,f,c
 22948  0154A2  50F3               	movf	prodl,w,c
 22949  0154A4  0101               	movlb	1	; () banked
 22950  0154A6  25A1               	addwf	CTR@text& (0+255),w,b
 22951  0154A8  6ED9               	movwf	fsr2l,c
 22952  0154AA  50F4               	movf	prodh,w,c
 22953  0154AC  0101               	movlb	1	; () banked
 22954  0154AE  21A2               	addwfc	(CTR@text+1)& (0+255),w,b
 22955  0154B0  6EDA               	movwf	fsr2h,c
 22956  0154B2  0101               	movlb	1	; () banked
 22957  0154B4  51A8               	movf	??_CTR& (0+255),w,b
 22958  0154B6  1ADF               	xorwf	indf2,f,c
 22959                           
 22960                           ; BSR set to: 1
 22961  0154B8  0101               	movlb	1	; () banked
 22962  0154BA  2BAD               	incf	CTR@j& (0+255),f,b
 22963  0154BC  D7BE               	goto	l11281
 22964  0154BE                     l11295:
 22965                           
 22966                           ; BSR set to: 1
 22967  0154BE  0101               	movlb	1	; () banked
 22968  0154C0  2BAC               	incf	CTR@i& (0+255),f,b
 22969  0154C2                     l11297:
 22970                           
 22971                           ; BSR set to: 1
 22972  0154C2  0101               	movlb	1	; () banked
 22973  0154C4  51AB               	movf	CTR@block& (0+255),w,b
 22974  0154C6  0101               	movlb	1	; () banked
 22975  0154C8  5DAC               	subwf	CTR@i& (0+255),w,b
 22976  0154CA  B0D8               	btfsc	status,0,c
 22977  0154CC  0012               	return	
 22978  0154CE  D783               	goto	l11265
 22979  0154D0                     __end_of_CTR:
 22980                           	opt stack 0
 22981                           tblptru	equ	0xFF8
 22982                           tblptrh	equ	0xFF7
 22983                           tblptrl	equ	0xFF6
 22984                           tablat	equ	0xFF5
 22985                           prodh	equ	0xFF4
 22986                           prodl	equ	0xFF3
 22987                           intcon	equ	0xFF2
 22988                           intcon2	equ	0xFF1
 22989                           intcon3	equ	0xFF0
 22990                           indf0	equ	0xFEF
 22991                           postinc0	equ	0xFEE
 22992                           plusw0	equ	0xFEB
 22993                           fsr0h	equ	0xFEA
 22994                           fsr0l	equ	0xFE9
 22995                           wreg	equ	0xFE8
 22996                           indf1	equ	0xFE7
 22997                           postinc1	equ	0xFE6
 22998                           postdec1	equ	0xFE5
 22999                           fsr1h	equ	0xFE2
 23000                           fsr1l	equ	0xFE1
 23001                           indf2	equ	0xFDF
 23002                           postinc2	equ	0xFDE
 23003                           postdec2	equ	0xFDD
 23004                           plusw2	equ	0xFDB
 23005                           fsr2h	equ	0xFDA
 23006                           fsr2l	equ	0xFD9
 23007                           status	equ	0xFD8
 23008                           
 23009 ;; *************** function _CBC_MAC *****************
 23010 ;; Defined at:
 23011 ;;		line 175 in file "src/miwi/drv_mrf_miwi_security.c"
 23012 ;; Parameters:    Size  Location     Type
 23013 ;;  text            2   23[BANK1 ] PTR unsigned char 
 23014 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 23015 ;;  len             1   25[BANK1 ] unsigned char 
 23016 ;;  key             2   26[BANK1 ] PTR unsigned char 
 23017 ;;		 -> key(8), 
 23018 ;;  MIC             2   28[BANK1 ] PTR unsigned char 
 23019 ;;		 -> tmpBlock(4), 
 23020 ;; Auto vars:     Size  Location     Type
 23021 ;;  i               1   35[BANK1 ] unsigned char 
 23022 ;;  j               1   34[BANK1 ] unsigned char 
 23023 ;;  block           1   33[BANK1 ] unsigned char 
 23024 ;; Return value:  Size  Location     Type
 23025 ;;		None               void
 23026 ;; Registers used:
 23027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23028 ;; Tracked objects:
 23029 ;;		On entry : 0/0
 23030 ;;		On exit  : 0/0
 23031 ;;		Unchanged: 0/0
 23032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23033 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23034 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23035 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23036 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23037 ;;Total ram usage:       13 bytes
 23038 ;; Hardware stack levels used:    1
 23039 ;; Hardware stack levels required when called:   10
 23040 ;; This function calls:
 23041 ;;		___awdiv
 23042 ;;		_encode
 23043 ;; This function is called by:
 23044 ;;		_CCM_Enc
 23045 ;;		_CCM_Dec
 23046 ;; This function uses a non-reentrant model
 23047 ;;
 23048                           
 23049                           	psect	text72
 23050  0156FA                     __ptext72:
 23051                           	opt stack 0
 23052  0156FA                     _CBC_MAC:
 23053                           	opt stack 15
 23054                           
 23055                           ;drv_mrf_miwi_security.c: 180: uint8_t block = len / 4 + 1;
 23056                           
 23057                           ; BSR set to: 1
 23058                           ;incstack = 0
 23059  0156FA  C1A3  F18A         	movff	CBC_MAC@len,___awdiv@dividend
 23060  0156FE  0101               	movlb	1	; () banked
 23061  015700  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
 23062  015702  0E00               	movlw	0
 23063  015704  0101               	movlb	1	; () banked
 23064  015706  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
 23065  015708  0E04               	movlw	4
 23066  01570A  6F8C               	movwf	___awdiv@divisor& (0+255),b
 23067  01570C  ECFE  F0AE         	call	___awdiv	;wreg free
 23068  015710  0101               	movlb	1	; () banked
 23069  015712  298A               	incf	?___awdiv& (0+255),w,b
 23070  015714  0101               	movlb	1	; () banked
 23071  015716  6FAB               	movwf	CBC_MAC@block& (0+255),b
 23072                           
 23073                           ; BSR set to: 1
 23074                           ;drv_mrf_miwi_security.c: 181: uint8_t i, j;
 23075                           ;drv_mrf_miwi_security.c: 188: for(i = 0; i < 4; i++)
 23076  015718  0E00               	movlw	0
 23077  01571A  0101               	movlb	1	; () banked
 23078  01571C  6FAD               	movwf	CBC_MAC@i& (0+255),b
 23079  01571E                     l11303:
 23080                           
 23081                           ; BSR set to: 1
 23082  01571E  0E03               	movlw	3
 23083  015720  0101               	movlb	1	; () banked
 23084  015722  65AD               	cpfsgt	CBC_MAC@i& (0+255),b
 23085  015724  D001               	goto	l11307
 23086  015726  D010               	goto	l11313
 23087  015728                     l11307:
 23088                           
 23089                           ; BSR set to: 1
 23090                           ;drv_mrf_miwi_security.c: 189: {
 23091                           ;drv_mrf_miwi_security.c: 190: MIC[i] = 0;
 23092  015728  0101               	movlb	1	; () banked
 23093  01572A  51AD               	movf	CBC_MAC@i& (0+255),w,b
 23094  01572C  0D01               	mullw	1
 23095  01572E  50F3               	movf	prodl,w,c
 23096  015730  0101               	movlb	1	; () banked
 23097  015732  25A6               	addwf	CBC_MAC@MIC& (0+255),w,b
 23098  015734  6ED9               	movwf	fsr2l,c
 23099  015736  50F4               	movf	prodh,w,c
 23100  015738  0101               	movlb	1	; () banked
 23101  01573A  21A7               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 23102  01573C  6EDA               	movwf	fsr2h,c
 23103  01573E  0E00               	movlw	0
 23104  015740  6EDF               	movwf	indf2,c
 23105                           
 23106                           ; BSR set to: 1
 23107  015742  0101               	movlb	1	; () banked
 23108  015744  2BAD               	incf	CBC_MAC@i& (0+255),f,b
 23109  015746  D7EB               	goto	l11303
 23110  015748                     l11313:
 23111                           
 23112                           ; BSR set to: 1
 23113                           ;drv_mrf_miwi_security.c: 191: }
 23114                           ;drv_mrf_miwi_security.c: 193: for(i = 0; i < block; i++)
 23115  015748  0E00               	movlw	0
 23116  01574A  0101               	movlb	1	; () banked
 23117  01574C  6FAD               	movwf	CBC_MAC@i& (0+255),b
 23118  01574E  D053               	goto	l11335
 23119  015750                     l11315:
 23120                           
 23121                           ; BSR set to: 1
 23122                           ;drv_mrf_miwi_security.c: 194: {
 23123                           ;drv_mrf_miwi_security.c: 195: for(j = 0; j < 4; j++)
 23124  015750  0E00               	movlw	0
 23125  015752  0101               	movlb	1	; () banked
 23126  015754  6FAC               	movwf	CBC_MAC@j& (0+255),b
 23127  015756                     l11317:
 23128                           
 23129                           ; BSR set to: 1
 23130  015756  0E03               	movlw	3
 23131  015758  0101               	movlb	1	; () banked
 23132  01575A  65AC               	cpfsgt	CBC_MAC@j& (0+255),b
 23133  01575C  D001               	goto	l11321
 23134  01575E  D03F               	goto	l11331
 23135  015760                     l11321:
 23136                           
 23137                           ; BSR set to: 1
 23138                           ;drv_mrf_miwi_security.c: 196: {
 23139                           ;drv_mrf_miwi_security.c: 197: if( (i * 4 + j) >= len )
 23140  015760  0101               	movlb	1	; () banked
 23141  015762  51A3               	movf	CBC_MAC@len& (0+255),w,b
 23142  015764  0101               	movlb	1	; () banked
 23143  015766  6FA8               	movwf	??_CBC_MAC& (0+255),b
 23144  015768  6BA9               	clrf	(??_CBC_MAC+1)& (0+255),b
 23145  01576A  0101               	movlb	1	; () banked
 23146  01576C  51AD               	movf	CBC_MAC@i& (0+255),w,b
 23147  01576E  0D04               	mullw	4
 23148  015770  0101               	movlb	1	; () banked
 23149  015772  51AC               	movf	CBC_MAC@j& (0+255),w,b
 23150  015774  26F3               	addwf	prodl,f,c
 23151  015776  0E00               	movlw	0
 23152  015778  22F4               	addwfc	prodh,f,c
 23153  01577A  0101               	movlb	1	; () banked
 23154  01577C  51A8               	movf	??_CBC_MAC& (0+255),w,b
 23155  01577E  5CF3               	subwf	prodl,w,c
 23156  015780  50F4               	movf	prodh,w,c
 23157  015782  0A80               	xorlw	128
 23158  015784  0101               	movlb	1	; () banked
 23159  015786  6FAA               	movwf	(??_CBC_MAC+2)& (0+255),b
 23160  015788  0101               	movlb	1	; () banked
 23161  01578A  51A9               	movf	(??_CBC_MAC+1)& (0+255),w,b
 23162  01578C  0A80               	xorlw	128
 23163  01578E  0101               	movlb	1	; () banked
 23164  015790  59AA               	subwfb	(??_CBC_MAC+2)& (0+255),w,b
 23165  015792  B0D8               	btfsc	status,0,c
 23166  015794  D024               	goto	l11331
 23167                           
 23168                           ; BSR set to: 1
 23169                           ;drv_mrf_miwi_security.c: 200: }
 23170                           ;drv_mrf_miwi_security.c: 201: MIC[j] ^= text[i * 4 + j];
 23171                           
 23172                           ; BSR set to: 1
 23173                           
 23174                           ; BSR set to: 1
 23175                           ;drv_mrf_miwi_security.c: 198: {
 23176                           ;drv_mrf_miwi_security.c: 199: break;
 23177  015796  0101               	movlb	1	; () banked
 23178  015798  51AD               	movf	CBC_MAC@i& (0+255),w,b
 23179  01579A  0D04               	mullw	4
 23180  01579C  0101               	movlb	1	; () banked
 23181  01579E  51AC               	movf	CBC_MAC@j& (0+255),w,b
 23182  0157A0  26F3               	addwf	prodl,f,c
 23183  0157A2  0E00               	movlw	0
 23184  0157A4  22F4               	addwfc	prodh,f,c
 23185  0157A6  50F3               	movf	prodl,w,c
 23186  0157A8  0101               	movlb	1	; () banked
 23187  0157AA  25A1               	addwf	CBC_MAC@text& (0+255),w,b
 23188  0157AC  6ED9               	movwf	fsr2l,c
 23189  0157AE  50F4               	movf	prodh,w,c
 23190  0157B0  0101               	movlb	1	; () banked
 23191  0157B2  21A2               	addwfc	(CBC_MAC@text+1)& (0+255),w,b
 23192  0157B4  6EDA               	movwf	fsr2h,c
 23193  0157B6  50DF               	movf	indf2,w,c
 23194  0157B8  0101               	movlb	1	; () banked
 23195  0157BA  6FA8               	movwf	??_CBC_MAC& (0+255),b
 23196  0157BC  0101               	movlb	1	; () banked
 23197  0157BE  51AC               	movf	CBC_MAC@j& (0+255),w,b
 23198  0157C0  0D01               	mullw	1
 23199  0157C2  50F3               	movf	prodl,w,c
 23200  0157C4  0101               	movlb	1	; () banked
 23201  0157C6  25A6               	addwf	CBC_MAC@MIC& (0+255),w,b
 23202  0157C8  6ED9               	movwf	fsr2l,c
 23203  0157CA  50F4               	movf	prodh,w,c
 23204  0157CC  0101               	movlb	1	; () banked
 23205  0157CE  21A7               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 23206  0157D0  6EDA               	movwf	fsr2h,c
 23207  0157D2  0101               	movlb	1	; () banked
 23208  0157D4  51A8               	movf	??_CBC_MAC& (0+255),w,b
 23209  0157D6  1ADF               	xorwf	indf2,f,c
 23210                           
 23211                           ; BSR set to: 1
 23212  0157D8  0101               	movlb	1	; () banked
 23213  0157DA  2BAC               	incf	CBC_MAC@j& (0+255),f,b
 23214  0157DC  D7BC               	goto	l11317
 23215  0157DE                     l11331:
 23216                           
 23217                           ; BSR set to: 1
 23218                           ;drv_mrf_miwi_security.c: 202: }
 23219                           ;drv_mrf_miwi_security.c: 203: encode((uint16_t *)MIC, (uint16_t *)key);
 23220  0157DE  C1A6  F18A         	movff	CBC_MAC@MIC,encode@text
 23221  0157E2  C1A7  F18B         	movff	CBC_MAC@MIC+1,encode@text+1
 23222  0157E6  C1A4  F18C         	movff	CBC_MAC@key,encode@key
 23223  0157EA  C1A5  F18D         	movff	CBC_MAC@key+1,encode@key+1
 23224  0157EE  ECF3  F09B         	call	_encode	;wreg free
 23225  0157F2  0101               	movlb	1	; () banked
 23226  0157F4  2BAD               	incf	CBC_MAC@i& (0+255),f,b
 23227  0157F6                     l11335:
 23228                           
 23229                           ; BSR set to: 1
 23230  0157F6  0101               	movlb	1	; () banked
 23231  0157F8  51AB               	movf	CBC_MAC@block& (0+255),w,b
 23232  0157FA  0101               	movlb	1	; () banked
 23233  0157FC  5DAD               	subwf	CBC_MAC@i& (0+255),w,b
 23234  0157FE  B0D8               	btfsc	status,0,c
 23235  015800  0012               	return	
 23236  015802  D7A6               	goto	l11315
 23237  015804                     __end_of_CBC_MAC:
 23238                           	opt stack 0
 23239                           tblptru	equ	0xFF8
 23240                           tblptrh	equ	0xFF7
 23241                           tblptrl	equ	0xFF6
 23242                           tablat	equ	0xFF5
 23243                           prodh	equ	0xFF4
 23244                           prodl	equ	0xFF3
 23245                           intcon	equ	0xFF2
 23246                           intcon2	equ	0xFF1
 23247                           intcon3	equ	0xFF0
 23248                           indf0	equ	0xFEF
 23249                           postinc0	equ	0xFEE
 23250                           plusw0	equ	0xFEB
 23251                           fsr0h	equ	0xFEA
 23252                           fsr0l	equ	0xFE9
 23253                           wreg	equ	0xFE8
 23254                           indf1	equ	0xFE7
 23255                           postinc1	equ	0xFE6
 23256                           postdec1	equ	0xFE5
 23257                           fsr1h	equ	0xFE2
 23258                           fsr1l	equ	0xFE1
 23259                           indf2	equ	0xFDF
 23260                           postinc2	equ	0xFDE
 23261                           postdec2	equ	0xFDD
 23262                           plusw2	equ	0xFDB
 23263                           fsr2h	equ	0xFDA
 23264                           fsr2l	equ	0xFD9
 23265                           status	equ	0xFD8
 23266                           
 23267 ;; *************** function _encode *****************
 23268 ;; Defined at:
 23269 ;;		line 77 in file "src/miwi/drv_mrf_miwi_security.c"
 23270 ;; Parameters:    Size  Location     Type
 23271 ;;  text            2    0[BANK1 ] PTR unsigned int 
 23272 ;;		 -> tmpBlock(4), 
 23273 ;;  key             2    2[BANK1 ] PTR unsigned int 
 23274 ;;		 -> key(8), 
 23275 ;; Auto vars:     Size  Location     Type
 23276 ;;  sum             2   21[BANK1 ] unsigned int 
 23277 ;;  part2           2   19[BANK1 ] unsigned int 
 23278 ;;  part1           2   17[BANK1 ] unsigned int 
 23279 ;;  delta           2   14[BANK1 ] unsigned int 
 23280 ;;  i               1   16[BANK1 ] unsigned char 
 23281 ;; Return value:  Size  Location     Type
 23282 ;;		None               void
 23283 ;; Registers used:
 23284 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23285 ;; Tracked objects:
 23286 ;;		On entry : 0/0
 23287 ;;		On exit  : 0/0
 23288 ;;		Unchanged: 0/0
 23289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23290 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23291 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23292 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23293 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23294 ;;Total ram usage:       23 bytes
 23295 ;; Hardware stack levels used:    1
 23296 ;; Hardware stack levels required when called:    9
 23297 ;; This function calls:
 23298 ;;		Nothing
 23299 ;; This function is called by:
 23300 ;;		_CTR
 23301 ;;		_CBC_MAC
 23302 ;; This function uses a non-reentrant model
 23303 ;;
 23304                           
 23305                           	psect	text73
 23306  0137E6                     __ptext73:
 23307                           	opt stack 0
 23308  0137E6                     _encode:
 23309                           	opt stack 15
 23310                           
 23311                           ;drv_mrf_miwi_security.c: 79: uint16_t part1=text[0], part2=text[1];
 23312                           
 23313                           ; BSR set to: 1
 23314                           ;incstack = 0
 23315  0137E6  C18A  FFD9         	movff	encode@text,fsr2l
 23316  0137EA  C18B  FFDA         	movff	encode@text+1,fsr2h
 23317  0137EE  CFDE F19B          	movff	postinc2,encode@part1
 23318  0137F2  CFDD F19C          	movff	postdec2,encode@part1+1
 23319  0137F6  0101               	movlb	1	; () banked
 23320  0137F8  EE20 F002          	lfsr	2,2
 23321  0137FC  518A               	movf	encode@text& (0+255),w,b
 23322  0137FE  26D9               	addwf	fsr2l,f,c
 23323  013800  518B               	movf	(encode@text+1)& (0+255),w,b
 23324  013802  22DA               	addwfc	fsr2h,f,c
 23325  013804  CFDE F19D          	movff	postinc2,encode@part2
 23326  013808  CFDD F19E          	movff	postdec2,encode@part2+1
 23327                           
 23328                           ; BSR set to: 1
 23329                           ;drv_mrf_miwi_security.c: 80: uint16_t sum=0, delta=0x9E37;
 23330  01380C  0E00               	movlw	0
 23331  01380E  0101               	movlb	1	; () banked
 23332  013810  6FA0               	movwf	(encode@sum+1)& (0+255),b
 23333  013812  0E00               	movlw	0
 23334  013814  6F9F               	movwf	encode@sum& (0+255),b
 23335                           
 23336                           ; BSR set to: 1
 23337  013816  0E9E               	movlw	158
 23338  013818  0101               	movlb	1	; () banked
 23339  01381A  6F99               	movwf	(encode@delta+1)& (0+255),b
 23340  01381C  0E37               	movlw	55
 23341  01381E  6F98               	movwf	encode@delta& (0+255),b
 23342                           
 23343                           ; BSR set to: 1
 23344                           ;drv_mrf_miwi_security.c: 81: uint8_t i;
 23345                           ;drv_mrf_miwi_security.c: 83: for(i=0; i<32; i++)
 23346  013820  0E00               	movlw	0
 23347  013822  0101               	movlb	1	; () banked
 23348  013824  6F9A               	movwf	encode@i& (0+255),b
 23349  013826                     l11117:
 23350                           
 23351                           ; BSR set to: 1
 23352  013826  0E1F               	movlw	31
 23353  013828  0101               	movlb	1	; () banked
 23354  01382A  659A               	cpfsgt	encode@i& (0+255),b
 23355  01382C  D001               	goto	l11121
 23356  01382E  D0D4               	goto	l11131
 23357  013830                     l11121:
 23358                           
 23359                           ; BSR set to: 1
 23360                           ;drv_mrf_miwi_security.c: 84: {
 23361                           ;drv_mrf_miwi_security.c: 85: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (sum + 
      +                          key[sum & 3]);
 23362  013830  0E03               	movlw	3
 23363  013832  0101               	movlb	1	; () banked
 23364  013834  159F               	andwf	encode@sum& (0+255),w,b
 23365  013836  0101               	movlb	1	; () banked
 23366  013838  6F8E               	movwf	??_encode& (0+255),b
 23367  01383A  0E00               	movlw	0
 23368  01383C  0101               	movlb	1	; () banked
 23369  01383E  15A0               	andwf	(encode@sum+1)& (0+255),w,b
 23370  013840  0101               	movlb	1	; () banked
 23371  013842  6F8F               	movwf	(??_encode+1)& (0+255),b
 23372  013844  90D8               	bcf	status,0,c
 23373  013846  0101               	movlb	1	; () banked
 23374  013848  378E               	rlcf	??_encode& (0+255),f,b
 23375  01384A  378F               	rlcf	(??_encode+1)& (0+255),f,b
 23376  01384C  0101               	movlb	1	; () banked
 23377  01384E  518E               	movf	??_encode& (0+255),w,b
 23378  013850  0101               	movlb	1	; () banked
 23379  013852  258C               	addwf	encode@key& (0+255),w,b
 23380  013854  6ED9               	movwf	fsr2l,c
 23381  013856  0101               	movlb	1	; () banked
 23382  013858  518F               	movf	(??_encode+1)& (0+255),w,b
 23383  01385A  0101               	movlb	1	; () banked
 23384  01385C  218D               	addwfc	(encode@key+1)& (0+255),w,b
 23385  01385E  6EDA               	movwf	fsr2h,c
 23386  013860  CFDE F190          	movff	postinc2,??_encode+2
 23387  013864  CFDD F191          	movff	postdec2,??_encode+3
 23388  013868  0101               	movlb	1	; () banked
 23389  01386A  519F               	movf	encode@sum& (0+255),w,b
 23390  01386C  0101               	movlb	1	; () banked
 23391  01386E  2790               	addwf	(??_encode+2)& (0+255),f,b
 23392  013870  0101               	movlb	1	; () banked
 23393  013872  51A0               	movf	(encode@sum+1)& (0+255),w,b
 23394  013874  0101               	movlb	1	; () banked
 23395  013876  2391               	addwfc	(??_encode+3)& (0+255),f,b
 23396  013878  C19D  F192         	movff	encode@part2,??_encode+4
 23397  01387C  C19E  F193         	movff	encode@part2+1,??_encode+5
 23398  013880  0E05               	movlw	5
 23399  013882  0101               	movlb	1	; () banked
 23400  013884  6F94               	movwf	(??_encode+6)& (0+255),b
 23401  013886                     u12495:
 23402  013886  0101               	movlb	1	; () banked
 23403  013888  90D8               	bcf	status,0,c
 23404  01388A  3393               	rrcf	(??_encode+5)& (0+255),f,b
 23405  01388C  3392               	rrcf	(??_encode+4)& (0+255),f,b
 23406  01388E  0101               	movlb	1	; () banked
 23407  013890  2F94               	decfsz	(??_encode+6)& (0+255),f,b
 23408  013892  D7F9               	goto	u12495
 23409  013894  C19D  F195         	movff	encode@part2,??_encode+7
 23410  013898  C19E  F196         	movff	encode@part2+1,??_encode+8
 23411  01389C  0101               	movlb	1	; () banked
 23412  01389E  3B95               	swapf	(??_encode+7)& (0+255),f,b
 23413  0138A0  3B96               	swapf	(??_encode+8)& (0+255),f,b
 23414  0138A2  0EF0               	movlw	240
 23415  0138A4  1796               	andwf	(??_encode+8)& (0+255),f,b
 23416  0138A6  5195               	movf	(??_encode+7)& (0+255),w,b
 23417  0138A8  0B0F               	andlw	15
 23418  0138AA  1396               	iorwf	(??_encode+8)& (0+255),f,b
 23419  0138AC  0EF0               	movlw	240
 23420  0138AE  1795               	andwf	(??_encode+7)& (0+255),f,b
 23421  0138B0  0101               	movlb	1	; () banked
 23422  0138B2  5192               	movf	(??_encode+4)& (0+255),w,b
 23423  0138B4  0101               	movlb	1	; () banked
 23424  0138B6  1B95               	xorwf	(??_encode+7)& (0+255),f,b
 23425  0138B8  0101               	movlb	1	; () banked
 23426  0138BA  5193               	movf	(??_encode+5)& (0+255),w,b
 23427  0138BC  0101               	movlb	1	; () banked
 23428  0138BE  1B96               	xorwf	(??_encode+8)& (0+255),f,b
 23429  0138C0  0101               	movlb	1	; () banked
 23430  0138C2  519D               	movf	encode@part2& (0+255),w,b
 23431  0138C4  0101               	movlb	1	; () banked
 23432  0138C6  2795               	addwf	(??_encode+7)& (0+255),f,b
 23433  0138C8  0101               	movlb	1	; () banked
 23434  0138CA  519E               	movf	(encode@part2+1)& (0+255),w,b
 23435  0138CC  0101               	movlb	1	; () banked
 23436  0138CE  2396               	addwfc	(??_encode+8)& (0+255),f,b
 23437  0138D0  0101               	movlb	1	; () banked
 23438  0138D2  5190               	movf	(??_encode+2)& (0+255),w,b
 23439  0138D4  0101               	movlb	1	; () banked
 23440  0138D6  1B95               	xorwf	(??_encode+7)& (0+255),f,b
 23441  0138D8  0101               	movlb	1	; () banked
 23442  0138DA  5191               	movf	(??_encode+3)& (0+255),w,b
 23443  0138DC  0101               	movlb	1	; () banked
 23444  0138DE  1B96               	xorwf	(??_encode+8)& (0+255),f,b
 23445  0138E0  0101               	movlb	1	; () banked
 23446  0138E2  5195               	movf	(??_encode+7)& (0+255),w,b
 23447  0138E4  0101               	movlb	1	; () banked
 23448  0138E6  279B               	addwf	encode@part1& (0+255),f,b
 23449  0138E8  0101               	movlb	1	; () banked
 23450  0138EA  5196               	movf	(??_encode+8)& (0+255),w,b
 23451  0138EC  0101               	movlb	1	; () banked
 23452  0138EE  239C               	addwfc	(encode@part1+1)& (0+255),f,b
 23453                           
 23454                           ; BSR set to: 1
 23455                           ;drv_mrf_miwi_security.c: 86: sum += delta;
 23456  0138F0  0101               	movlb	1	; () banked
 23457  0138F2  5198               	movf	encode@delta& (0+255),w,b
 23458  0138F4  0101               	movlb	1	; () banked
 23459  0138F6  279F               	addwf	encode@sum& (0+255),f,b
 23460  0138F8  0101               	movlb	1	; () banked
 23461  0138FA  5199               	movf	(encode@delta+1)& (0+255),w,b
 23462  0138FC  0101               	movlb	1	; () banked
 23463  0138FE  23A0               	addwfc	(encode@sum+1)& (0+255),f,b
 23464                           
 23465                           ; BSR set to: 1
 23466                           ;drv_mrf_miwi_security.c: 87: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (sum + 
      +                          key[(sum>>11) & 3]);
 23467  013900  C19F  F18E         	movff	encode@sum,??_encode
 23468  013904  C1A0  F18F         	movff	encode@sum+1,??_encode+1
 23469  013908  0E0B               	movlw	11
 23470  01390A  0101               	movlb	1	; () banked
 23471  01390C  6F90               	movwf	(??_encode+2)& (0+255),b
 23472  01390E                     u12505:
 23473  01390E  0101               	movlb	1	; () banked
 23474  013910  90D8               	bcf	status,0,c
 23475  013912  338F               	rrcf	(??_encode+1)& (0+255),f,b
 23476  013914  338E               	rrcf	??_encode& (0+255),f,b
 23477  013916  0101               	movlb	1	; () banked
 23478  013918  2F90               	decfsz	(??_encode+2)& (0+255),f,b
 23479  01391A  D7F9               	goto	u12505
 23480  01391C  0E03               	movlw	3
 23481  01391E  0101               	movlb	1	; () banked
 23482  013920  178E               	andwf	??_encode& (0+255),f,b
 23483  013922  0E00               	movlw	0
 23484  013924  178F               	andwf	(??_encode+1)& (0+255),f,b
 23485  013926  90D8               	bcf	status,0,c
 23486  013928  0101               	movlb	1	; () banked
 23487  01392A  378E               	rlcf	??_encode& (0+255),f,b
 23488  01392C  378F               	rlcf	(??_encode+1)& (0+255),f,b
 23489  01392E  0101               	movlb	1	; () banked
 23490  013930  518E               	movf	??_encode& (0+255),w,b
 23491  013932  0101               	movlb	1	; () banked
 23492  013934  258C               	addwf	encode@key& (0+255),w,b
 23493  013936  6ED9               	movwf	fsr2l,c
 23494  013938  0101               	movlb	1	; () banked
 23495  01393A  518F               	movf	(??_encode+1)& (0+255),w,b
 23496  01393C  0101               	movlb	1	; () banked
 23497  01393E  218D               	addwfc	(encode@key+1)& (0+255),w,b
 23498  013940  6EDA               	movwf	fsr2h,c
 23499  013942  CFDE F191          	movff	postinc2,??_encode+3
 23500  013946  CFDD F192          	movff	postdec2,??_encode+4
 23501  01394A  0101               	movlb	1	; () banked
 23502  01394C  519F               	movf	encode@sum& (0+255),w,b
 23503  01394E  0101               	movlb	1	; () banked
 23504  013950  2791               	addwf	(??_encode+3)& (0+255),f,b
 23505  013952  0101               	movlb	1	; () banked
 23506  013954  51A0               	movf	(encode@sum+1)& (0+255),w,b
 23507  013956  0101               	movlb	1	; () banked
 23508  013958  2392               	addwfc	(??_encode+4)& (0+255),f,b
 23509  01395A  C19B  F193         	movff	encode@part1,??_encode+5
 23510  01395E  C19C  F194         	movff	encode@part1+1,??_encode+6
 23511  013962  0E05               	movlw	5
 23512  013964  0101               	movlb	1	; () banked
 23513  013966  6F95               	movwf	(??_encode+7)& (0+255),b
 23514  013968                     u12515:
 23515  013968  0101               	movlb	1	; () banked
 23516  01396A  90D8               	bcf	status,0,c
 23517  01396C  3394               	rrcf	(??_encode+6)& (0+255),f,b
 23518  01396E  3393               	rrcf	(??_encode+5)& (0+255),f,b
 23519  013970  0101               	movlb	1	; () banked
 23520  013972  2F95               	decfsz	(??_encode+7)& (0+255),f,b
 23521  013974  D7F9               	goto	u12515
 23522  013976  C19B  F196         	movff	encode@part1,??_encode+8
 23523  01397A  C19C  F197         	movff	encode@part1+1,??_encode+9
 23524  01397E  0101               	movlb	1	; () banked
 23525  013980  3B96               	swapf	(??_encode+8)& (0+255),f,b
 23526  013982  3B97               	swapf	(??_encode+9)& (0+255),f,b
 23527  013984  0EF0               	movlw	240
 23528  013986  1797               	andwf	(??_encode+9)& (0+255),f,b
 23529  013988  5196               	movf	(??_encode+8)& (0+255),w,b
 23530  01398A  0B0F               	andlw	15
 23531  01398C  1397               	iorwf	(??_encode+9)& (0+255),f,b
 23532  01398E  0EF0               	movlw	240
 23533  013990  1796               	andwf	(??_encode+8)& (0+255),f,b
 23534  013992  0101               	movlb	1	; () banked
 23535  013994  5193               	movf	(??_encode+5)& (0+255),w,b
 23536  013996  0101               	movlb	1	; () banked
 23537  013998  1B96               	xorwf	(??_encode+8)& (0+255),f,b
 23538  01399A  0101               	movlb	1	; () banked
 23539  01399C  5194               	movf	(??_encode+6)& (0+255),w,b
 23540  01399E  0101               	movlb	1	; () banked
 23541  0139A0  1B97               	xorwf	(??_encode+9)& (0+255),f,b
 23542  0139A2  0101               	movlb	1	; () banked
 23543  0139A4  519B               	movf	encode@part1& (0+255),w,b
 23544  0139A6  0101               	movlb	1	; () banked
 23545  0139A8  2796               	addwf	(??_encode+8)& (0+255),f,b
 23546  0139AA  0101               	movlb	1	; () banked
 23547  0139AC  519C               	movf	(encode@part1+1)& (0+255),w,b
 23548  0139AE  0101               	movlb	1	; () banked
 23549  0139B0  2397               	addwfc	(??_encode+9)& (0+255),f,b
 23550  0139B2  0101               	movlb	1	; () banked
 23551  0139B4  5191               	movf	(??_encode+3)& (0+255),w,b
 23552  0139B6  0101               	movlb	1	; () banked
 23553  0139B8  1B96               	xorwf	(??_encode+8)& (0+255),f,b
 23554  0139BA  0101               	movlb	1	; () banked
 23555  0139BC  5192               	movf	(??_encode+4)& (0+255),w,b
 23556  0139BE  0101               	movlb	1	; () banked
 23557  0139C0  1B97               	xorwf	(??_encode+9)& (0+255),f,b
 23558  0139C2  0101               	movlb	1	; () banked
 23559  0139C4  5196               	movf	(??_encode+8)& (0+255),w,b
 23560  0139C6  0101               	movlb	1	; () banked
 23561  0139C8  279D               	addwf	encode@part2& (0+255),f,b
 23562  0139CA  0101               	movlb	1	; () banked
 23563  0139CC  5197               	movf	(??_encode+9)& (0+255),w,b
 23564  0139CE  0101               	movlb	1	; () banked
 23565  0139D0  239E               	addwfc	(encode@part2+1)& (0+255),f,b
 23566                           
 23567                           ; BSR set to: 1
 23568  0139D2  0101               	movlb	1	; () banked
 23569  0139D4  2B9A               	incf	encode@i& (0+255),f,b
 23570  0139D6  D727               	goto	l11117
 23571  0139D8                     l11131:
 23572                           
 23573                           ; BSR set to: 1
 23574                           ;drv_mrf_miwi_security.c: 88: }
 23575                           ;drv_mrf_miwi_security.c: 89: text[0]=part1; text[1]=part2;
 23576  0139D8  C18A  FFD9         	movff	encode@text,fsr2l
 23577  0139DC  C18B  FFDA         	movff	encode@text+1,fsr2h
 23578  0139E0  C19B  FFDE         	movff	encode@part1,postinc2
 23579  0139E4  C19C  FFDD         	movff	encode@part1+1,postdec2
 23580                           
 23581                           ; BSR set to: 1
 23582  0139E8  0101               	movlb	1	; () banked
 23583  0139EA  EE20 F002          	lfsr	2,2
 23584  0139EE  518A               	movf	encode@text& (0+255),w,b
 23585  0139F0  26D9               	addwf	fsr2l,f,c
 23586  0139F2  518B               	movf	(encode@text+1)& (0+255),w,b
 23587  0139F4  22DA               	addwfc	fsr2h,f,c
 23588  0139F6  C19D  FFDE         	movff	encode@part2,postinc2
 23589  0139FA  C19E  FFDD         	movff	encode@part2+1,postdec2
 23590                           
 23591                           ; BSR set to: 1
 23592  0139FE  0012               	return		;funcret
 23593  013A00                     __end_of_encode:
 23594                           	opt stack 0
 23595                           tblptru	equ	0xFF8
 23596                           tblptrh	equ	0xFF7
 23597                           tblptrl	equ	0xFF6
 23598                           tablat	equ	0xFF5
 23599                           prodh	equ	0xFF4
 23600                           prodl	equ	0xFF3
 23601                           intcon	equ	0xFF2
 23602                           intcon2	equ	0xFF1
 23603                           intcon3	equ	0xFF0
 23604                           indf0	equ	0xFEF
 23605                           postinc0	equ	0xFEE
 23606                           plusw0	equ	0xFEB
 23607                           fsr0h	equ	0xFEA
 23608                           fsr0l	equ	0xFE9
 23609                           wreg	equ	0xFE8
 23610                           indf1	equ	0xFE7
 23611                           postinc1	equ	0xFE6
 23612                           postdec1	equ	0xFE5
 23613                           fsr1h	equ	0xFE2
 23614                           fsr1l	equ	0xFE1
 23615                           indf2	equ	0xFDF
 23616                           postinc2	equ	0xFDE
 23617                           postdec2	equ	0xFDD
 23618                           plusw2	equ	0xFDB
 23619                           fsr2h	equ	0xFDA
 23620                           fsr2l	equ	0xFD9
 23621                           status	equ	0xFD8
 23622                           
 23623 ;; *************** function ___awdiv *****************
 23624 ;; Defined at:
 23625 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 23626 ;; Parameters:    Size  Location     Type
 23627 ;;  dividend        2    0[BANK1 ] int 
 23628 ;;  divisor         2    2[BANK1 ] int 
 23629 ;; Auto vars:     Size  Location     Type
 23630 ;;  quotient        2    6[BANK1 ] int 
 23631 ;;  sign            1    5[BANK1 ] unsigned char 
 23632 ;;  counter         1    4[BANK1 ] unsigned char 
 23633 ;; Return value:  Size  Location     Type
 23634 ;;                  2    0[BANK1 ] int 
 23635 ;; Registers used:
 23636 ;;		wreg, status,2, status,0
 23637 ;; Tracked objects:
 23638 ;;		On entry : 0/0
 23639 ;;		On exit  : 0/0
 23640 ;;		Unchanged: 0/0
 23641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23642 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23643 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23645 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23646 ;;Total ram usage:        8 bytes
 23647 ;; Hardware stack levels used:    1
 23648 ;; Hardware stack levels required when called:    9
 23649 ;; This function calls:
 23650 ;;		Nothing
 23651 ;; This function is called by:
 23652 ;;		_CTR
 23653 ;;		_CBC_MAC
 23654 ;; This function uses a non-reentrant model
 23655 ;;
 23656                           
 23657                           	psect	text74
 23658  015DFC                     __ptext74:
 23659                           	opt stack 0
 23660  015DFC                     ___awdiv:
 23661                           	opt stack 15
 23662                           
 23663                           ; BSR set to: 1
 23664                           ;incstack = 0
 23665  015DFC  0E00               	movlw	0
 23666  015DFE  0101               	movlb	1	; () banked
 23667  015E00  6F8F               	movwf	___awdiv@sign& (0+255),b
 23668                           
 23669                           ; BSR set to: 1
 23670  015E02  0101               	movlb	1	; () banked
 23671  015E04  AF8D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23672  015E06  D008               	goto	l11143
 23673                           
 23674                           ; BSR set to: 1
 23675  015E08  0101               	movlb	1	; () banked
 23676  015E0A  6D8C               	negf	___awdiv@divisor& (0+255),b
 23677  015E0C  1F8D               	comf	(___awdiv@divisor+1)& (0+255),f,b
 23678  015E0E  B0D8               	btfsc	status,0,c
 23679  015E10  2B8D               	incf	(___awdiv@divisor+1)& (0+255),f,b
 23680                           
 23681                           ; BSR set to: 1
 23682  015E12  0E01               	movlw	1
 23683  015E14  0101               	movlb	1	; () banked
 23684  015E16  6F8F               	movwf	___awdiv@sign& (0+255),b
 23685  015E18                     l11143:
 23686                           
 23687                           ; BSR set to: 1
 23688  015E18  0101               	movlb	1	; () banked
 23689  015E1A  AF8B               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 23690  015E1C  D008               	goto	l11149
 23691                           
 23692                           ; BSR set to: 1
 23693  015E1E  0101               	movlb	1	; () banked
 23694  015E20  6D8A               	negf	___awdiv@dividend& (0+255),b
 23695  015E22  1F8B               	comf	(___awdiv@dividend+1)& (0+255),f,b
 23696  015E24  B0D8               	btfsc	status,0,c
 23697  015E26  2B8B               	incf	(___awdiv@dividend+1)& (0+255),f,b
 23698                           
 23699                           ; BSR set to: 1
 23700  015E28  0E01               	movlw	1
 23701  015E2A  0101               	movlb	1	; () banked
 23702  015E2C  1B8F               	xorwf	___awdiv@sign& (0+255),f,b
 23703  015E2E                     l11149:
 23704                           
 23705                           ; BSR set to: 1
 23706  015E2E  0E00               	movlw	0
 23707  015E30  0101               	movlb	1	; () banked
 23708  015E32  6F91               	movwf	(___awdiv@quotient+1)& (0+255),b
 23709  015E34  0E00               	movlw	0
 23710  015E36  6F90               	movwf	___awdiv@quotient& (0+255),b
 23711                           
 23712                           ; BSR set to: 1
 23713  015E38  0101               	movlb	1	; () banked
 23714  015E3A  518C               	movf	___awdiv@divisor& (0+255),w,b
 23715  015E3C  0101               	movlb	1	; () banked
 23716  015E3E  118D               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 23717  015E40  B4D8               	btfsc	status,2,c
 23718  015E42  D02C               	goto	l11171
 23719                           
 23720                           ; BSR set to: 1
 23721  015E44  0E01               	movlw	1
 23722  015E46  0101               	movlb	1	; () banked
 23723  015E48  6F8E               	movwf	___awdiv@counter& (0+255),b
 23724  015E4A  D006               	goto	l11157
 23725  015E4C                     l11155:
 23726                           
 23727                           ; BSR set to: 1
 23728  015E4C  0101               	movlb	1	; () banked
 23729  015E4E  90D8               	bcf	status,0,c
 23730  015E50  378C               	rlcf	___awdiv@divisor& (0+255),f,b
 23731  015E52  378D               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 23732  015E54  0101               	movlb	1	; () banked
 23733  015E56  2B8E               	incf	___awdiv@counter& (0+255),f,b
 23734  015E58                     l11157:
 23735                           
 23736                           ; BSR set to: 1
 23737  015E58  0101               	movlb	1	; () banked
 23738  015E5A  AF8D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23739  015E5C  D7F7               	goto	l11155
 23740  015E5E                     l11159:
 23741                           
 23742                           ; BSR set to: 1
 23743  015E5E  0101               	movlb	1	; () banked
 23744  015E60  90D8               	bcf	status,0,c
 23745  015E62  3790               	rlcf	___awdiv@quotient& (0+255),f,b
 23746  015E64  3791               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 23747                           
 23748                           ; BSR set to: 1
 23749  015E66  0101               	movlb	1	; () banked
 23750  015E68  518C               	movf	___awdiv@divisor& (0+255),w,b
 23751  015E6A  0101               	movlb	1	; () banked
 23752  015E6C  5D8A               	subwf	___awdiv@dividend& (0+255),w,b
 23753  015E6E  0101               	movlb	1	; () banked
 23754  015E70  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23755  015E72  0101               	movlb	1	; () banked
 23756  015E74  598B               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 23757  015E76  A0D8               	btfss	status,0,c
 23758  015E78  D00A               	goto	l11167
 23759                           
 23760                           ; BSR set to: 1
 23761  015E7A  0101               	movlb	1	; () banked
 23762  015E7C  518C               	movf	___awdiv@divisor& (0+255),w,b
 23763  015E7E  0101               	movlb	1	; () banked
 23764  015E80  5F8A               	subwf	___awdiv@dividend& (0+255),f,b
 23765  015E82  0101               	movlb	1	; () banked
 23766  015E84  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23767  015E86  0101               	movlb	1	; () banked
 23768  015E88  5B8B               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 23769                           
 23770                           ; BSR set to: 1
 23771  015E8A  0101               	movlb	1	; () banked
 23772  015E8C  8190               	bsf	___awdiv@quotient& (0+255),0,b
 23773  015E8E                     l11167:
 23774                           
 23775                           ; BSR set to: 1
 23776  015E8E  0101               	movlb	1	; () banked
 23777  015E90  90D8               	bcf	status,0,c
 23778  015E92  338D               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 23779  015E94  338C               	rrcf	___awdiv@divisor& (0+255),f,b
 23780                           
 23781                           ; BSR set to: 1
 23782  015E96  0101               	movlb	1	; () banked
 23783  015E98  2F8E               	decfsz	___awdiv@counter& (0+255),f,b
 23784  015E9A  D7E1               	goto	l11159
 23785  015E9C                     l11171:
 23786                           
 23787                           ; BSR set to: 1
 23788  015E9C  0101               	movlb	1	; () banked
 23789  015E9E  518F               	movf	___awdiv@sign& (0+255),w,b
 23790  015EA0  0101               	movlb	1	; () banked
 23791  015EA2  B4D8               	btfsc	status,2,c
 23792  015EA4  D005               	goto	l11175
 23793                           
 23794                           ; BSR set to: 1
 23795  015EA6  0101               	movlb	1	; () banked
 23796  015EA8  6D90               	negf	___awdiv@quotient& (0+255),b
 23797  015EAA  1F91               	comf	(___awdiv@quotient+1)& (0+255),f,b
 23798  015EAC  B0D8               	btfsc	status,0,c
 23799  015EAE  2B91               	incf	(___awdiv@quotient+1)& (0+255),f,b
 23800  015EB0                     l11175:
 23801                           
 23802                           ; BSR set to: 1
 23803  015EB0  C190  F18A         	movff	___awdiv@quotient,?___awdiv
 23804  015EB4  C191  F18B         	movff	___awdiv@quotient+1,?___awdiv+1
 23805  015EB8  0012               	return	
 23806  015EBA                     __end_of___awdiv:
 23807                           	opt stack 0
 23808                           tblptru	equ	0xFF8
 23809                           tblptrh	equ	0xFF7
 23810                           tblptrl	equ	0xFF6
 23811                           tablat	equ	0xFF5
 23812                           prodh	equ	0xFF4
 23813                           prodl	equ	0xFF3
 23814                           intcon	equ	0xFF2
 23815                           intcon2	equ	0xFF1
 23816                           intcon3	equ	0xFF0
 23817                           indf0	equ	0xFEF
 23818                           postinc0	equ	0xFEE
 23819                           plusw0	equ	0xFEB
 23820                           fsr0h	equ	0xFEA
 23821                           fsr0l	equ	0xFE9
 23822                           wreg	equ	0xFE8
 23823                           indf1	equ	0xFE7
 23824                           postinc1	equ	0xFE6
 23825                           postdec1	equ	0xFE5
 23826                           fsr1h	equ	0xFE2
 23827                           fsr1l	equ	0xFE1
 23828                           indf2	equ	0xFDF
 23829                           postinc2	equ	0xFDE
 23830                           postdec2	equ	0xFDD
 23831                           plusw2	equ	0xFDB
 23832                           fsr2h	equ	0xFDA
 23833                           fsr2l	equ	0xFD9
 23834                           status	equ	0xFD8
 23835                           
 23836 ;; *************** function _AddNodeToNetworkTable *****************
 23837 ;; Defined at:
 23838 ;;		line 3372 in file "src/miwi/miwi_mesh.c"
 23839 ;; Parameters:    Size  Location     Type
 23840 ;;		None
 23841 ;; Auto vars:     Size  Location     Type
 23842 ;;  i               1    8[BANK1 ] unsigned char 
 23843 ;;  handle          1    9[BANK1 ] unsigned char 
 23844 ;; Return value:  Size  Location     Type
 23845 ;;                  1    wreg      unsigned char 
 23846 ;; Registers used:
 23847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23848 ;; Tracked objects:
 23849 ;;		On entry : 0/0
 23850 ;;		On exit  : 0/0
 23851 ;;		Unchanged: 0/0
 23852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23854 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23855 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23856 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23857 ;;Total ram usage:        4 bytes
 23858 ;; Hardware stack levels used:    1
 23859 ;; Hardware stack levels required when called:   10
 23860 ;; This function calls:
 23861 ;;		_SearchForLongAddress
 23862 ;;		_SearchForShortAddress
 23863 ;;		_findNextNetworkEntry
 23864 ;; This function is called by:
 23865 ;;		_MiWiTasks
 23866 ;; This function uses a non-reentrant model
 23867 ;;
 23868                           
 23869                           	psect	text75
 23870  01528C                     __ptext75:
 23871                           	opt stack 0
 23872  01528C                     _AddNodeToNetworkTable:
 23873                           	opt stack 15
 23874                           
 23875                           ;miwi_mesh.c: 3374: uint8_t handle = 0xFF;
 23876                           
 23877                           ; BSR set to: 1
 23878                           ;incstack = 0
 23879  01528C  0101               	movlb	1	; () banked
 23880  01528E  6993               	setf	AddNodeToNetworkTable@handle& (0+255),b
 23881                           
 23882                           ;miwi_mesh.c: 3376: if(tempNodeStatus.bits.longAddressValid)
 23883  015290  0100               	movlb	0	; () banked
 23884  015292  A5BD               	btfss	_tempNodeStatus& (0+255),2,b
 23885  015294  D003               	goto	l716
 23886                           
 23887                           ; BSR set to: 0
 23888                           ;miwi_mesh.c: 3377: {
 23889                           ;miwi_mesh.c: 3378: handle = SearchForLongAddress();
 23890  015296  EC71  F0AD         	call	_SearchForLongAddress	;wreg free
 23891  01529A  D005               	goto	L8
 23892  01529C                     l716:
 23893                           
 23894                           ; BSR set to: 0
 23895                           ;miwi_mesh.c: 3380: else
 23896                           ;miwi_mesh.c: 3381: {
 23897                           ;miwi_mesh.c: 3382: if(tempNodeStatus.bits.shortAddressValid)
 23898  01529C  0100               	movlb	0	; () banked
 23899  01529E  A7BD               	btfss	_tempNodeStatus& (0+255),3,b
 23900  0152A0  D004               	goto	l11819
 23901                           
 23902                           ; BSR set to: 0
 23903                           ;miwi_mesh.c: 3383: {
 23904                           ;miwi_mesh.c: 3384: handle = SearchForShortAddress();
 23905  0152A2  ECA1  F0B2         	call	_SearchForShortAddress	;wreg free
 23906  0152A6                     L8:
 23907  0152A6  0101               	movlb	1	; () banked
 23908  0152A8  6F93               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 23909  0152AA                     l11819:
 23910                           
 23911                           ;miwi_mesh.c: 3385: }
 23912                           ;miwi_mesh.c: 3386: }
 23913                           ;miwi_mesh.c: 3388: if(handle==0xFF)
 23914  0152AA  0101               	movlb	1	; () banked
 23915  0152AC  2993               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 23916  0152AE  A4D8               	btfss	status,2,c
 23917  0152B0  D004               	goto	l11823
 23918                           
 23919                           ; BSR set to: 1
 23920                           ;miwi_mesh.c: 3389: {
 23921                           ;miwi_mesh.c: 3390: handle = findNextNetworkEntry();
 23922  0152B2  EC8B  F0B6         	call	_findNextNetworkEntry	;wreg free
 23923  0152B6  0101               	movlb	1	; () banked
 23924  0152B8  6F93               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 23925  0152BA                     l11823:
 23926                           
 23927                           ; BSR set to: 1
 23928                           ;miwi_mesh.c: 3391: }
 23929                           ;miwi_mesh.c: 3393: if(handle != 0xFF)
 23930  0152BA  0101               	movlb	1	; () banked
 23931  0152BC  2993               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 23932  0152BE  B4D8               	btfsc	status,2,c
 23933  0152C0  D074               	goto	l11843
 23934                           
 23935                           ; BSR set to: 1
 23936                           ;miwi_mesh.c: 3394: {
 23937                           ;miwi_mesh.c: 3400: ConnectionTable[handle].status.Val = tempNodeStatus.Val;
 23938  0152C2  0101               	movlb	1	; () banked
 23939  0152C4  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23940  0152C6  0D09               	mullw	9
 23941  0152C8  0E08               	movlw	8
 23942  0152CA  26F3               	addwf	prodl,f,c
 23943  0152CC  0E00               	movlw	0
 23944  0152CE  22F4               	addwfc	prodh,f,c
 23945  0152D0  0E46               	movlw	low _ConnectionTable
 23946  0152D2  24F3               	addwf	prodl,w,c
 23947  0152D4  6ED9               	movwf	fsr2l,c
 23948  0152D6  0E02               	movlw	high _ConnectionTable
 23949  0152D8  20F4               	addwfc	prodh,w,c
 23950  0152DA  6EDA               	movwf	fsr2h,c
 23951  0152DC  C0BD  FFDF         	movff	_tempNodeStatus,indf2
 23952                           
 23953                           ; BSR set to: 1
 23954                           ;miwi_mesh.c: 3401: if(tempNodeStatus.bits.longAddressValid)
 23955  0152E0  0100               	movlb	0	; () banked
 23956  0152E2  A5BD               	btfss	_tempNodeStatus& (0+255),2,b
 23957  0152E4  D034               	goto	l721
 23958                           
 23959                           ; BSR set to: 0
 23960                           ;miwi_mesh.c: 3402: {
 23961                           ;miwi_mesh.c: 3403: uint8_t i;
 23962                           ;miwi_mesh.c: 3404: for(i = 0; i < 4; i++)
 23963  0152E6  0E00               	movlw	0
 23964  0152E8  0101               	movlb	1	; () banked
 23965  0152EA  6F92               	movwf	AddNodeToNetworkTable@i& (0+255),b
 23966  0152EC                     l11831:
 23967                           
 23968                           ; BSR set to: 1
 23969  0152EC  0E03               	movlw	3
 23970  0152EE  0101               	movlb	1	; () banked
 23971  0152F0  6592               	cpfsgt	AddNodeToNetworkTable@i& (0+255),b
 23972  0152F2  D001               	goto	l11835
 23973  0152F4  D02C               	goto	l721
 23974  0152F6                     l11835:
 23975                           
 23976                           ; BSR set to: 1
 23977                           ;miwi_mesh.c: 3405: {
 23978                           ;miwi_mesh.c: 3406: ConnectionTable[handle].Address[i] = tempLongAddress[i];
 23979  0152F6  0101               	movlb	1	; () banked
 23980  0152F8  5192               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 23981  0152FA  0D01               	mullw	1
 23982  0152FC  0E26               	movlw	low _tempLongAddress
 23983  0152FE  24F3               	addwf	prodl,w,c
 23984  015300  6ED9               	movwf	fsr2l,c
 23985  015302  0E01               	movlw	high _tempLongAddress
 23986  015304  20F4               	addwfc	prodh,w,c
 23987  015306  6EDA               	movwf	fsr2h,c
 23988  015308  0101               	movlb	1	; () banked
 23989  01530A  5192               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 23990  01530C  0D01               	mullw	1
 23991  01530E  0E04               	movlw	4
 23992  015310  26F3               	addwf	prodl,f,c
 23993  015312  0E00               	movlw	0
 23994  015314  22F4               	addwfc	prodh,f,c
 23995  015316  0E46               	movlw	low _ConnectionTable
 23996  015318  0101               	movlb	1	; () banked
 23997  01531A  6F90               	movwf	??_AddNodeToNetworkTable& (0+255),b
 23998  01531C  0E02               	movlw	high _ConnectionTable
 23999  01531E  0101               	movlb	1	; () banked
 24000  015320  6F91               	movwf	(??_AddNodeToNetworkTable+1)& (0+255),b
 24001  015322  50F3               	movf	prodl,w,c
 24002  015324  0101               	movlb	1	; () banked
 24003  015326  2790               	addwf	??_AddNodeToNetworkTable& (0+255),f,b
 24004  015328  50F4               	movf	prodh,w,c
 24005  01532A  0101               	movlb	1	; () banked
 24006  01532C  2391               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 24007  01532E  0101               	movlb	1	; () banked
 24008  015330  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 24009  015332  0D09               	mullw	9
 24010  015334  50F3               	movf	prodl,w,c
 24011  015336  0101               	movlb	1	; () banked
 24012  015338  2590               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 24013  01533A  6EE1               	movwf	fsr1l,c
 24014  01533C  50F4               	movf	prodh,w,c
 24015  01533E  0101               	movlb	1	; () banked
 24016  015340  2191               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 24017  015342  6EE2               	movwf	fsr1h,c
 24018  015344  CFDF FFE7          	movff	indf2,indf1
 24019                           
 24020                           ; BSR set to: 1
 24021  015348  0101               	movlb	1	; () banked
 24022  01534A  2B92               	incf	AddNodeToNetworkTable@i& (0+255),f,b
 24023  01534C  D7CF               	goto	l11831
 24024  01534E                     l721:
 24025                           
 24026                           ;miwi_mesh.c: 3407: }
 24027                           ;miwi_mesh.c: 3408: }
 24028                           ;miwi_mesh.c: 3410: if(tempNodeStatus.bits.shortAddressValid)
 24029  01534E  0100               	movlb	0	; () banked
 24030  015350  A7BD               	btfss	_tempNodeStatus& (0+255),3,b
 24031  015352  D011               	goto	l724
 24032                           
 24033                           ; BSR set to: 0
 24034                           ;miwi_mesh.c: 3411: {
 24035                           ;miwi_mesh.c: 3412: ConnectionTable[handle].AltAddress.Val = tempShortAddress.Val;
 24036  015354  0101               	movlb	1	; () banked
 24037  015356  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 24038  015358  0D09               	mullw	9
 24039  01535A  0E02               	movlw	2
 24040  01535C  26F3               	addwf	prodl,f,c
 24041  01535E  0E00               	movlw	0
 24042  015360  22F4               	addwfc	prodh,f,c
 24043  015362  0E46               	movlw	low _ConnectionTable
 24044  015364  24F3               	addwf	prodl,w,c
 24045  015366  6ED9               	movwf	fsr2l,c
 24046  015368  0E02               	movlw	high _ConnectionTable
 24047  01536A  20F4               	addwfc	prodh,w,c
 24048  01536C  6EDA               	movwf	fsr2h,c
 24049  01536E  C187  FFDE         	movff	_tempShortAddress,postinc2
 24050  015372  C188  FFDD         	movff	_tempShortAddress+1,postdec2
 24051  015376                     l724:
 24052                           
 24053                           ;miwi_mesh.c: 3413: }
 24054                           ;miwi_mesh.c: 3415: ConnectionTable[handle].PANID.Val = tempPANID.Val;
 24055  015376  0101               	movlb	1	; () banked
 24056  015378  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 24057  01537A  0D09               	mullw	9
 24058  01537C  0E46               	movlw	low _ConnectionTable
 24059  01537E  24F3               	addwf	prodl,w,c
 24060  015380  6ED9               	movwf	fsr2l,c
 24061  015382  0E02               	movlw	high _ConnectionTable
 24062  015384  20F4               	addwfc	prodh,w,c
 24063  015386  6EDA               	movwf	fsr2h,c
 24064  015388  C13C  FFDE         	movff	_tempPANID,postinc2
 24065  01538C  C13D  FFDD         	movff	_tempPANID+1,postdec2
 24066                           
 24067                           ;miwi_mesh.c: 3417: IncomingFrameCounter[handle].Val = 0;
 24068  015390  0101               	movlb	1	; () banked
 24069  015392  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 24070  015394  0D04               	mullw	4
 24071  015396  0E00               	movlw	low _IncomingFrameCounter
 24072  015398  24F3               	addwf	prodl,w,c
 24073  01539A  6ED9               	movwf	fsr2l,c
 24074  01539C  0E02               	movlw	high _IncomingFrameCounter
 24075  01539E  20F4               	addwfc	prodh,w,c
 24076  0153A0  6EDA               	movwf	fsr2h,c
 24077  0153A2  6ADE               	clrf	postinc2,c
 24078  0153A4  6ADE               	clrf	postinc2,c
 24079  0153A6  6ADE               	clrf	postinc2,c
 24080  0153A8  6ADD               	clrf	postdec2,c
 24081  0153AA                     l11843:
 24082                           
 24083                           ; BSR set to: 1
 24084                           ;miwi_mesh.c: 3419: }
 24085                           ;miwi_mesh.c: 3421: return handle;
 24086  0153AA  0101               	movlb	1	; () banked
 24087  0153AC  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 24088  0153AE  0012               	return	
 24089  0153B0                     __end_of_AddNodeToNetworkTable:
 24090                           	opt stack 0
 24091                           tblptru	equ	0xFF8
 24092                           tblptrh	equ	0xFF7
 24093                           tblptrl	equ	0xFF6
 24094                           tablat	equ	0xFF5
 24095                           prodh	equ	0xFF4
 24096                           prodl	equ	0xFF3
 24097                           intcon	equ	0xFF2
 24098                           intcon2	equ	0xFF1
 24099                           intcon3	equ	0xFF0
 24100                           indf0	equ	0xFEF
 24101                           postinc0	equ	0xFEE
 24102                           plusw0	equ	0xFEB
 24103                           fsr0h	equ	0xFEA
 24104                           fsr0l	equ	0xFE9
 24105                           wreg	equ	0xFE8
 24106                           indf1	equ	0xFE7
 24107                           postinc1	equ	0xFE6
 24108                           postdec1	equ	0xFE5
 24109                           fsr1h	equ	0xFE2
 24110                           fsr1l	equ	0xFE1
 24111                           indf2	equ	0xFDF
 24112                           postinc2	equ	0xFDE
 24113                           postdec2	equ	0xFDD
 24114                           plusw2	equ	0xFDB
 24115                           fsr2h	equ	0xFDA
 24116                           fsr2l	equ	0xFD9
 24117                           status	equ	0xFD8
 24118                           
 24119 ;; *************** function _findNextNetworkEntry *****************
 24120 ;; Defined at:
 24121 ;;		line 2583 in file "src/miwi/miwi_mesh.c"
 24122 ;; Parameters:    Size  Location     Type
 24123 ;;		None
 24124 ;; Auto vars:     Size  Location     Type
 24125 ;;  i               1    0[BANK1 ] unsigned char 
 24126 ;; Return value:  Size  Location     Type
 24127 ;;                  1    wreg      unsigned char 
 24128 ;; Registers used:
 24129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24130 ;; Tracked objects:
 24131 ;;		On entry : 0/0
 24132 ;;		On exit  : 0/0
 24133 ;;		Unchanged: 0/0
 24134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24136 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24138 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24139 ;;Total ram usage:        1 bytes
 24140 ;; Hardware stack levels used:    1
 24141 ;; Hardware stack levels required when called:    9
 24142 ;; This function calls:
 24143 ;;		Nothing
 24144 ;; This function is called by:
 24145 ;;		_AddNodeToNetworkTable
 24146 ;;		_MiApp_EstablishConnection
 24147 ;; This function uses a non-reentrant model
 24148 ;;
 24149                           
 24150                           	psect	text76
 24151  016D16                     __ptext76:
 24152                           	opt stack 0
 24153  016D16                     _findNextNetworkEntry:
 24154                           	opt stack 15
 24155                           
 24156                           ;miwi_mesh.c: 2585: uint8_t i;
 24157                           ;miwi_mesh.c: 2587: for(i=0;i<10;i++)
 24158                           
 24159                           ; BSR set to: 1
 24160                           ;incstack = 0
 24161  016D16  0E00               	movlw	0
 24162  016D18  0101               	movlb	1	; () banked
 24163  016D1A  6F8A               	movwf	findNextNetworkEntry@i& (0+255),b
 24164  016D1C                     l11567:
 24165                           
 24166                           ; BSR set to: 1
 24167  016D1C  0E09               	movlw	9
 24168  016D1E  0101               	movlb	1	; () banked
 24169  016D20  658A               	cpfsgt	findNextNetworkEntry@i& (0+255),b
 24170  016D22  D001               	goto	l11571
 24171  016D24  D016               	goto	l11581
 24172  016D26                     l11571:
 24173                           
 24174                           ; BSR set to: 1
 24175                           ;miwi_mesh.c: 2588: {
 24176                           ;miwi_mesh.c: 2589: if(ConnectionTable[i].status.bits.isValid == 0)
 24177  016D26  0101               	movlb	1	; () banked
 24178  016D28  518A               	movf	findNextNetworkEntry@i& (0+255),w,b
 24179  016D2A  0D09               	mullw	9
 24180  016D2C  0E08               	movlw	8
 24181  016D2E  26F3               	addwf	prodl,f,c
 24182  016D30  0E00               	movlw	0
 24183  016D32  22F4               	addwfc	prodh,f,c
 24184  016D34  0E46               	movlw	low _ConnectionTable
 24185  016D36  24F3               	addwf	prodl,w,c
 24186  016D38  6ED9               	movwf	fsr2l,c
 24187  016D3A  0E02               	movlw	high _ConnectionTable
 24188  016D3C  20F4               	addwfc	prodh,w,c
 24189  016D3E  6EDA               	movwf	fsr2h,c
 24190  016D40  0102               	movlb	2	; () banked
 24191  016D42  BEDF               	btfsc	indf2,7,c
 24192  016D44  D003               	goto	l11577
 24193                           
 24194                           ; BSR set to: 2
 24195                           ;miwi_mesh.c: 2590: {
 24196                           ;miwi_mesh.c: 2591: return i;
 24197  016D46  0101               	movlb	1	; () banked
 24198  016D48  518A               	movf	findNextNetworkEntry@i& (0+255),w,b
 24199                           
 24200                           ; BSR set to: 1
 24201  016D4A  0012               	return	
 24202  016D4C                     l11577:
 24203  016D4C  0101               	movlb	1	; () banked
 24204  016D4E  2B8A               	incf	findNextNetworkEntry@i& (0+255),f,b
 24205  016D50  D7E5               	goto	l11567
 24206  016D52                     l11581:
 24207                           
 24208                           ; BSR set to: 1
 24209                           ;miwi_mesh.c: 2592: }
 24210                           ;miwi_mesh.c: 2593: }
 24211                           ;miwi_mesh.c: 2594: return 0xFF;
 24212  016D52  0EFF               	movlw	255
 24213  016D54  0012               	return	
 24214  016D56                     __end_of_findNextNetworkEntry:
 24215                           	opt stack 0
 24216                           tblptru	equ	0xFF8
 24217                           tblptrh	equ	0xFF7
 24218                           tblptrl	equ	0xFF6
 24219                           tablat	equ	0xFF5
 24220                           prodh	equ	0xFF4
 24221                           prodl	equ	0xFF3
 24222                           intcon	equ	0xFF2
 24223                           intcon2	equ	0xFF1
 24224                           intcon3	equ	0xFF0
 24225                           indf0	equ	0xFEF
 24226                           postinc0	equ	0xFEE
 24227                           plusw0	equ	0xFEB
 24228                           fsr0h	equ	0xFEA
 24229                           fsr0l	equ	0xFE9
 24230                           wreg	equ	0xFE8
 24231                           indf1	equ	0xFE7
 24232                           postinc1	equ	0xFE6
 24233                           postdec1	equ	0xFE5
 24234                           fsr1h	equ	0xFE2
 24235                           fsr1l	equ	0xFE1
 24236                           indf2	equ	0xFDF
 24237                           postinc2	equ	0xFDE
 24238                           postdec2	equ	0xFDD
 24239                           plusw2	equ	0xFDB
 24240                           fsr2h	equ	0xFDA
 24241                           fsr2l	equ	0xFD9
 24242                           status	equ	0xFD8
 24243                           
 24244 ;; *************** function _SearchForShortAddress *****************
 24245 ;; Defined at:
 24246 ;;		line 3245 in file "src/miwi/miwi_mesh.c"
 24247 ;; Parameters:    Size  Location     Type
 24248 ;;		None
 24249 ;; Auto vars:     Size  Location     Type
 24250 ;;  i               1    2[BANK1 ] unsigned char 
 24251 ;; Return value:  Size  Location     Type
 24252 ;;                  1    wreg      unsigned char 
 24253 ;; Registers used:
 24254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24255 ;; Tracked objects:
 24256 ;;		On entry : 0/0
 24257 ;;		On exit  : 0/0
 24258 ;;		Unchanged: 0/0
 24259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24261 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24262 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24263 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24264 ;;Total ram usage:        3 bytes
 24265 ;; Hardware stack levels used:    1
 24266 ;; Hardware stack levels required when called:    9
 24267 ;; This function calls:
 24268 ;;		Nothing
 24269 ;; This function is called by:
 24270 ;;		_MiWiTasks
 24271 ;;		_AddNodeToNetworkTable
 24272 ;; This function uses a non-reentrant model
 24273 ;;
 24274                           
 24275                           	psect	text77
 24276  016542                     __ptext77:
 24277                           	opt stack 0
 24278  016542                     _SearchForShortAddress:
 24279                           	opt stack 16
 24280                           
 24281                           ;miwi_mesh.c: 3247: uint8_t i;
 24282                           ;miwi_mesh.c: 3249: for(i=0;i<10;i++)
 24283                           
 24284                           ; BSR set to: 1
 24285                           ;incstack = 0
 24286  016542  0E00               	movlw	0
 24287  016544  0101               	movlb	1	; () banked
 24288  016546  6F8C               	movwf	SearchForShortAddress@i& (0+255),b
 24289  016548                     l11507:
 24290                           
 24291                           ; BSR set to: 1
 24292  016548  0E09               	movlw	9
 24293  01654A  0101               	movlb	1	; () banked
 24294  01654C  658C               	cpfsgt	SearchForShortAddress@i& (0+255),b
 24295  01654E  D001               	goto	l11511
 24296  016550  D03C               	goto	l11525
 24297  016552                     l11511:
 24298                           
 24299                           ; BSR set to: 1
 24300                           ;miwi_mesh.c: 3250: {
 24301                           ;miwi_mesh.c: 3251: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.shortAddressValid)
 24302  016552  0101               	movlb	1	; () banked
 24303  016554  518C               	movf	SearchForShortAddress@i& (0+255),w,b
 24304  016556  0D09               	mullw	9
 24305  016558  0E08               	movlw	8
 24306  01655A  26F3               	addwf	prodl,f,c
 24307  01655C  0E00               	movlw	0
 24308  01655E  22F4               	addwfc	prodh,f,c
 24309  016560  0E46               	movlw	low _ConnectionTable
 24310  016562  24F3               	addwf	prodl,w,c
 24311  016564  6ED9               	movwf	fsr2l,c
 24312  016566  0E02               	movlw	high _ConnectionTable
 24313  016568  20F4               	addwfc	prodh,w,c
 24314  01656A  6EDA               	movwf	fsr2h,c
 24315  01656C  0102               	movlb	2	; () banked
 24316  01656E  AEDF               	btfss	indf2,7,c
 24317  016570  D029               	goto	l11521
 24318                           
 24319                           ; BSR set to: 2
 24320  016572  0101               	movlb	1	; () banked
 24321  016574  518C               	movf	SearchForShortAddress@i& (0+255),w,b
 24322  016576  0D09               	mullw	9
 24323  016578  0E08               	movlw	8
 24324  01657A  26F3               	addwf	prodl,f,c
 24325  01657C  0E00               	movlw	0
 24326  01657E  22F4               	addwfc	prodh,f,c
 24327  016580  0E46               	movlw	low _ConnectionTable
 24328  016582  24F3               	addwf	prodl,w,c
 24329  016584  6ED9               	movwf	fsr2l,c
 24330  016586  0E02               	movlw	high _ConnectionTable
 24331  016588  20F4               	addwfc	prodh,w,c
 24332  01658A  6EDA               	movwf	fsr2h,c
 24333  01658C  0102               	movlb	2	; () banked
 24334  01658E  A6DF               	btfss	indf2,3,c
 24335  016590  D019               	goto	l11521
 24336                           
 24337                           ; BSR set to: 2
 24338                           ;miwi_mesh.c: 3252: {
 24339                           ;miwi_mesh.c: 3253: if(ConnectionTable[i].AltAddress.Val == tempShortAddress.Val)
 24340  016592  0101               	movlb	1	; () banked
 24341  016594  518C               	movf	SearchForShortAddress@i& (0+255),w,b
 24342  016596  0D09               	mullw	9
 24343  016598  0E02               	movlw	2
 24344  01659A  26F3               	addwf	prodl,f,c
 24345  01659C  0E00               	movlw	0
 24346  01659E  22F4               	addwfc	prodh,f,c
 24347  0165A0  0E46               	movlw	low _ConnectionTable
 24348  0165A2  24F3               	addwf	prodl,w,c
 24349  0165A4  6ED9               	movwf	fsr2l,c
 24350  0165A6  0E02               	movlw	high _ConnectionTable
 24351  0165A8  20F4               	addwfc	prodh,w,c
 24352  0165AA  6EDA               	movwf	fsr2h,c
 24353  0165AC  0101               	movlb	1	; () banked
 24354  0165AE  5187               	movf	_tempShortAddress& (0+255),w,b
 24355  0165B0  18DE               	xorwf	postinc2,w,c
 24356  0165B2  E108               	bnz	l11521
 24357  0165B4  0101               	movlb	1	; () banked
 24358  0165B6  5188               	movf	(_tempShortAddress+1)& (0+255),w,b
 24359  0165B8  18DE               	xorwf	postinc2,w,c
 24360  0165BA  A4D8               	btfss	status,2,c
 24361  0165BC  D003               	goto	l11521
 24362                           
 24363                           ; BSR set to: 1
 24364                           ;miwi_mesh.c: 3254: {
 24365                           ;miwi_mesh.c: 3255: return i;
 24366  0165BE  0101               	movlb	1	; () banked
 24367  0165C0  518C               	movf	SearchForShortAddress@i& (0+255),w,b
 24368                           
 24369                           ; BSR set to: 1
 24370  0165C2  0012               	return	
 24371  0165C4                     l11521:
 24372  0165C4  0101               	movlb	1	; () banked
 24373  0165C6  2B8C               	incf	SearchForShortAddress@i& (0+255),f,b
 24374  0165C8  D7BF               	goto	l11507
 24375  0165CA                     l11525:
 24376                           
 24377                           ; BSR set to: 1
 24378                           ;miwi_mesh.c: 3256: }
 24379                           ;miwi_mesh.c: 3257: }
 24380                           ;miwi_mesh.c: 3258: }
 24381                           ;miwi_mesh.c: 3259: return 0xFF;
 24382  0165CA  0EFF               	movlw	255
 24383  0165CC  0012               	return	
 24384  0165CE                     __end_of_SearchForShortAddress:
 24385                           	opt stack 0
 24386                           tblptru	equ	0xFF8
 24387                           tblptrh	equ	0xFF7
 24388                           tblptrl	equ	0xFF6
 24389                           tablat	equ	0xFF5
 24390                           prodh	equ	0xFF4
 24391                           prodl	equ	0xFF3
 24392                           intcon	equ	0xFF2
 24393                           intcon2	equ	0xFF1
 24394                           intcon3	equ	0xFF0
 24395                           indf0	equ	0xFEF
 24396                           postinc0	equ	0xFEE
 24397                           plusw0	equ	0xFEB
 24398                           fsr0h	equ	0xFEA
 24399                           fsr0l	equ	0xFE9
 24400                           wreg	equ	0xFE8
 24401                           indf1	equ	0xFE7
 24402                           postinc1	equ	0xFE6
 24403                           postdec1	equ	0xFE5
 24404                           fsr1h	equ	0xFE2
 24405                           fsr1l	equ	0xFE1
 24406                           indf2	equ	0xFDF
 24407                           postinc2	equ	0xFDE
 24408                           postdec2	equ	0xFDD
 24409                           plusw2	equ	0xFDB
 24410                           fsr2h	equ	0xFDA
 24411                           fsr2l	equ	0xFD9
 24412                           status	equ	0xFD8
 24413                           
 24414 ;; *************** function _SearchForLongAddress *****************
 24415 ;; Defined at:
 24416 ;;		line 3326 in file "src/miwi/miwi_mesh.c"
 24417 ;; Parameters:    Size  Location     Type
 24418 ;;		None
 24419 ;; Auto vars:     Size  Location     Type
 24420 ;;  i               1    5[BANK1 ] unsigned char 
 24421 ;;  j               1    4[BANK1 ] unsigned char 
 24422 ;; Return value:  Size  Location     Type
 24423 ;;                  1    wreg      unsigned char 
 24424 ;; Registers used:
 24425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24426 ;; Tracked objects:
 24427 ;;		On entry : 0/0
 24428 ;;		On exit  : 0/0
 24429 ;;		Unchanged: 0/0
 24430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24432 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24433 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24434 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24435 ;;Total ram usage:        6 bytes
 24436 ;; Hardware stack levels used:    1
 24437 ;; Hardware stack levels required when called:    9
 24438 ;; This function calls:
 24439 ;;		Nothing
 24440 ;; This function is called by:
 24441 ;;		_MiWiTasks
 24442 ;;		_AddNodeToNetworkTable
 24443 ;;		_MiApp_EstablishConnection
 24444 ;;		_MiApp_UnicastAddress
 24445 ;; This function uses a non-reentrant model
 24446 ;;
 24447                           
 24448                           	psect	text78
 24449  015AE2                     __ptext78:
 24450                           	opt stack 0
 24451  015AE2                     _SearchForLongAddress:
 24452                           	opt stack 18
 24453                           
 24454                           ;miwi_mesh.c: 3328: uint8_t i,j;
 24455                           ;miwi_mesh.c: 3330: for(i=0;i<10;i++)
 24456                           
 24457                           ; BSR set to: 1
 24458                           ;incstack = 0
 24459  015AE2  0E00               	movlw	0
 24460  015AE4  0101               	movlb	1	; () banked
 24461  015AE6  6F8F               	movwf	SearchForLongAddress@i& (0+255),b
 24462  015AE8                     l11531:
 24463                           
 24464                           ; BSR set to: 1
 24465  015AE8  0E09               	movlw	9
 24466  015AEA  0101               	movlb	1	; () banked
 24467  015AEC  658F               	cpfsgt	SearchForLongAddress@i& (0+255),b
 24468  015AEE  D001               	goto	l11535
 24469  015AF0  D05C               	goto	l11561
 24470  015AF2                     l11535:
 24471                           
 24472                           ; BSR set to: 1
 24473                           ;miwi_mesh.c: 3331: {
 24474                           ;miwi_mesh.c: 3332: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.longAddressValid)
 24475  015AF2  0101               	movlb	1	; () banked
 24476  015AF4  518F               	movf	SearchForLongAddress@i& (0+255),w,b
 24477  015AF6  0D09               	mullw	9
 24478  015AF8  0E08               	movlw	8
 24479  015AFA  26F3               	addwf	prodl,f,c
 24480  015AFC  0E00               	movlw	0
 24481  015AFE  22F4               	addwfc	prodh,f,c
 24482  015B00  0E46               	movlw	low _ConnectionTable
 24483  015B02  24F3               	addwf	prodl,w,c
 24484  015B04  6ED9               	movwf	fsr2l,c
 24485  015B06  0E02               	movlw	high _ConnectionTable
 24486  015B08  20F4               	addwfc	prodh,w,c
 24487  015B0A  6EDA               	movwf	fsr2h,c
 24488  015B0C  0102               	movlb	2	; () banked
 24489  015B0E  AEDF               	btfss	indf2,7,c
 24490  015B10  D049               	goto	l11557
 24491                           
 24492                           ; BSR set to: 2
 24493  015B12  0101               	movlb	1	; () banked
 24494  015B14  518F               	movf	SearchForLongAddress@i& (0+255),w,b
 24495  015B16  0D09               	mullw	9
 24496  015B18  0E08               	movlw	8
 24497  015B1A  26F3               	addwf	prodl,f,c
 24498  015B1C  0E00               	movlw	0
 24499  015B1E  22F4               	addwfc	prodh,f,c
 24500  015B20  0E46               	movlw	low _ConnectionTable
 24501  015B22  24F3               	addwf	prodl,w,c
 24502  015B24  6ED9               	movwf	fsr2l,c
 24503  015B26  0E02               	movlw	high _ConnectionTable
 24504  015B28  20F4               	addwfc	prodh,w,c
 24505  015B2A  6EDA               	movwf	fsr2h,c
 24506  015B2C  0102               	movlb	2	; () banked
 24507  015B2E  A4DF               	btfss	indf2,2,c
 24508  015B30  D039               	goto	l11557
 24509                           
 24510                           ; BSR set to: 2
 24511                           ;miwi_mesh.c: 3333: {
 24512                           ;miwi_mesh.c: 3334: for(j=0;j<4;j++)
 24513  015B32  0E00               	movlw	0
 24514  015B34  0101               	movlb	1	; () banked
 24515  015B36  6F8E               	movwf	SearchForLongAddress@j& (0+255),b
 24516  015B38                     l11541:
 24517                           
 24518                           ; BSR set to: 1
 24519  015B38  0E03               	movlw	3
 24520  015B3A  0101               	movlb	1	; () banked
 24521  015B3C  658E               	cpfsgt	SearchForLongAddress@j& (0+255),b
 24522  015B3E  D001               	goto	l11545
 24523  015B40  D02E               	goto	l11553
 24524  015B42                     l11545:
 24525                           
 24526                           ; BSR set to: 1
 24527                           ;miwi_mesh.c: 3335: {
 24528                           ;miwi_mesh.c: 3336: if(ConnectionTable[i].Address[j] != tempLongAddress[j])
 24529  015B42  0101               	movlb	1	; () banked
 24530  015B44  518E               	movf	SearchForLongAddress@j& (0+255),w,b
 24531  015B46  0D01               	mullw	1
 24532  015B48  0E26               	movlw	low _tempLongAddress
 24533  015B4A  24F3               	addwf	prodl,w,c
 24534  015B4C  6ED9               	movwf	fsr2l,c
 24535  015B4E  0E01               	movlw	high _tempLongAddress
 24536  015B50  20F4               	addwfc	prodh,w,c
 24537  015B52  6EDA               	movwf	fsr2h,c
 24538  015B54  0101               	movlb	1	; () banked
 24539  015B56  518E               	movf	SearchForLongAddress@j& (0+255),w,b
 24540  015B58  0D01               	mullw	1
 24541  015B5A  0E04               	movlw	4
 24542  015B5C  26F3               	addwf	prodl,f,c
 24543  015B5E  0E00               	movlw	0
 24544  015B60  22F4               	addwfc	prodh,f,c
 24545  015B62  0E46               	movlw	low _ConnectionTable
 24546  015B64  0101               	movlb	1	; () banked
 24547  015B66  6F8B               	movwf	(??_SearchForLongAddress+1)& (0+255),b
 24548  015B68  0E02               	movlw	high _ConnectionTable
 24549  015B6A  0101               	movlb	1	; () banked
 24550  015B6C  6F8C               	movwf	(??_SearchForLongAddress+2)& (0+255),b
 24551  015B6E  50F3               	movf	prodl,w,c
 24552  015B70  0101               	movlb	1	; () banked
 24553  015B72  278B               	addwf	(??_SearchForLongAddress+1)& (0+255),f,b
 24554  015B74  50F4               	movf	prodh,w,c
 24555  015B76  0101               	movlb	1	; () banked
 24556  015B78  238C               	addwfc	(??_SearchForLongAddress+2)& (0+255),f,b
 24557  015B7A  0101               	movlb	1	; () banked
 24558  015B7C  518F               	movf	SearchForLongAddress@i& (0+255),w,b
 24559  015B7E  0D09               	mullw	9
 24560  015B80  50F3               	movf	prodl,w,c
 24561  015B82  0101               	movlb	1	; () banked
 24562  015B84  258B               	addwf	(??_SearchForLongAddress+1)& (0+255),w,b
 24563  015B86  6EE1               	movwf	fsr1l,c
 24564  015B88  50F4               	movf	prodh,w,c
 24565  015B8A  0101               	movlb	1	; () banked
 24566  015B8C  218C               	addwfc	(??_SearchForLongAddress+2)& (0+255),w,b
 24567  015B8E  6EE2               	movwf	fsr1h,c
 24568  015B90  50DE               	movf	postinc2,w,c
 24569  015B92  18E6               	xorwf	postinc1,w,c
 24570  015B94  A4D8               	btfss	status,2,c
 24571  015B96  D006               	goto	l11557
 24572                           
 24573                           ; BSR set to: 1
 24574                           
 24575                           ; BSR set to: 1
 24576                           
 24577                           ; BSR set to: 1
 24578                           ;miwi_mesh.c: 3337: {
 24579                           ;miwi_mesh.c: 3338: goto EndOfSearchLoop;
 24580  015B98  0101               	movlb	1	; () banked
 24581  015B9A  2B8E               	incf	SearchForLongAddress@j& (0+255),f,b
 24582  015B9C  D7CD               	goto	l11541
 24583  015B9E                     l11553:
 24584                           
 24585                           ; BSR set to: 1
 24586                           ;miwi_mesh.c: 3339: }
 24587                           ;miwi_mesh.c: 3340: }
 24588                           ;miwi_mesh.c: 3341: return i;
 24589  015B9E  0101               	movlb	1	; () banked
 24590  015BA0  518F               	movf	SearchForLongAddress@i& (0+255),w,b
 24591                           
 24592                           ; BSR set to: 1
 24593  015BA2  0012               	return	
 24594  015BA4                     l11557:
 24595                           
 24596                           ;miwi_mesh.c: 3344: ;
 24597  015BA4  0101               	movlb	1	; () banked
 24598  015BA6  2B8F               	incf	SearchForLongAddress@i& (0+255),f,b
 24599  015BA8  D79F               	goto	l11531
 24600  015BAA                     l11561:
 24601                           
 24602                           ; BSR set to: 1
 24603                           ;miwi_mesh.c: 3345: }
 24604                           ;miwi_mesh.c: 3346: return 0xFF;
 24605  015BAA  0EFF               	movlw	255
 24606  015BAC  0012               	return	
 24607  015BAE                     __end_of_SearchForLongAddress:
 24608                           	opt stack 0
 24609                           tblptru	equ	0xFF8
 24610                           tblptrh	equ	0xFF7
 24611                           tblptrl	equ	0xFF6
 24612                           tablat	equ	0xFF5
 24613                           prodh	equ	0xFF4
 24614                           prodl	equ	0xFF3
 24615                           intcon	equ	0xFF2
 24616                           intcon2	equ	0xFF1
 24617                           intcon3	equ	0xFF0
 24618                           indf0	equ	0xFEF
 24619                           postinc0	equ	0xFEE
 24620                           plusw0	equ	0xFEB
 24621                           fsr0h	equ	0xFEA
 24622                           fsr0l	equ	0xFE9
 24623                           wreg	equ	0xFE8
 24624                           indf1	equ	0xFE7
 24625                           postinc1	equ	0xFE6
 24626                           postdec1	equ	0xFE5
 24627                           fsr1h	equ	0xFE2
 24628                           fsr1l	equ	0xFE1
 24629                           indf2	equ	0xFDF
 24630                           postinc2	equ	0xFDE
 24631                           postdec2	equ	0xFDD
 24632                           plusw2	equ	0xFDB
 24633                           fsr2h	equ	0xFDA
 24634                           fsr2l	equ	0xFD9
 24635                           status	equ	0xFD8
 24636                           
 24637 ;; *************** function _MiApp_DiscardMessage *****************
 24638 ;; Defined at:
 24639 ;;		line 4242 in file "src/miwi/miwi_mesh.c"
 24640 ;; Parameters:    Size  Location     Type
 24641 ;;		None
 24642 ;; Auto vars:     Size  Location     Type
 24643 ;;		None
 24644 ;; Return value:  Size  Location     Type
 24645 ;;		None               void
 24646 ;; Registers used:
 24647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24648 ;; Tracked objects:
 24649 ;;		On entry : 0/0
 24650 ;;		On exit  : 0/0
 24651 ;;		Unchanged: 0/0
 24652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24657 ;;Total ram usage:        0 bytes
 24658 ;; Hardware stack levels used:    1
 24659 ;; Hardware stack levels required when called:   10
 24660 ;; This function calls:
 24661 ;;		_MiMAC_DiscardPacket
 24662 ;; This function is called by:
 24663 ;;		_MiApp_SearchConnection
 24664 ;;		_MiApp_EstablishConnection
 24665 ;;		_MiApp_UnicastAddress
 24666 ;;		_main
 24667 ;;		_process_update_answer
 24668 ;;		_do_NETWORK_REGISTER
 24669 ;;		_do_POWER_TEST
 24670 ;;		_do_UPDATE
 24671 ;;		_MiApp_UnicastConnection
 24672 ;;		_do_PING
 24673 ;; This function uses a non-reentrant model
 24674 ;;
 24675                           
 24676                           	psect	text79
 24677  016FE0                     __ptext79:
 24678                           	opt stack 0
 24679  016FE0                     _MiApp_DiscardMessage:
 24680                           	opt stack 17
 24681                           
 24682                           ;miwi_mesh.c: 4244: MiWiStateMachine.bits.RxHasUserData = 0;
 24683                           
 24684                           ; BSR set to: 1
 24685                           ;incstack = 0
 24686  016FE0  0101               	movlb	1	; () banked
 24687  016FE2  9538               	bcf	_MiWiStateMachine& (0+255),2,b
 24688                           
 24689                           ; BSR set to: 1
 24690                           ;miwi_mesh.c: 4245: MiMAC_DiscardPacket();
 24691  016FE4  EC56  F0B7         	call	_MiMAC_DiscardPacket	;wreg free
 24692  016FE8  0012               	return		;funcret
 24693  016FEA                     __end_of_MiApp_DiscardMessage:
 24694                           	opt stack 0
 24695                           tblptru	equ	0xFF8
 24696                           tblptrh	equ	0xFF7
 24697                           tblptrl	equ	0xFF6
 24698                           tablat	equ	0xFF5
 24699                           prodh	equ	0xFF4
 24700                           prodl	equ	0xFF3
 24701                           intcon	equ	0xFF2
 24702                           intcon2	equ	0xFF1
 24703                           intcon3	equ	0xFF0
 24704                           indf0	equ	0xFEF
 24705                           postinc0	equ	0xFEE
 24706                           plusw0	equ	0xFEB
 24707                           fsr0h	equ	0xFEA
 24708                           fsr0l	equ	0xFE9
 24709                           wreg	equ	0xFE8
 24710                           indf1	equ	0xFE7
 24711                           postinc1	equ	0xFE6
 24712                           postdec1	equ	0xFE5
 24713                           fsr1h	equ	0xFE2
 24714                           fsr1l	equ	0xFE1
 24715                           indf2	equ	0xFDF
 24716                           postinc2	equ	0xFDE
 24717                           postdec2	equ	0xFDD
 24718                           plusw2	equ	0xFDB
 24719                           fsr2h	equ	0xFDA
 24720                           fsr2l	equ	0xFD9
 24721                           status	equ	0xFD8
 24722                           
 24723 ;; *************** function _MiMAC_DiscardPacket *****************
 24724 ;; Defined at:
 24725 ;;		line 1057 in file "src/miwi/drv_mrf_miwi_89xa.c"
 24726 ;; Parameters:    Size  Location     Type
 24727 ;;		None
 24728 ;; Auto vars:     Size  Location     Type
 24729 ;;		None
 24730 ;; Return value:  Size  Location     Type
 24731 ;;		None               void
 24732 ;; Registers used:
 24733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24734 ;; Tracked objects:
 24735 ;;		On entry : 0/0
 24736 ;;		On exit  : 0/0
 24737 ;;		Unchanged: 0/0
 24738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24743 ;;Total ram usage:        0 bytes
 24744 ;; Hardware stack levels used:    1
 24745 ;; Hardware stack levels required when called:    9
 24746 ;; This function calls:
 24747 ;;		Nothing
 24748 ;; This function is called by:
 24749 ;;		_MiWiTasks
 24750 ;;		_MiApp_DiscardMessage
 24751 ;; This function uses a non-reentrant model
 24752 ;;
 24753                           
 24754                           	psect	text80
 24755  016EAC                     __ptext80:
 24756                           	opt stack 0
 24757  016EAC                     _MiMAC_DiscardPacket:
 24758                           	opt stack 16
 24759                           
 24760                           ;drv_mrf_miwi_89xa.c: 1059: if( ReceivedBankIndex < 2 )
 24761                           
 24762                           ;incstack = 0
 24763  016EAC  0E02               	movlw	2
 24764  016EAE  0101               	movlb	1	; () banked
 24765  016EB0  6145               	cpfslt	_ReceivedBankIndex& (0+255),b
 24766  016EB2  0012               	return	
 24767                           
 24768                           ; BSR set to: 1
 24769                           ;drv_mrf_miwi_89xa.c: 1060: {
 24770                           ;drv_mrf_miwi_89xa.c: 1061: RxPacket[ReceivedBankIndex].flags.Val = 0;
 24771  016EB4  0101               	movlb	1	; () banked
 24772  016EB6  5145               	movf	_ReceivedBankIndex& (0+255),w,b
 24773  016EB8  0D42               	mullw	66
 24774  016EBA  0E50               	movlw	low _RxPacket
 24775  016EBC  24F3               	addwf	prodl,w,c
 24776  016EBE  6ED9               	movwf	fsr2l,c
 24777  016EC0  0E03               	movlw	high _RxPacket
 24778  016EC2  20F4               	addwfc	prodh,w,c
 24779  016EC4  6EDA               	movwf	fsr2h,c
 24780  016EC6  0E00               	movlw	0
 24781  016EC8  6EDF               	movwf	indf2,c
 24782                           
 24783                           ; BSR set to: 1
 24784                           ;drv_mrf_miwi_89xa.c: 1062: ReceivedBankIndex = 0xFF;
 24785  016ECA  0101               	movlb	1	; () banked
 24786  016ECC  6945               	setf	_ReceivedBankIndex& (0+255),b
 24787  016ECE  0012               	return	
 24788  016ED0                     __end_of_MiMAC_DiscardPacket:
 24789                           	opt stack 0
 24790                           tblptru	equ	0xFF8
 24791                           tblptrh	equ	0xFF7
 24792                           tblptrl	equ	0xFF6
 24793                           tablat	equ	0xFF5
 24794                           prodh	equ	0xFF4
 24795                           prodl	equ	0xFF3
 24796                           intcon	equ	0xFF2
 24797                           intcon2	equ	0xFF1
 24798                           intcon3	equ	0xFF0
 24799                           indf0	equ	0xFEF
 24800                           postinc0	equ	0xFEE
 24801                           plusw0	equ	0xFEB
 24802                           fsr0h	equ	0xFEA
 24803                           fsr0l	equ	0xFE9
 24804                           wreg	equ	0xFE8
 24805                           indf1	equ	0xFE7
 24806                           postinc1	equ	0xFE6
 24807                           postdec1	equ	0xFE5
 24808                           fsr1h	equ	0xFE2
 24809                           fsr1l	equ	0xFE1
 24810                           indf2	equ	0xFDF
 24811                           postinc2	equ	0xFDE
 24812                           postdec2	equ	0xFDD
 24813                           plusw2	equ	0xFDB
 24814                           fsr2h	equ	0xFDA
 24815                           fsr2l	equ	0xFD9
 24816                           status	equ	0xFD8
 24817                           
 24818 ;; *************** function _MiApp_ConnectionMode *****************
 24819 ;; Defined at:
 24820 ;;		line 3921 in file "src/miwi/miwi_mesh.c"
 24821 ;; Parameters:    Size  Location     Type
 24822 ;;  Mode            1    wreg     unsigned char 
 24823 ;; Auto vars:     Size  Location     Type
 24824 ;;  Mode            1    1[BANK1 ] unsigned char 
 24825 ;; Return value:  Size  Location     Type
 24826 ;;		None               void
 24827 ;; Registers used:
 24828 ;;		wreg, status,2, status,0
 24829 ;; Tracked objects:
 24830 ;;		On entry : 0/0
 24831 ;;		On exit  : 0/0
 24832 ;;		Unchanged: 0/0
 24833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24835 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24836 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24837 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24838 ;;Total ram usage:        2 bytes
 24839 ;; Hardware stack levels used:    1
 24840 ;; Hardware stack levels required when called:    9
 24841 ;; This function calls:
 24842 ;;		Nothing
 24843 ;; This function is called by:
 24844 ;;		_main
 24845 ;; This function uses a non-reentrant model
 24846 ;;
 24847                           
 24848                           	psect	text81
 24849  016E32                     __ptext81:
 24850                           	opt stack 0
 24851  016E32                     _MiApp_ConnectionMode:
 24852                           	opt stack 21
 24853                           
 24854                           ; BSR set to: 1
 24855                           ;incstack = 0
 24856                           ;MiApp_ConnectionMode@Mode stored from wreg
 24857  016E32  0101               	movlb	1	; () banked
 24858  016E34  6F8B               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 24859                           
 24860                           ;miwi_mesh.c: 3923: if( Mode > 3 )
 24861  016E36  0E03               	movlw	3
 24862  016E38  0101               	movlb	1	; () banked
 24863  016E3A  658B               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 24864  016E3C  D001               	goto	l755
 24865  016E3E  0012               	return	
 24866  016E40                     l755:
 24867                           
 24868                           ; BSR set to: 1
 24869                           ;miwi_mesh.c: 3926: }
 24870                           ;miwi_mesh.c: 3927: ConnMode = Mode;
 24871  016E40  C18B  F0B2         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 24872                           
 24873                           ; BSR set to: 1
 24874                           ;miwi_mesh.c: 3928: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 24875  016E44  C0B2  F18A         	movff	_ConnMode,??_MiApp_ConnectionMode
 24876  016E48  0101               	movlb	1	; () banked
 24877  016E4A  3B8A               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 24878  016E4C  0101               	movlb	1	; () banked
 24879  016E4E  5143               	movf	_MiWiCapacityInfo& (0+255),w,b
 24880  016E50  0101               	movlb	1	; () banked
 24881  016E52  198A               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 24882  016E54  0BCF               	andlw	-49
 24883  016E56  198A               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 24884  016E58  0101               	movlb	1	; () banked
 24885  016E5A  6F43               	movwf	_MiWiCapacityInfo& (0+255),b
 24886                           
 24887                           ; BSR set to: 1
 24888  016E5C  0012               	return		;funcret
 24889  016E5E                     __end_of_MiApp_ConnectionMode:
 24890                           	opt stack 0
 24891                           tblptru	equ	0xFF8
 24892                           tblptrh	equ	0xFF7
 24893                           tblptrl	equ	0xFF6
 24894                           tablat	equ	0xFF5
 24895                           prodh	equ	0xFF4
 24896                           prodl	equ	0xFF3
 24897                           intcon	equ	0xFF2
 24898                           intcon2	equ	0xFF1
 24899                           intcon3	equ	0xFF0
 24900                           indf0	equ	0xFEF
 24901                           postinc0	equ	0xFEE
 24902                           plusw0	equ	0xFEB
 24903                           fsr0h	equ	0xFEA
 24904                           fsr0l	equ	0xFE9
 24905                           wreg	equ	0xFE8
 24906                           indf1	equ	0xFE7
 24907                           postinc1	equ	0xFE6
 24908                           postdec1	equ	0xFE5
 24909                           fsr1h	equ	0xFE2
 24910                           fsr1l	equ	0xFE1
 24911                           indf2	equ	0xFDF
 24912                           postinc2	equ	0xFDE
 24913                           postdec2	equ	0xFDD
 24914                           plusw2	equ	0xFDB
 24915                           fsr2h	equ	0xFDA
 24916                           fsr2l	equ	0xFD9
 24917                           status	equ	0xFD8
 24918                           
 24919 ;; *************** function _SYS_InterruptLow *****************
 24920 ;; Defined at:
 24921 ;;		line 720 in file "src/main.c"
 24922 ;; Parameters:    Size  Location     Type
 24923 ;;		None
 24924 ;; Auto vars:     Size  Location     Type
 24925 ;;		None
 24926 ;; Return value:  Size  Location     Type
 24927 ;;		None               void
 24928 ;; Registers used:
 24929 ;;		wreg, status,2, status,0, cstack
 24930 ;; Tracked objects:
 24931 ;;		On entry : 0/0
 24932 ;;		On exit  : 0/0
 24933 ;;		Unchanged: 0/0
 24934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24937 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24938 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24939 ;;Total ram usage:       17 bytes
 24940 ;; Hardware stack levels used:    1
 24941 ;; Hardware stack levels required when called:    8
 24942 ;; This function calls:
 24943 ;;		i1___ftadd
 24944 ;; This function is called by:
 24945 ;;		Interrupt level 1
 24946 ;; This function uses a non-reentrant model
 24947 ;;
 24948                           
 24949                           	psect	intcodelo
 24950  000018                     __pintcodelo:
 24951                           	opt stack 0
 24952  000018                     _SYS_InterruptLow:
 24953                           	opt stack 11
 24954                           
 24955                           ; BSR set to: 1
 24956                           ;incstack = 0
 24957  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 24958  00001A  CFD8 F015          	movff	status,??_SYS_InterruptLow
 24959  00001E  CFE8 F016          	movff	wreg,??_SYS_InterruptLow+1
 24960  000022  CFE0 F017          	movff	bsr,??_SYS_InterruptLow+2
 24961  000026  CFFA F018          	movff	pclath,??_SYS_InterruptLow+3
 24962  00002A  CFFB F019          	movff	pclatu,??_SYS_InterruptLow+4
 24963  00002E  CFE9 F01A          	movff	fsr0l,??_SYS_InterruptLow+5
 24964  000032  CFEA F01B          	movff	fsr0h,??_SYS_InterruptLow+6
 24965  000036  CFE1 F01C          	movff	fsr1l,??_SYS_InterruptLow+7
 24966  00003A  CFE2 F01D          	movff	fsr1h,??_SYS_InterruptLow+8
 24967  00003E  CFD9 F01E          	movff	fsr2l,??_SYS_InterruptLow+9
 24968  000042  CFDA F01F          	movff	fsr2h,??_SYS_InterruptLow+10
 24969  000046  CFF3 F020          	movff	prodl,??_SYS_InterruptLow+11
 24970  00004A  CFF4 F021          	movff	prodh,??_SYS_InterruptLow+12
 24971  00004E  CFF6 F022          	movff	tblptrl,??_SYS_InterruptLow+13
 24972  000052  CFF7 F023          	movff	tblptrh,??_SYS_InterruptLow+14
 24973  000056  CFF8 F024          	movff	tblptru,??_SYS_InterruptLow+15
 24974  00005A  CFF5 F025          	movff	tablat,??_SYS_InterruptLow+16
 24975                           
 24976                           ;main.c: 723: if(PIR3bits.RTCCIF)
 24977  00005E  A0A4               	btfss	4004,0,c	;volatile
 24978  000060  D026               	goto	i1l1229
 24979                           
 24980                           ;main.c: 724: {
 24981                           ;main.c: 725: m_uptime_days = m_uptime_days + 0.000671296F;
 24982  000062  C133  F009         	movff	_m_uptime_days,i1___ftadd@f1	;volatile
 24983  000066  C134  F00A         	movff	_m_uptime_days+1,i1___ftadd@f1+1	;volatile
 24984  00006A  C135  F00B         	movff	_m_uptime_days+2,i1___ftadd@f1+2	;volatile
 24985  00006E  0EFA               	movlw	250
 24986  000070  6E0C               	movwf	i1___ftadd@f2,c
 24987  000072  0E2F               	movlw	47
 24988  000074  6E0D               	movwf	i1___ftadd@f2+1,c
 24989  000076  0E3A               	movlw	58
 24990  000078  6E0E               	movwf	i1___ftadd@f2+2,c
 24991  00007A  ECBE  F09F         	call	i1___ftadd	;wreg free
 24992  00007E  C009  F133         	movff	?i1___ftadd,_m_uptime_days	;volatile
 24993  000082  C00A  F134         	movff	?i1___ftadd+1,_m_uptime_days+1	;volatile
 24994  000086  C00B  F135         	movff	?i1___ftadd+2,_m_uptime_days+2	;volatile
 24995                           
 24996                           ;main.c: 726: timer_count = timer_count - 1;
 24997  00008A  0448               	decf	_timer_count,w,c	;volatile
 24998  00008C  6E48               	movwf	_timer_count,c	;volatile
 24999                           
 25000                           ;main.c: 727: if (timer_count == 0)
 25001  00008E  5048               	movf	_timer_count,w,c	;volatile
 25002  000090  A4D8               	btfss	status,2,c
 25003  000092  D00C               	goto	i1l1226
 25004                           
 25005                           ;main.c: 728: {
 25006                           ;main.c: 729: timer_flag = 1;
 25007  000094  0E01               	movlw	1
 25008  000096  0101               	movlb	1	; () banked
 25009  000098  6F4D               	movwf	_timer_flag& (0+255),b	;volatile
 25010                           
 25011                           ;main.c: 730: if (m_update_frequency == 0)
 25012  00009A  0101               	movlb	1	; () banked
 25013  00009C  51FF               	movf	_m_update_frequency& (0+255),w,b	;volatile
 25014  00009E  A4D8               	btfss	status,2,c
 25015  0000A0  D003               	goto	i1l1227
 25016                           
 25017                           ; BSR set to: 1
 25018                           ;main.c: 731: timer_count = 1;
 25019  0000A2  0E01               	movlw	1
 25020  0000A4  6E48               	movwf	_timer_count,c	;volatile
 25021  0000A6  D002               	goto	i1l1226
 25022  0000A8                     i1l1227:
 25023                           
 25024                           ; BSR set to: 1
 25025                           ;main.c: 732: else
 25026                           ;main.c: 733: timer_count = m_update_frequency;
 25027  0000A8  C1FF  F048         	movff	_m_update_frequency,_timer_count	;volatile
 25028  0000AC                     i1l1226:
 25029                           
 25030                           ;main.c: 734: }
 25031                           ;main.c: 735: PIR3bits.RTCCIF = 0;
 25032  0000AC  90A4               	bcf	4004,0,c	;volatile
 25033  0000AE                     i1l1229:
 25034  0000AE  C025  FFF5         	movff	??_SYS_InterruptLow+16,tablat
 25035  0000B2  C024  FFF8         	movff	??_SYS_InterruptLow+15,tblptru
 25036  0000B6  C023  FFF7         	movff	??_SYS_InterruptLow+14,tblptrh
 25037  0000BA  C022  FFF6         	movff	??_SYS_InterruptLow+13,tblptrl
 25038  0000BE  C021  FFF4         	movff	??_SYS_InterruptLow+12,prodh
 25039  0000C2  C020  FFF3         	movff	??_SYS_InterruptLow+11,prodl
 25040  0000C6  C01F  FFDA         	movff	??_SYS_InterruptLow+10,fsr2h
 25041  0000CA  C01E  FFD9         	movff	??_SYS_InterruptLow+9,fsr2l
 25042  0000CE  C01D  FFE2         	movff	??_SYS_InterruptLow+8,fsr1h
 25043  0000D2  C01C  FFE1         	movff	??_SYS_InterruptLow+7,fsr1l
 25044  0000D6  C01B  FFEA         	movff	??_SYS_InterruptLow+6,fsr0h
 25045  0000DA  C01A  FFE9         	movff	??_SYS_InterruptLow+5,fsr0l
 25046  0000DE  C019  FFFB         	movff	??_SYS_InterruptLow+4,pclatu
 25047  0000E2  C018  FFFA         	movff	??_SYS_InterruptLow+3,pclath
 25048  0000E6  C017  FFE0         	movff	??_SYS_InterruptLow+2,bsr
 25049  0000EA  C016  FFE8         	movff	??_SYS_InterruptLow+1,wreg
 25050  0000EE  C015  FFD8         	movff	??_SYS_InterruptLow,status
 25051  0000F2  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 25052  0000F4  0010               	retfie	
 25053  0000F6                     __end_of_SYS_InterruptLow:
 25054                           	opt stack 0
 25055                           pclatu	equ	0xFFB
 25056                           pclath	equ	0xFFA
 25057                           tblptru	equ	0xFF8
 25058                           tblptrh	equ	0xFF7
 25059                           tblptrl	equ	0xFF6
 25060                           tablat	equ	0xFF5
 25061                           prodh	equ	0xFF4
 25062                           prodl	equ	0xFF3
 25063                           intcon	equ	0xFF2
 25064                           intcon2	equ	0xFF1
 25065                           intcon3	equ	0xFF0
 25066                           indf0	equ	0xFEF
 25067                           postinc0	equ	0xFEE
 25068                           plusw0	equ	0xFEB
 25069                           fsr0h	equ	0xFEA
 25070                           fsr0l	equ	0xFE9
 25071                           wreg	equ	0xFE8
 25072                           indf1	equ	0xFE7
 25073                           postinc1	equ	0xFE6
 25074                           postdec1	equ	0xFE5
 25075                           fsr1h	equ	0xFE2
 25076                           fsr1l	equ	0xFE1
 25077                           bsr	equ	0xFE0
 25078                           indf2	equ	0xFDF
 25079                           postinc2	equ	0xFDE
 25080                           postdec2	equ	0xFDD
 25081                           plusw2	equ	0xFDB
 25082                           fsr2h	equ	0xFDA
 25083                           fsr2l	equ	0xFD9
 25084                           status	equ	0xFD8
 25085                           
 25086 ;; *************** function i1___ftadd *****************
 25087 ;; Defined at:
 25088 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
 25089 ;; Parameters:    Size  Location     Type
 25090 ;;  f1              3    8[COMRAM] float 
 25091 ;;  f2              3   11[COMRAM] float 
 25092 ;; Auto vars:     Size  Location     Type
 25093 ;;  __ftadd         1   19[COMRAM] unsigned char 
 25094 ;;  __ftadd         1   18[COMRAM] unsigned char 
 25095 ;;  __ftadd         1   17[COMRAM] unsigned char 
 25096 ;; Return value:  Size  Location     Type
 25097 ;;                  3    8[COMRAM] float 
 25098 ;; Registers used:
 25099 ;;		wreg, status,2, status,0, cstack
 25100 ;; Tracked objects:
 25101 ;;		On entry : 0/0
 25102 ;;		On exit  : 0/0
 25103 ;;		Unchanged: 0/0
 25104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25105 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25106 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25107 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25108 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25109 ;;Total ram usage:       12 bytes
 25110 ;; Hardware stack levels used:    1
 25111 ;; Hardware stack levels required when called:    7
 25112 ;; This function calls:
 25113 ;;		i1___ftpack
 25114 ;; This function is called by:
 25115 ;;		_SYS_InterruptLow
 25116 ;; This function uses a non-reentrant model
 25117 ;;
 25118                           
 25119                           	psect	text83
 25120  013F7C                     __ptext83:
 25121                           	opt stack 0
 25122  013F7C                     i1___ftadd:
 25123                           	opt stack 11
 25124                           
 25125                           ;incstack = 0
 25126  013F7C  C00B  F00F         	movff	i1___ftadd@f1+2,??i1___ftadd
 25127  013F80  6A10               	clrf	(??i1___ftadd+1)& (0+255),c
 25128  013F82  6A11               	clrf	(??i1___ftadd+2)& (0+255),c
 25129  013F84  340A               	rlcf	i1___ftadd@f1+1,w,c
 25130  013F86  360F               	rlcf	??i1___ftadd& (0+255),f,c
 25131  013F88  E301               	bnc	u1165_21
 25132  013F8A  8010               	bsf	(??i1___ftadd+1)& (0+255),0,c
 25133  013F8C                     u1165_21:
 25134  013F8C  500F               	movf	??i1___ftadd,w,c
 25135  013F8E  6E14               	movwf	i1___ftadd@exp1,c
 25136  013F90  C00E  F00F         	movff	i1___ftadd@f2+2,??i1___ftadd
 25137  013F94  6A10               	clrf	(??i1___ftadd+1)& (0+255),c
 25138  013F96  6A11               	clrf	(??i1___ftadd+2)& (0+255),c
 25139  013F98  340D               	rlcf	i1___ftadd@f2+1,w,c
 25140  013F9A  360F               	rlcf	??i1___ftadd& (0+255),f,c
 25141  013F9C  E301               	bnc	u1166_21
 25142  013F9E  8010               	bsf	(??i1___ftadd+1)& (0+255),0,c
 25143  013FA0                     u1166_21:
 25144  013FA0  500F               	movf	??i1___ftadd,w,c
 25145  013FA2  6E13               	movwf	i1___ftadd@exp2,c
 25146  013FA4  5014               	movf	i1___ftadd@exp1,w,c
 25147  013FA6  B4D8               	btfsc	status,2,c
 25148  013FA8  D00B               	goto	i1l1783
 25149  013FAA  5013               	movf	i1___ftadd@exp2,w,c
 25150  013FAC  5C14               	subwf	i1___ftadd@exp1,w,c
 25151  013FAE  B0D8               	btfsc	status,0,c
 25152  013FB0  D00E               	goto	i1l10503
 25153  013FB2  5014               	movf	i1___ftadd@exp1,w,c
 25154  013FB4  0800               	sublw	0
 25155  013FB6  2413               	addwf	i1___ftadd@exp2,w,c
 25156  013FB8  6E0F               	movwf	??i1___ftadd& (0+255),c
 25157  013FBA  0E18               	movlw	24
 25158  013FBC  640F               	cpfsgt	??i1___ftadd,c
 25159  013FBE  D007               	goto	i1l10503
 25160  013FC0                     i1l1783:
 25161  013FC0  C00C  F009         	movff	i1___ftadd@f2,?i1___ftadd
 25162  013FC4  C00D  F00A         	movff	i1___ftadd@f2+1,?i1___ftadd+1
 25163  013FC8  C00E  F00B         	movff	i1___ftadd@f2+2,?i1___ftadd+2
 25164  013FCC  0012               	return	
 25165  013FCE                     i1l10503:
 25166  013FCE  5013               	movf	i1___ftadd@exp2,w,c
 25167  013FD0  B4D8               	btfsc	status,2,c
 25168  013FD2  D00B               	goto	i1l1787
 25169  013FD4  5014               	movf	i1___ftadd@exp1,w,c
 25170  013FD6  5C13               	subwf	i1___ftadd@exp2,w,c
 25171  013FD8  B0D8               	btfsc	status,0,c
 25172  013FDA  D00E               	goto	i1l10509
 25173  013FDC  5013               	movf	i1___ftadd@exp2,w,c
 25174  013FDE  0800               	sublw	0
 25175  013FE0  2414               	addwf	i1___ftadd@exp1,w,c
 25176  013FE2  6E0F               	movwf	??i1___ftadd& (0+255),c
 25177  013FE4  0E18               	movlw	24
 25178  013FE6  640F               	cpfsgt	??i1___ftadd,c
 25179  013FE8  D007               	goto	i1l10509
 25180  013FEA                     i1l1787:
 25181  013FEA  C009  F009         	movff	i1___ftadd@f1,?i1___ftadd
 25182  013FEE  C00A  F00A         	movff	i1___ftadd@f1+1,?i1___ftadd+1
 25183  013FF2  C00B  F00B         	movff	i1___ftadd@f1+2,?i1___ftadd+2
 25184  013FF6  0012               	return	
 25185  013FF8                     i1l10509:
 25186  013FF8  0E06               	movlw	6
 25187  013FFA  6E12               	movwf	i1___ftadd@sign,c
 25188  013FFC  BE0B               	btfsc	i1___ftadd@f1+2,7,c
 25189  013FFE  8E12               	bsf	i1___ftadd@sign,7,c
 25190  014000  BE0E               	btfsc	i1___ftadd@f2+2,7,c
 25191  014002  8C12               	bsf	i1___ftadd@sign,6,c
 25192  014004  8E0A               	bsf	i1___ftadd@f1+1,7,c
 25193  014006  0EFF               	movlw	255
 25194  014008  1609               	andwf	i1___ftadd@f1,f,c
 25195  01400A  0EFF               	movlw	255
 25196  01400C  160A               	andwf	i1___ftadd@f1+1,f,c
 25197  01400E  0E00               	movlw	0
 25198  014010  160B               	andwf	i1___ftadd@f1+2,f,c
 25199  014012  8E0D               	bsf	i1___ftadd@f2+1,7,c
 25200  014014  0EFF               	movlw	255
 25201  014016  160C               	andwf	i1___ftadd@f2,f,c
 25202  014018  0EFF               	movlw	255
 25203  01401A  160D               	andwf	i1___ftadd@f2+1,f,c
 25204  01401C  0E00               	movlw	0
 25205  01401E  160E               	andwf	i1___ftadd@f2+2,f,c
 25206  014020  5013               	movf	i1___ftadd@exp2,w,c
 25207  014022  5C14               	subwf	i1___ftadd@exp1,w,c
 25208  014024  B0D8               	btfsc	status,0,c
 25209  014026  D01B               	goto	i1l10535
 25210  014028                     i1l10525:
 25211  014028  90D8               	bcf	status,0,c
 25212  01402A  360C               	rlcf	i1___ftadd@f2,f,c
 25213  01402C  360D               	rlcf	i1___ftadd@f2+1,f,c
 25214  01402E  360E               	rlcf	i1___ftadd@f2+2,f,c
 25215  014030  0613               	decf	i1___ftadd@exp2,f,c
 25216  014032  5014               	movf	i1___ftadd@exp1,w,c
 25217  014034  1813               	xorwf	i1___ftadd@exp2,w,c
 25218  014036  B4D8               	btfsc	status,2,c
 25219  014038  D00D               	goto	i1l10533
 25220  01403A  0612               	decf	i1___ftadd@sign,f,c
 25221  01403C  C012  F00F         	movff	i1___ftadd@sign,??i1___ftadd
 25222  014040  0E07               	movlw	7
 25223  014042  160F               	andwf	??i1___ftadd,f,c
 25224  014044  B4D8               	btfsc	status,2,c
 25225  014046  D006               	goto	i1l10533
 25226  014048  D7EF               	goto	i1l10525
 25227  01404A                     i1l10531:
 25228  01404A  90D8               	bcf	status,0,c
 25229  01404C  320B               	rrcf	i1___ftadd@f1+2,f,c
 25230  01404E  320A               	rrcf	i1___ftadd@f1+1,f,c
 25231  014050  3209               	rrcf	i1___ftadd@f1,f,c
 25232  014052  2A14               	incf	i1___ftadd@exp1,f,c
 25233  014054                     i1l10533:
 25234  014054  5013               	movf	i1___ftadd@exp2,w,c
 25235  014056  1814               	xorwf	i1___ftadd@exp1,w,c
 25236  014058  B4D8               	btfsc	status,2,c
 25237  01405A  D01F               	goto	i1l1798
 25238  01405C  D7F6               	goto	i1l10531
 25239  01405E                     i1l10535:
 25240  01405E  5014               	movf	i1___ftadd@exp1,w,c
 25241  014060  5C13               	subwf	i1___ftadd@exp2,w,c
 25242  014062  B0D8               	btfsc	status,0,c
 25243  014064  D01A               	goto	i1l1798
 25244  014066                     i1l10537:
 25245  014066  90D8               	bcf	status,0,c
 25246  014068  3609               	rlcf	i1___ftadd@f1,f,c
 25247  01406A  360A               	rlcf	i1___ftadd@f1+1,f,c
 25248  01406C  360B               	rlcf	i1___ftadd@f1+2,f,c
 25249  01406E  0614               	decf	i1___ftadd@exp1,f,c
 25250  014070  5014               	movf	i1___ftadd@exp1,w,c
 25251  014072  1813               	xorwf	i1___ftadd@exp2,w,c
 25252  014074  B4D8               	btfsc	status,2,c
 25253  014076  D00D               	goto	i1l10545
 25254  014078  0612               	decf	i1___ftadd@sign,f,c
 25255  01407A  C012  F00F         	movff	i1___ftadd@sign,??i1___ftadd
 25256  01407E  0E07               	movlw	7
 25257  014080  160F               	andwf	??i1___ftadd,f,c
 25258  014082  B4D8               	btfsc	status,2,c
 25259  014084  D006               	goto	i1l10545
 25260  014086  D7EF               	goto	i1l10537
 25261  014088                     i1l10543:
 25262  014088  90D8               	bcf	status,0,c
 25263  01408A  320E               	rrcf	i1___ftadd@f2+2,f,c
 25264  01408C  320D               	rrcf	i1___ftadd@f2+1,f,c
 25265  01408E  320C               	rrcf	i1___ftadd@f2,f,c
 25266  014090  2A13               	incf	i1___ftadd@exp2,f,c
 25267  014092                     i1l10545:
 25268  014092  5013               	movf	i1___ftadd@exp2,w,c
 25269  014094  1814               	xorwf	i1___ftadd@exp1,w,c
 25270  014096  A4D8               	btfss	status,2,c
 25271  014098  D7F7               	goto	i1l10543
 25272  01409A                     i1l1798:
 25273  01409A  AE12               	btfss	i1___ftadd@sign,7,c
 25274  01409C  D00C               	goto	i1l1807
 25275  01409E  0EFF               	movlw	255
 25276  0140A0  1A09               	xorwf	i1___ftadd@f1,f,c
 25277  0140A2  0EFF               	movlw	255
 25278  0140A4  1A0A               	xorwf	i1___ftadd@f1+1,f,c
 25279  0140A6  0EFF               	movlw	255
 25280  0140A8  1A0B               	xorwf	i1___ftadd@f1+2,f,c
 25281  0140AA  0E01               	movlw	1
 25282  0140AC  2609               	addwf	i1___ftadd@f1,f,c
 25283  0140AE  0E00               	movlw	0
 25284  0140B0  220A               	addwfc	i1___ftadd@f1+1,f,c
 25285  0140B2  0E00               	movlw	0
 25286  0140B4  220B               	addwfc	i1___ftadd@f1+2,f,c
 25287  0140B6                     i1l1807:
 25288  0140B6  AC12               	btfss	i1___ftadd@sign,6,c
 25289  0140B8  D00C               	goto	i1l10551
 25290  0140BA  0EFF               	movlw	255
 25291  0140BC  1A0C               	xorwf	i1___ftadd@f2,f,c
 25292  0140BE  0EFF               	movlw	255
 25293  0140C0  1A0D               	xorwf	i1___ftadd@f2+1,f,c
 25294  0140C2  0EFF               	movlw	255
 25295  0140C4  1A0E               	xorwf	i1___ftadd@f2+2,f,c
 25296  0140C6  0E01               	movlw	1
 25297  0140C8  260C               	addwf	i1___ftadd@f2,f,c
 25298  0140CA  0E00               	movlw	0
 25299  0140CC  220D               	addwfc	i1___ftadd@f2+1,f,c
 25300  0140CE  0E00               	movlw	0
 25301  0140D0  220E               	addwfc	i1___ftadd@f2+2,f,c
 25302  0140D2                     i1l10551:
 25303  0140D2  0E00               	movlw	0
 25304  0140D4  6E12               	movwf	i1___ftadd@sign,c
 25305  0140D6  5009               	movf	i1___ftadd@f1,w,c
 25306  0140D8  260C               	addwf	i1___ftadd@f2,f,c
 25307  0140DA  500A               	movf	i1___ftadd@f1+1,w,c
 25308  0140DC  220D               	addwfc	i1___ftadd@f2+1,f,c
 25309  0140DE  500B               	movf	i1___ftadd@f1+2,w,c
 25310  0140E0  220E               	addwfc	i1___ftadd@f2+2,f,c
 25311  0140E2  AE0E               	btfss	i1___ftadd@f2+2,7,c
 25312  0140E4  D00E               	goto	i1l10561
 25313  0140E6  0EFF               	movlw	255
 25314  0140E8  1A0C               	xorwf	i1___ftadd@f2,f,c
 25315  0140EA  0EFF               	movlw	255
 25316  0140EC  1A0D               	xorwf	i1___ftadd@f2+1,f,c
 25317  0140EE  0EFF               	movlw	255
 25318  0140F0  1A0E               	xorwf	i1___ftadd@f2+2,f,c
 25319  0140F2  0E01               	movlw	1
 25320  0140F4  260C               	addwf	i1___ftadd@f2,f,c
 25321  0140F6  0E00               	movlw	0
 25322  0140F8  220D               	addwfc	i1___ftadd@f2+1,f,c
 25323  0140FA  0E00               	movlw	0
 25324  0140FC  220E               	addwfc	i1___ftadd@f2+2,f,c
 25325  0140FE  0E01               	movlw	1
 25326  014100  6E12               	movwf	i1___ftadd@sign,c
 25327  014102                     i1l10561:
 25328  014102  C00C  F001         	movff	i1___ftadd@f2,i1___ftpack@arg
 25329  014106  C00D  F002         	movff	i1___ftadd@f2+1,i1___ftpack@arg+1
 25330  01410A  C00E  F003         	movff	i1___ftadd@f2+2,i1___ftpack@arg+2
 25331  01410E  C014  F004         	movff	i1___ftadd@exp1,i1___ftpack@exp
 25332  014112  C012  F005         	movff	i1___ftadd@sign,i1___ftpack@sign
 25333  014116  EC73  F0B0         	call	i1___ftpack	;wreg free
 25334  01411A  C001  F009         	movff	?i1___ftpack,?i1___ftadd
 25335  01411E  C002  F00A         	movff	?i1___ftpack+1,?i1___ftadd+1
 25336  014122  C003  F00B         	movff	?i1___ftpack+2,?i1___ftadd+2
 25337  014126  0012               	return	
 25338  014128                     __end_ofi1___ftadd:
 25339                           	opt stack 0
 25340                           pclatu	equ	0xFFB
 25341                           pclath	equ	0xFFA
 25342                           tblptru	equ	0xFF8
 25343                           tblptrh	equ	0xFF7
 25344                           tblptrl	equ	0xFF6
 25345                           tablat	equ	0xFF5
 25346                           prodh	equ	0xFF4
 25347                           prodl	equ	0xFF3
 25348                           intcon	equ	0xFF2
 25349                           intcon2	equ	0xFF1
 25350                           intcon3	equ	0xFF0
 25351                           indf0	equ	0xFEF
 25352                           postinc0	equ	0xFEE
 25353                           plusw0	equ	0xFEB
 25354                           fsr0h	equ	0xFEA
 25355                           fsr0l	equ	0xFE9
 25356                           wreg	equ	0xFE8
 25357                           indf1	equ	0xFE7
 25358                           postinc1	equ	0xFE6
 25359                           postdec1	equ	0xFE5
 25360                           fsr1h	equ	0xFE2
 25361                           fsr1l	equ	0xFE1
 25362                           bsr	equ	0xFE0
 25363                           indf2	equ	0xFDF
 25364                           postinc2	equ	0xFDE
 25365                           postdec2	equ	0xFDD
 25366                           plusw2	equ	0xFDB
 25367                           fsr2h	equ	0xFDA
 25368                           fsr2l	equ	0xFD9
 25369                           status	equ	0xFD8
 25370                           
 25371 ;; *************** function i1___ftpack *****************
 25372 ;; Defined at:
 25373 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
 25374 ;; Parameters:    Size  Location     Type
 25375 ;;  arg             3    0[COMRAM] unsigned um
 25376 ;;  exp             1    3[COMRAM] unsigned char 
 25377 ;;  sign            1    4[COMRAM] unsigned char 
 25378 ;; Auto vars:     Size  Location     Type
 25379 ;;		None
 25380 ;; Return value:  Size  Location     Type
 25381 ;;                  3    0[COMRAM] float 
 25382 ;; Registers used:
 25383 ;;		wreg, status,2, status,0
 25384 ;; Tracked objects:
 25385 ;;		On entry : 0/0
 25386 ;;		On exit  : 0/0
 25387 ;;		Unchanged: 0/0
 25388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25389 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25391 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25392 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25393 ;;Total ram usage:        8 bytes
 25394 ;; Hardware stack levels used:    1
 25395 ;; Hardware stack levels required when called:    6
 25396 ;; This function calls:
 25397 ;;		Nothing
 25398 ;; This function is called by:
 25399 ;;		i1___ftadd
 25400 ;; This function uses a non-reentrant model
 25401 ;;
 25402                           
 25403                           	psect	text84
 25404  0160E6                     __ptext84:
 25405                           	opt stack 0
 25406  0160E6                     i1___ftpack:
 25407                           	opt stack 11
 25408                           
 25409                           ;incstack = 0
 25410  0160E6  5004               	movf	i1___ftpack@exp,w,c
 25411  0160E8  B4D8               	btfsc	status,2,c
 25412  0160EA  D005               	goto	i1l9411
 25413  0160EC  5001               	movf	i1___ftpack@arg,w,c
 25414  0160EE  1002               	iorwf	i1___ftpack@arg+1,w,c
 25415  0160F0  1003               	iorwf	i1___ftpack@arg+2,w,c
 25416  0160F2  A4D8               	btfss	status,2,c
 25417  0160F4  D00C               	goto	i1l9417
 25418  0160F6                     i1l9411:
 25419  0160F6  0E00               	movlw	0
 25420  0160F8  6E01               	movwf	?i1___ftpack,c
 25421  0160FA  0E00               	movlw	0
 25422  0160FC  6E02               	movwf	?i1___ftpack+1,c
 25423  0160FE  0E00               	movlw	0
 25424  016100  6E03               	movwf	?i1___ftpack+2,c
 25425  016102  0012               	return	
 25426  016104                     i1l9415:
 25427  016104  2A04               	incf	i1___ftpack@exp,f,c
 25428  016106  90D8               	bcf	status,0,c
 25429  016108  3203               	rrcf	i1___ftpack@arg+2,f,c
 25430  01610A  3202               	rrcf	i1___ftpack@arg+1,f,c
 25431  01610C  3201               	rrcf	i1___ftpack@arg,f,c
 25432  01610E                     i1l9417:
 25433  01610E  0E00               	movlw	0
 25434  016110  1401               	andwf	i1___ftpack@arg,w,c
 25435  016112  6E06               	movwf	??i1___ftpack& (0+255),c
 25436  016114  0E00               	movlw	0
 25437  016116  1402               	andwf	i1___ftpack@arg+1,w,c
 25438  016118  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 25439  01611A  0EFE               	movlw	254
 25440  01611C  1403               	andwf	i1___ftpack@arg+2,w,c
 25441  01611E  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 25442  016120  5006               	movf	??i1___ftpack,w,c
 25443  016122  1007               	iorwf	??i1___ftpack+1,w,c
 25444  016124  1008               	iorwf	??i1___ftpack+2,w,c
 25445  016126  B4D8               	btfsc	status,2,c
 25446  016128  D00C               	goto	i1l9423
 25447  01612A  D7EC               	goto	i1l9415
 25448  01612C                     i1l9419:
 25449  01612C  2A04               	incf	i1___ftpack@exp,f,c
 25450  01612E  0E01               	movlw	1
 25451  016130  2601               	addwf	i1___ftpack@arg,f,c
 25452  016132  0E00               	movlw	0
 25453  016134  2202               	addwfc	i1___ftpack@arg+1,f,c
 25454  016136  0E00               	movlw	0
 25455  016138  2203               	addwfc	i1___ftpack@arg+2,f,c
 25456  01613A  90D8               	bcf	status,0,c
 25457  01613C  3203               	rrcf	i1___ftpack@arg+2,f,c
 25458  01613E  3202               	rrcf	i1___ftpack@arg+1,f,c
 25459  016140  3201               	rrcf	i1___ftpack@arg,f,c
 25460  016142                     i1l9423:
 25461  016142  0E00               	movlw	0
 25462  016144  1401               	andwf	i1___ftpack@arg,w,c
 25463  016146  6E06               	movwf	??i1___ftpack& (0+255),c
 25464  016148  0E00               	movlw	0
 25465  01614A  1402               	andwf	i1___ftpack@arg+1,w,c
 25466  01614C  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 25467  01614E  0EFF               	movlw	255
 25468  016150  1403               	andwf	i1___ftpack@arg+2,w,c
 25469  016152  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 25470  016154  5006               	movf	??i1___ftpack,w,c
 25471  016156  1007               	iorwf	??i1___ftpack+1,w,c
 25472  016158  1008               	iorwf	??i1___ftpack+2,w,c
 25473  01615A  B4D8               	btfsc	status,2,c
 25474  01615C  D006               	goto	i1l9427
 25475  01615E  D7E6               	goto	i1l9419
 25476  016160                     i1l9425:
 25477  016160  0604               	decf	i1___ftpack@exp,f,c
 25478  016162  90D8               	bcf	status,0,c
 25479  016164  3601               	rlcf	i1___ftpack@arg,f,c
 25480  016166  3602               	rlcf	i1___ftpack@arg+1,f,c
 25481  016168  3603               	rlcf	i1___ftpack@arg+2,f,c
 25482  01616A                     i1l9427:
 25483  01616A  BE02               	btfsc	i1___ftpack@arg+1,7,c
 25484  01616C  D003               	goto	i1l1735
 25485  01616E  0E02               	movlw	2
 25486  016170  6004               	cpfslt	i1___ftpack@exp,c
 25487  016172  D7F6               	goto	i1l9425
 25488  016174                     i1l1735:
 25489  016174  A004               	btfss	i1___ftpack@exp,0,c
 25490  016176  9E02               	bcf	i1___ftpack@arg+1,7,c
 25491  016178  90D8               	bcf	status,0,c
 25492  01617A  3204               	rrcf	i1___ftpack@exp,f,c
 25493  01617C  5004               	movf	i1___ftpack@exp,w,c
 25494  01617E  1203               	iorwf	i1___ftpack@arg+2,f,c
 25495  016180  5005               	movf	i1___ftpack@sign,w,c
 25496  016182  A4D8               	btfss	status,2,c
 25497  016184  8E03               	bsf	i1___ftpack@arg+2,7,c
 25498  016186  C001  F001         	movff	i1___ftpack@arg,?i1___ftpack
 25499  01618A  C002  F002         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 25500  01618E  C003  F003         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 25501  016192  0012               	return	
 25502  016194                     __end_ofi1___ftpack:
 25503                           	opt stack 0
 25504                           pclatu	equ	0xFFB
 25505                           pclath	equ	0xFFA
 25506                           tblptru	equ	0xFF8
 25507                           tblptrh	equ	0xFF7
 25508                           tblptrl	equ	0xFF6
 25509                           tablat	equ	0xFF5
 25510                           prodh	equ	0xFF4
 25511                           prodl	equ	0xFF3
 25512                           intcon	equ	0xFF2
 25513                           intcon2	equ	0xFF1
 25514                           intcon3	equ	0xFF0
 25515                           indf0	equ	0xFEF
 25516                           postinc0	equ	0xFEE
 25517                           plusw0	equ	0xFEB
 25518                           fsr0h	equ	0xFEA
 25519                           fsr0l	equ	0xFE9
 25520                           wreg	equ	0xFE8
 25521                           indf1	equ	0xFE7
 25522                           postinc1	equ	0xFE6
 25523                           postdec1	equ	0xFE5
 25524                           fsr1h	equ	0xFE2
 25525                           fsr1l	equ	0xFE1
 25526                           bsr	equ	0xFE0
 25527                           indf2	equ	0xFDF
 25528                           postinc2	equ	0xFDE
 25529                           postdec2	equ	0xFDD
 25530                           plusw2	equ	0xFDB
 25531                           fsr2h	equ	0xFDA
 25532                           fsr2l	equ	0xFD9
 25533                           status	equ	0xFD8
 25534                           
 25535 ;; *************** function _SYS_InterruptHigh *****************
 25536 ;; Defined at:
 25537 ;;		line 712 in file "src/main.c"
 25538 ;; Parameters:    Size  Location     Type
 25539 ;;		None
 25540 ;; Auto vars:     Size  Location     Type
 25541 ;;		None
 25542 ;; Return value:  Size  Location     Type
 25543 ;;		None               void
 25544 ;; Registers used:
 25545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25546 ;; Tracked objects:
 25547 ;;		On entry : 0/0
 25548 ;;		On exit  : 0/0
 25549 ;;		Unchanged: 0/0
 25550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25553 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25554 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25555 ;;Total ram usage:       14 bytes
 25556 ;; Hardware stack levels used:    1
 25557 ;; Hardware stack levels required when called:    5
 25558 ;; This function calls:
 25559 ;;		_MIWIInterruptHandler
 25560 ;; This function is called by:
 25561 ;;		Interrupt level 2
 25562 ;; This function uses a non-reentrant model
 25563 ;;
 25564                           
 25565                           	psect	intcode
 25566  000008                     __pintcode:
 25567                           	opt stack 0
 25568  000008                     _SYS_InterruptHigh:
 25569                           	opt stack 11
 25570                           
 25571                           ;incstack = 0
 25572  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 25573  00000A  CFFA F095          	movff	pclath,??_SYS_InterruptHigh
 25574  00000E  CFFB F096          	movff	pclatu,??_SYS_InterruptHigh+1
 25575  000012  EF8C  F0B4         	goto	int_func
 25576                           pclatu	equ	0xFFB
 25577                           pclath	equ	0xFFA
 25578                           tblptru	equ	0xFF8
 25579                           tblptrh	equ	0xFF7
 25580                           tblptrl	equ	0xFF6
 25581                           tablat	equ	0xFF5
 25582                           prodh	equ	0xFF4
 25583                           prodl	equ	0xFF3
 25584                           intcon	equ	0xFF2
 25585                           intcon2	equ	0xFF1
 25586                           intcon3	equ	0xFF0
 25587                           indf0	equ	0xFEF
 25588                           postinc0	equ	0xFEE
 25589                           plusw0	equ	0xFEB
 25590                           fsr0h	equ	0xFEA
 25591                           fsr0l	equ	0xFE9
 25592                           wreg	equ	0xFE8
 25593                           indf1	equ	0xFE7
 25594                           postinc1	equ	0xFE6
 25595                           postdec1	equ	0xFE5
 25596                           fsr1h	equ	0xFE2
 25597                           fsr1l	equ	0xFE1
 25598                           bsr	equ	0xFE0
 25599                           indf2	equ	0xFDF
 25600                           postinc2	equ	0xFDE
 25601                           postdec2	equ	0xFDD
 25602                           plusw2	equ	0xFDB
 25603                           fsr2h	equ	0xFDA
 25604                           fsr2l	equ	0xFD9
 25605                           status	equ	0xFD8
 25606                           
 25607                           	psect	intcode_body
 25608  016918                     __pintcode_body:
 25609                           	opt stack 11
 25610  016918                     int_func:
 25611                           	opt stack 11
 25612  016918  CFE9 F097          	movff	fsr0l,??_SYS_InterruptHigh+2
 25613  01691C  CFEA F098          	movff	fsr0h,??_SYS_InterruptHigh+3
 25614  016920  CFE1 F099          	movff	fsr1l,??_SYS_InterruptHigh+4
 25615  016924  CFE2 F09A          	movff	fsr1h,??_SYS_InterruptHigh+5
 25616  016928  CFD9 F09B          	movff	fsr2l,??_SYS_InterruptHigh+6
 25617  01692C  CFDA F09C          	movff	fsr2h,??_SYS_InterruptHigh+7
 25618  016930  CFF3 F09D          	movff	prodl,??_SYS_InterruptHigh+8
 25619  016934  CFF4 F09E          	movff	prodh,??_SYS_InterruptHigh+9
 25620  016938  CFF6 F09F          	movff	tblptrl,??_SYS_InterruptHigh+10
 25621  01693C  CFF7 F0A0          	movff	tblptrh,??_SYS_InterruptHigh+11
 25622  016940  CFF8 F0A1          	movff	tblptru,??_SYS_InterruptHigh+12
 25623  016944  CFF5 F0A2          	movff	tablat,??_SYS_InterruptHigh+13
 25624                           
 25625                           ;main.c: 714: MIWIInterruptHandler();
 25626  016948  EC49  F08D         	call	_MIWIInterruptHandler	;wreg free
 25627  01694C  C0A2  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 25628  016950  C0A1  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 25629  016954  C0A0  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 25630  016958  C09F  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 25631  01695C  C09E  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 25632  016960  C09D  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 25633  016964  C09C  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 25634  016968  C09B  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 25635  01696C  C09A  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 25636  016970  C099  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 25637  016974  C098  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 25638  016978  C097  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 25639  01697C  C096  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 25640  016980  C095  FFFA         	movff	??_SYS_InterruptHigh,pclath
 25641  016984  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25642  016986  0011               	retfie		f
 25643  016988                     __end_of_SYS_InterruptHigh:
 25644                           	opt stack 0
 25645                           pclatu	equ	0xFFB
 25646                           pclath	equ	0xFFA
 25647                           tblptru	equ	0xFF8
 25648                           tblptrh	equ	0xFF7
 25649                           tblptrl	equ	0xFF6
 25650                           tablat	equ	0xFF5
 25651                           prodh	equ	0xFF4
 25652                           prodl	equ	0xFF3
 25653                           intcon	equ	0xFF2
 25654                           intcon2	equ	0xFF1
 25655                           intcon3	equ	0xFF0
 25656                           indf0	equ	0xFEF
 25657                           postinc0	equ	0xFEE
 25658                           plusw0	equ	0xFEB
 25659                           fsr0h	equ	0xFEA
 25660                           fsr0l	equ	0xFE9
 25661                           wreg	equ	0xFE8
 25662                           indf1	equ	0xFE7
 25663                           postinc1	equ	0xFE6
 25664                           postdec1	equ	0xFE5
 25665                           fsr1h	equ	0xFE2
 25666                           fsr1l	equ	0xFE1
 25667                           bsr	equ	0xFE0
 25668                           indf2	equ	0xFDF
 25669                           postinc2	equ	0xFDE
 25670                           postdec2	equ	0xFDD
 25671                           plusw2	equ	0xFDB
 25672                           fsr2h	equ	0xFDA
 25673                           fsr2l	equ	0xFD9
 25674                           status	equ	0xFD8
 25675                           
 25676 ;; *************** function _MIWIInterruptHandler *****************
 25677 ;; Defined at:
 25678 ;;		line 1258 in file "src/miwi/drv_mrf_miwi_89xa.c"
 25679 ;; Parameters:    Size  Location     Type
 25680 ;;		None
 25681 ;; Auto vars:     Size  Location     Type
 25682 ;;  ackInfoIndex    1   49[BANK0 ] unsigned char 
 25683 ;;  i               1   52[BANK0 ] unsigned char 
 25684 ;;  fifo_stat       1   42[BANK0 ] unsigned char 
 25685 ;;  ackPacket       4   43[BANK0 ] unsigned char [4]
 25686 ;;  counter         2   40[BANK0 ] unsigned int 
 25687 ;;  BankIndex       1   51[BANK0 ] unsigned char 
 25688 ;;  PacketLen       1   50[BANK0 ] unsigned char 
 25689 ;;  RxPacketPtr     1   48[BANK0 ] unsigned char 
 25690 ;;  bAck            1   47[BANK0 ] unsigned char 
 25691 ;; Return value:  Size  Location     Type
 25692 ;;		None               void
 25693 ;; Registers used:
 25694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25695 ;; Tracked objects:
 25696 ;;		On entry : 0/0
 25697 ;;		On exit  : 0/0
 25698 ;;		Unchanged: 0/0
 25699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25701 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25702 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25703 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25704 ;;Total ram usage:       19 bytes
 25705 ;; Hardware stack levels used:    1
 25706 ;; Hardware stack levels required when called:    4
 25707 ;; This function calls:
 25708 ;;		i2_MiWi_TickGet
 25709 ;;		i2_RegisterRead
 25710 ;;		i2_SPIGet
 25711 ;;		i2_TxPacket
 25712 ;; This function is called by:
 25713 ;;		_SYS_InterruptHigh
 25714 ;; This function uses a non-reentrant model
 25715 ;;
 25716                           
 25717                           	psect	text86
 25718  011A92                     __ptext86:
 25719                           	opt stack 0
 25720  011A92                     _MIWIInterruptHandler:
 25721                           	opt stack 11
 25722                           
 25723                           ;drv_mrf_miwi_89xa.c: 1260: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE)
 25724                           
 25725                           ;incstack = 0
 25726  011A92  B0F0               	btfsc	intcon3,0,c	;volatile
 25727  011A94  A6F0               	btfss	intcon3,3,c	;volatile
 25728  011A96  D280               	goto	i2l14159
 25729                           
 25730                           ;drv_mrf_miwi_89xa.c: 1261: {
 25731                           ;drv_mrf_miwi_89xa.c: 1262: INTCON3bits.INT1IF = 0;
 25732  011A98  90F0               	bcf	intcon3,0,c	;volatile
 25733                           
 25734                           ;drv_mrf_miwi_89xa.c: 1268: if(RF_Mode == 0x60)
 25735  011A9A  0E60               	movlw	96
 25736  011A9C  0100               	movlb	0	; () banked
 25737  011A9E  19B8               	xorwf	_RF_Mode& (0+255),w,b
 25738  011AA0  A4D8               	btfss	status,2,c
 25739  011AA2  D275               	goto	i2l14153
 25740                           
 25741                           ; BSR set to: 0
 25742                           ;drv_mrf_miwi_89xa.c: 1269: {
 25743                           ;drv_mrf_miwi_89xa.c: 1270: uint8_t RxPacketPtr;
 25744                           ;drv_mrf_miwi_89xa.c: 1271: uint8_t PacketLen;
 25745                           ;drv_mrf_miwi_89xa.c: 1272: uint8_t BankIndex;
 25746                           ;drv_mrf_miwi_89xa.c: 1273: uint16_t counter;
 25747                           ;drv_mrf_miwi_89xa.c: 1274: bool bAck;
 25748                           ;drv_mrf_miwi_89xa.c: 1275: uint8_t ackPacket[4];
 25749                           ;drv_mrf_miwi_89xa.c: 1281: RSSILock = RSSIVal;
 25750  011AA4  C0B9  F144         	movff	_RSSIVal,_RSSILock
 25751                           
 25752                           ;drv_mrf_miwi_89xa.c: 1283: LATCbits.LATC6 = 0;
 25753  011AA8  9C8B               	bcf	3979,6,c	;volatile
 25754                           
 25755                           ; BSR set to: 0
 25756                           ;drv_mrf_miwi_89xa.c: 1284: PacketLen = SPIGet();
 25757  011AAA  ECF5  F0B7         	call	i2_SPIGet	;wreg free
 25758  011AAE  0100               	movlb	0	; () banked
 25759  011AB0  6F92               	movwf	MIWIInterruptHandler@PacketLen& (0+255),b
 25760                           
 25761                           ; BSR set to: 0
 25762                           ;drv_mrf_miwi_89xa.c: 1285: LATCbits.LATC6 = 1;
 25763  011AB2  8C8B               	bsf	3979,6,c	;volatile
 25764                           
 25765                           ; BSR set to: 0
 25766                           ;drv_mrf_miwi_89xa.c: 1288: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 25767  011AB4  0E00               	movlw	0
 25768  011AB6  0100               	movlb	0	; () banked
 25769  011AB8  6F93               	movwf	MIWIInterruptHandler@BankIndex& (0+255),b
 25770  011ABA                     i2l13993:
 25771                           
 25772                           ; BSR set to: 0
 25773  011ABA  0E01               	movlw	1
 25774  011ABC  0100               	movlb	0	; () banked
 25775  011ABE  6593               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 25776  011AC0  D001               	goto	i2l13997
 25777  011AC2  D00F               	goto	i2l14005
 25778  011AC4                     i2l13997:
 25779                           
 25780                           ; BSR set to: 0
 25781                           ;drv_mrf_miwi_89xa.c: 1289: {
 25782                           ;drv_mrf_miwi_89xa.c: 1290: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 25783  011AC4  0100               	movlb	0	; () banked
 25784  011AC6  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25785  011AC8  0D42               	mullw	66
 25786  011ACA  0E50               	movlw	low _RxPacket
 25787  011ACC  24F3               	addwf	prodl,w,c
 25788  011ACE  6ED9               	movwf	fsr2l,c
 25789  011AD0  0E03               	movlw	high _RxPacket
 25790  011AD2  20F4               	addwfc	prodh,w,c
 25791  011AD4  6EDA               	movwf	fsr2h,c
 25792  011AD6  0103               	movlb	3	; () banked
 25793  011AD8  A0DF               	btfss	indf2,0,c
 25794  011ADA  D003               	goto	i2l14005
 25795                           
 25796                           ; BSR set to: 3
 25797                           
 25798                           ; BSR set to: 3
 25799                           
 25800                           ; BSR set to: 3
 25801                           ;drv_mrf_miwi_89xa.c: 1291: {
 25802                           ;drv_mrf_miwi_89xa.c: 1292: break;
 25803  011ADC  0100               	movlb	0	; () banked
 25804  011ADE  2B93               	incf	MIWIInterruptHandler@BankIndex& (0+255),f,b
 25805  011AE0  D7EC               	goto	i2l13993
 25806  011AE2                     i2l14005:
 25807                           
 25808                           ;drv_mrf_miwi_89xa.c: 1293: }
 25809                           ;drv_mrf_miwi_89xa.c: 1294: }
 25810                           ;drv_mrf_miwi_89xa.c: 1297: if( PacketLen == 2 )
 25811  011AE2  0E02               	movlw	2
 25812  011AE4  0100               	movlb	0	; () banked
 25813  011AE6  1992               	xorwf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 25814  011AE8  A4D8               	btfss	status,2,c
 25815  011AEA  D002               	goto	i2l14009
 25816                           
 25817                           ; BSR set to: 0
 25818                           ;drv_mrf_miwi_89xa.c: 1298: {
 25819                           ;drv_mrf_miwi_89xa.c: 1299: bAck = 1;
 25820  011AEC  0E01               	movlw	1
 25821  011AEE  D001               	goto	L9
 25822  011AF0                     i2l14009:
 25823                           
 25824                           ; BSR set to: 0
 25825                           ;drv_mrf_miwi_89xa.c: 1301: else
 25826                           ;drv_mrf_miwi_89xa.c: 1302: {
 25827                           ;drv_mrf_miwi_89xa.c: 1303: bAck = 0;
 25828  011AF0  0E00               	movlw	0
 25829  011AF2                     L9:
 25830  011AF2  0100               	movlb	0	; () banked
 25831  011AF4  6F8F               	movwf	MIWIInterruptHandler@bAck& (0+255),b
 25832                           
 25833                           ; BSR set to: 0
 25834                           ;drv_mrf_miwi_89xa.c: 1304: }
 25835                           ;drv_mrf_miwi_89xa.c: 1307: if( PacketLen >= (32+11+4+4+4+9) || PacketLen == 0 || (BankI
      +                          ndex >= 2 && (bAck==0)) )
 25836                           
 25837                           ; BSR set to: 0
 25838  011AF6  0E40               	movlw	64
 25839  011AF8  0100               	movlb	0	; () banked
 25840  011AFA  6192               	cpfslt	MIWIInterruptHandler@PacketLen& (0+255),b
 25841  011AFC  D00E               	goto	i2l14019
 25842                           
 25843                           ; BSR set to: 0
 25844  011AFE  0100               	movlb	0	; () banked
 25845  011B00  5192               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 25846  011B02  0100               	movlb	0	; () banked
 25847  011B04  B4D8               	btfsc	status,2,c
 25848  011B06  D009               	goto	i2l14019
 25849                           
 25850                           ; BSR set to: 0
 25851  011B08  0E01               	movlw	1
 25852  011B0A  0100               	movlb	0	; () banked
 25853  011B0C  6593               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 25854  011B0E  D016               	goto	i2l14029
 25855                           
 25856                           ; BSR set to: 0
 25857  011B10  0100               	movlb	0	; () banked
 25858  011B12  518F               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 25859  011B14  0100               	movlb	0	; () banked
 25860  011B16  A4D8               	btfss	status,2,c
 25861  011B18  D011               	goto	i2l14029
 25862  011B1A                     i2l14019:
 25863                           
 25864                           ; BSR set to: 0
 25865                           ;drv_mrf_miwi_89xa.c: 1310: {
 25866                           ;drv_mrf_miwi_89xa.c: 1311: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 25867  011B1A  0E1A               	movlw	26
 25868  011B1C  EC87  F0B5         	call	i2_RegisterRead
 25869  011B20  D007               	goto	L10
 25870  011B22                     i2l392:
 25871                           
 25872                           ; BSR set to: 0
 25873                           ;drv_mrf_miwi_89xa.c: 1313: {
 25874                           ;drv_mrf_miwi_89xa.c: 1314: LATCbits.LATC6 = 0;
 25875  011B22  9C8B               	bcf	3979,6,c	;volatile
 25876                           
 25877                           ; BSR set to: 0
 25878                           ;drv_mrf_miwi_89xa.c: 1315: SPIGet();
 25879  011B24  ECF5  F0B7         	call	i2_SPIGet	;wreg free
 25880                           
 25881                           ;drv_mrf_miwi_89xa.c: 1316: LATCbits.LATC6 = 1;
 25882  011B28  8C8B               	bsf	3979,6,c	;volatile
 25883                           
 25884                           ;drv_mrf_miwi_89xa.c: 1317: fifo_stat = RegisterRead(0x1A00>>8);
 25885  011B2A  0E1A               	movlw	26
 25886  011B2C  EC87  F0B5         	call	i2_RegisterRead
 25887  011B30                     L10:
 25888  011B30  0100               	movlb	0	; () banked
 25889  011B32  6F8A               	movwf	MIWIInterruptHandler@fifo_stat& (0+255),b
 25890                           
 25891                           ; BSR set to: 0
 25892                           
 25893                           ; BSR set to: 0
 25894  011B34  0100               	movlb	0	; () banked
 25895  011B36  A38A               	btfss	MIWIInterruptHandler@fifo_stat& (0+255),1,b
 25896  011B38  D22D               	goto	i2l14155
 25897  011B3A  D7F3               	goto	i2l392
 25898  011B3C                     i2l14029:
 25899                           
 25900                           ; BSR set to: 0
 25901                           ;drv_mrf_miwi_89xa.c: 1321: }
 25902                           ;drv_mrf_miwi_89xa.c: 1323: RxPacketPtr = 0;
 25903  011B3C  0E00               	movlw	0
 25904  011B3E  0100               	movlb	0	; () banked
 25905  011B40  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 25906                           
 25907                           ; BSR set to: 0
 25908                           ;drv_mrf_miwi_89xa.c: 1324: counter = PacketLen;
 25909  011B42  C092  F088         	movff	MIWIInterruptHandler@PacketLen,MIWIInterruptHandler@counter
 25910  011B46  0100               	movlb	0	; () banked
 25911  011B48  6B89               	clrf	(MIWIInterruptHandler@counter+1)& (0+255),b
 25912                           
 25913                           ;drv_mrf_miwi_89xa.c: 1326: while(counter >= 1)
 25914  011B4A  D21A               	goto	i2l14151
 25915  011B4C                     i2l14033:
 25916                           
 25917                           ; BSR set to: 0
 25918                           ;drv_mrf_miwi_89xa.c: 1329: if(1)
 25919  011B4C  0100               	movlb	0	; () banked
 25920  011B4E  0788               	decf	MIWIInterruptHandler@counter& (0+255),f,b
 25921  011B50  A0D8               	btfss	status,0,c
 25922  011B52  0789               	decf	(MIWIInterruptHandler@counter+1)& (0+255),f,b
 25923                           
 25924                           ; BSR set to: 0
 25925                           ;drv_mrf_miwi_89xa.c: 1330: {
 25926                           ;drv_mrf_miwi_89xa.c: 1332: if( bAck )
 25927  011B54  0100               	movlb	0	; () banked
 25928  011B56  518F               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 25929  011B58  0100               	movlb	0	; () banked
 25930  011B5A  B4D8               	btfsc	status,2,c
 25931  011B5C  D010               	goto	i2l398
 25932                           
 25933                           ; BSR set to: 0
 25934                           ;drv_mrf_miwi_89xa.c: 1333: {
 25935                           ;drv_mrf_miwi_89xa.c: 1334: LATCbits.LATC6 = 0;
 25936  011B5E  9C8B               	bcf	3979,6,c	;volatile
 25937                           
 25938                           ; BSR set to: 0
 25939                           ;drv_mrf_miwi_89xa.c: 1335: ackPacket[RxPacketPtr++] = SPIGet();
 25940  011B60  0100               	movlb	0	; () banked
 25941  011B62  5190               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 25942  011B64  0D01               	mullw	1
 25943  011B66  0E8B               	movlw	low MIWIInterruptHandler@ackPacket
 25944  011B68  24F3               	addwf	prodl,w,c
 25945  011B6A  6ED9               	movwf	fsr2l,c
 25946  011B6C  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 25947  011B6E  20F4               	addwfc	prodh,w,c
 25948  011B70  6EDA               	movwf	fsr2h,c
 25949  011B72  ECF5  F0B7         	call	i2_SPIGet	;wreg free
 25950  011B76  D024               	goto	L11
 25951  011B78                     i2l14041:
 25952  011B78  0100               	movlb	0	; () banked
 25953  011B7A  2B90               	incf	MIWIInterruptHandler@RxPacketPtr& (0+255),f,b
 25954  011B7C  D023               	goto	i2l14049
 25955  011B7E                     i2l398:
 25956                           
 25957                           ; BSR set to: 0
 25958                           ;drv_mrf_miwi_89xa.c: 1339: else
 25959                           ;drv_mrf_miwi_89xa.c: 1340: {
 25960                           ;drv_mrf_miwi_89xa.c: 1341: LATCbits.LATC6 = 0;
 25961  011B7E  9C8B               	bcf	3979,6,c	;volatile
 25962                           
 25963                           ; BSR set to: 0
 25964                           ;drv_mrf_miwi_89xa.c: 1342: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 25965  011B80  0100               	movlb	0	; () banked
 25966  011B82  5190               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 25967  011B84  0D01               	mullw	1
 25968  011B86  0E01               	movlw	1
 25969  011B88  26F3               	addwf	prodl,f,c
 25970  011B8A  0E00               	movlw	0
 25971  011B8C  22F4               	addwfc	prodh,f,c
 25972  011B8E  0E50               	movlw	low _RxPacket
 25973  011B90  0100               	movlb	0	; () banked
 25974  011B92  6F82               	movwf	??_MIWIInterruptHandler& (0+255),b
 25975  011B94  0E03               	movlw	high _RxPacket
 25976  011B96  0100               	movlb	0	; () banked
 25977  011B98  6F83               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 25978  011B9A  50F3               	movf	prodl,w,c
 25979  011B9C  0100               	movlb	0	; () banked
 25980  011B9E  2782               	addwf	??_MIWIInterruptHandler& (0+255),f,b
 25981  011BA0  50F4               	movf	prodh,w,c
 25982  011BA2  0100               	movlb	0	; () banked
 25983  011BA4  2383               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),f,b
 25984  011BA6  0100               	movlb	0	; () banked
 25985  011BA8  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25986  011BAA  0D42               	mullw	66
 25987  011BAC  50F3               	movf	prodl,w,c
 25988  011BAE  0100               	movlb	0	; () banked
 25989  011BB0  2582               	addwf	??_MIWIInterruptHandler& (0+255),w,b
 25990  011BB2  6ED9               	movwf	fsr2l,c
 25991  011BB4  50F4               	movf	prodh,w,c
 25992  011BB6  0100               	movlb	0	; () banked
 25993  011BB8  2183               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),w,b
 25994  011BBA  6EDA               	movwf	fsr2h,c
 25995  011BBC  ECF5  F0B7         	call	i2_SPIGet	;wreg free
 25996  011BC0                     L11:
 25997  011BC0  6EDF               	movwf	indf2,c
 25998  011BC2  D7DA               	goto	i2l14041
 25999  011BC4                     i2l14049:
 26000                           
 26001                           ; BSR set to: 0
 26002                           ;drv_mrf_miwi_89xa.c: 1343: LATCbits.LATC6 = 1;
 26003  011BC4  8C8B               	bsf	3979,6,c	;volatile
 26004                           
 26005                           ; BSR set to: 0
 26006                           ;drv_mrf_miwi_89xa.c: 1344: }
 26007                           ;drv_mrf_miwi_89xa.c: 1347: if( RxPacketPtr >= PacketLen )
 26008                           
 26009                           ; BSR set to: 0
 26010  011BC6  0100               	movlb	0	; () banked
 26011  011BC8  5192               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 26012  011BCA  0100               	movlb	0	; () banked
 26013  011BCC  5D90               	subwf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 26014  011BCE  A0D8               	btfss	status,0,c
 26015  011BD0  D1D7               	goto	i2l14151
 26016                           
 26017                           ; BSR set to: 0
 26018                           ;drv_mrf_miwi_89xa.c: 1348: {
 26019                           ;drv_mrf_miwi_89xa.c: 1349: uint8_t i;
 26020                           ;drv_mrf_miwi_89xa.c: 1351: if( bAck )
 26021  011BD2  0100               	movlb	0	; () banked
 26022  011BD4  518F               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 26023  011BD6  0100               	movlb	0	; () banked
 26024  011BD8  B4D8               	btfsc	status,2,c
 26025  011BDA  D039               	goto	i2l401
 26026                           
 26027                           ; BSR set to: 0
 26028                           ;drv_mrf_miwi_89xa.c: 1352: {
 26029                           ;drv_mrf_miwi_89xa.c: 1354: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 26030  011BDC  0100               	movlb	0	; () banked
 26031  011BDE  518B               	movf	MIWIInterruptHandler@ackPacket& (0+255),w,b
 26032  011BE0  0B03               	andlw	3
 26033  011BE2  0A02               	xorlw	2
 26034  011BE4  A4D8               	btfss	status,2,c
 26035  011BE6  D00D               	goto	i2l14063
 26036                           
 26037                           ; BSR set to: 0
 26038                           ;drv_mrf_miwi_89xa.c: 1355: {
 26039                           ;drv_mrf_miwi_89xa.c: 1356: if( ackPacket[1] == TxMACSeq )
 26040  011BE8  0100               	movlb	0	; () banked
 26041  011BEA  51BA               	movf	_TxMACSeq& (0+255),w,b
 26042  011BEC  0100               	movlb	0	; () banked
 26043  011BEE  198C               	xorwf	(MIWIInterruptHandler@ackPacket+1)& (0+255),w,b
 26044  011BF0  A4D8               	btfss	status,2,c
 26045  011BF2  D003               	goto	i2l403
 26046                           
 26047                           ; BSR set to: 0
 26048                           ;drv_mrf_miwi_89xa.c: 1357: {
 26049                           ;drv_mrf_miwi_89xa.c: 1358: hasAck = 1;
 26050  011BF4  0E01               	movlw	1
 26051  011BF6  0100               	movlb	0	; () banked
 26052  011BF8  6FBC               	movwf	_hasAck& (0+255),b	;volatile
 26053  011BFA                     i2l403:
 26054                           
 26055                           ; BSR set to: 0
 26056                           ;drv_mrf_miwi_89xa.c: 1359: }
 26057                           ;drv_mrf_miwi_89xa.c: 1360: RxPacketPtr = 0;
 26058  011BFA  0E00               	movlw	0
 26059  011BFC  0100               	movlb	0	; () banked
 26060  011BFE  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 26061                           
 26062                           ;drv_mrf_miwi_89xa.c: 1361: goto RETURN_HERE;
 26063  011C00  D1C9               	goto	i2l14155
 26064  011C02                     i2l14063:
 26065                           
 26066                           ; BSR set to: 0
 26067                           ;drv_mrf_miwi_89xa.c: 1363: else
 26068                           ;drv_mrf_miwi_89xa.c: 1365: if( BankIndex >= 2 )
 26069  011C02  0E01               	movlw	1
 26070  011C04  0100               	movlb	0	; () banked
 26071  011C06  6593               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 26072  011C08  D004               	goto	i2l14067
 26073                           
 26074                           ; BSR set to: 0
 26075                           ;drv_mrf_miwi_89xa.c: 1366: {
 26076                           ;drv_mrf_miwi_89xa.c: 1367: RxPacketPtr = 0;
 26077  011C0A  0E00               	movlw	0
 26078  011C0C  0100               	movlb	0	; () banked
 26079  011C0E  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 26080                           
 26081                           ;drv_mrf_miwi_89xa.c: 1368: goto IGNORE_HERE;
 26082  011C10  D784               	goto	i2l14019
 26083  011C12                     i2l14067:
 26084                           
 26085                           ; BSR set to: 0
 26086                           ;drv_mrf_miwi_89xa.c: 1369: }
 26087                           ;drv_mrf_miwi_89xa.c: 1370: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 26088  011C12  0100               	movlb	0	; () banked
 26089  011C14  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26090  011C16  0D42               	mullw	66
 26091  011C18  0E01               	movlw	1
 26092  011C1A  26F3               	addwf	prodl,f,c
 26093  011C1C  0E00               	movlw	0
 26094  011C1E  22F4               	addwfc	prodh,f,c
 26095  011C20  0E50               	movlw	low _RxPacket
 26096  011C22  24F3               	addwf	prodl,w,c
 26097  011C24  6ED9               	movwf	fsr2l,c
 26098  011C26  0E03               	movlw	high _RxPacket
 26099  011C28  20F4               	addwfc	prodh,w,c
 26100  011C2A  6EDA               	movwf	fsr2h,c
 26101  011C2C  C08B  FFDF         	movff	MIWIInterruptHandler@ackPacket,indf2
 26102                           
 26103                           ;drv_mrf_miwi_89xa.c: 1371: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 26104  011C30  0100               	movlb	0	; () banked
 26105  011C32  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26106  011C34  0D42               	mullw	66
 26107  011C36  0E02               	movlw	2
 26108  011C38  26F3               	addwf	prodl,f,c
 26109  011C3A  0E00               	movlw	0
 26110  011C3C  22F4               	addwfc	prodh,f,c
 26111  011C3E  0E50               	movlw	low _RxPacket
 26112  011C40  24F3               	addwf	prodl,w,c
 26113  011C42  6ED9               	movwf	fsr2l,c
 26114  011C44  0E03               	movlw	high _RxPacket
 26115  011C46  20F4               	addwfc	prodh,w,c
 26116  011C48  6EDA               	movwf	fsr2h,c
 26117  011C4A  C08C  FFDF         	movff	MIWIInterruptHandler@ackPacket+1,indf2
 26118  011C4E                     i2l401:
 26119                           
 26120                           ; BSR set to: 0
 26121                           ;drv_mrf_miwi_89xa.c: 1373: }
 26122                           ;drv_mrf_miwi_89xa.c: 1375: RxPacket[BankIndex].PayloadLen = PacketLen;
 26123  011C4E  0100               	movlb	0	; () banked
 26124  011C50  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26125  011C52  0D42               	mullw	66
 26126  011C54  0E41               	movlw	65
 26127  011C56  26F3               	addwf	prodl,f,c
 26128  011C58  0E00               	movlw	0
 26129  011C5A  22F4               	addwfc	prodh,f,c
 26130  011C5C  0E50               	movlw	low _RxPacket
 26131  011C5E  24F3               	addwf	prodl,w,c
 26132  011C60  6ED9               	movwf	fsr2l,c
 26133  011C62  0E03               	movlw	high _RxPacket
 26134  011C64  20F4               	addwfc	prodh,w,c
 26135  011C66  6EDA               	movwf	fsr2h,c
 26136  011C68  C092  FFDF         	movff	MIWIInterruptHandler@PacketLen,indf2
 26137                           
 26138                           ; BSR set to: 0
 26139                           ;drv_mrf_miwi_89xa.c: 1392: {
 26140                           ;drv_mrf_miwi_89xa.c: 1393: uint8_t ackInfoIndex = 0xFF;
 26141  011C6C  0100               	movlb	0	; () banked
 26142  011C6E  6991               	setf	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 26143                           
 26144                           ;drv_mrf_miwi_89xa.c: 1395: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 26145  011C70  0100               	movlb	0	; () banked
 26146  011C72  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26147  011C74  0D42               	mullw	66
 26148  011C76  0E01               	movlw	1
 26149  011C78  26F3               	addwf	prodl,f,c
 26150  011C7A  0E00               	movlw	0
 26151  011C7C  22F4               	addwfc	prodh,f,c
 26152  011C7E  0E50               	movlw	low _RxPacket
 26153  011C80  24F3               	addwf	prodl,w,c
 26154  011C82  6ED9               	movwf	fsr2l,c
 26155  011C84  0E03               	movlw	high _RxPacket
 26156  011C86  20F4               	addwfc	prodh,w,c
 26157  011C88  6EDA               	movwf	fsr2h,c
 26158  011C8A  0103               	movlb	3	; () banked
 26159  011C8C  ACDF               	btfss	indf2,6,c
 26160  011C8E  D058               	goto	i2l14083
 26161                           
 26162                           ; BSR set to: 3
 26163                           ;drv_mrf_miwi_89xa.c: 1396: {
 26164                           ;drv_mrf_miwi_89xa.c: 1397: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 26165  011C90  0E00               	movlw	0
 26166  011C92  0100               	movlb	0	; () banked
 26167  011C94  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 26168  011C96  D047               	goto	i2l14081
 26169  011C98                     i2l14073:
 26170                           
 26171                           ; BSR set to: 0
 26172                           ;drv_mrf_miwi_89xa.c: 1398: {
 26173                           ;drv_mrf_miwi_89xa.c: 1399: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 26174  011C98  0100               	movlb	0	; () banked
 26175  011C9A  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26176  011C9C  0D01               	mullw	1
 26177  011C9E  50F3               	movf	prodl,w,c
 26178  011CA0  0100               	movlb	0	; () banked
 26179  011CA2  25B0               	addwf	(_MACInitParams+1)& (0+255),w,b
 26180  011CA4  6ED9               	movwf	fsr2l,c
 26181  011CA6  50F4               	movf	prodh,w,c
 26182  011CA8  0100               	movlb	0	; () banked
 26183  011CAA  21B1               	addwfc	(_MACInitParams+2)& (0+255),w,b
 26184  011CAC  6EDA               	movwf	fsr2h,c
 26185  011CAE  0100               	movlb	0	; () banked
 26186  011CB0  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26187  011CB2  0D42               	mullw	66
 26188  011CB4  0100               	movlb	0	; () banked
 26189  011CB6  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26190  011CB8  0100               	movlb	0	; () banked
 26191  011CBA  6F83               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 26192  011CBC  6B84               	clrf	(??_MIWIInterruptHandler+2)& (0+255),b
 26193  011CBE  0E03               	movlw	3
 26194  011CC0  0100               	movlb	0	; () banked
 26195  011CC2  2783               	addwf	(??_MIWIInterruptHandler+1)& (0+255),f,b
 26196  011CC4  0E00               	movlw	0
 26197  011CC6  2384               	addwfc	(??_MIWIInterruptHandler+2)& (0+255),f,b
 26198  011CC8  0E50               	movlw	low _RxPacket
 26199  011CCA  0100               	movlb	0	; () banked
 26200  011CCC  6F85               	movwf	(??_MIWIInterruptHandler+3)& (0+255),b
 26201  011CCE  0E03               	movlw	high _RxPacket
 26202  011CD0  0100               	movlb	0	; () banked
 26203  011CD2  6F86               	movwf	(??_MIWIInterruptHandler+4)& (0+255),b
 26204  011CD4  0100               	movlb	0	; () banked
 26205  011CD6  5183               	movf	(??_MIWIInterruptHandler+1)& (0+255),w,b
 26206  011CD8  0100               	movlb	0	; () banked
 26207  011CDA  2785               	addwf	(??_MIWIInterruptHandler+3)& (0+255),f,b
 26208  011CDC  0100               	movlb	0	; () banked
 26209  011CDE  5184               	movf	(??_MIWIInterruptHandler+2)& (0+255),w,b
 26210  011CE0  0100               	movlb	0	; () banked
 26211  011CE2  2386               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),f,b
 26212  011CE4  50F3               	movf	prodl,w,c
 26213  011CE6  0100               	movlb	0	; () banked
 26214  011CE8  2585               	addwf	(??_MIWIInterruptHandler+3)& (0+255),w,b
 26215  011CEA  6EE1               	movwf	fsr1l,c
 26216  011CEC  50F4               	movf	prodh,w,c
 26217  011CEE  0100               	movlb	0	; () banked
 26218  011CF0  2186               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),w,b
 26219  011CF2  6EE2               	movwf	fsr1h,c
 26220  011CF4  50DE               	movf	postinc2,w,c
 26221  011CF6  18E6               	xorwf	postinc1,w,c
 26222  011CF8  B4D8               	btfsc	status,2,c
 26223  011CFA  D013               	goto	i2l14079
 26224                           
 26225                           ; BSR set to: 0
 26226                           ;drv_mrf_miwi_89xa.c: 1400: {
 26227                           ;drv_mrf_miwi_89xa.c: 1401: RxPacketPtr = 0;
 26228  011CFC  0E00               	movlw	0
 26229  011CFE  0100               	movlb	0	; () banked
 26230  011D00  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 26231                           
 26232                           ; BSR set to: 0
 26233                           ;drv_mrf_miwi_89xa.c: 1402: RxPacket[BankIndex].PayloadLen = 0;
 26234  011D02  0100               	movlb	0	; () banked
 26235  011D04  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26236  011D06  0D42               	mullw	66
 26237  011D08  0E41               	movlw	65
 26238  011D0A  26F3               	addwf	prodl,f,c
 26239  011D0C  0E00               	movlw	0
 26240  011D0E  22F4               	addwfc	prodh,f,c
 26241  011D10  0E50               	movlw	low _RxPacket
 26242  011D12  24F3               	addwf	prodl,w,c
 26243  011D14  6ED9               	movwf	fsr2l,c
 26244  011D16  0E03               	movlw	high _RxPacket
 26245  011D18  20F4               	addwfc	prodh,w,c
 26246  011D1A  6EDA               	movwf	fsr2h,c
 26247  011D1C  0E00               	movlw	0
 26248  011D1E  6EDF               	movwf	indf2,c
 26249                           
 26250                           ;drv_mrf_miwi_89xa.c: 1403: goto IGNORE_HERE;
 26251  011D20  D6FC               	goto	i2l14019
 26252  011D22                     i2l14079:
 26253                           
 26254                           ; BSR set to: 0
 26255  011D22  0100               	movlb	0	; () banked
 26256  011D24  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 26257  011D26                     i2l14081:
 26258                           
 26259                           ; BSR set to: 0
 26260  011D26  0100               	movlb	0	; () banked
 26261  011D28  31AF               	rrcf	_MACInitParams& (0+255),w,b
 26262  011D2A  32E8               	rrcf	wreg,f,c
 26263  011D2C  32E8               	rrcf	wreg,f,c
 26264  011D2E  0B0F               	andlw	15
 26265  011D30  0100               	movlb	0	; () banked
 26266  011D32  6F82               	movwf	??_MIWIInterruptHandler& (0+255),b
 26267  011D34  0100               	movlb	0	; () banked
 26268  011D36  5182               	movf	??_MIWIInterruptHandler& (0+255),w,b
 26269  011D38  0100               	movlb	0	; () banked
 26270  011D3A  5D94               	subwf	MIWIInterruptHandler@i& (0+255),w,b
 26271  011D3C  A0D8               	btfss	status,0,c
 26272  011D3E  D7AC               	goto	i2l14073
 26273  011D40                     i2l14083:
 26274                           
 26275                           ;drv_mrf_miwi_89xa.c: 1404: }
 26276                           ;drv_mrf_miwi_89xa.c: 1405: }
 26277                           ;drv_mrf_miwi_89xa.c: 1406: }
 26278                           ;drv_mrf_miwi_89xa.c: 1409: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 26279  011D40  0100               	movlb	0	; () banked
 26280  011D42  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26281  011D44  0D42               	mullw	66
 26282  011D46  0E01               	movlw	1
 26283  011D48  26F3               	addwf	prodl,f,c
 26284  011D4A  0E00               	movlw	0
 26285  011D4C  22F4               	addwfc	prodh,f,c
 26286  011D4E  0E50               	movlw	low _RxPacket
 26287  011D50  24F3               	addwf	prodl,w,c
 26288  011D52  6ED9               	movwf	fsr2l,c
 26289  011D54  0E03               	movlw	high _RxPacket
 26290  011D56  20F4               	addwfc	prodh,w,c
 26291  011D58  6EDA               	movwf	fsr2h,c
 26292  011D5A  0103               	movlb	3	; () banked
 26293  011D5C  AADF               	btfss	indf2,5,c
 26294  011D5E  D058               	goto	i2l14117
 26295                           
 26296                           ; BSR set to: 3
 26297                           ;drv_mrf_miwi_89xa.c: 1410: {
 26298                           ;drv_mrf_miwi_89xa.c: 1412: for(i = 0; i < 2; i++)
 26299  011D60  0E00               	movlw	0
 26300  011D62  0100               	movlb	0	; () banked
 26301  011D64  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 26302  011D66                     i2l14087:
 26303                           
 26304                           ; BSR set to: 0
 26305  011D66  0E01               	movlw	1
 26306  011D68  0100               	movlb	0	; () banked
 26307  011D6A  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 26308  011D6C  D001               	goto	i2l14091
 26309  011D6E  D017               	goto	i2l14097
 26310  011D70                     i2l14091:
 26311                           
 26312                           ; BSR set to: 0
 26313                           ;drv_mrf_miwi_89xa.c: 1413: {
 26314                           ;drv_mrf_miwi_89xa.c: 1414: ackPacket[i] = MACTxBuffer[i];
 26315  011D70  0100               	movlb	0	; () banked
 26316  011D72  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26317  011D74  0D01               	mullw	1
 26318  011D76  0EA0               	movlw	low _MACTxBuffer
 26319  011D78  24F3               	addwf	prodl,w,c
 26320  011D7A  6ED9               	movwf	fsr2l,c
 26321  011D7C  0E02               	movlw	high _MACTxBuffer
 26322  011D7E  20F4               	addwfc	prodh,w,c
 26323  011D80  6EDA               	movwf	fsr2h,c
 26324  011D82  0100               	movlb	0	; () banked
 26325  011D84  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26326  011D86  0D01               	mullw	1
 26327  011D88  0E8B               	movlw	low MIWIInterruptHandler@ackPacket
 26328  011D8A  24F3               	addwf	prodl,w,c
 26329  011D8C  6EE1               	movwf	fsr1l,c
 26330  011D8E  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 26331  011D90  20F4               	addwfc	prodh,w,c
 26332  011D92  6EE2               	movwf	fsr1h,c
 26333  011D94  CFDF FFE7          	movff	indf2,indf1
 26334                           
 26335                           ; BSR set to: 0
 26336  011D98  0100               	movlb	0	; () banked
 26337  011D9A  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 26338  011D9C  D7E4               	goto	i2l14087
 26339  011D9E                     i2l14097:
 26340                           
 26341                           ; BSR set to: 0
 26342                           ;drv_mrf_miwi_89xa.c: 1415: }
 26343                           ;drv_mrf_miwi_89xa.c: 1416: MACTxBuffer[0] = 0x02 | 0x04;
 26344  011D9E  0E06               	movlw	6
 26345  011DA0  0102               	movlb	2	; () banked
 26346  011DA2  6FA0               	movwf	_MACTxBuffer& (0+255),b	;volatile
 26347                           
 26348                           ; BSR set to: 2
 26349                           ;drv_mrf_miwi_89xa.c: 1417: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 26350  011DA4  0100               	movlb	0	; () banked
 26351  011DA6  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26352  011DA8  0D42               	mullw	66
 26353  011DAA  0E02               	movlw	2
 26354  011DAC  26F3               	addwf	prodl,f,c
 26355  011DAE  0E00               	movlw	0
 26356  011DB0  22F4               	addwfc	prodh,f,c
 26357  011DB2  0E50               	movlw	low _RxPacket
 26358  011DB4  24F3               	addwf	prodl,w,c
 26359  011DB6  6ED9               	movwf	fsr2l,c
 26360  011DB8  0E03               	movlw	high _RxPacket
 26361  011DBA  20F4               	addwfc	prodh,w,c
 26362  011DBC  6EDA               	movwf	fsr2h,c
 26363  011DBE  50DF               	movf	indf2,w,c
 26364  011DC0  0102               	movlb	2	; () banked
 26365  011DC2  6FA1               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 26366                           
 26367                           ; BSR set to: 2
 26368                           ;drv_mrf_miwi_89xa.c: 1418: INTCON3bits.INT1IF = 0;
 26369  011DC4  90F0               	bcf	intcon3,0,c	;volatile
 26370                           
 26371                           ; BSR set to: 2
 26372                           ;drv_mrf_miwi_89xa.c: 1419: TxPacket(2, 0);
 26373  011DC6  0E00               	movlw	0
 26374  011DC8  0100               	movlb	0	; () banked
 26375  011DCA  6F6A               	movwf	i2TxPacket@CCA& (0+255),b
 26376  011DCC  0E02               	movlw	2
 26377  011DCE  ECE6  F09E         	call	i2_TxPacket
 26378                           
 26379                           ;drv_mrf_miwi_89xa.c: 1422: for(i = 0; i < 2; i++)
 26380  011DD2  0E00               	movlw	0
 26381  011DD4  0100               	movlb	0	; () banked
 26382  011DD6  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 26383  011DD8                     i2l14107:
 26384                           
 26385                           ; BSR set to: 0
 26386  011DD8  0E01               	movlw	1
 26387  011DDA  0100               	movlb	0	; () banked
 26388  011DDC  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 26389  011DDE  D001               	goto	i2l14111
 26390  011DE0  D017               	goto	i2l14117
 26391  011DE2                     i2l14111:
 26392                           
 26393                           ; BSR set to: 0
 26394                           ;drv_mrf_miwi_89xa.c: 1423: {
 26395                           ;drv_mrf_miwi_89xa.c: 1424: MACTxBuffer[i] = ackPacket[i];
 26396  011DE2  0100               	movlb	0	; () banked
 26397  011DE4  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26398  011DE6  0D01               	mullw	1
 26399  011DE8  0E8B               	movlw	low MIWIInterruptHandler@ackPacket
 26400  011DEA  24F3               	addwf	prodl,w,c
 26401  011DEC  6ED9               	movwf	fsr2l,c
 26402  011DEE  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 26403  011DF0  20F4               	addwfc	prodh,w,c
 26404  011DF2  6EDA               	movwf	fsr2h,c
 26405  011DF4  0100               	movlb	0	; () banked
 26406  011DF6  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26407  011DF8  0D01               	mullw	1
 26408  011DFA  0EA0               	movlw	low _MACTxBuffer
 26409  011DFC  24F3               	addwf	prodl,w,c
 26410  011DFE  6EE1               	movwf	fsr1l,c
 26411  011E00  0E02               	movlw	high _MACTxBuffer
 26412  011E02  20F4               	addwfc	prodh,w,c
 26413  011E04  6EE2               	movwf	fsr1h,c
 26414  011E06  CFDF FFE7          	movff	indf2,indf1
 26415                           
 26416                           ; BSR set to: 0
 26417  011E0A  0100               	movlb	0	; () banked
 26418  011E0C  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 26419  011E0E  D7E4               	goto	i2l14107
 26420  011E10                     i2l14117:
 26421                           
 26422                           ;drv_mrf_miwi_89xa.c: 1425: }
 26423                           ;drv_mrf_miwi_89xa.c: 1426: }
 26424                           ;drv_mrf_miwi_89xa.c: 1430: for(i = 0; i < 5; i++)
 26425  011E10  0E00               	movlw	0
 26426  011E12  0100               	movlb	0	; () banked
 26427  011E14  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 26428  011E16                     i2l14119:
 26429                           
 26430                           ; BSR set to: 0
 26431  011E16  0E04               	movlw	4
 26432  011E18  0100               	movlb	0	; () banked
 26433  011E1A  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 26434  011E1C  D001               	goto	i2l14123
 26435  011E1E  D05A               	goto	i2l14139
 26436  011E20                     i2l14123:
 26437                           
 26438                           ; BSR set to: 0
 26439                           ;drv_mrf_miwi_89xa.c: 1431: {
 26440                           ;drv_mrf_miwi_89xa.c: 1432: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 26441  011E20  0100               	movlb	0	; () banked
 26442  011E22  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26443  011E24  0D06               	mullw	6
 26444  011E26  0E28               	movlw	low _AckInfo
 26445  011E28  24F3               	addwf	prodl,w,c
 26446  011E2A  6ED9               	movwf	fsr2l,c
 26447  011E2C  0E02               	movlw	high _AckInfo
 26448  011E2E  20F4               	addwfc	prodh,w,c
 26449  011E30  6EDA               	movwf	fsr2h,c
 26450  011E32  50DF               	movf	indf2,w,c
 26451  011E34  B4D8               	btfsc	status,2,c
 26452  011E36  D03A               	goto	i2l14129
 26453                           
 26454                           ; BSR set to: 0
 26455  011E38  0100               	movlb	0	; () banked
 26456  011E3A  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26457  011E3C  0D42               	mullw	66
 26458  011E3E  0E02               	movlw	2
 26459  011E40  26F3               	addwf	prodl,f,c
 26460  011E42  0E00               	movlw	0
 26461  011E44  22F4               	addwfc	prodh,f,c
 26462  011E46  0E50               	movlw	low _RxPacket
 26463  011E48  24F3               	addwf	prodl,w,c
 26464  011E4A  6ED9               	movwf	fsr2l,c
 26465  011E4C  0E03               	movlw	high _RxPacket
 26466  011E4E  20F4               	addwfc	prodh,w,c
 26467  011E50  6EDA               	movwf	fsr2h,c
 26468  011E52  0100               	movlb	0	; () banked
 26469  011E54  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26470  011E56  0D06               	mullw	6
 26471  011E58  0E01               	movlw	1
 26472  011E5A  26F3               	addwf	prodl,f,c
 26473  011E5C  0E00               	movlw	0
 26474  011E5E  22F4               	addwfc	prodh,f,c
 26475  011E60  0E28               	movlw	low _AckInfo
 26476  011E62  24F3               	addwf	prodl,w,c
 26477  011E64  6EE1               	movwf	fsr1l,c
 26478  011E66  0E02               	movlw	high _AckInfo
 26479  011E68  20F4               	addwfc	prodh,w,c
 26480  011E6A  6EE2               	movwf	fsr1h,c
 26481  011E6C  50DE               	movf	postinc2,w,c
 26482  011E6E  18E6               	xorwf	postinc1,w,c
 26483  011E70  A4D8               	btfss	status,2,c
 26484  011E72  D01C               	goto	i2l14129
 26485                           
 26486                           ; BSR set to: 0
 26487                           ;drv_mrf_miwi_89xa.c: 1433: {
 26488                           ;drv_mrf_miwi_89xa.c: 1434: AckInfo[i].startTick = MiWi_TickGet();
 26489  011E74  EC52  F0B4         	call	i2_MiWi_TickGet	;wreg free
 26490  011E78  0100               	movlb	0	; () banked
 26491  011E7A  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26492  011E7C  0D06               	mullw	6
 26493  011E7E  0E02               	movlw	2
 26494  011E80  26F3               	addwf	prodl,f,c
 26495  011E82  0E00               	movlw	0
 26496  011E84  22F4               	addwfc	prodh,f,c
 26497  011E86  0E28               	movlw	low _AckInfo
 26498  011E88  24F3               	addwf	prodl,w,c
 26499  011E8A  6ED9               	movwf	fsr2l,c
 26500  011E8C  0E02               	movlw	high _AckInfo
 26501  011E8E  20F4               	addwfc	prodh,w,c
 26502  011E90  6EDA               	movwf	fsr2h,c
 26503  011E92  0100               	movlb	0	; () banked
 26504  011E94  C060  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 26505  011E98  0100               	movlb	0	; () banked
 26506  011E9A  C061  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 26507  011E9E  0100               	movlb	0	; () banked
 26508  011EA0  C062  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 26509  011EA4  0100               	movlb	0	; () banked
 26510  011EA6  C063  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 26511                           
 26512                           ;drv_mrf_miwi_89xa.c: 1435: break;
 26513  011EAA  D014               	goto	i2l14139
 26514  011EAC                     i2l14129:
 26515                           
 26516                           ; BSR set to: 0
 26517                           ;drv_mrf_miwi_89xa.c: 1436: }
 26518                           ;drv_mrf_miwi_89xa.c: 1437: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 26519  011EAC  0100               	movlb	0	; () banked
 26520  011EAE  2991               	incf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 26521  011EB0  A4D8               	btfss	status,2,c
 26522  011EB2  D00D               	goto	i2l14135
 26523                           
 26524                           ; BSR set to: 0
 26525  011EB4  0100               	movlb	0	; () banked
 26526  011EB6  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26527  011EB8  0D06               	mullw	6
 26528  011EBA  0E28               	movlw	low _AckInfo
 26529  011EBC  24F3               	addwf	prodl,w,c
 26530  011EBE  6ED9               	movwf	fsr2l,c
 26531  011EC0  0E02               	movlw	high _AckInfo
 26532  011EC2  20F4               	addwfc	prodh,w,c
 26533  011EC4  6EDA               	movwf	fsr2h,c
 26534  011EC6  50DF               	movf	indf2,w,c
 26535  011EC8  B4D8               	btfsc	status,2,c
 26536                           
 26537                           ; BSR set to: 0
 26538                           ;drv_mrf_miwi_89xa.c: 1438: {
 26539                           ;drv_mrf_miwi_89xa.c: 1439: ackInfoIndex = i;
 26540  011ECA  C094  F091         	movff	MIWIInterruptHandler@i,MIWIInterruptHandler@ackInfoIndex
 26541  011ECE                     i2l14135:
 26542                           
 26543                           ; BSR set to: 0
 26544  011ECE  0100               	movlb	0	; () banked
 26545  011ED0  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 26546  011ED2  D7A1               	goto	i2l14119
 26547  011ED4                     i2l14139:
 26548                           
 26549                           ; BSR set to: 0
 26550                           ;drv_mrf_miwi_89xa.c: 1440: }
 26551                           ;drv_mrf_miwi_89xa.c: 1441: }
 26552                           ;drv_mrf_miwi_89xa.c: 1443: if( i >= 5 )
 26553  011ED4  0E04               	movlw	4
 26554  011ED6  0100               	movlb	0	; () banked
 26555  011ED8  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 26556  011EDA  D05C               	goto	i2l14155
 26557                           
 26558                           ; BSR set to: 0
 26559                           ;drv_mrf_miwi_89xa.c: 1444: {
 26560                           ;drv_mrf_miwi_89xa.c: 1445: if( ackInfoIndex < 5 )
 26561  011EDC  0E05               	movlw	5
 26562  011EDE  0100               	movlb	0	; () banked
 26563  011EE0  6191               	cpfslt	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 26564  011EE2  D042               	goto	i2l14149
 26565                           
 26566                           ; BSR set to: 0
 26567                           ;drv_mrf_miwi_89xa.c: 1446: {
 26568                           ;drv_mrf_miwi_89xa.c: 1447: AckInfo[ackInfoIndex].Valid = 1;
 26569  011EE4  0100               	movlb	0	; () banked
 26570  011EE6  5191               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 26571  011EE8  0D06               	mullw	6
 26572  011EEA  0E28               	movlw	low _AckInfo
 26573  011EEC  24F3               	addwf	prodl,w,c
 26574  011EEE  6ED9               	movwf	fsr2l,c
 26575  011EF0  0E02               	movlw	high _AckInfo
 26576  011EF2  20F4               	addwfc	prodh,w,c
 26577  011EF4  6EDA               	movwf	fsr2h,c
 26578  011EF6  0E01               	movlw	1
 26579  011EF8  6EDF               	movwf	indf2,c
 26580                           
 26581                           ; BSR set to: 0
 26582                           ;drv_mrf_miwi_89xa.c: 1448: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 26583  011EFA  0100               	movlb	0	; () banked
 26584  011EFC  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26585  011EFE  0D42               	mullw	66
 26586  011F00  0E02               	movlw	2
 26587  011F02  26F3               	addwf	prodl,f,c
 26588  011F04  0E00               	movlw	0
 26589  011F06  22F4               	addwfc	prodh,f,c
 26590  011F08  0E50               	movlw	low _RxPacket
 26591  011F0A  24F3               	addwf	prodl,w,c
 26592  011F0C  6ED9               	movwf	fsr2l,c
 26593  011F0E  0E03               	movlw	high _RxPacket
 26594  011F10  20F4               	addwfc	prodh,w,c
 26595  011F12  6EDA               	movwf	fsr2h,c
 26596  011F14  0100               	movlb	0	; () banked
 26597  011F16  5191               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 26598  011F18  0D06               	mullw	6
 26599  011F1A  0E01               	movlw	1
 26600  011F1C  26F3               	addwf	prodl,f,c
 26601  011F1E  0E00               	movlw	0
 26602  011F20  22F4               	addwfc	prodh,f,c
 26603  011F22  0E28               	movlw	low _AckInfo
 26604  011F24  24F3               	addwf	prodl,w,c
 26605  011F26  6EE1               	movwf	fsr1l,c
 26606  011F28  0E02               	movlw	high _AckInfo
 26607  011F2A  20F4               	addwfc	prodh,w,c
 26608  011F2C  6EE2               	movwf	fsr1h,c
 26609  011F2E  CFDF FFE7          	movff	indf2,indf1
 26610                           
 26611                           ; BSR set to: 0
 26612                           ;drv_mrf_miwi_89xa.c: 1449: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 26613  011F32  EC52  F0B4         	call	i2_MiWi_TickGet	;wreg free
 26614  011F36  0100               	movlb	0	; () banked
 26615  011F38  5191               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 26616  011F3A  0D06               	mullw	6
 26617  011F3C  0E02               	movlw	2
 26618  011F3E  26F3               	addwf	prodl,f,c
 26619  011F40  0E00               	movlw	0
 26620  011F42  22F4               	addwfc	prodh,f,c
 26621  011F44  0E28               	movlw	low _AckInfo
 26622  011F46  24F3               	addwf	prodl,w,c
 26623  011F48  6ED9               	movwf	fsr2l,c
 26624  011F4A  0E02               	movlw	high _AckInfo
 26625  011F4C  20F4               	addwfc	prodh,w,c
 26626  011F4E  6EDA               	movwf	fsr2h,c
 26627  011F50  0100               	movlb	0	; () banked
 26628  011F52  C060  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 26629  011F56  0100               	movlb	0	; () banked
 26630  011F58  C061  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 26631  011F5C  0100               	movlb	0	; () banked
 26632  011F5E  C062  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 26633  011F62  0100               	movlb	0	; () banked
 26634  011F64  C063  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 26635  011F68                     i2l14149:
 26636                           
 26637                           ; BSR set to: 0
 26638                           ;drv_mrf_miwi_89xa.c: 1450: }
 26639                           ;drv_mrf_miwi_89xa.c: 1453: RxPacket[BankIndex].flags.bits.Valid = 1;
 26640  011F68  0100               	movlb	0	; () banked
 26641  011F6A  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26642  011F6C  0D42               	mullw	66
 26643  011F6E  0E50               	movlw	low _RxPacket
 26644  011F70  24F3               	addwf	prodl,w,c
 26645  011F72  6ED9               	movwf	fsr2l,c
 26646  011F74  0E03               	movlw	high _RxPacket
 26647  011F76  20F4               	addwfc	prodh,w,c
 26648  011F78  6EDA               	movwf	fsr2h,c
 26649  011F7A  0103               	movlb	3	; () banked
 26650  011F7C  80DF               	bsf	indf2,0,c
 26651                           
 26652                           ; BSR set to: 3
 26653                           ;drv_mrf_miwi_89xa.c: 1454: }
 26654                           ;drv_mrf_miwi_89xa.c: 1461: }
 26655                           ;drv_mrf_miwi_89xa.c: 1462: goto RETURN_HERE;
 26656  011F7E  D00A               	goto	i2l14155
 26657  011F80                     i2l14151:
 26658  011F80  0100               	movlb	0	; () banked
 26659  011F82  5188               	movf	MIWIInterruptHandler@counter& (0+255),w,b
 26660  011F84  0100               	movlb	0	; () banked
 26661  011F86  1189               	iorwf	(MIWIInterruptHandler@counter+1)& (0+255),w,b
 26662  011F88  B4D8               	btfsc	status,2,c
 26663  011F8A  D004               	goto	i2l14155
 26664  011F8C  D5DF               	goto	i2l14033
 26665  011F8E                     i2l14153:
 26666                           
 26667                           ; BSR set to: 0
 26668                           ;drv_mrf_miwi_89xa.c: 1468: else
 26669                           ;drv_mrf_miwi_89xa.c: 1469: {
 26670                           ;drv_mrf_miwi_89xa.c: 1471: IRQ1_Received = 1;
 26671  011F8E  0E01               	movlw	1
 26672  011F90  0100               	movlb	0	; () banked
 26673  011F92  6FB3               	movwf	_IRQ1_Received& (0+255),b	;volatile
 26674  011F94                     i2l14155:
 26675                           
 26676                           ;drv_mrf_miwi_89xa.c: 1475: INTCON3bits.INT1IF = 0;
 26677  011F94  90F0               	bcf	intcon3,0,c	;volatile
 26678                           
 26679                           ;drv_mrf_miwi_89xa.c: 1477: __nop();
 26680  011F96  F000               	nop	
 26681  011F98                     i2l14159:
 26682                           
 26683                           ;drv_mrf_miwi_89xa.c: 1478: }
 26684                           ;drv_mrf_miwi_89xa.c: 1482: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 26685  011F98  B2F2               	btfsc	intcon,1,c	;volatile
 26686  011F9A  A8F2               	btfss	intcon,4,c	;volatile
 26687  011F9C  D010               	goto	i2l14169
 26688                           
 26689                           ;drv_mrf_miwi_89xa.c: 1483: {
 26690                           ;drv_mrf_miwi_89xa.c: 1492: INTCONbits.INT0IF = 0;
 26691  011F9E  92F2               	bcf	intcon,1,c	;volatile
 26692                           
 26693                           ;drv_mrf_miwi_89xa.c: 1495: if(RF_Mode == 0x60)
 26694  011FA0  0E60               	movlw	96
 26695  011FA2  0100               	movlb	0	; () banked
 26696  011FA4  19B8               	xorwf	_RF_Mode& (0+255),w,b
 26697  011FA6  A4D8               	btfss	status,2,c
 26698  011FA8  D00A               	goto	i2l14169
 26699                           
 26700                           ; BSR set to: 0
 26701                           ;drv_mrf_miwi_89xa.c: 1496: {
 26702                           ;drv_mrf_miwi_89xa.c: 1497: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 26703  011FAA  0E28               	movlw	40
 26704  011FAC  EC87  F0B5         	call	i2_RegisterRead
 26705  011FB0  0100               	movlb	0	; () banked
 26706  011FB2  6F82               	movwf	??_MIWIInterruptHandler& (0+255),b
 26707  011FB4  0100               	movlb	0	; () banked
 26708  011FB6  90D8               	bcf	status,0,c
 26709  011FB8  3182               	rrcf	??_MIWIInterruptHandler& (0+255),w,b
 26710  011FBA  0100               	movlb	0	; () banked
 26711  011FBC  6FB9               	movwf	_RSSIVal& (0+255),b
 26712  011FBE                     i2l14169:
 26713                           
 26714                           ;drv_mrf_miwi_89xa.c: 1498: }
 26715                           ;drv_mrf_miwi_89xa.c: 1502: }
 26716                           ;drv_mrf_miwi_89xa.c: 1506: if(PIR1bits.TMR1IF)
 26717  011FBE  A09E               	btfss	3998,0,c	;volatile
 26718  011FC0  0012               	return	
 26719                           
 26720                           ;drv_mrf_miwi_89xa.c: 1507: {
 26721                           ;drv_mrf_miwi_89xa.c: 1508: if(PIE1bits.TMR1IE)
 26722  011FC2  A09D               	btfss	3997,0,c	;volatile
 26723  011FC4  0012               	return	
 26724                           
 26725                           ;drv_mrf_miwi_89xa.c: 1509: {
 26726                           ;drv_mrf_miwi_89xa.c: 1511: PIR1bits.TMR1IF = 0;
 26727  011FC6  909E               	bcf	3998,0,c	;volatile
 26728                           
 26729                           ;drv_mrf_miwi_89xa.c: 1512: timerExtension1++;
 26730  011FC8  0100               	movlb	0	; () banked
 26731  011FCA  2BBE               	incf	_timerExtension1& (0+255),f,b	;volatile
 26732                           
 26733                           ; BSR set to: 0
 26734                           ;drv_mrf_miwi_89xa.c: 1513: if(timerExtension1 == 0)
 26735  011FCC  0100               	movlb	0	; () banked
 26736  011FCE  51BE               	movf	_timerExtension1& (0+255),w,b	;volatile
 26737  011FD0  A4D8               	btfss	status,2,c
 26738  011FD2  0012               	return	
 26739                           
 26740                           ; BSR set to: 0
 26741                           ;drv_mrf_miwi_89xa.c: 1514: {
 26742                           ;drv_mrf_miwi_89xa.c: 1515: timerExtension2++;
 26743  011FD4  0100               	movlb	0	; () banked
 26744  011FD6  2BBF               	incf	_timerExtension2& (0+255),f,b	;volatile
 26745                           
 26746                           ; BSR set to: 0
 26747                           
 26748                           ; BSR set to: 0
 26749                           
 26750                           ; BSR set to: 0
 26751  011FD8  0012               	return	
 26752  011FDA                     __end_of_MIWIInterruptHandler:
 26753                           	opt stack 0
 26754                           pclatu	equ	0xFFB
 26755                           pclath	equ	0xFFA
 26756                           tblptru	equ	0xFF8
 26757                           tblptrh	equ	0xFF7
 26758                           tblptrl	equ	0xFF6
 26759                           tablat	equ	0xFF5
 26760                           prodh	equ	0xFF4
 26761                           prodl	equ	0xFF3
 26762                           intcon	equ	0xFF2
 26763                           intcon2	equ	0xFF1
 26764                           intcon3	equ	0xFF0
 26765                           indf0	equ	0xFEF
 26766                           postinc0	equ	0xFEE
 26767                           plusw0	equ	0xFEB
 26768                           fsr0h	equ	0xFEA
 26769                           fsr0l	equ	0xFE9
 26770                           wreg	equ	0xFE8
 26771                           indf1	equ	0xFE7
 26772                           postinc1	equ	0xFE6
 26773                           postdec1	equ	0xFE5
 26774                           fsr1h	equ	0xFE2
 26775                           fsr1l	equ	0xFE1
 26776                           bsr	equ	0xFE0
 26777                           indf2	equ	0xFDF
 26778                           postinc2	equ	0xFDE
 26779                           postdec2	equ	0xFDD
 26780                           plusw2	equ	0xFDB
 26781                           fsr2h	equ	0xFDA
 26782                           fsr2l	equ	0xFD9
 26783                           status	equ	0xFD8
 26784                           
 26785 ;; *************** function i2_TxPacket *****************
 26786 ;; Defined at:
 26787 ;;		line 295 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26788 ;; Parameters:    Size  Location     Type
 26789 ;;  TxPacketLen     1    wreg     unsigned char 
 26790 ;;  CCA             1   10[BANK0 ] unsigned char 
 26791 ;; Auto vars:     Size  Location     Type
 26792 ;;  TxPacketLen     1   31[BANK0 ] unsigned char 
 26793 ;;  TxPacket        4   23[BANK0 ] struct _MIWI_TICK
 26794 ;;  TxPacket        4   19[BANK0 ] struct _MIWI_TICK
 26795 ;;  TxPacket        1   33[BANK0 ] unsigned char 
 26796 ;;  TxPacket        1   32[BANK0 ] unsigned char 
 26797 ;;  TxPacket        1   30[BANK0 ] unsigned char 
 26798 ;;  TxPacket        1   29[BANK0 ] unsigned char 
 26799 ;;  TxPacket        1   28[BANK0 ] unsigned char 
 26800 ;;  TxPacket        1   27[BANK0 ] unsigned char 
 26801 ;; Return value:  Size  Location     Type
 26802 ;;                  1    wreg      unsigned char 
 26803 ;; Registers used:
 26804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26805 ;; Tracked objects:
 26806 ;;		On entry : 0/0
 26807 ;;		On exit  : 0/0
 26808 ;;		Unchanged: 0/0
 26809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26810 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26811 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26812 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26813 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26814 ;;Total ram usage:       24 bytes
 26815 ;; Hardware stack levels used:    1
 26816 ;; Hardware stack levels required when called:    3
 26817 ;; This function calls:
 26818 ;;		i2_MiWi_TickGet
 26819 ;;		i2_RegisterRead
 26820 ;;		i2_RegisterSet
 26821 ;;		i2_SetRFMode
 26822 ;;		i2_WriteFIFO
 26823 ;; This function is called by:
 26824 ;;		_MIWIInterruptHandler
 26825 ;; This function uses a non-reentrant model
 26826 ;;
 26827                           
 26828                           	psect	text87
 26829  013DCC                     __ptext87:
 26830                           	opt stack 0
 26831  013DCC                     i2_TxPacket:
 26832                           	opt stack 11
 26833                           
 26834                           ;incstack = 0
 26835                           ;i2TxPacket@TxPacketLen stored from wreg
 26836  013DCC  0100               	movlb	0	; () banked
 26837  013DCE  6F7F               	movwf	i2TxPacket@TxPacketLen& (0+255),b
 26838                           
 26839                           ;drv_mrf_miwi_89xa.c: 297: bool status;
 26840                           ;drv_mrf_miwi_89xa.c: 298: uint8_t i;
 26841                           ;drv_mrf_miwi_89xa.c: 299: MIWI_TICK t1, t2;
 26842                           ;drv_mrf_miwi_89xa.c: 301: uint8_t CCARetries;
 26843                           ;drv_mrf_miwi_89xa.c: 302: uint8_t rssival;
 26844                           ;drv_mrf_miwi_89xa.c: 306: uint8_t reTry = 3;
 26845  013DD0  0E03               	movlw	3
 26846  013DD2  0100               	movlb	0	; () banked
 26847  013DD4  6F7D               	movwf	i2TxPacket@reTry& (0+255),b
 26848                           
 26849                           ;drv_mrf_miwi_89xa.c: 310: while( reTry-- )
 26850  013DD6  D0C8               	goto	i2l13817
 26851  013DD8                     i2l13751:
 26852                           
 26853                           ; BSR set to: 0
 26854                           ;drv_mrf_miwi_89xa.c: 312: {
 26855                           ;drv_mrf_miwi_89xa.c: 313: uint8_t allowedTxFailure;
 26856                           ;drv_mrf_miwi_89xa.c: 314: allowedTxFailure = 0;
 26857  013DD8  0E00               	movlw	0
 26858  013DDA  0100               	movlb	0	; () banked
 26859  013DDC  6F7E               	movwf	i2TxPacket@allowedTxFailure& (0+255),b
 26860  013DDE                     i2l258:
 26861                           
 26862                           ; BSR set to: 0
 26863                           ;drv_mrf_miwi_89xa.c: 319: hasAck = 0;
 26864  013DDE  0E00               	movlw	0
 26865  013DE0  0100               	movlb	0	; () banked
 26866  013DE2  6FBC               	movwf	_hasAck& (0+255),b	;volatile
 26867                           
 26868                           ;drv_mrf_miwi_89xa.c: 323: CCARetries = 0;
 26869  013DE4  0E00               	movlw	0
 26870  013DE6  0100               	movlb	0	; () banked
 26871  013DE8  6F7C               	movwf	i2TxPacket@CCARetries& (0+255),b
 26872                           
 26873                           ; BSR set to: 0
 26874                           ;drv_mrf_miwi_89xa.c: 325: if( CCA )
 26875  013DEA  0100               	movlb	0	; () banked
 26876  013DEC  516A               	movf	i2TxPacket@CCA& (0+255),w,b
 26877  013DEE  0100               	movlb	0	; () banked
 26878  013DF0  B4D8               	btfsc	status,2,c
 26879  013DF2  D018               	goto	i2l259
 26880  013DF4                     i2l13755:
 26881                           
 26882                           ; BSR set to: 0
 26883                           ;drv_mrf_miwi_89xa.c: 329: rssival = RegisterRead(0x2800>>8);
 26884  013DF4  0E28               	movlw	40
 26885  013DF6  EC87  F0B5         	call	i2_RegisterRead
 26886  013DFA  0100               	movlb	0	; () banked
 26887  013DFC  6F81               	movwf	i2TxPacket@rssival& (0+255),b
 26888                           
 26889                           ; BSR set to: 0
 26890                           ;drv_mrf_miwi_89xa.c: 330: rssival = (rssival>>1);
 26891  013DFE  0100               	movlb	0	; () banked
 26892  013E00  90D8               	bcf	status,0,c
 26893  013E02  3181               	rrcf	i2TxPacket@rssival& (0+255),w,b
 26894  013E04  0100               	movlb	0	; () banked
 26895  013E06  6F81               	movwf	i2TxPacket@rssival& (0+255),b
 26896                           
 26897                           ; BSR set to: 0
 26898                           ;drv_mrf_miwi_89xa.c: 332: if( rssival > 65 )
 26899  013E08  0E41               	movlw	65
 26900  013E0A  0100               	movlb	0	; () banked
 26901  013E0C  6581               	cpfsgt	i2TxPacket@rssival& (0+255),b
 26902  013E0E  D00A               	goto	i2l259
 26903                           
 26904                           ; BSR set to: 0
 26905                           ;drv_mrf_miwi_89xa.c: 333: {
 26906                           ;drv_mrf_miwi_89xa.c: 334: if(CCARetries++ > 4 )
 26907  013E10  0100               	movlb	0	; () banked
 26908  013E12  2B7C               	incf	i2TxPacket@CCARetries& (0+255),f,b
 26909  013E14  057C               	decf	i2TxPacket@CCARetries& (0+255),w,b
 26910  013E16  0100               	movlb	0	; () banked
 26911  013E18  6F6B               	movwf	??i2_TxPacket& (0+255),b
 26912  013E1A  0E04               	movlw	4
 26913  013E1C  0100               	movlb	0	; () banked
 26914  013E1E  656B               	cpfsgt	??i2_TxPacket& (0+255),b
 26915  013E20  D7E9               	goto	i2l13755
 26916  013E22  0012               	return	
 26917  013E24                     i2l259:
 26918                           
 26919                           ; BSR set to: 0
 26920                           ;drv_mrf_miwi_89xa.c: 340: }
 26921                           ;drv_mrf_miwi_89xa.c: 341: }
 26922                           ;drv_mrf_miwi_89xa.c: 346: INTCONbits.INT0IE = 0;
 26923  013E24  98F2               	bcf	intcon,4,c	;volatile
 26924                           
 26925                           ;drv_mrf_miwi_89xa.c: 348: INTCON3bits.INT1IE = 0;
 26926  013E26  96F0               	bcf	intcon3,3,c	;volatile
 26927                           
 26928                           ; BSR set to: 0
 26929                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x20);
 26930  013E28  0E20               	movlw	32
 26931  013E2A  EC0D  F0B2         	call	i2_SetRFMode
 26932                           
 26933                           ;drv_mrf_miwi_89xa.c: 350: RegisterSet(0x1A00 | (0xC8) | 0x01);
 26934  013E2E  0E1A               	movlw	26
 26935  013E30  0100               	movlb	0	; () banked
 26936  013E32  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 26937  013E34  0EC9               	movlw	201
 26938  013E36  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 26939  013E38  EC26  F0B6         	call	i2_RegisterSet	;wreg free
 26940                           
 26941                           ;drv_mrf_miwi_89xa.c: 351: WriteFIFO(TxPacketLen);
 26942  013E3C  0100               	movlb	0	; () banked
 26943  013E3E  517F               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 26944  013E40  EC6A  F0B6         	call	i2_WriteFIFO
 26945                           
 26946                           ;drv_mrf_miwi_89xa.c: 352: for(i=0; i< TxPacketLen; i++)
 26947  013E44  0E00               	movlw	0
 26948  013E46  0100               	movlb	0	; () banked
 26949  013E48  6F80               	movwf	i2TxPacket@i& (0+255),b
 26950  013E4A  D00E               	goto	i2l13777
 26951  013E4C                     i2l13773:
 26952                           
 26953                           ; BSR set to: 0
 26954                           ;drv_mrf_miwi_89xa.c: 353: {
 26955                           ;drv_mrf_miwi_89xa.c: 354: WriteFIFO(MACTxBuffer[i]);
 26956  013E4C  0100               	movlb	0	; () banked
 26957  013E4E  5180               	movf	i2TxPacket@i& (0+255),w,b
 26958  013E50  0D01               	mullw	1
 26959  013E52  0EA0               	movlw	low _MACTxBuffer
 26960  013E54  24F3               	addwf	prodl,w,c
 26961  013E56  6ED9               	movwf	fsr2l,c
 26962  013E58  0E02               	movlw	high _MACTxBuffer
 26963  013E5A  20F4               	addwfc	prodh,w,c
 26964  013E5C  6EDA               	movwf	fsr2h,c
 26965  013E5E  50DF               	movf	indf2,w,c
 26966  013E60  EC6A  F0B6         	call	i2_WriteFIFO
 26967  013E64  0100               	movlb	0	; () banked
 26968  013E66  2B80               	incf	i2TxPacket@i& (0+255),f,b
 26969  013E68                     i2l13777:
 26970                           
 26971                           ; BSR set to: 0
 26972  013E68  0100               	movlb	0	; () banked
 26973  013E6A  517F               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 26974  013E6C  0100               	movlb	0	; () banked
 26975  013E6E  5D80               	subwf	i2TxPacket@i& (0+255),w,b
 26976  013E70  A0D8               	btfss	status,0,c
 26977  013E72  D7EC               	goto	i2l13773
 26978                           
 26979                           ; BSR set to: 0
 26980                           ;drv_mrf_miwi_89xa.c: 355: }
 26981                           ;drv_mrf_miwi_89xa.c: 356: SetRFMode(0x80);
 26982                           
 26983                           ; BSR set to: 0
 26984  013E74  0E80               	movlw	128
 26985  013E76  EC0D  F0B2         	call	i2_SetRFMode
 26986                           
 26987                           ;drv_mrf_miwi_89xa.c: 358: INTCONbits.INT0IE = 1;
 26988  013E7A  88F2               	bsf	intcon,4,c	;volatile
 26989                           
 26990                           ;drv_mrf_miwi_89xa.c: 360: INTCON3bits.INT1IE = 1;
 26991  013E7C  86F0               	bsf	intcon3,3,c	;volatile
 26992  013E7E                     i2l13785:
 26993  013E7E  0100               	movlb	0	; () banked
 26994  013E80  51B3               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 26995  013E82  B4D8               	btfsc	status,2,c
 26996                           
 26997                           ; BSR set to: 0
 26998  013E84  B0F0               	btfsc	intcon3,0,c	;volatile
 26999  013E86  D001               	goto	i2l13789
 27000  013E88  D7FA               	goto	i2l13785
 27001  013E8A                     i2l13789:
 27002                           
 27003                           ; BSR set to: 0
 27004                           ;drv_mrf_miwi_89xa.c: 364: };
 27005                           ;drv_mrf_miwi_89xa.c: 368: IRQ1_Received = 0;
 27006  013E8A  0E00               	movlw	0
 27007  013E8C  0100               	movlb	0	; () banked
 27008  013E8E  6FB3               	movwf	_IRQ1_Received& (0+255),b	;volatile
 27009                           
 27010                           ; BSR set to: 0
 27011                           ;drv_mrf_miwi_89xa.c: 369: SetRFMode(0x20);
 27012  013E90  0E20               	movlw	32
 27013  013E92  EC0D  F0B2         	call	i2_SetRFMode
 27014                           
 27015                           ;drv_mrf_miwi_89xa.c: 370: SetRFMode(0x60);
 27016  013E96  0E60               	movlw	96
 27017  013E98  EC0D  F0B2         	call	i2_SetRFMode
 27018                           
 27019                           ;drv_mrf_miwi_89xa.c: 373: if( (MACTxBuffer[0] & 0x20) > 0 )
 27020  013E9C  0102               	movlb	2	; () banked
 27021  013E9E  ABA0               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 27022  013EA0  D05F               	goto	i2l13815
 27023                           
 27024                           ; BSR set to: 2
 27025                           ;drv_mrf_miwi_89xa.c: 374: {
 27026                           ;drv_mrf_miwi_89xa.c: 375: TxMACSeq = MACTxBuffer[1];
 27027  013EA2  C2A1  F0BA         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 27028                           
 27029                           ; BSR set to: 2
 27030                           ;drv_mrf_miwi_89xa.c: 376: t1 = MiWi_TickGet();
 27031  013EA6  EC52  F0B4         	call	i2_MiWi_TickGet	;wreg free
 27032  013EAA  C060  F073         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 27033  013EAE  C061  F074         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 27034  013EB2  C062  F075         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 27035  013EB6  C063  F076         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 27036  013EBA                     i2l13801:
 27037                           
 27038                           ;drv_mrf_miwi_89xa.c: 378: {
 27039                           ;drv_mrf_miwi_89xa.c: 379: if( hasAck )
 27040  013EBA  0100               	movlb	0	; () banked
 27041  013EBC  51BC               	movf	_hasAck& (0+255),w,b	;volatile
 27042  013EBE  B4D8               	btfsc	status,2,c
 27043  013EC0  D004               	goto	i2l13805
 27044                           
 27045                           ; BSR set to: 0
 27046                           ;drv_mrf_miwi_89xa.c: 380: {
 27047                           ;drv_mrf_miwi_89xa.c: 381: status = 1;
 27048  013EC2  0E01               	movlw	1
 27049  013EC4  0100               	movlb	0	; () banked
 27050  013EC6  6F7B               	movwf	i2TxPacket@status& (0+255),b
 27051                           
 27052                           ;drv_mrf_miwi_89xa.c: 382: goto TX_END_HERE;
 27053  013EC8  0012               	return	
 27054  013ECA                     i2l13805:
 27055                           
 27056                           ; BSR set to: 0
 27057                           ;drv_mrf_miwi_89xa.c: 383: }
 27058                           ;drv_mrf_miwi_89xa.c: 384: t2 = MiWi_TickGet();
 27059  013ECA  EC52  F0B4         	call	i2_MiWi_TickGet	;wreg free
 27060  013ECE  C060  F077         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 27061  013ED2  C061  F078         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 27062  013ED6  C062  F079         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 27063  013EDA  C063  F07A         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 27064                           
 27065                           ;drv_mrf_miwi_89xa.c: 385: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 27066  013EDE  C073  F06B         	movff	i2TxPacket@t1,??i2_TxPacket
 27067  013EE2  C074  F06C         	movff	i2TxPacket@t1+1,??i2_TxPacket+1
 27068  013EE6  C075  F06D         	movff	i2TxPacket@t1+2,??i2_TxPacket+2
 27069  013EEA  C076  F06E         	movff	i2TxPacket@t1+3,??i2_TxPacket+3
 27070  013EEE  0100               	movlb	0	; () banked
 27071  013EF0  1F6B               	comf	??i2_TxPacket& (0+255),f,b
 27072  013EF2  1F6C               	comf	(??i2_TxPacket+1)& (0+255),f,b
 27073  013EF4  1F6D               	comf	(??i2_TxPacket+2)& (0+255),f,b
 27074  013EF6  1F6E               	comf	(??i2_TxPacket+3)& (0+255),f,b
 27075  013EF8  2B6B               	incf	??i2_TxPacket& (0+255),f,b
 27076  013EFA  0E00               	movlw	0
 27077  013EFC  236C               	addwfc	(??i2_TxPacket+1)& (0+255),f,b
 27078  013EFE  236D               	addwfc	(??i2_TxPacket+2)& (0+255),f,b
 27079  013F00  236E               	addwfc	(??i2_TxPacket+3)& (0+255),f,b
 27080  013F02  0100               	movlb	0	; () banked
 27081  013F04  5177               	movf	i2TxPacket@t2& (0+255),w,b
 27082  013F06  0100               	movlb	0	; () banked
 27083  013F08  256B               	addwf	??i2_TxPacket& (0+255),w,b
 27084  013F0A  0100               	movlb	0	; () banked
 27085  013F0C  6F6F               	movwf	(??i2_TxPacket+4)& (0+255),b
 27086  013F0E  0100               	movlb	0	; () banked
 27087  013F10  5178               	movf	(i2TxPacket@t2+1)& (0+255),w,b
 27088  013F12  0100               	movlb	0	; () banked
 27089  013F14  216C               	addwfc	(??i2_TxPacket+1)& (0+255),w,b
 27090  013F16  0100               	movlb	0	; () banked
 27091  013F18  6F70               	movwf	(??i2_TxPacket+5)& (0+255),b
 27092  013F1A  0100               	movlb	0	; () banked
 27093  013F1C  5179               	movf	(i2TxPacket@t2+2)& (0+255),w,b
 27094  013F1E  0100               	movlb	0	; () banked
 27095  013F20  216D               	addwfc	(??i2_TxPacket+2)& (0+255),w,b
 27096  013F22  0100               	movlb	0	; () banked
 27097  013F24  6F71               	movwf	(??i2_TxPacket+6)& (0+255),b
 27098  013F26  0100               	movlb	0	; () banked
 27099  013F28  517A               	movf	(i2TxPacket@t2+3)& (0+255),w,b
 27100  013F2A  0100               	movlb	0	; () banked
 27101  013F2C  216E               	addwfc	(??i2_TxPacket+3)& (0+255),w,b
 27102  013F2E  0100               	movlb	0	; () banked
 27103  013F30  6F72               	movwf	(??i2_TxPacket+7)& (0+255),b
 27104  013F32  0100               	movlb	0	; () banked
 27105  013F34  5172               	movf	(??i2_TxPacket+7)& (0+255),w,b
 27106  013F36  0100               	movlb	0	; () banked
 27107  013F38  1171               	iorwf	(??i2_TxPacket+6)& (0+255),w,b
 27108  013F3A  E108               	bnz	i2l13811
 27109  013F3C  0EA9               	movlw	169
 27110  013F3E  0100               	movlb	0	; () banked
 27111  013F40  5D6F               	subwf	(??i2_TxPacket+4)& (0+255),w,b
 27112  013F42  0E61               	movlw	97
 27113  013F44  0100               	movlb	0	; () banked
 27114  013F46  5970               	subwfb	(??i2_TxPacket+5)& (0+255),w,b
 27115  013F48  A0D8               	btfss	status,0,c
 27116  013F4A  D7B7               	goto	i2l13801
 27117  013F4C                     i2l13811:
 27118                           
 27119                           ; BSR set to: 0
 27120                           ;drv_mrf_miwi_89xa.c: 388: }
 27121                           ;drv_mrf_miwi_89xa.c: 389: }
 27122                           ;drv_mrf_miwi_89xa.c: 391: if(allowedTxFailure++ <= 3)
 27123  013F4C  0100               	movlb	0	; () banked
 27124  013F4E  2B7E               	incf	i2TxPacket@allowedTxFailure& (0+255),f,b
 27125  013F50  057E               	decf	i2TxPacket@allowedTxFailure& (0+255),w,b
 27126  013F52  0100               	movlb	0	; () banked
 27127  013F54  6F6B               	movwf	??i2_TxPacket& (0+255),b
 27128  013F56  0E04               	movlw	4
 27129  013F58  0100               	movlb	0	; () banked
 27130  013F5A  616B               	cpfslt	??i2_TxPacket& (0+255),b
 27131  013F5C  D005               	goto	i2l13817
 27132  013F5E  D73F               	goto	i2l258
 27133  013F60                     i2l13815:
 27134                           
 27135                           ;drv_mrf_miwi_89xa.c: 395: else
 27136                           ;drv_mrf_miwi_89xa.c: 397: {
 27137                           ;drv_mrf_miwi_89xa.c: 398: status = 1;
 27138  013F60  0E01               	movlw	1
 27139  013F62  0100               	movlb	0	; () banked
 27140  013F64  6F7B               	movwf	i2TxPacket@status& (0+255),b
 27141                           
 27142                           ;drv_mrf_miwi_89xa.c: 399: goto TX_END_HERE;
 27143  013F66  0012               	return	
 27144  013F68                     i2l13817:
 27145                           
 27146                           ; BSR set to: 0
 27147  013F68  0100               	movlb	0	; () banked
 27148  013F6A  077D               	decf	i2TxPacket@reTry& (0+255),f,b
 27149  013F6C  0100               	movlb	0	; () banked
 27150  013F6E  297D               	incf	i2TxPacket@reTry& (0+255),w,b
 27151  013F70  A4D8               	btfss	status,2,c
 27152  013F72  D732               	goto	i2l13751
 27153                           
 27154                           ; BSR set to: 0
 27155                           ;drv_mrf_miwi_89xa.c: 400: }
 27156                           ;drv_mrf_miwi_89xa.c: 401: }
 27157                           ;drv_mrf_miwi_89xa.c: 403: status = 0;
 27158                           
 27159                           ; BSR set to: 0
 27160  013F74  0E00               	movlw	0
 27161  013F76  0100               	movlb	0	; () banked
 27162  013F78  6F7B               	movwf	i2TxPacket@status& (0+255),b
 27163                           
 27164                           ; BSR set to: 0
 27165                           
 27166                           ;drv_mrf_miwi_89xa.c: 404: TX_END_HERE:
 27167  013F7A  0012               	return	
 27168  013F7C                     __end_ofi2_TxPacket:
 27169                           	opt stack 0
 27170                           pclatu	equ	0xFFB
 27171                           pclath	equ	0xFFA
 27172                           tblptru	equ	0xFF8
 27173                           tblptrh	equ	0xFF7
 27174                           tblptrl	equ	0xFF6
 27175                           tablat	equ	0xFF5
 27176                           prodh	equ	0xFF4
 27177                           prodl	equ	0xFF3
 27178                           intcon	equ	0xFF2
 27179                           intcon2	equ	0xFF1
 27180                           intcon3	equ	0xFF0
 27181                           indf0	equ	0xFEF
 27182                           postinc0	equ	0xFEE
 27183                           plusw0	equ	0xFEB
 27184                           fsr0h	equ	0xFEA
 27185                           fsr0l	equ	0xFE9
 27186                           wreg	equ	0xFE8
 27187                           indf1	equ	0xFE7
 27188                           postinc1	equ	0xFE6
 27189                           postdec1	equ	0xFE5
 27190                           fsr1h	equ	0xFE2
 27191                           fsr1l	equ	0xFE1
 27192                           bsr	equ	0xFE0
 27193                           indf2	equ	0xFDF
 27194                           postinc2	equ	0xFDE
 27195                           postdec2	equ	0xFDD
 27196                           plusw2	equ	0xFDB
 27197                           fsr2h	equ	0xFDA
 27198                           fsr2l	equ	0xFD9
 27199                           status	equ	0xFD8
 27200                           
 27201 ;; *************** function i2_WriteFIFO *****************
 27202 ;; Defined at:
 27203 ;;		line 251 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27204 ;; Parameters:    Size  Location     Type
 27205 ;;  Data            1    wreg     unsigned char 
 27206 ;; Auto vars:     Size  Location     Type
 27207 ;;  Data            1    2[BANK0 ] unsigned char 
 27208 ;;  WriteFIFO       1    4[BANK0 ] unsigned char 
 27209 ;;  WriteFIFO       1    3[BANK0 ] unsigned char 
 27210 ;; Return value:  Size  Location     Type
 27211 ;;		None               void
 27212 ;; Registers used:
 27213 ;;		wreg, status,2, cstack
 27214 ;; Tracked objects:
 27215 ;;		On entry : 0/0
 27216 ;;		On exit  : 0/0
 27217 ;;		Unchanged: 0/0
 27218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27220 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27222 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27223 ;;Total ram usage:        3 bytes
 27224 ;; Hardware stack levels used:    1
 27225 ;; Hardware stack levels required when called:    1
 27226 ;; This function calls:
 27227 ;;		i2_SPIPut
 27228 ;; This function is called by:
 27229 ;;		i2_TxPacket
 27230 ;; This function uses a non-reentrant model
 27231 ;;
 27232                           
 27233                           	psect	text88
 27234  016CD4                     __ptext88:
 27235                           	opt stack 0
 27236  016CD4                     i2_WriteFIFO:
 27237                           	opt stack 12
 27238                           
 27239                           ; BSR set to: 0
 27240                           ;incstack = 0
 27241                           ;i2WriteFIFO@Data stored from wreg
 27242  016CD4  0100               	movlb	0	; () banked
 27243  016CD6  6F62               	movwf	i2WriteFIFO@Data& (0+255),b
 27244                           
 27245                           ;drv_mrf_miwi_89xa.c: 253: uint8_t IRQ1select = INTCON3bits.INT1IE;
 27246  016CD8  0E00               	movlw	0
 27247  016CDA  B6F0               	btfsc	intcon3,3,c	;volatile
 27248  016CDC  0E01               	movlw	1
 27249  016CDE  0100               	movlb	0	; () banked
 27250  016CE0  6F63               	movwf	i2WriteFIFO@IRQ1select& (0+255),b
 27251                           
 27252                           ;drv_mrf_miwi_89xa.c: 255: bool IRQ0select = INTCONbits.INT0IE;
 27253  016CE2  0E00               	movlw	0
 27254  016CE4  B8F2               	btfsc	intcon,4,c	;volatile
 27255  016CE6  0E01               	movlw	1
 27256  016CE8  0100               	movlb	0	; () banked
 27257  016CEA  6F64               	movwf	i2WriteFIFO@IRQ0select& (0+255),b
 27258                           
 27259                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.INT0IE = 0;
 27260  016CEC  98F2               	bcf	intcon,4,c	;volatile
 27261                           
 27262                           ;drv_mrf_miwi_89xa.c: 260: INTCON3bits.INT1IE = 0;
 27263  016CEE  96F0               	bcf	intcon3,3,c	;volatile
 27264                           
 27265                           ;drv_mrf_miwi_89xa.c: 261: LATCbits.LATC6 = 0;
 27266  016CF0  9C8B               	bcf	3979,6,c	;volatile
 27267                           
 27268                           ; BSR set to: 0
 27269                           ;drv_mrf_miwi_89xa.c: 262: SPIPut(Data);
 27270  016CF2  0100               	movlb	0	; () banked
 27271  016CF4  5162               	movf	i2WriteFIFO@Data& (0+255),w,b
 27272  016CF6  ECB2  F0B7         	call	i2_SPIPut
 27273                           
 27274                           ;drv_mrf_miwi_89xa.c: 263: LATCbits.LATC6 = 1;
 27275  016CFA  8C8B               	bsf	3979,6,c	;volatile
 27276                           
 27277                           ;drv_mrf_miwi_89xa.c: 264: INTCON3bits.INT1IE = IRQ1select;
 27278  016CFC  0100               	movlb	0	; () banked
 27279  016CFE  B163               	btfsc	i2WriteFIFO@IRQ1select& (0+255),0,b
 27280  016D00  D002               	bra	i2u1554_45
 27281  016D02  96F0               	bcf	intcon3,3,c	;volatile
 27282  016D04  D001               	bra	i2u1554_46
 27283  016D06                     i2u1554_45:
 27284  016D06  86F0               	bsf	intcon3,3,c	;volatile
 27285  016D08                     i2u1554_46:
 27286                           
 27287                           ;drv_mrf_miwi_89xa.c: 267: INTCONbits.INT0IE = IRQ0select;
 27288  016D08  0100               	movlb	0	; () banked
 27289  016D0A  B164               	btfsc	i2WriteFIFO@IRQ0select& (0+255),0,b
 27290  016D0C  D002               	bra	i2u1555_45
 27291  016D0E  98F2               	bcf	intcon,4,c	;volatile
 27292  016D10  D001               	bra	i2u1555_46
 27293  016D12                     i2u1555_45:
 27294  016D12  88F2               	bsf	intcon,4,c	;volatile
 27295  016D14                     i2u1555_46:
 27296  016D14  0012               	return		;funcret
 27297  016D16                     __end_ofi2_WriteFIFO:
 27298                           	opt stack 0
 27299                           pclatu	equ	0xFFB
 27300                           pclath	equ	0xFFA
 27301                           tblptru	equ	0xFF8
 27302                           tblptrh	equ	0xFF7
 27303                           tblptrl	equ	0xFF6
 27304                           tablat	equ	0xFF5
 27305                           prodh	equ	0xFF4
 27306                           prodl	equ	0xFF3
 27307                           intcon	equ	0xFF2
 27308                           intcon2	equ	0xFF1
 27309                           intcon3	equ	0xFF0
 27310                           indf0	equ	0xFEF
 27311                           postinc0	equ	0xFEE
 27312                           plusw0	equ	0xFEB
 27313                           fsr0h	equ	0xFEA
 27314                           fsr0l	equ	0xFE9
 27315                           wreg	equ	0xFE8
 27316                           indf1	equ	0xFE7
 27317                           postinc1	equ	0xFE6
 27318                           postdec1	equ	0xFE5
 27319                           fsr1h	equ	0xFE2
 27320                           fsr1l	equ	0xFE1
 27321                           bsr	equ	0xFE0
 27322                           indf2	equ	0xFDF
 27323                           postinc2	equ	0xFDE
 27324                           postdec2	equ	0xFDD
 27325                           plusw2	equ	0xFDB
 27326                           fsr2h	equ	0xFDA
 27327                           fsr2l	equ	0xFD9
 27328                           status	equ	0xFD8
 27329                           
 27330 ;; *************** function i2_SetRFMode *****************
 27331 ;; Defined at:
 27332 ;;		line 674 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27333 ;; Parameters:    Size  Location     Type
 27334 ;;  mode            1    wreg     unsigned char 
 27335 ;; Auto vars:     Size  Location     Type
 27336 ;;  mode            1    6[BANK0 ] unsigned char 
 27337 ;; Return value:  Size  Location     Type
 27338 ;;		None               void
 27339 ;; Registers used:
 27340 ;;		wreg, status,2, status,0, cstack
 27341 ;; Tracked objects:
 27342 ;;		On entry : 0/0
 27343 ;;		On exit  : 0/0
 27344 ;;		Unchanged: 0/0
 27345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27349 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27350 ;;Total ram usage:        1 bytes
 27351 ;; Hardware stack levels used:    1
 27352 ;; Hardware stack levels required when called:    2
 27353 ;; This function calls:
 27354 ;;		i2_RegisterSet
 27355 ;; This function is called by:
 27356 ;;		i2_TxPacket
 27357 ;; This function uses a non-reentrant model
 27358 ;;
 27359                           
 27360                           	psect	text89
 27361  01641A                     __ptext89:
 27362                           	opt stack 0
 27363  01641A                     i2_SetRFMode:
 27364                           	opt stack 11
 27365                           
 27366                           ;incstack = 0
 27367                           ;i2SetRFMode@mode stored from wreg
 27368  01641A  0100               	movlb	0	; () banked
 27369  01641C  6F66               	movwf	i2SetRFMode@mode& (0+255),b
 27370                           
 27371                           ;drv_mrf_miwi_89xa.c: 676: switch (mode) {
 27372  01641E  D037               	goto	i2l13157
 27373  016420                     i2l13135:
 27374                           
 27375                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 27376  016420  0E00               	movlw	0
 27377  016422  0100               	movlb	0	; () banked
 27378  016424  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 27379  016426  0E96               	movlw	150
 27380  016428  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 27381  01642A  EC26  F0B6         	call	i2_RegisterSet	;wreg free
 27382                           
 27383                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x80;
 27384  01642E  0E80               	movlw	128
 27385  016430  0100               	movlb	0	; () banked
 27386  016432  6FB8               	movwf	_RF_Mode& (0+255),b
 27387                           
 27388                           ;drv_mrf_miwi_89xa.c: 680: break;
 27389  016434  0012               	return	
 27390  016436                     i2l13139:
 27391                           
 27392                           ; BSR set to: 0
 27393                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 27394  016436  0E00               	movlw	0
 27395  016438  0100               	movlb	0	; () banked
 27396  01643A  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 27397  01643C  0E76               	movlw	118
 27398  01643E  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 27399  016440  EC26  F0B6         	call	i2_RegisterSet	;wreg free
 27400                           
 27401                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x60;
 27402  016444  0E60               	movlw	96
 27403  016446  0100               	movlb	0	; () banked
 27404  016448  6FB8               	movwf	_RF_Mode& (0+255),b
 27405                           
 27406                           ;drv_mrf_miwi_89xa.c: 684: break;
 27407  01644A  0012               	return	
 27408  01644C                     i2l13143:
 27409                           
 27410                           ; BSR set to: 0
 27411                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 27412  01644C  0E00               	movlw	0
 27413  01644E  0100               	movlb	0	; () banked
 27414  016450  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 27415  016452  0E56               	movlw	86
 27416  016454  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 27417  016456  EC26  F0B6         	call	i2_RegisterSet	;wreg free
 27418                           
 27419                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x40;
 27420  01645A  0E40               	movlw	64
 27421  01645C  0100               	movlb	0	; () banked
 27422  01645E  6FB8               	movwf	_RF_Mode& (0+255),b
 27423                           
 27424                           ;drv_mrf_miwi_89xa.c: 688: break;
 27425  016460  0012               	return	
 27426  016462                     i2l13147:
 27427                           
 27428                           ; BSR set to: 0
 27429                           ;drv_mrf_miwi_89xa.c: 690: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 27430  016462  0E00               	movlw	0
 27431  016464  0100               	movlb	0	; () banked
 27432  016466  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 27433  016468  0E36               	movlw	54
 27434  01646A  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 27435  01646C  EC26  F0B6         	call	i2_RegisterSet	;wreg free
 27436                           
 27437                           ;drv_mrf_miwi_89xa.c: 691: RF_Mode = 0x20;
 27438  016470  0E20               	movlw	32
 27439  016472  0100               	movlb	0	; () banked
 27440  016474  6FB8               	movwf	_RF_Mode& (0+255),b
 27441                           
 27442                           ;drv_mrf_miwi_89xa.c: 692: break;
 27443  016476  0012               	return	
 27444  016478                     i2l13151:
 27445                           
 27446                           ; BSR set to: 0
 27447                           ;drv_mrf_miwi_89xa.c: 694: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 27448  016478  0E00               	movlw	0
 27449  01647A  0100               	movlb	0	; () banked
 27450  01647C  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 27451  01647E  0E16               	movlw	22
 27452  016480  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 27453  016482  EC26  F0B6         	call	i2_RegisterSet	;wreg free
 27454                           
 27455                           ;drv_mrf_miwi_89xa.c: 695: RF_Mode = 0x00;
 27456  016486  0E00               	movlw	0
 27457  016488  0100               	movlb	0	; () banked
 27458  01648A  6FB8               	movwf	_RF_Mode& (0+255),b
 27459                           
 27460                           ; BSR set to: 0
 27461                           ;drv_mrf_miwi_89xa.c: 697: }
 27462                           
 27463                           ;drv_mrf_miwi_89xa.c: 696: break;
 27464  01648C  0012               	return	
 27465  01648E                     i2l13157:
 27466  01648E  0100               	movlb	0	; () banked
 27467  016490  5166               	movf	i2SetRFMode@mode& (0+255),w,b
 27468                           
 27469                           ; Switch size 1, requested type "space"
 27470                           ; Number of cases is 5, Range of values is 0 to 128
 27471                           ; switch strategies available:
 27472                           ; Name         Instructions Cycles
 27473                           ; simple_byte           16     9 (average)
 27474                           ;	Chosen strategy is simple_byte
 27475  016492  0A00               	xorlw	0	; case 0
 27476  016494  B4D8               	btfsc	status,2,c
 27477  016496  D7F0               	goto	i2l13151
 27478  016498  0A20               	xorlw	32	; case 32
 27479  01649A  B4D8               	btfsc	status,2,c
 27480  01649C  D7E2               	goto	i2l13147
 27481  01649E  0A60               	xorlw	96	; case 64
 27482  0164A0  B4D8               	btfsc	status,2,c
 27483  0164A2  D7D4               	goto	i2l13143
 27484  0164A4  0A20               	xorlw	32	; case 96
 27485  0164A6  B4D8               	btfsc	status,2,c
 27486  0164A8  D7C6               	goto	i2l13139
 27487  0164AA  0AE0               	xorlw	224	; case 128
 27488  0164AC  A4D8               	btfss	status,2,c
 27489  0164AE  0012               	return	
 27490  0164B0  D7B7               	goto	i2l13135
 27491  0164B2                     __end_ofi2_SetRFMode:
 27492                           	opt stack 0
 27493                           pclatu	equ	0xFFB
 27494                           pclath	equ	0xFFA
 27495                           tblptru	equ	0xFF8
 27496                           tblptrh	equ	0xFF7
 27497                           tblptrl	equ	0xFF6
 27498                           tablat	equ	0xFF5
 27499                           prodh	equ	0xFF4
 27500                           prodl	equ	0xFF3
 27501                           intcon	equ	0xFF2
 27502                           intcon2	equ	0xFF1
 27503                           intcon3	equ	0xFF0
 27504                           indf0	equ	0xFEF
 27505                           postinc0	equ	0xFEE
 27506                           plusw0	equ	0xFEB
 27507                           fsr0h	equ	0xFEA
 27508                           fsr0l	equ	0xFE9
 27509                           wreg	equ	0xFE8
 27510                           indf1	equ	0xFE7
 27511                           postinc1	equ	0xFE6
 27512                           postdec1	equ	0xFE5
 27513                           fsr1h	equ	0xFE2
 27514                           fsr1l	equ	0xFE1
 27515                           bsr	equ	0xFE0
 27516                           indf2	equ	0xFDF
 27517                           postinc2	equ	0xFDE
 27518                           postdec2	equ	0xFDD
 27519                           plusw2	equ	0xFDB
 27520                           fsr2h	equ	0xFDA
 27521                           fsr2l	equ	0xFD9
 27522                           status	equ	0xFD8
 27523                           
 27524 ;; *************** function i2_RegisterSet *****************
 27525 ;; Defined at:
 27526 ;;		line 171 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27527 ;; Parameters:    Size  Location     Type
 27528 ;;  setting         2    2[BANK0 ] unsigned int 
 27529 ;; Auto vars:     Size  Location     Type
 27530 ;;  RegisterSet     1    5[BANK0 ] unsigned char 
 27531 ;;  RegisterSet     1    4[BANK0 ] unsigned char 
 27532 ;; Return value:  Size  Location     Type
 27533 ;;		None               void
 27534 ;; Registers used:
 27535 ;;		wreg, status,2, cstack
 27536 ;; Tracked objects:
 27537 ;;		On entry : 0/0
 27538 ;;		On exit  : 0/0
 27539 ;;		Unchanged: 0/0
 27540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27541 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27542 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27544 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27545 ;;Total ram usage:        4 bytes
 27546 ;; Hardware stack levels used:    1
 27547 ;; Hardware stack levels required when called:    1
 27548 ;; This function calls:
 27549 ;;		i2_SPIPut
 27550 ;; This function is called by:
 27551 ;;		i2_TxPacket
 27552 ;;		i2_SetRFMode
 27553 ;; This function uses a non-reentrant model
 27554 ;;
 27555                           
 27556                           	psect	text90
 27557  016C4C                     __ptext90:
 27558                           	opt stack 0
 27559  016C4C                     i2_RegisterSet:
 27560                           	opt stack 11
 27561                           
 27562                           ;drv_mrf_miwi_89xa.c: 173: uint8_t IRQ1select = INTCON3bits.INT1IE;
 27563                           
 27564                           ; BSR set to: 0
 27565                           ;incstack = 0
 27566  016C4C  0E00               	movlw	0
 27567  016C4E  B6F0               	btfsc	intcon3,3,c	;volatile
 27568  016C50  0E01               	movlw	1
 27569  016C52  0100               	movlb	0	; () banked
 27570  016C54  6F64               	movwf	i2RegisterSet@IRQ1select& (0+255),b
 27571                           
 27572                           ;drv_mrf_miwi_89xa.c: 175: bool IRQ0select = INTCONbits.INT0IE;
 27573  016C56  0E00               	movlw	0
 27574  016C58  B8F2               	btfsc	intcon,4,c	;volatile
 27575  016C5A  0E01               	movlw	1
 27576  016C5C  0100               	movlb	0	; () banked
 27577  016C5E  6F65               	movwf	i2RegisterSet@IRQ0select& (0+255),b
 27578                           
 27579                           ; BSR set to: 0
 27580                           ;drv_mrf_miwi_89xa.c: 176: INTCONbits.INT0IE = 0;
 27581  016C60  98F2               	bcf	intcon,4,c	;volatile
 27582                           
 27583                           ; BSR set to: 0
 27584                           ;drv_mrf_miwi_89xa.c: 179: INTCON3bits.INT1IE = 0;
 27585  016C62  96F0               	bcf	intcon3,3,c	;volatile
 27586                           
 27587                           ; BSR set to: 0
 27588                           ;drv_mrf_miwi_89xa.c: 180: LATBbits.LATB3 = 0;
 27589  016C64  968A               	bcf	3978,3,c	;volatile
 27590                           
 27591                           ; BSR set to: 0
 27592                           ;drv_mrf_miwi_89xa.c: 181: SPIPut((uint8_t)(setting >> 8));
 27593  016C66  0100               	movlb	0	; () banked
 27594  016C68  5163               	movf	(i2RegisterSet@setting+1)& (0+255),w,b
 27595  016C6A  ECB2  F0B7         	call	i2_SPIPut
 27596                           
 27597                           ;drv_mrf_miwi_89xa.c: 182: SPIPut((uint8_t)setting);
 27598  016C6E  0100               	movlb	0	; () banked
 27599  016C70  5162               	movf	i2RegisterSet@setting& (0+255),w,b
 27600  016C72  ECB2  F0B7         	call	i2_SPIPut
 27601                           
 27602                           ;drv_mrf_miwi_89xa.c: 183: LATBbits.LATB3 = 1;
 27603  016C76  868A               	bsf	3978,3,c	;volatile
 27604                           
 27605                           ;drv_mrf_miwi_89xa.c: 184: INTCON3bits.INT1IE = IRQ1select;
 27606  016C78  0100               	movlb	0	; () banked
 27607  016C7A  B164               	btfsc	i2RegisterSet@IRQ1select& (0+255),0,b
 27608  016C7C  D002               	bra	i2u1472_45
 27609  016C7E  96F0               	bcf	intcon3,3,c	;volatile
 27610  016C80  D001               	bra	i2u1472_46
 27611  016C82                     i2u1472_45:
 27612  016C82  86F0               	bsf	intcon3,3,c	;volatile
 27613  016C84                     i2u1472_46:
 27614                           
 27615                           ;drv_mrf_miwi_89xa.c: 187: INTCONbits.INT0IE = IRQ0select;
 27616  016C84  0100               	movlb	0	; () banked
 27617  016C86  B165               	btfsc	i2RegisterSet@IRQ0select& (0+255),0,b
 27618  016C88  D002               	bra	i2u1473_45
 27619  016C8A  98F2               	bcf	intcon,4,c	;volatile
 27620  016C8C  D001               	bra	i2u1473_46
 27621  016C8E                     i2u1473_45:
 27622  016C8E  88F2               	bsf	intcon,4,c	;volatile
 27623  016C90                     i2u1473_46:
 27624  016C90  0012               	return		;funcret
 27625  016C92                     __end_ofi2_RegisterSet:
 27626                           	opt stack 0
 27627                           pclatu	equ	0xFFB
 27628                           pclath	equ	0xFFA
 27629                           tblptru	equ	0xFF8
 27630                           tblptrh	equ	0xFF7
 27631                           tblptrl	equ	0xFF6
 27632                           tablat	equ	0xFF5
 27633                           prodh	equ	0xFF4
 27634                           prodl	equ	0xFF3
 27635                           intcon	equ	0xFF2
 27636                           intcon2	equ	0xFF1
 27637                           intcon3	equ	0xFF0
 27638                           indf0	equ	0xFEF
 27639                           postinc0	equ	0xFEE
 27640                           plusw0	equ	0xFEB
 27641                           fsr0h	equ	0xFEA
 27642                           fsr0l	equ	0xFE9
 27643                           wreg	equ	0xFE8
 27644                           indf1	equ	0xFE7
 27645                           postinc1	equ	0xFE6
 27646                           postdec1	equ	0xFE5
 27647                           fsr1h	equ	0xFE2
 27648                           fsr1l	equ	0xFE1
 27649                           bsr	equ	0xFE0
 27650                           indf2	equ	0xFDF
 27651                           postinc2	equ	0xFDE
 27652                           postdec2	equ	0xFDD
 27653                           plusw2	equ	0xFDB
 27654                           fsr2h	equ	0xFDA
 27655                           fsr2l	equ	0xFD9
 27656                           status	equ	0xFD8
 27657                           
 27658 ;; *************** function i2_RegisterRead *****************
 27659 ;; Defined at:
 27660 ;;		line 207 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27661 ;; Parameters:    Size  Location     Type
 27662 ;;  address         1    wreg     unsigned char 
 27663 ;; Auto vars:     Size  Location     Type
 27664 ;;  address         1    5[BANK0 ] unsigned char 
 27665 ;;  RegisterRead    1    4[BANK0 ] unsigned char 
 27666 ;;  RegisterRead    1    3[BANK0 ] unsigned char 
 27667 ;;  RegisterRead    1    2[BANK0 ] unsigned char 
 27668 ;; Return value:  Size  Location     Type
 27669 ;;                  1    wreg      unsigned char 
 27670 ;; Registers used:
 27671 ;;		wreg, status,2, status,0, cstack
 27672 ;; Tracked objects:
 27673 ;;		On entry : 0/0
 27674 ;;		On exit  : 0/0
 27675 ;;		Unchanged: 0/0
 27676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27678 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27680 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27681 ;;Total ram usage:        4 bytes
 27682 ;; Hardware stack levels used:    1
 27683 ;; Hardware stack levels required when called:    2
 27684 ;; This function calls:
 27685 ;;		i2_SPIGet
 27686 ;;		i2_SPIPut
 27687 ;; This function is called by:
 27688 ;;		_MIWIInterruptHandler
 27689 ;;		i2_TxPacket
 27690 ;; This function uses a non-reentrant model
 27691 ;;
 27692                           
 27693                           	psect	text91
 27694  016B0E                     __ptext91:
 27695                           	opt stack 0
 27696  016B0E                     i2_RegisterRead:
 27697                           	opt stack 11
 27698                           
 27699                           ;incstack = 0
 27700                           ;i2RegisterRead@address stored from wreg
 27701  016B0E  0100               	movlb	0	; () banked
 27702  016B10  6F65               	movwf	i2RegisterRead@address& (0+255),b
 27703                           
 27704                           ;drv_mrf_miwi_89xa.c: 209: uint8_t value;
 27705                           ;drv_mrf_miwi_89xa.c: 210: uint8_t IRQ1select = INTCON3bits.INT1IE;
 27706  016B12  0E00               	movlw	0
 27707  016B14  B6F0               	btfsc	intcon3,3,c	;volatile
 27708  016B16  0E01               	movlw	1
 27709  016B18  0100               	movlb	0	; () banked
 27710  016B1A  6F63               	movwf	i2RegisterRead@IRQ1select& (0+255),b
 27711                           
 27712                           ;drv_mrf_miwi_89xa.c: 212: bool IRQ0select = INTCONbits.INT0IE;
 27713  016B1C  0E00               	movlw	0
 27714  016B1E  B8F2               	btfsc	intcon,4,c	;volatile
 27715  016B20  0E01               	movlw	1
 27716  016B22  0100               	movlb	0	; () banked
 27717  016B24  6F64               	movwf	i2RegisterRead@IRQ0select& (0+255),b
 27718                           
 27719                           ;drv_mrf_miwi_89xa.c: 214: INTCONbits.INT0IE = 0;
 27720  016B26  98F2               	bcf	intcon,4,c	;volatile
 27721                           
 27722                           ;drv_mrf_miwi_89xa.c: 217: INTCON3bits.INT1IE = 0;
 27723  016B28  96F0               	bcf	intcon3,3,c	;volatile
 27724                           
 27725                           ;drv_mrf_miwi_89xa.c: 218: LATBbits.LATB3 = 0;
 27726  016B2A  968A               	bcf	3978,3,c	;volatile
 27727                           
 27728                           ; BSR set to: 0
 27729                           ;drv_mrf_miwi_89xa.c: 219: address = (address|0x40);
 27730  016B2C  0100               	movlb	0	; () banked
 27731  016B2E  5165               	movf	i2RegisterRead@address& (0+255),w,b
 27732  016B30  0940               	iorlw	64
 27733  016B32  0100               	movlb	0	; () banked
 27734  016B34  6F65               	movwf	i2RegisterRead@address& (0+255),b
 27735                           
 27736                           ; BSR set to: 0
 27737                           ;drv_mrf_miwi_89xa.c: 220: SPIPut(address);
 27738  016B36  0100               	movlb	0	; () banked
 27739  016B38  5165               	movf	i2RegisterRead@address& (0+255),w,b
 27740  016B3A  ECB2  F0B7         	call	i2_SPIPut
 27741                           
 27742                           ;drv_mrf_miwi_89xa.c: 221: value = SPIGet();
 27743  016B3E  ECF5  F0B7         	call	i2_SPIGet	;wreg free
 27744  016B42  0100               	movlb	0	; () banked
 27745  016B44  6F62               	movwf	i2RegisterRead@value& (0+255),b
 27746                           
 27747                           ; BSR set to: 0
 27748                           ;drv_mrf_miwi_89xa.c: 222: LATBbits.LATB3 = 1;
 27749  016B46  868A               	bsf	3978,3,c	;volatile
 27750                           
 27751                           ; BSR set to: 0
 27752                           ;drv_mrf_miwi_89xa.c: 223: INTCON3bits.INT1IE = IRQ1select;
 27753  016B48  0100               	movlb	0	; () banked
 27754  016B4A  B163               	btfsc	i2RegisterRead@IRQ1select& (0+255),0,b
 27755  016B4C  D002               	bra	i2u1552_45
 27756  016B4E  96F0               	bcf	intcon3,3,c	;volatile
 27757  016B50  D001               	bra	i2u1552_46
 27758  016B52                     i2u1552_45:
 27759  016B52  86F0               	bsf	intcon3,3,c	;volatile
 27760  016B54                     i2u1552_46:
 27761                           
 27762                           ;drv_mrf_miwi_89xa.c: 226: INTCONbits.INT0IE = IRQ0select;
 27763  016B54  0100               	movlb	0	; () banked
 27764  016B56  B164               	btfsc	i2RegisterRead@IRQ0select& (0+255),0,b
 27765  016B58  D002               	bra	i2u1553_45
 27766  016B5A  98F2               	bcf	intcon,4,c	;volatile
 27767  016B5C  D001               	bra	i2u1553_46
 27768  016B5E                     i2u1553_45:
 27769  016B5E  88F2               	bsf	intcon,4,c	;volatile
 27770  016B60                     i2u1553_46:
 27771                           
 27772                           ;drv_mrf_miwi_89xa.c: 229: return value;
 27773  016B60  0100               	movlb	0	; () banked
 27774  016B62  5162               	movf	i2RegisterRead@value& (0+255),w,b
 27775  016B64  0012               	return	
 27776  016B66                     __end_ofi2_RegisterRead:
 27777                           	opt stack 0
 27778                           pclatu	equ	0xFFB
 27779                           pclath	equ	0xFFA
 27780                           tblptru	equ	0xFF8
 27781                           tblptrh	equ	0xFF7
 27782                           tblptrl	equ	0xFF6
 27783                           tablat	equ	0xFF5
 27784                           prodh	equ	0xFF4
 27785                           prodl	equ	0xFF3
 27786                           intcon	equ	0xFF2
 27787                           intcon2	equ	0xFF1
 27788                           intcon3	equ	0xFF0
 27789                           indf0	equ	0xFEF
 27790                           postinc0	equ	0xFEE
 27791                           plusw0	equ	0xFEB
 27792                           fsr0h	equ	0xFEA
 27793                           fsr0l	equ	0xFE9
 27794                           wreg	equ	0xFE8
 27795                           indf1	equ	0xFE7
 27796                           postinc1	equ	0xFE6
 27797                           postdec1	equ	0xFE5
 27798                           fsr1h	equ	0xFE2
 27799                           fsr1l	equ	0xFE1
 27800                           bsr	equ	0xFE0
 27801                           indf2	equ	0xFDF
 27802                           postinc2	equ	0xFDE
 27803                           postdec2	equ	0xFDD
 27804                           plusw2	equ	0xFDB
 27805                           fsr2h	equ	0xFDA
 27806                           fsr2l	equ	0xFD9
 27807                           status	equ	0xFD8
 27808                           
 27809 ;; *************** function i2_SPIGet *****************
 27810 ;; Defined at:
 27811 ;;		line 104 in file "src/18F27J53/spi.c"
 27812 ;; Parameters:    Size  Location     Type
 27813 ;;		None
 27814 ;; Auto vars:     Size  Location     Type
 27815 ;;		None
 27816 ;; Return value:  Size  Location     Type
 27817 ;;                  1    wreg      unsigned char 
 27818 ;; Registers used:
 27819 ;;		wreg, status,2, cstack
 27820 ;; Tracked objects:
 27821 ;;		On entry : 0/0
 27822 ;;		On exit  : 0/0
 27823 ;;		Unchanged: 0/0
 27824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27829 ;;Total ram usage:        0 bytes
 27830 ;; Hardware stack levels used:    1
 27831 ;; Hardware stack levels required when called:    1
 27832 ;; This function calls:
 27833 ;;		i2_SPIPut
 27834 ;; This function is called by:
 27835 ;;		_MIWIInterruptHandler
 27836 ;;		i2_RegisterRead
 27837 ;; This function uses a non-reentrant model
 27838 ;;
 27839                           
 27840                           	psect	text92
 27841  016FEA                     __ptext92:
 27842                           	opt stack 0
 27843  016FEA                     i2_SPIGet:
 27844                           	opt stack 11
 27845                           
 27846                           ;spi.c: 128: SPIPut(0x00);
 27847                           
 27848                           ; BSR set to: 0
 27849                           ;incstack = 0
 27850  016FEA  0E00               	movlw	0
 27851  016FEC  ECB2  F0B7         	call	i2_SPIPut
 27852                           
 27853                           ;spi.c: 129: return SSP2BUF;
 27854  016FF0  5075               	movf	3957,w,c	;volatile
 27855  016FF2  0012               	return	
 27856  016FF4                     __end_ofi2_SPIGet:
 27857                           	opt stack 0
 27858                           pclatu	equ	0xFFB
 27859                           pclath	equ	0xFFA
 27860                           tblptru	equ	0xFF8
 27861                           tblptrh	equ	0xFF7
 27862                           tblptrl	equ	0xFF6
 27863                           tablat	equ	0xFF5
 27864                           prodh	equ	0xFF4
 27865                           prodl	equ	0xFF3
 27866                           intcon	equ	0xFF2
 27867                           intcon2	equ	0xFF1
 27868                           intcon3	equ	0xFF0
 27869                           indf0	equ	0xFEF
 27870                           postinc0	equ	0xFEE
 27871                           plusw0	equ	0xFEB
 27872                           fsr0h	equ	0xFEA
 27873                           fsr0l	equ	0xFE9
 27874                           wreg	equ	0xFE8
 27875                           indf1	equ	0xFE7
 27876                           postinc1	equ	0xFE6
 27877                           postdec1	equ	0xFE5
 27878                           fsr1h	equ	0xFE2
 27879                           fsr1l	equ	0xFE1
 27880                           bsr	equ	0xFE0
 27881                           indf2	equ	0xFDF
 27882                           postinc2	equ	0xFDE
 27883                           postdec2	equ	0xFDD
 27884                           plusw2	equ	0xFDB
 27885                           fsr2h	equ	0xFDA
 27886                           fsr2l	equ	0xFD9
 27887                           status	equ	0xFD8
 27888                           
 27889 ;; *************** function i2_SPIPut *****************
 27890 ;; Defined at:
 27891 ;;		line 45 in file "src/18F27J53/spi.c"
 27892 ;; Parameters:    Size  Location     Type
 27893 ;;  v               1    wreg     unsigned char 
 27894 ;; Auto vars:     Size  Location     Type
 27895 ;;  v               1    1[BANK0 ] unsigned char 
 27896 ;;  SPIPut          1    0[BANK0 ] unsigned char 
 27897 ;; Return value:  Size  Location     Type
 27898 ;;		None               void
 27899 ;; Registers used:
 27900 ;;		wreg
 27901 ;; Tracked objects:
 27902 ;;		On entry : 0/0
 27903 ;;		On exit  : 0/0
 27904 ;;		Unchanged: 0/0
 27905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27907 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27909 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27910 ;;Total ram usage:        2 bytes
 27911 ;; Hardware stack levels used:    1
 27912 ;; This function calls:
 27913 ;;		Nothing
 27914 ;; This function is called by:
 27915 ;;		i2_SPIGet
 27916 ;;		i2_RegisterSet
 27917 ;;		i2_RegisterRead
 27918 ;;		i2_WriteFIFO
 27919 ;; This function uses a non-reentrant model
 27920 ;;
 27921                           
 27922                           	psect	text93
 27923  016F64                     __ptext93:
 27924                           	opt stack 0
 27925  016F64                     i2_SPIPut:
 27926                           	opt stack 12
 27927                           
 27928                           ;incstack = 0
 27929                           ;i2SPIPut@v stored from wreg
 27930  016F64  0100               	movlb	0	; () banked
 27931  016F66  6F61               	movwf	i2SPIPut@v& (0+255),b
 27932                           
 27933                           ;spi.c: 66: {
 27934                           ;spi.c: 68: uint8_t i;
 27935                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 27936  016F68  9EA4               	bcf	4004,7,c	;volatile
 27937                           
 27938                           ;spi.c: 72: i = SSP2BUF;
 27939  016F6A  CF75 F060          	movff	3957,i2SPIPut@i	;volatile
 27940  016F6E                     i2l29:
 27941                           
 27942                           ;spi.c: 75: {
 27943                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 27944  016F6E  9E72               	bcf	3954,7,c	;volatile
 27945                           
 27946                           ;spi.c: 77: SSP2BUF = v;
 27947  016F70  C061  FF75         	movff	i2SPIPut@v,3957	;volatile
 27948                           
 27949                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 27950  016F74  BE72               	btfsc	3954,7,c	;volatile
 27951  016F76  D7FB               	goto	i2l29
 27952  016F78                     i2l31:
 27953  016F78  AEA4               	btfss	4004,7,c	;volatile
 27954  016F7A  D7FE               	goto	i2l31
 27955                           
 27956                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 27957  016F7C  9EA4               	bcf	4004,7,c	;volatile
 27958  016F7E  0012               	return		;funcret
 27959  016F80                     __end_ofi2_SPIPut:
 27960                           	opt stack 0
 27961                           pclatu	equ	0xFFB
 27962                           pclath	equ	0xFFA
 27963                           tblptru	equ	0xFF8
 27964                           tblptrh	equ	0xFF7
 27965                           tblptrl	equ	0xFF6
 27966                           tablat	equ	0xFF5
 27967                           prodh	equ	0xFF4
 27968                           prodl	equ	0xFF3
 27969                           intcon	equ	0xFF2
 27970                           intcon2	equ	0xFF1
 27971                           intcon3	equ	0xFF0
 27972                           indf0	equ	0xFEF
 27973                           postinc0	equ	0xFEE
 27974                           plusw0	equ	0xFEB
 27975                           fsr0h	equ	0xFEA
 27976                           fsr0l	equ	0xFE9
 27977                           wreg	equ	0xFE8
 27978                           indf1	equ	0xFE7
 27979                           postinc1	equ	0xFE6
 27980                           postdec1	equ	0xFE5
 27981                           fsr1h	equ	0xFE2
 27982                           fsr1l	equ	0xFE1
 27983                           bsr	equ	0xFE0
 27984                           indf2	equ	0xFDF
 27985                           postinc2	equ	0xFDE
 27986                           postdec2	equ	0xFDD
 27987                           plusw2	equ	0xFDB
 27988                           fsr2h	equ	0xFDA
 27989                           fsr2l	equ	0xFD9
 27990                           status	equ	0xFD8
 27991                           
 27992 ;; *************** function i2_MiWi_TickGet *****************
 27993 ;; Defined at:
 27994 ;;		line 104 in file "src/18F27J53/symbol.c"
 27995 ;; Parameters:    Size  Location     Type
 27996 ;;		None
 27997 ;; Auto vars:     Size  Location     Type
 27998 ;;  MiWi_TickGet    4    6[BANK0 ] struct _MIWI_TICK
 27999 ;;  MiWi_TickGet    1    5[BANK0 ] unsigned char 
 28000 ;; Return value:  Size  Location     Type
 28001 ;;                  4    0[BANK0 ] struct _MIWI_TICK
 28002 ;; Registers used:
 28003 ;;		wreg, status,2, status,0
 28004 ;; Tracked objects:
 28005 ;;		On entry : 0/0
 28006 ;;		On exit  : 0/0
 28007 ;;		Unchanged: 0/0
 28008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28009 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28010 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28012 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28013 ;;Total ram usage:       10 bytes
 28014 ;; Hardware stack levels used:    1
 28015 ;; This function calls:
 28016 ;;		Nothing
 28017 ;; This function is called by:
 28018 ;;		_MIWIInterruptHandler
 28019 ;;		i2_TxPacket
 28020 ;; This function uses a non-reentrant model
 28021 ;;
 28022                           
 28023                           	psect	text94
 28024  0168A4                     __ptext94:
 28025                           	opt stack 0
 28026  0168A4                     i2_MiWi_TickGet:
 28027                           	opt stack 13
 28028                           
 28029                           ;symbol.c: 106: MIWI_TICK currentTime;
 28030                           ;symbol.c: 109: uint8_t failureCounter;
 28031                           ;symbol.c: 112: PIE1bits.TMR1IE = 0;
 28032                           
 28033                           ;incstack = 0
 28034  0168A4  909D               	bcf	3997,0,c	;volatile
 28035                           
 28036                           ;symbol.c: 115: currentTime.byte.b2 = 0;
 28037  0168A6  0E00               	movlw	0
 28038  0168A8  0100               	movlb	0	; () banked
 28039  0168AA  6F68               	movwf	(i2MiWi_TickGet@currentTime+2)& (0+255),b
 28040                           
 28041                           ;symbol.c: 116: currentTime.byte.b3 = 0;
 28042  0168AC  0E00               	movlw	0
 28043  0168AE  0100               	movlb	0	; () banked
 28044  0168B0  6F69               	movwf	(i2MiWi_TickGet@currentTime+3)& (0+255),b
 28045                           
 28046                           ;symbol.c: 118: failureCounter = 0;
 28047  0168B2  0E00               	movlw	0
 28048  0168B4  0100               	movlb	0	; () banked
 28049  0168B6  6F65               	movwf	i2MiWi_TickGet@failureCounter& (0+255),b
 28050  0168B8                     i2l13081:
 28051                           
 28052                           ; BSR set to: 0
 28053                           ;symbol.c: 121: {
 28054                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 28055  0168B8  CFCE F066          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 28056                           
 28057                           ; BSR set to: 0
 28058                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 28059  0168BC  CFCF F067          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 28060                           
 28061                           ; BSR set to: 0
 28062                           ;symbol.c: 124: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 28063  0168C0  0100               	movlb	0	; () banked
 28064  0168C2  2966               	incf	i2MiWi_TickGet@currentTime& (0+255),w,b
 28065  0168C4  E10D               	bnz	i2l62
 28066  0168C6  0100               	movlb	0	; () banked
 28067  0168C8  2967               	incf	(i2MiWi_TickGet@currentTime+1)& (0+255),w,b
 28068  0168CA  A4D8               	btfss	status,2,c
 28069  0168CC  D009               	goto	i2l62
 28070                           
 28071                           ; BSR set to: 0
 28072  0168CE  0100               	movlb	0	; () banked
 28073  0168D0  2B65               	incf	i2MiWi_TickGet@failureCounter& (0+255),f,b
 28074  0168D2  0565               	decf	i2MiWi_TickGet@failureCounter& (0+255),w,b
 28075  0168D4  0100               	movlb	0	; () banked
 28076  0168D6  6F64               	movwf	??i2_MiWi_TickGet& (0+255),b
 28077  0168D8  0E02               	movlw	2
 28078  0168DA  0100               	movlb	0	; () banked
 28079  0168DC  6564               	cpfsgt	??i2_MiWi_TickGet& (0+255),b
 28080  0168DE  D7EC               	goto	i2l13081
 28081  0168E0                     i2l62:
 28082                           
 28083                           ; BSR set to: 0
 28084                           ;symbol.c: 128: if(PIR1bits.TMR1IF)
 28085  0168E0  A09E               	btfss	3998,0,c	;volatile
 28086  0168E2  D008               	goto	i2l13095
 28087                           
 28088                           ; BSR set to: 0
 28089                           ;symbol.c: 129: {
 28090                           ;symbol.c: 131: {
 28091                           ;symbol.c: 134: currentTime.byte.b2++;
 28092  0168E4  0100               	movlb	0	; () banked
 28093  0168E6  2B68               	incf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 28094                           
 28095                           ; BSR set to: 0
 28096                           ;symbol.c: 135: if(timerExtension1 == 0xFF)
 28097  0168E8  0100               	movlb	0	; () banked
 28098  0168EA  29BE               	incf	_timerExtension1& (0+255),w,b	;volatile
 28099  0168EC  A4D8               	btfss	status,2,c
 28100  0168EE  D002               	goto	i2l13095
 28101                           
 28102                           ; BSR set to: 0
 28103                           ;symbol.c: 136: {
 28104                           ;symbol.c: 137: currentTime.byte.b3++;
 28105  0168F0  0100               	movlb	0	; () banked
 28106  0168F2  2B69               	incf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 28107  0168F4                     i2l13095:
 28108                           
 28109                           ; BSR set to: 0
 28110                           ;symbol.c: 138: }
 28111                           ;symbol.c: 139: }
 28112                           ;symbol.c: 140: }
 28113                           ;symbol.c: 143: currentTime.byte.b2 += timerExtension1;
 28114  0168F4  0100               	movlb	0	; () banked
 28115  0168F6  51BE               	movf	_timerExtension1& (0+255),w,b	;volatile
 28116  0168F8  0100               	movlb	0	; () banked
 28117  0168FA  2768               	addwf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 28118                           
 28119                           ; BSR set to: 0
 28120                           ;symbol.c: 144: currentTime.byte.b3 += timerExtension2;
 28121  0168FC  0100               	movlb	0	; () banked
 28122  0168FE  51BF               	movf	_timerExtension2& (0+255),w,b	;volatile
 28123  016900  0100               	movlb	0	; () banked
 28124  016902  2769               	addwf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 28125                           
 28126                           ; BSR set to: 0
 28127                           ;symbol.c: 147: PIE1bits.TMR1IE = 1;
 28128  016904  809D               	bsf	3997,0,c	;volatile
 28129                           
 28130                           ; BSR set to: 0
 28131                           ;symbol.c: 149: return currentTime;
 28132  016906  C066  F060         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 28133  01690A  C067  F061         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 28134  01690E  C068  F062         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 28135  016912  C069  F063         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 28136  016916  0012               	return	
 28137  016918                     __end_ofi2_MiWi_TickGet:
 28138                           	opt stack 0
 28139                           pclatu	equ	0xFFB
 28140                           pclath	equ	0xFFA
 28141                           tblptru	equ	0xFF8
 28142                           tblptrh	equ	0xFF7
 28143                           tblptrl	equ	0xFF6
 28144                           tablat	equ	0xFF5
 28145                           prodh	equ	0xFF4
 28146                           prodl	equ	0xFF3
 28147                           intcon	equ	0xFF2
 28148                           intcon2	equ	0xFF1
 28149                           intcon3	equ	0xFF0
 28150                           indf0	equ	0xFEF
 28151                           postinc0	equ	0xFEE
 28152                           plusw0	equ	0xFEB
 28153                           fsr0h	equ	0xFEA
 28154                           fsr0l	equ	0xFE9
 28155                           wreg	equ	0xFE8
 28156                           indf1	equ	0xFE7
 28157                           postinc1	equ	0xFE6
 28158                           postdec1	equ	0xFE5
 28159                           fsr1h	equ	0xFE2
 28160                           fsr1l	equ	0xFE1
 28161                           bsr	equ	0xFE0
 28162                           indf2	equ	0xFDF
 28163                           postinc2	equ	0xFDE
 28164                           postdec2	equ	0xFDD
 28165                           plusw2	equ	0xFDB
 28166                           fsr2h	equ	0xFDA
 28167                           fsr2l	equ	0xFD9
 28168                           status	equ	0xFD8
 28169                           pclatu	equ	0xFFB
 28170                           pclath	equ	0xFFA
 28171                           tblptru	equ	0xFF8
 28172                           tblptrh	equ	0xFF7
 28173                           tblptrl	equ	0xFF6
 28174                           tablat	equ	0xFF5
 28175                           prodh	equ	0xFF4
 28176                           prodl	equ	0xFF3
 28177                           intcon	equ	0xFF2
 28178                           intcon2	equ	0xFF1
 28179                           intcon3	equ	0xFF0
 28180                           indf0	equ	0xFEF
 28181                           postinc0	equ	0xFEE
 28182                           plusw0	equ	0xFEB
 28183                           fsr0h	equ	0xFEA
 28184                           fsr0l	equ	0xFE9
 28185                           wreg	equ	0xFE8
 28186                           indf1	equ	0xFE7
 28187                           postinc1	equ	0xFE6
 28188                           postdec1	equ	0xFE5
 28189                           fsr1h	equ	0xFE2
 28190                           fsr1l	equ	0xFE1
 28191                           bsr	equ	0xFE0
 28192                           indf2	equ	0xFDF
 28193                           postinc2	equ	0xFDE
 28194                           postdec2	equ	0xFDD
 28195                           plusw2	equ	0xFDB
 28196                           fsr2h	equ	0xFDA
 28197                           fsr2l	equ	0xFD9
 28198                           status	equ	0xFD8
 28199                           
 28200                           	psect	param0
 28201  0000                     pclatu	equ	0xFFB
 28202                           pclath	equ	0xFFA
 28203                           tblptru	equ	0xFF8
 28204                           tblptrh	equ	0xFF7
 28205                           tblptrl	equ	0xFF6
 28206                           tablat	equ	0xFF5
 28207                           prodh	equ	0xFF4
 28208                           prodl	equ	0xFF3
 28209                           intcon	equ	0xFF2
 28210                           intcon2	equ	0xFF1
 28211                           intcon3	equ	0xFF0
 28212                           indf0	equ	0xFEF
 28213                           postinc0	equ	0xFEE
 28214                           plusw0	equ	0xFEB
 28215                           fsr0h	equ	0xFEA
 28216                           fsr0l	equ	0xFE9
 28217                           wreg	equ	0xFE8
 28218                           indf1	equ	0xFE7
 28219                           postinc1	equ	0xFE6
 28220                           postdec1	equ	0xFE5
 28221                           fsr1h	equ	0xFE2
 28222                           fsr1l	equ	0xFE1
 28223                           bsr	equ	0xFE0
 28224                           indf2	equ	0xFDF
 28225                           postinc2	equ	0xFDE
 28226                           postdec2	equ	0xFDD
 28227                           plusw2	equ	0xFDB
 28228                           fsr2h	equ	0xFDA
 28229                           fsr2l	equ	0xFD9
 28230                           status	equ	0xFD8
 28231                           
 28232                           	psect	temp
 28233  000049                     btemp:
 28234                           	opt stack 0
 28235  000049                     	ds	1
 28236  0000                     int$flags	set	btemp
 28237                           pclatu	equ	0xFFB
 28238                           pclath	equ	0xFFA
 28239                           tblptru	equ	0xFF8
 28240                           tblptrh	equ	0xFF7
 28241                           tblptrl	equ	0xFF6
 28242                           tablat	equ	0xFF5
 28243                           prodh	equ	0xFF4
 28244                           prodl	equ	0xFF3
 28245                           intcon	equ	0xFF2
 28246                           intcon2	equ	0xFF1
 28247                           intcon3	equ	0xFF0
 28248                           indf0	equ	0xFEF
 28249                           postinc0	equ	0xFEE
 28250                           plusw0	equ	0xFEB
 28251                           fsr0h	equ	0xFEA
 28252                           fsr0l	equ	0xFE9
 28253                           wreg	equ	0xFE8
 28254                           indf1	equ	0xFE7
 28255                           postinc1	equ	0xFE6
 28256                           postdec1	equ	0xFE5
 28257                           fsr1h	equ	0xFE2
 28258                           fsr1l	equ	0xFE1
 28259                           bsr	equ	0xFE0
 28260                           indf2	equ	0xFDF
 28261                           postinc2	equ	0xFDE
 28262                           postdec2	equ	0xFDD
 28263                           plusw2	equ	0xFDB
 28264                           fsr2h	equ	0xFDA
 28265                           fsr2l	equ	0xFD9
 28266                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    268
    Data        4
    BSS         685
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      72
    BANK0           160     67     112
    BANK1           256    115     256
    BANK2           256      0     256
    BANK3           256     43     255
    BANK4           256     10      10
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(2) Largest target is 2
		 -> myPANID(BANK1[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(2) Largest target is 2
		 -> tempShortAddress(BANK1[2]), myShortAddress(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 43
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), TxBuffer(BANK1[43]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 43
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), TxBuffer(BANK1[43]), 

    memcpy@s1	PTR const void  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), FAILEDMSG_LABEL(CODE[4]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), 
		 -> POWER_LABEL(CODE[4]), TEMPERATURE_LABEL(CODE[4]), LIGHT_LEVEL_LABEL(CODE[4]), BATTERY_VOLTAGE_LABEL(CODE[4]), 
		 -> m_buffer(BANK2[32]), myLongAddress(BANK0[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), 
		 -> RxPacket(BANK3[132]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), FAILEDMSG_LABEL(CODE[4]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), 
		 -> POWER_LABEL(CODE[4]), TEMPERATURE_LABEL(CODE[4]), LIGHT_LEVEL_LABEL(CODE[4]), BATTERY_VOLTAGE_LABEL(CODE[4]), 
		 -> m_buffer(BANK2[32]), myLongAddress(BANK0[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), 
		 -> RxPacket(BANK3[132]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    do_UPDATE@p_buff	PTR unsigned char  size(2) Largest target is 32
		 -> m_buffer(BANK2[32]), 

    do_NETWORK_REGISTER@p_uid	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK0[4]), 

    decode_variable@p_buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK2[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    encode_ufixed16_variable@buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK2[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    encode_uint8_variable@buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK2[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    sp__dBm_to_mW	PTR const unsigned char  size(2) Largest target is 7
		 -> TX_POWER_INVALID(CODE[6]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), TX_POWER_N_2_DB_MW(CODE[6]), 
		 -> TX_POWER_1_DB_MW(CODE[7]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), TX_POWER_10_DB_MW(CODE[5]), 
		 -> TX_POWER_13_DB_MW(CODE[5]), 

    dBm_to_mW_ufixed16@value2	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    dBm_to_mW_ufixed16@value1	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    labelcmp@p2	PTR unsigned char  size(2) Largest target is 4
		 -> UPDATE_FREQUENCY_LABEL(CODE[4]), POWER_LABEL(CODE[4]), 

    labelcmp@p1	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    sp__memcpy	PTR void  size(2) Largest target is 43
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), TxBuffer(BANK1[43]), 

    p_buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK2[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    MiApp_UnicastAddress@DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> do_UPDATE@shortaddress(BANK3[2]), do_POWER_TEST@shortaddress(BANK3[2]), do_NETWORK_REGISTER@shortaddress(BANK3[2]), tempShortAddress(BANK1[2]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK0[4]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 90
		 -> ConnectionTable(BANK2[90]), 

    SendMACPacket@Address	PTR unsigned char  size(2) Largest target is 90
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK3[2]), do_POWER_TEST@shortaddress(BANK3[2]), do_NETWORK_REGISTER@shortaddress(BANK3[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable.Address(BANK2[4]), ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    S2117$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S2117$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Dec@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK0[8]), 

    CCM_Dec@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Enc@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK0[8]), 

    CCM_Enc@text	PTR unsigned char  size(2) Largest target is 64
		 -> MACTxBuffer(BANK2[64]), 

    CBC_MAC@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK0[8]), 

    CBC_MAC@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CBC_MAC@MIC	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK0[4]), 

    CTR@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CTR@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK0[8]), 

    CTR@nounce	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK0[4]), 

    encode@key	PTR unsigned int  size(2) Largest target is 8
		 -> key(BANK0[8]), 

    encode@text	PTR unsigned int  size(2) Largest target is 4
		 -> tmpBlock(BANK0[4]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 43
		 -> TxBuffer(BANK1[43]), 

    S1714$DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK3[2]), do_POWER_TEST@shortaddress(BANK3[2]), do_NETWORK_REGISTER@shortaddress(BANK3[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK3[2]), do_POWER_TEST@shortaddress(BANK3[2]), do_NETWORK_REGISTER@shortaddress(BANK3[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK0[4]), 

    S1512$PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK0[4]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK0[4]), 

    S1736$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S1736$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    None.

Critical Paths under _SYS_InterruptLow in COMRAM

    _SYS_InterruptLow->i1___ftadd
    i1___ftadd->i1___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_MIWIInterruptHandler
    _MIWIInterruptHandler->i2_TxPacket
    i2_TxPacket->i2_MiWi_TickGet
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _SYS_InterruptLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_adapt_power_level
    _main->_do_NETWORK_REGISTER
    _sleep_and_reset->_MiApp_TransceiverPowerState
    _send_periodical_update->_do_UPDATE
    _send_initial_update->_do_UPDATE
    _floor->___altoft
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___lltoft->___lmul
    ___ftneg->_floor
    _read_sensors->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___ftneg
    ___ftdiv->___lltoft
    _process_update_answer->_send_writables_update
    _update_variable->_MiMAC_SetPower
    _send_writables_update->_do_UPDATE
    _do_UPDATE->_MiApp_UnicastAddress
    _decode_variable->_memcpy
    _MiApp_TransceiverPowerState->_MiMAC_PowerState
    _MiMAC_PowerState->_DELAY_ms
    _do_NETWORK_REGISTER->_MiApp_UnicastAddress
    _adapt_power_level->_do_POWER_TEST
    _do_POWER_TEST->_MiApp_UnicastAddress
    _MiMAC_SetPower->_RegisterSet
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_DELAY_ms
    _DELAY_ms->___lmul
    _MiApp_EstablishConnection->_MiApp_SearchConnection
    _MiApp_EstablishConnection->_OpenSocket
    _OpenSocket->_MiApp_UnicastAddress
    _SendMACPacket->_MiMAC_SendPacket
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _MiApp_MessageAvailable->_MiWiTasks
    _MiWiTasks->_MiMAC_ReceivedPacket
    _MiMAC_SendPacket->_CCM_Enc
    _TxPacket->_MiWi_TickGet
    _WriteFIFO->_SPIPut
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _CCM_Enc->_CBC_MAC
    _CCM_Enc->_CTR
    _MiMAC_ReceivedPacket->_CCM_Dec
    _CCM_Dec->_CBC_MAC
    _CCM_Dec->_CTR
    _CTR->_encode
    _CBC_MAC->_encode
    _AddNodeToNetworkTable->_SearchForLongAddress

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _SYS_InterruptLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _SYS_InterruptLow in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_send_initial_update
    _main->_send_periodical_update
    _send_periodical_update->_do_UPDATE
    _send_initial_update->_do_UPDATE
    _send_writables_update->_do_UPDATE
    _do_UPDATE->_MiApp_UnicastAddress
    _do_NETWORK_REGISTER->_MiApp_UnicastAddress
    _adapt_power_level->_do_POWER_TEST
    _do_POWER_TEST->_MiApp_UnicastAddress
    _OpenSocket->_MiApp_UnicastAddress

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _SYS_InterruptLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _SYS_InterruptLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _SYS_InterruptLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _SYS_InterruptLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _SYS_InterruptLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _SYS_InterruptLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _SYS_InterruptLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _SYS_InterruptLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _SYS_InterruptLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _SYS_InterruptLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SYS_InterruptHigh in BANK13

    None.

Critical Paths under _SYS_InterruptLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Critical Paths under _SYS_InterruptLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  955674
                                              0 BANK4     10    10      0
               _MiApp_ConnectionMode
               _MiApp_DiscardMessage
          _MiApp_EstablishConnection
             _MiApp_MessageAvailable
                 _MiApp_ProtocolInit
             _MiApp_SearchConnection
        _MiApp_TransceiverPowerState
                     _MiMAC_SetPower
                          _MiWiTasks
                         _RTCC_reset
                  _SYSTEM_Initialize
                  _adapt_power_level
                _do_NETWORK_REGISTER
              _process_update_answer
                       _read_sensors
          _security_force_key_update
                _send_initial_update
             _send_periodical_update
                    _sleep_and_reset
                        _timer_reset
                     _wait_for_1_sec
 ---------------------------------------------------------------------------------
 (1) _sleep_and_reset                                      0     0      0    3365
        _MiApp_TransceiverPowerState
                        _timer_reset
 ---------------------------------------------------------------------------------
 (1) _send_periodical_update                              54    54      0  149427
                                            113 BANK1      1     1      0
                                             28 BANK3     15    15      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                             ___lmul
                          _do_UPDATE
           _encode_ufixed16_variable
              _encode_uint8_variable
                              _floor
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _send_initial_update                                 54    54      0  150432
                                            113 BANK1      1     1      0
                                             28 BANK3     15    15      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                             ___lmul
                 _dBm_to_mW_ufixed16
                          _do_UPDATE
           _encode_ufixed16_variable
              _encode_uint8_variable
                              _floor
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _floor                                                8     5      3   16848
                                             61 BANK1      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     506
                                              0 BANK1      7     2      5
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     406
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    7046
                                              8 BANK1     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3783
                                             51 BANK1     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3993
                                             12 BANK1      9     5      4
                           ___ftpack
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     897
                                             69 BANK1      3     0      3
                            ___ftadd (ARG)
                            ___fttol (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (1) _security_force_key_update                            2     2      0     130
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _read_sensors                                         9     9      0   17776
                                             87 BANK1      9     9      0
                           _OpenI2C1
                           _ReadI2C1
                          _WriteI2C1
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    3818
                                              8 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4    2243
                                             36 BANK1     15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    6419
                                             72 BANK1     15     9      6
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4895
                                             21 BANK1     15     9      6
                           ___ftpack
                           ___lltoft (ARG)
                             ___lmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3475
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _WriteI2C1                                            2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenI2C1                                             2     1      1     166
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _process_update_answer                               13    13      0  150955
                                             28 BANK3     13    13      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
        _MiApp_TransceiverPowerState
                    _decode_variable
              _send_writables_update
                        _timer_reset
                    _update_variable
                     _wait_for_1_sec
 ---------------------------------------------------------------------------------
 (1) _wait_for_1_sec                                       3     3      0      68
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _update_variable                                      0     0      0    3025
                     _MiMAC_SetPower
                           _RtccWrOn
                           _labelcmp
                 _mW_ufixed16_to_dBm
 ---------------------------------------------------------------------------------
 (3) _mW_ufixed16_to_dBm                                   2     1      1     600
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (3) _labelcmp                                             8     4      4     639
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _timer_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _send_writables_update                                3     3      0  104683
                                            113 BANK1      1     1      0
                 _dBm_to_mW_ufixed16
                          _do_UPDATE
           _encode_ufixed16_variable
              _encode_uint8_variable
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _encode_uint8_variable                               15     3     12    1382
                                              0 BANK1     15     3     12
 ---------------------------------------------------------------------------------
 (2) _encode_ufixed16_variable                            15     3     12    2698
                                              0 BANK1     15     3     12
 ---------------------------------------------------------------------------------
 (2) _do_UPDATE                                           10     6      4   93808
                                            112 BANK1      1     1      0
                                             19 BANK3      9     5      4
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _dBm_to_mW_ufixed16                                   5     1      4    1005
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _decode_variable                                     22    12     10    6629
                                             10 BANK1     22    12     10
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _MiApp_TransceiverPowerState                          2     2      0    3365
                                             20 BANK1      1     1      0
                   _MiMAC_PowerState
 ---------------------------------------------------------------------------------
 (3) _MiMAC_PowerState                                     2     2      0    3334
                                             18 BANK1      2     2      0
                           _DELAY_ms
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (1) _do_NETWORK_REGISTER                                  9     6      3   92051
                                            112 BANK1      3     0      3
                                             19 BANK3      6     6      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6    5790
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _adapt_power_level                                    6     5      1   88379
                                            113 BANK1      2     1      1
                                             26 BANK3      3     3      0
                     _MiMAC_SetPower
                      _do_POWER_TEST
 ---------------------------------------------------------------------------------
 (2) _do_POWER_TEST                                        8     8      0   86130
                                            112 BANK1      1     1      0
                                             19 BANK3      7     7      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetPower                                       3     3      0    1786
                                              6 BANK1      3     3      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (1) _RTCC_reset                                           0     0      0       0
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   6     6      0   10993
                                             22 BANK1      6     6      0
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           4     1      3    5490
                                             18 BANK1      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (4) _DELAY_ms                                             6     4      2    1449
                                             12 BANK1      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1136
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_EstablishConnection                           20    19      1  165678
                                            113 BANK1      1     0      1
                                             19 BANK3     19    19      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
             _MiApp_SearchConnection
                   _MiApp_SetChannel
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                         _OpenSocket
               _SearchForLongAddress
                      _SendMACPacket
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _OpenSocket                                           1     1      0   53461
                                            112 BANK1      1     1      0
               _MiApp_UnicastAddress
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastAddress                                31    27      4   52962
                                            100 BANK1     12     8      4
                                              0 BANK3     19    19      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiMAC_SendPacket
                       _MiWi_TickGet
               _SearchForLongAddress
 ---------------------------------------------------------------------------------
 (1) _MiApp_SearchConnection                              28    24      4   55098
                                            100 BANK1     13     9      4
                                              0 BANK3     15    15      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiApp_SetChannel
                       _MiWi_TickGet
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (2) _SendMACPacket                                        4     1      3   17549
                                             57 BANK1      4     1      3
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0    3738
                                             10 BANK1      1     1      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3676
                                              7 BANK1      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0   32807
                          _MiWiTasks
 ---------------------------------------------------------------------------------
 (5) _MiWiTasks                                           29    29      0   32807
                                             71 BANK1     29    29      0
              _AddNodeToNetworkTable
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                   _MiMAC_SendPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
               _SearchForLongAddress
              _SearchForShortAddress
 ---------------------------------------------------------------------------------
 (6) _MiMAC_SetAltAddress                                  4     0      4    1456
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (4) _MiMAC_SendPacket                                    10     4      6   17040
                                             47 BANK1     10     4      6
                            _CCM_Enc
                           _TxPacket
 ---------------------------------------------------------------------------------
 (5) _TxPacket                                            24    23      1    4859
                                             10 BANK1     24    23      1
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (6) _WriteFIFO                                            3     3      0     133
                                              2 BANK1      3     3      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (4) _SetRFMode                                            1     1      0    1755
                                              6 BANK1      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (5) _RegisterSet                                          4     2      2    1724
                                              2 BANK1      4     2      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _RegisterRead                                         4     4      0     235
                                              2 BANK1      4     4      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _SPIGet                                               0     0      0      34
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _SPIPut                                               2     2      0      34
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (5) _CCM_Enc                                             11     5      6    7941
                                             36 BANK1     11     5      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                20    20      0   10181
                                             51 BANK1     20    20      0
                            _CCM_Dec
                       _MiWi_TickGet
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (7) _isSameAddress                                        7     3      4     400
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (4) _MiWi_TickGet                                        10     6      4     400
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (7) _CCM_Dec                                             15     9      6    7941
                                             36 BANK1     15     9      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (6) _CTR                                                 13     6      7    3397
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (6) _CBC_MAC                                             13     6      7    3397
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (7) _encode                                              23    19      4    1094
                                              0 BANK1     23    19      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     861
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (6) _AddNodeToNetworkTable                                4     4      0    1034
                                              6 BANK1      4     4      0
               _SearchForLongAddress
              _SearchForShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (7) _findNextNetworkEntry                                 1     1      0     130
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (6) _SearchForShortAddress                                3     3      0     192
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SearchForLongAddress                                 6     6      0     322
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ConnectionMode                                 2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _SYS_InterruptLow                                   17    17      0    1201
                                             20 COMRAM    17    17      0
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (13) i1___ftadd                                          12     6      6    1201
                                              8 COMRAM    12     6      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (14) i1___ftpack                                          8     3      5     309
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _SYS_InterruptHigh                                  14    14      0    4516
                                             53 BANK0     14    14      0
               _MIWIInterruptHandler
 ---------------------------------------------------------------------------------
 (16) _MIWIInterruptHandler                               19    19      0    4516
                                             34 BANK0     19    19      0
                     i2_MiWi_TickGet
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (17) i2_TxPacket                                         24    23      1    1913
                                             10 BANK0     24    23      1
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (18) i2_WriteFIFO                                         3     3      0     133
                                              2 BANK0      3     3      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (18) i2_SetRFMode                                         1     1      0     405
                                              6 BANK0      1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (19) i2_RegisterSet                                       4     2      2     374
                                              2 BANK0      4     2      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (18) i2_RegisterRead                                      4     4      0     235
                                              2 BANK0      4     4      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (19) i2_SPIGet                                            0     0      0      34
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (19) i2_SPIPut                                            2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (18) i2_MiWi_TickGet                                     10     6      4     316
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MiApp_ConnectionMode
   _MiApp_DiscardMessage
     _MiMAC_DiscardPacket
   _MiApp_EstablishConnection
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_SearchConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
       _MiWi_TickGet
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _OpenSocket
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _MiWi_TickGet
     _SearchForLongAddress
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
     _findNextNetworkEntry
   _MiApp_MessageAvailable
     _MiWiTasks
       _AddNodeToNetworkTable
         _SearchForLongAddress
         _SearchForShortAddress
         _findNextNetworkEntry
       _MiMAC_DiscardPacket
       _MiMAC_ReceivedPacket
         _CCM_Dec
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _MiWi_TickGet
         _isSameAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiMAC_SetAltAddress
       _MiWi_TickGet
       _SearchForLongAddress
       _SearchForShortAddress
   _MiApp_ProtocolInit
     _InitSymbolTimer
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_Init
       _DELAY_ms
         ___lmul
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_SearchConnection
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiWi_TickGet
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
   _MiApp_TransceiverPowerState
     _MiMAC_PowerState
       _DELAY_ms
         ___lmul
       _SetRFMode
         _RegisterSet
           _SPIPut
   _MiMAC_SetPower
     _RegisterSet
       _SPIPut
   _MiWiTasks
     _AddNodeToNetworkTable
       _SearchForLongAddress
       _SearchForShortAddress
       _findNextNetworkEntry
     _MiMAC_DiscardPacket
     _MiMAC_ReceivedPacket
       _CCM_Dec
         _CBC_MAC
           ___awdiv
           _encode
         _CTR
           ___awdiv
           _encode
       _MiWi_TickGet
       _isSameAddress
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
           _encode
         _CTR
           ___awdiv
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _SearchForLongAddress
     _SearchForShortAddress
   _RTCC_reset
     _RtccWrOn
   _SYSTEM_Initialize
     _RtccWrOn
   _adapt_power_level
     _MiMAC_SetPower
       _RegisterSet
         _SPIPut
     _do_POWER_TEST
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
   _do_NETWORK_REGISTER
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_UnicastAddress
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiWi_TickGet
       _SearchForLongAddress
     _memcpy
   _process_update_answer
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_TransceiverPowerState
       _MiMAC_PowerState
         _DELAY_ms
           ___lmul
         _SetRFMode
           _RegisterSet
             _SPIPut
     _decode_variable
       _memcpy
     _send_writables_update
       _dBm_to_mW_ufixed16
       _do_UPDATE
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiApp_UnicastAddress
           _MiApp_DiscardMessage
             _MiMAC_DiscardPacket
           _MiApp_MessageAvailable
             _MiWiTasks
               _AddNodeToNetworkTable
                 _SearchForLongAddress
                 _SearchForShortAddress
                 _findNextNetworkEntry
               _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                 _CCM_Dec
                   _CBC_MAC
                     ___awdiv
                     _encode
                   _CTR
                     ___awdiv
                     _encode
                 _MiWi_TickGet
                 _isSameAddress
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                     _encode
                   _CTR
                     ___awdiv
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
               _MiMAC_SetAltAddress
               _MiWi_TickGet
               _SearchForLongAddress
               _SearchForShortAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiWi_TickGet
           _SearchForLongAddress
         _memcpy
       _encode_ufixed16_variable
       _encode_uint8_variable
       _memcpy
     _timer_reset
     _update_variable
       _MiMAC_SetPower
         _RegisterSet
           _SPIPut
       _RtccWrOn
       _labelcmp
       _mW_ufixed16_to_dBm
     _wait_for_1_sec
   _read_sensors
     _OpenI2C1
     _ReadI2C1
     _WriteI2C1
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _security_force_key_update
   _send_initial_update
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
       ___lmul (ARG)
     ___lmul
     _dBm_to_mW_ufixed16
     _do_UPDATE
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _memcpy
     _encode_ufixed16_variable
     _encode_uint8_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _frexp
     _memcpy
   _send_periodical_update
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
       ___lmul (ARG)
     ___lmul
     _do_UPDATE
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _memcpy
     _encode_ufixed16_variable
     _encode_uint8_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _frexp
     _memcpy
   _sleep_and_reset
     _MiApp_TransceiverPowerState
       _MiMAC_PowerState
         _DELAY_ms
           ___lmul
         _SetRFMode
           _RegisterSet
             _SPIPut
     _timer_reset
   _timer_reset
   _wait_for_1_sec

 _SYS_InterruptLow (ROOT)
   i1___ftadd
     i1___ftpack

 _SYS_InterruptHigh (ROOT)
   _MIWIInterruptHandler
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_SPIGet
       i2_SPIPut
     i2_TxPacket
       i2_MiWi_TickGet
       i2_RegisterRead
         i2_SPIGet
           i2_SPIPut
         i2_SPIPut
       i2_RegisterSet
         i2_SPIPut
       i2_SetRFMode
         i2_RegisterSet
           i2_SPIPut
       i2_WriteFIFO
         i2_SPIPut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      A       A      14        3.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100     2B      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     73     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      70       5       70.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      48       1       76.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C1       6        0.0%
DATA                 0      0     3C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Dec 10 10:07:58 2016

                              i2_TxPacket 3DCC                              ___altoft@exp 01C5  
                              i1___ftpack 60E6                      ?_MiMAC_DiscardPacket 0001  
                            _UPTIME_LABEL FFFB                            ?_isSameAddress 018A  
                           ___altoft@sign 01C6                                        l31 6F5C  
                                      l18 6220                                        l19 620C  
                                      l29 6F52                                        l62 686C  
        MiApp_SearchConnection@ChannelMap 01EE                              ___awdiv@sign 018F  
                                      bsr 000FE0                   send_initial_update@tmp2 03F0  
                     MiApp_ProtocolInit@i 01A5                         _ActiveScanResults 0300  
                            __CFG_CP0$OFF 000000                              ___ftadd@exp1 019D  
                            ___ftadd@exp2 019C                                _MiMAC_Init 4C8C  
                            ___ftadd@sign 019B                                       l323 3646  
                                     l324 36A2                                       l237 6C04  
                                     l318 35D8                                       l352 224E  
                                     l601 0AFE                                       l442 5418  
                                     l258 413A                                       l259 4182  
                                     l721 534E                                       l641 067C  
                                     l634 05EC                                       l627 0538  
                                     l724 5376                                       l716 529C  
                                     l468 4FE6                                       l628 053C  
                                     l477 48F4                            ?i2_RegisterSet 0062  
                                     l654 09C6                                       l672 0BF8  
                                     l657 0990                                       l834 251A  
                                     l755 6E40                                       l667 0A9A  
                                     l829 24BE                                       l839 26DE  
                                     l848 2872                                       l784 2980  
                            i1___ftadd@f1 0009                              i1___ftadd@f2 000C  
                                     _CTR 53B0                                       _MTP 012A  
                                     _key 00C0                           __end_of_CBC_MAC 5804  
             __end_of_MiMAC_SetAltAddress 6FFA                                       prod 000FF3  
                                     wreg 000FE8                           __end_of_CCM_Dec 49FC  
      encode_ufixed16_variable@m_writable 0198                           __end_of_CCM_Enc 5040  
          __end_of_UPDATE_FREQUENCY_LABEL FFFB                               i2_WriteFIFO 6CD4  
       __end_of_MiApp_EstablishConnection 2D68                __end_of_mW_ufixed16_to_dBm 5D3C  
                                    ?_CTR 01A1                                      CTR@i 01AC  
                                    CTR@j 01AD                              ___ftdiv@cntr 01A8  
                            ___ftdiv@sign 01AD                                      l1140 2D80  
                                    l1109 3C08                                      l1143 2D90  
                                    l1135 6E96                                      l1128 3DAE  
                                    l1080 3166                                      l1401 6A42  
                                    l1217 6F8E                                      l1209 5AA6  
                                    l1153 2EEA                                      l1234 6E00  
                                    l1146 2E16                                      l1171 2F7A  
                                    l1180 2FCC                                      l1165 2F56  
                                    l1335 628E                                      l1183 2FDC  
                                    l1345 5F0A                                      l1097 32D4  
                                    l1186 2FE2                                      l1284 60E0  
                                    l1460 6F3E                                      l1461 6F40  
                                    l1485 69AA                                      l1494 69CA  
                                    l1735 56C6                                      l1807 34F4  
                                    l1840 6E24                                      l1818 4B12  
                                    l1746 58F4                                      l1783 3392  
                                    l1787 33CC                                      l1789 33F4  
                                    l1798 34CA                           ?i2_RegisterRead 0001  
                                    i2l31 6F78                                      i2l29 6F6E  
                                    i2l62 68E0                           _sleep_and_reset 6E88  
                   _BATTERY_VOLTAGE_LABEL FFDF                MiMAC_SetChannel@offsetFreq 0191  
                                    _main 306E                              ___ftpack@arg 018A  
                            ___ftpack@exp 018D                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                                    btemp 0049                                      pclat 000FFA  
                         _update_variable 59F6                MiApp_UnicastAddress@handle 03E6  
                   MiApp_ProtocolInit@MIP 01A2                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00F6  
                           __CFG_IESO$OFF 000000               _send_periodical_update$5145 03F3  
             _send_periodical_update$5146 03F6               _send_periodical_update$5147 03F9  
             _send_periodical_update$5148 03FC                          __end_of_DELAY_ms 623E  
               do_NETWORK_REGISTER@F10228 013E                             _m_light_level 0149  
                          _InitConfigRegs FEF3                              ___ftmul@cntr 01DF  
                            ___param_bank 000000                              ___ftmul@sign 01E0  
                   ??_MiMAC_DiscardPacket 018A                                     ??_CTR 01A8  
           adapt_power_level@minimal_rssi 01FB                   decode_variable@p_buffer 0194  
                        CCM_Enc@headerLen 01B0                              ___fttol@exp1 01BC  
                            ___fttol@lval 01B8              __end_of_MiApp_DiscardMessage 6FEA  
              MiMAC_PowerState@PowerState 019C                                     l11121 3830  
                                   l11131 39D8                                     l12011 04A8  
                                   l11117 3826                                     l12005 048A  
                                   l11143 5E18                                     l11303 571E  
                                   l12103 0868                                     l12031 0522  
                                   l11321 5760                                     l11313 5748  
                                   l11241 639E                                     l11401 42A2  
                                   l12201 0B20                                     l12105 086E  
                                   l12025 0512                                     l12041 055A  
                                   l11155 5E4C                                     l11171 5E9C  
                                   l11331 57DE                                     l11315 5750  
                                   l11307 5728                                     l12211 0BF2  
                                   l12115 08D4                                     l13003 64D4  
                                   l11157 5E58                                     l11149 5E2E  
                                   l11317 5756                                     l11501 49F8  
                                   l11421 4F48                                     l11253 63E0  
                                   l11245 63B4                                     l11237 6388  
                                   l11405 42B6                                     l12205 0B2A  
                                   l12133 094C                                     l12117 08DA  
                                   l12109 0878                                     l13021 5C2E  
                                   l11511 6552                                     l11175 5EB0  
                                   l11167 5E8E                                     l11159 5E5E  
                                   l11335 57F6                                     l11271 53E6  
                                   l11183 6844                                     l11343 4150  
                                   l11407 42BA                                     l12063 0604  
                                   l12039 0542                                     l12047 058E  
                                   l12303 24CE                                     l11521 65C4  
                                   l11281 543A                                     l11265 53D6  
                                   l11433 4FA8                                     l11417 4F3E  
                                   l11249 63CA                                     l12153 09F4  
                                   l12129 0942                                     l12313 250A  
                                   l13017 5BEE                                     l11531 5AE8  
                                   l11507 6548                                     l11267 53DC  
                                   l11451 6B76                                     l11443 5002  
                                   l11427 4F98                                     l11259 63F6  
                                   l11363 41AA                                     l11339 4134  
                                   l11611 362C                                     l12155 09FA  
                                   l12139 097E                                     l12307 24D8  
                                   l12235 67CC                                     l13203 4D0A  
                                   l13027 5C72                                     l11541 5B38  
                                   l11525 65CA                                     l11285 5444  
                                   l11197 6880                                     l11461 6BB4  
                                   l11701 2104                                     l11437 4FC0  
                                   l11429 4F9E                                     l11621 3688  
                                   l11605 35F8                                     l12173 0A6C  
                                   l12165 0A36                                     l12069 0616  
                                   l13301 3A2A                                     l12405 26F8  
                                   l13221 4D6A                                     l13205 4D22  
                                   l13037 4B82                                     l11535 5AF2  
                                   l11295 54BE                                     l11471 48B6  
                                   l11447 6B6C                                     l11391 4218  
                                   l11375 41DC                                     l11367 41C6  
                                   l11615 3654                                     l12159 0A04  
                                   l13311 3A58                                     l12415 270E  
                                   l12239 67F2                                     l13215 4D5A  
                                   l12503 6A66                                     l13055 4C14  
                                   l11553 5B9E                                     l11545 5B42  
                                   l11561 5BAA                                     l11297 54C2  
                                   l11481 4910                                     l11457 6BAE  
                                   l11721 21D6                                     l11705 210E  
                                   l11625 36AE                                     l12177 0A76  
                                   l12193 0AE4                                     l12425 279A  
                                   l12361 25DE                                     l12353 2594  
                                   l13217 4D60                                     l13209 4D2C  
                                   l13401 59DC                                     l12521 562A  
                                   l13073 4C7A                                     l13065 4C44  
                                   l11571 6D26                                     l11491 4984  
                                   l11475 48CE                                     l11467 48AC  
                                   l11723 21E2                                     l11715 2180  
                                   l11803 2490                                     l11379 41E8  
                                   l12099 0838                                     l13307 3A46  
                                   l13227 4D98                                     l12603 677A  
                                   l12531 56B8                                     l12523 565A  
                                   l12515 5608                                     l13067 4C54  
                                   l13059 4C28                                     l11557 5BA4  
                                   l11581 6D52                                     l11661 3792  
                                   l11653 3752                                     l11637 36EA  
                                   l11629 36B8                                     l12189 0ACC  
                                   l11901 01C4                                     l12197 0B06  
                                   l12269 5F84                                     l13341 3BE8  
                                   l12429 279E                                     l13181 4CB8  
                                   l14205 51D4                                     l12509 6A9E  
                                   l12613 67A0                                     l12621 67B6  
                                   l13413 5A38                                     l13069 4C5E  
                                   l11567 6D1C                                     l11831 52EC  
                                   l11823 52BA                                     l11487 497A  
                                   l11735 225A                                     l11647 371E  
                                   l13263 5D9E                                     l13191 4CDE  
                                   l14215 51FE                                     l12607 6784  
                                   l12703 629C                                     l12543 56EC  
                                   l12527 567A                                     l12519 561C  
                                   l11577 6D4C                                     l11497 49F2  
                                   l11753 22C8                                     l11745 22B4  
                                   l11593 359E                                     l11913 023E  
                                   l12633 66EE                                     l13329 3B34  
                                   l12297 24B4                                     l13193 4CE4  
                                   l13185 4CC2                                     l14209 51DE  
                                   l13601 468C                                     l13281 6D5C  
                                   l12801 50AE                                     l12537 56D0  
                                   l12529 56AA                                     l11835 52F6  
                                   l11843 53AA                                     l11819 52AA  
                                   l11763 233E                                     l11739 2264  
                                   l11675 1FE0                                     l11667 37C6  
                                   l11659 378A                                     l11931 0280  
                                   l11923 025A                                     l13339 3BE4  
                                   l13275 5DDA                                     l13267 5DA8  
                                   l14315 2ADA                                     l13603 469C  
                                   l12619 67A4                                     l13291 6D80  
                                   l12803 50C8                                     l12731 44AC  
                                   l13355 6F92                                     l13523 69B6  
                                   l11773 2386                                     l11757 22D2  
                                   l11749 22BA                                     l11693 20F2  
                                   l11669 37D2                                     l11941 0322  
                                   l11917 024A                                     l11909 0238  
                                   l12477 288C                                     l14325 2B66  
                                   l14309 2A82                                     l13197 4CEE  
                                   l14421 4386                                     l13285 6D6E  
                                   l12805 50E2                                     l12813 5130  
                                   l15205 31FE                                     l11775 23A8  
                                   l11679 1FEA                                     l11919 0250  
                                   l11943 032E                                     l12487 28A2  
                                   l14319 2AE4                                     l14255 294A  
                                   l14271 296C                                     l14191 518A  
                                   l12583 6DA0                                     l13631 4734  
                                   l13623 4712                                     l14423 4396  
                                   l13383 5968                                     l12807 50FC  
                                   l12735 44C4                                     l13359 6DD6  
                                   l13527 69CE                                     l13551 5840  
                                   l15207 3202                                     l11785 242E  
                                   l11689 20EC                                     l13297 3A20  
                                   l12497 292E                                     l14361 2D3E  
                                   l14281 298A                                     l14265 2968  
                                   l13633 4742                                     l13617 46F2  
                                   l14441 4428                                     l13377 5950  
                                   l12809 5116                                     l12753 4550  
                                   l12729 44A6                                     l12665 5F18  
                                   l13457 5AD4                                     l13713 4828  
                                   l14513 2ECA                                     l12921 6320  
                                   l15217 3232                                     l15161 30D2  
                                   l11787 2436                                     l11699 20FE  
                                   l11875 00AA                                     l14259 2956  
                                   l14187 5180                                     l13619 46F8  
                                   l13627 471A                                     l14451 4458  
                                   l12595 6756                                     l13395 59C4  
                                   l13491 4EE8                                     l12907 5D38  
                                   l13643 4A36                                     l13723 4866  
                                   l14531 2FA2                                     l14523 2F36  
                                   l14515 2EEE                                     l13555 5854  
                                   l15227 3266                                     l15171 311A  
                                   l11869 009A                                     l14349 2CAA  
                                   l14293 2A06                                     l14285 29D4  
                                   l14197 51AE                                     l14437 43DC  
                                   l14445 4430                                     l12589 674A  
                                   l12773 45A6                                     l12749 4536  
                                   l13477 4E70                                     l12837 5C92  
                                   l13709 480A                                     l14525 2F5A  
                                   l14509 2EAC                                     l12941 33DA  
                                   l14613 0FA4                                     l15261 32D8  
                                   l15253 32C2                                     l15165 30E8  
                                   l11799 248A                                     l11895 01B4  
                                   l11879 00B6                                     l14367 2D64  
                                   l13583 4638                                     l12767 4596  
                                   l12847 5CAA                                     l13719 4848  
                                   l14527 2F7E                                     l14519 2F12  
                                   l12919 6310                                     l12935 33A0  
                                   l13559 5872                                     l15247 32B2  
                                   l15239 329C                                     l15183 3158  
                                   l15175 3126                                     l11993 0436  
                                   l11897 01BA                                     l11889 0186  
                                   l14289 29FC                                     l13585 4646  
                                   l14449 444A                                     l12793 5046  
                                   l12777 45C0                                     l12769 459E  
                                   l12785 45D4                                     l12857 5CC2  
                                   l14705 3C5C                                     l13649 4A70  
                                   l13737 6654                                     l15281 3314  
                                   l15273 32FE                                     l15249 32B6  
                                   l15193 317A                                     l11995 043C  
                                   l11987 040A                                     l14299 2A5E  
                                   l14459 69FA                                     l12795 5060  
                                   l12779 45CE                                     l12867 5CDA  
                                   l14731 3CEC                                     l14715 3C78  
                                   l13739 6664                                     l12963 345A  
                                   l12947 33EA                                     l15283 3318  
                                   l13589 4650                                     l12797 507A  
                                   l12877 5CF0                                     l14725 3CBC  
                                   l13669 4AD0                                     l12965 3468  
                                   l12957 342C                                     l14661 1210  
                                   l14389 6E9A                                     l15285 3322  
                                   l15197 318E                                     l15189 316A  
                                   l11999 0446                                     l13847 5528  
                                   l12799 5094                                     l12887 5D08  
                                   l13695 47BC                                     l12983 351E  
                                   l12975 34B0                                     l12967 3476  
                                   l12897 5D20                                     l14753 3D94  
                                   l14761 3DAA                                     l13689 4782  
                                   l12993 356C                                     l12977 34BE  
                                   l12969 3482                                     l14739 3D70  
                                   l14755 3D98                                     l14763 3DB4  
                                   l14691 3C0E                                     l13971 6BD8  
                                   l14827 1744                                     l14765 3DC6  
                                   l14695 3C18                                     l13967 6BC2  
                                   ?_main 0001                           __end_of___awdiv 5EBA  
                         __end_of___ftadd 3592             MiApp_EstablishConnection@Mode 01FB  
                         __end_of___ftdiv 4B48                           __end_of___ftneg 6E32  
                         __end_of___ftmul 48A6                           ___awdiv@divisor 018C  
                                   u13200 35AC                                     _T1CON 000FCD  
                                   u14001 0586                           __end_of___fttol 4C8C  
                                   u12505 390E                                     u13218 35B0  
                                   u12515 3968                                     u13350 20D6  
                                   u14320 0C74                                     u12465 6C3C  
                                   u12466 6C3E                                     u14330 6FD2  
                                   u16010 69DA                                     u12635 6AFA  
                                   u12475 6C48                                     u12636 6AFC  
                                   u12476 6C4A                                     u12645 6B06  
                                   u15141 3340                                     u12646 6B08  
                                   u12495 3886                                     u12655 6CC4  
                                   u15151 335E                                     u12656 6CC6  
                                   u14280 0BD4                                     u17000 29AC  
                                   u12665 6CD0                                     u13705 0084  
                                   u14505 268E                                     u15401 4B5E  
                                   u12666 6CD2                                     u14610 2926  
                                   u14506 2692                                     u16018 69DE  
                                   u13707 0088                                     u16211 4A4C  
                                   u13660 0026                                     u14620 6A90  
                                   u15420 4BA8                                     u17005 29A0  
                                   u14550 2792                                     u13751 0184  
                                   u13735 0168                                     u13680 005E  
                                   u15360 6506                                     u16080 5864  
                                   u13737 016C                                     u16241 475E  
                                   u15425 4B9E                                     u13675 0046  
                                   u14475 2562                                     u14627 6A86  
                                   u13668 002A                                     u15700 3A7E  
                                   u14476 2566                                     u13677 004A  
                                   u14565 2822                                     u16261 4798  
                                   u14566 2826                                     u17310 2F1E  
                                   u16191 4A12                                     u17160 43F4  
                                   u15368 650A                                     u13881 0342  
                                   u15705 3A72                                     u13698 0062  
                                   u17090 2D3A                                     u17170 43F6  
                                   u17410 2FAE                                     u17330 2F42  
                                   u13891 0358                                     u14780 66FC  
                                   u17260 2ED6                                     u15805 5982  
                                   u15901 4E48                                     u17318 2F22  
                                   u15831 59EC                                     u17511 1014  
                                   u17360 2F66                                     u15921 4EC0  
                                   u17521 1158                                     u17418 2FB2  
                                   u17338 2F46                                     u17290 2EFA  
                                   u17531 11C2                                     u17268 2EDA  
                                   u18317 2D74                                     u17701 1548  
                                   u14798 6700                                     u17390 2F8A  
                                   u18327 2EB4                                     u17551 13D4  
                                   u17471 0DA8                                     u17711 15B2  
                                   u17368 2F6A                                     u17641 3CCE  
                                   u18337 3C20                                     u17465 3016  
                                   u17481 0E12                                     u17721 16F6  
                                   u17298 2EFE                                     u18347 6DEE  
                                   u17491 0F56                                     u16925 521E  
                                   u18357 4568                                     u17741 1872  
                                   u16926 5222                                     u17398 2F8E  
                                   u18367 43AE                                     u17751 1A4C  
                                   u18377 6A0A                                     u18387 46B4  
                                   i2l401 1C4E                                     i2l403 1BFA  
                                   i2l258 3DDE                                     i2l259 3E24  
                                   i2l392 1B22                                     i2l398 1B7E  
                         ___awdiv@counter 018E                                     _PLLEN 007CDE  
                __size_of_InitSymbolTimer 0018                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _RPOR4 000EC4  
                                   _RPOR5 000EC5                            i1___ftadd@exp1 0014  
                          i1___ftadd@exp2 0013                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _UPUEN 0079CC                            i1___ftadd@sign 0012  
                        __end_ofi2_SPIGet 6FF4                       ___lmul@multiplicand 018E  
                              _MiWiSeqNum 00B6                              ___lltoft@exp 019E  
                        __end_ofi2_SPIPut 6F80                            _myShortAddress 0185  
                         _decode_variable 5902                            __CFG_FCMEN$OFF 000000  
           __size_of_MIWIInterruptHandler 0548                           __end_of_myMODEL FFF5  
           __size_of_MiApp_ConnectionMode 002C                                     _myUID FFF6  
                                   _floor 5804                                     _m_var 0179  
                                   _frexp 64B2             __size_of_MiApp_UnicastAddress 049E  
                                   _errno 0046                             ___ftpack@sign 018E  
                                   main@j 0408                                     main@x 0406  
                             ?_RTCC_reset 0001                                     tablat 000FF5  
                __end_of_SYS_InterruptLow 00F6                 do_NETWORK_REGISTER@result 03EC  
                                   plusw0 000FEB                                     plusw2 000FDB  
                                   status 000FD8         __size_of_encode_ufixed16_variable 00BA  
                      __size_ofi1___ftadd 01AC       __end_of_MiApp_TransceiverPowerState 6D92  
             _MiApp_TransceiverPowerState 6D56                 ?_encode_ufixed16_variable 018A  
                  __end_of_InitConfigRegs FF33                   MiApp_SearchConnection@i 03E2  
                          i1___ftpack@arg 0001                            i1___ftpack@exp 0004  
               __size_of_MiMAC_SetChannel 00BA                           __initialization 65CE  
                         ??_isSameAddress 018E                               ?i2_TxPacket 006A  
                   _AddNodeToNetworkTable 528C                 __size_of_MiMAC_SendPacket 0254  
                            __end_of_main 332A                          __end_of_ReadI2C1 6F48  
                 __size_of_MiMAC_SetPower 003A                               ?i1___ftpack 0001  
         do_NETWORK_REGISTER@shortaddress 03E8                    __size_of_SendMACPacket 007C  
                          TxPacket@status 01A8                    read_sensors@adc_result 01E6  
                         _FAILEDMSG_LABEL FFE3                             main@best_RSSI 0405  
                               ??_CBC_MAC 01A8                          __end_of_ScanTime FF6F  
                         ??i2_RegisterSet 0064                          __end_of_OpenI2C1 6EF0  
                       _LIGHT_LEVEL_LABEL FFE7                                 ??_CCM_Dec 01B4  
                               ??_CCM_Enc 01B4                             ??_RegisterSet 018E  
                                  ??_main 0400                             ___fttol@sign1 01B7  
                             ?_MiMAC_Init 019C                            _myMUTA_version FFF2  
                           __activetblptr 000003         MiApp_SearchConnection@channelMask 03D4  
                ??_MiApp_SearchConnection 01F2                      __end_of_MiWi_TickGet 68A4  
                                  CTR@len 01A3                                    CTR@key 01A4  
                           _IRQ1_Received 00B3                      _SearchForLongAddress 5AE2  
                 MiApp_SetChannel@channel 0194                          __end_of_TxPacket 42D2  
                        __end_of_RtccWrOn 6FC4                   __end_of_sleep_and_reset 6EAC  
      __size_of_security_force_key_update 004E         MiApp_ProtocolInit@bNetworkFreezer 01A1  
                    _MiMAC_ReceivedPacket 1FDA                        __size_of_MiWiTasks 0C7A  
             _myMUTA_version_absconstaddr 01FFF2                           i2SetRFMode@mode 0066  
                 ??_encode_uint8_variable 0196                                    ?_floor 01C7  
                                  ?_frexp 018A                          __end_of___altoft 6382  
                                  _EECON2 000FA7                   __end_of_update_variable 5AE2  
             __end_of_do_NETWORK_REGISTER 445E                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 018A  
                        __end_of___ftpack 56FA                      _IncomingFrameCounter 0200  
                        __end_of___lltoft 66C8                                    i1l1226 00AC  
                                  i1l1227 00A8                                    i1l1229 00AE  
                                  _MACSeq 00B4                                    i1l1735 6174  
                                  i1l1807 40B6                                    i1l1783 3FC0  
                                  i1l1787 3FEA                                    i1l1798 409A  
                          __CFG_WDTEN$OFF 000000                                    i1l9411 60F6  
                                  i1l9423 6142                                    i1l9415 6104  
                                  i1l9425 6160                                    i1l9417 610E  
                                  i1l9427 616A                                    i1l9419 612C  
                              _OpenSocket 5D3C                          __end_of___lwtoft 6E88  
                                  _RTCCAL 000F3E                                    _RTCCFG 000F3F  
                                  _PVALUE FF6F                                    _RPINR1 000EE1  
                                  _SVALUE FF8F                                    _SPIGet 6FD6  
                                  _SPIPut 6F48                   i2RegisterSet@IRQ0select 0065  
               __size_of_MiMAC_PowerState 0076                  ??_send_periodical_update 01FB  
                 i2RegisterSet@IRQ1select 0064                  __end_of_TX_POWER_1_DB_MW FFB6  
                __end_of_TX_POWER_4_DB_MW FFC3                                TxPacket@t1 019D  
                              TxPacket@t2 01A1                         _StaticSecurityKey FFEC  
                      __size_of_SetRFMode 0098                  __end_of_TX_POWER_7_DB_MW FFF7  
                          __CFG_XINST$OFF 000000                        _myUID_absconstaddr 01FFF6  
                                  _TxData 0146                          __end_of_labelcmp 60E6  
                           _m_temperature 0130                                    ___ftge 5BAE  
                                  ___lmul 67BA                                 ??___awdiv 018E  
                    MiWiTasks@sourcePANID 01E9                                 ??___ftadd 0198  
                                  _hasAck 00BC                                 ??___ftdiv 01A5  
                               ??___ftneg 01D2                                 ??___ftmul 01D8  
                               ??___fttol 01B2                 __size_of_MiApp_SetChannel 001E  
               __end_of_LIGHT_LEVEL_LABEL FFEB                                    _encode 37E6  
                __end_of_TX_POWER_INVALID FFC9                             ?_read_sensors 0001  
                  __end_of_myMUTA_version FFF3                  adapt_power_level@m_power 03F0  
                                  _memcpy 6A54                                    clear_0 65D4  
                                  clear_1 65E2                                    clear_2 65F4  
                                  clear_3 6600                                    clear_4 660C  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0190  
                            _CCM_Dec$2093 01BA                   __end_of_decode_variable 59F6  
                     __size_of_RTCC_reset 001E                __p_StaticSecurityKey_const FFEC  
          __size_of_SearchForShortAddress 008C             __end_of_SearchForShortAddress 65CE  
                      decode_variable@var 01A0                                    floor@i 01CA  
                                  floor@x 01C7                     ___ftmul@f3_as_product 01DC  
                       __end_ofi1___ftadd 4128                     ?_SearchForLongAddress 0001  
                 __p_myMUTA_version_const FFF2                __end_of_dBm_to_mW_ufixed16 5166  
                            __pdataCOMRAM 0048                              _CCM_Enc$2085 01B6  
                  process_update_answer@i 03F9                            _openSocketInfo 0100  
                            __mediumconst FEF2                     ?_MiMAC_ReceivedPacket 0001  
                  do_POWER_TEST@power_lvl 03E8                                    tblptrh 000FF7  
                                  tblptrl 000FF6                      _myMODEL_absconstaddr 01FFF4  
                                  tblptru 000FF8               ??_MiApp_EstablishConnection 03E7  
                               ?_DELAY_ms 0196                       __end_of_RegisterSet 6C4C  
                   _process_update_answer 3C02                              ?_timer_reset 0001  
                           ?_RegisterRead 0001         __end_of_security_force_key_update 6C06  
                     __size_ofi2_TxPacket 01B0                         _ReceivedBankIndex 0145  
                           _SendMACPacket 66C8                         ??_InitSymbolTimer 018A  
                            ?i2_SetRFMode 0001                       __size_ofi1___ftpack 00AE  
    MiApp_UnicastAddress@MiWiFrameControl 03E4                         _SYSTEM_Initialize 54D0  
                      __size_of_WriteI2C1 0068                      _MiApp_DiscardMessage 6FE0  
                              __accesstop 0060                        __size_of_WriteFIFO 0042  
                 __end_of__initialization 6642                                ___altoft@c 01BD  
                MiApp_SearchConnection@t1 03D8                  MiApp_SearchConnection@t2 03DC  
                              ___ftadd@f1 0192                                ___ftadd@f2 0195  
                              ___ftge@ff1 018A                                ___ftge@ff2 018D  
               __end_of_StaticSecurityKey FFF4                           i1___ftpack@sign 0005  
         MiMAC_ReceivedPacket@currentTick 01C5                        ?_SYSTEM_Initialize 0001  
                     __size_of_MiMAC_Init 0144                             ___rparam_used 000000  
                              ___ftdiv@f1 019F                                ___ftdiv@f2 01A2  
                              ___ftdiv@f3 01A9                  MIWIInterruptHandler@bAck 008F  
                       CCM_Enc@payloadLen 01B1                                ___ftneg@f1 01CF  
                  __size_of_do_POWER_TEST 0162                   __end_of_FAILEDMSG_LABEL FFE7  
                  ?_AddNodeToNetworkTable 0001                                ___ftmul@f1 01D2  
                              ___ftmul@f2 01D5            __size_of_send_writables_update 013C  
                      __size_of_do_UPDATE 0188              __end_of_findNextNetworkEntry 6D56  
           __end_of_send_writables_update 4F0C                                ___fttol@f1 01AE  
                   _ActiveScanResultIndex 0142                            __pcstackCOMRAM 0001  
                       __end_of_MiWiTasks 0C7A                                 ?i2_SPIGet 0001  
                               ?i2_SPIPut 0001                              __pidataBANK1 6FF4  
                     ??_SYSTEM_Initialize 018A                                ___lltoft@c 0196  
                          ??_read_sensors 01E1                     i2RegisterRead@address 0065  
                           __end_of_myUID FFF8                             __end_of_floor 5902  
                           __end_of_frexp 6542          MiMAC_ReceivedPacket@FrameCounter 01C9  
                               CTR@nounce 01A6           MiApp_UnicastAddress@DestAddress 01EE  
                              ___lwtoft@c 0192                           TxPacket@rssival 01AB  
                             OpenSocket@i 01FA           __size_of_MiApp_SearchConnection 0202  
                         _ConnectionTable 0246                           __CFG_OSC$INTOSC 000000  
                        ??i2_RegisterRead 0062                         __end_of_SetRFMode 641A  
                            ?i2_WriteFIFO 0001                          ?_sleep_and_reset 0001  
                              ??_DELAY_ms 0198                            ??_RegisterRead 018C  
                          ?_SendMACPacket 01C3                                   ??_floor 01CA  
                                 ??_frexp 018F                 __end_of_SYSTEM_Initialize 55EE  
         MiApp_TransceiverPowerState@Mode 019E                 MiWiTasks@destShortAddress 01E4  
                        ?_update_variable 0001                     isSameAddress@Address1 018A  
                   isSameAddress@Address2 018C                                 ?_ReadI2C1 0001  
            __size_of_send_initial_update 07A0                                __pbssBANK0 00A3  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                     ?_MiApp_DiscardMessage 0001  
                             ?_OpenSocket 0001               __size_of_MiApp_ProtocolInit 0126  
                                 ?_SPIGet 0001          adapt_power_level@last_good_power 03EF  
                                 CTR@text 01A1                                 ?_OpenI2C1 018A  
                                 ?_SPIPut 0001                        RegisterSet@setting 018C  
                          isSameAddress@i 0190                             _m_uptime_days 0133  
                     i2RegisterRead@value 0062           __size_of_send_periodical_update 0678  
                       _m_failed_messages 011E                          _MiMAC_SetChannel 5F74  
                              CBC_MAC@MIC 01A6                 _MiApp_EstablishConnection 2932  
                MiMAC_SetAltAddress@PANID 018C                              CBC_MAC@block 01AB  
                      _mW_ufixed16_to_dBm 5C76                                CBC_MAC@len 01A3  
                              CBC_MAC@key 01A4                                 ?_TxPacket 0194  
                               ?_RtccWrOn 0001                          _MiMAC_SendPacket 3592  
                              ??i2_SPIGet 0062                               _UpF_updated 00BB  
                                 ?___ftge 018A                            _MiMAC_SetPower 6D92  
                              ??i2_SPIPut 0060                                   ?___lmul 018A  
                            OpenI2C1@slew 018A                                   ?_encode 018A  
                   __size_of_MiWi_TickGet 0074                                 ?___altoft 01BD  
                                 ?_memcpy 018A                                   _CBC_MAC 56FA  
                          ___lmul@product 0192                       ?_mW_ufixed16_to_dBm 018A  
                                 SPIPut@i 018A                                   SPIPut@v 018B  
                               ?___ftpack 018A                         __end_of_WriteI2C1 69F0  
                        ?_decode_variable 0194                                   _CCM_Dec 48A6  
                                 _CCM_Enc 4F0C                                 ?___lltoft 0196  
                  ??_SearchForLongAddress 018A                         __end_of_WriteFIFO 6CD4  
                             _RegisterSet 6C06       MiApp_SearchConnection@backupChannel 03E1  
                               ?___lwtoft 0192                                   u1165_21 3F8C  
                                 u1166_21 3FA0                                   i1l10503 3FCE  
                                 i1l10531 404A                                   i1l10533 4054  
                                 i1l10525 4028                                   i1l10509 3FF8  
                                 i1l10551 40D2                                   i1l10543 4088  
                                 i1l10535 405E                                   i1l10561 4102  
                                 i1l10545 4092                                   i1l10537 4066  
                                 i2l14005 1AE2                                   i2l13151 6478  
                                 i2l13143 644C                                   i2l13135 6420  
                                 i2l14111 1DE2                                   i2l13081 68B8  
                                 i2l14041 1B78                                   i2l14033 1B4C  
                                 i2l14009 1AF0                    ??_MiMAC_ReceivedPacket 01BD  
                                 i2l13147 6462                                   i2l13139 6436  
                                 i2l14123 1E20                                   i2l14107 1DD8  
                                 i2l14019 1B1A                                   i2l13157 648E  
                                 i2l14117 1E10                                   i2l14029 1B3C  
                                 i2l13095 68F4                                   i2l14135 1ECE  
                                 i2l14119 1E16                                   i2l14063 1C02  
                                 i2l14151 1F80                                   i2l14129 1EAC  
                                 i2l14073 1C98                                   i2l14081 1D26  
                                 i2l14049 1BC4                                   i2l14153 1F8E  
                                 i2l14139 1ED4                                   i2l14091 1D70  
                                 i2l14083 1D40                                   i2l14067 1C12  
                                 i2l14155 1F94                                   i2l14149 1F68  
                                 i2l14087 1D66                                   i2l14079 1D22  
                                 i2l14159 1F98                                   i2l13801 3EBA  
                                 i2l14169 1FBE                                   i2l14097 1D9E  
                                 i2l13811 3F4C                                   i2l13805 3ECA  
                                 i2l13815 3F60                                   i2l13751 3DD8  
                                 i2l13817 3F68                                   i2l13755 3DF4  
                                 i2l13773 3E4C                                   i2l13785 3E7E  
                                 i2l13777 3E68                                   i2l13789 3E8A  
                                 i2l13993 1ABA                                   i2l13997 1AC4  
                           _do_POWER_TEST 45E6                           MiWiTasks@cIndex 01DD  
                  ?_process_update_answer 0001                     i2WriteFIFO@IRQ0select 0064  
                   i2WriteFIFO@IRQ1select 0063                         __end_of_do_UPDATE 45E6  
                                 _RPINR21 000EFC                                   _RPINR22 000EFD  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                                 _SSP2BUF 000F75          MIWIInterruptHandler@ackInfoIndex 0091  
                               ?_labelcmp 018A                                do_UPDATE@i 03ED  
                                 _RF_Mode 00B8                                   _AckInfo 0228  
                                 _RSSIVal 00B9                              ??_RTCC_reset 018A  
                              ??_ReadI2C1 018A              __size_of_MiMAC_SetAltAddress 0002  
                    ??_mW_ufixed16_to_dBm 018B               AddNodeToNetworkTable@handle 0193  
                       _adapt_power_level 69F0                         ?_SYS_InterruptLow 0001  
                         _timerExtension1 00BE                           _timerExtension2 00BF  
                             TxPacket@CCA 0194                                ??_OpenI2C1 018B  
                MiApp_ConnectionMode@Mode 018B                           __size_of_SPIGet 000A  
                        _MiMAC_PowerState 6744                           __size_of_SPIPut 001C  
             __end_of_MiMAC_DiscardPacket 6ED0                    _MiApp_SearchConnection 3A00  
                      ?_adapt_power_level 01FB                        ??_SYS_InterruptLow 0015  
                              DELAY_ms@ms 0196                       _AcknowledgementAddr 0136  
                            _MiWi_TickGet 6830              __end_of_MIWIInterruptHandler 1FDA  
                  __end_of_MiMAC_SetPower 6DCC                                   __Hparam 0000  
                                 __Lparam 0000              __end_of_MiApp_ConnectionMode 6E5E  
                            ??i2_TxPacket 006B                                ??_TxPacket 0195  
                              ??_RtccWrOn 018A                                CCM_Dec@key 01B2  
            __end_of_MiApp_UnicastAddress 2932                       do_POWER_TEST@result 03E7  
                   adapt_power_level@rssi 03EE                            main@scanresult 0409  
                         __size_of___ftge 00C8                   __size_ofi2_MiWi_TickGet 0074  
                            ??i1___ftpack 0006                                   ___awdiv 5DFC  
                         __size_of___lmul 0076                                   ___ftadd 332A  
                     ??_adapt_power_level 01FC                                   ___ftdiv 49FC  
                   MIWIInterruptHandler@i 0094                                CCM_Enc@key 01B2  
                                 ___ftneg 6E02                                   ___ftmul 4748  
                              _myAppState 014B                          _MiApp_SetChannel 6F0E  
                                 ___fttol 4B48                           __size_of_encode 021A  
                              ??___altoft 01C1                           __CFG_STVREN$OFF 000000  
                   __CFG_RTCOSC$INTOSCREF 000000                            _tempNodeStatus 00BD  
                 __size_of_wait_for_1_sec 0036                                   __pcinit 65CE  
                         __size_of_memcpy 0062                                ??___ftpack 018F  
                                 __ramtop 0F00      __size_of_MiApp_TransceiverPowerState 003C  
               do_POWER_TEST@shortaddress 03EC                                ??___lltoft 019A  
                     __size_of_OpenSocket 00C0                      SendMACPacket@Address 01C3  
                                 __ptext0 306E                                   __ptext1 6E88  
                            ??_MiMAC_Init 019F                                   __ptext2 141A  
                                 __ptext3 0C7A                                   __ptext4 5804  
                                 __ptext5 64B2                                   __ptext6 5BAE  
                                 __ptext7 332A                                   __ptext8 62E4  
                                 __ptext9 664C                        __end_of_RTCC_reset 6F0E  
                                 _myPANID 0183                                   _myMODEL FFF4  
                              ??___lwtoft 0195                              __size_of_CTR 0120  
                  _send_periodical_update 141A                            ?_do_POWER_TEST 0001  
                               _T1CONbits 000FCD                 process_update_answer@size 03FC  
                                 _m_power 014A                  ??_MiApp_MessageAvailable 01EE  
                           _myLongAddress 00C8                  _send_initial_update$5141 03F3  
                _send_initial_update$5142 03F6                  _send_initial_update$5143 03F9  
                _send_initial_update$5144 03FC                           ??_SendMACPacket 01C6  
                  RegisterRead@IRQ0select 018E                     MiApp_UnicastAddress@i 03E5  
                  RegisterRead@IRQ1select 018D                                   encode@i 019A  
                    _findNextNetworkEntry 6D16                                ??_labelcmp 018E  
              __size_of_SYSTEM_Initialize 011E                    ??_MiApp_DiscardMessage 018A  
               __end_of_adapt_power_level 6A54                            __pintcode_body 6918  
                      __end_ofi2_TxPacket 3F7C                      end_of_initialization 6642  
                        _MiWiStateMachine 0138            __size_of_encode_uint8_variable 00A6  
                    __end_of_read_sensors 306E             __end_of_encode_uint8_variable 62E4  
                    __size_of_timer_reset 001A                                 i2SPIPut@i 0060  
                               i2SPIPut@v 0061                        __end_ofi1___ftpack 6194  
                dBm_to_mW_ufixed16@value1 018A                  dBm_to_mW_ufixed16@value2 018C  
                                 memcpy@d 0190                                   memcpy@n 018E  
                                 memcpy@s 0192             MIWIInterruptHandler@BankIndex 0093  
           MiMAC_SendPacket@MACPayloadLen 01BE                                   int_func 6918  
                    __size_ofi2_SetRFMode 0098                   SendMACPacket@PacketType 01C5  
                               i2u1552_45 6B52                                 i2u1472_45 6C82  
                               i2u1552_46 6B54                                 i2u1472_46 6C84  
                               i2u1553_45 6B5E                                 i2u1473_45 6C8E  
                               i2u1553_46 6B60                                 i2u1473_46 6C90  
                               i2u1554_45 6D06                                 i2u1554_46 6D08  
                               i2u1555_45 6D12                                 i2u1555_46 6D14  
                      __end_of_MiMAC_Init 4DD0                           ?_MiMAC_SetPower 0001  
             MIWIInterruptHandler@counter 0088               encode_uint8_variable@buffer 018A  
           encode_uint8_variable@m_signed 0197                   MiMAC_SetChannel@channel 0193  
                                 postdec1 000FE5                                   postdec2 000FDD  
                    __end_of_RegisterRead 6B0E                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                       _m_battery_voltage 012D                     __end_of_isSameAddress 6BB8  
    DELAY_ms@cyclesRequiredForEntireDelay 0198                       RegisterRead@address 018F  
                   MiWiTasks@CapacityByte 01E7                             WriteFIFO@Data 018C  
                              _timer_flag 014D                           _InitSymbolTimer 6F9A  
                   __end_ofi2_RegisterSet 6C92            encode_ufixed16_variable@buffer 018A  
                             _Pwr_updated 00B7                                labelcmp@p1 018A  
                              labelcmp@p2 018C                                 _TRISAbits 000F92  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                              encode@text 018A                     ?_findNextNetworkEntry 0001  
                           _mySecurityKey 00A3                                 i1___ftadd 3F7C  
                 MiMAC_SendPacket@TxIndex 01C1             MIWIInterruptHandler@PacketLen 0092  
                    __size_ofi2_WriteFIFO 0042                  _encode_ufixed16_variable 5EBA  
                       __size_of_DELAY_ms 00AA                                main@Status 0404  
                       CCM_Dec@payloadLen 01B1                MiMAC_SendPacket@transParam 01B9  
                      _dBm_to_mW_ufixed16 5040                   ??_AddNodeToNetworkTable 0190  
              MiMAC_SetAltAddress@Address 018A                               ___ftdiv@exp 01AC  
               MiApp_UnicastAddress@SecEn 01F1                            __end_of_PVALUE FF8F  
                          __end_of_SVALUE FFAF              __size_of_do_NETWORK_REGISTER 018C  
                          __end_of_SPIGet 6FE0                                main@result 0402  
                          __end_of_SPIPut 6F64                           wait_for_1_sec@i 018B  
                  SearchForShortAddress@i 018C                               ___ftmul@exp 01DB  
                     ?_dBm_to_mW_ufixed16 018A         process_update_answer@shortaddress 03FA  
                          __end_of___ftge 5C76                            __end_of___lmul 6830  
                     _send_initial_update 0C7A                         __size_ofi2_SPIGet 000A  
                       __size_ofi2_SPIPut 001C                             __pidataCOMRAM 6FFA  
                               _MiWiTasks 0000                           ??_do_POWER_TEST 01FA  
                          __end_of_encode 3A00        __size_of_MiApp_EstablishConnection 0436  
                          __end_of_memcpy 6AB6                                floor@expon 01CD  
         __size_of_MiApp_MessageAvailable 0012          MiMAC_ReceivedPacket@PayloadIndex 01CF  
                __end_of_MiMAC_SetChannel 602E                       start_initialization 65CE  
                   _SearchForShortAddress 6542                               __end_of_CTR 54D0  
                    ??_dBm_to_mW_ufixed16 018E                      _MIWIInterruptHandler 1A92  
                     WriteFIFO@IRQ0select 018E                             TxPacket@reTry 01A6  
                     WriteFIFO@IRQ1select 018D                                ?i1___ftadd 0009  
                __end_of_MiMAC_SendPacket 37E6                      _MiApp_ConnectionMode 6E32  
                      TxPacket@CCARetries 01A5                i2TxPacket@allowedTxFailure 007E  
                    _MiApp_UnicastAddress 2494                __size_of_adapt_power_level 0064  
           MIWIInterruptHandler@ackPacket 008B                      ?_send_initial_update 0001  
                               _SetRFMode 6382                ?_security_force_key_update 0001  
                            ??_OpenSocket 01FA                                  CBC_MAC@i 01AD  
                                CBC_MAC@j 01AC                                frexp@value 018A  
                                ??_SPIGet 018C                         __size_of_ReadI2C1 001C  
                                ??_SPIPut 018A                            _currentChannel 0189  
                       __size_of_OpenI2C1 0020                                 TxPacket@i 01AA  
                                CCM_Dec@i 01BC                                  CCM_Enc@i 01B8  
                                ??___ftge 0190                   __end_of_InitSymbolTimer 6FB2  
                          i2_MiWi_TickGet 68A4                                  ??___lmul 0192  
       MiApp_UnicastAddress@PermanentAddr 01F0                     _send_writables_update 4DD0  
                    do_NETWORK_REGISTER@i 03EA                                  ??_encode 018E  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK1 01FD  
                mW_ufixed16_to_dBm@value1 018B                         __size_of_TxPacket 01AA  
                mW_ufixed16_to_dBm@value2 018A                         __size_of_RtccWrOn 0012  
                          _wait_for_1_sec 6DCC                       _MiMAC_SetAltAddress 6FF8  
                                ??_memcpy 0190                                  ?_CBC_MAC 01A1  
                              ?_MiWiTasks 0001                                  ?_CCM_Dec 01AE  
                                ?_CCM_Enc 01AE                              ?_RegisterSet 018C  
                 ??_process_update_answer 03F0                        __end_of_OpenSocket 5DFC  
                       __size_of___altoft 009E             MIWIInterruptHandler@fifo_stat 008A  
                __end_of_MiMAC_PowerState 67BA                               _ALRMCFGbits 000F47  
                       RegisterRead@value 018C                         __size_of___ftpack 010C  
      MiApp_SearchConnection@ScanDuration 03E0                   MiWi_TickGet@currentTime 0190  
                       __size_of___lltoft 007C                               __pbssCOMRAM 0026  
                  ??_findNextNetworkEntry 018A                                 _WriteI2C1 6988  
                   ?_MIWIInterruptHandler 0001                         __size_of___lwtoft 002A  
                   __size_of_read_sensors 0306                                 _WriteFIFO 6C92  
                           __pcstackBANK0 0060                             __pcstackBANK1 018A  
                           __pcstackBANK3 03D4                             __pcstackBANK4 0400  
                   ?_MiApp_ConnectionMode 0001                                  CTR@block 01AB  
                             _defaultHops 01FE                     ?_MiApp_UnicastAddress 01EE  
              __end_of_MiApp_ProtocolInit 528C                     ??_send_initial_update 01FB  
              MiApp_EstablishConnection@i 03F9                         _consecutive_fails 0147  
                __end_of_MiApp_SetChannel 6F2C                                ?_SetRFMode 0001  
              __end_of_TX_POWER_N_2_DB_MW FFCF                      ?_MiMAC_SetAltAddress 018A  
                 ?_MiApp_SearchConnection 01EE                          __p_myMODEL_const FFF4  
                               _do_UPDATE 445E                __end_of_TX_POWER_N_5_DB_MW FFD5  
                             MiMAC_Init@i 019F                         __size_of_labelcmp 00B8  
              __end_of_TX_POWER_N_8_DB_MW FFBD                  __size_of_sleep_and_reset 0024  
                   __size_of_RegisterRead 0058                    _MiApp_MessageAvailable 6FC4  
            ?_MiApp_TransceiverPowerState 0001                  __size_of_update_variable 00EC  
                  __end_ofi2_MiWi_TickGet 6918                         MiMAC_SendPacket@i 01C2  
                        _MiWiCapacityInfo 0143           encode_uint8_variable@m_writable 0198  
                             CBC_MAC@text 01A1                                 __pintcode 0008  
                  __end_of_wait_for_1_sec 6E02                             __pmediumconst FEF2  
                                ?___awdiv 018A                                  ?___ftadd 0192  
               MiMAC_SendPacket@headerLen 01C0                                  ?___ftdiv 019F  
                                ?___ftneg 01CF                                  ?___ftmul 01D2  
                                ?___fttol 01AE               MiApp_UnicastAddress@t1_2763 03DC  
             MiApp_UnicastAddress@t2_2774 03E0                   ?_send_periodical_update 0001  
                             __pintcodelo 0018                              _read_sensors 2D68  
               __size_of_SYS_InterruptLow 00DE                security_force_key_update@i 018A  
                  ?_SearchForShortAddress 0001             __size_of_SearchForLongAddress 00CC  
                              ?_WriteI2C1 0001                                ?_WriteFIFO 0001  
                      _AcknowledgementSeq 01FD             __size_of_MiMAC_ReceivedPacket 04BA  
                                _DELAY_ms 6194                          CCM_Dec@headerLen 01B0  
                             ??i1___ftadd 000F                     do_UPDATE@shortaddress 03EB  
             MiWiTasks@sourceShortAddress 01EB                  __size_of_decode_variable 00F4  
                               _last_rssi 0148            __end_of_MiApp_SearchConnection 3C02  
                          __size_of_floor 00FE                            __size_of_frexp 0090  
                            _RegisterRead 6AB6             __end_of_BATTERY_VOLTAGE_LABEL FFE3  
                   ??_MiMAC_SetAltAddress 018E                                ?_do_UPDATE 03E7  
               MiMAC_SetPower@outputPower 0192               __size_of_mW_ufixed16_to_dBm 00C6  
                        ??_MiMAC_SetPower 0190               encode_ufixed16_variable@var 018C  
                  _UPDATE_FREQUENCY_LABEL FFF7                   __size_ofi2_RegisterRead 0058  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                    i2RegisterSet@setting 0062                                  _LATCbits 000F8B  
                               _tempPANID 013C                                  _PIE1bits 000F9D  
                                _IPR3bits 000FA5                   dBm_to_mW_ufixed16@power 018E  
                                _PIE3bits 000FA3                           ?i2_MiWi_TickGet 0060  
                                _PIR1bits 000F9E                                  _PIR3bits 000FA4  
           ??_MiApp_TransceiverPowerState 019E                                 _rxMessage 010C  
                                _RCONbits 000FD0                                  i2_SPIGet 6FEA  
                  ?_send_writables_update 0001                                  i2_SPIPut 6F64  
                         ?_wait_for_1_sec 0001                          ?_InitSymbolTimer 0001  
          __end_of_send_periodical_update 1A92                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                                  _SSP2CON1 000F72  
                encode_uint8_variable@var 018C                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
            __size_of_MiMAC_DiscardPacket 0024           MIWIInterruptHandler@RxPacketPtr 0090  
       process_update_answer@ack_required 03F8  MiApp_EstablishConnection@ActiveScanIndex 03F8  
                             ??_MiWiTasks 01D1                               _MACRxPacket 0116  
                               encode@key 018C                                 encode@sum 019F  
                                _RSSILock 0144                               _MACTxBuffer 02A0  
                           SetRFMode@mode 0190                          __size_of_CBC_MAC 010A  
                              _ADCON0bits 000FC2          encode_ufixed16_variable@m_signed 0197  
                              _ADCON1bits 000FC1                           _m_sent_messages 0122  
                        MiWiTasks@rxIndex 01E6                          __size_of_CCM_Dec 0156  
                        __size_of_CCM_Enc 0134                ??_encode_ufixed16_variable 0196  
                  ??_MIWIInterruptHandler 0082                         _SYS_InterruptHigh 0008  
                     _do_NETWORK_REGISTER 42D2                  do_NETWORK_REGISTER@p_uid 01FA  
                   i2TxPacket@TxPacketLen 007F                    ??_MiApp_ConnectionMode 018A  
                       __CFG_CFGPLLEN$OFF 000000                      _OutgoingFrameCounter 00AB  
                  ??_MiApp_UnicastAddress 01F2                        ?_SYS_InterruptHigh 0001  
                         _MiWiAckRequired 00B5                             ??_timer_reset 018A  
                   __end_of_SendMACPacket 6744                                  _ConnMode 00B2  
                    __end_of_UPTIME_LABEL FFFF                         ___lmul@multiplier 018A  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
          MiApp_EstablishConnection@retry 03F7                             ??i2_SetRFMode 0066  
      do_NETWORK_REGISTER@sleeping_device 01FC                               ??_SetRFMode 0190  
                                _ReadI2C1 6F2C                     SearchForLongAddress@i 018F  
                   SearchForLongAddress@j 018E             __size_of_MiApp_DiscardMessage 000A  
                              _ADRESHbits 000FC4                       ??_SYS_InterruptHigh 0095  
                              _ADRESLbits 000FC3                                  _TxMACSeq 00BA  
                                _ScanTime FF33                                  _OpenI2C1 6ED0  
                   _encode_uint8_variable 623E                                 frexp@eptr 018D  
                                __Hparam0 0000                      ?_do_NETWORK_REGISTER 01FA  
          __size_of_AddNodeToNetworkTable 0124             __end_of_AddNodeToNetworkTable 53B0  
                              _ANCON0bits 000F48                                _ANCON1bits 000F49  
                                __Lparam0 0000                                  _RxPacket 0350  
                                _TxBuffer 014E                                  _TxPacket 4128  
                                _RtccWrOn 6FB2                         ??_sleep_and_reset 019F  
                             CCM_Dec@text 01AE                    adapt_power_level@power 0001  
                   MiMAC_ReceivedPacket@i 01D0                     MiMAC_ReceivedPacket@j 01CE  
                   MiMAC_ReceivedPacket@k 01CD                       __end_of_POWER_LABEL FFEF  
                      main@best_candidate 0403                          __size_of___awdiv 00BE  
                        __size_of___ftadd 0268                          __size_of___ftdiv 014C  
                        __size_of___ftneg 0030                                  ___altoft 62E4  
                        __size_of___ftmul 015E                         ??_update_variable 0193  
                        __size_of___fttol 0144                           _tempLongAddress 0126  
              send_periodical_update@tmp2 03F0                                  ___ftpack 55EE  
                             CCM_Enc@text 01AE                 __end_of_SYS_InterruptHigh 6988  
                                ___lltoft 664C                  i2RegisterRead@IRQ0select 0064  
                                ___lwtoft 6E5E                  i2RegisterRead@IRQ1select 0063  
                  AddNodeToNetworkTable@i 0192                               ??_WriteI2C1 018A  
                    __size_of_RegisterSet 0046                             ??i2_WriteFIFO 0062  
                             ??_WriteFIFO 018C                         ?_MiMAC_SetChannel 0191  
                                __ptext10 6E02                                  __ptext11 6BB8  
                                __ptext20 6ED0                                  __ptext12 2D68  
                                __ptext21 3C02                                  __ptext13 6E5E  
                                __ptext30 445E                                  __ptext22 6DCC  
                                __ptext14 4B48                                  __ptext31 5040  
                                __ptext23 59F6                                  __ptext15 4748  
                                __ptext40 54D0                                  __ptext32 5902  
                                __ptext24 5C76                                  __ptext16 49FC  
                                __ptext41 6EF0                                  __ptext33 6D56  
                                __ptext25 602E                                  __ptext17 55EE  
                                __ptext50 2494                                  __ptext42 6FB2  
                                __ptext34 6744                                  __ptext26 6F80  
                                __ptext18 6988                                  __ptext51 3A00  
                                __ptext43 5166                                  __ptext35 42D2  
                                __ptext27 4DD0                                  __ptext19 6F2C  
                                __ptext60 6C92                                  __ptext52 66C8  
                                __ptext44 4C8C                                  __ptext36 6A54  
                                __ptext28 623E                                  __ptext61 6382  
                                __ptext53 6F0E                                  __ptext45 6194  
                                __ptext37 69F0                                  __ptext29 5EBA  
                                __ptext70 48A6                                  __ptext62 6C06  
                                __ptext54 5F74                                  __ptext46 67BA  
                                __ptext38 45E6                                  __ptext71 53B0  
                                __ptext63 6AB6                                  __ptext55 6FC4  
                                __ptext47 6F9A                                  __ptext39 6D92  
                                __ptext80 6EAC                                  __ptext72 56FA  
                                __ptext64 6FD6                                  __ptext56 0000  
                                __ptext48 2932                                  __ptext81 6E32  
                                __ptext73 37E6                                  __ptext65 6F48  
                                __ptext57 6FF8                                  __ptext49 5D3C  
                                __ptext90 6C4C                                  __ptext74 5DFC  
                                __ptext66 4F0C                                  __ptext58 3592  
                                __ptext91 6B0E                                  __ptext83 3F7C  
                                __ptext75 528C                                  __ptext67 1FDA  
                                __ptext59 4128                                  __ptext92 6FEA  
                                __ptext84 60E6                                  __ptext76 6D16  
                                __ptext68 6B66                                  __ptext93 6F64  
                                __ptext77 6542                                  __ptext69 6830  
                                __ptext94 68A4                                  __ptext86 1A92  
                                __ptext78 5AE2                                  __ptext87 3DCC  
                                __ptext79 6FE0                                  __ptext88 6CD4  
                                __ptext89 641A                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                                  _labelcmp 602E  
                TxPacket@allowedTxFailure 01A7                        ??_MiMAC_SetChannel 0192  
                       ?_MiMAC_SendPacket 01B9                             _labelcmp$3774 0191  
                            _SSP2CON1bits 000F72                                  _m_buffer 02E0  
                             ??_do_UPDATE 01FA               ??_security_force_key_update 018A  
                  __size_of_isSameAddress 0052                        ??_MiMAC_SendPacket 01BF  
                                _p_buffer 013A                         do_POWER_TEST@rssi 03EB  
                           __size_of_main 02BC                       __end_of_timer_reset 6F9A  
                       ??_decode_variable 019E                     ??_do_NETWORK_REGISTER 03E7  
                                _myParent 014C                    __size_ofi2_RegisterSet 0046  
                       _TEMPERATURE_LABEL FFEF                       __end_ofi2_SetRFMode 64B2  
                       WriteI2C1@data_out 018B                    MiApp_UnicastAddress@t1 03D4  
                  MiApp_UnicastAddress@t2 03D8                                  _tmpBlock 00CC  
                        _tempShortAddress 0187                                  int$flags 0049  
             MiApp_EstablishConnection@t1 03EF               MiApp_EstablishConnection@t2 03F3  
                       _TX_POWER_10_DB_MW FFD5              i2MiWi_TickGet@failureCounter 0065  
             process_update_answer@result 03F7                         MiMAC_PowerState@i 019D  
                       _TX_POWER_13_DB_MW FFDA                          _SYS_InterruptLow 0018  
                            _SSP1STATbits 000FC7                         read_sensors@value 01E8  
              MiMAC_SendPacket@MACPayload 01BC                         OpenI2C1@sync_mode 018B  
                   __end_of_do_POWER_TEST 4748                     findNextNetworkEntry@i 018A  
                       ?_MiMAC_PowerState 0001            __size_of_process_update_answer 01CA  
                              _INTCONbits 000FF2                           do_UPDATE@F10256 0140  
           __end_of_process_update_answer 3DCC                                  memcpy@d1 018A  
                         i2WriteFIFO@Data 0062                                  memcpy@s1 018C  
                      ??_MiMAC_PowerState 019C               __size_of_dBm_to_mW_ufixed16 0126  
                   do_UPDATE@ack_required 03EA                                  intlevel1 0000  
                                intlevel2 0000                         ?_MiApp_SetChannel 0001  
                 ?_MiApp_MessageAvailable 0001                       __end_ofi2_WriteFIFO 6D16  
                  ?_encode_uint8_variable 018A                            i2_RegisterRead 6B0E  
               __end_of_TEMPERATURE_LABEL FFF3                        ??_MiApp_SetChannel 0194  
                           ?_MiWi_TickGet 018A                               _POWER_LABEL FFEB  
                              _OSCCONbits 000FD3                        _m_update_frequency 01FF  
                      _MiApp_ProtocolInit 5166                 __end_of_TX_POWER_10_DB_MW FFDA  
                             _RTCVALHbits 000F3B                               _RTCVALLbits 000F3A  
               __end_of_TX_POWER_13_DB_MW FFDF                        _TX_POWER_N_2_DB_MW FFC9  
                           _MACInitParams 00AF                       MiMAC_Init@initValue 019C  
                      _TX_POWER_N_5_DB_MW FFCF                           do_UPDATE@p_buff 03E7  
                      _TX_POWER_N_8_DB_MW FFB6                 _security_force_key_update 6BB8  
                           _isSameAddress 6B66                   ??_SearchForShortAddress 018A  
                         do_UPDATE@result 03EF                       ?_MiApp_ProtocolInit 0001  
              MiWi_TickGet@failureCounter 018F                __size_of_SYS_InterruptHigh 6980  
                              _RTCCFGbits 000F3F          __end_of_encode_ufixed16_variable 5F74  
                          __p_myUID_const FFF6                          _BroadcastRecords 0026  
                      MiWiTasks@destPANID 01E2                          _TX_POWER_1_DB_MW FFAF  
                           i2_RegisterSet 6C4C                                _PPSCONbits 000EBF  
                        _TX_POWER_4_DB_MW FFBD               __end_of_send_initial_update 141A  
                             MiWiTasks@t1 01DE                               MiWiTasks@t2 01D9  
                       i2TxPacket@rssival 0081                       TxPacket@TxPacketLen 01A9  
                        _TX_POWER_7_DB_MW FFF3                ?_MiApp_EstablishConnection 01FB  
                             _timer_count 0048                      i2TxPacket@CCARetries 007C  
           __size_of_findNextNetworkEntry 0040                               _timer_reset 6F80  
          __end_of_MiApp_MessageAvailable 6FD6                    __end_ofi2_RegisterRead 6B66  
                        _TX_POWER_INVALID FFC3                       _MiMAC_DiscardPacket 6EAC  
                              _RTCC_reset 6EF0                               i2_SetRFMode 641A  
                              MiWiTasks@i 01ED                                MiWiTasks@j 01E8  
                    ??_MiApp_ProtocolInit 01A0                          i2TxPacket@status 007B  
                          do_POWER_TEST@i 03E9                          ??i2_MiWi_TickGet 0064  
                          read_sensors@t0 01E4                            read_sensors@t1 01E5  
                         i2TxPacket@reTry 007D                             do_UPDATE@size 03E9  
                          ??_MiWi_TickGet 018E              __end_of_SearchForLongAddress 5BAE  
                        ??_wait_for_1_sec 018A                             i2TxPacket@CCA 006A  
          _StaticSecurityKey_absconstaddr 01FFEC                 i2MiWi_TickGet@currentTime 0066  
                 ??_send_writables_update 01FB                               encode@delta 0198  
                   RegisterSet@IRQ0select 018F                     RegisterSet@IRQ1select 018E  
            __end_of_MiMAC_ReceivedPacket 2494                              i2TxPacket@t1 0073  
                            i2TxPacket@t2 0077                               encode@part1 019B  
                             encode@part2 019D                               i2TxPacket@i 0080  
