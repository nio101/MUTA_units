

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Aug 14 10:41:29 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	_StaticSecurityKey_const,global,ovrld,reloc=2,class=CODE,delta=1
     9                           	psect	_myMODEL_const,global,ovrld,reloc=2,class=CODE,delta=1
    10                           	psect	_myUID_const,global,ovrld,reloc=2,class=CODE,delta=1
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   117                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   118                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   119  0000                     
   120                           	psect	idataCOMRAM
   121  016B3A                     __pidataCOMRAM:
   122                           	opt stack 0
   123                           
   124                           ;initializer for _defaultHops
   125  016B3A  04                 	db	4
   126                           
   127                           ;initializer for _timer_count
   128  016B3B  01                 	db	1
   129                           
   130                           	psect	idataBANK1
   131  016B3C                     __pidataBANK1:
   132                           	opt stack 0
   133                           
   134                           ;initializer for _AcknowledgementSeq
   135  016B3C  FF                 	db	255
   136                           
   137                           ;initializer for _m_update_frequency
   138  016B3D  01                 	db	1
   139                           
   140                           	psect	mediumconst
   141  00FEF0                     __pmediumconst:
   142                           	opt stack 0
   143  00FEF0  00                 	db	0
   144  00FEF1                     _InitConfigRegs:
   145                           	opt stack 0
   146  00FEF1  0036               	dw	54
   147  00FEF3  0284               	dw	644
   148  00FEF5  0409               	dw	1033
   149  00FEF7  0609               	dw	1545
   150  00FEF9  080C               	dw	2060
   151  00FEFB  0AC1               	dw	2753
   152  00FEFD  0C7D               	dw	3197
   153  00FEFF  0E64               	dw	3684
   154  00FF01  1014               	dw	4116
   155  00FF03  1200               	dw	4608
   156  00FF05  1400               	dw	5120
   157  00FF07  1600               	dw	5632
   158  00FF09  1838               	dw	6200
   159  00FF0B  1AC8               	dw	6856
   160  00FF0D  1C0D               	dw	7181
   161  00FF0F  1E00               	dw	7680
   162  00FF11  2072               	dw	8306
   163  00FF13  2238               	dw	8760
   164  00FF15  2438               	dw	9272
   165  00FF17  2607               	dw	9735
   166  00FF19  2800               	dw	10240
   167  00FF1B  2A00               	dw	10752
   168  00FF1D  2C69               	dw	11369
   169  00FF1F  2E81               	dw	11905
   170  00FF21  307E               	dw	12414
   171  00FF23  3296               	dw	12950
   172  00FF25  34F0               	dw	13552
   173  00FF27  3688               	dw	13960
   174  00FF29  3840               	dw	14400
   175  00FF2B  3A00               	dw	14848
   176  00FF2D  3CE8               	dw	15592
   177  00FF2F  3E00               	dw	15872
   178  00FF31                     __end_of_InitConfigRegs:
   179                           	opt stack 0
   180  00FF31                     _ScanTime:
   181                           	opt stack 0
   182  00FF31  03C0               	dw	960
   183  00FF33  0000               	dw	0
   184  00FF35  05A0               	dw	1440
   185  00FF37  0000               	dw	0
   186  00FF39  0960               	dw	2400
   187  00FF3B  0000               	dw	0
   188  00FF3D  10E0               	dw	4320
   189  00FF3F  0000               	dw	0
   190  00FF41  1FE0               	dw	8160
   191  00FF43  0000               	dw	0
   192  00FF45  3DE0               	dw	15840
   193  00FF47  0000               	dw	0
   194  00FF49  79E0               	dw	31200
   195  00FF4B  0000               	dw	0
   196  00FF4D  F1E0               	dw	61920
   197  00FF4F  0000               	dw	0
   198  00FF51  E1E0               	dw	57824
   199  00FF53  0001               	dw	1
   200  00FF55  C1E0               	dw	49632
   201  00FF57  0003               	dw	3
   202  00FF59  81E0               	dw	33248
   203  00FF5B  0007               	dw	7
   204  00FF5D  01E0               	dw	480
   205  00FF5F  000F               	dw	15
   206  00FF61  01E0               	dw	480
   207  00FF63  001E               	dw	30
   208  00FF65  3D44               	dw	15684
   209  00FF67  001B               	dw	27
   210  00FF69  B40D               	dw	46093
   211  00FF6B  0015               	dw	21
   212  00FF6D                     __end_of_ScanTime:
   213                           	opt stack 0
   214  00FF6D                     _PVALUE:
   215                           	opt stack 0
   216  00FF6D  4F                 	db	79
   217  00FF6E  4F                 	db	79
   218  00FF6F  4F                 	db	79
   219  00FF70  4F                 	db	79
   220  00FF71  4F                 	db	79
   221  00FF72  4F                 	db	79
   222  00FF73  4F                 	db	79
   223  00FF74  4F                 	db	79
   224  00FF75  4F                 	db	79
   225  00FF76  4F                 	db	79
   226  00FF77  4F                 	db	79
   227  00FF78  4F                 	db	79
   228  00FF79  4F                 	db	79
   229  00FF7A  4F                 	db	79
   230  00FF7B  4F                 	db	79
   231  00FF7C  4F                 	db	79
   232  00FF7D  4F                 	db	79
   233  00FF7E  4F                 	db	79
   234  00FF7F  4F                 	db	79
   235  00FF80  4F                 	db	79
   236  00FF81  4F                 	db	79
   237  00FF82  4F                 	db	79
   238  00FF83  50                 	db	80
   239  00FF84  50                 	db	80
   240  00FF85  50                 	db	80
   241  00FF86  50                 	db	80
   242  00FF87  50                 	db	80
   243  00FF88  50                 	db	80
   244  00FF89  50                 	db	80
   245  00FF8A  50                 	db	80
   246  00FF8B  50                 	db	80
   247  00FF8C  50                 	db	80
   248  00FF8D                     __end_of_PVALUE:
   249                           	opt stack 0
   250  00FF8D                     _SVALUE:
   251                           	opt stack 0
   252  00FF8D  22                 	db	34
   253  00FF8E  24                 	db	36
   254  00FF8F  26                 	db	38
   255  00FF90  28                 	db	40
   256  00FF91  2A                 	db	42
   257  00FF92  2C                 	db	44
   258  00FF93  2E                 	db	46
   259  00FF94  30                 	db	48
   260  00FF95  32                 	db	50
   261  00FF96  34                 	db	52
   262  00FF97  37                 	db	55
   263  00FF98  39                 	db	57
   264  00FF99  3B                 	db	59
   265  00FF9A  3D                 	db	61
   266  00FF9B  3F                 	db	63
   267  00FF9C  41                 	db	65
   268  00FF9D  43                 	db	67
   269  00FF9E  45                 	db	69
   270  00FF9F  47                 	db	71
   271  00FFA0  4A                 	db	74
   272  00FFA1  4C                 	db	76
   273  00FFA2  4E                 	db	78
   274  00FFA3  05                 	db	5
   275  00FFA4  07                 	db	7
   276  00FFA5  09                 	db	9
   277  00FFA6  0B                 	db	11
   278  00FFA7  0D                 	db	13
   279  00FFA8  0F                 	db	15
   280  00FFA9  11                 	db	17
   281  00FFAA  14                 	db	20
   282  00FFAB  16                 	db	22
   283  00FFAC  18                 	db	24
   284  00FFAD                     __end_of_SVALUE:
   285                           	opt stack 0
   286  0000                     _StaticSecurityKey_absconstaddr	set	131052
   287  0000                     _myMODEL_absconstaddr	set	131060
   288  0000                     _myUID_absconstaddr	set	131062
   289  00FFAD  69                 	db	105
   290  00FFAE  6E                 	db	110
   291  00FFAF  76                 	db	118
   292  00FFB0  61                 	db	97
   293  00FFB1  6C                 	db	108
   294  00FFB2  69                 	db	105
   295  00FFB3  64                 	db	100
   296  00FFB4  21                 	db	33
   297  00FFB5  00                 	db	0
   298  00FFB6                     __end_of_TX_POWER_INVALID:
   299                           	opt stack 0
   300  00FFB6  30                 	db	48
   301  00FFB7  2E                 	db	46
   302  00FFB8  31                 	db	49
   303  00FFB9  35                 	db	53
   304  00FFBA  6D                 	db	109
   305  00FFBB  57                 	db	87
   306  00FFBC  00                 	db	0
   307  00FFBD                     __end_of_TX_POWER_N_8_DB_MW:
   308                           	opt stack 0
   309  00FFBD  31                 	db	49
   310  00FFBE  2E                 	db	46
   311  00FFBF  32                 	db	50
   312  00FFC0  6D                 	db	109
   313  00FFC1  57                 	db	87
   314  00FFC2  00                 	db	0
   315  00FFC3                     __end_of_TX_POWER_1_DB_MW:
   316                           	opt stack 0
   317  00FFC3  32                 	db	50
   318  00FFC4  2E                 	db	46
   319  00FFC5  35                 	db	53
   320  00FFC6  6D                 	db	109
   321  00FFC7  57                 	db	87
   322  00FFC8  00                 	db	0
   323  00FFC9                     __end_of_TX_POWER_4_DB_MW:
   324                           	opt stack 0
   325  00FFC9  30                 	db	48
   326  00FFCA  2E                 	db	46
   327  00FFCB  36                 	db	54
   328  00FFCC  6D                 	db	109
   329  00FFCD  57                 	db	87
   330  00FFCE  00                 	db	0
   331  00FFCF                     __end_of_TX_POWER_N_2_DB_MW:
   332                           	opt stack 0
   333  00FFCF  30                 	db	48
   334  00FFD0  2E                 	db	46
   335  00FFD1  33                 	db	51
   336  00FFD2  6D                 	db	109
   337  00FFD3  57                 	db	87
   338  00FFD4  00                 	db	0
   339  00FFD5                     __end_of_TX_POWER_N_5_DB_MW:
   340                           	opt stack 0
   341  00FFD5  31                 	db	49
   342  00FFD6  30                 	db	48
   343  00FFD7  6D                 	db	109
   344  00FFD8  57                 	db	87
   345  00FFD9  00                 	db	0
   346  00FFDA                     __end_of_TX_POWER_10_DB_MW:
   347                           	opt stack 0
   348  00FFDA  32                 	db	50
   349  00FFDB  30                 	db	48
   350  00FFDC  6D                 	db	109
   351  00FFDD  57                 	db	87
   352  00FFDE  00                 	db	0
   353  00FFDF                     __end_of_TX_POWER_13_DB_MW:
   354                           	opt stack 0
   355  00FFDF                     _BATTERY_VOLTAGE_LABEL:
   356                           	opt stack 0
   357  00FFDF  56                 	db	86
   358  00FFE0  42                 	db	66
   359  00FFE1  61                 	db	97
   360  00FFE2  00                 	db	0
   361  00FFE3                     __end_of_BATTERY_VOLTAGE_LABEL:
   362                           	opt stack 0
   363  00FFE3                     _FAILEDMSG_LABEL:
   364                           	opt stack 0
   365  00FFE3  46                 	db	70
   366  00FFE4  6C                 	db	108
   367  00FFE5  4D                 	db	77
   368  00FFE6  00                 	db	0
   369  00FFE7                     __end_of_FAILEDMSG_LABEL:
   370                           	opt stack 0
   371  00FFE7                     _LIGHT_LEVEL_LABEL:
   372                           	opt stack 0
   373  00FFE7  4C                 	db	76
   374  00FFE8  69                 	db	105
   375  00FFE9  74                 	db	116
   376  00FFEA  00                 	db	0
   377  00FFEB                     __end_of_LIGHT_LEVEL_LABEL:
   378                           	opt stack 0
   379  00FFEB                     _POWER_LABEL:
   380                           	opt stack 0
   381  00FFEB  50                 	db	80
   382  00FFEC  77                 	db	119
   383  00FFED  72                 	db	114
   384  00FFEE  00                 	db	0
   385  00FFEF                     __end_of_POWER_LABEL:
   386                           	opt stack 0
   387  00FFEF                     _TEMPERATURE_LABEL:
   388                           	opt stack 0
   389  00FFEF  54                 	db	84
   390  00FFF0  6D                 	db	109
   391  00FFF1  70                 	db	112
   392  00FFF2  00                 	db	0
   393  00FFF3                     __end_of_TEMPERATURE_LABEL:
   394                           	opt stack 0
   395  00FFF3  35                 	db	53
   396  00FFF4  6D                 	db	109
   397  00FFF5  57                 	db	87
   398  00FFF6  00                 	db	0
   399  00FFF7                     __end_of_TX_POWER_7_DB_MW:
   400                           	opt stack 0
   401  00FFF7                     _UPDATE_FREQUENCY_LABEL:
   402                           	opt stack 0
   403  00FFF7  55                 	db	85
   404  00FFF8  70                 	db	112
   405  00FFF9  46                 	db	70
   406  00FFFA  00                 	db	0
   407  00FFFB                     __end_of_UPDATE_FREQUENCY_LABEL:
   408                           	opt stack 0
   409  00FFFB                     _UPTIME_LABEL:
   410                           	opt stack 0
   411  00FFFB  55                 	db	85
   412  00FFFC  70                 	db	112
   413  00FFFD  74                 	db	116
   414  00FFFE  00                 	db	0
   415  00FFFF                     __end_of_UPTIME_LABEL:
   416                           	opt stack 0
   417  0000                     _StaticSecurityKey_absconstaddr	set	131052
   418  00FFFF  00                 	db	0	; dummy byte at the end
   419  0000                     
   420                           	psect	_StaticSecurityKey_const
   421  01FFEC                     __p_StaticSecurityKey_const:
   422                           	opt stack 0
   423  01FFEC                     _StaticSecurityKey:
   424                           	opt stack 0
   425  01FFEC  00                 	db	0
   426  01FFED  01                 	db	1
   427  01FFEE  02                 	db	2
   428  01FFEF  03                 	db	3
   429  01FFF0  04                 	db	4
   430  01FFF1  05                 	db	5
   431  01FFF2  06                 	db	6
   432  01FFF3  07                 	db	7
   433  01FFF4                     __end_of_StaticSecurityKey:
   434                           	opt stack 0
   435  0000                     _myMODEL_absconstaddr	set	131060
   436                           
   437                           	psect	_myMODEL_const
   438  01FFF4                     __p_myMODEL_const:
   439                           	opt stack 0
   440  01FFF4                     _myMODEL:
   441                           	opt stack 0
   442  01FFF4  01                 	db	1
   443  01FFF5  02                 	db	2
   444  01FFF6                     __end_of_myMODEL:
   445                           	opt stack 0
   446  0000                     _myUID_absconstaddr	set	131062
   447                           
   448                           	psect	_myUID_const
   449  01FFF6                     __p_myUID_const:
   450                           	opt stack 0
   451  01FFF6                     _myUID:
   452                           	opt stack 0
   453  01FFF6  00                 	db	0
   454  01FFF7  04                 	db	4
   455  01FFF8                     __end_of_myUID:
   456                           	opt stack 0
   457  0000                     _PPSCONbits	set	3775
   458  0000                     _RPINR1	set	3809
   459  0000                     _RPINR21	set	3836
   460  0000                     _RPINR22	set	3837
   461  0000                     _RPOR4	set	3780
   462  0000                     _RPOR5	set	3781
   463  0000                     _ALRMCFGbits	set	3911
   464  0000                     _ANCON0	set	3912
   465  0000                     _ANCON0bits	set	3912
   466  0000                     _ANCON1	set	3913
   467  0000                     _ANCON1bits	set	3913
   468  0000                     _RTCCAL	set	3902
   469  0000                     _RTCCFG	set	3903
   470  0000                     _RTCCFGbits	set	3903
   471  0000                     _RTCVALHbits	set	3899
   472  0000                     _RTCVALLbits	set	3898
   473  0000                     _UPUEN	set	31180
   474  0000                     _ADCON0bits	set	4034
   475  0000                     _ADCON1bits	set	4033
   476  0000                     _ADRESHbits	set	4036
   477  0000                     _ADRESLbits	set	4035
   478  0000                     _EECON2	set	4007
   479  0000                     _INTCON2bits	set	4081
   480  0000                     _INTCON3bits	set	4080
   481  0000                     _INTCONbits	set	4082
   482  0000                     _IPR3bits	set	4005
   483  0000                     _LATAbits	set	3977
   484  0000                     _LATBbits	set	3978
   485  0000                     _LATCbits	set	3979
   486  0000                     _OSCCONbits	set	4051
   487  0000                     _PIE1bits	set	3997
   488  0000                     _PIE3bits	set	4003
   489  0000                     _PIR1bits	set	3998
   490  0000                     _PIR3bits	set	4004
   491  0000                     _RCONbits	set	4048
   492  0000                     _SSP1ADD	set	4040
   493  0000                     _SSP1BUF	set	4041
   494  0000                     _SSP1CON1	set	4038
   495  0000                     _SSP1CON1bits	set	4038
   496  0000                     _SSP1CON2	set	4037
   497  0000                     _SSP1CON2bits	set	4037
   498  0000                     _SSP1STAT	set	4039
   499  0000                     _SSP1STATbits	set	4039
   500  0000                     _SSP2BUF	set	3957
   501  0000                     _SSP2CON1	set	3954
   502  0000                     _SSP2CON1bits	set	3954
   503  0000                     _SSP2STAT	set	3955
   504  0000                     _T1CON	set	4045
   505  0000                     _T1CONbits	set	4045
   506  0000                     _TMR1H	set	4047
   507  0000                     _TMR1L	set	4046
   508  0000                     _TRISA	set	3986
   509  0000                     _TRISAbits	set	3986
   510  0000                     _TRISB	set	3987
   511  0000                     _TRISBbits	set	3987
   512  0000                     _TRISC	set	3988
   513  0000                     _TRISCbits	set	3988
   514  0000                     _UCONbits	set	3941
   515  0000                     _PLLEN	set	31966
   516                           
   517                           ; #config settings
   518  0000                     
   519                           	psect	cinit
   520  016248                     __pcinit:
   521                           	opt stack 0
   522  016248                     start_initialization:
   523                           	opt stack 0
   524  016248                     __initialization:
   525                           	opt stack 0
   526                           
   527                           ; Clear objects allocated to BANK3 (212 bytes)
   528  016248  EE03  F000         	lfsr	0,__pbssBANK3
   529  01624C  0ED4               	movlw	212
   530  01624E                     clear_0:
   531  01624E  6AEE               	clrf	postinc0,c
   532  016250  06E8               	decf	wreg,f,c
   533  016252  E1FD               	bnz	clear_0
   534                           
   535                           ; Clear objects allocated to BANK2 (224 bytes)
   536  016254  EE02  F000         	lfsr	0,__pbssBANK2
   537  016258  0EE0               	movlw	224
   538  01625A                     clear_1:
   539  01625A  6AEE               	clrf	postinc0,c
   540  01625C  06E8               	decf	wreg,f,c
   541  01625E  E1FD               	bnz	clear_1
   542                           
   543                           ; Clear objects allocated to BANK1 (211 bytes)
   544  016260  EE01  F000         	lfsr	0,__pbssBANK1
   545  016264  0ED3               	movlw	211
   546  016266                     clear_2:
   547  016266  6AEE               	clrf	postinc0,c
   548  016268  06E8               	decf	wreg,f,c
   549  01626A  E1FD               	bnz	clear_2
   550                           
   551                           ; Clear objects allocated to BANK0 (14 bytes)
   552  01626C  EE00  F0D1         	lfsr	0,__pbssBANK0
   553  016270  0E0E               	movlw	14
   554  016272                     clear_3:
   555  016272  6AEE               	clrf	postinc0,c
   556  016274  06E8               	decf	wreg,f,c
   557  016276  E1FD               	bnz	clear_3
   558                           
   559                           ; Clear objects allocated to COMRAM (22 bytes)
   560  016278  EE00  F034         	lfsr	0,__pbssCOMRAM
   561  01627C  0E16               	movlw	22
   562  01627E                     clear_4:
   563  01627E  6AEE               	clrf	postinc0,c
   564  016280  06E8               	decf	wreg,f,c
   565  016282  E1FD               	bnz	clear_4
   566                           
   567                           ; Initialize objects allocated to BANK1 (2 bytes)
   568                           ; load TBLPTR registers with __pidataBANK1
   569  016284  0E3C               	movlw	low __pidataBANK1
   570  016286  6EF6               	movwf	tblptrl,c
   571  016288  0E6B               	movlw	high __pidataBANK1
   572  01628A  6EF7               	movwf	tblptrh,c
   573  01628C  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   574  01628E  6EF8               	movwf	tblptru,c
   575  016290  0009               	tblrd		*+	;fetch initializer
   576  016292  CFF5 F1FE          	movff	tablat,__pdataBANK1
   577  016296  0009               	tblrd		*+	;fetch initializer
   578  016298  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
   579                           
   580                           ; Initialize objects allocated to COMRAM (2 bytes)
   581                           ; load TBLPTR registers with __pidataCOMRAM
   582  01629C  0E3A               	movlw	low __pidataCOMRAM
   583  01629E  6EF6               	movwf	tblptrl,c
   584  0162A0  0E6B               	movlw	high __pidataCOMRAM
   585  0162A2  6EF7               	movwf	tblptrh,c
   586  0162A4  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   587  0162A6  6EF8               	movwf	tblptru,c
   588  0162A8  0009               	tblrd		*+	;fetch initializer
   589  0162AA  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   590  0162AE  0009               	tblrd		*+	;fetch initializer
   591  0162B0  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
   592  0162B4                     end_of_initialization:
   593                           	opt stack 0
   594  0162B4                     __end_of__initialization:
   595                           	opt stack 0
   596  0162B4  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   597  0162B6  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   598  0162B8  0100               	movlb	0
   599  0162BA  EF5A  F098         	goto	_main	;jump to C main() function
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           postinc0	equ	0xFEE
   605                           wreg	equ	0xFE8
   606                           
   607                           	psect	bssCOMRAM
   608  000034                     __pbssCOMRAM:
   609                           	opt stack 0
   610  000034                     _MACRxPacket:
   611                           	opt stack 0
   612  000034                     	ds	8
   613  00003C                     _MACInitParams:
   614                           	opt stack 0
   615  00003C                     	ds	3
   616  00003F                     _ConnMode:
   617                           	opt stack 0
   618  00003F                     	ds	1
   619  000040                     _IRQ1_Received:
   620                           	opt stack 0
   621  000040                     	ds	1
   622  000041                     _MACSeq:
   623                           	opt stack 0
   624  000041                     	ds	1
   625  000042                     _MiWiAckRequired:
   626                           	opt stack 0
   627  000042                     	ds	1
   628  000043                     _RF_Mode:
   629                           	opt stack 0
   630  000043                     	ds	1
   631  000044                     _RSSIVal:
   632                           	opt stack 0
   633  000044                     	ds	1
   634  000045                     _ReceivedBankIndex:
   635                           	opt stack 0
   636  000045                     	ds	1
   637  000046                     _TxMACSeq:
   638                           	opt stack 0
   639  000046                     	ds	1
   640  000047                     _hasAck:
   641                           	opt stack 0
   642  000047                     	ds	1
   643  000048                     _tempNodeStatus:
   644                           	opt stack 0
   645  000048                     	ds	1
   646  000049                     _timerExtension2:
   647                           	opt stack 0
   648  000049                     	ds	1
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           
   656                           	psect	dataCOMRAM
   657  00004A                     __pdataCOMRAM:
   658                           	opt stack 0
   659  00004A                     _defaultHops:
   660                           	opt stack 0
   661  00004A                     	ds	1
   662  00004B                     _timer_count:
   663                           	opt stack 0
   664  00004B                     	ds	1
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           
   672                           	psect	bssBANK0
   673  0000D1                     __pbssBANK0:
   674                           	opt stack 0
   675  0000D1                     _MTP:
   676                           	opt stack 0
   677  0000D1                     	ds	3
   678  0000D4                     _MiWiStateMachine:
   679                           	opt stack 0
   680  0000D4                     	ds	2
   681  0000D6                     _ActiveScanResultIndex:
   682                           	opt stack 0
   683  0000D6                     	ds	1
   684  0000D7                     _MiWiSeqNum:
   685                           	opt stack 0
   686  0000D7                     	ds	1
   687  0000D8                     _TxData:
   688                           	opt stack 0
   689  0000D8                     	ds	1
   690  0000D9                     _myParent:
   691                           	opt stack 0
   692  0000D9                     	ds	1
   693  0000DA                     _timerExtension1:
   694                           	opt stack 0
   695  0000DA                     	ds	1
   696  0000DB                     _myPANID:
   697                           	opt stack 0
   698  0000DB                     	ds	2
   699  0000DD                     _myShortAddress:
   700                           	opt stack 0
   701  0000DD                     	ds	2
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           
   709                           	psect	bssBANK1
   710  000100                     __pbssBANK1:
   711                           	opt stack 0
   712  000100                     _BroadcastRecords:
   713                           	opt stack 0
   714  000100                     	ds	32
   715  000120                     _openSocketInfo:
   716                           	opt stack 0
   717  000120                     	ds	12
   718  00012C                     _rxMessage:
   719                           	opt stack 0
   720  00012C                     	ds	10
   721  000136                     _mySecurityKey:
   722                           	opt stack 0
   723  000136                     	ds	8
   724  00013E                     _OutgoingFrameCounter:
   725                           	opt stack 0
   726  00013E                     	ds	4
   727  000142                     _m_failed_messages:
   728                           	opt stack 0
   729  000142                     	ds	4
   730  000146                     _m_sent_messages:
   731                           	opt stack 0
   732  000146                     	ds	4
   733  00014A                     _m_uptime_seconds:
   734                           	opt stack 0
   735  00014A                     	ds	4
   736  00014E                     _tempLongAddress:
   737                           	opt stack 0
   738  00014E                     	ds	4
   739  000152                     _m_battery_voltage:
   740                           	opt stack 0
   741  000152                     	ds	3
   742  000155                     _m_temperature:
   743                           	opt stack 0
   744  000155                     	ds	3
   745  000158                     _AcknowledgementAddr:
   746                           	opt stack 0
   747  000158                     	ds	2
   748  00015A                     _errno:
   749                           	opt stack 0
   750  00015A                     	ds	2
   751  00015C                     _p_buffer:
   752                           	opt stack 0
   753  00015C                     	ds	2
   754  00015E                     _tempPANID:
   755                           	opt stack 0
   756  00015E                     	ds	2
   757  000160                     do_NETWORK_REGISTER@F10202:
   758                           	opt stack 0
   759  000160                     	ds	2
   760  000162                     do_UPDATE@F10230:
   761                           	opt stack 0
   762  000162                     	ds	2
   763  000164                     _MiWiCapacityInfo:
   764                           	opt stack 0
   765  000164                     	ds	1
   766  000165                     _RSSILock:
   767                           	opt stack 0
   768  000165                     	ds	1
   769  000166                     _consecutive_fails:
   770                           	opt stack 0
   771  000166                     	ds	1
   772  000167                     _last_rssi:
   773                           	opt stack 0
   774  000167                     	ds	1
   775  000168                     _m_light_level:
   776                           	opt stack 0
   777  000168                     	ds	1
   778  000169                     _m_power:
   779                           	opt stack 0
   780  000169                     	ds	1
   781  00016A                     _myAppState:
   782                           	opt stack 0
   783  00016A                     	ds	1
   784  00016B                     _timer_flag:
   785                           	opt stack 0
   786  00016B                     	ds	1
   787  00016C                     _TxBuffer:
   788                           	opt stack 0
   789  00016C                     	ds	43
   790  000197                     _m_buffer:
   791                           	opt stack 0
   792  000197                     	ds	32
   793  0001B7                     _m_var:
   794                           	opt stack 0
   795  0001B7                     	ds	9
   796  0001C0                     _key:
   797                           	opt stack 0
   798  0001C0                     	ds	8
   799  0001C8                     _myLongAddress:
   800                           	opt stack 0
   801  0001C8                     	ds	4
   802  0001CC                     _tmpBlock:
   803                           	opt stack 0
   804  0001CC                     	ds	4
   805  0001D0                     _tempShortAddress:
   806                           	opt stack 0
   807  0001D0                     	ds	2
   808  0001D2                     _currentChannel:
   809                           	opt stack 0
   810  0001D2                     	ds	1
   811                           tblptru	equ	0xFF8
   812                           tblptrh	equ	0xFF7
   813                           tblptrl	equ	0xFF6
   814                           tablat	equ	0xFF5
   815                           postinc0	equ	0xFEE
   816                           wreg	equ	0xFE8
   817                           
   818                           	psect	dataBANK1
   819  0001FE                     __pdataBANK1:
   820                           	opt stack 0
   821  0001FE                     _AcknowledgementSeq:
   822                           	opt stack 0
   823  0001FE                     	ds	1
   824  0001FF                     _m_update_frequency:
   825                           	opt stack 0
   826  0001FF                     	ds	1
   827                           tblptru	equ	0xFF8
   828                           tblptrh	equ	0xFF7
   829                           tblptrl	equ	0xFF6
   830                           tablat	equ	0xFF5
   831                           postinc0	equ	0xFEE
   832                           wreg	equ	0xFE8
   833                           
   834                           	psect	bssBANK2
   835  000200                     __pbssBANK2:
   836                           	opt stack 0
   837  000200                     _IncomingFrameCounter:
   838                           	opt stack 0
   839  000200                     	ds	40
   840  000228                     _AckInfo:
   841                           	opt stack 0
   842  000228                     	ds	30
   843  000246                     _ConnectionTable:
   844                           	opt stack 0
   845  000246                     	ds	90
   846  0002A0                     _MACTxBuffer:
   847                           	opt stack 0
   848  0002A0                     	ds	64
   849                           tblptru	equ	0xFF8
   850                           tblptrh	equ	0xFF7
   851                           tblptrl	equ	0xFF6
   852                           tablat	equ	0xFF5
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           
   856                           	psect	bssBANK3
   857  000300                     __pbssBANK3:
   858                           	opt stack 0
   859  000300                     _ActiveScanResults:
   860                           	opt stack 0
   861  000300                     	ds	80
   862  000350                     _RxPacket:
   863                           	opt stack 0
   864  000350                     	ds	132
   865                           tblptru	equ	0xFF8
   866                           tblptrh	equ	0xFF7
   867                           tblptrl	equ	0xFF6
   868                           tablat	equ	0xFF5
   869                           postinc0	equ	0xFEE
   870                           wreg	equ	0xFE8
   871                           
   872                           	psect	cstackBANK3
   873  0003D4                     __pcstackBANK3:
   874                           	opt stack 0
   875  0003D4                     send_initial_update@tmp2:
   876                           	opt stack 0
   877  0003D4                     send_periodical_update@tmp2:
   878                           	opt stack 0
   879                           
   880                           ; 3 bytes @ 0x0
   881  0003D4                     	ds	3
   882  0003D7                     _send_initial_update$5076:
   883                           	opt stack 0
   884  0003D7                     _send_periodical_update$5080:
   885                           	opt stack 0
   886                           
   887                           ; 3 bytes @ 0x3
   888  0003D7                     	ds	3
   889  0003DA                     _send_initial_update$5077:
   890                           	opt stack 0
   891  0003DA                     _send_periodical_update$5081:
   892                           	opt stack 0
   893                           
   894                           ; 3 bytes @ 0x6
   895  0003DA                     	ds	3
   896  0003DD                     _send_initial_update$5078:
   897                           	opt stack 0
   898  0003DD                     _send_periodical_update$5082:
   899                           	opt stack 0
   900                           
   901                           ; 3 bytes @ 0x9
   902  0003DD                     	ds	3
   903  0003E0                     _send_initial_update$5079:
   904                           	opt stack 0
   905  0003E0                     _send_periodical_update$5083:
   906                           	opt stack 0
   907                           
   908                           ; 3 bytes @ 0xC
   909  0003E0                     	ds	3
   910  0003E3                     send_initial_update@tmp:
   911                           	opt stack 0
   912  0003E3                     send_periodical_update@tmp:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0xF
   916  0003E3                     	ds	2
   917  0003E5                     
   918                           ; 0 bytes @ 0x11
   919  0003E5                     	ds	2
   920  0003E7                     main@result:
   921                           	opt stack 0
   922                           
   923                           ; 1 bytes @ 0x13
   924  0003E7                     	ds	1
   925  0003E8                     main@best_candidate:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x14
   929  0003E8                     	ds	1
   930  0003E9                     main@Status:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x15
   934  0003E9                     	ds	1
   935  0003EA                     main@best_RSSI:
   936                           	opt stack 0
   937                           
   938                           ; 1 bytes @ 0x16
   939  0003EA                     	ds	1
   940  0003EB                     main@x:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x17
   944  0003EB                     	ds	2
   945  0003ED                     main@j:
   946                           	opt stack 0
   947                           
   948                           ; 1 bytes @ 0x19
   949  0003ED                     	ds	1
   950  0003EE                     main@scanresult:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x1A
   954  0003EE                     	ds	1
   955                           tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           
   962                           	psect	cstackBANK2
   963  0002E0                     __pcstackBANK2:
   964                           	opt stack 0
   965  0002E0                     MiApp_SearchConnection@channelMask:
   966                           	opt stack 0
   967  0002E0                     MiApp_UnicastAddress@t1:
   968                           	opt stack 0
   969                           
   970                           ; 4 bytes @ 0x0
   971  0002E0                     	ds	4
   972  0002E4                     MiApp_SearchConnection@t1:
   973                           	opt stack 0
   974  0002E4                     MiApp_UnicastAddress@t2:
   975                           	opt stack 0
   976                           
   977                           ; 4 bytes @ 0x4
   978  0002E4                     	ds	4
   979  0002E8                     MiApp_SearchConnection@t2:
   980                           	opt stack 0
   981  0002E8                     MiApp_UnicastAddress@t1_2763:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x8
   985  0002E8                     	ds	4
   986  0002EC                     MiApp_SearchConnection@ScanDuration:
   987                           	opt stack 0
   988  0002EC                     MiApp_UnicastAddress@t2_2774:
   989                           	opt stack 0
   990                           
   991                           ; 4 bytes @ 0xC
   992  0002EC                     	ds	1
   993  0002ED                     MiApp_SearchConnection@backupChannel:
   994                           	opt stack 0
   995                           
   996                           ; 1 bytes @ 0xD
   997  0002ED                     	ds	1
   998  0002EE                     MiApp_SearchConnection@i:
   999                           	opt stack 0
  1000                           
  1001                           ; 1 bytes @ 0xE
  1002  0002EE                     	ds	2
  1003  0002F0                     MiApp_UnicastAddress@MiWiFrameControl:
  1004                           	opt stack 0
  1005                           
  1006                           ; 1 bytes @ 0x10
  1007  0002F0                     	ds	1
  1008  0002F1                     MiApp_UnicastAddress@i:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x11
  1012  0002F1                     	ds	1
  1013  0002F2                     MiApp_UnicastAddress@handle:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x12
  1017  0002F2                     	ds	1
  1018  0002F3                     ??_process_update_answer:
  1019  0002F3                     adapt_power_level@rssi:
  1020                           	opt stack 0
  1021  0002F3                     MiApp_EstablishConnection@t1:
  1022                           	opt stack 0
  1023                           
  1024                           ; 4 bytes @ 0x13
  1025  0002F3                     	ds	1
  1026  0002F4                     adapt_power_level@last_good_power:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x14
  1030  0002F4                     	ds	1
  1031  0002F5                     adapt_power_level@m_power:
  1032                           	opt stack 0
  1033                           
  1034                           ; 1 bytes @ 0x15
  1035  0002F5                     	ds	2
  1036  0002F7                     MiApp_EstablishConnection@t2:
  1037                           	opt stack 0
  1038                           
  1039                           ; 4 bytes @ 0x17
  1040  0002F7                     	ds	3
  1041  0002FA                     process_update_answer@result:
  1042                           	opt stack 0
  1043                           
  1044                           ; 1 bytes @ 0x1A
  1045  0002FA                     	ds	1
  1046  0002FB                     MiApp_EstablishConnection@retry:
  1047                           	opt stack 0
  1048  0002FB                     process_update_answer@ack_required:
  1049                           	opt stack 0
  1050                           
  1051                           ; 1 bytes @ 0x1B
  1052  0002FB                     	ds	1
  1053  0002FC                     MiApp_EstablishConnection@ActiveScanIndex:
  1054                           	opt stack 0
  1055  0002FC                     process_update_answer@i:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x1C
  1059  0002FC                     	ds	1
  1060  0002FD                     MiApp_EstablishConnection@i:
  1061                           	opt stack 0
  1062  0002FD                     process_update_answer@shortaddress:
  1063                           	opt stack 0
  1064                           
  1065                           ; 2 bytes @ 0x1D
  1066  0002FD                     	ds	2
  1067  0002FF                     process_update_answer@size:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x1F
  1071  0002FF                     	ds	1
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           postinc0	equ	0xFEE
  1077                           wreg	equ	0xFE8
  1078                           
  1079                           	psect	cstackBANK1
  1080  0001D3                     __pcstackBANK1:
  1081                           	opt stack 0
  1082  0001D3                     ??___ftmul:
  1083  0001D3                     MiWiTasks@t2:
  1084                           	opt stack 0
  1085                           
  1086                           ; 4 bytes @ 0x0
  1087  0001D3                     	ds	3
  1088  0001D6                     ___ftmul@exp:
  1089                           	opt stack 0
  1090                           
  1091                           ; 1 bytes @ 0x3
  1092  0001D6                     	ds	1
  1093  0001D7                     MiWiTasks@cIndex:
  1094                           	opt stack 0
  1095  0001D7                     ___ftmul@f3_as_product:
  1096                           	opt stack 0
  1097                           
  1098                           ; 3 bytes @ 0x4
  1099  0001D7                     	ds	1
  1100  0001D8                     MiWiTasks@t1:
  1101                           	opt stack 0
  1102                           
  1103                           ; 4 bytes @ 0x5
  1104  0001D8                     	ds	2
  1105  0001DA                     ___ftmul@cntr:
  1106                           	opt stack 0
  1107                           
  1108                           ; 1 bytes @ 0x7
  1109  0001DA                     	ds	1
  1110  0001DB                     ___ftmul@sign:
  1111                           	opt stack 0
  1112                           
  1113                           ; 1 bytes @ 0x8
  1114  0001DB                     	ds	1
  1115  0001DC                     ??_read_sensors:
  1116  0001DC                     MiWiTasks@destPANID:
  1117                           	opt stack 0
  1118                           
  1119                           ; 2 bytes @ 0x9
  1120  0001DC                     	ds	2
  1121  0001DE                     MiWiTasks@destShortAddress:
  1122                           	opt stack 0
  1123                           
  1124                           ; 2 bytes @ 0xB
  1125  0001DE                     	ds	1
  1126  0001DF                     read_sensors@t0:
  1127                           	opt stack 0
  1128                           
  1129                           ; 1 bytes @ 0xC
  1130  0001DF                     	ds	1
  1131  0001E0                     MiWiTasks@rxIndex:
  1132                           	opt stack 0
  1133  0001E0                     read_sensors@t1:
  1134                           	opt stack 0
  1135                           
  1136                           ; 1 bytes @ 0xD
  1137  0001E0                     	ds	1
  1138  0001E1                     MiWiTasks@CapacityByte:
  1139                           	opt stack 0
  1140  0001E1                     read_sensors@adc_result:
  1141                           	opt stack 0
  1142                           
  1143                           ; 2 bytes @ 0xE
  1144  0001E1                     	ds	1
  1145  0001E2                     MiWiTasks@j:
  1146                           	opt stack 0
  1147                           
  1148                           ; 1 bytes @ 0xF
  1149  0001E2                     	ds	1
  1150  0001E3                     MiWiTasks@sourcePANID:
  1151                           	opt stack 0
  1152  0001E3                     read_sensors@value:
  1153                           	opt stack 0
  1154                           
  1155                           ; 2 bytes @ 0x10
  1156  0001E3                     	ds	2
  1157  0001E5                     MiWiTasks@sourceShortAddress:
  1158                           	opt stack 0
  1159                           
  1160                           ; 2 bytes @ 0x12
  1161  0001E5                     	ds	2
  1162  0001E7                     MiWiTasks@i:
  1163                           	opt stack 0
  1164                           
  1165                           ; 1 bytes @ 0x14
  1166  0001E7                     	ds	1
  1167  0001E8                     MiApp_UnicastAddress@DestAddress:
  1168                           	opt stack 0
  1169  0001E8                     MiApp_SearchConnection@ChannelMap:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0x15
  1173  0001E8                     	ds	2
  1174  0001EA                     MiApp_UnicastAddress@PermanentAddr:
  1175                           	opt stack 0
  1176                           
  1177                           ; 1 bytes @ 0x17
  1178  0001EA                     	ds	1
  1179  0001EB                     MiApp_UnicastAddress@SecEn:
  1180                           	opt stack 0
  1181                           
  1182                           ; 1 bytes @ 0x18
  1183  0001EB                     	ds	1
  1184  0001EC                     ??_MiApp_UnicastAddress:
  1185  0001EC                     ??_MiApp_SearchConnection:
  1186                           
  1187                           ; 0 bytes @ 0x19
  1188  0001EC                     	ds	8
  1189  0001F4                     do_POWER_TEST@result:
  1190                           	opt stack 0
  1191  0001F4                     do_NETWORK_REGISTER@p_uid:
  1192                           	opt stack 0
  1193  0001F4                     do_UPDATE@p_buff:
  1194                           	opt stack 0
  1195                           
  1196                           ; 2 bytes @ 0x21
  1197  0001F4                     	ds	1
  1198  0001F5                     MiApp_EstablishConnection@Mode:
  1199                           	opt stack 0
  1200  0001F5                     do_POWER_TEST@power_lvl:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x22
  1204  0001F5                     	ds	1
  1205  0001F6                     ??_MiApp_EstablishConnection:
  1206  0001F6                     do_NETWORK_REGISTER@sleeping_device:
  1207                           	opt stack 0
  1208  0001F6                     do_UPDATE@size:
  1209                           	opt stack 0
  1210  0001F6                     do_POWER_TEST@i:
  1211                           	opt stack 0
  1212                           
  1213                           ; 2 bytes @ 0x23
  1214  0001F6                     	ds	1
  1215  0001F7                     do_UPDATE@ack_required:
  1216                           	opt stack 0
  1217  0001F7                     do_NETWORK_REGISTER@shortaddress:
  1218                           	opt stack 0
  1219                           
  1220                           ; 2 bytes @ 0x24
  1221  0001F7                     	ds	1
  1222  0001F8                     do_POWER_TEST@rssi:
  1223                           	opt stack 0
  1224  0001F8                     do_UPDATE@shortaddress:
  1225                           	opt stack 0
  1226                           
  1227                           ; 2 bytes @ 0x25
  1228  0001F8                     	ds	1
  1229  0001F9                     do_NETWORK_REGISTER@i:
  1230                           	opt stack 0
  1231  0001F9                     do_POWER_TEST@shortaddress:
  1232                           	opt stack 0
  1233                           
  1234                           ; 2 bytes @ 0x26
  1235  0001F9                     	ds	1
  1236  0001FA                     do_UPDATE@i:
  1237                           	opt stack 0
  1238                           
  1239                           ; 2 bytes @ 0x27
  1240  0001FA                     	ds	1
  1241  0001FB                     do_NETWORK_REGISTER@result:
  1242                           	opt stack 0
  1243  0001FB                     adapt_power_level@minimal_rssi:
  1244                           	opt stack 0
  1245                           
  1246                           ; 1 bytes @ 0x28
  1247  0001FB                     	ds	1
  1248  0001FC                     ??_adapt_power_level:
  1249  0001FC                     do_UPDATE@result:
  1250                           	opt stack 0
  1251                           
  1252                           ; 1 bytes @ 0x29
  1253  0001FC                     	ds	1
  1254  0001FD                     ??_send_initial_update:
  1255  0001FD                     ??_send_periodical_update:
  1256  0001FD                     ??_send_writables_update:
  1257                           
  1258                           ; 0 bytes @ 0x2A
  1259  0001FD                     	ds	1
  1260                           tblptru	equ	0xFF8
  1261                           tblptrh	equ	0xFF7
  1262                           tblptrl	equ	0xFF6
  1263                           tablat	equ	0xFF5
  1264                           postinc0	equ	0xFEE
  1265                           wreg	equ	0xFE8
  1266                           
  1267                           	psect	cstackBANK0
  1268  000060                     __pcstackBANK0:
  1269                           	opt stack 0
  1270  000060                     ??_MIWIInterruptHandler:
  1271                           
  1272                           ; 0 bytes @ 0x0
  1273  000060                     	ds	6
  1274  000066                     MIWIInterruptHandler@counter:
  1275                           	opt stack 0
  1276                           
  1277                           ; 2 bytes @ 0x6
  1278  000066                     	ds	2
  1279  000068                     MIWIInterruptHandler@fifo_stat:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x8
  1283  000068                     	ds	1
  1284  000069                     MIWIInterruptHandler@ackPacket:
  1285                           	opt stack 0
  1286                           
  1287                           ; 4 bytes @ 0x9
  1288  000069                     	ds	4
  1289  00006D                     MIWIInterruptHandler@bAck:
  1290                           	opt stack 0
  1291                           
  1292                           ; 1 bytes @ 0xD
  1293  00006D                     	ds	1
  1294  00006E                     MIWIInterruptHandler@RxPacketPtr:
  1295                           	opt stack 0
  1296                           
  1297                           ; 1 bytes @ 0xE
  1298  00006E                     	ds	1
  1299  00006F                     MIWIInterruptHandler@ackInfoIndex:
  1300                           	opt stack 0
  1301                           
  1302                           ; 1 bytes @ 0xF
  1303  00006F                     	ds	1
  1304  000070                     MIWIInterruptHandler@PacketLen:
  1305                           	opt stack 0
  1306                           
  1307                           ; 1 bytes @ 0x10
  1308  000070                     	ds	1
  1309  000071                     MIWIInterruptHandler@BankIndex:
  1310                           	opt stack 0
  1311                           
  1312                           ; 1 bytes @ 0x11
  1313  000071                     	ds	1
  1314  000072                     MIWIInterruptHandler@i:
  1315                           	opt stack 0
  1316                           
  1317                           ; 1 bytes @ 0x12
  1318  000072                     	ds	1
  1319  000073                     ??_SYS_InterruptHigh:
  1320                           
  1321                           ; 0 bytes @ 0x13
  1322  000073                     	ds	14
  1323  000081                     ??_SearchForLongAddress:
  1324  000081                     ??_wait_for_1_sec:
  1325  000081                     ??_WriteI2C1:
  1326  000081                     ??_MiApp_ConnectionMode:
  1327  000081                     ?_strcmp:
  1328                           	opt stack 0
  1329  000081                     ?___awdiv:
  1330                           	opt stack 0
  1331  000081                     ?___ftpack:
  1332                           	opt stack 0
  1333  000081                     ?_MiWi_TickGet:
  1334                           	opt stack 0
  1335  000081                     ?___lmul:
  1336                           	opt stack 0
  1337  000081                     ?___lldiv:
  1338                           	opt stack 0
  1339  000081                     SPIPut@i:
  1340                           	opt stack 0
  1341  000081                     findNextNetworkEntry@i:
  1342                           	opt stack 0
  1343  000081                     OpenI2C1@slew:
  1344                           	opt stack 0
  1345  000081                     security_force_key_update@i:
  1346                           	opt stack 0
  1347  000081                     MiMAC_SetAltAddress@Address:
  1348                           	opt stack 0
  1349  000081                     encode@text:
  1350                           	opt stack 0
  1351  000081                     isSameAddress@Address1:
  1352                           	opt stack 0
  1353  000081                     encode_uint8_variable@buffer:
  1354                           	opt stack 0
  1355  000081                     encode_uint16_variable@buffer:
  1356                           	opt stack 0
  1357  000081                     encode_ufixed16_variable@buffer:
  1358                           	opt stack 0
  1359  000081                     ___awdiv@dividend:
  1360                           	opt stack 0
  1361  000081                     memcpy@d1:
  1362                           	opt stack 0
  1363  000081                     strcmp@s1:
  1364                           	opt stack 0
  1365  000081                     ___ftpack@arg:
  1366                           	opt stack 0
  1367  000081                     frexp@value:
  1368                           	opt stack 0
  1369  000081                     ___ftge@ff1:
  1370                           	opt stack 0
  1371  000081                     ___lmul@multiplier:
  1372                           	opt stack 0
  1373  000081                     ___lldiv@dividend:
  1374                           	opt stack 0
  1375                           
  1376                           ; 4 bytes @ 0x21
  1377  000081                     	ds	1
  1378  000082                     SPIPut@v:
  1379                           	opt stack 0
  1380  000082                     MiApp_ConnectionMode@Mode:
  1381                           	opt stack 0
  1382  000082                     OpenI2C1@sync_mode:
  1383                           	opt stack 0
  1384  000082                     WriteI2C1@data_out:
  1385                           	opt stack 0
  1386  000082                     wait_for_1_sec@i:
  1387                           	opt stack 0
  1388                           
  1389                           ; 2 bytes @ 0x22
  1390  000082                     	ds	1
  1391  000083                     RegisterRead@value:
  1392                           	opt stack 0
  1393  000083                     WriteFIFO@Data:
  1394                           	opt stack 0
  1395  000083                     SearchForShortAddress@i:
  1396                           	opt stack 0
  1397  000083                     RegisterSet@setting:
  1398                           	opt stack 0
  1399  000083                     MiMAC_SetAltAddress@PANID:
  1400                           	opt stack 0
  1401  000083                     encode@key:
  1402                           	opt stack 0
  1403  000083                     isSameAddress@Address2:
  1404                           	opt stack 0
  1405  000083                     ___awdiv@divisor:
  1406                           	opt stack 0
  1407  000083                     memcpy@s1:
  1408                           	opt stack 0
  1409  000083                     strcmp@s2:
  1410                           	opt stack 0
  1411  000083                     encode_uint8_variable@var:
  1412                           	opt stack 0
  1413  000083                     encode_uint16_variable@var:
  1414                           	opt stack 0
  1415  000083                     encode_ufixed16_variable@var:
  1416                           	opt stack 0
  1417                           
  1418                           ; 9 bytes @ 0x23
  1419  000083                     	ds	1
  1420  000084                     RegisterRead@IRQ1select:
  1421                           	opt stack 0
  1422  000084                     WriteFIFO@IRQ1select:
  1423                           	opt stack 0
  1424  000084                     ___ftpack@exp:
  1425                           	opt stack 0
  1426  000084                     frexp@eptr:
  1427                           	opt stack 0
  1428  000084                     ___ftge@ff2:
  1429                           	opt stack 0
  1430                           
  1431                           ; 3 bytes @ 0x24
  1432  000084                     	ds	1
  1433  000085                     ??_strcmp:
  1434  000085                     ??_MiWi_TickGet:
  1435  000085                     ??_encode:
  1436  000085                     RegisterSet@IRQ1select:
  1437                           	opt stack 0
  1438  000085                     RegisterRead@IRQ0select:
  1439                           	opt stack 0
  1440  000085                     WriteFIFO@IRQ0select:
  1441                           	opt stack 0
  1442  000085                     SearchForLongAddress@j:
  1443                           	opt stack 0
  1444  000085                     ___awdiv@counter:
  1445                           	opt stack 0
  1446  000085                     ___ftpack@sign:
  1447                           	opt stack 0
  1448  000085                     memcpy@n:
  1449                           	opt stack 0
  1450  000085                     ___lmul@multiplicand:
  1451                           	opt stack 0
  1452  000085                     ___lldiv@divisor:
  1453                           	opt stack 0
  1454                           
  1455                           ; 4 bytes @ 0x25
  1456  000085                     	ds	1
  1457  000086                     ??___ftpack:
  1458  000086                     ??_frexp:
  1459  000086                     MiWi_TickGet@failureCounter:
  1460                           	opt stack 0
  1461  000086                     RegisterSet@IRQ0select:
  1462                           	opt stack 0
  1463  000086                     RegisterRead@address:
  1464                           	opt stack 0
  1465  000086                     SearchForLongAddress@i:
  1466                           	opt stack 0
  1467  000086                     ___awdiv@sign:
  1468                           	opt stack 0
  1469  000086                     strcmp@r:
  1470                           	opt stack 0
  1471                           
  1472                           ; 1 bytes @ 0x26
  1473  000086                     	ds	1
  1474  000087                     ??_AddNodeToNetworkTable:
  1475  000087                     ??_MiMAC_SetPower:
  1476  000087                     ??___ftge:
  1477  000087                     SetRFMode@mode:
  1478                           	opt stack 0
  1479  000087                     isSameAddress@i:
  1480                           	opt stack 0
  1481  000087                     ___awdiv@quotient:
  1482                           	opt stack 0
  1483  000087                     memcpy@d:
  1484                           	opt stack 0
  1485  000087                     MiWi_TickGet@currentTime:
  1486                           	opt stack 0
  1487                           
  1488                           ; 4 bytes @ 0x27
  1489  000087                     	ds	1
  1490  000088                     MiMAC_SetChannel@offsetFreq:
  1491                           	opt stack 0
  1492                           
  1493                           ; 1 bytes @ 0x28
  1494  000088                     	ds	1
  1495  000089                     ??_MiMAC_SetChannel:
  1496  000089                     ?___ftadd:
  1497                           	opt stack 0
  1498  000089                     ?___lwtoft:
  1499                           	opt stack 0
  1500  000089                     MiMAC_SetPower@outputPower:
  1501                           	opt stack 0
  1502  000089                     AddNodeToNetworkTable@i:
  1503                           	opt stack 0
  1504  000089                     ___lwtoft@c:
  1505                           	opt stack 0
  1506  000089                     memcpy@s:
  1507                           	opt stack 0
  1508  000089                     ___ftadd@f1:
  1509                           	opt stack 0
  1510  000089                     ___lmul@product:
  1511                           	opt stack 0
  1512  000089                     ___lldiv@quotient:
  1513                           	opt stack 0
  1514                           
  1515                           ; 4 bytes @ 0x29
  1516  000089                     	ds	1
  1517  00008A                     MiMAC_SetChannel@channel:
  1518                           	opt stack 0
  1519  00008A                     AddNodeToNetworkTable@handle:
  1520                           	opt stack 0
  1521                           
  1522                           ; 1 bytes @ 0x2A
  1523  00008A                     	ds	1
  1524  00008B                     ?_decode_variable:
  1525                           	opt stack 0
  1526  00008B                     TxPacket@CCA:
  1527                           	opt stack 0
  1528  00008B                     MiApp_SetChannel@channel:
  1529                           	opt stack 0
  1530  00008B                     decode_variable@p_buffer:
  1531                           	opt stack 0
  1532                           
  1533                           ; 2 bytes @ 0x2B
  1534  00008B                     	ds	1
  1535  00008C                     ??_TxPacket:
  1536  00008C                     ___ftadd@f2:
  1537                           	opt stack 0
  1538                           
  1539                           ; 3 bytes @ 0x2C
  1540  00008C                     	ds	1
  1541  00008D                     ?___lltoft:
  1542                           	opt stack 0
  1543  00008D                     ___lldiv@counter:
  1544                           	opt stack 0
  1545  00008D                     DELAY_ms@ms:
  1546                           	opt stack 0
  1547  00008D                     ___lltoft@c:
  1548                           	opt stack 0
  1549                           
  1550                           ; 4 bytes @ 0x2D
  1551  00008D                     	ds	2
  1552  00008F                     ??___ftadd:
  1553  00008F                     encode@delta:
  1554                           	opt stack 0
  1555  00008F                     DELAY_ms@cyclesRequiredForEntireDelay:
  1556                           	opt stack 0
  1557                           
  1558                           ; 4 bytes @ 0x2F
  1559  00008F                     	ds	2
  1560  000091                     ??___lltoft:
  1561  000091                     encode@i:
  1562                           	opt stack 0
  1563                           
  1564                           ; 1 bytes @ 0x31
  1565  000091                     	ds	1
  1566  000092                     ___ftadd@sign:
  1567                           	opt stack 0
  1568  000092                     encode@part1:
  1569                           	opt stack 0
  1570                           
  1571                           ; 2 bytes @ 0x32
  1572  000092                     	ds	1
  1573  000093                     MiMAC_PowerState@PowerState:
  1574                           	opt stack 0
  1575  000093                     ___ftadd@exp2:
  1576                           	opt stack 0
  1577  000093                     MiMAC_Init@initValue:
  1578                           	opt stack 0
  1579                           
  1580                           ; 3 bytes @ 0x33
  1581  000093                     	ds	1
  1582  000094                     ??_decode_variable:
  1583  000094                     MiMAC_PowerState@i:
  1584                           	opt stack 0
  1585  000094                     ___ftadd@exp1:
  1586                           	opt stack 0
  1587  000094                     encode@part2:
  1588                           	opt stack 0
  1589  000094                     TxPacket@t1:
  1590                           	opt stack 0
  1591                           
  1592                           ; 4 bytes @ 0x34
  1593  000094                     	ds	1
  1594  000095                     MiApp_TransceiverPowerState@Mode:
  1595                           	opt stack 0
  1596  000095                     ___lltoft@exp:
  1597                           	opt stack 0
  1598                           
  1599                           ; 1 bytes @ 0x35
  1600  000095                     	ds	1
  1601  000096                     ?___ftdiv:
  1602                           	opt stack 0
  1603  000096                     MiMAC_Init@i:
  1604                           	opt stack 0
  1605  000096                     encode@sum:
  1606                           	opt stack 0
  1607  000096                     ___ftdiv@f1:
  1608                           	opt stack 0
  1609  000096                     decode_variable@var:
  1610                           	opt stack 0
  1611                           
  1612                           ; 9 bytes @ 0x36
  1613  000096                     	ds	1
  1614  000097                     ??_MiApp_ProtocolInit:
  1615                           
  1616                           ; 0 bytes @ 0x37
  1617  000097                     	ds	1
  1618  000098                     MiApp_ProtocolInit@bNetworkFreezer:
  1619                           	opt stack 0
  1620  000098                     CTR@text:
  1621                           	opt stack 0
  1622  000098                     CBC_MAC@text:
  1623                           	opt stack 0
  1624  000098                     TxPacket@t2:
  1625                           	opt stack 0
  1626                           
  1627                           ; 4 bytes @ 0x38
  1628  000098                     	ds	1
  1629  000099                     MiApp_ProtocolInit@MIP:
  1630                           	opt stack 0
  1631  000099                     ___ftdiv@f2:
  1632                           	opt stack 0
  1633                           
  1634                           ; 3 bytes @ 0x39
  1635  000099                     	ds	1
  1636  00009A                     CTR@len:
  1637                           	opt stack 0
  1638  00009A                     CBC_MAC@len:
  1639                           	opt stack 0
  1640                           
  1641                           ; 1 bytes @ 0x3A
  1642  00009A                     	ds	1
  1643  00009B                     CTR@key:
  1644                           	opt stack 0
  1645  00009B                     CBC_MAC@key:
  1646                           	opt stack 0
  1647                           
  1648                           ; 2 bytes @ 0x3B
  1649  00009B                     	ds	1
  1650  00009C                     ??___ftdiv:
  1651  00009C                     TxPacket@CCARetries:
  1652                           	opt stack 0
  1653  00009C                     MiApp_ProtocolInit@i:
  1654                           	opt stack 0
  1655                           
  1656                           ; 1 bytes @ 0x3C
  1657  00009C                     	ds	1
  1658  00009D                     TxPacket@reTry:
  1659                           	opt stack 0
  1660  00009D                     CTR@nounce:
  1661                           	opt stack 0
  1662  00009D                     CBC_MAC@MIC:
  1663                           	opt stack 0
  1664                           
  1665                           ; 2 bytes @ 0x3D
  1666  00009D                     	ds	1
  1667  00009E                     TxPacket@allowedTxFailure:
  1668                           	opt stack 0
  1669                           
  1670                           ; 1 bytes @ 0x3E
  1671  00009E                     	ds	1
  1672  00009F                     ??_CTR:
  1673  00009F                     ??_CBC_MAC:
  1674  00009F                     TxPacket@status:
  1675                           	opt stack 0
  1676  00009F                     ___ftdiv@cntr:
  1677                           	opt stack 0
  1678                           
  1679                           ; 1 bytes @ 0x3F
  1680  00009F                     	ds	1
  1681  0000A0                     TxPacket@TxPacketLen:
  1682                           	opt stack 0
  1683  0000A0                     ___ftdiv@f3:
  1684                           	opt stack 0
  1685                           
  1686                           ; 3 bytes @ 0x40
  1687  0000A0                     	ds	1
  1688  0000A1                     TxPacket@i:
  1689                           	opt stack 0
  1690                           
  1691                           ; 1 bytes @ 0x41
  1692  0000A1                     	ds	1
  1693  0000A2                     TxPacket@rssival:
  1694                           	opt stack 0
  1695  0000A2                     CTR@block:
  1696                           	opt stack 0
  1697  0000A2                     CBC_MAC@block:
  1698                           	opt stack 0
  1699                           
  1700                           ; 1 bytes @ 0x42
  1701  0000A2                     	ds	1
  1702  0000A3                     CTR@i:
  1703                           	opt stack 0
  1704  0000A3                     CBC_MAC@j:
  1705                           	opt stack 0
  1706  0000A3                     ___ftdiv@exp:
  1707                           	opt stack 0
  1708                           
  1709                           ; 1 bytes @ 0x43
  1710  0000A3                     	ds	1
  1711  0000A4                     CTR@j:
  1712                           	opt stack 0
  1713  0000A4                     CBC_MAC@i:
  1714                           	opt stack 0
  1715  0000A4                     ___ftdiv@sign:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0x44
  1719  0000A4                     	ds	1
  1720  0000A5                     ?___fttol:
  1721                           	opt stack 0
  1722  0000A5                     CCM_Enc@text:
  1723                           	opt stack 0
  1724  0000A5                     CCM_Dec@text:
  1725                           	opt stack 0
  1726  0000A5                     ___fttol@f1:
  1727                           	opt stack 0
  1728                           
  1729                           ; 3 bytes @ 0x45
  1730  0000A5                     	ds	2
  1731  0000A7                     CCM_Enc@headerLen:
  1732                           	opt stack 0
  1733  0000A7                     CCM_Dec@headerLen:
  1734                           	opt stack 0
  1735                           
  1736                           ; 1 bytes @ 0x47
  1737  0000A7                     	ds	1
  1738  0000A8                     CCM_Enc@payloadLen:
  1739                           	opt stack 0
  1740  0000A8                     CCM_Dec@payloadLen:
  1741                           	opt stack 0
  1742                           
  1743                           ; 1 bytes @ 0x48
  1744  0000A8                     	ds	1
  1745  0000A9                     ??___fttol:
  1746  0000A9                     CCM_Enc@key:
  1747                           	opt stack 0
  1748  0000A9                     CCM_Dec@key:
  1749                           	opt stack 0
  1750                           
  1751                           ; 2 bytes @ 0x49
  1752  0000A9                     	ds	2
  1753  0000AB                     ??_CCM_Enc:
  1754  0000AB                     ??_CCM_Dec:
  1755                           
  1756                           ; 0 bytes @ 0x4B
  1757  0000AB                     	ds	2
  1758  0000AD                     _CCM_Enc$2085:
  1759                           	opt stack 0
  1760                           
  1761                           ; 2 bytes @ 0x4D
  1762  0000AD                     	ds	1
  1763  0000AE                     ___fttol@sign1:
  1764                           	opt stack 0
  1765                           
  1766                           ; 1 bytes @ 0x4E
  1767  0000AE                     	ds	1
  1768  0000AF                     CCM_Enc@i:
  1769                           	opt stack 0
  1770  0000AF                     ___fttol@lval:
  1771                           	opt stack 0
  1772                           
  1773                           ; 4 bytes @ 0x4F
  1774  0000AF                     	ds	1
  1775  0000B0                     MiMAC_SendPacket@transParam:
  1776                           	opt stack 0
  1777                           
  1778                           ; 3 bytes @ 0x50
  1779  0000B0                     	ds	1
  1780  0000B1                     _CCM_Dec$2093:
  1781                           	opt stack 0
  1782                           
  1783                           ; 2 bytes @ 0x51
  1784  0000B1                     	ds	2
  1785  0000B3                     CCM_Dec@i:
  1786                           	opt stack 0
  1787  0000B3                     ___fttol@exp1:
  1788                           	opt stack 0
  1789  0000B3                     MiMAC_SendPacket@MACPayload:
  1790                           	opt stack 0
  1791                           
  1792                           ; 2 bytes @ 0x53
  1793  0000B3                     	ds	1
  1794  0000B4                     ??_MiMAC_ReceivedPacket:
  1795  0000B4                     ?___altoft:
  1796                           	opt stack 0
  1797  0000B4                     ___altoft@c:
  1798                           	opt stack 0
  1799                           
  1800                           ; 4 bytes @ 0x54
  1801  0000B4                     	ds	1
  1802  0000B5                     MiMAC_SendPacket@MACPayloadLen:
  1803                           	opt stack 0
  1804                           
  1805                           ; 1 bytes @ 0x55
  1806  0000B5                     	ds	1
  1807  0000B6                     ??_MiMAC_SendPacket:
  1808                           
  1809                           ; 0 bytes @ 0x56
  1810  0000B6                     	ds	1
  1811  0000B7                     MiMAC_SendPacket@headerLen:
  1812                           	opt stack 0
  1813                           
  1814                           ; 1 bytes @ 0x57
  1815  0000B7                     	ds	1
  1816  0000B8                     ??___altoft:
  1817  0000B8                     MiMAC_SendPacket@TxIndex:
  1818                           	opt stack 0
  1819                           
  1820                           ; 1 bytes @ 0x58
  1821  0000B8                     	ds	1
  1822  0000B9                     MiMAC_SendPacket@i:
  1823                           	opt stack 0
  1824                           
  1825                           ; 1 bytes @ 0x59
  1826  0000B9                     	ds	1
  1827  0000BA                     SendMACPacket@Address:
  1828                           	opt stack 0
  1829                           
  1830                           ; 2 bytes @ 0x5A
  1831  0000BA                     	ds	2
  1832  0000BC                     SendMACPacket@PacketType:
  1833                           	opt stack 0
  1834  0000BC                     ___altoft@exp:
  1835                           	opt stack 0
  1836  0000BC                     MiMAC_ReceivedPacket@currentTick:
  1837                           	opt stack 0
  1838                           
  1839                           ; 4 bytes @ 0x5C
  1840  0000BC                     	ds	1
  1841  0000BD                     ??_SendMACPacket:
  1842  0000BD                     ___altoft@sign:
  1843                           	opt stack 0
  1844                           
  1845                           ; 1 bytes @ 0x5D
  1846  0000BD                     	ds	1
  1847  0000BE                     ?_floor:
  1848                           	opt stack 0
  1849  0000BE                     floor@x:
  1850                           	opt stack 0
  1851                           
  1852                           ; 3 bytes @ 0x5E
  1853  0000BE                     	ds	2
  1854  0000C0                     MiMAC_ReceivedPacket@FrameCounter:
  1855                           	opt stack 0
  1856                           
  1857                           ; 4 bytes @ 0x60
  1858  0000C0                     	ds	1
  1859  0000C1                     floor@i:
  1860                           	opt stack 0
  1861                           
  1862                           ; 3 bytes @ 0x61
  1863  0000C1                     	ds	3
  1864  0000C4                     MiMAC_ReceivedPacket@k:
  1865                           	opt stack 0
  1866  0000C4                     floor@expon:
  1867                           	opt stack 0
  1868                           
  1869                           ; 2 bytes @ 0x64
  1870  0000C4                     	ds	1
  1871  0000C5                     MiMAC_ReceivedPacket@j:
  1872                           	opt stack 0
  1873                           
  1874                           ; 1 bytes @ 0x65
  1875  0000C5                     	ds	1
  1876  0000C6                     ?___ftneg:
  1877                           	opt stack 0
  1878  0000C6                     MiMAC_ReceivedPacket@PayloadIndex:
  1879                           	opt stack 0
  1880  0000C6                     ___ftneg@f1:
  1881                           	opt stack 0
  1882                           
  1883                           ; 3 bytes @ 0x66
  1884  0000C6                     	ds	1
  1885  0000C7                     MiMAC_ReceivedPacket@i:
  1886                           	opt stack 0
  1887                           
  1888                           ; 1 bytes @ 0x67
  1889  0000C7                     	ds	1
  1890  0000C8                     ??_MiWiTasks:
  1891                           
  1892                           ; 0 bytes @ 0x68
  1893  0000C8                     	ds	1
  1894  0000C9                     ?___ftmul:
  1895                           	opt stack 0
  1896  0000C9                     ___ftmul@f1:
  1897                           	opt stack 0
  1898                           
  1899                           ; 3 bytes @ 0x69
  1900  0000C9                     	ds	3
  1901  0000CC                     ___ftmul@f2:
  1902                           	opt stack 0
  1903                           
  1904                           ; 3 bytes @ 0x6C
  1905  0000CC                     	ds	4
  1906  0000D0                     ??_do_NETWORK_REGISTER:
  1907  0000D0                     ??_do_UPDATE:
  1908  0000D0                     ??_do_POWER_TEST:
  1909  0000D0                     OpenSocket@i:
  1910                           	opt stack 0
  1911                           
  1912                           ; 1 bytes @ 0x70
  1913  0000D0                     	ds	1
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           
  1921                           	psect	cstackCOMRAM
  1922  000001                     __pcstackCOMRAM:
  1923                           	opt stack 0
  1924  000001                     ??_SYS_InterruptLow:
  1925  000001                     
  1926                           ; 1 bytes @ 0x0
  1927  000001                     	ds	17
  1928  000012                     ?i2_MiWi_TickGet:
  1929                           	opt stack 0
  1930  000012                     i2SPIPut@i:
  1931                           	opt stack 0
  1932                           
  1933                           ; 1 bytes @ 0x11
  1934  000012                     	ds	1
  1935  000013                     i2SPIPut@v:
  1936                           	opt stack 0
  1937                           
  1938                           ; 1 bytes @ 0x12
  1939  000013                     	ds	1
  1940  000014                     i2RegisterRead@value:
  1941                           	opt stack 0
  1942  000014                     i2WriteFIFO@Data:
  1943                           	opt stack 0
  1944  000014                     i2RegisterSet@setting:
  1945                           	opt stack 0
  1946                           
  1947                           ; 2 bytes @ 0x13
  1948  000014                     	ds	1
  1949  000015                     i2RegisterRead@IRQ1select:
  1950                           	opt stack 0
  1951  000015                     i2WriteFIFO@IRQ1select:
  1952                           	opt stack 0
  1953                           
  1954                           ; 1 bytes @ 0x14
  1955  000015                     	ds	1
  1956  000016                     ??i2_MiWi_TickGet:
  1957  000016                     i2RegisterSet@IRQ1select:
  1958                           	opt stack 0
  1959  000016                     i2RegisterRead@IRQ0select:
  1960                           	opt stack 0
  1961  000016                     i2WriteFIFO@IRQ0select:
  1962                           	opt stack 0
  1963                           
  1964                           ; 1 bytes @ 0x15
  1965  000016                     	ds	1
  1966  000017                     i2MiWi_TickGet@failureCounter:
  1967                           	opt stack 0
  1968  000017                     i2RegisterSet@IRQ0select:
  1969                           	opt stack 0
  1970  000017                     i2RegisterRead@address:
  1971                           	opt stack 0
  1972                           
  1973                           ; 1 bytes @ 0x16
  1974  000017                     	ds	1
  1975  000018                     i2SetRFMode@mode:
  1976                           	opt stack 0
  1977  000018                     i2MiWi_TickGet@currentTime:
  1978                           	opt stack 0
  1979                           
  1980                           ; 4 bytes @ 0x17
  1981  000018                     	ds	4
  1982  00001C                     i2TxPacket@CCA:
  1983                           	opt stack 0
  1984                           
  1985                           ; 1 bytes @ 0x1B
  1986  00001C                     	ds	1
  1987  00001D                     ??i2_TxPacket:
  1988                           
  1989                           ; 0 bytes @ 0x1C
  1990  00001D                     	ds	8
  1991  000025                     i2TxPacket@t1:
  1992                           	opt stack 0
  1993                           
  1994                           ; 4 bytes @ 0x24
  1995  000025                     	ds	4
  1996  000029                     i2TxPacket@t2:
  1997                           	opt stack 0
  1998                           
  1999                           ; 4 bytes @ 0x28
  2000  000029                     	ds	4
  2001  00002D                     i2TxPacket@status:
  2002                           	opt stack 0
  2003                           
  2004                           ; 1 bytes @ 0x2C
  2005  00002D                     	ds	1
  2006  00002E                     i2TxPacket@CCARetries:
  2007                           	opt stack 0
  2008                           
  2009                           ; 1 bytes @ 0x2D
  2010  00002E                     	ds	1
  2011  00002F                     i2TxPacket@reTry:
  2012                           	opt stack 0
  2013                           
  2014                           ; 1 bytes @ 0x2E
  2015  00002F                     	ds	1
  2016  000030                     i2TxPacket@allowedTxFailure:
  2017                           	opt stack 0
  2018                           
  2019                           ; 1 bytes @ 0x2F
  2020  000030                     	ds	1
  2021  000031                     i2TxPacket@TxPacketLen:
  2022                           	opt stack 0
  2023                           
  2024                           ; 1 bytes @ 0x30
  2025  000031                     	ds	1
  2026  000032                     i2TxPacket@i:
  2027                           	opt stack 0
  2028                           
  2029                           ; 1 bytes @ 0x31
  2030  000032                     	ds	1
  2031  000033                     i2TxPacket@rssival:
  2032                           	opt stack 0
  2033                           
  2034                           ; 1 bytes @ 0x32
  2035  000033                     	ds	1
  2036                           tblptru	equ	0xFF8
  2037                           tblptrh	equ	0xFF7
  2038                           tblptrl	equ	0xFF6
  2039                           tablat	equ	0xFF5
  2040                           postinc0	equ	0xFEE
  2041                           wreg	equ	0xFE8
  2042                           
  2043 ;;
  2044 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2045 ;;
  2046 ;; *************** function _main *****************
  2047 ;; Defined at:
  2048 ;;		line 128 in file "src/main.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  j               1   25[BANK3 ] unsigned char 
  2053 ;;  x               2   23[BANK3 ] int 
  2054 ;;  scanresult      1   26[BANK3 ] volatile unsigned char 
  2055 ;;  best_RSSI       1   22[BANK3 ] unsigned char 
  2056 ;;  Status          1   21[BANK3 ] unsigned char 
  2057 ;;  best_candida    1   20[BANK3 ] unsigned char 
  2058 ;;  result          1   19[BANK3 ] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;		None               void
  2061 ;; Registers used:
  2062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Locals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;      Totals:         0       0       0       0      10       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;Total ram usage:       10 bytes
  2073 ;; Hardware stack levels required when called:   18
  2074 ;; This function calls:
  2075 ;;		_MiApp_ConnectionMode
  2076 ;;		_MiApp_DiscardMessage
  2077 ;;		_MiApp_EstablishConnection
  2078 ;;		_MiApp_MessageAvailable
  2079 ;;		_MiApp_ProtocolInit
  2080 ;;		_MiApp_SearchConnection
  2081 ;;		_MiApp_TransceiverPowerState
  2082 ;;		_MiMAC_SetPower
  2083 ;;		_MiWiTasks
  2084 ;;		_SYSTEM_Initialize
  2085 ;;		_adapt_power_level
  2086 ;;		_do_NETWORK_REGISTER
  2087 ;;		_process_update_answer
  2088 ;;		_read_sensors
  2089 ;;		_security_force_key_update
  2090 ;;		_send_initial_update
  2091 ;;		_send_periodical_update
  2092 ;;		_timer_reset
  2093 ;;		_wait_for_1_sec
  2094 ;; This function is called by:
  2095 ;;		Startup code after reset
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text0
  2100  0130B4                     __ptext0:
  2101                           	opt stack 0
  2102  0130B4                     _main:
  2103                           	opt stack 13
  2104                           
  2105                           ;main.c: 130: SYSTEM_Initialize();
  2106                           
  2107                           ;incstack = 0
  2108  0130B4  ECB8  F0A7         	call	_SYSTEM_Initialize	;wreg free
  2109                           
  2110                           ;main.c: 139: myAppState = STATE_INIT;
  2111  0130B8  0E00               	movlw	0
  2112  0130BA  0101               	movlb	1	; () banked
  2113  0130BC  6F6A               	movwf	_myAppState& (0+255),b
  2114                           
  2115                           ; BSR set to: 1
  2116                           ;main.c: 141: bool result;
  2117                           ;main.c: 143: myLongAddress[0] = myMODEL[0];
  2118  0130BE  0EF4               	movlw	244
  2119  0130C0  6EF6               	movwf	tblptrl,c
  2120  0130C2                     	if	1	;There is more than 1 active tblptr byte
  2121  0130C2  0EFF               	movlw	255
  2122  0130C4  6EF7               	movwf	tblptrh,c
  2123  0130C6                     	endif
  2124  0130C6                     	if	1	;There are 3 active tblptr bytes
  2125  0130C6  0E01               	movlw	1
  2126  0130C8  6EF8               	movwf	tblptru,c
  2127  0130CA                     	endif
  2128  0130CA  0008               	tblrd		*
  2129  0130CC  CFF5 F1C8          	movff	tablat,_myLongAddress
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;main.c: 144: myLongAddress[1] = myMODEL[1];
  2133  0130D0  0EF5               	movlw	245
  2134  0130D2  6EF6               	movwf	tblptrl,c
  2135  0130D4  0EFF               	movlw	255
  2136  0130D6  6EF7               	movwf	tblptrh,c
  2137  0130D8  0E01               	movlw	1
  2138  0130DA  6EF8               	movwf	tblptru,c
  2139  0130DC  0008               	tblrd		*
  2140  0130DE  CFF5 F1C9          	movff	tablat,_myLongAddress+1
  2141                           
  2142                           ; BSR set to: 1
  2143                           ;main.c: 145: myLongAddress[2] = myUID[0];
  2144  0130E2  0EF6               	movlw	246
  2145  0130E4  6EF6               	movwf	tblptrl,c
  2146  0130E6                     	if	1	;There is more than 1 active tblptr byte
  2147  0130E6  0EFF               	movlw	255
  2148  0130E8  6EF7               	movwf	tblptrh,c
  2149  0130EA                     	endif
  2150  0130EA                     	if	1	;There are 3 active tblptr bytes
  2151  0130EA  0E01               	movlw	1
  2152  0130EC  6EF8               	movwf	tblptru,c
  2153  0130EE                     	endif
  2154  0130EE  0008               	tblrd		*
  2155  0130F0  CFF5 F1CA          	movff	tablat,_myLongAddress+2
  2156                           
  2157                           ; BSR set to: 1
  2158                           ;main.c: 146: myLongAddress[3] = myUID[1];
  2159  0130F4  0EF7               	movlw	247
  2160  0130F6  6EF6               	movwf	tblptrl,c
  2161  0130F8  0EFF               	movlw	255
  2162  0130FA  6EF7               	movwf	tblptrh,c
  2163  0130FC  0E01               	movlw	1
  2164  0130FE  6EF8               	movwf	tblptru,c
  2165  013100  0008               	tblrd		*
  2166  013102  CFF5 F1CB          	movff	tablat,_myLongAddress+3
  2167                           
  2168                           ; BSR set to: 1
  2169                           ;main.c: 149: for (int x=0; x<8; x++)
  2170  013106  0E00               	movlw	0
  2171  013108  0103               	movlb	3	; () banked
  2172  01310A  6FEC               	movwf	(main@x+1)& (0+255),b
  2173  01310C  0E00               	movlw	0
  2174  01310E  6FEB               	movwf	main@x& (0+255),b
  2175  013110                     l14746:
  2176                           
  2177                           ; BSR set to: 3
  2178  013110  0103               	movlb	3	; () banked
  2179  013112  BFEC               	btfsc	(main@x+1)& (0+255),7,b
  2180  013114  D008               	goto	l14750
  2181  013116  0103               	movlb	3	; () banked
  2182  013118  51EC               	movf	(main@x+1)& (0+255),w,b
  2183  01311A  E11E               	bnz	l14756
  2184  01311C  0E08               	movlw	8
  2185  01311E  0103               	movlb	3	; () banked
  2186  013120  5DEB               	subwf	main@x& (0+255),w,b
  2187  013122  B0D8               	btfsc	status,0,c
  2188  013124  D019               	goto	l14756
  2189  013126                     l14750:
  2190                           
  2191                           ; BSR set to: 3
  2192                           ;main.c: 150: mySecurityKey[x] = StaticSecurityKey[x];
  2193  013126  0EEC               	movlw	236
  2194  013128  0103               	movlb	3	; () banked
  2195  01312A  25EB               	addwf	main@x& (0+255),w,b
  2196  01312C  6EF6               	movwf	tblptrl,c
  2197  01312E  0EFF               	movlw	255
  2198  013130  21EC               	addwfc	(main@x+1)& (0+255),w,b
  2199  013132  6EF7               	movwf	tblptrh,c
  2200  013134  6AF8               	clrf	tblptru,c
  2201  013136  0E01               	movlw	1
  2202  013138  22F8               	addwfc	tblptru,f,c
  2203  01313A  0E36               	movlw	low _mySecurityKey
  2204  01313C  0103               	movlb	3	; () banked
  2205  01313E  25EB               	addwf	main@x& (0+255),w,b
  2206  013140  6ED9               	movwf	fsr2l,c
  2207  013142  0E01               	movlw	high _mySecurityKey
  2208  013144  0103               	movlb	3	; () banked
  2209  013146  21EC               	addwfc	(main@x+1)& (0+255),w,b
  2210  013148  6EDA               	movwf	fsr2h,c
  2211  01314A  0008               	tblrd		*
  2212  01314C  CFF5 FFDF          	movff	tablat,indf2
  2213                           
  2214                           ; BSR set to: 3
  2215  013150  0103               	movlb	3	; () banked
  2216  013152  4BEB               	infsnz	main@x& (0+255),f,b
  2217  013154  2BEC               	incf	(main@x+1)& (0+255),f,b
  2218  013156  D7DC               	goto	l14746
  2219  013158                     l14756:
  2220                           
  2221                           ; BSR set to: 3
  2222                           ;main.c: 152: MiApp_ProtocolInit(0);
  2223  013158  0E00               	movlw	0
  2224  01315A  EC95  F0A6         	call	_MiApp_ProtocolInit
  2225                           
  2226                           ;main.c: 153: MiMAC_SetPower(0x00);
  2227  01315E  0E00               	movlw	0
  2228  013160  EC5A  F0B4         	call	_MiMAC_SetPower
  2229  013164                     l14760:
  2230                           
  2231                           ;main.c: 159: {
  2232                           ;main.c: 160: scanresult = MiApp_SearchConnection(14, 0x00000001);
  2233  013164  0E01               	movlw	1
  2234  013166  0101               	movlb	1	; () banked
  2235  013168  6FE8               	movwf	MiApp_SearchConnection@ChannelMap& (0+255),b
  2236  01316A  0E00               	movlw	0
  2237  01316C  6FE9               	movwf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),b
  2238  01316E  0E00               	movlw	0
  2239  013170  6FEA               	movwf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),b
  2240  013172  0E00               	movlw	0
  2241  013174  6FEB               	movwf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),b
  2242  013176  0E0E               	movlw	14
  2243  013178  EC1F  F09D         	call	_MiApp_SearchConnection
  2244  01317C  0103               	movlb	3	; () banked
  2245  01317E  6FEE               	movwf	main@scanresult& (0+255),b	;volatile
  2246                           
  2247                           ; BSR set to: 3
  2248                           ;main.c: 161: if (scanresult == 0)
  2249  013180  0103               	movlb	3	; () banked
  2250  013182  51EE               	movf	main@scanresult& (0+255),w,b	;volatile
  2251  013184  0103               	movlb	3	; () banked
  2252  013186  A4D8               	btfss	status,2,c
  2253  013188  D008               	goto	l14770
  2254                           
  2255                           ; BSR set to: 3
  2256                           ;main.c: 162: {
  2257                           ;main.c: 165: LATCbits.LATC0 = 0;
  2258  01318A  908B               	bcf	3979,0,c	;volatile
  2259                           
  2260                           ; BSR set to: 3
  2261                           ;main.c: 166: timer_reset();
  2262  01318C  EC57  F0B5         	call	_timer_reset	;wreg free
  2263  013190                     l14768:
  2264  013190  0101               	movlb	1	; () banked
  2265  013192  516B               	movf	_timer_flag& (0+255),w,b	;volatile
  2266  013194  A4D8               	btfss	status,2,c
  2267  013196  D7E6               	goto	l14760
  2268  013198  D7FB               	goto	l14768
  2269  01319A                     l14770:
  2270                           
  2271                           ;main.c: 173: }
  2272                           ;main.c: 174: }
  2273                           ;main.c: 175: uint8_t best_RSSI = 0;
  2274  01319A  0E00               	movlw	0
  2275  01319C  0103               	movlb	3	; () banked
  2276  01319E  6FEA               	movwf	main@best_RSSI& (0+255),b
  2277                           
  2278                           ;main.c: 176: uint8_t best_candidate;
  2279                           ;main.c: 177: for(uint8_t j = 0; j < scanresult; j++)
  2280  0131A0  0E00               	movlw	0
  2281  0131A2  0103               	movlb	3	; () banked
  2282  0131A4  6FED               	movwf	main@j& (0+255),b
  2283  0131A6  D03A               	goto	l14782
  2284  0131A8                     l14772:
  2285                           
  2286                           ; BSR set to: 3
  2287                           ;main.c: 178: {
  2288                           ;main.c: 179: if (ActiveScanResults[j].RSSIValue >= best_RSSI && ActiveScanResults[j].PA
      +                          NID.Val == 0x1337)
  2289  0131A8  0103               	movlb	3	; () banked
  2290  0131AA  51ED               	movf	main@j& (0+255),w,b
  2291  0131AC  0D0A               	mullw	10
  2292  0131AE  0E07               	movlw	7
  2293  0131B0  26F3               	addwf	prodl,f,c
  2294  0131B2  0E00               	movlw	0
  2295  0131B4  22F4               	addwfc	prodh,f,c
  2296  0131B6  0E00               	movlw	low _ActiveScanResults
  2297  0131B8  24F3               	addwf	prodl,w,c
  2298  0131BA  6ED9               	movwf	fsr2l,c
  2299  0131BC  0E03               	movlw	high _ActiveScanResults
  2300  0131BE  20F4               	addwfc	prodh,w,c
  2301  0131C0  6EDA               	movwf	fsr2h,c
  2302  0131C2  0103               	movlb	3	; () banked
  2303  0131C4  51EA               	movf	main@best_RSSI& (0+255),w,b
  2304  0131C6  5CDE               	subwf	postinc2,w,c
  2305  0131C8  A0D8               	btfss	status,0,c
  2306  0131CA  D026               	goto	l14780
  2307                           
  2308                           ; BSR set to: 3
  2309  0131CC  0103               	movlb	3	; () banked
  2310  0131CE  51ED               	movf	main@j& (0+255),w,b
  2311  0131D0  0D0A               	mullw	10
  2312  0131D2  0E05               	movlw	5
  2313  0131D4  26F3               	addwf	prodl,f,c
  2314  0131D6  0E00               	movlw	0
  2315  0131D8  22F4               	addwfc	prodh,f,c
  2316  0131DA  0E00               	movlw	low _ActiveScanResults
  2317  0131DC  24F3               	addwf	prodl,w,c
  2318  0131DE  6ED9               	movwf	fsr2l,c
  2319  0131E0  0E03               	movlw	high _ActiveScanResults
  2320  0131E2  20F4               	addwfc	prodh,w,c
  2321  0131E4  6EDA               	movwf	fsr2h,c
  2322  0131E6  0E37               	movlw	55
  2323  0131E8  18DE               	xorwf	postinc2,w,c
  2324  0131EA  E116               	bnz	l14780
  2325  0131EC  0E13               	movlw	19
  2326  0131EE  18DE               	xorwf	postinc2,w,c
  2327  0131F0  A4D8               	btfss	status,2,c
  2328  0131F2  D012               	goto	l14780
  2329                           
  2330                           ; BSR set to: 3
  2331                           ;main.c: 180: {
  2332                           ;main.c: 181: best_RSSI = ActiveScanResults[j].RSSIValue;
  2333  0131F4  0103               	movlb	3	; () banked
  2334  0131F6  51ED               	movf	main@j& (0+255),w,b
  2335  0131F8  0D0A               	mullw	10
  2336  0131FA  0E07               	movlw	7
  2337  0131FC  26F3               	addwf	prodl,f,c
  2338  0131FE  0E00               	movlw	0
  2339  013200  22F4               	addwfc	prodh,f,c
  2340  013202  0E00               	movlw	low _ActiveScanResults
  2341  013204  24F3               	addwf	prodl,w,c
  2342  013206  6ED9               	movwf	fsr2l,c
  2343  013208  0E03               	movlw	high _ActiveScanResults
  2344  01320A  20F4               	addwfc	prodh,w,c
  2345  01320C  6EDA               	movwf	fsr2h,c
  2346  01320E  50DF               	movf	indf2,w,c
  2347  013210  0103               	movlb	3	; () banked
  2348  013212  6FEA               	movwf	main@best_RSSI& (0+255),b
  2349                           
  2350                           ; BSR set to: 3
  2351                           ;main.c: 182: best_candidate = j;
  2352  013214  C3ED  F3E8         	movff	main@j,main@best_candidate
  2353  013218                     l14780:
  2354                           
  2355                           ; BSR set to: 3
  2356  013218  0103               	movlb	3	; () banked
  2357  01321A  2BED               	incf	main@j& (0+255),f,b
  2358  01321C                     l14782:
  2359                           
  2360                           ; BSR set to: 3
  2361  01321C  0103               	movlb	3	; () banked
  2362  01321E  51EE               	movf	main@scanresult& (0+255),w,b	;volatile
  2363  013220  0103               	movlb	3	; () banked
  2364  013222  5DED               	subwf	main@j& (0+255),w,b
  2365  013224  A0D8               	btfss	status,0,c
  2366  013226  D7C0               	goto	l14772
  2367                           
  2368                           ; BSR set to: 3
  2369                           ;main.c: 183: }
  2370                           ;main.c: 184: }
  2371                           ;main.c: 188: uint8_t Status = MiApp_EstablishConnection(best_candidate, 0x00);
  2372                           
  2373                           ; BSR set to: 3
  2374  013228  0E00               	movlw	0
  2375  01322A  0101               	movlb	1	; () banked
  2376  01322C  6FF5               	movwf	MiApp_EstablishConnection@Mode& (0+255),b
  2377  01322E  0103               	movlb	3	; () banked
  2378  013230  51E8               	movf	main@best_candidate& (0+255),w,b
  2379  013232  ECBC  F094         	call	_MiApp_EstablishConnection
  2380  013236  0103               	movlb	3	; () banked
  2381  013238  6FE9               	movwf	main@Status& (0+255),b
  2382                           
  2383                           ; BSR set to: 3
  2384                           ;main.c: 189: if(Status == 0xFF)
  2385  01323A  0103               	movlb	3	; () banked
  2386  01323C  29E9               	incf	main@Status& (0+255),w,b
  2387  01323E  A4D8               	btfss	status,2,c
  2388  013240  D00B               	goto	l14796
  2389                           
  2390                           ; BSR set to: 3
  2391                           ;main.c: 190: {
  2392                           ;main.c: 193: myAppState = STATE_PROBLEM;
  2393  013242  0E02               	movlw	2
  2394  013244  0101               	movlb	1	; () banked
  2395  013246  6F6A               	movwf	_myAppState& (0+255),b
  2396                           
  2397                           ; BSR set to: 1
  2398                           ;main.c: 194: LATCbits.LATC0 = 0;
  2399  013248  908B               	bcf	3979,0,c	;volatile
  2400                           
  2401                           ; BSR set to: 1
  2402                           ;main.c: 195: timer_reset();
  2403  01324A  EC57  F0B5         	call	_timer_reset	;wreg free
  2404  01324E                     l14794:
  2405  01324E  0101               	movlb	1	; () banked
  2406  013250  516B               	movf	_timer_flag& (0+255),w,b	;volatile
  2407  013252  B4D8               	btfsc	status,2,c
  2408  013254  D7FC               	goto	l14794
  2409                           
  2410                           ; BSR set to: 1
  2411  013256  00FF               	reset		;# 
  2412  013258                     l14796:
  2413                           
  2414                           ;main.c: 199: }
  2415                           ;main.c: 200: MiApp_ConnectionMode(0x03);
  2416  013258  0E03               	movlw	3
  2417  01325A  ECE2  F0B4         	call	_MiApp_ConnectionMode
  2418                           
  2419                           ;main.c: 207: result = do_NETWORK_REGISTER(&myLongAddress[0],0xff);
  2420  01325E  0EC8               	movlw	low _myLongAddress
  2421  013260  0101               	movlb	1	; () banked
  2422  013262  6FF4               	movwf	do_NETWORK_REGISTER@p_uid& (0+255),b
  2423  013264  0E01               	movlw	high _myLongAddress
  2424  013266  0101               	movlb	1	; () banked
  2425  013268  6FF5               	movwf	(do_NETWORK_REGISTER@p_uid+1)& (0+255),b
  2426  01326A  0EFF               	movlw	255
  2427  01326C  0101               	movlb	1	; () banked
  2428  01326E  6FF6               	movwf	do_NETWORK_REGISTER@sleeping_device& (0+255),b
  2429  013270  ECD6  F09F         	call	_do_NETWORK_REGISTER	;wreg free
  2430  013274  0103               	movlb	3	; () banked
  2431  013276  6FE7               	movwf	main@result& (0+255),b
  2432                           
  2433                           ; BSR set to: 3
  2434                           ;main.c: 211: if (!result)
  2435  013278  0103               	movlb	3	; () banked
  2436  01327A  51E7               	movf	main@result& (0+255),w,b
  2437  01327C  0103               	movlb	3	; () banked
  2438  01327E  A4D8               	btfss	status,2,c
  2439  013280  D00B               	goto	l14810
  2440                           
  2441                           ; BSR set to: 3
  2442                           ;main.c: 212: {
  2443                           ;main.c: 215: myAppState = STATE_PROBLEM;
  2444  013282  0E02               	movlw	2
  2445  013284  0101               	movlb	1	; () banked
  2446  013286  6F6A               	movwf	_myAppState& (0+255),b
  2447                           
  2448                           ; BSR set to: 1
  2449                           ;main.c: 216: LATCbits.LATC0 = 0;
  2450  013288  908B               	bcf	3979,0,c	;volatile
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;main.c: 217: timer_reset();
  2454  01328A  EC57  F0B5         	call	_timer_reset	;wreg free
  2455  01328E                     l14808:
  2456  01328E  0101               	movlb	1	; () banked
  2457  013290  516B               	movf	_timer_flag& (0+255),w,b	;volatile
  2458  013292  B4D8               	btfsc	status,2,c
  2459  013294  D7FC               	goto	l14808
  2460                           
  2461                           ; BSR set to: 1
  2462  013296  00FF               	reset		;# 
  2463  013298                     l14810:
  2464                           
  2465                           ;main.c: 221: }
  2466                           ;main.c: 224: security_force_key_update();
  2467  013298  EC8F  F0B3         	call	_security_force_key_update	;wreg free
  2468                           
  2469                           ;main.c: 226: myAppState = STATE_READY;
  2470  01329C  0E01               	movlw	1
  2471  01329E  0101               	movlb	1	; () banked
  2472  0132A0  6F6A               	movwf	_myAppState& (0+255),b
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;main.c: 230: m_power = adapt_power_level(0x00, 33);
  2476  0132A2  0E21               	movlw	33
  2477  0132A4  0101               	movlb	1	; () banked
  2478  0132A6  6FFB               	movwf	adapt_power_level@minimal_rssi& (0+255),b
  2479  0132A8  0E00               	movlw	0
  2480  0132AA  EC7A  F0B2         	call	_adapt_power_level
  2481  0132AE  0101               	movlb	1	; () banked
  2482  0132B0  6F69               	movwf	_m_power& (0+255),b
  2483                           
  2484                           ; BSR set to: 1
  2485                           ;main.c: 234: m_uptime_seconds = 0;
  2486  0132B2  0E00               	movlw	0
  2487  0132B4  0101               	movlb	1	; () banked
  2488  0132B6  6F4A               	movwf	_m_uptime_seconds& (0+255),b	;volatile
  2489  0132B8  0E00               	movlw	0
  2490  0132BA  6F4B               	movwf	(_m_uptime_seconds+1)& (0+255),b	;volatile
  2491  0132BC  0E00               	movlw	0
  2492  0132BE  6F4C               	movwf	(_m_uptime_seconds+2)& (0+255),b	;volatile
  2493  0132C0  0E00               	movlw	0
  2494  0132C2  6F4D               	movwf	(_m_uptime_seconds+3)& (0+255),b	;volatile
  2495                           
  2496                           ; BSR set to: 1
  2497                           ;main.c: 236: read_sensors();
  2498  0132C4  ECD7  F096         	call	_read_sensors	;wreg free
  2499                           
  2500                           ;main.c: 237: while (!send_initial_update())
  2501  0132C8  D014               	goto	l14836
  2502  0132CA                     l14820:
  2503                           
  2504                           ;main.c: 238: {
  2505                           ;main.c: 240: consecutive_fails++;
  2506  0132CA  0101               	movlb	1	; () banked
  2507  0132CC  2B66               	incf	_consecutive_fails& (0+255),f,b
  2508                           
  2509                           ; BSR set to: 1
  2510                           ;main.c: 241: if (consecutive_fails >= 3)
  2511  0132CE  0E02               	movlw	2
  2512  0132D0  0101               	movlb	1	; () banked
  2513  0132D2  6566               	cpfsgt	_consecutive_fails& (0+255),b
  2514  0132D4  D00C               	goto	l14834
  2515                           
  2516                           ; BSR set to: 1
  2517                           ;main.c: 242: {
  2518                           ;main.c: 244: myAppState = STATE_PROBLEM;
  2519  0132D6  0E02               	movlw	2
  2520  0132D8  0101               	movlb	1	; () banked
  2521  0132DA  6F6A               	movwf	_myAppState& (0+255),b
  2522                           
  2523                           ; BSR set to: 1
  2524                           ;main.c: 245: LATCbits.LATC0 = 0;
  2525  0132DC  908B               	bcf	3979,0,c	;volatile
  2526                           
  2527                           ; BSR set to: 1
  2528                           ;main.c: 246: MiApp_TransceiverPowerState(0x00);
  2529  0132DE  0E00               	movlw	0
  2530  0132E0  EC3C  F0B4         	call	_MiApp_TransceiverPowerState
  2531                           
  2532                           ;main.c: 247: timer_reset();
  2533  0132E4  EC57  F0B5         	call	_timer_reset	;wreg free
  2534                           
  2535                           ;main.c: 248: PIR3bits.RTCCIF = 0;
  2536  0132E8  90A4               	bcf	4004,0,c	;volatile
  2537  0132EA  0003               	sleep		;# 
  2538  0132EC  00FF               	reset		;# 
  2539  0132EE                     l14834:
  2540                           
  2541                           ;main.c: 252: }
  2542                           ;main.c: 253: wait_for_1_sec();
  2543  0132EE  EC94  F0B4         	call	_wait_for_1_sec	;wreg free
  2544  0132F2                     l14836:
  2545  0132F2  ECF9  F085         	call	_send_initial_update	;wreg free
  2546  0132F6  0900               	iorlw	0
  2547  0132F8  A4D8               	btfss	status,2,c
  2548  0132FA  D037               	goto	l14878
  2549  0132FC  D7E6               	goto	l14820
  2550  0132FE                     l14840:
  2551                           
  2552                           ; BSR set to: 1
  2553                           ;main.c: 260: {
  2554                           ;main.c: 263: process_update_answer();
  2555  0132FE  EC20  F09E         	call	_process_update_answer	;wreg free
  2556                           
  2557                           ;main.c: 267: LATCbits.LATC0 = 0;
  2558  013302  908B               	bcf	3979,0,c	;volatile
  2559                           
  2560                           ;main.c: 268: MiApp_TransceiverPowerState(0x00);
  2561  013304  0E00               	movlw	0
  2562  013306  EC3C  F0B4         	call	_MiApp_TransceiverPowerState
  2563                           
  2564                           ;main.c: 269: timer_reset();
  2565  01330A  EC57  F0B5         	call	_timer_reset	;wreg free
  2566                           
  2567                           ;main.c: 270: while (!timer_flag)
  2568  01330E  D001               	goto	l14848
  2569  013310                     l1088:
  2570                           
  2571                           ; BSR set to: 1
  2572  013310  0003               	sleep		;# 
  2573  013312                     l14848:
  2574  013312  0101               	movlb	1	; () banked
  2575  013314  516B               	movf	_timer_flag& (0+255),w,b	;volatile
  2576  013316  B4D8               	btfsc	status,2,c
  2577  013318  D7FB               	goto	l1088
  2578                           
  2579                           ; BSR set to: 1
  2580                           ;main.c: 274: }
  2581                           ;main.c: 275: LATCbits.LATC0 = 1;
  2582  01331A  808B               	bsf	3979,0,c	;volatile
  2583                           
  2584                           ; BSR set to: 1
  2585                           ;main.c: 276: read_sensors();
  2586  01331C  ECD7  F096         	call	_read_sensors	;wreg free
  2587                           
  2588                           ;main.c: 277: MiApp_TransceiverPowerState(0x01);
  2589  013320  0E01               	movlw	1
  2590  013322  EC3C  F0B4         	call	_MiApp_TransceiverPowerState
  2591                           
  2592                           ;main.c: 278: if(MiApp_MessageAvailable())
  2593  013326  EC85  F0B5         	call	_MiApp_MessageAvailable	;wreg free
  2594  01332A  0900               	iorlw	0
  2595  01332C  A4D8               	btfss	status,2,c
  2596                           
  2597                           ;main.c: 279: MiApp_DiscardMessage();
  2598  01332E  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
  2599                           
  2600                           ;main.c: 280: MiWiTasks();
  2601  013332  EC00  F080         	call	_MiWiTasks	;wreg free
  2602                           
  2603                           ;main.c: 281: while (!send_periodical_update())
  2604  013336  D014               	goto	l14876
  2605  013338                     l14860:
  2606                           
  2607                           ;main.c: 282: {
  2608                           ;main.c: 284: consecutive_fails++;
  2609  013338  0101               	movlb	1	; () banked
  2610  01333A  2B66               	incf	_consecutive_fails& (0+255),f,b
  2611                           
  2612                           ; BSR set to: 1
  2613                           ;main.c: 285: if (consecutive_fails >= 3)
  2614  01333C  0E02               	movlw	2
  2615  01333E  0101               	movlb	1	; () banked
  2616  013340  6566               	cpfsgt	_consecutive_fails& (0+255),b
  2617  013342  D00C               	goto	l14874
  2618                           
  2619                           ; BSR set to: 1
  2620                           ;main.c: 286: {
  2621                           ;main.c: 288: myAppState = STATE_PROBLEM;
  2622  013344  0E02               	movlw	2
  2623  013346  0101               	movlb	1	; () banked
  2624  013348  6F6A               	movwf	_myAppState& (0+255),b
  2625                           
  2626                           ; BSR set to: 1
  2627                           ;main.c: 289: LATCbits.LATC0 = 0;
  2628  01334A  908B               	bcf	3979,0,c	;volatile
  2629                           
  2630                           ; BSR set to: 1
  2631                           ;main.c: 290: MiApp_TransceiverPowerState(0x00);
  2632  01334C  0E00               	movlw	0
  2633  01334E  EC3C  F0B4         	call	_MiApp_TransceiverPowerState
  2634                           
  2635                           ;main.c: 291: timer_reset();
  2636  013352  EC57  F0B5         	call	_timer_reset	;wreg free
  2637                           
  2638                           ;main.c: 292: PIR3bits.RTCCIF = 0;
  2639  013356  90A4               	bcf	4004,0,c	;volatile
  2640  013358  0003               	sleep		;# 
  2641  01335A  00FF               	reset		;# 
  2642  01335C                     l14874:
  2643                           
  2644                           ;main.c: 296: }
  2645                           ;main.c: 297: wait_for_1_sec();
  2646  01335C  EC94  F0B4         	call	_wait_for_1_sec	;wreg free
  2647  013360                     l14876:
  2648  013360  EC08  F08A         	call	_send_periodical_update	;wreg free
  2649  013364  0900               	iorlw	0
  2650  013366  B4D8               	btfsc	status,2,c
  2651  013368  D7E7               	goto	l14860
  2652  01336A                     l14878:
  2653                           
  2654                           ;main.c: 298: }
  2655                           ;main.c: 299: consecutive_fails = 0;
  2656  01336A  0E00               	movlw	0
  2657  01336C  0101               	movlb	1	; () banked
  2658  01336E  6F66               	movwf	_consecutive_fails& (0+255),b
  2659                           
  2660                           ; BSR set to: 1
  2661  013370  D7C6               	goto	l14840
  2662  013372                     __end_of_main:
  2663                           	opt stack 0
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           prodh	equ	0xFF4
  2669                           prodl	equ	0xFF3
  2670                           postinc0	equ	0xFEE
  2671                           wreg	equ	0xFE8
  2672                           indf2	equ	0xFDF
  2673                           postinc2	equ	0xFDE
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _send_periodical_update *****************
  2679 ;; Defined at:
  2680 ;;		line 587 in file "src/main.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  tmp2            3    0[BANK3 ] float 
  2685 ;;  tmp             2   15[BANK3 ] unsigned int 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      unsigned char 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;      Locals:         0       0       0       0      17       0       0       0       0       0       0       0       
      +0       0       0       0
  2697 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;      Totals:         0       0       1       0      17       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;Total ram usage:       18 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:   16
  2702 ;; This function calls:
  2703 ;;		___ftadd
  2704 ;;		___ftdiv
  2705 ;;		___ftmul
  2706 ;;		___ftneg
  2707 ;;		___fttol
  2708 ;;		___lldiv
  2709 ;;		___lltoft
  2710 ;;		___lmul
  2711 ;;		_do_UPDATE
  2712 ;;		_encode_ufixed16_variable
  2713 ;;		_encode_uint16_variable
  2714 ;;		_encode_uint8_variable
  2715 ;;		_floor
  2716 ;;		_memcpy
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text1
  2723  011410                     __ptext1:
  2724                           	opt stack 0
  2725  011410                     _send_periodical_update:
  2726                           	opt stack 14
  2727                           
  2728                           ;main.c: 589: uint16_t tmp;
  2729                           ;main.c: 591: p_buffer = m_buffer;
  2730                           
  2731                           ; BSR set to: 1
  2732                           ;incstack = 0
  2733  011410  0E97               	movlw	low _m_buffer
  2734  011412  0101               	movlb	1	; () banked
  2735  011414  6F5C               	movwf	_p_buffer& (0+255),b
  2736  011416  0E01               	movlw	high _m_buffer
  2737  011418  0101               	movlb	1	; () banked
  2738  01141A  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  2739                           
  2740                           ; BSR set to: 1
  2741                           ;main.c: 594: memcpy(m_var.label, BATTERY_VOLTAGE_LABEL, 3);
  2742  01141C  0EB7               	movlw	low _m_var
  2743  01141E  0100               	movlb	0	; () banked
  2744  011420  6F81               	movwf	memcpy@d1& (0+255),b
  2745  011422  0E01               	movlw	high _m_var
  2746  011424  0100               	movlb	0	; () banked
  2747  011426  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  2748  011428  0EDF               	movlw	low _BATTERY_VOLTAGE_LABEL
  2749  01142A  0100               	movlb	0	; () banked
  2750  01142C  6F83               	movwf	memcpy@s1& (0+255),b
  2751  01142E  0EFF               	movlw	high _BATTERY_VOLTAGE_LABEL
  2752  011430  0100               	movlb	0	; () banked
  2753  011432  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  2754  011434  0E00               	movlw	0
  2755  011436  0100               	movlb	0	; () banked
  2756  011438  6F86               	movwf	(memcpy@n+1)& (0+255),b
  2757  01143A  0E03               	movlw	3
  2758  01143C  6F85               	movwf	memcpy@n& (0+255),b
  2759  01143E  ECDD  F0B2         	call	_memcpy	;wreg free
  2760                           
  2761                           ;main.c: 595: m_var.unit = 2;
  2762  011442  0E02               	movlw	2
  2763  011444  0101               	movlb	1	; () banked
  2764  011446  6FBD               	movwf	(_m_var+6)& (0+255),b
  2765                           
  2766                           ; BSR set to: 1
  2767                           ;main.c: 596: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  2768  011448  C152  F0BE         	movff	_m_battery_voltage,floor@x
  2769  01144C  C153  F0BF         	movff	_m_battery_voltage+1,floor@x+1
  2770  011450  C154  F0C0         	movff	_m_battery_voltage+2,floor@x+2
  2771  011454  EC62  F0AA         	call	_floor	;wreg free
  2772  011458  C0BE  F3D7         	movff	?_floor,_send_periodical_update$5080
  2773  01145C  C0BF  F3D8         	movff	?_floor+1,_send_periodical_update$5080+1
  2774  011460  C0C0  F3D9         	movff	?_floor+2,_send_periodical_update$5080+2
  2775                           
  2776                           ;main.c: 596: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  2777  011464  C3D7  F0A5         	movff	_send_periodical_update$5080,___fttol@f1
  2778  011468  C3D8  F0A6         	movff	_send_periodical_update$5080+1,___fttol@f1+1
  2779  01146C  C3D9  F0A7         	movff	_send_periodical_update$5080+2,___fttol@f1+2
  2780  011470  ECB8  F0A4         	call	___fttol	;wreg free
  2781  011474  0100               	movlb	0	; () banked
  2782  011476  51A5               	movf	?___fttol& (0+255),w,b
  2783  011478  0101               	movlb	1	; () banked
  2784  01147A  6FBB               	movwf	(_m_var+4)& (0+255),b
  2785                           
  2786                           ; BSR set to: 1
  2787                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  2788  01147C  C152  F0BE         	movff	_m_battery_voltage,floor@x
  2789  011480  C153  F0BF         	movff	_m_battery_voltage+1,floor@x+1
  2790  011484  C154  F0C0         	movff	_m_battery_voltage+2,floor@x+2
  2791  011488  EC62  F0AA         	call	_floor	;wreg free
  2792  01148C  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  2793  011490  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  2794  011494  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  2795  011498  ECCA  F0B4         	call	___ftneg	;wreg free
  2796  01149C  C0C6  F3DA         	movff	?___ftneg,_send_periodical_update$5081
  2797  0114A0  C0C7  F3DB         	movff	?___ftneg+1,_send_periodical_update$5081+1
  2798  0114A4  C0C8  F3DC         	movff	?___ftneg+2,_send_periodical_update$5081+2
  2799                           
  2800                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  2801  0114A8  0E00               	movlw	0
  2802  0114AA  0100               	movlb	0	; () banked
  2803  0114AC  6FCC               	movwf	___ftmul@f2& (0+255),b
  2804  0114AE  0EC8               	movlw	200
  2805  0114B0  0100               	movlb	0	; () banked
  2806  0114B2  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  2807  0114B4  0E42               	movlw	66
  2808  0114B6  0100               	movlb	0	; () banked
  2809  0114B8  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  2810  0114BA  C152  F08C         	movff	_m_battery_voltage,___ftadd@f2
  2811  0114BE  C153  F08D         	movff	_m_battery_voltage+1,___ftadd@f2+1
  2812  0114C2  C154  F08E         	movff	_m_battery_voltage+2,___ftadd@f2+2
  2813  0114C6  C3DA  F089         	movff	_send_periodical_update$5081,___ftadd@f1
  2814  0114CA  C3DB  F08A         	movff	_send_periodical_update$5081+1,___ftadd@f1+1
  2815  0114CE  C3DC  F08B         	movff	_send_periodical_update$5081+2,___ftadd@f1+2
  2816  0114D2  ECB9  F099         	call	___ftadd	;wreg free
  2817  0114D6  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  2818  0114DA  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  2819  0114DE  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  2820  0114E2  EC11  F0A2         	call	___ftmul	;wreg free
  2821  0114E6  C0C9  F3DD         	movff	?___ftmul,_send_periodical_update$5082
  2822  0114EA  C0CA  F3DE         	movff	?___ftmul+1,_send_periodical_update$5082+1
  2823  0114EE  C0CB  F3DF         	movff	?___ftmul+2,_send_periodical_update$5082+2
  2824                           
  2825                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  2826  0114F2  C3DD  F0BE         	movff	_send_periodical_update$5082,floor@x
  2827  0114F6  C3DE  F0BF         	movff	_send_periodical_update$5082+1,floor@x+1
  2828  0114FA  C3DF  F0C0         	movff	_send_periodical_update$5082+2,floor@x+2
  2829  0114FE  EC62  F0AA         	call	_floor	;wreg free
  2830  011502  C0BE  F3E0         	movff	?_floor,_send_periodical_update$5083
  2831  011506  C0BF  F3E1         	movff	?_floor+1,_send_periodical_update$5083+1
  2832  01150A  C0C0  F3E2         	movff	?_floor+2,_send_periodical_update$5083+2
  2833                           
  2834                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  2835  01150E  C3E0  F0A5         	movff	_send_periodical_update$5083,___fttol@f1
  2836  011512  C3E1  F0A6         	movff	_send_periodical_update$5083+1,___fttol@f1+1
  2837  011516  C3E2  F0A7         	movff	_send_periodical_update$5083+2,___fttol@f1+2
  2838  01151A  ECB8  F0A4         	call	___fttol	;wreg free
  2839  01151E  0100               	movlb	0	; () banked
  2840  011520  51A5               	movf	?___fttol& (0+255),w,b
  2841  011522  0101               	movlb	1	; () banked
  2842  011524  6FBC               	movwf	(_m_var+5)& (0+255),b
  2843                           
  2844                           ; BSR set to: 1
  2845                           ;main.c: 598: m_var.writable = 0;
  2846  011526  0E00               	movlw	0
  2847  011528  0101               	movlb	1	; () banked
  2848  01152A  6FBE               	movwf	(_m_var+7)& (0+255),b
  2849                           
  2850                           ; BSR set to: 1
  2851                           ;main.c: 599: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  2852  01152C  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  2853  011530  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  2854  011534  EE21  F0B7         	lfsr	2,_m_var
  2855  011538  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  2856  01153C  0E08               	movlw	8
  2857  01153E                     u16901:
  2858  01153E  CFDB FFEB          	movff	plusw2,plusw0
  2859  011542  06E8               	decf	wreg,f,c
  2860  011544  E2FC               	bc	u16901
  2861  011546  EC00  F0AF         	call	_encode_ufixed16_variable	;wreg free
  2862  01154A  0101               	movlb	1	; () banked
  2863  01154C  6FFD               	movwf	??_send_periodical_update& (0+255),b
  2864  01154E  0101               	movlb	1	; () banked
  2865  011550  51FD               	movf	??_send_periodical_update& (0+255),w,b
  2866  011552  0D01               	mullw	1
  2867  011554  50F3               	movf	prodl,w,c
  2868  011556  0101               	movlb	1	; () banked
  2869  011558  275C               	addwf	_p_buffer& (0+255),f,b
  2870  01155A  50F4               	movf	prodh,w,c
  2871  01155C  0101               	movlb	1	; () banked
  2872  01155E  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  2873                           
  2874                           ; BSR set to: 1
  2875                           ;main.c: 601: memcpy(m_var.label, LIGHT_LEVEL_LABEL, 3);
  2876  011560  0EB7               	movlw	low _m_var
  2877  011562  0100               	movlb	0	; () banked
  2878  011564  6F81               	movwf	memcpy@d1& (0+255),b
  2879  011566  0E01               	movlw	high _m_var
  2880  011568  0100               	movlb	0	; () banked
  2881  01156A  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  2882  01156C  0EE7               	movlw	low _LIGHT_LEVEL_LABEL
  2883  01156E  0100               	movlb	0	; () banked
  2884  011570  6F83               	movwf	memcpy@s1& (0+255),b
  2885  011572  0EFF               	movlw	high _LIGHT_LEVEL_LABEL
  2886  011574  0100               	movlb	0	; () banked
  2887  011576  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  2888  011578  0E00               	movlw	0
  2889  01157A  0100               	movlb	0	; () banked
  2890  01157C  6F86               	movwf	(memcpy@n+1)& (0+255),b
  2891  01157E  0E03               	movlw	3
  2892  011580  6F85               	movwf	memcpy@n& (0+255),b
  2893  011582  ECDD  F0B2         	call	_memcpy	;wreg free
  2894                           
  2895                           ;main.c: 602: m_var.unit = 3;
  2896  011586  0E03               	movlw	3
  2897  011588  0101               	movlb	1	; () banked
  2898  01158A  6FBD               	movwf	(_m_var+6)& (0+255),b
  2899                           
  2900                           ; BSR set to: 1
  2901                           ;main.c: 603: m_var.value_byte1 = m_light_level;
  2902  01158C  C168  F1BB         	movff	_m_light_level,_m_var+4
  2903                           
  2904                           ; BSR set to: 1
  2905                           ;main.c: 604: m_var.writable = 0;
  2906  011590  0E00               	movlw	0
  2907  011592  0101               	movlb	1	; () banked
  2908  011594  6FBE               	movwf	(_m_var+7)& (0+255),b
  2909                           
  2910                           ; BSR set to: 1
  2911                           ;main.c: 605: p_buffer += encode_uint8_variable(p_buffer, m_var);
  2912  011596  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  2913  01159A  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  2914  01159E  EE21  F0B7         	lfsr	2,_m_var
  2915  0115A2  EE00  F083         	lfsr	0,encode_uint8_variable@var
  2916  0115A6  0E08               	movlw	8
  2917  0115A8                     u16911:
  2918  0115A8  CFDB FFEB          	movff	plusw2,plusw0
  2919  0115AC  06E8               	decf	wreg,f,c
  2920  0115AE  E2FC               	bc	u16911
  2921  0115B0  EC23  F0B0         	call	_encode_uint8_variable	;wreg free
  2922  0115B4  0101               	movlb	1	; () banked
  2923  0115B6  6FFD               	movwf	??_send_periodical_update& (0+255),b
  2924  0115B8  0101               	movlb	1	; () banked
  2925  0115BA  51FD               	movf	??_send_periodical_update& (0+255),w,b
  2926  0115BC  0D01               	mullw	1
  2927  0115BE  50F3               	movf	prodl,w,c
  2928  0115C0  0101               	movlb	1	; () banked
  2929  0115C2  275C               	addwf	_p_buffer& (0+255),f,b
  2930  0115C4  50F4               	movf	prodh,w,c
  2931  0115C6  0101               	movlb	1	; () banked
  2932  0115C8  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  2933                           
  2934                           ; BSR set to: 1
  2935                           ;main.c: 607: memcpy(m_var.label, TEMPERATURE_LABEL, 3);
  2936  0115CA  0EB7               	movlw	low _m_var
  2937  0115CC  0100               	movlb	0	; () banked
  2938  0115CE  6F81               	movwf	memcpy@d1& (0+255),b
  2939  0115D0  0E01               	movlw	high _m_var
  2940  0115D2  0100               	movlb	0	; () banked
  2941  0115D4  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  2942  0115D6  0EEF               	movlw	low _TEMPERATURE_LABEL
  2943  0115D8  0100               	movlb	0	; () banked
  2944  0115DA  6F83               	movwf	memcpy@s1& (0+255),b
  2945  0115DC  0EFF               	movlw	high _TEMPERATURE_LABEL
  2946  0115DE  0100               	movlb	0	; () banked
  2947  0115E0  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  2948  0115E2  0E00               	movlw	0
  2949  0115E4  0100               	movlb	0	; () banked
  2950  0115E6  6F86               	movwf	(memcpy@n+1)& (0+255),b
  2951  0115E8  0E03               	movlw	3
  2952  0115EA  6F85               	movwf	memcpy@n& (0+255),b
  2953  0115EC  ECDD  F0B2         	call	_memcpy	;wreg free
  2954                           
  2955                           ;main.c: 608: m_var.unit = 1;
  2956  0115F0  0E01               	movlw	1
  2957  0115F2  0101               	movlb	1	; () banked
  2958  0115F4  6FBD               	movwf	(_m_var+6)& (0+255),b
  2959                           
  2960                           ; BSR set to: 1
  2961                           ;main.c: 609: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  2962  0115F6  C155  F0BE         	movff	_m_temperature,floor@x
  2963  0115FA  C156  F0BF         	movff	_m_temperature+1,floor@x+1
  2964  0115FE  C157  F0C0         	movff	_m_temperature+2,floor@x+2
  2965  011602  EC62  F0AA         	call	_floor	;wreg free
  2966  011606  C0BE  F3D7         	movff	?_floor,_send_periodical_update$5080
  2967  01160A  C0BF  F3D8         	movff	?_floor+1,_send_periodical_update$5080+1
  2968  01160E  C0C0  F3D9         	movff	?_floor+2,_send_periodical_update$5080+2
  2969                           
  2970                           ;main.c: 609: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  2971  011612  C3D7  F0A5         	movff	_send_periodical_update$5080,___fttol@f1
  2972  011616  C3D8  F0A6         	movff	_send_periodical_update$5080+1,___fttol@f1+1
  2973  01161A  C3D9  F0A7         	movff	_send_periodical_update$5080+2,___fttol@f1+2
  2974  01161E  ECB8  F0A4         	call	___fttol	;wreg free
  2975  011622  0100               	movlb	0	; () banked
  2976  011624  51A5               	movf	?___fttol& (0+255),w,b
  2977  011626  0101               	movlb	1	; () banked
  2978  011628  6FBB               	movwf	(_m_var+4)& (0+255),b
  2979                           
  2980                           ; BSR set to: 1
  2981                           ;main.c: 610: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  2982  01162A  C155  F0BE         	movff	_m_temperature,floor@x
  2983  01162E  C156  F0BF         	movff	_m_temperature+1,floor@x+1
  2984  011632  C157  F0C0         	movff	_m_temperature+2,floor@x+2
  2985  011636  EC62  F0AA         	call	_floor	;wreg free
  2986  01163A  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  2987  01163E  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  2988  011642  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  2989  011646  ECCA  F0B4         	call	___ftneg	;wreg free
  2990  01164A  C0C6  F3DA         	movff	?___ftneg,_send_periodical_update$5081
  2991  01164E  C0C7  F3DB         	movff	?___ftneg+1,_send_periodical_update$5081+1
  2992  011652  C0C8  F3DC         	movff	?___ftneg+2,_send_periodical_update$5081+2
  2993                           
  2994                           ;main.c: 610: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  2995  011656  0E00               	movlw	0
  2996  011658  0100               	movlb	0	; () banked
  2997  01165A  6FCC               	movwf	___ftmul@f2& (0+255),b
  2998  01165C  0EC8               	movlw	200
  2999  01165E  0100               	movlb	0	; () banked
  3000  011660  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  3001  011662  0E42               	movlw	66
  3002  011664  0100               	movlb	0	; () banked
  3003  011666  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  3004  011668  C155  F08C         	movff	_m_temperature,___ftadd@f2
  3005  01166C  C156  F08D         	movff	_m_temperature+1,___ftadd@f2+1
  3006  011670  C157  F08E         	movff	_m_temperature+2,___ftadd@f2+2
  3007  011674  C3DA  F089         	movff	_send_periodical_update$5081,___ftadd@f1
  3008  011678  C3DB  F08A         	movff	_send_periodical_update$5081+1,___ftadd@f1+1
  3009  01167C  C3DC  F08B         	movff	_send_periodical_update$5081+2,___ftadd@f1+2
  3010  011680  ECB9  F099         	call	___ftadd	;wreg free
  3011  011684  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  3012  011688  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  3013  01168C  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  3014  011690  EC11  F0A2         	call	___ftmul	;wreg free
  3015  011694  C0C9  F3DD         	movff	?___ftmul,_send_periodical_update$5082
  3016  011698  C0CA  F3DE         	movff	?___ftmul+1,_send_periodical_update$5082+1
  3017  01169C  C0CB  F3DF         	movff	?___ftmul+2,_send_periodical_update$5082+2
  3018                           
  3019                           ;main.c: 610: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3020  0116A0  C3DD  F0BE         	movff	_send_periodical_update$5082,floor@x
  3021  0116A4  C3DE  F0BF         	movff	_send_periodical_update$5082+1,floor@x+1
  3022  0116A8  C3DF  F0C0         	movff	_send_periodical_update$5082+2,floor@x+2
  3023  0116AC  EC62  F0AA         	call	_floor	;wreg free
  3024  0116B0  C0BE  F3E0         	movff	?_floor,_send_periodical_update$5083
  3025  0116B4  C0BF  F3E1         	movff	?_floor+1,_send_periodical_update$5083+1
  3026  0116B8  C0C0  F3E2         	movff	?_floor+2,_send_periodical_update$5083+2
  3027                           
  3028                           ;main.c: 610: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3029  0116BC  C3E0  F0A5         	movff	_send_periodical_update$5083,___fttol@f1
  3030  0116C0  C3E1  F0A6         	movff	_send_periodical_update$5083+1,___fttol@f1+1
  3031  0116C4  C3E2  F0A7         	movff	_send_periodical_update$5083+2,___fttol@f1+2
  3032  0116C8  ECB8  F0A4         	call	___fttol	;wreg free
  3033  0116CC  0100               	movlb	0	; () banked
  3034  0116CE  51A5               	movf	?___fttol& (0+255),w,b
  3035  0116D0  0101               	movlb	1	; () banked
  3036  0116D2  6FBC               	movwf	(_m_var+5)& (0+255),b
  3037                           
  3038                           ; BSR set to: 1
  3039                           ;main.c: 611: m_var.writable = 0;
  3040  0116D4  0E00               	movlw	0
  3041  0116D6  0101               	movlb	1	; () banked
  3042  0116D8  6FBE               	movwf	(_m_var+7)& (0+255),b
  3043                           
  3044                           ; BSR set to: 1
  3045                           ;main.c: 612: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3046  0116DA  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3047  0116DE  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3048  0116E2  EE21  F0B7         	lfsr	2,_m_var
  3049  0116E6  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  3050  0116EA  0E08               	movlw	8
  3051  0116EC                     u16921:
  3052  0116EC  CFDB FFEB          	movff	plusw2,plusw0
  3053  0116F0  06E8               	decf	wreg,f,c
  3054  0116F2  E2FC               	bc	u16921
  3055  0116F4  EC00  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3056  0116F8  0101               	movlb	1	; () banked
  3057  0116FA  6FFD               	movwf	??_send_periodical_update& (0+255),b
  3058  0116FC  0101               	movlb	1	; () banked
  3059  0116FE  51FD               	movf	??_send_periodical_update& (0+255),w,b
  3060  011700  0D01               	mullw	1
  3061  011702  50F3               	movf	prodl,w,c
  3062  011704  0101               	movlb	1	; () banked
  3063  011706  275C               	addwf	_p_buffer& (0+255),f,b
  3064  011708  50F4               	movf	prodh,w,c
  3065  01170A  0101               	movlb	1	; () banked
  3066  01170C  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3067                           
  3068                           ; BSR set to: 1
  3069                           ;main.c: 614: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  3070  01170E  0E97               	movlw	low _m_buffer
  3071  011710  0101               	movlb	1	; () banked
  3072  011712  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  3073  011714  0E01               	movlw	high _m_buffer
  3074  011716  0101               	movlb	1	; () banked
  3075  011718  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  3076  01171A  0E97               	movlw	_m_buffer& (0+255)
  3077  01171C  0800               	sublw	0
  3078  01171E  0101               	movlb	1	; () banked
  3079  011720  255C               	addwf	_p_buffer& (0+255),w,b
  3080  011722  0101               	movlb	1	; () banked
  3081  011724  6FF6               	movwf	do_UPDATE@size& (0+255),b
  3082  011726  0E00               	movlw	0
  3083  011728  0101               	movlb	1	; () banked
  3084  01172A  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  3085  01172C  EC9C  F0A0         	call	_do_UPDATE	;wreg free
  3086  011730  0900               	iorlw	0
  3087  011732  A4D8               	btfss	status,2,c
  3088  011734  D002               	goto	l14386
  3089                           
  3090                           ;main.c: 615: return 0;
  3091  011736  0E00               	movlw	0
  3092  011738  0012               	return	
  3093  01173A                     l14386:
  3094                           
  3095                           ;main.c: 618: p_buffer = m_buffer;
  3096  01173A  0E97               	movlw	low _m_buffer
  3097  01173C  0101               	movlb	1	; () banked
  3098  01173E  6F5C               	movwf	_p_buffer& (0+255),b
  3099  011740  0E01               	movlw	high _m_buffer
  3100  011742  0101               	movlb	1	; () banked
  3101  011744  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  3102                           
  3103                           ; BSR set to: 1
  3104                           ;main.c: 620: memcpy(m_var.label, UPTIME_LABEL, 3);
  3105  011746  0EB7               	movlw	low _m_var
  3106  011748  0100               	movlb	0	; () banked
  3107  01174A  6F81               	movwf	memcpy@d1& (0+255),b
  3108  01174C  0E01               	movlw	high _m_var
  3109  01174E  0100               	movlb	0	; () banked
  3110  011750  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  3111  011752  0EFB               	movlw	low _UPTIME_LABEL
  3112  011754  0100               	movlb	0	; () banked
  3113  011756  6F83               	movwf	memcpy@s1& (0+255),b
  3114  011758  0EFF               	movlw	high _UPTIME_LABEL
  3115  01175A  0100               	movlb	0	; () banked
  3116  01175C  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  3117  01175E  0E00               	movlw	0
  3118  011760  0100               	movlb	0	; () banked
  3119  011762  6F86               	movwf	(memcpy@n+1)& (0+255),b
  3120  011764  0E03               	movlw	3
  3121  011766  6F85               	movwf	memcpy@n& (0+255),b
  3122  011768  ECDD  F0B2         	call	_memcpy	;wreg free
  3123                           
  3124                           ;main.c: 621: if (m_uptime_seconds < 60)
  3125  01176C  0101               	movlb	1	; () banked
  3126  01176E  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  3127  011770  0101               	movlb	1	; () banked
  3128  011772  114C               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  3129  011774  0101               	movlb	1	; () banked
  3130  011776  114B               	iorwf	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  3131  011778  E11D               	bnz	l14398
  3132  01177A  0E3C               	movlw	60
  3133  01177C  0101               	movlb	1	; () banked
  3134  01177E  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  3135  011780  B0D8               	btfsc	status,0,c
  3136  011782  D018               	goto	l14398
  3137                           
  3138                           ; BSR set to: 1
  3139                           ;main.c: 622: {
  3140                           ;main.c: 623: m_var.unit = 5;
  3141  011784  0E05               	movlw	5
  3142  011786  0101               	movlb	1	; () banked
  3143  011788  6FBD               	movwf	(_m_var+6)& (0+255),b
  3144                           
  3145                           ; BSR set to: 1
  3146                           ;main.c: 624: m_var.value_byte1 = m_uptime_seconds;
  3147  01178A  C14A  F1BB         	movff	_m_uptime_seconds,_m_var+4	;volatile
  3148                           
  3149                           ;main.c: 625: m_var.writable = 0;
  3150  01178E  0E00               	movlw	0
  3151  011790  0101               	movlb	1	; () banked
  3152  011792  6FBE               	movwf	(_m_var+7)& (0+255),b
  3153                           
  3154                           ; BSR set to: 1
  3155                           ;main.c: 626: p_buffer += encode_uint8_variable(p_buffer, m_var);
  3156  011794  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  3157  011798  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  3158  01179C  EE21  F0B7         	lfsr	2,_m_var
  3159  0117A0  EE00  F083         	lfsr	0,encode_uint8_variable@var
  3160  0117A4  0E08               	movlw	8
  3161  0117A6                     u16951:
  3162  0117A6  CFDB FFEB          	movff	plusw2,plusw0
  3163  0117AA  06E8               	decf	wreg,f,c
  3164  0117AC  E2FC               	bc	u16951
  3165  0117AE  EC23  F0B0         	call	_encode_uint8_variable	;wreg free
  3166  0117B2  D0AD               	goto	L3
  3167  0117B4                     l14398:
  3168                           
  3169                           ; BSR set to: 1
  3170                           ;main.c: 628: else if (m_uptime_seconds < 3600)
  3171  0117B4  0101               	movlb	1	; () banked
  3172  0117B6  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  3173  0117B8  0101               	movlb	1	; () banked
  3174  0117BA  114C               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  3175  0117BC  E135               	bnz	l14408
  3176  0117BE  0E10               	movlw	16
  3177  0117C0  0101               	movlb	1	; () banked
  3178  0117C2  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  3179  0117C4  0E0E               	movlw	14
  3180  0117C6  0101               	movlb	1	; () banked
  3181  0117C8  594B               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  3182  0117CA  B0D8               	btfsc	status,0,c
  3183  0117CC  D02D               	goto	l14408
  3184                           
  3185                           ; BSR set to: 1
  3186                           ;main.c: 629: {
  3187                           ;main.c: 630: m_var.unit = 4;
  3188  0117CE  0E04               	movlw	4
  3189  0117D0  0101               	movlb	1	; () banked
  3190  0117D2  6FBD               	movwf	(_m_var+6)& (0+255),b
  3191                           
  3192                           ; BSR set to: 1
  3193                           ;main.c: 631: m_var.value_byte1 = m_uptime_seconds / 60;
  3194  0117D4  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  3195  0117D8  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  3196  0117DC  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  3197  0117E0  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  3198  0117E4  0E3C               	movlw	60
  3199  0117E6  0100               	movlb	0	; () banked
  3200  0117E8  6F85               	movwf	___lldiv@divisor& (0+255),b
  3201  0117EA  0E00               	movlw	0
  3202  0117EC  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  3203  0117EE  0E00               	movlw	0
  3204  0117F0  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  3205  0117F2  0E00               	movlw	0
  3206  0117F4  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  3207  0117F6  EC53  F0AD         	call	___lldiv	;wreg free
  3208  0117FA  0100               	movlb	0	; () banked
  3209  0117FC  5181               	movf	?___lldiv& (0+255),w,b
  3210  0117FE  0101               	movlb	1	; () banked
  3211  011800  6FBB               	movwf	(_m_var+4)& (0+255),b
  3212                           
  3213                           ; BSR set to: 1
  3214                           ;main.c: 632: m_var.writable = 0;
  3215  011802  0E00               	movlw	0
  3216  011804  0101               	movlb	1	; () banked
  3217  011806  6FBE               	movwf	(_m_var+7)& (0+255),b
  3218                           
  3219                           ; BSR set to: 1
  3220                           ;main.c: 633: p_buffer += encode_uint8_variable(p_buffer, m_var);
  3221  011808  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  3222  01180C  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  3223  011810  EE21  F0B7         	lfsr	2,_m_var
  3224  011814  EE00  F083         	lfsr	0,encode_uint8_variable@var
  3225  011818  0E08               	movlw	8
  3226  01181A                     u16971:
  3227  01181A  CFDB FFEB          	movff	plusw2,plusw0
  3228  01181E  06E8               	decf	wreg,f,c
  3229  011820  E2FC               	bc	u16971
  3230  011822  EC23  F0B0         	call	_encode_uint8_variable	;wreg free
  3231  011826  D073               	goto	L3
  3232  011828                     l14408:
  3233                           
  3234                           ; BSR set to: 1
  3235                           ;main.c: 635: else if (m_uptime_seconds < (86400))
  3236  011828  0101               	movlb	1	; () banked
  3237  01182A  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  3238  01182C  E13E               	bnz	l14422
  3239  01182E  0E80               	movlw	128
  3240  011830  0101               	movlb	1	; () banked
  3241  011832  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  3242  011834  0E51               	movlw	81
  3243  011836  0101               	movlb	1	; () banked
  3244  011838  594B               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  3245  01183A  0E01               	movlw	1
  3246  01183C  0101               	movlb	1	; () banked
  3247  01183E  594C               	subwfb	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  3248  011840  B0D8               	btfsc	status,0,c
  3249  011842  D033               	goto	l14422
  3250                           
  3251                           ; BSR set to: 1
  3252                           ;main.c: 636: {
  3253                           ;main.c: 637: m_var.unit = 6;
  3254  011844  0E06               	movlw	6
  3255  011846  0101               	movlb	1	; () banked
  3256  011848  6FBD               	movwf	(_m_var+6)& (0+255),b
  3257                           
  3258                           ; BSR set to: 1
  3259                           ;main.c: 638: tmp = m_uptime_seconds / 3600;
  3260  01184A  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  3261  01184E  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  3262  011852  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  3263  011856  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  3264  01185A  0E10               	movlw	16
  3265  01185C  0100               	movlb	0	; () banked
  3266  01185E  6F85               	movwf	___lldiv@divisor& (0+255),b
  3267  011860  0E0E               	movlw	14
  3268  011862  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  3269  011864  0E00               	movlw	0
  3270  011866  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  3271  011868  0E00               	movlw	0
  3272  01186A  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  3273  01186C  EC53  F0AD         	call	___lldiv	;wreg free
  3274  011870  C081  F3E3         	movff	?___lldiv,send_periodical_update@tmp
  3275  011874  C082  F3E4         	movff	?___lldiv+1,send_periodical_update@tmp+1
  3276                           
  3277                           ;main.c: 639: m_var.value_byte1 = tmp / 256;
  3278  011878  0103               	movlb	3	; () banked
  3279  01187A  51E4               	movf	(send_periodical_update@tmp+1)& (0+255),w,b
  3280  01187C  0101               	movlb	1	; () banked
  3281  01187E  6FBB               	movwf	(_m_var+4)& (0+255),b
  3282                           
  3283                           ; BSR set to: 1
  3284                           ;main.c: 640: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  3285  011880  C3E3  F1BC         	movff	send_periodical_update@tmp,_m_var+5
  3286                           
  3287                           ; BSR set to: 1
  3288                           ;main.c: 641: m_var.writable = 0;
  3289  011884  0E00               	movlw	0
  3290  011886  0101               	movlb	1	; () banked
  3291  011888  6FBE               	movwf	(_m_var+7)& (0+255),b
  3292                           
  3293                           ; BSR set to: 1
  3294                           ;main.c: 642: p_buffer += encode_uint16_variable(p_buffer, m_var);
  3295  01188A  C15C  F081         	movff	_p_buffer,encode_uint16_variable@buffer
  3296  01188E  C15D  F082         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  3297  011892  EE21  F0B7         	lfsr	2,_m_var
  3298  011896  EE00  F083         	lfsr	0,encode_uint16_variable@var
  3299  01189A  0E08               	movlw	8
  3300  01189C                     u16991:
  3301  01189C  CFDB FFEB          	movff	plusw2,plusw0
  3302  0118A0  06E8               	decf	wreg,f,c
  3303  0118A2  E2FC               	bc	u16991
  3304  0118A4  ECB2  F0AE         	call	_encode_uint16_variable	;wreg free
  3305  0118A8  D032               	goto	L3
  3306  0118AA                     l14422:
  3307                           
  3308                           ; BSR set to: 1
  3309                           ;main.c: 644: else
  3310                           ;main.c: 645: {
  3311                           ;main.c: 646: m_var.unit = 0;
  3312  0118AA  0E00               	movlw	0
  3313  0118AC  0101               	movlb	1	; () banked
  3314  0118AE  6FBD               	movwf	(_m_var+6)& (0+255),b
  3315                           
  3316                           ; BSR set to: 1
  3317                           ;main.c: 647: tmp = m_uptime_seconds / 86400;
  3318  0118B0  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  3319  0118B4  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  3320  0118B8  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  3321  0118BC  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  3322  0118C0  0E80               	movlw	128
  3323  0118C2  0100               	movlb	0	; () banked
  3324  0118C4  6F85               	movwf	___lldiv@divisor& (0+255),b
  3325  0118C6  0E51               	movlw	81
  3326  0118C8  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  3327  0118CA  0E01               	movlw	1
  3328  0118CC  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  3329  0118CE  0E00               	movlw	0
  3330  0118D0  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  3331  0118D2  EC53  F0AD         	call	___lldiv	;wreg free
  3332  0118D6  C081  F3E3         	movff	?___lldiv,send_periodical_update@tmp
  3333  0118DA  C082  F3E4         	movff	?___lldiv+1,send_periodical_update@tmp+1
  3334                           
  3335                           ;main.c: 648: m_var.value_byte1 = tmp / 256;
  3336  0118DE  0103               	movlb	3	; () banked
  3337  0118E0  51E4               	movf	(send_periodical_update@tmp+1)& (0+255),w,b
  3338  0118E2  0101               	movlb	1	; () banked
  3339  0118E4  6FBB               	movwf	(_m_var+4)& (0+255),b
  3340                           
  3341                           ; BSR set to: 1
  3342                           ;main.c: 649: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  3343  0118E6  C3E3  F1BC         	movff	send_periodical_update@tmp,_m_var+5
  3344                           
  3345                           ; BSR set to: 1
  3346                           ;main.c: 650: m_var.writable = 0;
  3347  0118EA  0E00               	movlw	0
  3348  0118EC  0101               	movlb	1	; () banked
  3349  0118EE  6FBE               	movwf	(_m_var+7)& (0+255),b
  3350                           
  3351                           ; BSR set to: 1
  3352                           ;main.c: 651: p_buffer += encode_uint16_variable(p_buffer, m_var);
  3353  0118F0  C15C  F081         	movff	_p_buffer,encode_uint16_variable@buffer
  3354  0118F4  C15D  F082         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  3355  0118F8  EE21  F0B7         	lfsr	2,_m_var
  3356  0118FC  EE00  F083         	lfsr	0,encode_uint16_variable@var
  3357  011900  0E08               	movlw	8
  3358  011902                     u17001:
  3359  011902  CFDB FFEB          	movff	plusw2,plusw0
  3360  011906  06E8               	decf	wreg,f,c
  3361  011908  E2FC               	bc	u17001
  3362  01190A  ECB2  F0AE         	call	_encode_uint16_variable	;wreg free
  3363  01190E                     L3:
  3364  01190E  0101               	movlb	1	; () banked
  3365  011910  6FFD               	movwf	??_send_periodical_update& (0+255),b
  3366  011912  0101               	movlb	1	; () banked
  3367  011914  51FD               	movf	??_send_periodical_update& (0+255),w,b
  3368  011916  0D01               	mullw	1
  3369  011918  50F3               	movf	prodl,w,c
  3370  01191A  0101               	movlb	1	; () banked
  3371  01191C  275C               	addwf	_p_buffer& (0+255),f,b
  3372  01191E  50F4               	movf	prodh,w,c
  3373  011920  0101               	movlb	1	; () banked
  3374  011922  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3375                           
  3376                           ; BSR set to: 1
  3377                           ;main.c: 652: }
  3378                           ;main.c: 654: memcpy(m_var.label, FAILEDMSG_LABEL, 3);
  3379                           
  3380                           ; BSR set to: 1
  3381                           
  3382                           ; BSR set to: 1
  3383                           
  3384                           ; BSR set to: 1
  3385  011924  0EB7               	movlw	low _m_var
  3386  011926  0100               	movlb	0	; () banked
  3387  011928  6F81               	movwf	memcpy@d1& (0+255),b
  3388  01192A  0E01               	movlw	high _m_var
  3389  01192C  0100               	movlb	0	; () banked
  3390  01192E  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  3391  011930  0EE3               	movlw	low _FAILEDMSG_LABEL
  3392  011932  0100               	movlb	0	; () banked
  3393  011934  6F83               	movwf	memcpy@s1& (0+255),b
  3394  011936  0EFF               	movlw	high _FAILEDMSG_LABEL
  3395  011938  0100               	movlb	0	; () banked
  3396  01193A  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  3397  01193C  0E00               	movlw	0
  3398  01193E  0100               	movlb	0	; () banked
  3399  011940  6F86               	movwf	(memcpy@n+1)& (0+255),b
  3400  011942  0E03               	movlw	3
  3401  011944  6F85               	movwf	memcpy@n& (0+255),b
  3402  011946  ECDD  F0B2         	call	_memcpy	;wreg free
  3403                           
  3404                           ;main.c: 655: m_var.unit = 3;
  3405  01194A  0E03               	movlw	3
  3406  01194C  0101               	movlb	1	; () banked
  3407  01194E  6FBD               	movwf	(_m_var+6)& (0+255),b
  3408                           
  3409                           ; BSR set to: 1
  3410                           ;main.c: 656: float tmp2 = (float)(m_failed_messages*100)/(float)(m_failed_messages + m_
      +                          sent_messages);
  3411  011950  C142  F081         	movff	_m_failed_messages,___lmul@multiplier
  3412  011954  C143  F082         	movff	_m_failed_messages+1,___lmul@multiplier+1
  3413  011958  C144  F083         	movff	_m_failed_messages+2,___lmul@multiplier+2
  3414  01195C  C145  F084         	movff	_m_failed_messages+3,___lmul@multiplier+3
  3415  011960  0E64               	movlw	100
  3416  011962  0100               	movlb	0	; () banked
  3417  011964  6F85               	movwf	___lmul@multiplicand& (0+255),b
  3418  011966  0E00               	movlw	0
  3419  011968  6F86               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3420  01196A  0E00               	movlw	0
  3421  01196C  6F87               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3422  01196E  0E00               	movlw	0
  3423  011970  6F88               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3424  011972  EC9A  F0B1         	call	___lmul	;wreg free
  3425  011976  C081  F08D         	movff	?___lmul,___lltoft@c
  3426  01197A  C082  F08E         	movff	?___lmul+1,___lltoft@c+1
  3427  01197E  C083  F08F         	movff	?___lmul+2,___lltoft@c+2
  3428  011982  C084  F090         	movff	?___lmul+3,___lltoft@c+3
  3429  011986  ECA8  F0B0         	call	___lltoft	;wreg free
  3430  01198A  C08D  F096         	movff	?___lltoft,___ftdiv@f1
  3431  01198E  C08E  F097         	movff	?___lltoft+1,___ftdiv@f1+1
  3432  011992  C08F  F098         	movff	?___lltoft+2,___ftdiv@f1+2
  3433  011996  0101               	movlb	1	; () banked
  3434  011998  5146               	movf	_m_sent_messages& (0+255),w,b
  3435  01199A  0101               	movlb	1	; () banked
  3436  01199C  2542               	addwf	_m_failed_messages& (0+255),w,b
  3437  01199E  0100               	movlb	0	; () banked
  3438  0119A0  6F8D               	movwf	___lltoft@c& (0+255),b
  3439  0119A2  0101               	movlb	1	; () banked
  3440  0119A4  5147               	movf	(_m_sent_messages+1)& (0+255),w,b
  3441  0119A6  0101               	movlb	1	; () banked
  3442  0119A8  2143               	addwfc	(_m_failed_messages+1)& (0+255),w,b
  3443  0119AA  0100               	movlb	0	; () banked
  3444  0119AC  6F8E               	movwf	(___lltoft@c+1)& (0+255),b
  3445  0119AE  0101               	movlb	1	; () banked
  3446  0119B0  5148               	movf	(_m_sent_messages+2)& (0+255),w,b
  3447  0119B2  0101               	movlb	1	; () banked
  3448  0119B4  2144               	addwfc	(_m_failed_messages+2)& (0+255),w,b
  3449  0119B6  0100               	movlb	0	; () banked
  3450  0119B8  6F8F               	movwf	(___lltoft@c+2)& (0+255),b
  3451  0119BA  0101               	movlb	1	; () banked
  3452  0119BC  5149               	movf	(_m_sent_messages+3)& (0+255),w,b
  3453  0119BE  0101               	movlb	1	; () banked
  3454  0119C0  2145               	addwfc	(_m_failed_messages+3)& (0+255),w,b
  3455  0119C2  0100               	movlb	0	; () banked
  3456  0119C4  6F90               	movwf	(___lltoft@c+3)& (0+255),b
  3457  0119C6  ECA8  F0B0         	call	___lltoft	;wreg free
  3458  0119CA  C08D  F099         	movff	?___lltoft,___ftdiv@f2
  3459  0119CE  C08E  F09A         	movff	?___lltoft+1,___ftdiv@f2+1
  3460  0119D2  C08F  F09B         	movff	?___lltoft+2,___ftdiv@f2+2
  3461  0119D6  EC12  F0A4         	call	___ftdiv	;wreg free
  3462  0119DA  C096  F3D4         	movff	?___ftdiv,send_periodical_update@tmp2
  3463  0119DE  C097  F3D5         	movff	?___ftdiv+1,send_periodical_update@tmp2+1
  3464  0119E2  C098  F3D6         	movff	?___ftdiv+2,send_periodical_update@tmp2+2
  3465                           
  3466                           ;main.c: 657: m_var.value_byte1 = (uint8_t)floor(tmp2);
  3467  0119E6  C3D4  F0BE         	movff	send_periodical_update@tmp2,floor@x
  3468  0119EA  C3D5  F0BF         	movff	send_periodical_update@tmp2+1,floor@x+1
  3469  0119EE  C3D6  F0C0         	movff	send_periodical_update@tmp2+2,floor@x+2
  3470  0119F2  EC62  F0AA         	call	_floor	;wreg free
  3471  0119F6  C0BE  F3D7         	movff	?_floor,_send_periodical_update$5080
  3472  0119FA  C0BF  F3D8         	movff	?_floor+1,_send_periodical_update$5080+1
  3473  0119FE  C0C0  F3D9         	movff	?_floor+2,_send_periodical_update$5080+2
  3474                           
  3475                           ;main.c: 657: m_var.value_byte1 = (uint8_t)floor(tmp2);
  3476  011A02  C3D7  F0A5         	movff	_send_periodical_update$5080,___fttol@f1
  3477  011A06  C3D8  F0A6         	movff	_send_periodical_update$5080+1,___fttol@f1+1
  3478  011A0A  C3D9  F0A7         	movff	_send_periodical_update$5080+2,___fttol@f1+2
  3479  011A0E  ECB8  F0A4         	call	___fttol	;wreg free
  3480  011A12  0100               	movlb	0	; () banked
  3481  011A14  51A5               	movf	?___fttol& (0+255),w,b
  3482  011A16  0101               	movlb	1	; () banked
  3483  011A18  6FBB               	movwf	(_m_var+4)& (0+255),b
  3484                           
  3485                           ; BSR set to: 1
  3486                           ;main.c: 658: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3487  011A1A  C3D4  F0BE         	movff	send_periodical_update@tmp2,floor@x
  3488  011A1E  C3D5  F0BF         	movff	send_periodical_update@tmp2+1,floor@x+1
  3489  011A22  C3D6  F0C0         	movff	send_periodical_update@tmp2+2,floor@x+2
  3490  011A26  EC62  F0AA         	call	_floor	;wreg free
  3491  011A2A  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  3492  011A2E  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  3493  011A32  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  3494  011A36  ECCA  F0B4         	call	___ftneg	;wreg free
  3495  011A3A  C0C6  F3DA         	movff	?___ftneg,_send_periodical_update$5081
  3496  011A3E  C0C7  F3DB         	movff	?___ftneg+1,_send_periodical_update$5081+1
  3497  011A42  C0C8  F3DC         	movff	?___ftneg+2,_send_periodical_update$5081+2
  3498                           
  3499                           ;main.c: 658: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3500  011A46  0E00               	movlw	0
  3501  011A48  0100               	movlb	0	; () banked
  3502  011A4A  6FCC               	movwf	___ftmul@f2& (0+255),b
  3503  011A4C  0EC8               	movlw	200
  3504  011A4E  0100               	movlb	0	; () banked
  3505  011A50  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  3506  011A52  0E42               	movlw	66
  3507  011A54  0100               	movlb	0	; () banked
  3508  011A56  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  3509  011A58  C3D4  F08C         	movff	send_periodical_update@tmp2,___ftadd@f2
  3510  011A5C  C3D5  F08D         	movff	send_periodical_update@tmp2+1,___ftadd@f2+1
  3511  011A60  C3D6  F08E         	movff	send_periodical_update@tmp2+2,___ftadd@f2+2
  3512  011A64  C3DA  F089         	movff	_send_periodical_update$5081,___ftadd@f1
  3513  011A68  C3DB  F08A         	movff	_send_periodical_update$5081+1,___ftadd@f1+1
  3514  011A6C  C3DC  F08B         	movff	_send_periodical_update$5081+2,___ftadd@f1+2
  3515  011A70  ECB9  F099         	call	___ftadd	;wreg free
  3516  011A74  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  3517  011A78  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  3518  011A7C  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  3519  011A80  EC11  F0A2         	call	___ftmul	;wreg free
  3520  011A84  C0C9  F3DD         	movff	?___ftmul,_send_periodical_update$5082
  3521  011A88  C0CA  F3DE         	movff	?___ftmul+1,_send_periodical_update$5082+1
  3522  011A8C  C0CB  F3DF         	movff	?___ftmul+2,_send_periodical_update$5082+2
  3523                           
  3524                           ;main.c: 658: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3525  011A90  C3DD  F0BE         	movff	_send_periodical_update$5082,floor@x
  3526  011A94  C3DE  F0BF         	movff	_send_periodical_update$5082+1,floor@x+1
  3527  011A98  C3DF  F0C0         	movff	_send_periodical_update$5082+2,floor@x+2
  3528  011A9C  EC62  F0AA         	call	_floor	;wreg free
  3529  011AA0  C0BE  F3E0         	movff	?_floor,_send_periodical_update$5083
  3530  011AA4  C0BF  F3E1         	movff	?_floor+1,_send_periodical_update$5083+1
  3531  011AA8  C0C0  F3E2         	movff	?_floor+2,_send_periodical_update$5083+2
  3532                           
  3533                           ;main.c: 658: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3534  011AAC  C3E0  F0A5         	movff	_send_periodical_update$5083,___fttol@f1
  3535  011AB0  C3E1  F0A6         	movff	_send_periodical_update$5083+1,___fttol@f1+1
  3536  011AB4  C3E2  F0A7         	movff	_send_periodical_update$5083+2,___fttol@f1+2
  3537  011AB8  ECB8  F0A4         	call	___fttol	;wreg free
  3538  011ABC  0100               	movlb	0	; () banked
  3539  011ABE  51A5               	movf	?___fttol& (0+255),w,b
  3540  011AC0  0101               	movlb	1	; () banked
  3541  011AC2  6FBC               	movwf	(_m_var+5)& (0+255),b
  3542                           
  3543                           ; BSR set to: 1
  3544                           ;main.c: 659: m_var.writable = 0;
  3545  011AC4  0E00               	movlw	0
  3546  011AC6  0101               	movlb	1	; () banked
  3547  011AC8  6FBE               	movwf	(_m_var+7)& (0+255),b
  3548                           
  3549                           ; BSR set to: 1
  3550                           ;main.c: 660: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3551  011ACA  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3552  011ACE  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3553  011AD2  EE21  F0B7         	lfsr	2,_m_var
  3554  011AD6  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  3555  011ADA  0E08               	movlw	8
  3556  011ADC                     u17011:
  3557  011ADC  CFDB FFEB          	movff	plusw2,plusw0
  3558  011AE0  06E8               	decf	wreg,f,c
  3559  011AE2  E2FC               	bc	u17011
  3560  011AE4  EC00  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3561  011AE8  0101               	movlb	1	; () banked
  3562  011AEA  6FFD               	movwf	??_send_periodical_update& (0+255),b
  3563  011AEC  0101               	movlb	1	; () banked
  3564  011AEE  51FD               	movf	??_send_periodical_update& (0+255),w,b
  3565  011AF0  0D01               	mullw	1
  3566  011AF2  50F3               	movf	prodl,w,c
  3567  011AF4  0101               	movlb	1	; () banked
  3568  011AF6  275C               	addwf	_p_buffer& (0+255),f,b
  3569  011AF8  50F4               	movf	prodh,w,c
  3570  011AFA  0101               	movlb	1	; () banked
  3571  011AFC  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3572                           
  3573                           ; BSR set to: 1
  3574                           ;main.c: 662: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  3575  011AFE  0E97               	movlw	low _m_buffer
  3576  011B00  0101               	movlb	1	; () banked
  3577  011B02  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  3578  011B04  0E01               	movlw	high _m_buffer
  3579  011B06  0101               	movlb	1	; () banked
  3580  011B08  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  3581  011B0A  0E97               	movlw	_m_buffer& (0+255)
  3582  011B0C  0800               	sublw	0
  3583  011B0E  0101               	movlb	1	; () banked
  3584  011B10  255C               	addwf	_p_buffer& (0+255),w,b
  3585  011B12  0101               	movlb	1	; () banked
  3586  011B14  6FF6               	movwf	do_UPDATE@size& (0+255),b
  3587  011B16  0E01               	movlw	1
  3588  011B18  0101               	movlb	1	; () banked
  3589  011B1A  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  3590  011B1C  EC9C  F0A0         	call	_do_UPDATE	;wreg free
  3591  011B20  0012               	return	
  3592  011B22                     __end_of_send_periodical_update:
  3593                           	opt stack 0
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           prodh	equ	0xFF4
  3599                           prodl	equ	0xFF3
  3600                           postinc0	equ	0xFEE
  3601                           plusw0	equ	0xFEB
  3602                           wreg	equ	0xFE8
  3603                           indf2	equ	0xFDF
  3604                           postinc2	equ	0xFDE
  3605                           plusw2	equ	0xFDB
  3606                           fsr2h	equ	0xFDA
  3607                           fsr2l	equ	0xFD9
  3608                           status	equ	0xFD8
  3609                           
  3610 ;; *************** function _send_initial_update *****************
  3611 ;; Defined at:
  3612 ;;		line 466 in file "src/main.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  tmp2            3    0[BANK3 ] float 
  3617 ;;  tmp             2   15[BANK3 ] unsigned int 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      unsigned char 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3628 ;;      Locals:         0       0       0       0      17       0       0       0       0       0       0       0       
      +0       0       0       0
  3629 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3630 ;;      Totals:         0       0       1       0      17       0       0       0       0       0       0       0       
      +0       0       0       0
  3631 ;;Total ram usage:       18 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:   16
  3634 ;; This function calls:
  3635 ;;		___ftadd
  3636 ;;		___ftdiv
  3637 ;;		___ftmul
  3638 ;;		___ftneg
  3639 ;;		___fttol
  3640 ;;		___lldiv
  3641 ;;		___lltoft
  3642 ;;		___lmul
  3643 ;;		_do_UPDATE
  3644 ;;		_encode_ufixed16_variable
  3645 ;;		_encode_uint16_variable
  3646 ;;		_encode_uint8_variable
  3647 ;;		_floor
  3648 ;;		_memcpy
  3649 ;; This function is called by:
  3650 ;;		_main
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text2
  3655  010BF2                     __ptext2:
  3656                           	opt stack 0
  3657  010BF2                     _send_initial_update:
  3658                           	opt stack 14
  3659                           
  3660                           ;main.c: 468: uint16_t tmp;
  3661                           ;main.c: 470: p_buffer = m_buffer;
  3662                           
  3663                           ;incstack = 0
  3664  010BF2  0E97               	movlw	low _m_buffer
  3665  010BF4  0101               	movlb	1	; () banked
  3666  010BF6  6F5C               	movwf	_p_buffer& (0+255),b
  3667  010BF8  0E01               	movlw	high _m_buffer
  3668  010BFA  0101               	movlb	1	; () banked
  3669  010BFC  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  3670                           
  3671                           ; BSR set to: 1
  3672                           ;main.c: 473: memcpy(m_var.label, BATTERY_VOLTAGE_LABEL, 3);
  3673  010BFE  0EB7               	movlw	low _m_var
  3674  010C00  0100               	movlb	0	; () banked
  3675  010C02  6F81               	movwf	memcpy@d1& (0+255),b
  3676  010C04  0E01               	movlw	high _m_var
  3677  010C06  0100               	movlb	0	; () banked
  3678  010C08  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  3679  010C0A  0EDF               	movlw	low _BATTERY_VOLTAGE_LABEL
  3680  010C0C  0100               	movlb	0	; () banked
  3681  010C0E  6F83               	movwf	memcpy@s1& (0+255),b
  3682  010C10  0EFF               	movlw	high _BATTERY_VOLTAGE_LABEL
  3683  010C12  0100               	movlb	0	; () banked
  3684  010C14  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  3685  010C16  0E00               	movlw	0
  3686  010C18  0100               	movlb	0	; () banked
  3687  010C1A  6F86               	movwf	(memcpy@n+1)& (0+255),b
  3688  010C1C  0E03               	movlw	3
  3689  010C1E  6F85               	movwf	memcpy@n& (0+255),b
  3690  010C20  ECDD  F0B2         	call	_memcpy	;wreg free
  3691                           
  3692                           ;main.c: 474: m_var.unit = 2;
  3693  010C24  0E02               	movlw	2
  3694  010C26  0101               	movlb	1	; () banked
  3695  010C28  6FBD               	movwf	(_m_var+6)& (0+255),b
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;main.c: 475: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  3699  010C2A  C152  F0BE         	movff	_m_battery_voltage,floor@x
  3700  010C2E  C153  F0BF         	movff	_m_battery_voltage+1,floor@x+1
  3701  010C32  C154  F0C0         	movff	_m_battery_voltage+2,floor@x+2
  3702  010C36  EC62  F0AA         	call	_floor	;wreg free
  3703  010C3A  C0BE  F3D7         	movff	?_floor,_send_initial_update$5076
  3704  010C3E  C0BF  F3D8         	movff	?_floor+1,_send_initial_update$5076+1
  3705  010C42  C0C0  F3D9         	movff	?_floor+2,_send_initial_update$5076+2
  3706                           
  3707                           ;main.c: 475: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  3708  010C46  C3D7  F0A5         	movff	_send_initial_update$5076,___fttol@f1
  3709  010C4A  C3D8  F0A6         	movff	_send_initial_update$5076+1,___fttol@f1+1
  3710  010C4E  C3D9  F0A7         	movff	_send_initial_update$5076+2,___fttol@f1+2
  3711  010C52  ECB8  F0A4         	call	___fttol	;wreg free
  3712  010C56  0100               	movlb	0	; () banked
  3713  010C58  51A5               	movf	?___fttol& (0+255),w,b
  3714  010C5A  0101               	movlb	1	; () banked
  3715  010C5C  6FBB               	movwf	(_m_var+4)& (0+255),b
  3716                           
  3717                           ; BSR set to: 1
  3718                           ;main.c: 476: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3719  010C5E  C152  F0BE         	movff	_m_battery_voltage,floor@x
  3720  010C62  C153  F0BF         	movff	_m_battery_voltage+1,floor@x+1
  3721  010C66  C154  F0C0         	movff	_m_battery_voltage+2,floor@x+2
  3722  010C6A  EC62  F0AA         	call	_floor	;wreg free
  3723  010C6E  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  3724  010C72  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  3725  010C76  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  3726  010C7A  ECCA  F0B4         	call	___ftneg	;wreg free
  3727  010C7E  C0C6  F3DA         	movff	?___ftneg,_send_initial_update$5077
  3728  010C82  C0C7  F3DB         	movff	?___ftneg+1,_send_initial_update$5077+1
  3729  010C86  C0C8  F3DC         	movff	?___ftneg+2,_send_initial_update$5077+2
  3730                           
  3731                           ;main.c: 476: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3732  010C8A  0E00               	movlw	0
  3733  010C8C  0100               	movlb	0	; () banked
  3734  010C8E  6FCC               	movwf	___ftmul@f2& (0+255),b
  3735  010C90  0EC8               	movlw	200
  3736  010C92  0100               	movlb	0	; () banked
  3737  010C94  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  3738  010C96  0E42               	movlw	66
  3739  010C98  0100               	movlb	0	; () banked
  3740  010C9A  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  3741  010C9C  C152  F08C         	movff	_m_battery_voltage,___ftadd@f2
  3742  010CA0  C153  F08D         	movff	_m_battery_voltage+1,___ftadd@f2+1
  3743  010CA4  C154  F08E         	movff	_m_battery_voltage+2,___ftadd@f2+2
  3744  010CA8  C3DA  F089         	movff	_send_initial_update$5077,___ftadd@f1
  3745  010CAC  C3DB  F08A         	movff	_send_initial_update$5077+1,___ftadd@f1+1
  3746  010CB0  C3DC  F08B         	movff	_send_initial_update$5077+2,___ftadd@f1+2
  3747  010CB4  ECB9  F099         	call	___ftadd	;wreg free
  3748  010CB8  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  3749  010CBC  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  3750  010CC0  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  3751  010CC4  EC11  F0A2         	call	___ftmul	;wreg free
  3752  010CC8  C0C9  F3DD         	movff	?___ftmul,_send_initial_update$5078
  3753  010CCC  C0CA  F3DE         	movff	?___ftmul+1,_send_initial_update$5078+1
  3754  010CD0  C0CB  F3DF         	movff	?___ftmul+2,_send_initial_update$5078+2
  3755                           
  3756                           ;main.c: 476: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3757  010CD4  C3DD  F0BE         	movff	_send_initial_update$5078,floor@x
  3758  010CD8  C3DE  F0BF         	movff	_send_initial_update$5078+1,floor@x+1
  3759  010CDC  C3DF  F0C0         	movff	_send_initial_update$5078+2,floor@x+2
  3760  010CE0  EC62  F0AA         	call	_floor	;wreg free
  3761  010CE4  C0BE  F3E0         	movff	?_floor,_send_initial_update$5079
  3762  010CE8  C0BF  F3E1         	movff	?_floor+1,_send_initial_update$5079+1
  3763  010CEC  C0C0  F3E2         	movff	?_floor+2,_send_initial_update$5079+2
  3764                           
  3765                           ;main.c: 476: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3766  010CF0  C3E0  F0A5         	movff	_send_initial_update$5079,___fttol@f1
  3767  010CF4  C3E1  F0A6         	movff	_send_initial_update$5079+1,___fttol@f1+1
  3768  010CF8  C3E2  F0A7         	movff	_send_initial_update$5079+2,___fttol@f1+2
  3769  010CFC  ECB8  F0A4         	call	___fttol	;wreg free
  3770  010D00  0100               	movlb	0	; () banked
  3771  010D02  51A5               	movf	?___fttol& (0+255),w,b
  3772  010D04  0101               	movlb	1	; () banked
  3773  010D06  6FBC               	movwf	(_m_var+5)& (0+255),b
  3774                           
  3775                           ; BSR set to: 1
  3776                           ;main.c: 477: m_var.writable = 0;
  3777  010D08  0E00               	movlw	0
  3778  010D0A  0101               	movlb	1	; () banked
  3779  010D0C  6FBE               	movwf	(_m_var+7)& (0+255),b
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;main.c: 478: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3783  010D0E  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3784  010D12  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3785  010D16  EE21  F0B7         	lfsr	2,_m_var
  3786  010D1A  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  3787  010D1E  0E08               	movlw	8
  3788  010D20                     u16611:
  3789  010D20  CFDB FFEB          	movff	plusw2,plusw0
  3790  010D24  06E8               	decf	wreg,f,c
  3791  010D26  E2FC               	bc	u16611
  3792  010D28  EC00  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3793  010D2C  0101               	movlb	1	; () banked
  3794  010D2E  6FFD               	movwf	??_send_initial_update& (0+255),b
  3795  010D30  0101               	movlb	1	; () banked
  3796  010D32  51FD               	movf	??_send_initial_update& (0+255),w,b
  3797  010D34  0D01               	mullw	1
  3798  010D36  50F3               	movf	prodl,w,c
  3799  010D38  0101               	movlb	1	; () banked
  3800  010D3A  275C               	addwf	_p_buffer& (0+255),f,b
  3801  010D3C  50F4               	movf	prodh,w,c
  3802  010D3E  0101               	movlb	1	; () banked
  3803  010D40  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3804                           
  3805                           ; BSR set to: 1
  3806                           ;main.c: 480: memcpy(m_var.label, LIGHT_LEVEL_LABEL, 3);
  3807  010D42  0EB7               	movlw	low _m_var
  3808  010D44  0100               	movlb	0	; () banked
  3809  010D46  6F81               	movwf	memcpy@d1& (0+255),b
  3810  010D48  0E01               	movlw	high _m_var
  3811  010D4A  0100               	movlb	0	; () banked
  3812  010D4C  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  3813  010D4E  0EE7               	movlw	low _LIGHT_LEVEL_LABEL
  3814  010D50  0100               	movlb	0	; () banked
  3815  010D52  6F83               	movwf	memcpy@s1& (0+255),b
  3816  010D54  0EFF               	movlw	high _LIGHT_LEVEL_LABEL
  3817  010D56  0100               	movlb	0	; () banked
  3818  010D58  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  3819  010D5A  0E00               	movlw	0
  3820  010D5C  0100               	movlb	0	; () banked
  3821  010D5E  6F86               	movwf	(memcpy@n+1)& (0+255),b
  3822  010D60  0E03               	movlw	3
  3823  010D62  6F85               	movwf	memcpy@n& (0+255),b
  3824  010D64  ECDD  F0B2         	call	_memcpy	;wreg free
  3825                           
  3826                           ;main.c: 481: m_var.unit = 3;
  3827  010D68  0E03               	movlw	3
  3828  010D6A  0101               	movlb	1	; () banked
  3829  010D6C  6FBD               	movwf	(_m_var+6)& (0+255),b
  3830                           
  3831                           ; BSR set to: 1
  3832                           ;main.c: 482: m_var.value_byte1 = m_light_level;
  3833  010D6E  C168  F1BB         	movff	_m_light_level,_m_var+4
  3834                           
  3835                           ; BSR set to: 1
  3836                           ;main.c: 483: m_var.writable = 0;
  3837  010D72  0E00               	movlw	0
  3838  010D74  0101               	movlb	1	; () banked
  3839  010D76  6FBE               	movwf	(_m_var+7)& (0+255),b
  3840                           
  3841                           ; BSR set to: 1
  3842                           ;main.c: 484: p_buffer += encode_uint8_variable(p_buffer, m_var);
  3843  010D78  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  3844  010D7C  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  3845  010D80  EE21  F0B7         	lfsr	2,_m_var
  3846  010D84  EE00  F083         	lfsr	0,encode_uint8_variable@var
  3847  010D88  0E08               	movlw	8
  3848  010D8A                     u16621:
  3849  010D8A  CFDB FFEB          	movff	plusw2,plusw0
  3850  010D8E  06E8               	decf	wreg,f,c
  3851  010D90  E2FC               	bc	u16621
  3852  010D92  EC23  F0B0         	call	_encode_uint8_variable	;wreg free
  3853  010D96  0101               	movlb	1	; () banked
  3854  010D98  6FFD               	movwf	??_send_initial_update& (0+255),b
  3855  010D9A  0101               	movlb	1	; () banked
  3856  010D9C  51FD               	movf	??_send_initial_update& (0+255),w,b
  3857  010D9E  0D01               	mullw	1
  3858  010DA0  50F3               	movf	prodl,w,c
  3859  010DA2  0101               	movlb	1	; () banked
  3860  010DA4  275C               	addwf	_p_buffer& (0+255),f,b
  3861  010DA6  50F4               	movf	prodh,w,c
  3862  010DA8  0101               	movlb	1	; () banked
  3863  010DAA  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3864                           
  3865                           ; BSR set to: 1
  3866                           ;main.c: 486: memcpy(m_var.label, TEMPERATURE_LABEL, 3);
  3867  010DAC  0EB7               	movlw	low _m_var
  3868  010DAE  0100               	movlb	0	; () banked
  3869  010DB0  6F81               	movwf	memcpy@d1& (0+255),b
  3870  010DB2  0E01               	movlw	high _m_var
  3871  010DB4  0100               	movlb	0	; () banked
  3872  010DB6  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  3873  010DB8  0EEF               	movlw	low _TEMPERATURE_LABEL
  3874  010DBA  0100               	movlb	0	; () banked
  3875  010DBC  6F83               	movwf	memcpy@s1& (0+255),b
  3876  010DBE  0EFF               	movlw	high _TEMPERATURE_LABEL
  3877  010DC0  0100               	movlb	0	; () banked
  3878  010DC2  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  3879  010DC4  0E00               	movlw	0
  3880  010DC6  0100               	movlb	0	; () banked
  3881  010DC8  6F86               	movwf	(memcpy@n+1)& (0+255),b
  3882  010DCA  0E03               	movlw	3
  3883  010DCC  6F85               	movwf	memcpy@n& (0+255),b
  3884  010DCE  ECDD  F0B2         	call	_memcpy	;wreg free
  3885                           
  3886                           ;main.c: 487: m_var.unit = 1;
  3887  010DD2  0E01               	movlw	1
  3888  010DD4  0101               	movlb	1	; () banked
  3889  010DD6  6FBD               	movwf	(_m_var+6)& (0+255),b
  3890                           
  3891                           ; BSR set to: 1
  3892                           ;main.c: 488: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3893  010DD8  C155  F0BE         	movff	_m_temperature,floor@x
  3894  010DDC  C156  F0BF         	movff	_m_temperature+1,floor@x+1
  3895  010DE0  C157  F0C0         	movff	_m_temperature+2,floor@x+2
  3896  010DE4  EC62  F0AA         	call	_floor	;wreg free
  3897  010DE8  C0BE  F3D7         	movff	?_floor,_send_initial_update$5076
  3898  010DEC  C0BF  F3D8         	movff	?_floor+1,_send_initial_update$5076+1
  3899  010DF0  C0C0  F3D9         	movff	?_floor+2,_send_initial_update$5076+2
  3900                           
  3901                           ;main.c: 488: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3902  010DF4  C3D7  F0A5         	movff	_send_initial_update$5076,___fttol@f1
  3903  010DF8  C3D8  F0A6         	movff	_send_initial_update$5076+1,___fttol@f1+1
  3904  010DFC  C3D9  F0A7         	movff	_send_initial_update$5076+2,___fttol@f1+2
  3905  010E00  ECB8  F0A4         	call	___fttol	;wreg free
  3906  010E04  0100               	movlb	0	; () banked
  3907  010E06  51A5               	movf	?___fttol& (0+255),w,b
  3908  010E08  0101               	movlb	1	; () banked
  3909  010E0A  6FBB               	movwf	(_m_var+4)& (0+255),b
  3910                           
  3911                           ; BSR set to: 1
  3912                           ;main.c: 489: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3913  010E0C  C155  F0BE         	movff	_m_temperature,floor@x
  3914  010E10  C156  F0BF         	movff	_m_temperature+1,floor@x+1
  3915  010E14  C157  F0C0         	movff	_m_temperature+2,floor@x+2
  3916  010E18  EC62  F0AA         	call	_floor	;wreg free
  3917  010E1C  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  3918  010E20  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  3919  010E24  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  3920  010E28  ECCA  F0B4         	call	___ftneg	;wreg free
  3921  010E2C  C0C6  F3DA         	movff	?___ftneg,_send_initial_update$5077
  3922  010E30  C0C7  F3DB         	movff	?___ftneg+1,_send_initial_update$5077+1
  3923  010E34  C0C8  F3DC         	movff	?___ftneg+2,_send_initial_update$5077+2
  3924                           
  3925                           ;main.c: 489: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3926  010E38  0E00               	movlw	0
  3927  010E3A  0100               	movlb	0	; () banked
  3928  010E3C  6FCC               	movwf	___ftmul@f2& (0+255),b
  3929  010E3E  0EC8               	movlw	200
  3930  010E40  0100               	movlb	0	; () banked
  3931  010E42  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  3932  010E44  0E42               	movlw	66
  3933  010E46  0100               	movlb	0	; () banked
  3934  010E48  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  3935  010E4A  C155  F08C         	movff	_m_temperature,___ftadd@f2
  3936  010E4E  C156  F08D         	movff	_m_temperature+1,___ftadd@f2+1
  3937  010E52  C157  F08E         	movff	_m_temperature+2,___ftadd@f2+2
  3938  010E56  C3DA  F089         	movff	_send_initial_update$5077,___ftadd@f1
  3939  010E5A  C3DB  F08A         	movff	_send_initial_update$5077+1,___ftadd@f1+1
  3940  010E5E  C3DC  F08B         	movff	_send_initial_update$5077+2,___ftadd@f1+2
  3941  010E62  ECB9  F099         	call	___ftadd	;wreg free
  3942  010E66  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  3943  010E6A  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  3944  010E6E  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  3945  010E72  EC11  F0A2         	call	___ftmul	;wreg free
  3946  010E76  C0C9  F3DD         	movff	?___ftmul,_send_initial_update$5078
  3947  010E7A  C0CA  F3DE         	movff	?___ftmul+1,_send_initial_update$5078+1
  3948  010E7E  C0CB  F3DF         	movff	?___ftmul+2,_send_initial_update$5078+2
  3949                           
  3950                           ;main.c: 489: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3951  010E82  C3DD  F0BE         	movff	_send_initial_update$5078,floor@x
  3952  010E86  C3DE  F0BF         	movff	_send_initial_update$5078+1,floor@x+1
  3953  010E8A  C3DF  F0C0         	movff	_send_initial_update$5078+2,floor@x+2
  3954  010E8E  EC62  F0AA         	call	_floor	;wreg free
  3955  010E92  C0BE  F3E0         	movff	?_floor,_send_initial_update$5079
  3956  010E96  C0BF  F3E1         	movff	?_floor+1,_send_initial_update$5079+1
  3957  010E9A  C0C0  F3E2         	movff	?_floor+2,_send_initial_update$5079+2
  3958                           
  3959                           ;main.c: 489: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3960  010E9E  C3E0  F0A5         	movff	_send_initial_update$5079,___fttol@f1
  3961  010EA2  C3E1  F0A6         	movff	_send_initial_update$5079+1,___fttol@f1+1
  3962  010EA6  C3E2  F0A7         	movff	_send_initial_update$5079+2,___fttol@f1+2
  3963  010EAA  ECB8  F0A4         	call	___fttol	;wreg free
  3964  010EAE  0100               	movlb	0	; () banked
  3965  010EB0  51A5               	movf	?___fttol& (0+255),w,b
  3966  010EB2  0101               	movlb	1	; () banked
  3967  010EB4  6FBC               	movwf	(_m_var+5)& (0+255),b
  3968                           
  3969                           ; BSR set to: 1
  3970                           ;main.c: 490: m_var.writable = 0;
  3971  010EB6  0E00               	movlw	0
  3972  010EB8  0101               	movlb	1	; () banked
  3973  010EBA  6FBE               	movwf	(_m_var+7)& (0+255),b
  3974                           
  3975                           ; BSR set to: 1
  3976                           ;main.c: 491: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3977  010EBC  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3978  010EC0  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3979  010EC4  EE21  F0B7         	lfsr	2,_m_var
  3980  010EC8  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  3981  010ECC  0E08               	movlw	8
  3982  010ECE                     u16631:
  3983  010ECE  CFDB FFEB          	movff	plusw2,plusw0
  3984  010ED2  06E8               	decf	wreg,f,c
  3985  010ED4  E2FC               	bc	u16631
  3986  010ED6  EC00  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3987  010EDA  0101               	movlb	1	; () banked
  3988  010EDC  6FFD               	movwf	??_send_initial_update& (0+255),b
  3989  010EDE  0101               	movlb	1	; () banked
  3990  010EE0  51FD               	movf	??_send_initial_update& (0+255),w,b
  3991  010EE2  0D01               	mullw	1
  3992  010EE4  50F3               	movf	prodl,w,c
  3993  010EE6  0101               	movlb	1	; () banked
  3994  010EE8  275C               	addwf	_p_buffer& (0+255),f,b
  3995  010EEA  50F4               	movf	prodh,w,c
  3996  010EEC  0101               	movlb	1	; () banked
  3997  010EEE  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;main.c: 493: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  4001  010EF0  0E97               	movlw	low _m_buffer
  4002  010EF2  0101               	movlb	1	; () banked
  4003  010EF4  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  4004  010EF6  0E01               	movlw	high _m_buffer
  4005  010EF8  0101               	movlb	1	; () banked
  4006  010EFA  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4007  010EFC  0E97               	movlw	_m_buffer& (0+255)
  4008  010EFE  0800               	sublw	0
  4009  010F00  0101               	movlb	1	; () banked
  4010  010F02  255C               	addwf	_p_buffer& (0+255),w,b
  4011  010F04  0101               	movlb	1	; () banked
  4012  010F06  6FF6               	movwf	do_UPDATE@size& (0+255),b
  4013  010F08  0E00               	movlw	0
  4014  010F0A  0101               	movlb	1	; () banked
  4015  010F0C  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  4016  010F0E  EC9C  F0A0         	call	_do_UPDATE	;wreg free
  4017  010F12  0900               	iorlw	0
  4018  010F14  A4D8               	btfss	status,2,c
  4019  010F16  D002               	goto	l14146
  4020                           
  4021                           ;main.c: 494: return 0;
  4022  010F18  0E00               	movlw	0
  4023  010F1A  0012               	return	
  4024  010F1C                     l14146:
  4025                           
  4026                           ;main.c: 497: p_buffer = m_buffer;
  4027  010F1C  0E97               	movlw	low _m_buffer
  4028  010F1E  0101               	movlb	1	; () banked
  4029  010F20  6F5C               	movwf	_p_buffer& (0+255),b
  4030  010F22  0E01               	movlw	high _m_buffer
  4031  010F24  0101               	movlb	1	; () banked
  4032  010F26  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  4033                           
  4034                           ; BSR set to: 1
  4035                           ;main.c: 499: memcpy(m_var.label, POWER_LABEL, 3);
  4036  010F28  0EB7               	movlw	low _m_var
  4037  010F2A  0100               	movlb	0	; () banked
  4038  010F2C  6F81               	movwf	memcpy@d1& (0+255),b
  4039  010F2E  0E01               	movlw	high _m_var
  4040  010F30  0100               	movlb	0	; () banked
  4041  010F32  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  4042  010F34  0EEB               	movlw	low _POWER_LABEL
  4043  010F36  0100               	movlb	0	; () banked
  4044  010F38  6F83               	movwf	memcpy@s1& (0+255),b
  4045  010F3A  0EFF               	movlw	high _POWER_LABEL
  4046  010F3C  0100               	movlb	0	; () banked
  4047  010F3E  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  4048  010F40  0E00               	movlw	0
  4049  010F42  0100               	movlb	0	; () banked
  4050  010F44  6F86               	movwf	(memcpy@n+1)& (0+255),b
  4051  010F46  0E03               	movlw	3
  4052  010F48  6F85               	movwf	memcpy@n& (0+255),b
  4053  010F4A  ECDD  F0B2         	call	_memcpy	;wreg free
  4054                           
  4055                           ;main.c: 500: m_var.unit = 0;
  4056  010F4E  0E00               	movlw	0
  4057  010F50  0101               	movlb	1	; () banked
  4058  010F52  6FBD               	movwf	(_m_var+6)& (0+255),b
  4059                           
  4060                           ; BSR set to: 1
  4061                           ;main.c: 501: m_var.value_byte1 = m_power;
  4062  010F54  C169  F1BB         	movff	_m_power,_m_var+4
  4063                           
  4064                           ; BSR set to: 1
  4065                           ;main.c: 502: m_var.writable = 1;
  4066  010F58  0E01               	movlw	1
  4067  010F5A  0101               	movlb	1	; () banked
  4068  010F5C  6FBE               	movwf	(_m_var+7)& (0+255),b
  4069                           
  4070                           ; BSR set to: 1
  4071                           ;main.c: 503: p_buffer += encode_uint8_variable(p_buffer, m_var);
  4072  010F5E  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  4073  010F62  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  4074  010F66  EE21  F0B7         	lfsr	2,_m_var
  4075  010F6A  EE00  F083         	lfsr	0,encode_uint8_variable@var
  4076  010F6E  0E08               	movlw	8
  4077  010F70                     u16651:
  4078  010F70  CFDB FFEB          	movff	plusw2,plusw0
  4079  010F74  06E8               	decf	wreg,f,c
  4080  010F76  E2FC               	bc	u16651
  4081  010F78  EC23  F0B0         	call	_encode_uint8_variable	;wreg free
  4082  010F7C  0101               	movlb	1	; () banked
  4083  010F7E  6FFD               	movwf	??_send_initial_update& (0+255),b
  4084  010F80  0101               	movlb	1	; () banked
  4085  010F82  51FD               	movf	??_send_initial_update& (0+255),w,b
  4086  010F84  0D01               	mullw	1
  4087  010F86  50F3               	movf	prodl,w,c
  4088  010F88  0101               	movlb	1	; () banked
  4089  010F8A  275C               	addwf	_p_buffer& (0+255),f,b
  4090  010F8C  50F4               	movf	prodh,w,c
  4091  010F8E  0101               	movlb	1	; () banked
  4092  010F90  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  4093                           
  4094                           ; BSR set to: 1
  4095                           ;main.c: 505: memcpy(m_var.label, UPTIME_LABEL, 3);
  4096  010F92  0EB7               	movlw	low _m_var
  4097  010F94  0100               	movlb	0	; () banked
  4098  010F96  6F81               	movwf	memcpy@d1& (0+255),b
  4099  010F98  0E01               	movlw	high _m_var
  4100  010F9A  0100               	movlb	0	; () banked
  4101  010F9C  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  4102  010F9E  0EFB               	movlw	low _UPTIME_LABEL
  4103  010FA0  0100               	movlb	0	; () banked
  4104  010FA2  6F83               	movwf	memcpy@s1& (0+255),b
  4105  010FA4  0EFF               	movlw	high _UPTIME_LABEL
  4106  010FA6  0100               	movlb	0	; () banked
  4107  010FA8  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  4108  010FAA  0E00               	movlw	0
  4109  010FAC  0100               	movlb	0	; () banked
  4110  010FAE  6F86               	movwf	(memcpy@n+1)& (0+255),b
  4111  010FB0  0E03               	movlw	3
  4112  010FB2  6F85               	movwf	memcpy@n& (0+255),b
  4113  010FB4  ECDD  F0B2         	call	_memcpy	;wreg free
  4114                           
  4115                           ;main.c: 506: if (m_uptime_seconds < 60)
  4116  010FB8  0101               	movlb	1	; () banked
  4117  010FBA  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  4118  010FBC  0101               	movlb	1	; () banked
  4119  010FBE  114C               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  4120  010FC0  0101               	movlb	1	; () banked
  4121  010FC2  114B               	iorwf	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  4122  010FC4  E11D               	bnz	l14168
  4123  010FC6  0E3C               	movlw	60
  4124  010FC8  0101               	movlb	1	; () banked
  4125  010FCA  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  4126  010FCC  B0D8               	btfsc	status,0,c
  4127  010FCE  D018               	goto	l14168
  4128                           
  4129                           ; BSR set to: 1
  4130                           ;main.c: 507: {
  4131                           ;main.c: 508: m_var.unit = 5;
  4132  010FD0  0E05               	movlw	5
  4133  010FD2  0101               	movlb	1	; () banked
  4134  010FD4  6FBD               	movwf	(_m_var+6)& (0+255),b
  4135                           
  4136                           ; BSR set to: 1
  4137                           ;main.c: 509: m_var.value_byte1 = m_uptime_seconds;
  4138  010FD6  C14A  F1BB         	movff	_m_uptime_seconds,_m_var+4	;volatile
  4139                           
  4140                           ;main.c: 510: m_var.writable = 0;
  4141  010FDA  0E00               	movlw	0
  4142  010FDC  0101               	movlb	1	; () banked
  4143  010FDE  6FBE               	movwf	(_m_var+7)& (0+255),b
  4144                           
  4145                           ; BSR set to: 1
  4146                           ;main.c: 511: p_buffer += encode_uint8_variable(p_buffer, m_var);
  4147  010FE0  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  4148  010FE4  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  4149  010FE8  EE21  F0B7         	lfsr	2,_m_var
  4150  010FEC  EE00  F083         	lfsr	0,encode_uint8_variable@var
  4151  010FF0  0E08               	movlw	8
  4152  010FF2                     u16671:
  4153  010FF2  CFDB FFEB          	movff	plusw2,plusw0
  4154  010FF6  06E8               	decf	wreg,f,c
  4155  010FF8  E2FC               	bc	u16671
  4156  010FFA  EC23  F0B0         	call	_encode_uint8_variable	;wreg free
  4157  010FFE  D0AD               	goto	L6
  4158  011000                     l14168:
  4159                           
  4160                           ; BSR set to: 1
  4161                           ;main.c: 513: else if (m_uptime_seconds < 3600)
  4162  011000  0101               	movlb	1	; () banked
  4163  011002  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  4164  011004  0101               	movlb	1	; () banked
  4165  011006  114C               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  4166  011008  E135               	bnz	l14178
  4167  01100A  0E10               	movlw	16
  4168  01100C  0101               	movlb	1	; () banked
  4169  01100E  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  4170  011010  0E0E               	movlw	14
  4171  011012  0101               	movlb	1	; () banked
  4172  011014  594B               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  4173  011016  B0D8               	btfsc	status,0,c
  4174  011018  D02D               	goto	l14178
  4175                           
  4176                           ; BSR set to: 1
  4177                           ;main.c: 514: {
  4178                           ;main.c: 515: m_var.unit = 4;
  4179  01101A  0E04               	movlw	4
  4180  01101C  0101               	movlb	1	; () banked
  4181  01101E  6FBD               	movwf	(_m_var+6)& (0+255),b
  4182                           
  4183                           ; BSR set to: 1
  4184                           ;main.c: 516: m_var.value_byte1 = m_uptime_seconds / 60;
  4185  011020  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  4186  011024  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  4187  011028  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  4188  01102C  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  4189  011030  0E3C               	movlw	60
  4190  011032  0100               	movlb	0	; () banked
  4191  011034  6F85               	movwf	___lldiv@divisor& (0+255),b
  4192  011036  0E00               	movlw	0
  4193  011038  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  4194  01103A  0E00               	movlw	0
  4195  01103C  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  4196  01103E  0E00               	movlw	0
  4197  011040  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  4198  011042  EC53  F0AD         	call	___lldiv	;wreg free
  4199  011046  0100               	movlb	0	; () banked
  4200  011048  5181               	movf	?___lldiv& (0+255),w,b
  4201  01104A  0101               	movlb	1	; () banked
  4202  01104C  6FBB               	movwf	(_m_var+4)& (0+255),b
  4203                           
  4204                           ; BSR set to: 1
  4205                           ;main.c: 517: m_var.writable = 0;
  4206  01104E  0E00               	movlw	0
  4207  011050  0101               	movlb	1	; () banked
  4208  011052  6FBE               	movwf	(_m_var+7)& (0+255),b
  4209                           
  4210                           ; BSR set to: 1
  4211                           ;main.c: 518: p_buffer += encode_uint8_variable(p_buffer, m_var);
  4212  011054  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  4213  011058  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  4214  01105C  EE21  F0B7         	lfsr	2,_m_var
  4215  011060  EE00  F083         	lfsr	0,encode_uint8_variable@var
  4216  011064  0E08               	movlw	8
  4217  011066                     u16691:
  4218  011066  CFDB FFEB          	movff	plusw2,plusw0
  4219  01106A  06E8               	decf	wreg,f,c
  4220  01106C  E2FC               	bc	u16691
  4221  01106E  EC23  F0B0         	call	_encode_uint8_variable	;wreg free
  4222  011072  D073               	goto	L6
  4223  011074                     l14178:
  4224                           
  4225                           ; BSR set to: 1
  4226                           ;main.c: 520: else if (m_uptime_seconds < (86400))
  4227  011074  0101               	movlb	1	; () banked
  4228  011076  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  4229  011078  E13E               	bnz	l14192
  4230  01107A  0E80               	movlw	128
  4231  01107C  0101               	movlb	1	; () banked
  4232  01107E  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  4233  011080  0E51               	movlw	81
  4234  011082  0101               	movlb	1	; () banked
  4235  011084  594B               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  4236  011086  0E01               	movlw	1
  4237  011088  0101               	movlb	1	; () banked
  4238  01108A  594C               	subwfb	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  4239  01108C  B0D8               	btfsc	status,0,c
  4240  01108E  D033               	goto	l14192
  4241                           
  4242                           ; BSR set to: 1
  4243                           ;main.c: 521: {
  4244                           ;main.c: 522: m_var.unit = 6;
  4245  011090  0E06               	movlw	6
  4246  011092  0101               	movlb	1	; () banked
  4247  011094  6FBD               	movwf	(_m_var+6)& (0+255),b
  4248                           
  4249                           ; BSR set to: 1
  4250                           ;main.c: 523: tmp = m_uptime_seconds / 3600;
  4251  011096  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  4252  01109A  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  4253  01109E  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  4254  0110A2  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  4255  0110A6  0E10               	movlw	16
  4256  0110A8  0100               	movlb	0	; () banked
  4257  0110AA  6F85               	movwf	___lldiv@divisor& (0+255),b
  4258  0110AC  0E0E               	movlw	14
  4259  0110AE  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  4260  0110B0  0E00               	movlw	0
  4261  0110B2  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  4262  0110B4  0E00               	movlw	0
  4263  0110B6  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  4264  0110B8  EC53  F0AD         	call	___lldiv	;wreg free
  4265  0110BC  C081  F3E3         	movff	?___lldiv,send_initial_update@tmp
  4266  0110C0  C082  F3E4         	movff	?___lldiv+1,send_initial_update@tmp+1
  4267                           
  4268                           ;main.c: 524: m_var.value_byte1 = tmp / 256;
  4269  0110C4  0103               	movlb	3	; () banked
  4270  0110C6  51E4               	movf	(send_initial_update@tmp+1)& (0+255),w,b
  4271  0110C8  0101               	movlb	1	; () banked
  4272  0110CA  6FBB               	movwf	(_m_var+4)& (0+255),b
  4273                           
  4274                           ; BSR set to: 1
  4275                           ;main.c: 525: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  4276  0110CC  C3E3  F1BC         	movff	send_initial_update@tmp,_m_var+5
  4277                           
  4278                           ; BSR set to: 1
  4279                           ;main.c: 526: m_var.writable = 0;
  4280  0110D0  0E00               	movlw	0
  4281  0110D2  0101               	movlb	1	; () banked
  4282  0110D4  6FBE               	movwf	(_m_var+7)& (0+255),b
  4283                           
  4284                           ; BSR set to: 1
  4285                           ;main.c: 527: p_buffer += encode_uint16_variable(p_buffer, m_var);
  4286  0110D6  C15C  F081         	movff	_p_buffer,encode_uint16_variable@buffer
  4287  0110DA  C15D  F082         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  4288  0110DE  EE21  F0B7         	lfsr	2,_m_var
  4289  0110E2  EE00  F083         	lfsr	0,encode_uint16_variable@var
  4290  0110E6  0E08               	movlw	8
  4291  0110E8                     u16711:
  4292  0110E8  CFDB FFEB          	movff	plusw2,plusw0
  4293  0110EC  06E8               	decf	wreg,f,c
  4294  0110EE  E2FC               	bc	u16711
  4295  0110F0  ECB2  F0AE         	call	_encode_uint16_variable	;wreg free
  4296  0110F4  D032               	goto	L6
  4297  0110F6                     l14192:
  4298                           
  4299                           ; BSR set to: 1
  4300                           ;main.c: 529: else
  4301                           ;main.c: 530: {
  4302                           ;main.c: 531: m_var.unit = 0;
  4303  0110F6  0E00               	movlw	0
  4304  0110F8  0101               	movlb	1	; () banked
  4305  0110FA  6FBD               	movwf	(_m_var+6)& (0+255),b
  4306                           
  4307                           ; BSR set to: 1
  4308                           ;main.c: 532: tmp = m_uptime_seconds / 86400;
  4309  0110FC  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  4310  011100  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  4311  011104  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  4312  011108  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  4313  01110C  0E80               	movlw	128
  4314  01110E  0100               	movlb	0	; () banked
  4315  011110  6F85               	movwf	___lldiv@divisor& (0+255),b
  4316  011112  0E51               	movlw	81
  4317  011114  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  4318  011116  0E01               	movlw	1
  4319  011118  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  4320  01111A  0E00               	movlw	0
  4321  01111C  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  4322  01111E  EC53  F0AD         	call	___lldiv	;wreg free
  4323  011122  C081  F3E3         	movff	?___lldiv,send_initial_update@tmp
  4324  011126  C082  F3E4         	movff	?___lldiv+1,send_initial_update@tmp+1
  4325                           
  4326                           ;main.c: 533: m_var.value_byte1 = tmp / 256;
  4327  01112A  0103               	movlb	3	; () banked
  4328  01112C  51E4               	movf	(send_initial_update@tmp+1)& (0+255),w,b
  4329  01112E  0101               	movlb	1	; () banked
  4330  011130  6FBB               	movwf	(_m_var+4)& (0+255),b
  4331                           
  4332                           ; BSR set to: 1
  4333                           ;main.c: 534: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  4334  011132  C3E3  F1BC         	movff	send_initial_update@tmp,_m_var+5
  4335                           
  4336                           ; BSR set to: 1
  4337                           ;main.c: 535: m_var.writable = 0;
  4338  011136  0E00               	movlw	0
  4339  011138  0101               	movlb	1	; () banked
  4340  01113A  6FBE               	movwf	(_m_var+7)& (0+255),b
  4341                           
  4342                           ; BSR set to: 1
  4343                           ;main.c: 536: p_buffer += encode_uint16_variable(p_buffer, m_var);
  4344  01113C  C15C  F081         	movff	_p_buffer,encode_uint16_variable@buffer
  4345  011140  C15D  F082         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  4346  011144  EE21  F0B7         	lfsr	2,_m_var
  4347  011148  EE00  F083         	lfsr	0,encode_uint16_variable@var
  4348  01114C  0E08               	movlw	8
  4349  01114E                     u16721:
  4350  01114E  CFDB FFEB          	movff	plusw2,plusw0
  4351  011152  06E8               	decf	wreg,f,c
  4352  011154  E2FC               	bc	u16721
  4353  011156  ECB2  F0AE         	call	_encode_uint16_variable	;wreg free
  4354  01115A                     L6:
  4355  01115A  0101               	movlb	1	; () banked
  4356  01115C  6FFD               	movwf	??_send_initial_update& (0+255),b
  4357  01115E  0101               	movlb	1	; () banked
  4358  011160  51FD               	movf	??_send_initial_update& (0+255),w,b
  4359  011162  0D01               	mullw	1
  4360  011164  50F3               	movf	prodl,w,c
  4361  011166  0101               	movlb	1	; () banked
  4362  011168  275C               	addwf	_p_buffer& (0+255),f,b
  4363  01116A  50F4               	movf	prodh,w,c
  4364  01116C  0101               	movlb	1	; () banked
  4365  01116E  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  4366                           
  4367                           ; BSR set to: 1
  4368                           ;main.c: 537: }
  4369                           ;main.c: 539: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  4370                           
  4371                           ; BSR set to: 1
  4372                           
  4373                           ; BSR set to: 1
  4374                           
  4375                           ; BSR set to: 1
  4376  011170  0EB7               	movlw	low _m_var
  4377  011172  0100               	movlb	0	; () banked
  4378  011174  6F81               	movwf	memcpy@d1& (0+255),b
  4379  011176  0E01               	movlw	high _m_var
  4380  011178  0100               	movlb	0	; () banked
  4381  01117A  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  4382  01117C  0EF7               	movlw	low _UPDATE_FREQUENCY_LABEL
  4383  01117E  0100               	movlb	0	; () banked
  4384  011180  6F83               	movwf	memcpy@s1& (0+255),b
  4385  011182  0EFF               	movlw	high _UPDATE_FREQUENCY_LABEL
  4386  011184  0100               	movlb	0	; () banked
  4387  011186  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  4388  011188  0E00               	movlw	0
  4389  01118A  0100               	movlb	0	; () banked
  4390  01118C  6F86               	movwf	(memcpy@n+1)& (0+255),b
  4391  01118E  0E03               	movlw	3
  4392  011190  6F85               	movwf	memcpy@n& (0+255),b
  4393  011192  ECDD  F0B2         	call	_memcpy	;wreg free
  4394                           
  4395                           ;main.c: 540: m_var.unit = 4;
  4396  011196  0E04               	movlw	4
  4397  011198  0101               	movlb	1	; () banked
  4398  01119A  6FBD               	movwf	(_m_var+6)& (0+255),b
  4399                           
  4400                           ; BSR set to: 1
  4401                           ;main.c: 541: m_var.value_byte1 = m_update_frequency;
  4402  01119C  C1FF  F1BB         	movff	_m_update_frequency,_m_var+4	;volatile
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;main.c: 542: m_var.writable = 1;
  4406  0111A0  0E01               	movlw	1
  4407  0111A2  0101               	movlb	1	; () banked
  4408  0111A4  6FBE               	movwf	(_m_var+7)& (0+255),b
  4409                           
  4410                           ; BSR set to: 1
  4411                           ;main.c: 543: p_buffer += encode_uint8_variable(p_buffer, m_var);
  4412  0111A6  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  4413  0111AA  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  4414  0111AE  EE21  F0B7         	lfsr	2,_m_var
  4415  0111B2  EE00  F083         	lfsr	0,encode_uint8_variable@var
  4416  0111B6  0E08               	movlw	8
  4417  0111B8                     u16731:
  4418  0111B8  CFDB FFEB          	movff	plusw2,plusw0
  4419  0111BC  06E8               	decf	wreg,f,c
  4420  0111BE  E2FC               	bc	u16731
  4421  0111C0  EC23  F0B0         	call	_encode_uint8_variable	;wreg free
  4422  0111C4  0101               	movlb	1	; () banked
  4423  0111C6  6FFD               	movwf	??_send_initial_update& (0+255),b
  4424  0111C8  0101               	movlb	1	; () banked
  4425  0111CA  51FD               	movf	??_send_initial_update& (0+255),w,b
  4426  0111CC  0D01               	mullw	1
  4427  0111CE  50F3               	movf	prodl,w,c
  4428  0111D0  0101               	movlb	1	; () banked
  4429  0111D2  275C               	addwf	_p_buffer& (0+255),f,b
  4430  0111D4  50F4               	movf	prodh,w,c
  4431  0111D6  0101               	movlb	1	; () banked
  4432  0111D8  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  4433                           
  4434                           ; BSR set to: 1
  4435                           ;main.c: 545: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  4436  0111DA  0E97               	movlw	low _m_buffer
  4437  0111DC  0101               	movlb	1	; () banked
  4438  0111DE  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  4439  0111E0  0E01               	movlw	high _m_buffer
  4440  0111E2  0101               	movlb	1	; () banked
  4441  0111E4  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4442  0111E6  0E97               	movlw	_m_buffer& (0+255)
  4443  0111E8  0800               	sublw	0
  4444  0111EA  0101               	movlb	1	; () banked
  4445  0111EC  255C               	addwf	_p_buffer& (0+255),w,b
  4446  0111EE  0101               	movlb	1	; () banked
  4447  0111F0  6FF6               	movwf	do_UPDATE@size& (0+255),b
  4448  0111F2  0E00               	movlw	0
  4449  0111F4  0101               	movlb	1	; () banked
  4450  0111F6  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  4451  0111F8  EC9C  F0A0         	call	_do_UPDATE	;wreg free
  4452  0111FC  0900               	iorlw	0
  4453  0111FE  A4D8               	btfss	status,2,c
  4454  011200  D002               	goto	l14220
  4455                           
  4456                           ;main.c: 546: return 0;
  4457  011202  0E00               	movlw	0
  4458  011204  0012               	return	
  4459  011206                     l14220:
  4460                           
  4461                           ;main.c: 550: p_buffer = m_buffer;
  4462  011206  0E97               	movlw	low _m_buffer
  4463  011208  0101               	movlb	1	; () banked
  4464  01120A  6F5C               	movwf	_p_buffer& (0+255),b
  4465  01120C  0E01               	movlw	high _m_buffer
  4466  01120E  0101               	movlb	1	; () banked
  4467  011210  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  4468                           
  4469                           ; BSR set to: 1
  4470                           ;main.c: 551: memcpy(m_var.label, FAILEDMSG_LABEL, 3);
  4471  011212  0EB7               	movlw	low _m_var
  4472  011214  0100               	movlb	0	; () banked
  4473  011216  6F81               	movwf	memcpy@d1& (0+255),b
  4474  011218  0E01               	movlw	high _m_var
  4475  01121A  0100               	movlb	0	; () banked
  4476  01121C  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  4477  01121E  0EE3               	movlw	low _FAILEDMSG_LABEL
  4478  011220  0100               	movlb	0	; () banked
  4479  011222  6F83               	movwf	memcpy@s1& (0+255),b
  4480  011224  0EFF               	movlw	high _FAILEDMSG_LABEL
  4481  011226  0100               	movlb	0	; () banked
  4482  011228  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  4483  01122A  0E00               	movlw	0
  4484  01122C  0100               	movlb	0	; () banked
  4485  01122E  6F86               	movwf	(memcpy@n+1)& (0+255),b
  4486  011230  0E03               	movlw	3
  4487  011232  6F85               	movwf	memcpy@n& (0+255),b
  4488  011234  ECDD  F0B2         	call	_memcpy	;wreg free
  4489                           
  4490                           ;main.c: 552: m_var.unit = 3;
  4491  011238  0E03               	movlw	3
  4492  01123A  0101               	movlb	1	; () banked
  4493  01123C  6FBD               	movwf	(_m_var+6)& (0+255),b
  4494                           
  4495                           ; BSR set to: 1
  4496                           ;main.c: 553: float tmp2 = (float)(m_failed_messages*100)/(float)(m_failed_messages + m_
      +                          sent_messages);
  4497  01123E  C142  F081         	movff	_m_failed_messages,___lmul@multiplier
  4498  011242  C143  F082         	movff	_m_failed_messages+1,___lmul@multiplier+1
  4499  011246  C144  F083         	movff	_m_failed_messages+2,___lmul@multiplier+2
  4500  01124A  C145  F084         	movff	_m_failed_messages+3,___lmul@multiplier+3
  4501  01124E  0E64               	movlw	100
  4502  011250  0100               	movlb	0	; () banked
  4503  011252  6F85               	movwf	___lmul@multiplicand& (0+255),b
  4504  011254  0E00               	movlw	0
  4505  011256  6F86               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4506  011258  0E00               	movlw	0
  4507  01125A  6F87               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4508  01125C  0E00               	movlw	0
  4509  01125E  6F88               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4510  011260  EC9A  F0B1         	call	___lmul	;wreg free
  4511  011264  C081  F08D         	movff	?___lmul,___lltoft@c
  4512  011268  C082  F08E         	movff	?___lmul+1,___lltoft@c+1
  4513  01126C  C083  F08F         	movff	?___lmul+2,___lltoft@c+2
  4514  011270  C084  F090         	movff	?___lmul+3,___lltoft@c+3
  4515  011274  ECA8  F0B0         	call	___lltoft	;wreg free
  4516  011278  C08D  F096         	movff	?___lltoft,___ftdiv@f1
  4517  01127C  C08E  F097         	movff	?___lltoft+1,___ftdiv@f1+1
  4518  011280  C08F  F098         	movff	?___lltoft+2,___ftdiv@f1+2
  4519  011284  0101               	movlb	1	; () banked
  4520  011286  5146               	movf	_m_sent_messages& (0+255),w,b
  4521  011288  0101               	movlb	1	; () banked
  4522  01128A  2542               	addwf	_m_failed_messages& (0+255),w,b
  4523  01128C  0100               	movlb	0	; () banked
  4524  01128E  6F8D               	movwf	___lltoft@c& (0+255),b
  4525  011290  0101               	movlb	1	; () banked
  4526  011292  5147               	movf	(_m_sent_messages+1)& (0+255),w,b
  4527  011294  0101               	movlb	1	; () banked
  4528  011296  2143               	addwfc	(_m_failed_messages+1)& (0+255),w,b
  4529  011298  0100               	movlb	0	; () banked
  4530  01129A  6F8E               	movwf	(___lltoft@c+1)& (0+255),b
  4531  01129C  0101               	movlb	1	; () banked
  4532  01129E  5148               	movf	(_m_sent_messages+2)& (0+255),w,b
  4533  0112A0  0101               	movlb	1	; () banked
  4534  0112A2  2144               	addwfc	(_m_failed_messages+2)& (0+255),w,b
  4535  0112A4  0100               	movlb	0	; () banked
  4536  0112A6  6F8F               	movwf	(___lltoft@c+2)& (0+255),b
  4537  0112A8  0101               	movlb	1	; () banked
  4538  0112AA  5149               	movf	(_m_sent_messages+3)& (0+255),w,b
  4539  0112AC  0101               	movlb	1	; () banked
  4540  0112AE  2145               	addwfc	(_m_failed_messages+3)& (0+255),w,b
  4541  0112B0  0100               	movlb	0	; () banked
  4542  0112B2  6F90               	movwf	(___lltoft@c+3)& (0+255),b
  4543  0112B4  ECA8  F0B0         	call	___lltoft	;wreg free
  4544  0112B8  C08D  F099         	movff	?___lltoft,___ftdiv@f2
  4545  0112BC  C08E  F09A         	movff	?___lltoft+1,___ftdiv@f2+1
  4546  0112C0  C08F  F09B         	movff	?___lltoft+2,___ftdiv@f2+2
  4547  0112C4  EC12  F0A4         	call	___ftdiv	;wreg free
  4548  0112C8  C096  F3D4         	movff	?___ftdiv,send_initial_update@tmp2
  4549  0112CC  C097  F3D5         	movff	?___ftdiv+1,send_initial_update@tmp2+1
  4550  0112D0  C098  F3D6         	movff	?___ftdiv+2,send_initial_update@tmp2+2
  4551                           
  4552                           ;main.c: 554: m_var.value_byte1 = (uint8_t)floor(tmp2);
  4553  0112D4  C3D4  F0BE         	movff	send_initial_update@tmp2,floor@x
  4554  0112D8  C3D5  F0BF         	movff	send_initial_update@tmp2+1,floor@x+1
  4555  0112DC  C3D6  F0C0         	movff	send_initial_update@tmp2+2,floor@x+2
  4556  0112E0  EC62  F0AA         	call	_floor	;wreg free
  4557  0112E4  C0BE  F3D7         	movff	?_floor,_send_initial_update$5076
  4558  0112E8  C0BF  F3D8         	movff	?_floor+1,_send_initial_update$5076+1
  4559  0112EC  C0C0  F3D9         	movff	?_floor+2,_send_initial_update$5076+2
  4560                           
  4561                           ;main.c: 554: m_var.value_byte1 = (uint8_t)floor(tmp2);
  4562  0112F0  C3D7  F0A5         	movff	_send_initial_update$5076,___fttol@f1
  4563  0112F4  C3D8  F0A6         	movff	_send_initial_update$5076+1,___fttol@f1+1
  4564  0112F8  C3D9  F0A7         	movff	_send_initial_update$5076+2,___fttol@f1+2
  4565  0112FC  ECB8  F0A4         	call	___fttol	;wreg free
  4566  011300  0100               	movlb	0	; () banked
  4567  011302  51A5               	movf	?___fttol& (0+255),w,b
  4568  011304  0101               	movlb	1	; () banked
  4569  011306  6FBB               	movwf	(_m_var+4)& (0+255),b
  4570                           
  4571                           ; BSR set to: 1
  4572                           ;main.c: 555: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4573  011308  C3D4  F0BE         	movff	send_initial_update@tmp2,floor@x
  4574  01130C  C3D5  F0BF         	movff	send_initial_update@tmp2+1,floor@x+1
  4575  011310  C3D6  F0C0         	movff	send_initial_update@tmp2+2,floor@x+2
  4576  011314  EC62  F0AA         	call	_floor	;wreg free
  4577  011318  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  4578  01131C  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  4579  011320  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  4580  011324  ECCA  F0B4         	call	___ftneg	;wreg free
  4581  011328  C0C6  F3DA         	movff	?___ftneg,_send_initial_update$5077
  4582  01132C  C0C7  F3DB         	movff	?___ftneg+1,_send_initial_update$5077+1
  4583  011330  C0C8  F3DC         	movff	?___ftneg+2,_send_initial_update$5077+2
  4584                           
  4585                           ;main.c: 555: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4586  011334  0E00               	movlw	0
  4587  011336  0100               	movlb	0	; () banked
  4588  011338  6FCC               	movwf	___ftmul@f2& (0+255),b
  4589  01133A  0EC8               	movlw	200
  4590  01133C  0100               	movlb	0	; () banked
  4591  01133E  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  4592  011340  0E42               	movlw	66
  4593  011342  0100               	movlb	0	; () banked
  4594  011344  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  4595  011346  C3D4  F08C         	movff	send_initial_update@tmp2,___ftadd@f2
  4596  01134A  C3D5  F08D         	movff	send_initial_update@tmp2+1,___ftadd@f2+1
  4597  01134E  C3D6  F08E         	movff	send_initial_update@tmp2+2,___ftadd@f2+2
  4598  011352  C3DA  F089         	movff	_send_initial_update$5077,___ftadd@f1
  4599  011356  C3DB  F08A         	movff	_send_initial_update$5077+1,___ftadd@f1+1
  4600  01135A  C3DC  F08B         	movff	_send_initial_update$5077+2,___ftadd@f1+2
  4601  01135E  ECB9  F099         	call	___ftadd	;wreg free
  4602  011362  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  4603  011366  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  4604  01136A  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  4605  01136E  EC11  F0A2         	call	___ftmul	;wreg free
  4606  011372  C0C9  F3DD         	movff	?___ftmul,_send_initial_update$5078
  4607  011376  C0CA  F3DE         	movff	?___ftmul+1,_send_initial_update$5078+1
  4608  01137A  C0CB  F3DF         	movff	?___ftmul+2,_send_initial_update$5078+2
  4609                           
  4610                           ;main.c: 555: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4611  01137E  C3DD  F0BE         	movff	_send_initial_update$5078,floor@x
  4612  011382  C3DE  F0BF         	movff	_send_initial_update$5078+1,floor@x+1
  4613  011386  C3DF  F0C0         	movff	_send_initial_update$5078+2,floor@x+2
  4614  01138A  EC62  F0AA         	call	_floor	;wreg free
  4615  01138E  C0BE  F3E0         	movff	?_floor,_send_initial_update$5079
  4616  011392  C0BF  F3E1         	movff	?_floor+1,_send_initial_update$5079+1
  4617  011396  C0C0  F3E2         	movff	?_floor+2,_send_initial_update$5079+2
  4618                           
  4619                           ;main.c: 555: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4620  01139A  C3E0  F0A5         	movff	_send_initial_update$5079,___fttol@f1
  4621  01139E  C3E1  F0A6         	movff	_send_initial_update$5079+1,___fttol@f1+1
  4622  0113A2  C3E2  F0A7         	movff	_send_initial_update$5079+2,___fttol@f1+2
  4623  0113A6  ECB8  F0A4         	call	___fttol	;wreg free
  4624  0113AA  0100               	movlb	0	; () banked
  4625  0113AC  51A5               	movf	?___fttol& (0+255),w,b
  4626  0113AE  0101               	movlb	1	; () banked
  4627  0113B0  6FBC               	movwf	(_m_var+5)& (0+255),b
  4628                           
  4629                           ; BSR set to: 1
  4630                           ;main.c: 556: m_var.writable = 0;
  4631  0113B2  0E00               	movlw	0
  4632  0113B4  0101               	movlb	1	; () banked
  4633  0113B6  6FBE               	movwf	(_m_var+7)& (0+255),b
  4634                           
  4635                           ; BSR set to: 1
  4636                           ;main.c: 557: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  4637  0113B8  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  4638  0113BC  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  4639  0113C0  EE21  F0B7         	lfsr	2,_m_var
  4640  0113C4  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  4641  0113C8  0E08               	movlw	8
  4642  0113CA                     u16751:
  4643  0113CA  CFDB FFEB          	movff	plusw2,plusw0
  4644  0113CE  06E8               	decf	wreg,f,c
  4645  0113D0  E2FC               	bc	u16751
  4646  0113D2  EC00  F0AF         	call	_encode_ufixed16_variable	;wreg free
  4647  0113D6  0101               	movlb	1	; () banked
  4648  0113D8  6FFD               	movwf	??_send_initial_update& (0+255),b
  4649  0113DA  0101               	movlb	1	; () banked
  4650  0113DC  51FD               	movf	??_send_initial_update& (0+255),w,b
  4651  0113DE  0D01               	mullw	1
  4652  0113E0  50F3               	movf	prodl,w,c
  4653  0113E2  0101               	movlb	1	; () banked
  4654  0113E4  275C               	addwf	_p_buffer& (0+255),f,b
  4655  0113E6  50F4               	movf	prodh,w,c
  4656  0113E8  0101               	movlb	1	; () banked
  4657  0113EA  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  4658                           
  4659                           ; BSR set to: 1
  4660                           ;main.c: 559: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  4661  0113EC  0E97               	movlw	low _m_buffer
  4662  0113EE  0101               	movlb	1	; () banked
  4663  0113F0  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  4664  0113F2  0E01               	movlw	high _m_buffer
  4665  0113F4  0101               	movlb	1	; () banked
  4666  0113F6  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4667  0113F8  0E97               	movlw	_m_buffer& (0+255)
  4668  0113FA  0800               	sublw	0
  4669  0113FC  0101               	movlb	1	; () banked
  4670  0113FE  255C               	addwf	_p_buffer& (0+255),w,b
  4671  011400  0101               	movlb	1	; () banked
  4672  011402  6FF6               	movwf	do_UPDATE@size& (0+255),b
  4673  011404  0E01               	movlw	1
  4674  011406  0101               	movlb	1	; () banked
  4675  011408  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  4676  01140A  EC9C  F0A0         	call	_do_UPDATE	;wreg free
  4677  01140E  0012               	return	
  4678  011410                     __end_of_send_initial_update:
  4679                           	opt stack 0
  4680                           tblptru	equ	0xFF8
  4681                           tblptrh	equ	0xFF7
  4682                           tblptrl	equ	0xFF6
  4683                           tablat	equ	0xFF5
  4684                           prodh	equ	0xFF4
  4685                           prodl	equ	0xFF3
  4686                           postinc0	equ	0xFEE
  4687                           plusw0	equ	0xFEB
  4688                           wreg	equ	0xFE8
  4689                           indf2	equ	0xFDF
  4690                           postinc2	equ	0xFDE
  4691                           plusw2	equ	0xFDB
  4692                           fsr2h	equ	0xFDA
  4693                           fsr2l	equ	0xFD9
  4694                           status	equ	0xFD8
  4695                           
  4696 ;; *************** function _floor *****************
  4697 ;; Defined at:
  4698 ;;		line 13 in file "/opt/microchip/xc8/v1.35/sources/common/floor.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  x               3   94[BANK0 ] unsigned char 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  i               3   97[BANK0 ] unsigned char 
  4703 ;;  expon           2  100[BANK0 ] int 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  3   94[BANK0 ] int 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4713 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4714 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4716 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4717 ;;Total ram usage:        8 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    9
  4720 ;; This function calls:
  4721 ;;		___altoft
  4722 ;;		___ftadd
  4723 ;;		___ftge
  4724 ;;		___fttol
  4725 ;;		_frexp
  4726 ;; This function is called by:
  4727 ;;		_send_initial_update
  4728 ;;		_send_periodical_update
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text3
  4733  0154C4                     __ptext3:
  4734                           	opt stack 0
  4735  0154C4                     _floor:
  4736                           	opt stack 20
  4737                           
  4738                           ;incstack = 0
  4739  0154C4  C0BE  F081         	movff	floor@x,frexp@value
  4740  0154C8  C0BF  F082         	movff	floor@x+1,frexp@value+1
  4741  0154CC  C0C0  F083         	movff	floor@x+2,frexp@value+2
  4742  0154D0  0EC4               	movlw	low floor@expon
  4743  0154D2  0100               	movlb	0	; () banked
  4744  0154D4  6F84               	movwf	frexp@eptr& (0+255),b
  4745  0154D6  0E00               	movlw	high floor@expon
  4746  0154D8  0100               	movlb	0	; () banked
  4747  0154DA  6F85               	movwf	(frexp@eptr+1)& (0+255),b
  4748  0154DC  EC4E  F0AF         	call	_frexp	;wreg free
  4749  0154E0  0100               	movlb	0	; () banked
  4750  0154E2  AFC5               	btfss	(floor@expon+1)& (0+255),7,b
  4751  0154E4  D017               	goto	l13024
  4752                           
  4753                           ; BSR set to: 0
  4754  0154E6  0100               	movlb	0	; () banked
  4755  0154E8  AFC0               	btfss	(floor@x+2)& (0+255),7,b
  4756  0154EA  D00A               	goto	l13020
  4757                           
  4758                           ; BSR set to: 0
  4759  0154EC  0E00               	movlw	0
  4760  0154EE  0100               	movlb	0	; () banked
  4761  0154F0  6FBE               	movwf	?_floor& (0+255),b
  4762  0154F2  0E80               	movlw	128
  4763  0154F4  0100               	movlb	0	; () banked
  4764  0154F6  6FBF               	movwf	(?_floor+1)& (0+255),b
  4765  0154F8  0EBF               	movlw	191
  4766  0154FA  0100               	movlb	0	; () banked
  4767  0154FC  6FC0               	movwf	(?_floor+2)& (0+255),b
  4768                           
  4769                           ; BSR set to: 0
  4770  0154FE  0012               	return	
  4771  015500                     l13020:
  4772                           
  4773                           ; BSR set to: 0
  4774  015500  0E00               	movlw	0
  4775  015502  0100               	movlb	0	; () banked
  4776  015504  6FBE               	movwf	?_floor& (0+255),b
  4777  015506  0E00               	movlw	0
  4778  015508  0100               	movlb	0	; () banked
  4779  01550A  6FBF               	movwf	(?_floor+1)& (0+255),b
  4780  01550C  0E00               	movlw	0
  4781  01550E  0100               	movlb	0	; () banked
  4782  015510  6FC0               	movwf	(?_floor+2)& (0+255),b
  4783                           
  4784                           ; BSR set to: 0
  4785  015512  0012               	return	
  4786  015514                     l13024:
  4787                           
  4788                           ; BSR set to: 0
  4789  015514  0100               	movlb	0	; () banked
  4790  015516  51C5               	movf	(floor@expon+1)& (0+255),w,b
  4791  015518  E105               	bnz	u15180
  4792  01551A  0E15               	movlw	21
  4793  01551C  0100               	movlb	0	; () banked
  4794  01551E  5DC4               	subwf	floor@expon& (0+255),w,b
  4795  015520  A0D8               	btfss	status,0,c
  4796  015522  D007               	goto	l13028
  4797  015524                     u15180:
  4798                           
  4799                           ; BSR set to: 0
  4800  015524  C0BE  F0BE         	movff	floor@x,?_floor
  4801  015528  C0BF  F0BF         	movff	floor@x+1,?_floor+1
  4802  01552C  C0C0  F0C0         	movff	floor@x+2,?_floor+2
  4803  015530  0012               	return	
  4804  015532                     l13028:
  4805                           
  4806                           ; BSR set to: 0
  4807  015532  C0BE  F0A5         	movff	floor@x,___fttol@f1
  4808  015536  C0BF  F0A6         	movff	floor@x+1,___fttol@f1+1
  4809  01553A  C0C0  F0A7         	movff	floor@x+2,___fttol@f1+2
  4810  01553E  ECB8  F0A4         	call	___fttol	;wreg free
  4811  015542  C0A5  F0B4         	movff	?___fttol,___altoft@c
  4812  015546  C0A6  F0B5         	movff	?___fttol+1,___altoft@c+1
  4813  01554A  C0A7  F0B6         	movff	?___fttol+2,___altoft@c+2
  4814  01554E  C0A8  F0B7         	movff	?___fttol+3,___altoft@c+3
  4815  015552  EC63  F0AE         	call	___altoft	;wreg free
  4816  015556  C0B4  F0C1         	movff	?___altoft,floor@i
  4817  01555A  C0B5  F0C2         	movff	?___altoft+1,floor@i+1
  4818  01555E  C0B6  F0C3         	movff	?___altoft+2,floor@i+2
  4819  015562  C0BE  F081         	movff	floor@x,___ftge@ff1
  4820  015566  C0BF  F082         	movff	floor@x+1,___ftge@ff1+1
  4821  01556A  C0C0  F083         	movff	floor@x+2,___ftge@ff1+2
  4822  01556E  C0C1  F084         	movff	floor@i,___ftge@ff2
  4823  015572  C0C2  F085         	movff	floor@i+1,___ftge@ff2+1
  4824  015576  C0C3  F086         	movff	floor@i+2,___ftge@ff2+2
  4825  01557A  EC30  F0AC         	call	___ftge	;wreg free
  4826  01557E  0100               	movlb	0	; () banked
  4827  015580  B0D8               	btfsc	status,0,c
  4828  015582  D018               	goto	l1695
  4829                           
  4830                           ; BSR set to: 0
  4831  015584  C0C1  F089         	movff	floor@i,___ftadd@f1
  4832  015588  C0C2  F08A         	movff	floor@i+1,___ftadd@f1+1
  4833  01558C  C0C3  F08B         	movff	floor@i+2,___ftadd@f1+2
  4834  015590  0E00               	movlw	0
  4835  015592  0100               	movlb	0	; () banked
  4836  015594  6F8C               	movwf	___ftadd@f2& (0+255),b
  4837  015596  0E80               	movlw	128
  4838  015598  0100               	movlb	0	; () banked
  4839  01559A  6F8D               	movwf	(___ftadd@f2+1)& (0+255),b
  4840  01559C  0EBF               	movlw	191
  4841  01559E  0100               	movlb	0	; () banked
  4842  0155A0  6F8E               	movwf	(___ftadd@f2+2)& (0+255),b
  4843  0155A2  ECB9  F099         	call	___ftadd	;wreg free
  4844  0155A6  C089  F0BE         	movff	?___ftadd,?_floor
  4845  0155AA  C08A  F0BF         	movff	?___ftadd+1,?_floor+1
  4846  0155AE  C08B  F0C0         	movff	?___ftadd+2,?_floor+2
  4847  0155B2  0012               	return	
  4848  0155B4                     l1695:
  4849                           
  4850                           ; BSR set to: 0
  4851  0155B4  C0C1  F0BE         	movff	floor@i,?_floor
  4852  0155B8  C0C2  F0BF         	movff	floor@i+1,?_floor+1
  4853  0155BC  C0C3  F0C0         	movff	floor@i+2,?_floor+2
  4854  0155C0  0012               	return		;funcret
  4855  0155C2                     __end_of_floor:
  4856                           	opt stack 0
  4857                           tblptru	equ	0xFF8
  4858                           tblptrh	equ	0xFF7
  4859                           tblptrl	equ	0xFF6
  4860                           tablat	equ	0xFF5
  4861                           prodh	equ	0xFF4
  4862                           prodl	equ	0xFF3
  4863                           postinc0	equ	0xFEE
  4864                           plusw0	equ	0xFEB
  4865                           wreg	equ	0xFE8
  4866                           indf2	equ	0xFDF
  4867                           postinc2	equ	0xFDE
  4868                           plusw2	equ	0xFDB
  4869                           fsr2h	equ	0xFDA
  4870                           fsr2l	equ	0xFD9
  4871                           status	equ	0xFD8
  4872                           
  4873 ;; *************** function _frexp *****************
  4874 ;; Defined at:
  4875 ;;		line 254 in file "/opt/microchip/xc8/v1.35/sources/common/frexp.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  value           3   33[BANK0 ] int 
  4878 ;;  eptr            2   36[BANK0 ] PTR int 
  4879 ;;		 -> floor@expon(2), 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;		None
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  3   33[BANK0 ] PTR int 
  4884 ;; Registers used:
  4885 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4891 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4893 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4894 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4895 ;;Total ram usage:        7 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    7
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_floor
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text4
  4906  015E9C                     __ptext4:
  4907                           	opt stack 0
  4908  015E9C                     _frexp:
  4909                           	opt stack 21
  4910                           
  4911                           ;incstack = 0
  4912  015E9C  0100               	movlb	0	; () banked
  4913  015E9E  5181               	movf	frexp@value& (0+255),w,b
  4914  015EA0  0100               	movlb	0	; () banked
  4915  015EA2  1182               	iorwf	(frexp@value+1)& (0+255),w,b
  4916  015EA4  0100               	movlb	0	; () banked
  4917  015EA6  1183               	iorwf	(frexp@value+2)& (0+255),w,b
  4918  015EA8  A4D8               	btfss	status,2,c
  4919  015EAA  D009               	goto	l12484
  4920                           
  4921                           ; BSR set to: 0
  4922  015EAC  C084  FFD9         	movff	frexp@eptr,fsr2l
  4923  015EB0  C085  FFDA         	movff	frexp@eptr+1,fsr2h
  4924  015EB4  0E00               	movlw	0
  4925  015EB6  6EDE               	movwf	postinc2,c
  4926  015EB8  0E00               	movlw	0
  4927  015EBA  6EDD               	movwf	postdec2,c
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;	Return value of _frexp is never used
  4931  015EBC  0012               	return	
  4932  015EBE                     l12484:
  4933                           
  4934                           ; BSR set to: 0
  4935  015EBE  0100               	movlb	0	; () banked
  4936  015EC0  5183               	movf	(frexp@value+2)& (0+255),w,b
  4937  015EC2  0B7F               	andlw	127
  4938  015EC4  0100               	movlb	0	; () banked
  4939  015EC6  6F86               	movwf	??_frexp& (0+255),b
  4940  015EC8  6B87               	clrf	(??_frexp+1)& (0+255),b
  4941  015ECA  90D8               	bcf	status,0,c
  4942  015ECC  0100               	movlb	0	; () banked
  4943  015ECE  3786               	rlcf	??_frexp& (0+255),f,b
  4944  015ED0  3787               	rlcf	(??_frexp+1)& (0+255),f,b
  4945  015ED2  C084  FFD9         	movff	frexp@eptr,fsr2l
  4946  015ED6  C085  FFDA         	movff	frexp@eptr+1,fsr2h
  4947  015EDA  C086  FFDE         	movff	??_frexp,postinc2
  4948  015EDE  C087  FFDD         	movff	??_frexp+1,postdec2
  4949  015EE2  0100               	movlb	0	; () banked
  4950  015EE4  AF82               	btfss	(frexp@value+1)& (0+255),7,b
  4951  015EE6  D004               	goto	u14470
  4952  015EE8  0100               	movlb	0	; () banked
  4953  015EEA  6B86               	clrf	??_frexp& (0+255),b
  4954  015EEC  2B86               	incf	??_frexp& (0+255),f,b
  4955  015EEE  D002               	goto	u14478
  4956  015EF0                     u14470:
  4957  015EF0  0100               	movlb	0	; () banked
  4958  015EF2  6B86               	clrf	??_frexp& (0+255),b
  4959  015EF4                     u14478:
  4960  015EF4  0100               	movlb	0	; () banked
  4961  015EF6  5186               	movf	??_frexp& (0+255),w,b
  4962  015EF8  C084  FFD9         	movff	frexp@eptr,fsr2l
  4963  015EFC  C085  FFDA         	movff	frexp@eptr+1,fsr2h
  4964  015F00  12DE               	iorwf	postinc2,f,c
  4965  015F02  0E00               	movlw	0
  4966  015F04  12DD               	iorwf	postdec2,f,c
  4967                           
  4968                           ; BSR set to: 0
  4969  015F06  C084  FFD9         	movff	frexp@eptr,fsr2l
  4970  015F0A  C085  FFDA         	movff	frexp@eptr+1,fsr2h
  4971  015F0E  0E82               	movlw	130
  4972  015F10  26DE               	addwf	postinc2,f,c
  4973  015F12  0EFF               	movlw	255
  4974  015F14  22DD               	addwfc	postdec2,f,c
  4975                           
  4976                           ; BSR set to: 0
  4977  015F16  0100               	movlb	0	; () banked
  4978  015F18  8183               	bsf	(frexp@value+2)& (0+255),0,b
  4979  015F1A  8383               	bsf	(frexp@value+2)& (0+255),1,b
  4980  015F1C  8583               	bsf	(frexp@value+2)& (0+255),2,b
  4981  015F1E  8783               	bsf	(frexp@value+2)& (0+255),3,b
  4982  015F20  8983               	bsf	(frexp@value+2)& (0+255),4,b
  4983  015F22  8B83               	bsf	(frexp@value+2)& (0+255),5,b
  4984  015F24  9D83               	bcf	(frexp@value+2)& (0+255),6,b
  4985                           
  4986                           ; BSR set to: 0
  4987  015F26  0100               	movlb	0	; () banked
  4988  015F28  9F82               	bcf	(frexp@value+1)& (0+255),7,b
  4989  015F2A  0012               	return	
  4990  015F2C                     __end_of_frexp:
  4991                           	opt stack 0
  4992                           tblptru	equ	0xFF8
  4993                           tblptrh	equ	0xFF7
  4994                           tblptrl	equ	0xFF6
  4995                           tablat	equ	0xFF5
  4996                           prodh	equ	0xFF4
  4997                           prodl	equ	0xFF3
  4998                           postinc0	equ	0xFEE
  4999                           plusw0	equ	0xFEB
  5000                           wreg	equ	0xFE8
  5001                           indf2	equ	0xFDF
  5002                           postinc2	equ	0xFDE
  5003                           postdec2	equ	0xFDD
  5004                           plusw2	equ	0xFDB
  5005                           fsr2h	equ	0xFDA
  5006                           fsr2l	equ	0xFD9
  5007                           status	equ	0xFD8
  5008                           
  5009 ;; *************** function ___ftge *****************
  5010 ;; Defined at:
  5011 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/ftge.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  ff1             3   33[BANK0 ] float 
  5014 ;;  ff2             3   36[BANK0 ] float 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;		None               void
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5026 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5028 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5029 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5030 ;;Total ram usage:        9 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    7
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_floor
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text5
  5041  015860                     __ptext5:
  5042                           	opt stack 0
  5043  015860                     ___ftge:
  5044                           	opt stack 21
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;incstack = 0
  5048  015860  0100               	movlb	0	; () banked
  5049  015862  AF83               	btfss	(___ftge@ff1+2)& (0+255),7,b
  5050  015864  D01D               	goto	l12498
  5051                           
  5052                           ; BSR set to: 0
  5053  015866  C081  F087         	movff	___ftge@ff1,??___ftge
  5054  01586A  C082  F088         	movff	___ftge@ff1+1,??___ftge+1
  5055  01586E  C083  F089         	movff	___ftge@ff1+2,??___ftge+2
  5056  015872  0100               	movlb	0	; () banked
  5057  015874  1F87               	comf	??___ftge& (0+255),f,b
  5058  015876  1F88               	comf	(??___ftge+1)& (0+255),f,b
  5059  015878  1F89               	comf	(??___ftge+2)& (0+255),f,b
  5060  01587A  2B87               	incf	??___ftge& (0+255),f,b
  5061  01587C  0E00               	movlw	0
  5062  01587E  2388               	addwfc	(??___ftge+1)& (0+255),f,b
  5063  015880  2389               	addwfc	(??___ftge+2)& (0+255),f,b
  5064  015882  0E00               	movlw	0
  5065  015884  0100               	movlb	0	; () banked
  5066  015886  2587               	addwf	??___ftge& (0+255),w,b
  5067  015888  0100               	movlb	0	; () banked
  5068  01588A  6F81               	movwf	___ftge@ff1& (0+255),b
  5069  01588C  0E00               	movlw	0
  5070  01588E  0100               	movlb	0	; () banked
  5071  015890  2188               	addwfc	(??___ftge+1)& (0+255),w,b
  5072  015892  0100               	movlb	0	; () banked
  5073  015894  6F82               	movwf	(___ftge@ff1+1)& (0+255),b
  5074  015896  0E80               	movlw	128
  5075  015898  0100               	movlb	0	; () banked
  5076  01589A  2189               	addwfc	(??___ftge+2)& (0+255),w,b
  5077  01589C  0100               	movlb	0	; () banked
  5078  01589E  6F83               	movwf	(___ftge@ff1+2)& (0+255),b
  5079  0158A0                     l12498:
  5080                           
  5081                           ; BSR set to: 0
  5082  0158A0  0100               	movlb	0	; () banked
  5083  0158A2  AF86               	btfss	(___ftge@ff2+2)& (0+255),7,b
  5084  0158A4  D01D               	goto	l12502
  5085                           
  5086                           ; BSR set to: 0
  5087  0158A6  C084  F087         	movff	___ftge@ff2,??___ftge
  5088  0158AA  C085  F088         	movff	___ftge@ff2+1,??___ftge+1
  5089  0158AE  C086  F089         	movff	___ftge@ff2+2,??___ftge+2
  5090  0158B2  0100               	movlb	0	; () banked
  5091  0158B4  1F87               	comf	??___ftge& (0+255),f,b
  5092  0158B6  1F88               	comf	(??___ftge+1)& (0+255),f,b
  5093  0158B8  1F89               	comf	(??___ftge+2)& (0+255),f,b
  5094  0158BA  2B87               	incf	??___ftge& (0+255),f,b
  5095  0158BC  0E00               	movlw	0
  5096  0158BE  2388               	addwfc	(??___ftge+1)& (0+255),f,b
  5097  0158C0  2389               	addwfc	(??___ftge+2)& (0+255),f,b
  5098  0158C2  0E00               	movlw	0
  5099  0158C4  0100               	movlb	0	; () banked
  5100  0158C6  2587               	addwf	??___ftge& (0+255),w,b
  5101  0158C8  0100               	movlb	0	; () banked
  5102  0158CA  6F84               	movwf	___ftge@ff2& (0+255),b
  5103  0158CC  0E00               	movlw	0
  5104  0158CE  0100               	movlb	0	; () banked
  5105  0158D0  2188               	addwfc	(??___ftge+1)& (0+255),w,b
  5106  0158D2  0100               	movlb	0	; () banked
  5107  0158D4  6F85               	movwf	(___ftge@ff2+1)& (0+255),b
  5108  0158D6  0E80               	movlw	128
  5109  0158D8  0100               	movlb	0	; () banked
  5110  0158DA  2189               	addwfc	(??___ftge+2)& (0+255),w,b
  5111  0158DC  0100               	movlb	0	; () banked
  5112  0158DE  6F86               	movwf	(___ftge@ff2+2)& (0+255),b
  5113  0158E0                     l12502:
  5114                           
  5115                           ; BSR set to: 0
  5116  0158E0  0E00               	movlw	0
  5117  0158E2  0100               	movlb	0	; () banked
  5118  0158E4  1B81               	xorwf	___ftge@ff1& (0+255),f,b
  5119  0158E6  0E00               	movlw	0
  5120  0158E8  0100               	movlb	0	; () banked
  5121  0158EA  1B82               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5122  0158EC  0E80               	movlw	128
  5123  0158EE  0100               	movlb	0	; () banked
  5124  0158F0  1B83               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5125                           
  5126                           ; BSR set to: 0
  5127  0158F2  0E00               	movlw	0
  5128  0158F4  0100               	movlb	0	; () banked
  5129  0158F6  1B84               	xorwf	___ftge@ff2& (0+255),f,b
  5130  0158F8  0E00               	movlw	0
  5131  0158FA  0100               	movlb	0	; () banked
  5132  0158FC  1B85               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5133  0158FE  0E80               	movlw	128
  5134  015900  0100               	movlb	0	; () banked
  5135  015902  1B86               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5136  015904  0100               	movlb	0	; () banked
  5137  015906  5184               	movf	___ftge@ff2& (0+255),w,b
  5138  015908  0100               	movlb	0	; () banked
  5139  01590A  5D81               	subwf	___ftge@ff1& (0+255),w,b
  5140  01590C  0100               	movlb	0	; () banked
  5141  01590E  5185               	movf	(___ftge@ff2+1)& (0+255),w,b
  5142  015910  0100               	movlb	0	; () banked
  5143  015912  5982               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5144  015914  0100               	movlb	0	; () banked
  5145  015916  5186               	movf	(___ftge@ff2+2)& (0+255),w,b
  5146  015918  0100               	movlb	0	; () banked
  5147  01591A  5983               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5148  01591C  B0D8               	btfsc	status,0,c
  5149  01591E  D002               	goto	l12508
  5150                           
  5151                           ; BSR set to: 0
  5152  015920  90D8               	bcf	status,0,c
  5153  015922  0012               	return	
  5154  015924                     l12508:
  5155                           
  5156                           ; BSR set to: 0
  5157  015924  80D8               	bsf	status,0,c
  5158                           
  5159                           ; BSR set to: 0
  5160  015926  0012               	return	
  5161  015928                     __end_of___ftge:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           postinc0	equ	0xFEE
  5170                           plusw0	equ	0xFEB
  5171                           wreg	equ	0xFE8
  5172                           indf2	equ	0xFDF
  5173                           postinc2	equ	0xFDE
  5174                           postdec2	equ	0xFDD
  5175                           plusw2	equ	0xFDB
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function ___ftadd *****************
  5181 ;; Defined at:
  5182 ;;		line 86 in file "/opt/microchip/xc8/v1.35/sources/common/ftadd.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  f1              3   41[BANK0 ] float 
  5185 ;;  f2              3   44[BANK0 ] float 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  exp1            1   52[BANK0 ] unsigned char 
  5188 ;;  exp2            1   51[BANK0 ] unsigned char 
  5189 ;;  sign            1   50[BANK0 ] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  3   41[BANK0 ] float 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5199 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5202 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5203 ;;Total ram usage:       12 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    8
  5206 ;; This function calls:
  5207 ;;		___ftpack
  5208 ;; This function is called by:
  5209 ;;		_send_initial_update
  5210 ;;		_send_periodical_update
  5211 ;;		_floor
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text6
  5216  013372                     __ptext6:
  5217                           	opt stack 0
  5218  013372                     ___ftadd:
  5219                           	opt stack 20
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;incstack = 0
  5223  013372  C08B  F08F         	movff	___ftadd@f1+2,??___ftadd
  5224  013376  0100               	movlb	0	; () banked
  5225  013378  6B90               	clrf	(??___ftadd+1)& (0+255),b
  5226  01337A  6B91               	clrf	(??___ftadd+2)& (0+255),b
  5227  01337C  0100               	movlb	0	; () banked
  5228  01337E  358A               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  5229  013380  0100               	movlb	0	; () banked
  5230  013382  378F               	rlcf	??___ftadd& (0+255),f,b
  5231  013384  E301               	bnc	u14251
  5232  013386  8190               	bsf	(??___ftadd+1)& (0+255),0,b
  5233  013388                     u14251:
  5234  013388  0100               	movlb	0	; () banked
  5235  01338A  518F               	movf	??___ftadd& (0+255),w,b
  5236  01338C  0100               	movlb	0	; () banked
  5237  01338E  6F94               	movwf	___ftadd@exp1& (0+255),b
  5238  013390  C08E  F08F         	movff	___ftadd@f2+2,??___ftadd
  5239  013394  0100               	movlb	0	; () banked
  5240  013396  6B90               	clrf	(??___ftadd+1)& (0+255),b
  5241  013398  6B91               	clrf	(??___ftadd+2)& (0+255),b
  5242  01339A  0100               	movlb	0	; () banked
  5243  01339C  358D               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  5244  01339E  0100               	movlb	0	; () banked
  5245  0133A0  378F               	rlcf	??___ftadd& (0+255),f,b
  5246  0133A2  E301               	bnc	u14261
  5247  0133A4  8190               	bsf	(??___ftadd+1)& (0+255),0,b
  5248  0133A6                     u14261:
  5249  0133A6  0100               	movlb	0	; () banked
  5250  0133A8  518F               	movf	??___ftadd& (0+255),w,b
  5251  0133AA  0100               	movlb	0	; () banked
  5252  0133AC  6F93               	movwf	___ftadd@exp2& (0+255),b
  5253                           
  5254                           ; BSR set to: 0
  5255  0133AE  0100               	movlb	0	; () banked
  5256  0133B0  5194               	movf	___ftadd@exp1& (0+255),w,b
  5257  0133B2  0100               	movlb	0	; () banked
  5258  0133B4  B4D8               	btfsc	status,2,c
  5259  0133B6  D011               	goto	l1732
  5260                           
  5261                           ; BSR set to: 0
  5262  0133B8  0100               	movlb	0	; () banked
  5263  0133BA  5193               	movf	___ftadd@exp2& (0+255),w,b
  5264  0133BC  0100               	movlb	0	; () banked
  5265  0133BE  5D94               	subwf	___ftadd@exp1& (0+255),w,b
  5266  0133C0  B0D8               	btfsc	status,0,c
  5267  0133C2  D012               	goto	l12416
  5268                           
  5269                           ; BSR set to: 0
  5270  0133C4  0100               	movlb	0	; () banked
  5271  0133C6  5194               	movf	___ftadd@exp1& (0+255),w,b
  5272  0133C8  0800               	sublw	0
  5273  0133CA  0100               	movlb	0	; () banked
  5274  0133CC  2593               	addwf	___ftadd@exp2& (0+255),w,b
  5275  0133CE  0100               	movlb	0	; () banked
  5276  0133D0  6F8F               	movwf	??___ftadd& (0+255),b
  5277  0133D2  0E18               	movlw	24
  5278  0133D4  0100               	movlb	0	; () banked
  5279  0133D6  658F               	cpfsgt	??___ftadd& (0+255),b
  5280  0133D8  D007               	goto	l12416
  5281  0133DA                     l1732:
  5282                           
  5283                           ; BSR set to: 0
  5284  0133DA  C08C  F089         	movff	___ftadd@f2,?___ftadd
  5285  0133DE  C08D  F08A         	movff	___ftadd@f2+1,?___ftadd+1
  5286  0133E2  C08E  F08B         	movff	___ftadd@f2+2,?___ftadd+2
  5287  0133E6  0012               	return	
  5288  0133E8                     l12416:
  5289                           
  5290                           ; BSR set to: 0
  5291  0133E8  0100               	movlb	0	; () banked
  5292  0133EA  5193               	movf	___ftadd@exp2& (0+255),w,b
  5293  0133EC  0100               	movlb	0	; () banked
  5294  0133EE  B4D8               	btfsc	status,2,c
  5295  0133F0  D011               	goto	l1736
  5296                           
  5297                           ; BSR set to: 0
  5298  0133F2  0100               	movlb	0	; () banked
  5299  0133F4  5194               	movf	___ftadd@exp1& (0+255),w,b
  5300  0133F6  0100               	movlb	0	; () banked
  5301  0133F8  5D93               	subwf	___ftadd@exp2& (0+255),w,b
  5302  0133FA  B0D8               	btfsc	status,0,c
  5303  0133FC  D012               	goto	l12422
  5304                           
  5305                           ; BSR set to: 0
  5306  0133FE  0100               	movlb	0	; () banked
  5307  013400  5193               	movf	___ftadd@exp2& (0+255),w,b
  5308  013402  0800               	sublw	0
  5309  013404  0100               	movlb	0	; () banked
  5310  013406  2594               	addwf	___ftadd@exp1& (0+255),w,b
  5311  013408  0100               	movlb	0	; () banked
  5312  01340A  6F8F               	movwf	??___ftadd& (0+255),b
  5313  01340C  0E18               	movlw	24
  5314  01340E  0100               	movlb	0	; () banked
  5315  013410  658F               	cpfsgt	??___ftadd& (0+255),b
  5316  013412  D007               	goto	l12422
  5317  013414                     l1736:
  5318                           
  5319                           ; BSR set to: 0
  5320  013414  C089  F089         	movff	___ftadd@f1,?___ftadd
  5321  013418  C08A  F08A         	movff	___ftadd@f1+1,?___ftadd+1
  5322  01341C  C08B  F08B         	movff	___ftadd@f1+2,?___ftadd+2
  5323  013420  0012               	return	
  5324  013422                     l12422:
  5325                           
  5326                           ; BSR set to: 0
  5327  013422  0E06               	movlw	6
  5328  013424  0100               	movlb	0	; () banked
  5329  013426  6F92               	movwf	___ftadd@sign& (0+255),b
  5330                           
  5331                           ; BSR set to: 0
  5332  013428  0100               	movlb	0	; () banked
  5333  01342A  AF8B               	btfss	(___ftadd@f1+2)& (0+255),7,b
  5334  01342C  D002               	goto	l12428
  5335                           
  5336                           ; BSR set to: 0
  5337  01342E  0100               	movlb	0	; () banked
  5338  013430  8F92               	bsf	___ftadd@sign& (0+255),7,b
  5339  013432                     l12428:
  5340                           
  5341                           ; BSR set to: 0
  5342  013432  0100               	movlb	0	; () banked
  5343  013434  AF8E               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5344  013436  D002               	goto	l1738
  5345                           
  5346                           ; BSR set to: 0
  5347  013438  0100               	movlb	0	; () banked
  5348  01343A  8D92               	bsf	___ftadd@sign& (0+255),6,b
  5349  01343C                     l1738:
  5350                           
  5351                           ; BSR set to: 0
  5352  01343C  0100               	movlb	0	; () banked
  5353  01343E  8F8A               	bsf	(___ftadd@f1+1)& (0+255),7,b
  5354                           
  5355                           ; BSR set to: 0
  5356  013440  0EFF               	movlw	255
  5357  013442  0100               	movlb	0	; () banked
  5358  013444  1789               	andwf	___ftadd@f1& (0+255),f,b
  5359  013446  0EFF               	movlw	255
  5360  013448  0100               	movlb	0	; () banked
  5361  01344A  178A               	andwf	(___ftadd@f1+1)& (0+255),f,b
  5362  01344C  0E00               	movlw	0
  5363  01344E  0100               	movlb	0	; () banked
  5364  013450  178B               	andwf	(___ftadd@f1+2)& (0+255),f,b
  5365  013452  0100               	movlb	0	; () banked
  5366  013454  8F8D               	bsf	(___ftadd@f2+1)& (0+255),7,b
  5367                           
  5368                           ; BSR set to: 0
  5369  013456  0EFF               	movlw	255
  5370  013458  0100               	movlb	0	; () banked
  5371  01345A  178C               	andwf	___ftadd@f2& (0+255),f,b
  5372  01345C  0EFF               	movlw	255
  5373  01345E  0100               	movlb	0	; () banked
  5374  013460  178D               	andwf	(___ftadd@f2+1)& (0+255),f,b
  5375  013462  0E00               	movlw	0
  5376  013464  0100               	movlb	0	; () banked
  5377  013466  178E               	andwf	(___ftadd@f2+2)& (0+255),f,b
  5378                           
  5379                           ; BSR set to: 0
  5380  013468  0100               	movlb	0	; () banked
  5381  01346A  5193               	movf	___ftadd@exp2& (0+255),w,b
  5382  01346C  0100               	movlb	0	; () banked
  5383  01346E  5D94               	subwf	___ftadd@exp1& (0+255),w,b
  5384  013470  B0D8               	btfsc	status,0,c
  5385  013472  D025               	goto	l12448
  5386  013474                     l12438:
  5387                           
  5388                           ; BSR set to: 0
  5389  013474  0100               	movlb	0	; () banked
  5390  013476  90D8               	bcf	status,0,c
  5391  013478  378C               	rlcf	___ftadd@f2& (0+255),f,b
  5392  01347A  378D               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  5393  01347C  378E               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  5394  01347E  0100               	movlb	0	; () banked
  5395  013480  0793               	decf	___ftadd@exp2& (0+255),f,b
  5396                           
  5397                           ; BSR set to: 0
  5398  013482  0100               	movlb	0	; () banked
  5399  013484  5194               	movf	___ftadd@exp1& (0+255),w,b
  5400  013486  0100               	movlb	0	; () banked
  5401  013488  1993               	xorwf	___ftadd@exp2& (0+255),w,b
  5402  01348A  B4D8               	btfsc	status,2,c
  5403  01348C  D011               	goto	l12446
  5404                           
  5405                           ; BSR set to: 0
  5406  01348E  0100               	movlb	0	; () banked
  5407  013490  0792               	decf	___ftadd@sign& (0+255),f,b
  5408  013492  C092  F08F         	movff	___ftadd@sign,??___ftadd
  5409  013496  0E07               	movlw	7
  5410  013498  0100               	movlb	0	; () banked
  5411  01349A  178F               	andwf	??___ftadd& (0+255),f,b
  5412  01349C  B4D8               	btfsc	status,2,c
  5413  01349E  D008               	goto	l12446
  5414  0134A0  D7E9               	goto	l12438
  5415  0134A2                     l12444:
  5416                           
  5417                           ; BSR set to: 0
  5418  0134A2  0100               	movlb	0	; () banked
  5419  0134A4  90D8               	bcf	status,0,c
  5420  0134A6  338B               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  5421  0134A8  338A               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  5422  0134AA  3389               	rrcf	___ftadd@f1& (0+255),f,b
  5423  0134AC  0100               	movlb	0	; () banked
  5424  0134AE  2B94               	incf	___ftadd@exp1& (0+255),f,b
  5425  0134B0                     l12446:
  5426                           
  5427                           ; BSR set to: 0
  5428  0134B0  0100               	movlb	0	; () banked
  5429  0134B2  5193               	movf	___ftadd@exp2& (0+255),w,b
  5430  0134B4  0100               	movlb	0	; () banked
  5431  0134B6  1994               	xorwf	___ftadd@exp1& (0+255),w,b
  5432  0134B8  B4D8               	btfsc	status,2,c
  5433  0134BA  D02B               	goto	l1747
  5434  0134BC  D7F2               	goto	l12444
  5435  0134BE                     l12448:
  5436                           
  5437                           ; BSR set to: 0
  5438  0134BE  0100               	movlb	0	; () banked
  5439  0134C0  5194               	movf	___ftadd@exp1& (0+255),w,b
  5440  0134C2  0100               	movlb	0	; () banked
  5441  0134C4  5D93               	subwf	___ftadd@exp2& (0+255),w,b
  5442  0134C6  B0D8               	btfsc	status,0,c
  5443  0134C8  D024               	goto	l1747
  5444  0134CA                     l12450:
  5445                           
  5446                           ; BSR set to: 0
  5447  0134CA  0100               	movlb	0	; () banked
  5448  0134CC  90D8               	bcf	status,0,c
  5449  0134CE  3789               	rlcf	___ftadd@f1& (0+255),f,b
  5450  0134D0  378A               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  5451  0134D2  378B               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  5452  0134D4  0100               	movlb	0	; () banked
  5453  0134D6  0794               	decf	___ftadd@exp1& (0+255),f,b
  5454                           
  5455                           ; BSR set to: 0
  5456  0134D8  0100               	movlb	0	; () banked
  5457  0134DA  5194               	movf	___ftadd@exp1& (0+255),w,b
  5458  0134DC  0100               	movlb	0	; () banked
  5459  0134DE  1993               	xorwf	___ftadd@exp2& (0+255),w,b
  5460  0134E0  B4D8               	btfsc	status,2,c
  5461  0134E2  D011               	goto	l12458
  5462                           
  5463                           ; BSR set to: 0
  5464  0134E4  0100               	movlb	0	; () banked
  5465  0134E6  0792               	decf	___ftadd@sign& (0+255),f,b
  5466  0134E8  C092  F08F         	movff	___ftadd@sign,??___ftadd
  5467  0134EC  0E07               	movlw	7
  5468  0134EE  0100               	movlb	0	; () banked
  5469  0134F0  178F               	andwf	??___ftadd& (0+255),f,b
  5470  0134F2  B4D8               	btfsc	status,2,c
  5471  0134F4  D008               	goto	l12458
  5472  0134F6  D7E9               	goto	l12450
  5473  0134F8                     l12456:
  5474                           
  5475                           ; BSR set to: 0
  5476  0134F8  0100               	movlb	0	; () banked
  5477  0134FA  90D8               	bcf	status,0,c
  5478  0134FC  338E               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  5479  0134FE  338D               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  5480  013500  338C               	rrcf	___ftadd@f2& (0+255),f,b
  5481  013502  0100               	movlb	0	; () banked
  5482  013504  2B93               	incf	___ftadd@exp2& (0+255),f,b
  5483  013506                     l12458:
  5484                           
  5485                           ; BSR set to: 0
  5486  013506  0100               	movlb	0	; () banked
  5487  013508  5193               	movf	___ftadd@exp2& (0+255),w,b
  5488  01350A  0100               	movlb	0	; () banked
  5489  01350C  1994               	xorwf	___ftadd@exp1& (0+255),w,b
  5490  01350E  A4D8               	btfss	status,2,c
  5491  013510  D7F3               	goto	l12456
  5492  013512                     l1747:
  5493                           
  5494                           ; BSR set to: 0
  5495  013512  0100               	movlb	0	; () banked
  5496  013514  AF92               	btfss	___ftadd@sign& (0+255),7,b
  5497  013516  D012               	goto	l1756
  5498                           
  5499                           ; BSR set to: 0
  5500  013518  0EFF               	movlw	255
  5501  01351A  0100               	movlb	0	; () banked
  5502  01351C  1B89               	xorwf	___ftadd@f1& (0+255),f,b
  5503  01351E  0EFF               	movlw	255
  5504  013520  0100               	movlb	0	; () banked
  5505  013522  1B8A               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  5506  013524  0EFF               	movlw	255
  5507  013526  0100               	movlb	0	; () banked
  5508  013528  1B8B               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  5509  01352A  0E01               	movlw	1
  5510  01352C  0100               	movlb	0	; () banked
  5511  01352E  2789               	addwf	___ftadd@f1& (0+255),f,b
  5512  013530  0E00               	movlw	0
  5513  013532  0100               	movlb	0	; () banked
  5514  013534  238A               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  5515  013536  0E00               	movlw	0
  5516  013538  0100               	movlb	0	; () banked
  5517  01353A  238B               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  5518  01353C                     l1756:
  5519                           
  5520                           ; BSR set to: 0
  5521  01353C  0100               	movlb	0	; () banked
  5522  01353E  AD92               	btfss	___ftadd@sign& (0+255),6,b
  5523  013540  D012               	goto	l12464
  5524                           
  5525                           ; BSR set to: 0
  5526  013542  0EFF               	movlw	255
  5527  013544  0100               	movlb	0	; () banked
  5528  013546  1B8C               	xorwf	___ftadd@f2& (0+255),f,b
  5529  013548  0EFF               	movlw	255
  5530  01354A  0100               	movlb	0	; () banked
  5531  01354C  1B8D               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5532  01354E  0EFF               	movlw	255
  5533  013550  0100               	movlb	0	; () banked
  5534  013552  1B8E               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5535  013554  0E01               	movlw	1
  5536  013556  0100               	movlb	0	; () banked
  5537  013558  278C               	addwf	___ftadd@f2& (0+255),f,b
  5538  01355A  0E00               	movlw	0
  5539  01355C  0100               	movlb	0	; () banked
  5540  01355E  238D               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5541  013560  0E00               	movlw	0
  5542  013562  0100               	movlb	0	; () banked
  5543  013564  238E               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5544  013566                     l12464:
  5545                           
  5546                           ; BSR set to: 0
  5547  013566  0E00               	movlw	0
  5548  013568  0100               	movlb	0	; () banked
  5549  01356A  6F92               	movwf	___ftadd@sign& (0+255),b
  5550                           
  5551                           ; BSR set to: 0
  5552  01356C  0100               	movlb	0	; () banked
  5553  01356E  5189               	movf	___ftadd@f1& (0+255),w,b
  5554  013570  0100               	movlb	0	; () banked
  5555  013572  278C               	addwf	___ftadd@f2& (0+255),f,b
  5556  013574  0100               	movlb	0	; () banked
  5557  013576  518A               	movf	(___ftadd@f1+1)& (0+255),w,b
  5558  013578  0100               	movlb	0	; () banked
  5559  01357A  238D               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5560  01357C  0100               	movlb	0	; () banked
  5561  01357E  518B               	movf	(___ftadd@f1+2)& (0+255),w,b
  5562  013580  0100               	movlb	0	; () banked
  5563  013582  238E               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5564                           
  5565                           ; BSR set to: 0
  5566  013584  0100               	movlb	0	; () banked
  5567  013586  AF8E               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5568  013588  D015               	goto	l12474
  5569                           
  5570                           ; BSR set to: 0
  5571  01358A  0EFF               	movlw	255
  5572  01358C  0100               	movlb	0	; () banked
  5573  01358E  1B8C               	xorwf	___ftadd@f2& (0+255),f,b
  5574  013590  0EFF               	movlw	255
  5575  013592  0100               	movlb	0	; () banked
  5576  013594  1B8D               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5577  013596  0EFF               	movlw	255
  5578  013598  0100               	movlb	0	; () banked
  5579  01359A  1B8E               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5580  01359C  0E01               	movlw	1
  5581  01359E  0100               	movlb	0	; () banked
  5582  0135A0  278C               	addwf	___ftadd@f2& (0+255),f,b
  5583  0135A2  0E00               	movlw	0
  5584  0135A4  0100               	movlb	0	; () banked
  5585  0135A6  238D               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5586  0135A8  0E00               	movlw	0
  5587  0135AA  0100               	movlb	0	; () banked
  5588  0135AC  238E               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5589                           
  5590                           ; BSR set to: 0
  5591  0135AE  0E01               	movlw	1
  5592  0135B0  0100               	movlb	0	; () banked
  5593  0135B2  6F92               	movwf	___ftadd@sign& (0+255),b
  5594  0135B4                     l12474:
  5595                           
  5596                           ; BSR set to: 0
  5597  0135B4  C08C  F081         	movff	___ftadd@f2,___ftpack@arg
  5598  0135B8  C08D  F082         	movff	___ftadd@f2+1,___ftpack@arg+1
  5599  0135BC  C08E  F083         	movff	___ftadd@f2+2,___ftpack@arg+2
  5600  0135C0  C094  F084         	movff	___ftadd@exp1,___ftpack@exp
  5601  0135C4  C092  F085         	movff	___ftadd@sign,___ftpack@sign
  5602  0135C8  ECD5  F0A8         	call	___ftpack	;wreg free
  5603  0135CC  C081  F089         	movff	?___ftpack,?___ftadd
  5604  0135D0  C082  F08A         	movff	?___ftpack+1,?___ftadd+1
  5605  0135D4  C083  F08B         	movff	?___ftpack+2,?___ftadd+2
  5606  0135D8  0012               	return	
  5607  0135DA                     __end_of___ftadd:
  5608                           	opt stack 0
  5609                           tblptru	equ	0xFF8
  5610                           tblptrh	equ	0xFF7
  5611                           tblptrl	equ	0xFF6
  5612                           tablat	equ	0xFF5
  5613                           prodh	equ	0xFF4
  5614                           prodl	equ	0xFF3
  5615                           postinc0	equ	0xFEE
  5616                           plusw0	equ	0xFEB
  5617                           wreg	equ	0xFE8
  5618                           indf2	equ	0xFDF
  5619                           postinc2	equ	0xFDE
  5620                           postdec2	equ	0xFDD
  5621                           plusw2	equ	0xFDB
  5622                           fsr2h	equ	0xFDA
  5623                           fsr2l	equ	0xFD9
  5624                           status	equ	0xFD8
  5625                           
  5626 ;; *************** function ___altoft *****************
  5627 ;; Defined at:
  5628 ;;		line 42 in file "/opt/microchip/xc8/v1.35/sources/common/altoft.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  c               4   84[BANK0 ] long 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  sign            1   93[BANK0 ] unsigned char 
  5633 ;;  exp             1   92[BANK0 ] unsigned char 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  3   84[BANK0 ] float 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5643 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5645 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5646 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5647 ;;Total ram usage:       10 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    8
  5650 ;; This function calls:
  5651 ;;		___ftpack
  5652 ;; This function is called by:
  5653 ;;		_floor
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text7
  5658  015CC6                     __ptext7:
  5659                           	opt stack 0
  5660  015CC6                     ___altoft:
  5661                           	opt stack 20
  5662                           
  5663                           ;incstack = 0
  5664  015CC6  0E00               	movlw	0
  5665  015CC8  0100               	movlb	0	; () banked
  5666  015CCA  6FBD               	movwf	___altoft@sign& (0+255),b
  5667  015CCC  0E8E               	movlw	142
  5668  015CCE  0100               	movlb	0	; () banked
  5669  015CD0  6FBC               	movwf	___altoft@exp& (0+255),b
  5670                           
  5671                           ; BSR set to: 0
  5672  015CD2  0100               	movlb	0	; () banked
  5673  015CD4  AFB7               	btfss	(___altoft@c+3)& (0+255),7,b
  5674  015CD6  D015               	goto	l12402
  5675                           
  5676                           ; BSR set to: 0
  5677  015CD8  0100               	movlb	0	; () banked
  5678  015CDA  1FB7               	comf	(___altoft@c+3)& (0+255),f,b
  5679  015CDC  1FB6               	comf	(___altoft@c+2)& (0+255),f,b
  5680  015CDE  1FB5               	comf	(___altoft@c+1)& (0+255),f,b
  5681  015CE0  6DB4               	negf	___altoft@c& (0+255),b
  5682  015CE2  0E00               	movlw	0
  5683  015CE4  23B5               	addwfc	(___altoft@c+1)& (0+255),f,b
  5684  015CE6  23B6               	addwfc	(___altoft@c+2)& (0+255),f,b
  5685  015CE8  23B7               	addwfc	(___altoft@c+3)& (0+255),f,b
  5686                           
  5687                           ; BSR set to: 0
  5688  015CEA  0E01               	movlw	1
  5689  015CEC  0100               	movlb	0	; () banked
  5690  015CEE  6FBD               	movwf	___altoft@sign& (0+255),b
  5691                           
  5692                           ; BSR set to: 0
  5693  015CF0  D008               	goto	l12402
  5694  015CF2                     l12400:
  5695                           
  5696                           ; BSR set to: 0
  5697  015CF2  0100               	movlb	0	; () banked
  5698  015CF4  90D8               	bcf	status,0,c
  5699  015CF6  33B7               	rrcf	(___altoft@c+3)& (0+255),f,b
  5700  015CF8  33B6               	rrcf	(___altoft@c+2)& (0+255),f,b
  5701  015CFA  33B5               	rrcf	(___altoft@c+1)& (0+255),f,b
  5702  015CFC  33B4               	rrcf	___altoft@c& (0+255),f,b
  5703  015CFE  0100               	movlb	0	; () banked
  5704  015D00  2BBC               	incf	___altoft@exp& (0+255),f,b
  5705  015D02                     l12402:
  5706                           
  5707                           ; BSR set to: 0
  5708  015D02  0E00               	movlw	0
  5709  015D04  0100               	movlb	0	; () banked
  5710  015D06  15B4               	andwf	___altoft@c& (0+255),w,b
  5711  015D08  0100               	movlb	0	; () banked
  5712  015D0A  6FB8               	movwf	??___altoft& (0+255),b
  5713  015D0C  0E00               	movlw	0
  5714  015D0E  0100               	movlb	0	; () banked
  5715  015D10  15B5               	andwf	(___altoft@c+1)& (0+255),w,b
  5716  015D12  0100               	movlb	0	; () banked
  5717  015D14  6FB9               	movwf	(??___altoft+1)& (0+255),b
  5718  015D16  0E00               	movlw	0
  5719  015D18  0100               	movlb	0	; () banked
  5720  015D1A  15B6               	andwf	(___altoft@c+2)& (0+255),w,b
  5721  015D1C  0100               	movlb	0	; () banked
  5722  015D1E  6FBA               	movwf	(??___altoft+2)& (0+255),b
  5723  015D20  0EFF               	movlw	255
  5724  015D22  0100               	movlb	0	; () banked
  5725  015D24  15B7               	andwf	(___altoft@c+3)& (0+255),w,b
  5726  015D26  0100               	movlb	0	; () banked
  5727  015D28  6FBB               	movwf	(??___altoft+3)& (0+255),b
  5728  015D2A  0100               	movlb	0	; () banked
  5729  015D2C  51B8               	movf	??___altoft& (0+255),w,b
  5730  015D2E  0100               	movlb	0	; () banked
  5731  015D30  11B9               	iorwf	(??___altoft+1)& (0+255),w,b
  5732  015D32  0100               	movlb	0	; () banked
  5733  015D34  11BA               	iorwf	(??___altoft+2)& (0+255),w,b
  5734  015D36  0100               	movlb	0	; () banked
  5735  015D38  11BB               	iorwf	(??___altoft+3)& (0+255),w,b
  5736  015D3A  A4D8               	btfss	status,2,c
  5737  015D3C  D7DA               	goto	l12400
  5738                           
  5739                           ; BSR set to: 0
  5740                           
  5741                           ; BSR set to: 0
  5742  015D3E  C0B4  F081         	movff	___altoft@c,___ftpack@arg
  5743  015D42  C0B5  F082         	movff	___altoft@c+1,___ftpack@arg+1
  5744  015D46  C0B6  F083         	movff	___altoft@c+2,___ftpack@arg+2
  5745  015D4A  C0BC  F084         	movff	___altoft@exp,___ftpack@exp
  5746  015D4E  C0BD  F085         	movff	___altoft@sign,___ftpack@sign
  5747  015D52  ECD5  F0A8         	call	___ftpack	;wreg free
  5748  015D56  C081  F0B4         	movff	?___ftpack,?___altoft
  5749  015D5A  C082  F0B5         	movff	?___ftpack+1,?___altoft+1
  5750  015D5E  C083  F0B6         	movff	?___ftpack+2,?___altoft+2
  5751  015D62  0012               	return	
  5752  015D64                     __end_of___altoft:
  5753                           	opt stack 0
  5754                           tblptru	equ	0xFF8
  5755                           tblptrh	equ	0xFF7
  5756                           tblptrl	equ	0xFF6
  5757                           tablat	equ	0xFF5
  5758                           prodh	equ	0xFF4
  5759                           prodl	equ	0xFF3
  5760                           postinc0	equ	0xFEE
  5761                           plusw0	equ	0xFEB
  5762                           wreg	equ	0xFE8
  5763                           indf2	equ	0xFDF
  5764                           postinc2	equ	0xFDE
  5765                           postdec2	equ	0xFDD
  5766                           plusw2	equ	0xFDB
  5767                           fsr2h	equ	0xFDA
  5768                           fsr2l	equ	0xFD9
  5769                           status	equ	0xFD8
  5770                           
  5771 ;; *************** function _encode_uint16_variable *****************
  5772 ;; Defined at:
  5773 ;;		line 60 in file "../../muta/muta_messages.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
  5776 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
  5777 ;;  var             9   35[BANK0 ] struct .
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      unsigned char 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5789 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5792 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5793 ;;Total ram usage:       11 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    7
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_send_initial_update
  5800 ;;		_send_periodical_update
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text8
  5805  015D64                     __ptext8:
  5806                           	opt stack 0
  5807  015D64                     _encode_uint16_variable:
  5808                           	opt stack 22
  5809                           
  5810                           ;muta_messages.c: 62: *(buffer++) = var.label[0];
  5811                           
  5812                           ;incstack = 0
  5813  015D64  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5814  015D68  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5815  015D6C  C083  FFDF         	movff	encode_uint16_variable@var,indf2
  5816  015D70  0100               	movlb	0	; () banked
  5817  015D72  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5818  015D74  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;muta_messages.c: 63: *(buffer++) = var.label[1];
  5822  015D76  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5823  015D7A  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5824  015D7E  C084  FFDF         	movff	encode_uint16_variable@var+1,indf2
  5825  015D82  0100               	movlb	0	; () banked
  5826  015D84  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5827  015D86  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;muta_messages.c: 64: *(buffer++) = var.label[2];
  5831  015D88  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5832  015D8C  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5833  015D90  C085  FFDF         	movff	encode_uint16_variable@var+2,indf2
  5834                           
  5835                           ; BSR set to: 0
  5836  015D94  0100               	movlb	0	; () banked
  5837  015D96  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5838  015D98  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;muta_messages.c: 65: var.type = 1 << 1;
  5842  015D9A  0E02               	movlw	2
  5843  015D9C  0100               	movlb	0	; () banked
  5844  015D9E  6F86               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;muta_messages.c: 66: if (var.writable)
  5848  015DA0  0100               	movlb	0	; () banked
  5849  015DA2  518A               	movf	(encode_uint16_variable@var+7)& (0+255),w,b
  5850  015DA4  B4D8               	btfsc	status,2,c
  5851  015DA6  D004               	goto	l1294
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;muta_messages.c: 67: {
  5855                           ;muta_messages.c: 68: var.type = var.type + 1;
  5856  015DA8  0100               	movlb	0	; () banked
  5857  015DAA  2986               	incf	(encode_uint16_variable@var+3)& (0+255),w,b
  5858  015DAC  0100               	movlb	0	; () banked
  5859  015DAE  6F86               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  5860  015DB0                     l1294:
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;muta_messages.c: 69: }
  5864                           ;muta_messages.c: 70: var.type = var.type << 4;
  5865  015DB0  0100               	movlb	0	; () banked
  5866  015DB2  3986               	swapf	(encode_uint16_variable@var+3)& (0+255),w,b
  5867  015DB4  0BF0               	andlw	240
  5868  015DB6  0100               	movlb	0	; () banked
  5869  015DB8  6F86               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  5870                           
  5871                           ;muta_messages.c: 71: var.type = var.type + var.unit;
  5872  015DBA  0100               	movlb	0	; () banked
  5873  015DBC  5186               	movf	(encode_uint16_variable@var+3)& (0+255),w,b
  5874  015DBE  0100               	movlb	0	; () banked
  5875  015DC0  2589               	addwf	(encode_uint16_variable@var+6)& (0+255),w,b
  5876  015DC2  0100               	movlb	0	; () banked
  5877  015DC4  6F86               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;muta_messages.c: 72: *(buffer++) = var.type;
  5881  015DC6  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5882  015DCA  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5883  015DCE  C086  FFDF         	movff	encode_uint16_variable@var+3,indf2
  5884                           
  5885                           ; BSR set to: 0
  5886  015DD2  0100               	movlb	0	; () banked
  5887  015DD4  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5888  015DD6  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;muta_messages.c: 73: *(buffer++) = var.value_byte2;
  5892  015DD8  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5893  015DDC  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5894  015DE0  C088  FFDF         	movff	encode_uint16_variable@var+5,indf2
  5895                           
  5896                           ; BSR set to: 0
  5897  015DE4  0100               	movlb	0	; () banked
  5898  015DE6  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5899  015DE8  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;muta_messages.c: 74: *(buffer++) = var.value_byte1;
  5903  015DEA  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5904  015DEE  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5905  015DF2  C087  FFDF         	movff	encode_uint16_variable@var+4,indf2
  5906                           
  5907                           ; BSR set to: 0
  5908  015DF6  0100               	movlb	0	; () banked
  5909  015DF8  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5910  015DFA  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;muta_messages.c: 75: return 6;
  5914  015DFC  0E06               	movlw	6
  5915  015DFE  0012               	return	
  5916  015E00                     __end_of_encode_uint16_variable:
  5917                           	opt stack 0
  5918                           tblptru	equ	0xFF8
  5919                           tblptrh	equ	0xFF7
  5920                           tblptrl	equ	0xFF6
  5921                           tablat	equ	0xFF5
  5922                           prodh	equ	0xFF4
  5923                           prodl	equ	0xFF3
  5924                           postinc0	equ	0xFEE
  5925                           plusw0	equ	0xFEB
  5926                           wreg	equ	0xFE8
  5927                           indf2	equ	0xFDF
  5928                           postinc2	equ	0xFDE
  5929                           postdec2	equ	0xFDD
  5930                           plusw2	equ	0xFDB
  5931                           fsr2h	equ	0xFDA
  5932                           fsr2l	equ	0xFD9
  5933                           status	equ	0xFD8
  5934                           
  5935 ;; *************** function _encode_ufixed16_variable *****************
  5936 ;; Defined at:
  5937 ;;		line 78 in file "../../muta/muta_messages.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
  5940 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
  5941 ;;  var             9   35[BANK0 ] struct .
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;		None
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      unsigned char 
  5946 ;; Registers used:
  5947 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5953 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5956 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5957 ;;Total ram usage:       11 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; Hardware stack levels required when called:    7
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_send_initial_update
  5964 ;;		_send_periodical_update
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           	psect	text9
  5969  015E00                     __ptext9:
  5970                           	opt stack 0
  5971  015E00                     _encode_ufixed16_variable:
  5972                           	opt stack 22
  5973                           
  5974                           ;muta_messages.c: 80: *(buffer++) = var.label[0];
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;incstack = 0
  5978  015E00  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  5979  015E04  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  5980  015E08  C083  FFDF         	movff	encode_ufixed16_variable@var,indf2
  5981  015E0C  0100               	movlb	0	; () banked
  5982  015E0E  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  5983  015E10  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;muta_messages.c: 81: *(buffer++) = var.label[1];
  5987  015E12  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  5988  015E16  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  5989  015E1A  C084  FFDF         	movff	encode_ufixed16_variable@var+1,indf2
  5990  015E1E  0100               	movlb	0	; () banked
  5991  015E20  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  5992  015E22  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;muta_messages.c: 82: *(buffer++) = var.label[2];
  5996  015E24  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  5997  015E28  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  5998  015E2C  C085  FFDF         	movff	encode_ufixed16_variable@var+2,indf2
  5999                           
  6000                           ; BSR set to: 0
  6001  015E30  0100               	movlb	0	; () banked
  6002  015E32  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  6003  015E34  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;muta_messages.c: 83: var.type = 2 << 1;
  6007  015E36  0E04               	movlw	4
  6008  015E38  0100               	movlb	0	; () banked
  6009  015E3A  6F86               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;muta_messages.c: 84: if (var.writable)
  6013  015E3C  0100               	movlb	0	; () banked
  6014  015E3E  518A               	movf	(encode_ufixed16_variable@var+7)& (0+255),w,b
  6015  015E40  B4D8               	btfsc	status,2,c
  6016  015E42  D004               	goto	l1298
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;muta_messages.c: 85: {
  6020                           ;muta_messages.c: 86: var.type = var.type + 1;
  6021  015E44  0100               	movlb	0	; () banked
  6022  015E46  2986               	incf	(encode_ufixed16_variable@var+3)& (0+255),w,b
  6023  015E48  0100               	movlb	0	; () banked
  6024  015E4A  6F86               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
  6025  015E4C                     l1298:
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;muta_messages.c: 87: }
  6029                           ;muta_messages.c: 88: var.type = var.type << 4;
  6030  015E4C  0100               	movlb	0	; () banked
  6031  015E4E  3986               	swapf	(encode_ufixed16_variable@var+3)& (0+255),w,b
  6032  015E50  0BF0               	andlw	240
  6033  015E52  0100               	movlb	0	; () banked
  6034  015E54  6F86               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
  6035                           
  6036                           ;muta_messages.c: 89: var.type = var.type + var.unit;
  6037  015E56  0100               	movlb	0	; () banked
  6038  015E58  5186               	movf	(encode_ufixed16_variable@var+3)& (0+255),w,b
  6039  015E5A  0100               	movlb	0	; () banked
  6040  015E5C  2589               	addwf	(encode_ufixed16_variable@var+6)& (0+255),w,b
  6041  015E5E  0100               	movlb	0	; () banked
  6042  015E60  6F86               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;muta_messages.c: 90: *(buffer++) = var.type;
  6046  015E62  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  6047  015E66  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  6048  015E6A  C086  FFDF         	movff	encode_ufixed16_variable@var+3,indf2
  6049                           
  6050                           ; BSR set to: 0
  6051  015E6E  0100               	movlb	0	; () banked
  6052  015E70  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  6053  015E72  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;muta_messages.c: 91: *(buffer++) = var.value_byte2;
  6057  015E74  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  6058  015E78  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  6059  015E7C  C088  FFDF         	movff	encode_ufixed16_variable@var+5,indf2
  6060                           
  6061                           ; BSR set to: 0
  6062  015E80  0100               	movlb	0	; () banked
  6063  015E82  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  6064  015E84  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;muta_messages.c: 92: *(buffer++) = var.value_byte1;
  6068  015E86  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  6069  015E8A  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  6070  015E8E  C087  FFDF         	movff	encode_ufixed16_variable@var+4,indf2
  6071                           
  6072                           ; BSR set to: 0
  6073  015E92  0100               	movlb	0	; () banked
  6074  015E94  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  6075  015E96  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;muta_messages.c: 93: return 6;
  6079  015E98  0E06               	movlw	6
  6080  015E9A  0012               	return	
  6081  015E9C                     __end_of_encode_ufixed16_variable:
  6082                           	opt stack 0
  6083                           tblptru	equ	0xFF8
  6084                           tblptrh	equ	0xFF7
  6085                           tblptrl	equ	0xFF6
  6086                           tablat	equ	0xFF5
  6087                           prodh	equ	0xFF4
  6088                           prodl	equ	0xFF3
  6089                           postinc0	equ	0xFEE
  6090                           plusw0	equ	0xFEB
  6091                           wreg	equ	0xFE8
  6092                           indf2	equ	0xFDF
  6093                           postinc2	equ	0xFDE
  6094                           postdec2	equ	0xFDD
  6095                           plusw2	equ	0xFDB
  6096                           fsr2h	equ	0xFDA
  6097                           fsr2l	equ	0xFD9
  6098                           status	equ	0xFD8
  6099                           
  6100 ;; *************** function ___lltoft *****************
  6101 ;; Defined at:
  6102 ;;		line 35 in file "/opt/microchip/xc8/v1.35/sources/common/lltoft.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  c               4   45[BANK0 ] unsigned long 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  exp             1   53[BANK0 ] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  3   45[BANK0 ] float 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6116 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6120 ;;Total ram usage:        9 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    8
  6123 ;; This function calls:
  6124 ;;		___ftpack
  6125 ;; This function is called by:
  6126 ;;		_send_initial_update
  6127 ;;		_send_periodical_update
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text10
  6132  016150                     __ptext10:
  6133                           	opt stack 0
  6134  016150                     ___lltoft:
  6135                           	opt stack 21
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;incstack = 0
  6139  016150  0E8E               	movlw	142
  6140  016152  0100               	movlb	0	; () banked
  6141  016154  6F95               	movwf	___lltoft@exp& (0+255),b
  6142  016156  D008               	goto	l13294
  6143  016158                     l13292:
  6144                           
  6145                           ; BSR set to: 0
  6146  016158  0100               	movlb	0	; () banked
  6147  01615A  90D8               	bcf	status,0,c
  6148  01615C  3390               	rrcf	(___lltoft@c+3)& (0+255),f,b
  6149  01615E  338F               	rrcf	(___lltoft@c+2)& (0+255),f,b
  6150  016160  338E               	rrcf	(___lltoft@c+1)& (0+255),f,b
  6151  016162  338D               	rrcf	___lltoft@c& (0+255),f,b
  6152  016164  0100               	movlb	0	; () banked
  6153  016166  2B95               	incf	___lltoft@exp& (0+255),f,b
  6154  016168                     l13294:
  6155                           
  6156                           ; BSR set to: 0
  6157  016168  0E00               	movlw	0
  6158  01616A  0100               	movlb	0	; () banked
  6159  01616C  158D               	andwf	___lltoft@c& (0+255),w,b
  6160  01616E  0100               	movlb	0	; () banked
  6161  016170  6F91               	movwf	??___lltoft& (0+255),b
  6162  016172  0E00               	movlw	0
  6163  016174  0100               	movlb	0	; () banked
  6164  016176  158E               	andwf	(___lltoft@c+1)& (0+255),w,b
  6165  016178  0100               	movlb	0	; () banked
  6166  01617A  6F92               	movwf	(??___lltoft+1)& (0+255),b
  6167  01617C  0E00               	movlw	0
  6168  01617E  0100               	movlb	0	; () banked
  6169  016180  158F               	andwf	(___lltoft@c+2)& (0+255),w,b
  6170  016182  0100               	movlb	0	; () banked
  6171  016184  6F93               	movwf	(??___lltoft+2)& (0+255),b
  6172  016186  0EFF               	movlw	255
  6173  016188  0100               	movlb	0	; () banked
  6174  01618A  1590               	andwf	(___lltoft@c+3)& (0+255),w,b
  6175  01618C  0100               	movlb	0	; () banked
  6176  01618E  6F94               	movwf	(??___lltoft+3)& (0+255),b
  6177  016190  0100               	movlb	0	; () banked
  6178  016192  5191               	movf	??___lltoft& (0+255),w,b
  6179  016194  0100               	movlb	0	; () banked
  6180  016196  1192               	iorwf	(??___lltoft+1)& (0+255),w,b
  6181  016198  0100               	movlb	0	; () banked
  6182  01619A  1193               	iorwf	(??___lltoft+2)& (0+255),w,b
  6183  01619C  0100               	movlb	0	; () banked
  6184  01619E  1194               	iorwf	(??___lltoft+3)& (0+255),w,b
  6185  0161A0  A4D8               	btfss	status,2,c
  6186  0161A2  D7DA               	goto	l13292
  6187                           
  6188                           ; BSR set to: 0
  6189                           
  6190                           ; BSR set to: 0
  6191  0161A4  C08D  F081         	movff	___lltoft@c,___ftpack@arg
  6192  0161A8  C08E  F082         	movff	___lltoft@c+1,___ftpack@arg+1
  6193  0161AC  C08F  F083         	movff	___lltoft@c+2,___ftpack@arg+2
  6194  0161B0  C095  F084         	movff	___lltoft@exp,___ftpack@exp
  6195  0161B4  0E00               	movlw	0
  6196  0161B6  0100               	movlb	0	; () banked
  6197  0161B8  6F85               	movwf	___ftpack@sign& (0+255),b
  6198  0161BA  ECD5  F0A8         	call	___ftpack	;wreg free
  6199  0161BE  C081  F08D         	movff	?___ftpack,?___lltoft
  6200  0161C2  C082  F08E         	movff	?___ftpack+1,?___lltoft+1
  6201  0161C6  C083  F08F         	movff	?___ftpack+2,?___lltoft+2
  6202  0161CA  0012               	return	
  6203  0161CC                     __end_of___lltoft:
  6204                           	opt stack 0
  6205                           tblptru	equ	0xFF8
  6206                           tblptrh	equ	0xFF7
  6207                           tblptrl	equ	0xFF6
  6208                           tablat	equ	0xFF5
  6209                           prodh	equ	0xFF4
  6210                           prodl	equ	0xFF3
  6211                           postinc0	equ	0xFEE
  6212                           plusw0	equ	0xFEB
  6213                           wreg	equ	0xFE8
  6214                           indf2	equ	0xFDF
  6215                           postinc2	equ	0xFDE
  6216                           postdec2	equ	0xFDD
  6217                           plusw2	equ	0xFDB
  6218                           fsr2h	equ	0xFDA
  6219                           fsr2l	equ	0xFD9
  6220                           status	equ	0xFD8
  6221                           
  6222 ;; *************** function ___lldiv *****************
  6223 ;; Defined at:
  6224 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/lldiv.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  dividend        4   33[BANK0 ] unsigned long 
  6227 ;;  divisor         4   37[BANK0 ] unsigned long 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;  quotient        4   41[BANK0 ] unsigned long 
  6230 ;;  counter         1   45[BANK0 ] unsigned char 
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  4   33[BANK0 ] unsigned long 
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6240 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6241 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6243 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6244 ;;Total ram usage:       13 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    7
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_send_initial_update
  6251 ;;		_send_periodical_update
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text11
  6256  015AA6                     __ptext11:
  6257                           	opt stack 0
  6258  015AA6                     ___lldiv:
  6259                           	opt stack 22
  6260                           
  6261                           ;incstack = 0
  6262  015AA6  0E00               	movlw	0
  6263  015AA8  0100               	movlb	0	; () banked
  6264  015AAA  6F89               	movwf	___lldiv@quotient& (0+255),b
  6265  015AAC  0E00               	movlw	0
  6266  015AAE  6F8A               	movwf	(___lldiv@quotient+1)& (0+255),b
  6267  015AB0  0E00               	movlw	0
  6268  015AB2  6F8B               	movwf	(___lldiv@quotient+2)& (0+255),b
  6269  015AB4  0E00               	movlw	0
  6270  015AB6  6F8C               	movwf	(___lldiv@quotient+3)& (0+255),b
  6271                           
  6272                           ; BSR set to: 0
  6273  015AB8  0100               	movlb	0	; () banked
  6274  015ABA  5185               	movf	___lldiv@divisor& (0+255),w,b
  6275  015ABC  0100               	movlb	0	; () banked
  6276  015ABE  1186               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6277  015AC0  0100               	movlb	0	; () banked
  6278  015AC2  1187               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6279  015AC4  0100               	movlb	0	; () banked
  6280  015AC6  1188               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6281  015AC8  B4D8               	btfsc	status,2,c
  6282  015ACA  D042               	goto	l1834
  6283                           
  6284                           ; BSR set to: 0
  6285  015ACC  0E01               	movlw	1
  6286  015ACE  0100               	movlb	0	; () banked
  6287  015AD0  6F8D               	movwf	___lldiv@counter& (0+255),b
  6288  015AD2  D008               	goto	l13276
  6289  015AD4                     l13274:
  6290                           
  6291                           ; BSR set to: 0
  6292  015AD4  0100               	movlb	0	; () banked
  6293  015AD6  90D8               	bcf	status,0,c
  6294  015AD8  3785               	rlcf	___lldiv@divisor& (0+255),f,b
  6295  015ADA  3786               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6296  015ADC  3787               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6297  015ADE  3788               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6298  015AE0  0100               	movlb	0	; () banked
  6299  015AE2  2B8D               	incf	___lldiv@counter& (0+255),f,b
  6300  015AE4                     l13276:
  6301                           
  6302                           ; BSR set to: 0
  6303  015AE4  0100               	movlb	0	; () banked
  6304  015AE6  AF88               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6305  015AE8  D7F5               	goto	l13274
  6306  015AEA                     l13278:
  6307                           
  6308                           ; BSR set to: 0
  6309  015AEA  0100               	movlb	0	; () banked
  6310  015AEC  90D8               	bcf	status,0,c
  6311  015AEE  3789               	rlcf	___lldiv@quotient& (0+255),f,b
  6312  015AF0  378A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6313  015AF2  378B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6314  015AF4  378C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6315                           
  6316                           ; BSR set to: 0
  6317  015AF6  0100               	movlb	0	; () banked
  6318  015AF8  5185               	movf	___lldiv@divisor& (0+255),w,b
  6319  015AFA  0100               	movlb	0	; () banked
  6320  015AFC  5D81               	subwf	___lldiv@dividend& (0+255),w,b
  6321  015AFE  0100               	movlb	0	; () banked
  6322  015B00  5186               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6323  015B02  0100               	movlb	0	; () banked
  6324  015B04  5982               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6325  015B06  0100               	movlb	0	; () banked
  6326  015B08  5187               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6327  015B0A  0100               	movlb	0	; () banked
  6328  015B0C  5983               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6329  015B0E  0100               	movlb	0	; () banked
  6330  015B10  5188               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6331  015B12  0100               	movlb	0	; () banked
  6332  015B14  5984               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6333  015B16  A0D8               	btfss	status,0,c
  6334  015B18  D012               	goto	l13286
  6335                           
  6336                           ; BSR set to: 0
  6337  015B1A  0100               	movlb	0	; () banked
  6338  015B1C  5185               	movf	___lldiv@divisor& (0+255),w,b
  6339  015B1E  0100               	movlb	0	; () banked
  6340  015B20  5F81               	subwf	___lldiv@dividend& (0+255),f,b
  6341  015B22  0100               	movlb	0	; () banked
  6342  015B24  5186               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6343  015B26  0100               	movlb	0	; () banked
  6344  015B28  5B82               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6345  015B2A  0100               	movlb	0	; () banked
  6346  015B2C  5187               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6347  015B2E  0100               	movlb	0	; () banked
  6348  015B30  5B83               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6349  015B32  0100               	movlb	0	; () banked
  6350  015B34  5188               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6351  015B36  0100               	movlb	0	; () banked
  6352  015B38  5B84               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6353                           
  6354                           ; BSR set to: 0
  6355  015B3A  0100               	movlb	0	; () banked
  6356  015B3C  8189               	bsf	___lldiv@quotient& (0+255),0,b
  6357  015B3E                     l13286:
  6358                           
  6359                           ; BSR set to: 0
  6360  015B3E  0100               	movlb	0	; () banked
  6361  015B40  90D8               	bcf	status,0,c
  6362  015B42  3388               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6363  015B44  3387               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6364  015B46  3386               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6365  015B48  3385               	rrcf	___lldiv@divisor& (0+255),f,b
  6366                           
  6367                           ; BSR set to: 0
  6368  015B4A  0100               	movlb	0	; () banked
  6369  015B4C  2F8D               	decfsz	___lldiv@counter& (0+255),f,b
  6370  015B4E  D7CD               	goto	l13278
  6371  015B50                     l1834:
  6372                           
  6373                           ; BSR set to: 0
  6374  015B50  C089  F081         	movff	___lldiv@quotient,?___lldiv
  6375  015B54  C08A  F082         	movff	___lldiv@quotient+1,?___lldiv+1
  6376  015B58  C08B  F083         	movff	___lldiv@quotient+2,?___lldiv+2
  6377  015B5C  C08C  F084         	movff	___lldiv@quotient+3,?___lldiv+3
  6378                           
  6379                           ; BSR set to: 0
  6380  015B60  0012               	return		;funcret
  6381  015B62                     __end_of___lldiv:
  6382                           	opt stack 0
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           prodh	equ	0xFF4
  6388                           prodl	equ	0xFF3
  6389                           postinc0	equ	0xFEE
  6390                           plusw0	equ	0xFEB
  6391                           wreg	equ	0xFE8
  6392                           indf2	equ	0xFDF
  6393                           postinc2	equ	0xFDE
  6394                           postdec2	equ	0xFDD
  6395                           plusw2	equ	0xFDB
  6396                           fsr2h	equ	0xFDA
  6397                           fsr2l	equ	0xFD9
  6398                           status	equ	0xFD8
  6399                           
  6400 ;; *************** function ___ftneg *****************
  6401 ;; Defined at:
  6402 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/ftneg.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  f1              3  102[BANK0 ] float 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  3  102[BANK0 ] float 
  6409 ;; Registers used:
  6410 ;;		wreg, status,2, status,0
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6416 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6419 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6420 ;;Total ram usage:        3 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    7
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_send_initial_update
  6427 ;;		_send_periodical_update
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           	psect	text12
  6432  016994                     __ptext12:
  6433                           	opt stack 0
  6434  016994                     ___ftneg:
  6435                           	opt stack 22
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;incstack = 0
  6439  016994  0100               	movlb	0	; () banked
  6440  016996  51C6               	movf	___ftneg@f1& (0+255),w,b
  6441  016998  0100               	movlb	0	; () banked
  6442  01699A  11C7               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  6443  01699C  0100               	movlb	0	; () banked
  6444  01699E  11C8               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  6445  0169A0  B4D8               	btfsc	status,2,c
  6446  0169A2  D009               	goto	l1789
  6447                           
  6448                           ; BSR set to: 0
  6449  0169A4  0E00               	movlw	0
  6450  0169A6  0100               	movlb	0	; () banked
  6451  0169A8  1BC6               	xorwf	___ftneg@f1& (0+255),f,b
  6452  0169AA  0E00               	movlw	0
  6453  0169AC  0100               	movlb	0	; () banked
  6454  0169AE  1BC7               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  6455  0169B0  0E80               	movlw	128
  6456  0169B2  0100               	movlb	0	; () banked
  6457  0169B4  1BC8               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  6458  0169B6                     l1789:
  6459                           
  6460                           ; BSR set to: 0
  6461  0169B6  C0C6  F0C6         	movff	___ftneg@f1,?___ftneg
  6462  0169BA  C0C7  F0C7         	movff	___ftneg@f1+1,?___ftneg+1
  6463  0169BE  C0C8  F0C8         	movff	___ftneg@f1+2,?___ftneg+2
  6464                           
  6465                           ; BSR set to: 0
  6466  0169C2  0012               	return		;funcret
  6467  0169C4                     __end_of___ftneg:
  6468                           	opt stack 0
  6469                           tblptru	equ	0xFF8
  6470                           tblptrh	equ	0xFF7
  6471                           tblptrl	equ	0xFF6
  6472                           tablat	equ	0xFF5
  6473                           prodh	equ	0xFF4
  6474                           prodl	equ	0xFF3
  6475                           postinc0	equ	0xFEE
  6476                           plusw0	equ	0xFEB
  6477                           wreg	equ	0xFE8
  6478                           indf2	equ	0xFDF
  6479                           postinc2	equ	0xFDE
  6480                           postdec2	equ	0xFDD
  6481                           plusw2	equ	0xFDB
  6482                           fsr2h	equ	0xFDA
  6483                           fsr2l	equ	0xFD9
  6484                           status	equ	0xFD8
  6485                           
  6486 ;; *************** function _security_force_key_update *****************
  6487 ;; Defined at:
  6488 ;;		line 71 in file "src/miwi/drv_mrf_miwi_89xa.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;		None
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  i               2   33[BANK0 ] int 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;		None               void
  6495 ;; Registers used:
  6496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6505 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6506 ;;Total ram usage:        2 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    7
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_main
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text13
  6517  01671E                     __ptext13:
  6518                           	opt stack 0
  6519  01671E                     _security_force_key_update:
  6520                           	opt stack 23
  6521                           
  6522                           ;drv_mrf_miwi_89xa.c: 73: for(int i = 0; i < 8; i++)
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;incstack = 0
  6526  01671E  0E00               	movlw	0
  6527  016720  0100               	movlb	0	; () banked
  6528  016722  6F82               	movwf	(security_force_key_update@i+1)& (0+255),b
  6529  016724  0E00               	movlw	0
  6530  016726  6F81               	movwf	security_force_key_update@i& (0+255),b
  6531  016728                     l13522:
  6532                           
  6533                           ; BSR set to: 0
  6534  016728  0100               	movlb	0	; () banked
  6535  01672A  BF82               	btfsc	(security_force_key_update@i+1)& (0+255),7,b
  6536  01672C  D008               	goto	l13526
  6537  01672E  0100               	movlb	0	; () banked
  6538  016730  5182               	movf	(security_force_key_update@i+1)& (0+255),w,b
  6539  016732  E11B               	bnz	l237
  6540  016734  0E08               	movlw	8
  6541  016736  0100               	movlb	0	; () banked
  6542  016738  5D81               	subwf	security_force_key_update@i& (0+255),w,b
  6543  01673A  B0D8               	btfsc	status,0,c
  6544  01673C  0012               	return	
  6545  01673E                     l13526:
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;drv_mrf_miwi_89xa.c: 74: {
  6549                           ;drv_mrf_miwi_89xa.c: 75: key[i] = mySecurityKey[i];
  6550  01673E  0E36               	movlw	low _mySecurityKey
  6551  016740  0100               	movlb	0	; () banked
  6552  016742  2581               	addwf	security_force_key_update@i& (0+255),w,b
  6553  016744  6ED9               	movwf	fsr2l,c
  6554  016746  0E01               	movlw	high _mySecurityKey
  6555  016748  0100               	movlb	0	; () banked
  6556  01674A  2182               	addwfc	(security_force_key_update@i+1)& (0+255),w,b
  6557  01674C  6EDA               	movwf	fsr2h,c
  6558  01674E  0EC0               	movlw	low _key
  6559  016750  0100               	movlb	0	; () banked
  6560  016752  2581               	addwf	security_force_key_update@i& (0+255),w,b
  6561  016754  6EE1               	movwf	fsr1l,c
  6562  016756  0E01               	movlw	high _key
  6563  016758  0100               	movlb	0	; () banked
  6564  01675A  2182               	addwfc	(security_force_key_update@i+1)& (0+255),w,b
  6565  01675C  6EE2               	movwf	fsr1h,c
  6566  01675E  CFDF FFE7          	movff	indf2,indf1
  6567                           
  6568                           ; BSR set to: 0
  6569  016762  0100               	movlb	0	; () banked
  6570  016764  4B81               	infsnz	security_force_key_update@i& (0+255),f,b
  6571  016766  2B82               	incf	(security_force_key_update@i+1)& (0+255),f,b
  6572  016768  D7DF               	goto	l13522
  6573  01676A                     l237:
  6574                           
  6575                           ; BSR set to: 0
  6576  01676A  0012               	return		;funcret
  6577  01676C                     __end_of_security_force_key_update:
  6578                           	opt stack 0
  6579                           tblptru	equ	0xFF8
  6580                           tblptrh	equ	0xFF7
  6581                           tblptrl	equ	0xFF6
  6582                           tablat	equ	0xFF5
  6583                           prodh	equ	0xFF4
  6584                           prodl	equ	0xFF3
  6585                           postinc0	equ	0xFEE
  6586                           plusw0	equ	0xFEB
  6587                           wreg	equ	0xFE8
  6588                           indf1	equ	0xFE7
  6589                           fsr1h	equ	0xFE2
  6590                           fsr1l	equ	0xFE1
  6591                           indf2	equ	0xFDF
  6592                           postinc2	equ	0xFDE
  6593                           postdec2	equ	0xFDD
  6594                           plusw2	equ	0xFDB
  6595                           fsr2h	equ	0xFDA
  6596                           fsr2l	equ	0xFD9
  6597                           status	equ	0xFD8
  6598                           
  6599 ;; *************** function _read_sensors *****************
  6600 ;; Defined at:
  6601 ;;		line 391 in file "src/main.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  value           2   16[BANK1 ] unsigned int 
  6606 ;;  adc_result      2   14[BANK1 ] unsigned int 
  6607 ;;  t1              1   13[BANK1 ] unsigned char 
  6608 ;;  t0              1   12[BANK1 ] unsigned char 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;		None               void
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6619 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6620 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6621 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;Total ram usage:        9 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:    9
  6625 ;; This function calls:
  6626 ;;		_OpenI2C1
  6627 ;;		_ReadI2C1
  6628 ;;		_WriteI2C1
  6629 ;;		___ftdiv
  6630 ;;		___ftmul
  6631 ;;		___fttol
  6632 ;;		___lwtoft
  6633 ;; This function is called by:
  6634 ;;		_main
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text14
  6639  012DAE                     __ptext14:
  6640                           	opt stack 0
  6641  012DAE                     _read_sensors:
  6642                           	opt stack 21
  6643                           
  6644                           ;main.c: 394: ADCON0bits.ADON = 1;
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;incstack = 0
  6648  012DAE  80C2               	bsf	4034,0,c	;volatile
  6649                           
  6650                           ;main.c: 395: LATAbits.LATA6 = 1;
  6651  012DB0  8C89               	bsf	3977,6,c	;volatile
  6652                           
  6653                           ;main.c: 396: _delay((unsigned long)((20)*(8000000/4000.0)));
  6654  012DB2  0E34               	movlw	52
  6655  012DB4  0101               	movlb	1	; () banked
  6656  012DB6  6FDC               	movwf	??_read_sensors& (0+255),b
  6657  012DB8  0EF2               	movlw	242
  6658  012DBA                     u17587:
  6659  012DBA  2EE8               	decfsz	wreg,f,c
  6660  012DBC  D7FE               	goto	u17587
  6661  012DBE  2FDC               	decfsz	??_read_sensors& (0+255),f,b
  6662  012DC0  D7FC               	goto	u17587
  6663                           
  6664                           ;main.c: 399: ADCON1bits.ADCAL = 1;
  6665  012DC2  8CC1               	bsf	4033,6,c	;volatile
  6666                           
  6667                           ;main.c: 400: ADCON0bits.GO = 1;
  6668  012DC4  82C2               	bsf	4034,1,c	;volatile
  6669  012DC6                     l1125:
  6670  012DC6  B2C2               	btfsc	4034,1,c	;volatile
  6671  012DC8  D7FE               	goto	l1125
  6672                           
  6673                           ;main.c: 402: ADCON1bits.ADCAL = 0;
  6674  012DCA  9CC1               	bcf	4033,6,c	;volatile
  6675                           
  6676                           ;main.c: 405: ADCON0bits.CHS = 0;
  6677  012DCC  94C2               	bcf	4034,2,c	;volatile
  6678  012DCE  96C2               	bcf	4034,3,c	;volatile
  6679  012DD0  98C2               	bcf	4034,4,c	;volatile
  6680  012DD2  9AC2               	bcf	4034,5,c	;volatile
  6681                           
  6682                           ;main.c: 406: ADCON0bits.GO = 1;
  6683  012DD4  82C2               	bsf	4034,1,c	;volatile
  6684  012DD6                     l1128:
  6685  012DD6  B2C2               	btfsc	4034,1,c	;volatile
  6686  012DD8  D7FE               	goto	l1128
  6687                           
  6688                           ;main.c: 409: uint16_t adc_result = (ADRESHbits.ADRESH << 8) + ADRESLbits.ADRESL;
  6689  012DDA  50C4               	movf	4036,w,c	;volatile
  6690  012DDC  0101               	movlb	1	; () banked
  6691  012DDE  6FDD               	movwf	(??_read_sensors+1)& (0+255),b
  6692  012DE0  6BDC               	clrf	??_read_sensors& (0+255),b
  6693  012DE2  50C3               	movf	4035,w,c	;volatile
  6694  012DE4  0101               	movlb	1	; () banked
  6695  012DE6  25DC               	addwf	??_read_sensors& (0+255),w,b
  6696  012DE8  0101               	movlb	1	; () banked
  6697  012DEA  6FE1               	movwf	read_sensors@adc_result& (0+255),b
  6698  012DEC  0E00               	movlw	0
  6699  012DEE  0101               	movlb	1	; () banked
  6700  012DF0  21DD               	addwfc	(??_read_sensors+1)& (0+255),w,b
  6701  012DF2  0101               	movlb	1	; () banked
  6702  012DF4  6FE2               	movwf	(read_sensors@adc_result+1)& (0+255),b
  6703                           
  6704                           ; BSR set to: 1
  6705                           ;main.c: 410: m_battery_voltage = (4096F / adc_result) * 1.24F;
  6706  012DF6  C1E1  F089         	movff	read_sensors@adc_result,___lwtoft@c
  6707  012DFA  C1E2  F08A         	movff	read_sensors@adc_result+1,___lwtoft@c+1
  6708  012DFE  ECF8  F0B4         	call	___lwtoft	;wreg free
  6709  012E02  C089  F099         	movff	?___lwtoft,___ftdiv@f2
  6710  012E06  C08A  F09A         	movff	?___lwtoft+1,___ftdiv@f2+1
  6711  012E0A  C08B  F09B         	movff	?___lwtoft+2,___ftdiv@f2+2
  6712  012E0E  0E00               	movlw	0
  6713  012E10  0100               	movlb	0	; () banked
  6714  012E12  6F96               	movwf	___ftdiv@f1& (0+255),b
  6715  012E14  0E80               	movlw	128
  6716  012E16  0100               	movlb	0	; () banked
  6717  012E18  6F97               	movwf	(___ftdiv@f1+1)& (0+255),b
  6718  012E1A  0E45               	movlw	69
  6719  012E1C  0100               	movlb	0	; () banked
  6720  012E1E  6F98               	movwf	(___ftdiv@f1+2)& (0+255),b
  6721  012E20  EC12  F0A4         	call	___ftdiv	;wreg free
  6722  012E24  C096  F0C9         	movff	?___ftdiv,___ftmul@f1
  6723  012E28  C097  F0CA         	movff	?___ftdiv+1,___ftmul@f1+1
  6724  012E2C  C098  F0CB         	movff	?___ftdiv+2,___ftmul@f1+2
  6725  012E30  0EB8               	movlw	184
  6726  012E32  0100               	movlb	0	; () banked
  6727  012E34  6FCC               	movwf	___ftmul@f2& (0+255),b
  6728  012E36  0E9E               	movlw	158
  6729  012E38  0100               	movlb	0	; () banked
  6730  012E3A  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  6731  012E3C  0E3F               	movlw	63
  6732  012E3E  0100               	movlb	0	; () banked
  6733  012E40  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  6734  012E42  EC11  F0A2         	call	___ftmul	;wreg free
  6735  012E46  C0C9  F152         	movff	?___ftmul,_m_battery_voltage
  6736  012E4A  C0CA  F153         	movff	?___ftmul+1,_m_battery_voltage+1
  6737  012E4E  C0CB  F154         	movff	?___ftmul+2,_m_battery_voltage+2
  6738                           
  6739                           ;main.c: 413: ADCON0bits.CHS = 1;
  6740  012E52  50C2               	movf	4034,w,c	;volatile
  6741  012E54  0BC3               	andlw	-61
  6742  012E56  0904               	iorlw	4
  6743  012E58  6EC2               	movwf	4034,c	;volatile
  6744                           
  6745                           ;main.c: 415: ADCON0bits.GO = 1;
  6746  012E5A  82C2               	bsf	4034,1,c	;volatile
  6747  012E5C                     l1131:
  6748  012E5C  B2C2               	btfsc	4034,1,c	;volatile
  6749  012E5E  D7FE               	goto	l1131
  6750                           
  6751                           ;main.c: 418: adc_result = (ADRESHbits.ADRESH << 8) + ADRESLbits.ADRESL;
  6752  012E60  50C4               	movf	4036,w,c	;volatile
  6753  012E62  0101               	movlb	1	; () banked
  6754  012E64  6FDD               	movwf	(??_read_sensors+1)& (0+255),b
  6755  012E66  6BDC               	clrf	??_read_sensors& (0+255),b
  6756  012E68  50C3               	movf	4035,w,c	;volatile
  6757  012E6A  0101               	movlb	1	; () banked
  6758  012E6C  25DC               	addwf	??_read_sensors& (0+255),w,b
  6759  012E6E  0101               	movlb	1	; () banked
  6760  012E70  6FE1               	movwf	read_sensors@adc_result& (0+255),b
  6761  012E72  0E00               	movlw	0
  6762  012E74  0101               	movlb	1	; () banked
  6763  012E76  21DD               	addwfc	(??_read_sensors+1)& (0+255),w,b
  6764  012E78  0101               	movlb	1	; () banked
  6765  012E7A  6FE2               	movwf	(read_sensors@adc_result+1)& (0+255),b
  6766                           
  6767                           ; BSR set to: 1
  6768                           ;main.c: 419: m_light_level = (uint8_t)((adc_result / 74F) * 100F);
  6769  012E7C  0E00               	movlw	0
  6770  012E7E  0100               	movlb	0	; () banked
  6771  012E80  6FCC               	movwf	___ftmul@f2& (0+255),b
  6772  012E82  0EC8               	movlw	200
  6773  012E84  0100               	movlb	0	; () banked
  6774  012E86  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  6775  012E88  0E42               	movlw	66
  6776  012E8A  0100               	movlb	0	; () banked
  6777  012E8C  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  6778  012E8E  0E00               	movlw	0
  6779  012E90  0100               	movlb	0	; () banked
  6780  012E92  6F99               	movwf	___ftdiv@f2& (0+255),b
  6781  012E94  0E94               	movlw	148
  6782  012E96  0100               	movlb	0	; () banked
  6783  012E98  6F9A               	movwf	(___ftdiv@f2+1)& (0+255),b
  6784  012E9A  0E42               	movlw	66
  6785  012E9C  0100               	movlb	0	; () banked
  6786  012E9E  6F9B               	movwf	(___ftdiv@f2+2)& (0+255),b
  6787  012EA0  C1E1  F089         	movff	read_sensors@adc_result,___lwtoft@c
  6788  012EA4  C1E2  F08A         	movff	read_sensors@adc_result+1,___lwtoft@c+1
  6789  012EA8  ECF8  F0B4         	call	___lwtoft	;wreg free
  6790  012EAC  C089  F096         	movff	?___lwtoft,___ftdiv@f1
  6791  012EB0  C08A  F097         	movff	?___lwtoft+1,___ftdiv@f1+1
  6792  012EB4  C08B  F098         	movff	?___lwtoft+2,___ftdiv@f1+2
  6793  012EB8  EC12  F0A4         	call	___ftdiv	;wreg free
  6794  012EBC  C096  F0C9         	movff	?___ftdiv,___ftmul@f1
  6795  012EC0  C097  F0CA         	movff	?___ftdiv+1,___ftmul@f1+1
  6796  012EC4  C098  F0CB         	movff	?___ftdiv+2,___ftmul@f1+2
  6797  012EC8  EC11  F0A2         	call	___ftmul	;wreg free
  6798  012ECC  C0C9  F0A5         	movff	?___ftmul,___fttol@f1
  6799  012ED0  C0CA  F0A6         	movff	?___ftmul+1,___fttol@f1+1
  6800  012ED4  C0CB  F0A7         	movff	?___ftmul+2,___fttol@f1+2
  6801  012ED8  ECB8  F0A4         	call	___fttol	;wreg free
  6802  012EDC  0100               	movlb	0	; () banked
  6803  012EDE  51A5               	movf	?___fttol& (0+255),w,b
  6804  012EE0  0101               	movlb	1	; () banked
  6805  012EE2  6F68               	movwf	_m_light_level& (0+255),b
  6806                           
  6807                           ; BSR set to: 1
  6808                           ;main.c: 420: if (m_light_level > 100)
  6809  012EE4  0E64               	movlw	100
  6810  012EE6  0101               	movlb	1	; () banked
  6811  012EE8  6568               	cpfsgt	_m_light_level& (0+255),b
  6812  012EEA  D003               	goto	l14042
  6813                           
  6814                           ; BSR set to: 1
  6815                           ;main.c: 421: {
  6816                           ;main.c: 422: m_light_level = 100;
  6817  012EEC  0E64               	movlw	100
  6818  012EEE  0101               	movlb	1	; () banked
  6819  012EF0  6F68               	movwf	_m_light_level& (0+255),b
  6820  012EF2                     l14042:
  6821                           
  6822                           ; BSR set to: 1
  6823                           ;main.c: 423: }
  6824                           ;main.c: 428: _delay((unsigned long)((90)*(8000000/4000.0)));
  6825  012EF2  0EEA               	movlw	234
  6826  012EF4  0101               	movlb	1	; () banked
  6827  012EF6  6FDC               	movwf	??_read_sensors& (0+255),b
  6828  012EF8  0EC3               	movlw	195
  6829  012EFA                     u17597:
  6830  012EFA  2EE8               	decfsz	wreg,f,c
  6831  012EFC  D7FE               	goto	u17597
  6832  012EFE  2FDC               	decfsz	??_read_sensors& (0+255),f,b
  6833  012F00  D7FC               	goto	u17597
  6834  012F02  F000               	nop	
  6835                           
  6836                           ;main.c: 429: OpenI2C1(0b00001000, 0b10000000);
  6837  012F04  0E80               	movlw	128
  6838  012F06  0100               	movlb	0	; () banked
  6839  012F08  6F81               	movwf	OpenI2C1@slew& (0+255),b
  6840  012F0A  0E08               	movlw	8
  6841  012F0C  EC0D  F0B5         	call	_OpenI2C1
  6842  012F10                     l14046:
  6843  012F10  A4C7               	btfss	4039,2,c	;volatile
  6844  012F12  D004               	goto	u16400
  6845  012F14  0101               	movlb	1	; () banked
  6846  012F16  6BDC               	clrf	??_read_sensors& (0+255),b
  6847  012F18  2BDC               	incf	??_read_sensors& (0+255),f,b
  6848  012F1A  D002               	goto	u16408
  6849  012F1C                     u16400:
  6850  012F1C  0101               	movlb	1	; () banked
  6851  012F1E  6BDC               	clrf	??_read_sensors& (0+255),b
  6852  012F20                     u16408:
  6853  012F20  50C5               	movf	4037,w,c	;volatile
  6854  012F22  0B1F               	andlw	31
  6855  012F24  0101               	movlb	1	; () banked
  6856  012F26  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6857  012F28  0900               	iorlw	0
  6858  012F2A  A4D8               	btfss	status,2,c
  6859  012F2C  D7F1               	goto	l14046
  6860                           
  6861                           ; BSR set to: 1
  6862                           ;main.c: 435: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  6863  012F2E  80C5               	bsf	4037,0,c	;volatile
  6864  012F30                     l1138:
  6865  012F30  B0C5               	btfsc	4037,0,c	;volatile
  6866  012F32  D7FE               	goto	l1138
  6867  012F34                     l14048:
  6868  012F34  A4C7               	btfss	4039,2,c	;volatile
  6869  012F36  D004               	goto	u16430
  6870  012F38  0101               	movlb	1	; () banked
  6871  012F3A  6BDC               	clrf	??_read_sensors& (0+255),b
  6872  012F3C  2BDC               	incf	??_read_sensors& (0+255),f,b
  6873  012F3E  D002               	goto	u16438
  6874  012F40                     u16430:
  6875  012F40  0101               	movlb	1	; () banked
  6876  012F42  6BDC               	clrf	??_read_sensors& (0+255),b
  6877  012F44                     u16438:
  6878  012F44  50C5               	movf	4037,w,c	;volatile
  6879  012F46  0B1F               	andlw	31
  6880  012F48  0101               	movlb	1	; () banked
  6881  012F4A  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6882  012F4C  0900               	iorlw	0
  6883  012F4E  A4D8               	btfss	status,2,c
  6884  012F50  D7F1               	goto	l14048
  6885                           
  6886                           ; BSR set to: 1
  6887                           ;main.c: 437: WriteI2C1( 0b10010000 & 0xfe );
  6888                           
  6889                           ; BSR set to: 1
  6890  012F52  0E90               	movlw	144
  6891  012F54  EC46  F0B2         	call	_WriteI2C1
  6892  012F58                     l14052:
  6893  012F58  A4C7               	btfss	4039,2,c	;volatile
  6894  012F5A  D004               	goto	u16450
  6895  012F5C  0101               	movlb	1	; () banked
  6896  012F5E  6BDC               	clrf	??_read_sensors& (0+255),b
  6897  012F60  2BDC               	incf	??_read_sensors& (0+255),f,b
  6898  012F62  D002               	goto	u16458
  6899  012F64                     u16450:
  6900  012F64  0101               	movlb	1	; () banked
  6901  012F66  6BDC               	clrf	??_read_sensors& (0+255),b
  6902  012F68                     u16458:
  6903  012F68  50C5               	movf	4037,w,c	;volatile
  6904  012F6A  0B1F               	andlw	31
  6905  012F6C  0101               	movlb	1	; () banked
  6906  012F6E  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6907  012F70  0900               	iorlw	0
  6908  012F72  A4D8               	btfss	status,2,c
  6909  012F74  D7F1               	goto	l14052
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;main.c: 439: WriteI2C1( 0x00 );
  6913                           
  6914                           ; BSR set to: 1
  6915  012F76  0E00               	movlw	0
  6916  012F78  EC46  F0B2         	call	_WriteI2C1
  6917  012F7C                     l14056:
  6918  012F7C  A4C7               	btfss	4039,2,c	;volatile
  6919  012F7E  D004               	goto	u16470
  6920  012F80  0101               	movlb	1	; () banked
  6921  012F82  6BDC               	clrf	??_read_sensors& (0+255),b
  6922  012F84  2BDC               	incf	??_read_sensors& (0+255),f,b
  6923  012F86  D002               	goto	u16478
  6924  012F88                     u16470:
  6925  012F88  0101               	movlb	1	; () banked
  6926  012F8A  6BDC               	clrf	??_read_sensors& (0+255),b
  6927  012F8C                     u16478:
  6928  012F8C  50C5               	movf	4037,w,c	;volatile
  6929  012F8E  0B1F               	andlw	31
  6930  012F90  0101               	movlb	1	; () banked
  6931  012F92  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6932  012F94  0900               	iorlw	0
  6933  012F96  A4D8               	btfss	status,2,c
  6934  012F98  D7F1               	goto	l14056
  6935                           
  6936                           ; BSR set to: 1
  6937                           ;main.c: 441: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  6938  012F9A  84C5               	bsf	4037,2,c	;volatile
  6939  012F9C                     l1150:
  6940  012F9C  B4C5               	btfsc	4037,2,c	;volatile
  6941  012F9E  D7FE               	goto	l1150
  6942  012FA0                     l14058:
  6943  012FA0  A4C7               	btfss	4039,2,c	;volatile
  6944  012FA2  D004               	goto	u16500
  6945  012FA4  0101               	movlb	1	; () banked
  6946  012FA6  6BDC               	clrf	??_read_sensors& (0+255),b
  6947  012FA8  2BDC               	incf	??_read_sensors& (0+255),f,b
  6948  012FAA  D002               	goto	u16508
  6949  012FAC                     u16500:
  6950  012FAC  0101               	movlb	1	; () banked
  6951  012FAE  6BDC               	clrf	??_read_sensors& (0+255),b
  6952  012FB0                     u16508:
  6953  012FB0  50C5               	movf	4037,w,c	;volatile
  6954  012FB2  0B1F               	andlw	31
  6955  012FB4  0101               	movlb	1	; () banked
  6956  012FB6  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6957  012FB8  0900               	iorlw	0
  6958  012FBA  A4D8               	btfss	status,2,c
  6959  012FBC  D7F1               	goto	l14058
  6960                           
  6961                           ; BSR set to: 1
  6962                           ;main.c: 445: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  6963  012FBE  80C5               	bsf	4037,0,c	;volatile
  6964  012FC0                     l1156:
  6965  012FC0  B0C5               	btfsc	4037,0,c	;volatile
  6966  012FC2  D7FE               	goto	l1156
  6967  012FC4                     l14060:
  6968  012FC4  A4C7               	btfss	4039,2,c	;volatile
  6969  012FC6  D004               	goto	u16530
  6970  012FC8  0101               	movlb	1	; () banked
  6971  012FCA  6BDC               	clrf	??_read_sensors& (0+255),b
  6972  012FCC  2BDC               	incf	??_read_sensors& (0+255),f,b
  6973  012FCE  D002               	goto	u16538
  6974  012FD0                     u16530:
  6975  012FD0  0101               	movlb	1	; () banked
  6976  012FD2  6BDC               	clrf	??_read_sensors& (0+255),b
  6977  012FD4                     u16538:
  6978  012FD4  50C5               	movf	4037,w,c	;volatile
  6979  012FD6  0B1F               	andlw	31
  6980  012FD8  0101               	movlb	1	; () banked
  6981  012FDA  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6982  012FDC  0900               	iorlw	0
  6983  012FDE  A4D8               	btfss	status,2,c
  6984  012FE0  D7F1               	goto	l14060
  6985                           
  6986                           ; BSR set to: 1
  6987                           ;main.c: 447: WriteI2C1( 0b10010000 | 0x01 );
  6988                           
  6989                           ; BSR set to: 1
  6990  012FE2  0E91               	movlw	145
  6991  012FE4  EC46  F0B2         	call	_WriteI2C1
  6992  012FE8                     l14064:
  6993  012FE8  A4C7               	btfss	4039,2,c	;volatile
  6994  012FEA  D004               	goto	u16550
  6995  012FEC  0101               	movlb	1	; () banked
  6996  012FEE  6BDC               	clrf	??_read_sensors& (0+255),b
  6997  012FF0  2BDC               	incf	??_read_sensors& (0+255),f,b
  6998  012FF2  D002               	goto	u16558
  6999  012FF4                     u16550:
  7000  012FF4  0101               	movlb	1	; () banked
  7001  012FF6  6BDC               	clrf	??_read_sensors& (0+255),b
  7002  012FF8                     u16558:
  7003  012FF8  50C5               	movf	4037,w,c	;volatile
  7004  012FFA  0B1F               	andlw	31
  7005  012FFC  0101               	movlb	1	; () banked
  7006  012FFE  11DC               	iorwf	??_read_sensors& (0+255),w,b
  7007  013000  0900               	iorlw	0
  7008  013002  A4D8               	btfss	status,2,c
  7009  013004  D7F1               	goto	l14064
  7010                           
  7011                           ; BSR set to: 1
  7012                           ;main.c: 449: t1 = ReadI2C1();
  7013                           
  7014                           ; BSR set to: 1
  7015  013006  EC3B  F0B5         	call	_ReadI2C1	;wreg free
  7016  01300A  0101               	movlb	1	; () banked
  7017  01300C  6FE0               	movwf	read_sensors@t1& (0+255),b
  7018                           
  7019                           ; BSR set to: 1
  7020                           ;main.c: 450: SSP1CON2bits.ACKDT=0, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7021  01300E  9AC5               	bcf	4037,5,c	;volatile
  7022                           
  7023                           ; BSR set to: 1
  7024  013010  88C5               	bsf	4037,4,c	;volatile
  7025  013012                     l1165:
  7026  013012  B8C5               	btfsc	4037,4,c	;volatile
  7027  013014  D7FE               	goto	l1165
  7028                           
  7029                           ;main.c: 451: t0 = ReadI2C1();
  7030  013016  EC3B  F0B5         	call	_ReadI2C1	;wreg free
  7031  01301A  0101               	movlb	1	; () banked
  7032  01301C  6FDF               	movwf	read_sensors@t0& (0+255),b
  7033                           
  7034                           ; BSR set to: 1
  7035                           ;main.c: 452: SSP1CON2bits.ACKDT=1, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7036  01301E  8AC5               	bsf	4037,5,c	;volatile
  7037                           
  7038                           ; BSR set to: 1
  7039  013020  88C5               	bsf	4037,4,c	;volatile
  7040  013022                     l1168:
  7041  013022  B8C5               	btfsc	4037,4,c	;volatile
  7042  013024  D7FE               	goto	l1168
  7043                           
  7044                           ;main.c: 453: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  7045  013026  84C5               	bsf	4037,2,c	;volatile
  7046  013028                     l1171:
  7047  013028  B4C5               	btfsc	4037,2,c	;volatile
  7048  01302A  D7FE               	goto	l1171
  7049                           
  7050                           ;main.c: 455: uint16_t value = (t1<<8) + t0;
  7051  01302C  0101               	movlb	1	; () banked
  7052  01302E  51E0               	movf	read_sensors@t1& (0+255),w,b
  7053  013030  0101               	movlb	1	; () banked
  7054  013032  6FDD               	movwf	(??_read_sensors+1)& (0+255),b
  7055  013034  6BDC               	clrf	??_read_sensors& (0+255),b
  7056  013036  0101               	movlb	1	; () banked
  7057  013038  51DF               	movf	read_sensors@t0& (0+255),w,b
  7058  01303A  0101               	movlb	1	; () banked
  7059  01303C  25DC               	addwf	??_read_sensors& (0+255),w,b
  7060  01303E  0101               	movlb	1	; () banked
  7061  013040  6FE3               	movwf	read_sensors@value& (0+255),b
  7062  013042  0101               	movlb	1	; () banked
  7063  013044  0E00               	movlw	0
  7064  013046  0101               	movlb	1	; () banked
  7065  013048  21DD               	addwfc	(??_read_sensors+1)& (0+255),w,b
  7066  01304A  0101               	movlb	1	; () banked
  7067  01304C  6FE4               	movwf	(read_sensors@value+1)& (0+255),b
  7068                           
  7069                           ;main.c: 456: value = (value>>4);
  7070  01304E  C1E3  F1DC         	movff	read_sensors@value,??_read_sensors
  7071  013052  C1E4  F1DD         	movff	read_sensors@value+1,??_read_sensors+1
  7072  013056  0E04               	movlw	4
  7073  013058  0101               	movlb	1	; () banked
  7074  01305A  6FDE               	movwf	(??_read_sensors+2)& (0+255),b
  7075  01305C                     u16605:
  7076  01305C  0101               	movlb	1	; () banked
  7077  01305E  90D8               	bcf	status,0,c
  7078  013060  33DD               	rrcf	(??_read_sensors+1)& (0+255),f,b
  7079  013062  33DC               	rrcf	??_read_sensors& (0+255),f,b
  7080  013064  0101               	movlb	1	; () banked
  7081  013066  2FDE               	decfsz	(??_read_sensors+2)& (0+255),f,b
  7082  013068  D7F9               	goto	u16605
  7083  01306A  C1DC  F1E3         	movff	??_read_sensors,read_sensors@value
  7084  01306E  C1DD  F1E4         	movff	??_read_sensors+1,read_sensors@value+1
  7085                           
  7086                           ; BSR set to: 1
  7087                           ;main.c: 457: m_temperature = ((float)value)*0.0625F;
  7088  013072  C1E3  F089         	movff	read_sensors@value,___lwtoft@c
  7089  013076  C1E4  F08A         	movff	read_sensors@value+1,___lwtoft@c+1
  7090  01307A  ECF8  F0B4         	call	___lwtoft	;wreg free
  7091  01307E  C089  F0C9         	movff	?___lwtoft,___ftmul@f1
  7092  013082  C08A  F0CA         	movff	?___lwtoft+1,___ftmul@f1+1
  7093  013086  C08B  F0CB         	movff	?___lwtoft+2,___ftmul@f1+2
  7094  01308A  0E00               	movlw	0
  7095  01308C  0100               	movlb	0	; () banked
  7096  01308E  6FCC               	movwf	___ftmul@f2& (0+255),b
  7097  013090  0E80               	movlw	128
  7098  013092  0100               	movlb	0	; () banked
  7099  013094  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  7100  013096  0E3D               	movlw	61
  7101  013098  0100               	movlb	0	; () banked
  7102  01309A  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  7103  01309C  EC11  F0A2         	call	___ftmul	;wreg free
  7104  0130A0  C0C9  F155         	movff	?___ftmul,_m_temperature
  7105  0130A4  C0CA  F156         	movff	?___ftmul+1,_m_temperature+1
  7106  0130A8  C0CB  F157         	movff	?___ftmul+2,_m_temperature+2
  7107                           
  7108                           ;main.c: 459: ADCON0bits.ADON = 0;
  7109  0130AC  90C2               	bcf	4034,0,c	;volatile
  7110                           
  7111                           ;main.c: 460: SSP1CON1 &=0xDF;
  7112  0130AE  9AC6               	bcf	4038,5,c	;volatile
  7113                           
  7114                           ;main.c: 461: LATAbits.LATA6 = 0;
  7115  0130B0  9C89               	bcf	3977,6,c	;volatile
  7116  0130B2  0012               	return		;funcret
  7117  0130B4                     __end_of_read_sensors:
  7118                           	opt stack 0
  7119                           tblptru	equ	0xFF8
  7120                           tblptrh	equ	0xFF7
  7121                           tblptrl	equ	0xFF6
  7122                           tablat	equ	0xFF5
  7123                           prodh	equ	0xFF4
  7124                           prodl	equ	0xFF3
  7125                           postinc0	equ	0xFEE
  7126                           plusw0	equ	0xFEB
  7127                           wreg	equ	0xFE8
  7128                           indf1	equ	0xFE7
  7129                           fsr1h	equ	0xFE2
  7130                           fsr1l	equ	0xFE1
  7131                           indf2	equ	0xFDF
  7132                           postinc2	equ	0xFDE
  7133                           postdec2	equ	0xFDD
  7134                           plusw2	equ	0xFDB
  7135                           fsr2h	equ	0xFDA
  7136                           fsr2l	equ	0xFD9
  7137                           status	equ	0xFD8
  7138                           
  7139 ;; *************** function ___lwtoft *****************
  7140 ;; Defined at:
  7141 ;;		line 28 in file "/opt/microchip/xc8/v1.35/sources/common/lwtoft.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  c               2   41[BANK0 ] unsigned int 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  3   41[BANK0 ] float 
  7148 ;; Registers used:
  7149 ;;		wreg, status,2, status,0, cstack
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7155 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7158 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7159 ;;Total ram usage:        3 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; Hardware stack levels required when called:    8
  7162 ;; This function calls:
  7163 ;;		___ftpack
  7164 ;; This function is called by:
  7165 ;;		_read_sensors
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text15
  7170  0169F0                     __ptext15:
  7171                           	opt stack 0
  7172  0169F0                     ___lwtoft:
  7173                           	opt stack 21
  7174                           
  7175                           ;incstack = 0
  7176  0169F0  C089  F081         	movff	___lwtoft@c,___ftpack@arg
  7177  0169F4  C08A  F082         	movff	___lwtoft@c+1,___ftpack@arg+1
  7178  0169F8  0100               	movlb	0	; () banked
  7179  0169FA  6B83               	clrf	(___ftpack@arg+2)& (0+255),b
  7180  0169FC  0E8E               	movlw	142
  7181  0169FE  0100               	movlb	0	; () banked
  7182  016A00  6F84               	movwf	___ftpack@exp& (0+255),b
  7183  016A02  0E00               	movlw	0
  7184  016A04  0100               	movlb	0	; () banked
  7185  016A06  6F85               	movwf	___ftpack@sign& (0+255),b
  7186  016A08  ECD5  F0A8         	call	___ftpack	;wreg free
  7187  016A0C  C081  F089         	movff	?___ftpack,?___lwtoft
  7188  016A10  C082  F08A         	movff	?___ftpack+1,?___lwtoft+1
  7189  016A14  C083  F08B         	movff	?___ftpack+2,?___lwtoft+2
  7190  016A18  0012               	return	
  7191  016A1A                     __end_of___lwtoft:
  7192                           	opt stack 0
  7193                           tblptru	equ	0xFF8
  7194                           tblptrh	equ	0xFF7
  7195                           tblptrl	equ	0xFF6
  7196                           tablat	equ	0xFF5
  7197                           prodh	equ	0xFF4
  7198                           prodl	equ	0xFF3
  7199                           postinc0	equ	0xFEE
  7200                           plusw0	equ	0xFEB
  7201                           wreg	equ	0xFE8
  7202                           indf1	equ	0xFE7
  7203                           fsr1h	equ	0xFE2
  7204                           fsr1l	equ	0xFE1
  7205                           indf2	equ	0xFDF
  7206                           postinc2	equ	0xFDE
  7207                           postdec2	equ	0xFDD
  7208                           plusw2	equ	0xFDB
  7209                           fsr2h	equ	0xFDA
  7210                           fsr2l	equ	0xFD9
  7211                           status	equ	0xFD8
  7212                           
  7213 ;; *************** function ___fttol *****************
  7214 ;; Defined at:
  7215 ;;		line 44 in file "/opt/microchip/xc8/v1.35/sources/common/fttol.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  f1              3   69[BANK0 ] float 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  lval            4   79[BANK0 ] unsigned long 
  7220 ;;  exp1            1   83[BANK0 ] unsigned char 
  7221 ;;  sign1           1   78[BANK0 ] unsigned char 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  4   69[BANK0 ] long 
  7224 ;; Registers used:
  7225 ;;		wreg, status,2, status,0
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7231 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7233 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7234 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;Total ram usage:       15 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    7
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_read_sensors
  7242 ;;		_send_initial_update
  7243 ;;		_send_periodical_update
  7244 ;;		_floor
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text16
  7249  014970                     __ptext16:
  7250                           	opt stack 0
  7251  014970                     ___fttol:
  7252                           	opt stack 21
  7253                           
  7254                           ;incstack = 0
  7255  014970  C0A7  F0A9         	movff	___fttol@f1+2,??___fttol
  7256  014974  0100               	movlb	0	; () banked
  7257  014976  6BAA               	clrf	(??___fttol+1)& (0+255),b
  7258  014978  6BAB               	clrf	(??___fttol+2)& (0+255),b
  7259  01497A  0100               	movlb	0	; () banked
  7260  01497C  35A6               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7261  01497E  0100               	movlb	0	; () banked
  7262  014980  37A9               	rlcf	??___fttol& (0+255),f,b
  7263  014982  E301               	bnc	u14511
  7264  014984  81AA               	bsf	(??___fttol+1)& (0+255),0,b
  7265  014986                     u14511:
  7266  014986  0100               	movlb	0	; () banked
  7267  014988  51A9               	movf	??___fttol& (0+255),w,b
  7268  01498A  0100               	movlb	0	; () banked
  7269  01498C  6FB3               	movwf	___fttol@exp1& (0+255),b
  7270  01498E  0100               	movlb	0	; () banked
  7271  014990  51B3               	movf	___fttol@exp1& (0+255),w,b
  7272  014992  A4D8               	btfss	status,2,c
  7273  014994  D00A               	goto	l12518
  7274                           
  7275                           ; BSR set to: 0
  7276  014996  0E00               	movlw	0
  7277  014998  0100               	movlb	0	; () banked
  7278  01499A  6FA5               	movwf	?___fttol& (0+255),b
  7279  01499C  0E00               	movlw	0
  7280  01499E  6FA6               	movwf	(?___fttol+1)& (0+255),b
  7281  0149A0  0E00               	movlw	0
  7282  0149A2  6FA7               	movwf	(?___fttol+2)& (0+255),b
  7283  0149A4  0E00               	movlw	0
  7284  0149A6  6FA8               	movwf	(?___fttol+3)& (0+255),b
  7285                           
  7286                           ; BSR set to: 0
  7287  0149A8  0012               	return	
  7288  0149AA                     l12518:
  7289                           
  7290                           ; BSR set to: 0
  7291  0149AA  0E17               	movlw	23
  7292  0149AC  0100               	movlb	0	; () banked
  7293  0149AE  6FA9               	movwf	??___fttol& (0+255),b
  7294  0149B0  C0A5  F0AA         	movff	___fttol@f1,??___fttol+1
  7295  0149B4  C0A6  F0AB         	movff	___fttol@f1+1,??___fttol+2
  7296  0149B8  C0A7  F0AC         	movff	___fttol@f1+2,??___fttol+3
  7297  0149BC  0100               	movlb	0	; () banked
  7298  0149BE  29A9               	incf	??___fttol& (0+255),w,b
  7299  0149C0  0100               	movlb	0	; () banked
  7300  0149C2  6FAD               	movwf	(??___fttol+4)& (0+255),b
  7301  0149C4  D005               	goto	u14530
  7302  0149C6                     u14535:
  7303  0149C6  0100               	movlb	0	; () banked
  7304  0149C8  90D8               	bcf	status,0,c
  7305  0149CA  33AC               	rrcf	(??___fttol+3)& (0+255),f,b
  7306  0149CC  33AB               	rrcf	(??___fttol+2)& (0+255),f,b
  7307  0149CE  33AA               	rrcf	(??___fttol+1)& (0+255),f,b
  7308  0149D0                     u14530:
  7309  0149D0  0100               	movlb	0	; () banked
  7310  0149D2  2FAD               	decfsz	(??___fttol+4)& (0+255),f,b
  7311  0149D4  D7F8               	goto	u14535
  7312  0149D6  0100               	movlb	0	; () banked
  7313  0149D8  51AA               	movf	(??___fttol+1)& (0+255),w,b
  7314  0149DA  0100               	movlb	0	; () banked
  7315  0149DC  6FAE               	movwf	___fttol@sign1& (0+255),b
  7316                           
  7317                           ; BSR set to: 0
  7318  0149DE  0100               	movlb	0	; () banked
  7319  0149E0  8FA6               	bsf	(___fttol@f1+1)& (0+255),7,b
  7320                           
  7321                           ; BSR set to: 0
  7322  0149E2  0EFF               	movlw	255
  7323  0149E4  0100               	movlb	0	; () banked
  7324  0149E6  17A5               	andwf	___fttol@f1& (0+255),f,b
  7325  0149E8  0EFF               	movlw	255
  7326  0149EA  0100               	movlb	0	; () banked
  7327  0149EC  17A6               	andwf	(___fttol@f1+1)& (0+255),f,b
  7328  0149EE  0E00               	movlw	0
  7329  0149F0  0100               	movlb	0	; () banked
  7330  0149F2  17A7               	andwf	(___fttol@f1+2)& (0+255),f,b
  7331                           
  7332                           ; BSR set to: 0
  7333  0149F4  0100               	movlb	0	; () banked
  7334  0149F6  51A5               	movf	___fttol@f1& (0+255),w,b
  7335  0149F8  0100               	movlb	0	; () banked
  7336  0149FA  6FAF               	movwf	___fttol@lval& (0+255),b
  7337  0149FC  0100               	movlb	0	; () banked
  7338  0149FE  51A6               	movf	(___fttol@f1+1)& (0+255),w,b
  7339  014A00  0100               	movlb	0	; () banked
  7340  014A02  6FB0               	movwf	(___fttol@lval+1)& (0+255),b
  7341  014A04  0100               	movlb	0	; () banked
  7342  014A06  51A7               	movf	(___fttol@f1+2)& (0+255),w,b
  7343  014A08  0100               	movlb	0	; () banked
  7344  014A0A  6FB1               	movwf	(___fttol@lval+2)& (0+255),b
  7345  014A0C  0100               	movlb	0	; () banked
  7346  014A0E  6BB2               	clrf	(___fttol@lval+3)& (0+255),b
  7347                           
  7348                           ; BSR set to: 0
  7349  014A10  0E8E               	movlw	142
  7350  014A12  0100               	movlb	0	; () banked
  7351  014A14  5FB3               	subwf	___fttol@exp1& (0+255),f,b
  7352                           
  7353                           ; BSR set to: 0
  7354  014A16  0100               	movlb	0	; () banked
  7355  014A18  AFB3               	btfss	___fttol@exp1& (0+255),7,b
  7356  014A1A  D01A               	goto	l12540
  7357                           
  7358                           ; BSR set to: 0
  7359  014A1C  0100               	movlb	0	; () banked
  7360  014A1E  51B3               	movf	___fttol@exp1& (0+255),w,b
  7361  014A20  0A80               	xorlw	128
  7362  014A22  0F8F               	addlw	143
  7363  014A24  B0D8               	btfsc	status,0,c
  7364  014A26  D00A               	goto	l12536
  7365                           
  7366                           ; BSR set to: 0
  7367  014A28  0E00               	movlw	0
  7368  014A2A  0100               	movlb	0	; () banked
  7369  014A2C  6FA5               	movwf	?___fttol& (0+255),b
  7370  014A2E  0E00               	movlw	0
  7371  014A30  6FA6               	movwf	(?___fttol+1)& (0+255),b
  7372  014A32  0E00               	movlw	0
  7373  014A34  6FA7               	movwf	(?___fttol+2)& (0+255),b
  7374  014A36  0E00               	movlw	0
  7375  014A38  6FA8               	movwf	(?___fttol+3)& (0+255),b
  7376                           
  7377                           ; BSR set to: 0
  7378  014A3A  0012               	return	
  7379  014A3C                     l12536:
  7380                           
  7381                           ; BSR set to: 0
  7382  014A3C  0100               	movlb	0	; () banked
  7383  014A3E  90D8               	bcf	status,0,c
  7384  014A40  33B2               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7385  014A42  33B1               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7386  014A44  33B0               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7387  014A46  33AF               	rrcf	___fttol@lval& (0+255),f,b
  7388                           
  7389                           ; BSR set to: 0
  7390  014A48  0100               	movlb	0	; () banked
  7391  014A4A  3FB3               	incfsz	___fttol@exp1& (0+255),f,b
  7392  014A4C  D7F7               	goto	l12536
  7393                           
  7394                           ; BSR set to: 0
  7395  014A4E  D01B               	goto	l12550
  7396  014A50                     l12540:
  7397                           
  7398                           ; BSR set to: 0
  7399  014A50  0E17               	movlw	23
  7400  014A52  0100               	movlb	0	; () banked
  7401  014A54  65B3               	cpfsgt	___fttol@exp1& (0+255),b
  7402  014A56  D012               	goto	l12548
  7403                           
  7404                           ; BSR set to: 0
  7405  014A58  0E00               	movlw	0
  7406  014A5A  0100               	movlb	0	; () banked
  7407  014A5C  6FA5               	movwf	?___fttol& (0+255),b
  7408  014A5E  0E00               	movlw	0
  7409  014A60  6FA6               	movwf	(?___fttol+1)& (0+255),b
  7410  014A62  0E00               	movlw	0
  7411  014A64  6FA7               	movwf	(?___fttol+2)& (0+255),b
  7412  014A66  0E00               	movlw	0
  7413  014A68  6FA8               	movwf	(?___fttol+3)& (0+255),b
  7414                           
  7415                           ; BSR set to: 0
  7416  014A6A  0012               	return	
  7417  014A6C                     l12546:
  7418                           
  7419                           ; BSR set to: 0
  7420  014A6C  0100               	movlb	0	; () banked
  7421  014A6E  90D8               	bcf	status,0,c
  7422  014A70  37AF               	rlcf	___fttol@lval& (0+255),f,b
  7423  014A72  37B0               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7424  014A74  37B1               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7425  014A76  37B2               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7426  014A78  0100               	movlb	0	; () banked
  7427  014A7A  07B3               	decf	___fttol@exp1& (0+255),f,b
  7428  014A7C                     l12548:
  7429                           
  7430                           ; BSR set to: 0
  7431  014A7C  0100               	movlb	0	; () banked
  7432  014A7E  51B3               	movf	___fttol@exp1& (0+255),w,b
  7433  014A80  0100               	movlb	0	; () banked
  7434  014A82  A4D8               	btfss	status,2,c
  7435  014A84  D7F3               	goto	l12546
  7436  014A86                     l12550:
  7437                           
  7438                           ; BSR set to: 0
  7439  014A86  0100               	movlb	0	; () banked
  7440  014A88  51AE               	movf	___fttol@sign1& (0+255),w,b
  7441  014A8A  0100               	movlb	0	; () banked
  7442  014A8C  B4D8               	btfsc	status,2,c
  7443  014A8E  D009               	goto	l12554
  7444                           
  7445                           ; BSR set to: 0
  7446  014A90  0100               	movlb	0	; () banked
  7447  014A92  1FB2               	comf	(___fttol@lval+3)& (0+255),f,b
  7448  014A94  1FB1               	comf	(___fttol@lval+2)& (0+255),f,b
  7449  014A96  1FB0               	comf	(___fttol@lval+1)& (0+255),f,b
  7450  014A98  6DAF               	negf	___fttol@lval& (0+255),b
  7451  014A9A  0E00               	movlw	0
  7452  014A9C  23B0               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7453  014A9E  23B1               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7454  014AA0  23B2               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7455  014AA2                     l12554:
  7456                           
  7457                           ; BSR set to: 0
  7458  014AA2  C0AF  F0A5         	movff	___fttol@lval,?___fttol
  7459  014AA6  C0B0  F0A6         	movff	___fttol@lval+1,?___fttol+1
  7460  014AAA  C0B1  F0A7         	movff	___fttol@lval+2,?___fttol+2
  7461  014AAE  C0B2  F0A8         	movff	___fttol@lval+3,?___fttol+3
  7462  014AB2  0012               	return	
  7463  014AB4                     __end_of___fttol:
  7464                           	opt stack 0
  7465                           tblptru	equ	0xFF8
  7466                           tblptrh	equ	0xFF7
  7467                           tblptrl	equ	0xFF6
  7468                           tablat	equ	0xFF5
  7469                           prodh	equ	0xFF4
  7470                           prodl	equ	0xFF3
  7471                           postinc0	equ	0xFEE
  7472                           plusw0	equ	0xFEB
  7473                           wreg	equ	0xFE8
  7474                           indf1	equ	0xFE7
  7475                           fsr1h	equ	0xFE2
  7476                           fsr1l	equ	0xFE1
  7477                           indf2	equ	0xFDF
  7478                           postinc2	equ	0xFDE
  7479                           postdec2	equ	0xFDD
  7480                           plusw2	equ	0xFDB
  7481                           fsr2h	equ	0xFDA
  7482                           fsr2l	equ	0xFD9
  7483                           status	equ	0xFD8
  7484                           
  7485 ;; *************** function ___ftmul *****************
  7486 ;; Defined at:
  7487 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/ftmul.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  f1              3  105[BANK0 ] float 
  7490 ;;  f2              3  108[BANK0 ] float 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  f3_as_produc    3    4[BANK1 ] unsigned um
  7493 ;;  sign            1    8[BANK1 ] unsigned char 
  7494 ;;  cntr            1    7[BANK1 ] unsigned char 
  7495 ;;  exp             1    3[BANK1 ] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  3  105[BANK0 ] float 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7505 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7508 ;;      Totals:         0       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7509 ;;Total ram usage:       15 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    8
  7512 ;; This function calls:
  7513 ;;		___ftpack
  7514 ;; This function is called by:
  7515 ;;		_read_sensors
  7516 ;;		_send_initial_update
  7517 ;;		_send_periodical_update
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text17
  7522  014422                     __ptext17:
  7523                           	opt stack 0
  7524  014422                     ___ftmul:
  7525                           	opt stack 21
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;incstack = 0
  7529  014422  C0CB  F1D3         	movff	___ftmul@f1+2,??___ftmul
  7530  014426  0101               	movlb	1	; () banked
  7531  014428  6BD4               	clrf	(??___ftmul+1)& (0+255),b
  7532  01442A  6BD5               	clrf	(??___ftmul+2)& (0+255),b
  7533  01442C  0100               	movlb	0	; () banked
  7534  01442E  35CA               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7535  014430  0101               	movlb	1	; () banked
  7536  014432  37D3               	rlcf	??___ftmul& (0+255),f,b
  7537  014434  E301               	bnc	u15361
  7538  014436  81D4               	bsf	(??___ftmul+1)& (0+255),0,b
  7539  014438                     u15361:
  7540  014438  0101               	movlb	1	; () banked
  7541  01443A  51D3               	movf	??___ftmul& (0+255),w,b
  7542  01443C  0101               	movlb	1	; () banked
  7543  01443E  6FD6               	movwf	___ftmul@exp& (0+255),b
  7544  014440  0101               	movlb	1	; () banked
  7545  014442  51D6               	movf	___ftmul@exp& (0+255),w,b
  7546  014444  A4D8               	btfss	status,2,c
  7547  014446  D00A               	goto	l13222
  7548                           
  7549                           ; BSR set to: 1
  7550  014448  0E00               	movlw	0
  7551  01444A  0100               	movlb	0	; () banked
  7552  01444C  6FC9               	movwf	?___ftmul& (0+255),b
  7553  01444E  0E00               	movlw	0
  7554  014450  0100               	movlb	0	; () banked
  7555  014452  6FCA               	movwf	(?___ftmul+1)& (0+255),b
  7556  014454  0E00               	movlw	0
  7557  014456  0100               	movlb	0	; () banked
  7558  014458  6FCB               	movwf	(?___ftmul+2)& (0+255),b
  7559                           
  7560                           ; BSR set to: 0
  7561  01445A  0012               	return	
  7562  01445C                     l13222:
  7563  01445C  C0CE  F1D3         	movff	___ftmul@f2+2,??___ftmul
  7564  014460  0101               	movlb	1	; () banked
  7565  014462  6BD4               	clrf	(??___ftmul+1)& (0+255),b
  7566  014464  6BD5               	clrf	(??___ftmul+2)& (0+255),b
  7567  014466  0100               	movlb	0	; () banked
  7568  014468  35CD               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7569  01446A  0101               	movlb	1	; () banked
  7570  01446C  37D3               	rlcf	??___ftmul& (0+255),f,b
  7571  01446E  E301               	bnc	u15381
  7572  014470  81D4               	bsf	(??___ftmul+1)& (0+255),0,b
  7573  014472                     u15381:
  7574  014472  0101               	movlb	1	; () banked
  7575  014474  51D3               	movf	??___ftmul& (0+255),w,b
  7576  014476  0101               	movlb	1	; () banked
  7577  014478  6FDB               	movwf	___ftmul@sign& (0+255),b
  7578  01447A  0101               	movlb	1	; () banked
  7579  01447C  51DB               	movf	___ftmul@sign& (0+255),w,b
  7580  01447E  A4D8               	btfss	status,2,c
  7581  014480  D00A               	goto	l13228
  7582                           
  7583                           ; BSR set to: 1
  7584  014482  0E00               	movlw	0
  7585  014484  0100               	movlb	0	; () banked
  7586  014486  6FC9               	movwf	?___ftmul& (0+255),b
  7587  014488  0E00               	movlw	0
  7588  01448A  0100               	movlb	0	; () banked
  7589  01448C  6FCA               	movwf	(?___ftmul+1)& (0+255),b
  7590  01448E  0E00               	movlw	0
  7591  014490  0100               	movlb	0	; () banked
  7592  014492  6FCB               	movwf	(?___ftmul+2)& (0+255),b
  7593                           
  7594                           ; BSR set to: 0
  7595  014494  0012               	return	
  7596  014496                     l13228:
  7597  014496  0101               	movlb	1	; () banked
  7598  014498  51DB               	movf	___ftmul@sign& (0+255),w,b
  7599  01449A  0F7B               	addlw	123
  7600  01449C  0101               	movlb	1	; () banked
  7601  01449E  27D6               	addwf	___ftmul@exp& (0+255),f,b
  7602                           
  7603                           ; BSR set to: 1
  7604  0144A0  C0CB  F1DB         	movff	___ftmul@f1+2,___ftmul@sign
  7605  0144A4  0100               	movlb	0	; () banked
  7606  0144A6  51CE               	movf	(___ftmul@f2+2)& (0+255),w,b
  7607  0144A8  0101               	movlb	1	; () banked
  7608  0144AA  1BDB               	xorwf	___ftmul@sign& (0+255),f,b
  7609  0144AC  0E80               	movlw	128
  7610  0144AE  0101               	movlb	1	; () banked
  7611  0144B0  17DB               	andwf	___ftmul@sign& (0+255),f,b
  7612                           
  7613                           ; BSR set to: 1
  7614  0144B2  0100               	movlb	0	; () banked
  7615  0144B4  8FCA               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7616                           
  7617                           ; BSR set to: 0
  7618  0144B6  0100               	movlb	0	; () banked
  7619  0144B8  8FCD               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7620                           
  7621                           ; BSR set to: 0
  7622  0144BA  0EFF               	movlw	255
  7623  0144BC  0100               	movlb	0	; () banked
  7624  0144BE  17CC               	andwf	___ftmul@f2& (0+255),f,b
  7625  0144C0  0EFF               	movlw	255
  7626  0144C2  0100               	movlb	0	; () banked
  7627  0144C4  17CD               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7628  0144C6  0E00               	movlw	0
  7629  0144C8  0100               	movlb	0	; () banked
  7630  0144CA  17CE               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7631                           
  7632                           ; BSR set to: 0
  7633  0144CC  0E00               	movlw	0
  7634  0144CE  0101               	movlb	1	; () banked
  7635  0144D0  6FD7               	movwf	___ftmul@f3_as_product& (0+255),b
  7636  0144D2  0E00               	movlw	0
  7637  0144D4  0101               	movlb	1	; () banked
  7638  0144D6  6FD8               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7639  0144D8  0E00               	movlw	0
  7640  0144DA  0101               	movlb	1	; () banked
  7641  0144DC  6FD9               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7642                           
  7643                           ; BSR set to: 1
  7644  0144DE  0E07               	movlw	7
  7645  0144E0  0101               	movlb	1	; () banked
  7646  0144E2  6FDA               	movwf	___ftmul@cntr& (0+255),b
  7647  0144E4                     l13242:
  7648                           
  7649                           ; BSR set to: 1
  7650  0144E4  0100               	movlb	0	; () banked
  7651  0144E6  A1C9               	btfss	___ftmul@f1& (0+255),0,b
  7652  0144E8  D00C               	goto	l13246
  7653                           
  7654                           ; BSR set to: 0
  7655  0144EA  0100               	movlb	0	; () banked
  7656  0144EC  51CC               	movf	___ftmul@f2& (0+255),w,b
  7657  0144EE  0101               	movlb	1	; () banked
  7658  0144F0  27D7               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7659  0144F2  0100               	movlb	0	; () banked
  7660  0144F4  51CD               	movf	(___ftmul@f2+1)& (0+255),w,b
  7661  0144F6  0101               	movlb	1	; () banked
  7662  0144F8  23D8               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7663  0144FA  0100               	movlb	0	; () banked
  7664  0144FC  51CE               	movf	(___ftmul@f2+2)& (0+255),w,b
  7665  0144FE  0101               	movlb	1	; () banked
  7666  014500  23D9               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7667  014502                     l13246:
  7668  014502  0100               	movlb	0	; () banked
  7669  014504  90D8               	bcf	status,0,c
  7670  014506  33CB               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7671  014508  33CA               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7672  01450A  33C9               	rrcf	___ftmul@f1& (0+255),f,b
  7673  01450C  0100               	movlb	0	; () banked
  7674  01450E  90D8               	bcf	status,0,c
  7675  014510  37CC               	rlcf	___ftmul@f2& (0+255),f,b
  7676  014512  37CD               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7677  014514  37CE               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7678                           
  7679                           ; BSR set to: 0
  7680  014516  0101               	movlb	1	; () banked
  7681  014518  2FDA               	decfsz	___ftmul@cntr& (0+255),f,b
  7682  01451A  D7E4               	goto	l13242
  7683                           
  7684                           ; BSR set to: 1
  7685                           
  7686                           ; BSR set to: 1
  7687  01451C  0E09               	movlw	9
  7688  01451E  0101               	movlb	1	; () banked
  7689  014520  6FDA               	movwf	___ftmul@cntr& (0+255),b
  7690  014522                     l13252:
  7691                           
  7692                           ; BSR set to: 1
  7693  014522  0100               	movlb	0	; () banked
  7694  014524  A1C9               	btfss	___ftmul@f1& (0+255),0,b
  7695  014526  D00C               	goto	l13256
  7696                           
  7697                           ; BSR set to: 0
  7698  014528  0100               	movlb	0	; () banked
  7699  01452A  51CC               	movf	___ftmul@f2& (0+255),w,b
  7700  01452C  0101               	movlb	1	; () banked
  7701  01452E  27D7               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7702  014530  0100               	movlb	0	; () banked
  7703  014532  51CD               	movf	(___ftmul@f2+1)& (0+255),w,b
  7704  014534  0101               	movlb	1	; () banked
  7705  014536  23D8               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7706  014538  0100               	movlb	0	; () banked
  7707  01453A  51CE               	movf	(___ftmul@f2+2)& (0+255),w,b
  7708  01453C  0101               	movlb	1	; () banked
  7709  01453E  23D9               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7710  014540                     l13256:
  7711  014540  0100               	movlb	0	; () banked
  7712  014542  90D8               	bcf	status,0,c
  7713  014544  33CB               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7714  014546  33CA               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7715  014548  33C9               	rrcf	___ftmul@f1& (0+255),f,b
  7716  01454A  0101               	movlb	1	; () banked
  7717  01454C  90D8               	bcf	status,0,c
  7718  01454E  33D9               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7719  014550  33D8               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7720  014552  33D7               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7721                           
  7722                           ; BSR set to: 1
  7723  014554  0101               	movlb	1	; () banked
  7724  014556  2FDA               	decfsz	___ftmul@cntr& (0+255),f,b
  7725  014558  D7E4               	goto	l13252
  7726                           
  7727                           ; BSR set to: 1
  7728                           
  7729                           ; BSR set to: 1
  7730  01455A  C1D7  F081         	movff	___ftmul@f3_as_product,___ftpack@arg
  7731  01455E  C1D8  F082         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7732  014562  C1D9  F083         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7733  014566  C1D6  F084         	movff	___ftmul@exp,___ftpack@exp
  7734  01456A  C1DB  F085         	movff	___ftmul@sign,___ftpack@sign
  7735  01456E  ECD5  F0A8         	call	___ftpack	;wreg free
  7736  014572  C081  F0C9         	movff	?___ftpack,?___ftmul
  7737  014576  C082  F0CA         	movff	?___ftpack+1,?___ftmul+1
  7738  01457A  C083  F0CB         	movff	?___ftpack+2,?___ftmul+2
  7739  01457E  0012               	return	
  7740  014580                     __end_of___ftmul:
  7741                           	opt stack 0
  7742                           tblptru	equ	0xFF8
  7743                           tblptrh	equ	0xFF7
  7744                           tblptrl	equ	0xFF6
  7745                           tablat	equ	0xFF5
  7746                           prodh	equ	0xFF4
  7747                           prodl	equ	0xFF3
  7748                           postinc0	equ	0xFEE
  7749                           plusw0	equ	0xFEB
  7750                           wreg	equ	0xFE8
  7751                           indf1	equ	0xFE7
  7752                           fsr1h	equ	0xFE2
  7753                           fsr1l	equ	0xFE1
  7754                           indf2	equ	0xFDF
  7755                           postinc2	equ	0xFDE
  7756                           postdec2	equ	0xFDD
  7757                           plusw2	equ	0xFDB
  7758                           fsr2h	equ	0xFDA
  7759                           fsr2l	equ	0xFD9
  7760                           status	equ	0xFD8
  7761                           
  7762 ;; *************** function ___ftdiv *****************
  7763 ;; Defined at:
  7764 ;;		line 54 in file "/opt/microchip/xc8/v1.35/sources/common/ftdiv.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  f1              3   54[BANK0 ] float 
  7767 ;;  f2              3   57[BANK0 ] float 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;  f3              3   64[BANK0 ] float 
  7770 ;;  sign            1   68[BANK0 ] unsigned char 
  7771 ;;  exp             1   67[BANK0 ] unsigned char 
  7772 ;;  cntr            1   63[BANK0 ] unsigned char 
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  3   54[BANK0 ] float 
  7775 ;; Registers used:
  7776 ;;		wreg, status,2, status,0, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7782 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7785 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7786 ;;Total ram usage:       15 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:    8
  7789 ;; This function calls:
  7790 ;;		___ftpack
  7791 ;; This function is called by:
  7792 ;;		_read_sensors
  7793 ;;		_send_initial_update
  7794 ;;		_send_periodical_update
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text18
  7799  014824                     __ptext18:
  7800                           	opt stack 0
  7801  014824                     ___ftdiv:
  7802                           	opt stack 21
  7803                           
  7804                           ;incstack = 0
  7805  014824  C098  F09C         	movff	___ftdiv@f1+2,??___ftdiv
  7806  014828  0100               	movlb	0	; () banked
  7807  01482A  6B9D               	clrf	(??___ftdiv+1)& (0+255),b
  7808  01482C  6B9E               	clrf	(??___ftdiv+2)& (0+255),b
  7809  01482E  0100               	movlb	0	; () banked
  7810  014830  3597               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  7811  014832  0100               	movlb	0	; () banked
  7812  014834  379C               	rlcf	??___ftdiv& (0+255),f,b
  7813  014836  E301               	bnc	u15311
  7814  014838  819D               	bsf	(??___ftdiv+1)& (0+255),0,b
  7815  01483A                     u15311:
  7816  01483A  0100               	movlb	0	; () banked
  7817  01483C  519C               	movf	??___ftdiv& (0+255),w,b
  7818  01483E  0100               	movlb	0	; () banked
  7819  014840  6FA3               	movwf	___ftdiv@exp& (0+255),b
  7820  014842  0100               	movlb	0	; () banked
  7821  014844  51A3               	movf	___ftdiv@exp& (0+255),w,b
  7822  014846  A4D8               	btfss	status,2,c
  7823  014848  D00A               	goto	l13176
  7824                           
  7825                           ; BSR set to: 0
  7826  01484A  0E00               	movlw	0
  7827  01484C  0100               	movlb	0	; () banked
  7828  01484E  6F96               	movwf	?___ftdiv& (0+255),b
  7829  014850  0E00               	movlw	0
  7830  014852  0100               	movlb	0	; () banked
  7831  014854  6F97               	movwf	(?___ftdiv+1)& (0+255),b
  7832  014856  0E00               	movlw	0
  7833  014858  0100               	movlb	0	; () banked
  7834  01485A  6F98               	movwf	(?___ftdiv+2)& (0+255),b
  7835                           
  7836                           ; BSR set to: 0
  7837  01485C  0012               	return	
  7838  01485E                     l13176:
  7839                           
  7840                           ; BSR set to: 0
  7841  01485E  C09B  F09C         	movff	___ftdiv@f2+2,??___ftdiv
  7842  014862  0100               	movlb	0	; () banked
  7843  014864  6B9D               	clrf	(??___ftdiv+1)& (0+255),b
  7844  014866  6B9E               	clrf	(??___ftdiv+2)& (0+255),b
  7845  014868  0100               	movlb	0	; () banked
  7846  01486A  359A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  7847  01486C  0100               	movlb	0	; () banked
  7848  01486E  379C               	rlcf	??___ftdiv& (0+255),f,b
  7849  014870  E301               	bnc	u15331
  7850  014872  819D               	bsf	(??___ftdiv+1)& (0+255),0,b
  7851  014874                     u15331:
  7852  014874  0100               	movlb	0	; () banked
  7853  014876  519C               	movf	??___ftdiv& (0+255),w,b
  7854  014878  0100               	movlb	0	; () banked
  7855  01487A  6FA4               	movwf	___ftdiv@sign& (0+255),b
  7856  01487C  0100               	movlb	0	; () banked
  7857  01487E  51A4               	movf	___ftdiv@sign& (0+255),w,b
  7858  014880  A4D8               	btfss	status,2,c
  7859  014882  D00A               	goto	l13182
  7860                           
  7861                           ; BSR set to: 0
  7862  014884  0E00               	movlw	0
  7863  014886  0100               	movlb	0	; () banked
  7864  014888  6F96               	movwf	?___ftdiv& (0+255),b
  7865  01488A  0E00               	movlw	0
  7866  01488C  0100               	movlb	0	; () banked
  7867  01488E  6F97               	movwf	(?___ftdiv+1)& (0+255),b
  7868  014890  0E00               	movlw	0
  7869  014892  0100               	movlb	0	; () banked
  7870  014894  6F98               	movwf	(?___ftdiv+2)& (0+255),b
  7871                           
  7872                           ; BSR set to: 0
  7873  014896  0012               	return	
  7874  014898                     l13182:
  7875                           
  7876                           ; BSR set to: 0
  7877  014898  0E00               	movlw	0
  7878  01489A  0100               	movlb	0	; () banked
  7879  01489C  6FA0               	movwf	___ftdiv@f3& (0+255),b
  7880  01489E  0E00               	movlw	0
  7881  0148A0  0100               	movlb	0	; () banked
  7882  0148A2  6FA1               	movwf	(___ftdiv@f3+1)& (0+255),b
  7883  0148A4  0E00               	movlw	0
  7884  0148A6  0100               	movlb	0	; () banked
  7885  0148A8  6FA2               	movwf	(___ftdiv@f3+2)& (0+255),b
  7886                           
  7887                           ; BSR set to: 0
  7888  0148AA  0100               	movlb	0	; () banked
  7889  0148AC  51A4               	movf	___ftdiv@sign& (0+255),w,b
  7890  0148AE  0F89               	addlw	137
  7891  0148B0  0100               	movlb	0	; () banked
  7892  0148B2  5FA3               	subwf	___ftdiv@exp& (0+255),f,b
  7893                           
  7894                           ; BSR set to: 0
  7895  0148B4  C098  F0A4         	movff	___ftdiv@f1+2,___ftdiv@sign
  7896                           
  7897                           ; BSR set to: 0
  7898  0148B8  0100               	movlb	0	; () banked
  7899  0148BA  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7900  0148BC  0100               	movlb	0	; () banked
  7901  0148BE  1BA4               	xorwf	___ftdiv@sign& (0+255),f,b
  7902                           
  7903                           ; BSR set to: 0
  7904  0148C0  0E80               	movlw	128
  7905  0148C2  0100               	movlb	0	; () banked
  7906  0148C4  17A4               	andwf	___ftdiv@sign& (0+255),f,b
  7907                           
  7908                           ; BSR set to: 0
  7909  0148C6  0100               	movlb	0	; () banked
  7910  0148C8  8F97               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  7911                           
  7912                           ; BSR set to: 0
  7913  0148CA  0EFF               	movlw	255
  7914  0148CC  0100               	movlb	0	; () banked
  7915  0148CE  1796               	andwf	___ftdiv@f1& (0+255),f,b
  7916  0148D0  0EFF               	movlw	255
  7917  0148D2  0100               	movlb	0	; () banked
  7918  0148D4  1797               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  7919  0148D6  0E00               	movlw	0
  7920  0148D8  0100               	movlb	0	; () banked
  7921  0148DA  1798               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  7922                           
  7923                           ; BSR set to: 0
  7924  0148DC  0100               	movlb	0	; () banked
  7925  0148DE  8F9A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  7926                           
  7927                           ; BSR set to: 0
  7928  0148E0  0EFF               	movlw	255
  7929  0148E2  0100               	movlb	0	; () banked
  7930  0148E4  1799               	andwf	___ftdiv@f2& (0+255),f,b
  7931  0148E6  0EFF               	movlw	255
  7932  0148E8  0100               	movlb	0	; () banked
  7933  0148EA  179A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  7934  0148EC  0E00               	movlw	0
  7935  0148EE  0100               	movlb	0	; () banked
  7936  0148F0  179B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  7937                           
  7938                           ; BSR set to: 0
  7939  0148F2  0E18               	movlw	24
  7940  0148F4  0100               	movlb	0	; () banked
  7941  0148F6  6F9F               	movwf	___ftdiv@cntr& (0+255),b
  7942  0148F8                     l13202:
  7943                           
  7944                           ; BSR set to: 0
  7945  0148F8  0100               	movlb	0	; () banked
  7946  0148FA  90D8               	bcf	status,0,c
  7947  0148FC  37A0               	rlcf	___ftdiv@f3& (0+255),f,b
  7948  0148FE  37A1               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  7949  014900  37A2               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  7950                           
  7951                           ; BSR set to: 0
  7952  014902  0100               	movlb	0	; () banked
  7953  014904  5199               	movf	___ftdiv@f2& (0+255),w,b
  7954  014906  0100               	movlb	0	; () banked
  7955  014908  5D96               	subwf	___ftdiv@f1& (0+255),w,b
  7956  01490A  0100               	movlb	0	; () banked
  7957  01490C  519A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7958  01490E  0100               	movlb	0	; () banked
  7959  014910  5997               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  7960  014912  0100               	movlb	0	; () banked
  7961  014914  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7962  014916  0100               	movlb	0	; () banked
  7963  014918  5998               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  7964  01491A  A0D8               	btfss	status,0,c
  7965  01491C  D00E               	goto	l1767
  7966                           
  7967                           ; BSR set to: 0
  7968  01491E  0100               	movlb	0	; () banked
  7969  014920  5199               	movf	___ftdiv@f2& (0+255),w,b
  7970  014922  0100               	movlb	0	; () banked
  7971  014924  5F96               	subwf	___ftdiv@f1& (0+255),f,b
  7972  014926  0100               	movlb	0	; () banked
  7973  014928  519A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7974  01492A  0100               	movlb	0	; () banked
  7975  01492C  5B97               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  7976  01492E  0100               	movlb	0	; () banked
  7977  014930  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7978  014932  0100               	movlb	0	; () banked
  7979  014934  5B98               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  7980                           
  7981                           ; BSR set to: 0
  7982  014936  0100               	movlb	0	; () banked
  7983  014938  81A0               	bsf	___ftdiv@f3& (0+255),0,b
  7984  01493A                     l1767:
  7985                           
  7986                           ; BSR set to: 0
  7987  01493A  0100               	movlb	0	; () banked
  7988  01493C  90D8               	bcf	status,0,c
  7989  01493E  3796               	rlcf	___ftdiv@f1& (0+255),f,b
  7990  014940  3797               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  7991  014942  3798               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  7992                           
  7993                           ; BSR set to: 0
  7994  014944  0100               	movlb	0	; () banked
  7995  014946  2F9F               	decfsz	___ftdiv@cntr& (0+255),f,b
  7996  014948  D7D7               	goto	l13202
  7997                           
  7998                           ; BSR set to: 0
  7999                           
  8000                           ; BSR set to: 0
  8001  01494A  C0A0  F081         	movff	___ftdiv@f3,___ftpack@arg
  8002  01494E  C0A1  F082         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8003  014952  C0A2  F083         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8004  014956  C0A3  F084         	movff	___ftdiv@exp,___ftpack@exp
  8005  01495A  C0A4  F085         	movff	___ftdiv@sign,___ftpack@sign
  8006  01495E  ECD5  F0A8         	call	___ftpack	;wreg free
  8007  014962  C081  F096         	movff	?___ftpack,?___ftdiv
  8008  014966  C082  F097         	movff	?___ftpack+1,?___ftdiv+1
  8009  01496A  C083  F098         	movff	?___ftpack+2,?___ftdiv+2
  8010  01496E  0012               	return	
  8011  014970                     __end_of___ftdiv:
  8012                           	opt stack 0
  8013                           tblptru	equ	0xFF8
  8014                           tblptrh	equ	0xFF7
  8015                           tblptrl	equ	0xFF6
  8016                           tablat	equ	0xFF5
  8017                           prodh	equ	0xFF4
  8018                           prodl	equ	0xFF3
  8019                           postinc0	equ	0xFEE
  8020                           plusw0	equ	0xFEB
  8021                           wreg	equ	0xFE8
  8022                           indf1	equ	0xFE7
  8023                           fsr1h	equ	0xFE2
  8024                           fsr1l	equ	0xFE1
  8025                           indf2	equ	0xFDF
  8026                           postinc2	equ	0xFDE
  8027                           postdec2	equ	0xFDD
  8028                           plusw2	equ	0xFDB
  8029                           fsr2h	equ	0xFDA
  8030                           fsr2l	equ	0xFD9
  8031                           status	equ	0xFD8
  8032                           
  8033 ;; *************** function ___ftpack *****************
  8034 ;; Defined at:
  8035 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/float.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  arg             3   33[BANK0 ] unsigned um
  8038 ;;  exp             1   36[BANK0 ] unsigned char 
  8039 ;;  sign            1   37[BANK0 ] unsigned char 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  3   33[BANK0 ] float 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8051 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8053 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8054 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8055 ;;Total ram usage:        8 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:    7
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		___altoft
  8062 ;;		___ftadd
  8063 ;;		___ftdiv
  8064 ;;		___ftmul
  8065 ;;		___lltoft
  8066 ;;		___lwtoft
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text19
  8071  0151AA                     __ptext19:
  8072                           	opt stack 0
  8073  0151AA                     ___ftpack:
  8074                           	opt stack 20
  8075                           
  8076                           ;incstack = 0
  8077  0151AA  0100               	movlb	0	; () banked
  8078  0151AC  5184               	movf	___ftpack@exp& (0+255),w,b
  8079  0151AE  0100               	movlb	0	; () banked
  8080  0151B0  B4D8               	btfsc	status,2,c
  8081  0151B2  D008               	goto	l12148
  8082                           
  8083                           ; BSR set to: 0
  8084  0151B4  0100               	movlb	0	; () banked
  8085  0151B6  5181               	movf	___ftpack@arg& (0+255),w,b
  8086  0151B8  0100               	movlb	0	; () banked
  8087  0151BA  1182               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  8088  0151BC  0100               	movlb	0	; () banked
  8089  0151BE  1183               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  8090  0151C0  A4D8               	btfss	status,2,c
  8091  0151C2  D011               	goto	l12154
  8092  0151C4                     l12148:
  8093                           
  8094                           ; BSR set to: 0
  8095  0151C4  0E00               	movlw	0
  8096  0151C6  0100               	movlb	0	; () banked
  8097  0151C8  6F81               	movwf	?___ftpack& (0+255),b
  8098  0151CA  0E00               	movlw	0
  8099  0151CC  0100               	movlb	0	; () banked
  8100  0151CE  6F82               	movwf	(?___ftpack+1)& (0+255),b
  8101  0151D0  0E00               	movlw	0
  8102  0151D2  0100               	movlb	0	; () banked
  8103  0151D4  6F83               	movwf	(?___ftpack+2)& (0+255),b
  8104                           
  8105                           ; BSR set to: 0
  8106  0151D6  0012               	return	
  8107  0151D8                     l12152:
  8108                           
  8109                           ; BSR set to: 0
  8110  0151D8  0100               	movlb	0	; () banked
  8111  0151DA  2B84               	incf	___ftpack@exp& (0+255),f,b
  8112  0151DC  0100               	movlb	0	; () banked
  8113  0151DE  90D8               	bcf	status,0,c
  8114  0151E0  3383               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8115  0151E2  3382               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8116  0151E4  3381               	rrcf	___ftpack@arg& (0+255),f,b
  8117  0151E6                     l12154:
  8118                           
  8119                           ; BSR set to: 0
  8120  0151E6  0E00               	movlw	0
  8121  0151E8  0100               	movlb	0	; () banked
  8122  0151EA  1581               	andwf	___ftpack@arg& (0+255),w,b
  8123  0151EC  0100               	movlb	0	; () banked
  8124  0151EE  6F86               	movwf	??___ftpack& (0+255),b
  8125  0151F0  0E00               	movlw	0
  8126  0151F2  0100               	movlb	0	; () banked
  8127  0151F4  1582               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8128  0151F6  0100               	movlb	0	; () banked
  8129  0151F8  6F87               	movwf	(??___ftpack+1)& (0+255),b
  8130  0151FA  0EFE               	movlw	254
  8131  0151FC  0100               	movlb	0	; () banked
  8132  0151FE  1583               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8133  015200  0100               	movlb	0	; () banked
  8134  015202  6F88               	movwf	(??___ftpack+2)& (0+255),b
  8135  015204  0100               	movlb	0	; () banked
  8136  015206  5186               	movf	??___ftpack& (0+255),w,b
  8137  015208  0100               	movlb	0	; () banked
  8138  01520A  1187               	iorwf	(??___ftpack+1)& (0+255),w,b
  8139  01520C  0100               	movlb	0	; () banked
  8140  01520E  1188               	iorwf	(??___ftpack+2)& (0+255),w,b
  8141  015210  B4D8               	btfsc	status,2,c
  8142  015212  D011               	goto	l12160
  8143  015214  D7E1               	goto	l12152
  8144  015216                     l12156:
  8145                           
  8146                           ; BSR set to: 0
  8147  015216  0100               	movlb	0	; () banked
  8148  015218  2B84               	incf	___ftpack@exp& (0+255),f,b
  8149                           
  8150                           ; BSR set to: 0
  8151  01521A  0E01               	movlw	1
  8152  01521C  0100               	movlb	0	; () banked
  8153  01521E  2781               	addwf	___ftpack@arg& (0+255),f,b
  8154  015220  0E00               	movlw	0
  8155  015222  0100               	movlb	0	; () banked
  8156  015224  2382               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  8157  015226  0E00               	movlw	0
  8158  015228  0100               	movlb	0	; () banked
  8159  01522A  2383               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  8160  01522C  0100               	movlb	0	; () banked
  8161  01522E  90D8               	bcf	status,0,c
  8162  015230  3383               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8163  015232  3382               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8164  015234  3381               	rrcf	___ftpack@arg& (0+255),f,b
  8165  015236                     l12160:
  8166                           
  8167                           ; BSR set to: 0
  8168  015236  0E00               	movlw	0
  8169  015238  0100               	movlb	0	; () banked
  8170  01523A  1581               	andwf	___ftpack@arg& (0+255),w,b
  8171  01523C  0100               	movlb	0	; () banked
  8172  01523E  6F86               	movwf	??___ftpack& (0+255),b
  8173  015240  0E00               	movlw	0
  8174  015242  0100               	movlb	0	; () banked
  8175  015244  1582               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8176  015246  0100               	movlb	0	; () banked
  8177  015248  6F87               	movwf	(??___ftpack+1)& (0+255),b
  8178  01524A  0EFF               	movlw	255
  8179  01524C  0100               	movlb	0	; () banked
  8180  01524E  1583               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8181  015250  0100               	movlb	0	; () banked
  8182  015252  6F88               	movwf	(??___ftpack+2)& (0+255),b
  8183  015254  0100               	movlb	0	; () banked
  8184  015256  5186               	movf	??___ftpack& (0+255),w,b
  8185  015258  0100               	movlb	0	; () banked
  8186  01525A  1187               	iorwf	(??___ftpack+1)& (0+255),w,b
  8187  01525C  0100               	movlb	0	; () banked
  8188  01525E  1188               	iorwf	(??___ftpack+2)& (0+255),w,b
  8189  015260  B4D8               	btfsc	status,2,c
  8190  015262  D008               	goto	l12164
  8191  015264  D7D8               	goto	l12156
  8192  015266                     l12162:
  8193                           
  8194                           ; BSR set to: 0
  8195  015266  0100               	movlb	0	; () banked
  8196  015268  0784               	decf	___ftpack@exp& (0+255),f,b
  8197  01526A  0100               	movlb	0	; () banked
  8198  01526C  90D8               	bcf	status,0,c
  8199  01526E  3781               	rlcf	___ftpack@arg& (0+255),f,b
  8200  015270  3782               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  8201  015272  3783               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  8202  015274                     l12164:
  8203                           
  8204                           ; BSR set to: 0
  8205  015274  0100               	movlb	0	; () banked
  8206  015276  BF82               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  8207  015278  D004               	goto	l1684
  8208                           
  8209                           ; BSR set to: 0
  8210  01527A  0E02               	movlw	2
  8211  01527C  0100               	movlb	0	; () banked
  8212  01527E  6184               	cpfslt	___ftpack@exp& (0+255),b
  8213  015280  D7F2               	goto	l12162
  8214  015282                     l1684:
  8215                           
  8216                           ; BSR set to: 0
  8217  015282  0100               	movlb	0	; () banked
  8218  015284  B184               	btfsc	___ftpack@exp& (0+255),0,b
  8219  015286  D002               	goto	l12170
  8220                           
  8221                           ; BSR set to: 0
  8222  015288  0100               	movlb	0	; () banked
  8223  01528A  9F82               	bcf	(___ftpack@arg+1)& (0+255),7,b
  8224  01528C                     l12170:
  8225                           
  8226                           ; BSR set to: 0
  8227  01528C  0100               	movlb	0	; () banked
  8228  01528E  90D8               	bcf	status,0,c
  8229  015290  3384               	rrcf	___ftpack@exp& (0+255),f,b
  8230  015292  0100               	movlb	0	; () banked
  8231  015294  5184               	movf	___ftpack@exp& (0+255),w,b
  8232  015296  0100               	movlb	0	; () banked
  8233  015298  1383               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  8234                           
  8235                           ; BSR set to: 0
  8236  01529A  0100               	movlb	0	; () banked
  8237  01529C  5185               	movf	___ftpack@sign& (0+255),w,b
  8238  01529E  0100               	movlb	0	; () banked
  8239  0152A0  B4D8               	btfsc	status,2,c
  8240  0152A2  D002               	goto	l12176
  8241                           
  8242                           ; BSR set to: 0
  8243  0152A4  0100               	movlb	0	; () banked
  8244  0152A6  8F83               	bsf	(___ftpack@arg+2)& (0+255),7,b
  8245  0152A8                     l12176:
  8246                           
  8247                           ; BSR set to: 0
  8248  0152A8  C081  F081         	movff	___ftpack@arg,?___ftpack
  8249  0152AC  C082  F082         	movff	___ftpack@arg+1,?___ftpack+1
  8250  0152B0  C083  F083         	movff	___ftpack@arg+2,?___ftpack+2
  8251  0152B4  0012               	return	
  8252  0152B6                     __end_of___ftpack:
  8253                           	opt stack 0
  8254                           tblptru	equ	0xFF8
  8255                           tblptrh	equ	0xFF7
  8256                           tblptrl	equ	0xFF6
  8257                           tablat	equ	0xFF5
  8258                           prodh	equ	0xFF4
  8259                           prodl	equ	0xFF3
  8260                           postinc0	equ	0xFEE
  8261                           plusw0	equ	0xFEB
  8262                           wreg	equ	0xFE8
  8263                           indf1	equ	0xFE7
  8264                           fsr1h	equ	0xFE2
  8265                           fsr1l	equ	0xFE1
  8266                           indf2	equ	0xFDF
  8267                           postinc2	equ	0xFDE
  8268                           postdec2	equ	0xFDD
  8269                           plusw2	equ	0xFDB
  8270                           fsr2h	equ	0xFDA
  8271                           fsr2l	equ	0xFD9
  8272                           status	equ	0xFD8
  8273                           
  8274 ;; *************** function _WriteI2C1 *****************
  8275 ;; Defined at:
  8276 ;;		line 12 in file "/opt/microchip/xc8/v1.35/sources/pic18/plib/i2c/i2c1writ.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;  data_out        1    wreg     unsigned char 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  data_out        1   34[BANK0 ] unsigned char 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      char 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8293 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8294 ;;Total ram usage:        2 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    7
  8297 ;; This function calls:
  8298 ;;		Nothing
  8299 ;; This function is called by:
  8300 ;;		_read_sensors
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text20
  8305  01648C                     __ptext20:
  8306                           	opt stack 0
  8307  01648C                     _WriteI2C1:
  8308                           	opt stack 22
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;incstack = 0
  8312                           ;WriteI2C1@data_out stored from wreg
  8313  01648C  0100               	movlb	0	; () banked
  8314  01648E  6F82               	movwf	WriteI2C1@data_out& (0+255),b
  8315  016490  C082  FFC9         	movff	WriteI2C1@data_out,4041	;volatile
  8316  016494  BEC6               	btfsc	4038,7,c	;volatile
  8317  016496  0012               	return	
  8318                           
  8319                           ;	Return value of _WriteI2C1 is never used
  8320  016498  50C6               	movf	4038,w,c	;volatile
  8321  01649A  0B0F               	andlw	15
  8322  01649C  0A08               	xorlw	8
  8323  01649E  B4D8               	btfsc	status,2,c
  8324  0164A0  D00C               	goto	l12992
  8325  0164A2  50C6               	movf	4038,w,c	;volatile
  8326  0164A4  0B0F               	andlw	15
  8327  0164A6  0A0B               	xorlw	11
  8328  0164A8  B4D8               	btfsc	status,2,c
  8329  0164AA  D007               	goto	l12992
  8330  0164AC  88C6               	bsf	4038,4,c	;volatile
  8331  0164AE                     l1434:
  8332  0164AE  A69E               	btfss	3998,3,c	;volatile
  8333  0164B0  D7FE               	goto	l1434
  8334  0164B2  B4C7               	btfsc	4039,2,c	;volatile
  8335  0164B4  0012               	return	
  8336  0164B6  50C7               	movf	4039,w,c	;volatile
  8337                           
  8338                           ;	Return value of _WriteI2C1 is never used
  8339                           
  8340                           ;	Return value of _WriteI2C1 is never used
  8341  0164B8  0012               	return	
  8342  0164BA                     l12992:
  8343  0164BA  50C6               	movf	4038,w,c	;volatile
  8344  0164BC  0B0F               	andlw	15
  8345  0164BE  0A08               	xorlw	8
  8346  0164C0  B4D8               	btfsc	status,2,c
  8347  0164C2  D005               	goto	l1443
  8348  0164C4  50C6               	movf	4038,w,c	;volatile
  8349  0164C6  0B0F               	andlw	15
  8350  0164C8  0A0B               	xorlw	11
  8351  0164CA  A4D8               	btfss	status,2,c
  8352  0164CC  0012               	return	
  8353  0164CE                     l1443:
  8354  0164CE  B0C7               	btfsc	4039,0,c	;volatile
  8355  0164D0  D7FE               	goto	l1443
  8356  0164D2                     l12996:
  8357  0164D2  A4C7               	btfss	4039,2,c	;volatile
  8358  0164D4  D004               	goto	u15110
  8359  0164D6  0100               	movlb	0	; () banked
  8360  0164D8  6B81               	clrf	??_WriteI2C1& (0+255),b
  8361  0164DA  2B81               	incf	??_WriteI2C1& (0+255),f,b
  8362  0164DC  D002               	goto	u15118
  8363  0164DE                     u15110:
  8364  0164DE  0100               	movlb	0	; () banked
  8365  0164E0  6B81               	clrf	??_WriteI2C1& (0+255),b
  8366  0164E2                     u15118:
  8367  0164E2  50C5               	movf	4037,w,c	;volatile
  8368  0164E4  0B1F               	andlw	31
  8369  0164E6  0100               	movlb	0	; () banked
  8370  0164E8  1181               	iorwf	??_WriteI2C1& (0+255),w,b
  8371  0164EA  0900               	iorlw	0
  8372  0164EC  A4D8               	btfss	status,2,c
  8373  0164EE  D7F1               	goto	l12996
  8374                           
  8375                           ; BSR set to: 0
  8376  0164F0  50C5               	movf	4037,w,c	;volatile
  8377                           
  8378                           ; BSR set to: 0
  8379                           
  8380                           ; BSR set to: 0
  8381                           
  8382                           ; BSR set to: 0
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;	Return value of _WriteI2C1 is never used
  8386                           
  8387                           ; BSR set to: 0
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;	Return value of _WriteI2C1 is never used
  8391  0164F2  0012               	return	
  8392  0164F4                     __end_of_WriteI2C1:
  8393                           	opt stack 0
  8394                           tblptru	equ	0xFF8
  8395                           tblptrh	equ	0xFF7
  8396                           tblptrl	equ	0xFF6
  8397                           tablat	equ	0xFF5
  8398                           prodh	equ	0xFF4
  8399                           prodl	equ	0xFF3
  8400                           postinc0	equ	0xFEE
  8401                           plusw0	equ	0xFEB
  8402                           wreg	equ	0xFE8
  8403                           indf1	equ	0xFE7
  8404                           fsr1h	equ	0xFE2
  8405                           fsr1l	equ	0xFE1
  8406                           indf2	equ	0xFDF
  8407                           postinc2	equ	0xFDE
  8408                           postdec2	equ	0xFDD
  8409                           plusw2	equ	0xFDB
  8410                           fsr2h	equ	0xFDA
  8411                           fsr2l	equ	0xFD9
  8412                           status	equ	0xFD8
  8413                           
  8414 ;; *************** function _ReadI2C1 *****************
  8415 ;; Defined at:
  8416 ;;		line 11 in file "/opt/microchip/xc8/v1.35/sources/pic18/plib/i2c/i2c1read.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;		None
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;		None
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  1    wreg      unsigned char 
  8423 ;; Registers used:
  8424 ;;		wreg, status,2, status,0
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8434 ;;Total ram usage:        0 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; Hardware stack levels required when called:    7
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		_read_sensors
  8441 ;; This function uses a non-reentrant model
  8442 ;;
  8443                           
  8444                           	psect	text21
  8445  016A76                     __ptext21:
  8446                           	opt stack 0
  8447  016A76                     _ReadI2C1:
  8448                           	opt stack 22
  8449                           
  8450                           ;incstack = 0
  8451  016A76  50C6               	movf	4038,w,c	;volatile
  8452  016A78  0B0F               	andlw	15
  8453  016A7A  0A08               	xorlw	8
  8454  016A7C  B4D8               	btfsc	status,2,c
  8455  016A7E  D004               	goto	l1409
  8456  016A80  50C6               	movf	4038,w,c	;volatile
  8457  016A82  0B0F               	andlw	15
  8458  016A84  0A0B               	xorlw	11
  8459  016A86  B4D8               	btfsc	status,2,c
  8460  016A88                     l1409:
  8461  016A88  86C5               	bsf	4037,3,c	;volatile
  8462  016A8A                     l1410:
  8463  016A8A  A0C7               	btfss	4039,0,c	;volatile
  8464  016A8C  D7FE               	goto	l1410
  8465  016A8E  50C9               	movf	4041,w,c	;volatile
  8466  016A90  0012               	return	
  8467  016A92                     __end_of_ReadI2C1:
  8468                           	opt stack 0
  8469                           tblptru	equ	0xFF8
  8470                           tblptrh	equ	0xFF7
  8471                           tblptrl	equ	0xFF6
  8472                           tablat	equ	0xFF5
  8473                           prodh	equ	0xFF4
  8474                           prodl	equ	0xFF3
  8475                           postinc0	equ	0xFEE
  8476                           plusw0	equ	0xFEB
  8477                           wreg	equ	0xFE8
  8478                           indf1	equ	0xFE7
  8479                           fsr1h	equ	0xFE2
  8480                           fsr1l	equ	0xFE1
  8481                           indf2	equ	0xFDF
  8482                           postinc2	equ	0xFDE
  8483                           postdec2	equ	0xFDD
  8484                           plusw2	equ	0xFDB
  8485                           fsr2h	equ	0xFDA
  8486                           fsr2l	equ	0xFD9
  8487                           status	equ	0xFD8
  8488                           
  8489 ;; *************** function _OpenI2C1 *****************
  8490 ;; Defined at:
  8491 ;;		line 29 in file "/opt/microchip/xc8/v1.35/sources/pic18/plib/i2c/i2c1open.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  sync_mode       1    wreg     unsigned char 
  8494 ;;  slew            1   33[BANK0 ] unsigned char 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  sync_mode       1   34[BANK0 ] unsigned char 
  8497 ;; Return value:  Size  Location     Type
  8498 ;;		None               void
  8499 ;; Registers used:
  8500 ;;		wreg, status,2, status,0
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8506 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8507 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8510 ;;Total ram usage:        2 bytes
  8511 ;; Hardware stack levels used:    1
  8512 ;; Hardware stack levels required when called:    7
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_read_sensors
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           	psect	text22
  8521  016A1A                     __ptext22:
  8522                           	opt stack 0
  8523  016A1A                     _OpenI2C1:
  8524                           	opt stack 22
  8525                           
  8526                           ;incstack = 0
  8527                           ;OpenI2C1@sync_mode stored from wreg
  8528  016A1A  0100               	movlb	0	; () banked
  8529  016A1C  6F82               	movwf	OpenI2C1@sync_mode& (0+255),b
  8530  016A1E  0E3F               	movlw	63
  8531  016A20  16C7               	andwf	4039,f,c	;volatile
  8532  016A22  0E00               	movlw	0
  8533  016A24  6EC6               	movwf	4038,c	;volatile
  8534  016A26  0E00               	movlw	0
  8535  016A28  6EC5               	movwf	4037,c	;volatile
  8536  016A2A  0100               	movlb	0	; () banked
  8537  016A2C  5182               	movf	OpenI2C1@sync_mode& (0+255),w,b
  8538  016A2E  12C6               	iorwf	4038,f,c	;volatile
  8539  016A30  0100               	movlb	0	; () banked
  8540  016A32  5181               	movf	OpenI2C1@slew& (0+255),w,b
  8541  016A34  12C7               	iorwf	4039,f,c	;volatile
  8542                           
  8543                           ; BSR set to: 0
  8544  016A36  8AC6               	bsf	4038,5,c	;volatile
  8545                           
  8546                           ; BSR set to: 0
  8547  016A38  0012               	return		;funcret
  8548  016A3A                     __end_of_OpenI2C1:
  8549                           	opt stack 0
  8550                           tblptru	equ	0xFF8
  8551                           tblptrh	equ	0xFF7
  8552                           tblptrl	equ	0xFF6
  8553                           tablat	equ	0xFF5
  8554                           prodh	equ	0xFF4
  8555                           prodl	equ	0xFF3
  8556                           postinc0	equ	0xFEE
  8557                           plusw0	equ	0xFEB
  8558                           wreg	equ	0xFE8
  8559                           indf1	equ	0xFE7
  8560                           fsr1h	equ	0xFE2
  8561                           fsr1l	equ	0xFE1
  8562                           indf2	equ	0xFDF
  8563                           postinc2	equ	0xFDE
  8564                           postdec2	equ	0xFDD
  8565                           plusw2	equ	0xFDB
  8566                           fsr2h	equ	0xFDA
  8567                           fsr2l	equ	0xFD9
  8568                           status	equ	0xFD8
  8569                           
  8570 ;; *************** function _process_update_answer *****************
  8571 ;; Defined at:
  8572 ;;		line 309 in file "src/main.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;		None
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;  ack_required    1   27[BANK2 ] unsigned char 
  8577 ;;  size            1   31[BANK2 ] unsigned char 
  8578 ;;  shortaddress    2   29[BANK2 ] unsigned char [2]
  8579 ;;  i               1   28[BANK2 ] unsigned char 
  8580 ;;  result          1   26[BANK2 ] unsigned char 
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1    wreg      unsigned char 
  8583 ;; Registers used:
  8584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8591 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8592 ;;      Temps:          0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8593 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8594 ;;Total ram usage:       13 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:   17
  8597 ;; This function calls:
  8598 ;;		_MiApp_DiscardMessage
  8599 ;;		_MiApp_MessageAvailable
  8600 ;;		_MiApp_TransceiverPowerState
  8601 ;;		_decode_variable
  8602 ;;		_send_writables_update
  8603 ;;		_timer_reset
  8604 ;;		_update_variable
  8605 ;;		_wait_for_1_sec
  8606 ;; This function is called by:
  8607 ;;		_main
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text23
  8612  013C40                     __ptext23:
  8613                           	opt stack 0
  8614  013C40                     _process_update_answer:
  8615                           	opt stack 13
  8616                           
  8617                           ;main.c: 311: uint8_t shortaddress[2];
  8618                           ;main.c: 312: uint8_t result = 0;
  8619                           
  8620                           ; BSR set to: 0
  8621                           ;incstack = 0
  8622  013C40  0E00               	movlw	0
  8623  013C42  0102               	movlb	2	; () banked
  8624  013C44  6FFA               	movwf	process_update_answer@result& (0+255),b
  8625  013C46                     l1100:
  8626                           
  8627                           ; BSR set to: 2
  8628                           ;main.c: 319: {
  8629                           ;main.c: 320: for (i=0; i<200; i++)
  8630  013C46  0E00               	movlw	0
  8631  013C48  0102               	movlb	2	; () banked
  8632  013C4A  6FFC               	movwf	process_update_answer@i& (0+255),b
  8633  013C4C                     l14250:
  8634                           
  8635                           ; BSR set to: 2
  8636  013C4C  0EC7               	movlw	199
  8637  013C4E  0102               	movlb	2	; () banked
  8638  013C50  65FC               	cpfsgt	process_update_answer@i& (0+255),b
  8639  013C52  D001               	goto	l14254
  8640  013C54  D7F8               	goto	l1100
  8641  013C56                     l14254:
  8642                           
  8643                           ; BSR set to: 2
  8644                           ;main.c: 321: {
  8645                           ;main.c: 322: _delay((unsigned long)((10)*(8000000/4000.0)));
  8646  013C56  0E1A               	movlw	26
  8647  013C58  0102               	movlb	2	; () banked
  8648  013C5A  6FF3               	movwf	??_process_update_answer& (0+255),b
  8649  013C5C  0EF8               	movlw	248
  8650  013C5E                     u17607:
  8651  013C5E  2EE8               	decfsz	wreg,f,c
  8652  013C60  D7FE               	goto	u17607
  8653  013C62  2FF3               	decfsz	??_process_update_answer& (0+255),f,b
  8654  013C64  D7FC               	goto	u17607
  8655  013C66  D000               	nop2	
  8656                           
  8657                           ;main.c: 323: if(MiApp_MessageAvailable())
  8658  013C68  EC85  F0B5         	call	_MiApp_MessageAvailable	;wreg free
  8659  013C6C  0900               	iorlw	0
  8660  013C6E  B4D8               	btfsc	status,2,c
  8661  013C70  D0C9               	goto	l14324
  8662                           
  8663                           ;main.c: 324: {
  8664                           ;main.c: 325: shortaddress[0] = rxMessage.SourceAddress[0];
  8665  013C72  C12F  FFD9         	movff	_rxMessage+3,fsr2l
  8666  013C76  C130  FFDA         	movff	_rxMessage+4,fsr2h
  8667  013C7A  50DF               	movf	indf2,w,c
  8668  013C7C  0102               	movlb	2	; () banked
  8669  013C7E  6FFD               	movwf	process_update_answer@shortaddress& (0+255),b
  8670                           
  8671                           ; BSR set to: 2
  8672                           ;main.c: 326: shortaddress[1] = rxMessage.SourceAddress[1];
  8673  013C80  0101               	movlb	1	; () banked
  8674  013C82  EE20 F001          	lfsr	2,1
  8675  013C86  512F               	movf	(_rxMessage+3)& (0+255),w,b
  8676  013C88  26D9               	addwf	fsr2l,f,c
  8677  013C8A  5130               	movf	(_rxMessage+4)& (0+255),w,b
  8678  013C8C  22DA               	addwfc	fsr2h,f,c
  8679  013C8E  50DF               	movf	indf2,w,c
  8680  013C90  0102               	movlb	2	; () banked
  8681  013C92  6FFE               	movwf	(process_update_answer@shortaddress+1)& (0+255),b
  8682                           
  8683                           ; BSR set to: 2
  8684                           ;main.c: 327: uint8_t size = rxMessage.PayloadSize;
  8685  013C94  C133  F2FF         	movff	_rxMessage+7,process_update_answer@size
  8686                           
  8687                           ;main.c: 328: switch(rxMessage.Payload[0])
  8688  013C98  D0AC               	goto	l14322
  8689  013C9A                     l14264:
  8690                           
  8691                           ;main.c: 333: if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00) && (size == 2))
  8692  013C9A  0102               	movlb	2	; () banked
  8693  013C9C  51FD               	movf	process_update_answer@shortaddress& (0+255),w,b
  8694  013C9E  0102               	movlb	2	; () banked
  8695  013CA0  A4D8               	btfss	status,2,c
  8696  013CA2  D009               	goto	l14274
  8697                           
  8698                           ; BSR set to: 2
  8699  013CA4  0102               	movlb	2	; () banked
  8700  013CA6  51FE               	movf	(process_update_answer@shortaddress+1)& (0+255),w,b
  8701  013CA8  A4D8               	btfss	status,2,c
  8702  013CAA  D005               	goto	l14274
  8703                           
  8704                           ; BSR set to: 2
  8705  013CAC  0E02               	movlw	2
  8706  013CAE  0102               	movlb	2	; () banked
  8707  013CB0  19FF               	xorwf	process_update_answer@size& (0+255),w,b
  8708  013CB2  B4D8               	btfsc	status,2,c
  8709  013CB4  0012               	return	
  8710  013CB6                     l14274:
  8711                           
  8712                           ; BSR set to: 2
  8713                           ;main.c: 339: else if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00) && (size >
      +                           2))
  8714  013CB6  0102               	movlb	2	; () banked
  8715  013CB8  51FD               	movf	process_update_answer@shortaddress& (0+255),w,b
  8716  013CBA  0102               	movlb	2	; () banked
  8717  013CBC  A4D8               	btfss	status,2,c
  8718  013CBE  D094               	goto	l14320
  8719                           
  8720                           ; BSR set to: 2
  8721  013CC0  0102               	movlb	2	; () banked
  8722  013CC2  51FE               	movf	(process_update_answer@shortaddress+1)& (0+255),w,b
  8723  013CC4  A4D8               	btfss	status,2,c
  8724  013CC6  D090               	goto	l14320
  8725                           
  8726                           ; BSR set to: 2
  8727  013CC8  0E02               	movlw	2
  8728  013CCA  0102               	movlb	2	; () banked
  8729  013CCC  65FF               	cpfsgt	process_update_answer@size& (0+255),b
  8730  013CCE  D08C               	goto	l14320
  8731                           
  8732                           ; BSR set to: 2
  8733                           ;main.c: 340: {
  8734                           ;main.c: 341: bool ack_required = rxMessage.Payload[1];
  8735  013CD0  0101               	movlb	1	; () banked
  8736  013CD2  EE20 F001          	lfsr	2,1
  8737  013CD6  5131               	movf	(_rxMessage+5)& (0+255),w,b
  8738  013CD8  26D9               	addwf	fsr2l,f,c
  8739  013CDA  5132               	movf	(_rxMessage+6)& (0+255),w,b
  8740  013CDC  22DA               	addwfc	fsr2h,f,c
  8741  013CDE  50DF               	movf	indf2,w,c
  8742  013CE0  0102               	movlb	2	; () banked
  8743  013CE2  6FFB               	movwf	process_update_answer@ack_required& (0+255),b
  8744                           
  8745                           ; BSR set to: 2
  8746                           ;main.c: 343: p_buffer = &rxMessage.Payload[2];
  8747  013CE4  0E02               	movlw	2
  8748  013CE6  0101               	movlb	1	; () banked
  8749  013CE8  2531               	addwf	(_rxMessage+5)& (0+255),w,b
  8750  013CEA  0101               	movlb	1	; () banked
  8751  013CEC  6F5C               	movwf	_p_buffer& (0+255),b
  8752  013CEE  0E00               	movlw	0
  8753  013CF0  0101               	movlb	1	; () banked
  8754  013CF2  2132               	addwfc	(_rxMessage+6)& (0+255),w,b
  8755  013CF4  0101               	movlb	1	; () banked
  8756  013CF6  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  8757                           
  8758                           ;main.c: 344: while ((p_buffer - &rxMessage.Payload[2]) < (size - 2))
  8759  013CF8  D018               	goto	l14290
  8760  013CFA                     l14284:
  8761                           
  8762                           ;main.c: 345: {
  8763                           ;main.c: 346: m_var = decode_variable(p_buffer);
  8764  013CFA  C15C  F08B         	movff	_p_buffer,decode_variable@p_buffer
  8765  013CFE  C15D  F08C         	movff	_p_buffer+1,decode_variable@p_buffer+1
  8766  013D02  EC5C  F0AB         	call	_decode_variable	;wreg free
  8767  013D06  EE21  F0B7         	lfsr	2,_m_var
  8768  013D0A  0E08               	movlw	8
  8769  013D0C                     u16841:
  8770  013D0C  CFEB FFDB          	movff	plusw0,plusw2
  8771  013D10  06E8               	decf	wreg,f,c
  8772  013D12  E2FC               	bc	u16841
  8773                           
  8774                           ;main.c: 347: p_buffer += m_var.size;
  8775  013D14  0101               	movlb	1	; () banked
  8776  013D16  51BF               	movf	(_m_var+8)& (0+255),w,b
  8777  013D18  0D01               	mullw	1
  8778  013D1A  50F3               	movf	prodl,w,c
  8779  013D1C  0101               	movlb	1	; () banked
  8780  013D1E  275C               	addwf	_p_buffer& (0+255),f,b
  8781  013D20  50F4               	movf	prodh,w,c
  8782  013D22  0101               	movlb	1	; () banked
  8783  013D24  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  8784                           
  8785                           ; BSR set to: 1
  8786                           ;main.c: 349: update_variable();
  8787  013D26  ECE1  F0AA         	call	_update_variable	;wreg free
  8788  013D2A                     l14290:
  8789  013D2A  0EFE               	movlw	254
  8790  013D2C  0102               	movlb	2	; () banked
  8791  013D2E  6FF3               	movwf	??_process_update_answer& (0+255),b
  8792  013D30  0EFF               	movlw	255
  8793  013D32  0102               	movlb	2	; () banked
  8794  013D34  6FF4               	movwf	(??_process_update_answer+1)& (0+255),b
  8795  013D36  0102               	movlb	2	; () banked
  8796  013D38  51FF               	movf	process_update_answer@size& (0+255),w,b
  8797  013D3A  0102               	movlb	2	; () banked
  8798  013D3C  6FF5               	movwf	(??_process_update_answer+2)& (0+255),b
  8799  013D3E  6BF6               	clrf	(??_process_update_answer+3)& (0+255),b
  8800  013D40  0102               	movlb	2	; () banked
  8801  013D42  51F3               	movf	??_process_update_answer& (0+255),w,b
  8802  013D44  0102               	movlb	2	; () banked
  8803  013D46  27F5               	addwf	(??_process_update_answer+2)& (0+255),f,b
  8804  013D48  0102               	movlb	2	; () banked
  8805  013D4A  51F4               	movf	(??_process_update_answer+1)& (0+255),w,b
  8806  013D4C  0102               	movlb	2	; () banked
  8807  013D4E  23F6               	addwfc	(??_process_update_answer+3)& (0+255),f,b
  8808  013D50  0E02               	movlw	2
  8809  013D52  0101               	movlb	1	; () banked
  8810  013D54  2531               	addwf	(_rxMessage+5)& (0+255),w,b
  8811  013D56  0102               	movlb	2	; () banked
  8812  013D58  6FF7               	movwf	(??_process_update_answer+4)& (0+255),b
  8813  013D5A  0E00               	movlw	0
  8814  013D5C  0101               	movlb	1	; () banked
  8815  013D5E  2132               	addwfc	(_rxMessage+6)& (0+255),w,b
  8816  013D60  0102               	movlb	2	; () banked
  8817  013D62  6FF8               	movwf	(??_process_update_answer+5)& (0+255),b
  8818  013D64  0102               	movlb	2	; () banked
  8819  013D66  1FF7               	comf	(??_process_update_answer+4)& (0+255),f,b
  8820  013D68  1FF8               	comf	(??_process_update_answer+5)& (0+255),f,b
  8821  013D6A  4BF7               	infsnz	(??_process_update_answer+4)& (0+255),f,b
  8822  013D6C  2BF8               	incf	(??_process_update_answer+5)& (0+255),f,b
  8823  013D6E  0101               	movlb	1	; () banked
  8824  013D70  515C               	movf	_p_buffer& (0+255),w,b
  8825  013D72  0102               	movlb	2	; () banked
  8826  013D74  27F7               	addwf	(??_process_update_answer+4)& (0+255),f,b
  8827  013D76  0101               	movlb	1	; () banked
  8828  013D78  515D               	movf	(_p_buffer+1)& (0+255),w,b
  8829  013D7A  0102               	movlb	2	; () banked
  8830  013D7C  23F8               	addwfc	(??_process_update_answer+5)& (0+255),f,b
  8831  013D7E  0102               	movlb	2	; () banked
  8832  013D80  51F5               	movf	(??_process_update_answer+2)& (0+255),w,b
  8833  013D82  0102               	movlb	2	; () banked
  8834  013D84  5DF7               	subwf	(??_process_update_answer+4)& (0+255),w,b
  8835  013D86  0102               	movlb	2	; () banked
  8836  013D88  51F8               	movf	(??_process_update_answer+5)& (0+255),w,b
  8837  013D8A  0A80               	xorlw	128
  8838  013D8C  0102               	movlb	2	; () banked
  8839  013D8E  6FF9               	movwf	(??_process_update_answer+6)& (0+255),b
  8840  013D90  0102               	movlb	2	; () banked
  8841  013D92  51F6               	movf	(??_process_update_answer+3)& (0+255),w,b
  8842  013D94  0A80               	xorlw	128
  8843  013D96  0102               	movlb	2	; () banked
  8844  013D98  59F9               	subwfb	(??_process_update_answer+6)& (0+255),w,b
  8845  013D9A  A0D8               	btfss	status,0,c
  8846  013D9C  D7AE               	goto	l14284
  8847                           
  8848                           ; BSR set to: 2
  8849                           ;main.c: 350: }
  8850                           ;main.c: 351: MiApp_DiscardMessage();
  8851                           
  8852                           ; BSR set to: 2
  8853  013D9E  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
  8854                           
  8855                           ;main.c: 352: if (ack_required)
  8856  013DA2  0102               	movlb	2	; () banked
  8857  013DA4  51FB               	movf	process_update_answer@ack_required& (0+255),w,b
  8858  013DA6  0102               	movlb	2	; () banked
  8859  013DA8  A4D8               	btfss	status,2,c
  8860  013DAA  D015               	goto	l14314
  8861  013DAC  D01F               	goto	l1119
  8862  013DAE                     l14298:
  8863                           
  8864                           ;main.c: 355: {
  8865                           ;main.c: 357: consecutive_fails++;
  8866  013DAE  0101               	movlb	1	; () banked
  8867  013DB0  2B66               	incf	_consecutive_fails& (0+255),f,b
  8868                           
  8869                           ; BSR set to: 1
  8870                           ;main.c: 358: if (consecutive_fails >= 3)
  8871  013DB2  0E02               	movlw	2
  8872  013DB4  0101               	movlb	1	; () banked
  8873  013DB6  6566               	cpfsgt	_consecutive_fails& (0+255),b
  8874  013DB8  D00C               	goto	l14312
  8875                           
  8876                           ; BSR set to: 1
  8877                           ;main.c: 359: {
  8878                           ;main.c: 361: myAppState = STATE_PROBLEM;
  8879  013DBA  0E02               	movlw	2
  8880  013DBC  0101               	movlb	1	; () banked
  8881  013DBE  6F6A               	movwf	_myAppState& (0+255),b
  8882                           
  8883                           ; BSR set to: 1
  8884                           ;main.c: 362: LATCbits.LATC0 = 0;
  8885  013DC0  908B               	bcf	3979,0,c	;volatile
  8886                           
  8887                           ; BSR set to: 1
  8888                           ;main.c: 363: MiApp_TransceiverPowerState(0x00);
  8889  013DC2  0E00               	movlw	0
  8890  013DC4  EC3C  F0B4         	call	_MiApp_TransceiverPowerState
  8891                           
  8892                           ;main.c: 364: timer_reset();
  8893  013DC8  EC57  F0B5         	call	_timer_reset	;wreg free
  8894                           
  8895                           ;main.c: 365: PIR3bits.RTCCIF = 0;
  8896  013DCC  90A4               	bcf	4004,0,c	;volatile
  8897  013DCE  0003               	sleep		;# 
  8898  013DD0  00FF               	reset		;# 
  8899  013DD2                     l14312:
  8900                           
  8901                           ;main.c: 369: }
  8902                           ;main.c: 370: wait_for_1_sec();
  8903  013DD2  EC94  F0B4         	call	_wait_for_1_sec	;wreg free
  8904  013DD6                     l14314:
  8905  013DD6  ECE0  F0A9         	call	_send_writables_update	;wreg free
  8906  013DDA  0900               	iorlw	0
  8907  013DDC  B4D8               	btfsc	status,2,c
  8908  013DDE  D7E7               	goto	l14298
  8909                           
  8910                           ;main.c: 371: }
  8911                           ;main.c: 372: consecutive_fails = 0;
  8912  013DE0  0E00               	movlw	0
  8913  013DE2  0101               	movlb	1	; () banked
  8914  013DE4  6F66               	movwf	_consecutive_fails& (0+255),b
  8915                           
  8916                           ; BSR set to: 1
  8917                           ;main.c: 373: return 1;
  8918                           ;	Return value of _process_update_answer is never used
  8919  013DE6  0012               	return	
  8920  013DE8                     l14320:
  8921                           
  8922                           ;main.c: 376: else
  8923                           ;main.c: 377: MiApp_DiscardMessage();
  8924  013DE8  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
  8925  013DEC                     l1119:
  8926                           
  8927                           ;main.c: 380: MiApp_DiscardMessage();
  8928  013DEC  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
  8929                           
  8930                           ;main.c: 381: }
  8931  013DF0  D009               	goto	l14324
  8932  013DF2                     l14322:
  8933  013DF2  C131  FFD9         	movff	_rxMessage+5,fsr2l
  8934  013DF6  C132  FFDA         	movff	_rxMessage+6,fsr2h
  8935  013DFA  50DF               	movf	indf2,w,c
  8936                           
  8937                           ; Switch size 1, requested type "space"
  8938                           ; Number of cases is 1, Range of values is 4 to 4
  8939                           ; switch strategies available:
  8940                           ; Name         Instructions Cycles
  8941                           ; simple_byte            4     3 (average)
  8942                           ;	Chosen strategy is simple_byte
  8943  013DFC  0A04               	xorlw	4	; case 4
  8944  013DFE  B4D8               	btfsc	status,2,c
  8945  013E00  D74C               	goto	l14264
  8946  013E02  D7F4               	goto	l1119
  8947  013E04                     l14324:
  8948  013E04  0102               	movlb	2	; () banked
  8949  013E06  2BFC               	incf	process_update_answer@i& (0+255),f,b
  8950  013E08  D721               	goto	l14250
  8951  013E0A                     __end_of_process_update_answer:
  8952                           	opt stack 0
  8953                           tblptru	equ	0xFF8
  8954                           tblptrh	equ	0xFF7
  8955                           tblptrl	equ	0xFF6
  8956                           tablat	equ	0xFF5
  8957                           prodh	equ	0xFF4
  8958                           prodl	equ	0xFF3
  8959                           postinc0	equ	0xFEE
  8960                           plusw0	equ	0xFEB
  8961                           wreg	equ	0xFE8
  8962                           indf1	equ	0xFE7
  8963                           fsr1h	equ	0xFE2
  8964                           fsr1l	equ	0xFE1
  8965                           indf2	equ	0xFDF
  8966                           postinc2	equ	0xFDE
  8967                           postdec2	equ	0xFDD
  8968                           plusw2	equ	0xFDB
  8969                           fsr2h	equ	0xFDA
  8970                           fsr2l	equ	0xFD9
  8971                           status	equ	0xFD8
  8972                           
  8973 ;; *************** function _wait_for_1_sec *****************
  8974 ;; Defined at:
  8975 ;;		line 755 in file "src/main.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;		None
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;  i               2   34[BANK0 ] unsigned int 
  8980 ;; Return value:  Size  Location     Type
  8981 ;;		None               void
  8982 ;; Registers used:
  8983 ;;		wreg, status,2, status,0
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8992 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8993 ;;Total ram usage:        3 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; Hardware stack levels required when called:    7
  8996 ;; This function calls:
  8997 ;;		Nothing
  8998 ;; This function is called by:
  8999 ;;		_main
  9000 ;;		_process_update_answer
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text24
  9005  016928                     __ptext24:
  9006                           	opt stack 0
  9007  016928                     _wait_for_1_sec:
  9008                           	opt stack 23
  9009                           
  9010                           ;main.c: 757: unsigned int i;
  9011                           ;main.c: 758: for (i=0; i<100; i++)
  9012                           
  9013                           ;incstack = 0
  9014  016928  0E00               	movlw	0
  9015  01692A  0100               	movlb	0	; () banked
  9016  01692C  6F83               	movwf	(wait_for_1_sec@i+1)& (0+255),b
  9017  01692E  0E00               	movlw	0
  9018  016930  6F82               	movwf	wait_for_1_sec@i& (0+255),b
  9019  016932                     l12840:
  9020                           
  9021                           ; BSR set to: 0
  9022  016932  0100               	movlb	0	; () banked
  9023  016934  5183               	movf	(wait_for_1_sec@i+1)& (0+255),w,b
  9024  016936  E112               	bnz	l1227
  9025  016938  0E64               	movlw	100
  9026  01693A  0100               	movlb	0	; () banked
  9027  01693C  5D82               	subwf	wait_for_1_sec@i& (0+255),w,b
  9028  01693E  B0D8               	btfsc	status,0,c
  9029  016940  0012               	return	
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;main.c: 759: {
  9033                           ;main.c: 760: _delay((unsigned long)((10)*(8000000/4000.0)));
  9034                           
  9035                           ; BSR set to: 0
  9036                           
  9037                           ; BSR set to: 0
  9038  016942  0E1A               	movlw	26
  9039  016944  0100               	movlb	0	; () banked
  9040  016946  6F81               	movwf	??_wait_for_1_sec& (0+255),b
  9041  016948  0EF8               	movlw	248
  9042  01694A                     u17617:
  9043  01694A  2EE8               	decfsz	wreg,f,c
  9044  01694C  D7FE               	goto	u17617
  9045  01694E  2F81               	decfsz	??_wait_for_1_sec& (0+255),f,b
  9046  016950  D7FC               	goto	u17617
  9047  016952  D000               	nop2	
  9048  016954  0100               	movlb	0	; () banked
  9049  016956  4B82               	infsnz	wait_for_1_sec@i& (0+255),f,b
  9050  016958  2B83               	incf	(wait_for_1_sec@i+1)& (0+255),f,b
  9051  01695A  D7EB               	goto	l12840
  9052  01695C                     l1227:
  9053                           
  9054                           ; BSR set to: 0
  9055  01695C  0012               	return		;funcret
  9056  01695E                     __end_of_wait_for_1_sec:
  9057                           	opt stack 0
  9058                           tblptru	equ	0xFF8
  9059                           tblptrh	equ	0xFF7
  9060                           tblptrl	equ	0xFF6
  9061                           tablat	equ	0xFF5
  9062                           prodh	equ	0xFF4
  9063                           prodl	equ	0xFF3
  9064                           postinc0	equ	0xFEE
  9065                           plusw0	equ	0xFEB
  9066                           wreg	equ	0xFE8
  9067                           indf1	equ	0xFE7
  9068                           fsr1h	equ	0xFE2
  9069                           fsr1l	equ	0xFE1
  9070                           indf2	equ	0xFDF
  9071                           postinc2	equ	0xFDE
  9072                           postdec2	equ	0xFDD
  9073                           plusw2	equ	0xFDB
  9074                           fsr2h	equ	0xFDA
  9075                           fsr2l	equ	0xFD9
  9076                           status	equ	0xFD8
  9077                           
  9078 ;; *************** function _update_variable *****************
  9079 ;; Defined at:
  9080 ;;		line 667 in file "src/main.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;		None
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;		None
  9085 ;; Return value:  Size  Location     Type
  9086 ;;		None               void
  9087 ;; Registers used:
  9088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9098 ;;Total ram usage:        0 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; Hardware stack levels required when called:   10
  9101 ;; This function calls:
  9102 ;;		_MiMAC_SetPower
  9103 ;;		_RtccWrOn
  9104 ;;		_strcmp
  9105 ;; This function is called by:
  9106 ;;		_process_update_answer
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           	psect	text25
  9111  0155C2                     __ptext25:
  9112                           	opt stack 0
  9113  0155C2                     _update_variable:
  9114                           	opt stack 19
  9115                           
  9116                           ;main.c: 669: if (strcmp(POWER_LABEL, m_var.label) == 0)
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;incstack = 0
  9120  0155C2  0EEB               	movlw	low _POWER_LABEL
  9121  0155C4  0100               	movlb	0	; () banked
  9122  0155C6  6F81               	movwf	strcmp@s1& (0+255),b
  9123  0155C8  0EFF               	movlw	high _POWER_LABEL
  9124  0155CA  0100               	movlb	0	; () banked
  9125  0155CC  6F82               	movwf	(strcmp@s1+1)& (0+255),b
  9126  0155CE  0EB7               	movlw	low _m_var
  9127  0155D0  0100               	movlb	0	; () banked
  9128  0155D2  6F83               	movwf	strcmp@s2& (0+255),b
  9129  0155D4  0E01               	movlw	high _m_var
  9130  0155D6  0100               	movlb	0	; () banked
  9131  0155D8  6F84               	movwf	(strcmp@s2+1)& (0+255),b
  9132  0155DA  ECAC  F0B2         	call	_strcmp	;wreg free
  9133  0155DE  0100               	movlb	0	; () banked
  9134  0155E0  5181               	movf	?_strcmp& (0+255),w,b
  9135  0155E2  0100               	movlb	0	; () banked
  9136  0155E4  1182               	iorwf	(?_strcmp+1)& (0+255),w,b
  9137  0155E6  A4D8               	btfss	status,2,c
  9138  0155E8  D00F               	goto	l12892
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;main.c: 670: {
  9142                           ;main.c: 671: m_power = m_var.value_byte1;
  9143  0155EA  C1BB  F169         	movff	_m_var+4,_m_power
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;main.c: 672: if ((m_power >= 1) && (m_power <= 7))
  9147  0155EE  0101               	movlb	1	; () banked
  9148  0155F0  5169               	movf	_m_power& (0+255),w,b
  9149  0155F2  B4D8               	btfsc	status,2,c
  9150  0155F4  0012               	return	
  9151                           
  9152                           ; BSR set to: 1
  9153  0155F6  0E08               	movlw	8
  9154  0155F8  0101               	movlb	1	; () banked
  9155  0155FA  6169               	cpfslt	_m_power& (0+255),b
  9156  0155FC  0012               	return	
  9157                           
  9158                           ; BSR set to: 1
  9159                           ;main.c: 673: MiMAC_SetPower(m_power);
  9160  0155FE  0101               	movlb	1	; () banked
  9161  015600  5169               	movf	_m_power& (0+255),w,b
  9162  015602  EC5A  F0B4         	call	_MiMAC_SetPower
  9163                           
  9164                           ;main.c: 674: }
  9165  015606  0012               	return	
  9166  015608                     l12892:
  9167                           
  9168                           ;main.c: 675: else if ((strcmp(UPDATE_FREQUENCY_LABEL, m_var.label) == 0) && (m_var.unit
      +                           == 4) && (m_var.type == 0))
  9169  015608  0EF7               	movlw	low _UPDATE_FREQUENCY_LABEL
  9170  01560A  0100               	movlb	0	; () banked
  9171  01560C  6F81               	movwf	strcmp@s1& (0+255),b
  9172  01560E  0EFF               	movlw	high _UPDATE_FREQUENCY_LABEL
  9173  015610  0100               	movlb	0	; () banked
  9174  015612  6F82               	movwf	(strcmp@s1+1)& (0+255),b
  9175  015614  0EB7               	movlw	low _m_var
  9176  015616  0100               	movlb	0	; () banked
  9177  015618  6F83               	movwf	strcmp@s2& (0+255),b
  9178  01561A  0E01               	movlw	high _m_var
  9179  01561C  0100               	movlb	0	; () banked
  9180  01561E  6F84               	movwf	(strcmp@s2+1)& (0+255),b
  9181  015620  ECAC  F0B2         	call	_strcmp	;wreg free
  9182  015624  0100               	movlb	0	; () banked
  9183  015626  5181               	movf	?_strcmp& (0+255),w,b
  9184  015628  0100               	movlb	0	; () banked
  9185  01562A  1182               	iorwf	(?_strcmp+1)& (0+255),w,b
  9186  01562C  A4D8               	btfss	status,2,c
  9187  01562E  0012               	return	
  9188                           
  9189                           ; BSR set to: 0
  9190  015630  0E04               	movlw	4
  9191  015632  0101               	movlb	1	; () banked
  9192  015634  19BD               	xorwf	(_m_var+6)& (0+255),w,b
  9193  015636  A4D8               	btfss	status,2,c
  9194  015638  0012               	return	
  9195                           
  9196                           ; BSR set to: 1
  9197  01563A  0101               	movlb	1	; () banked
  9198  01563C  51BA               	movf	(_m_var+3)& (0+255),w,b
  9199  01563E  A4D8               	btfss	status,2,c
  9200  015640  0012               	return	
  9201                           
  9202                           ; BSR set to: 1
  9203                           ;main.c: 677: {
  9204                           ;main.c: 678: if (m_var.value_byte1 == 0)
  9205  015642  0101               	movlb	1	; () banked
  9206  015644  51BB               	movf	(_m_var+4)& (0+255),w,b
  9207  015646  A4D8               	btfss	status,2,c
  9208  015648  D01C               	goto	l1205
  9209                           
  9210                           ; BSR set to: 1
  9211                           ;main.c: 679: {
  9212                           ;main.c: 680: m_update_frequency = 0;
  9213  01564A  0E00               	movlw	0
  9214  01564C  0101               	movlb	1	; () banked
  9215  01564E  6FFF               	movwf	_m_update_frequency& (0+255),b	;volatile
  9216                           
  9217                           ; BSR set to: 1
  9218                           ;main.c: 681: RtccWrOn();
  9219  015650  EC7C  F0B5         	call	_RtccWrOn	;wreg free
  9220                           
  9221                           ;main.c: 682: RTCCFGbits.RTCPTR0 = 0;
  9222  015654  010F               	movlb	15	; () banked
  9223  015656  913F               	bcf	63,0,b	;volatile
  9224                           
  9225                           ; BSR set to: 15
  9226                           ;main.c: 683: RTCCFGbits.RTCPTR1 = 0;
  9227  015658  010F               	movlb	15	; () banked
  9228  01565A  933F               	bcf	63,1,b	;volatile
  9229                           
  9230                           ; BSR set to: 15
  9231                           ;main.c: 684: RTCVALHbits.RTCVALH = 0x00;
  9232  01565C  0E00               	movlw	0
  9233  01565E  010F               	movlb	15	; () banked
  9234  015660  6F3B               	movwf	59,b	;volatile
  9235                           
  9236                           ; BSR set to: 15
  9237                           ;main.c: 685: RTCVALLbits.RTCVALL = 0x00;
  9238  015662  0E00               	movlw	0
  9239  015664  010F               	movlb	15	; () banked
  9240  015666  6F3A               	movwf	58,b	;volatile
  9241                           
  9242                           ; BSR set to: 15
  9243                           ;main.c: 686: ALRMCFGbits.AMASK = 0b0010;
  9244  015668  010F               	movlb	15	; () banked
  9245  01566A  5147               	movf	71,w,b	;volatile
  9246  01566C  0BC3               	andlw	-61
  9247  01566E  0908               	iorlw	8
  9248  015670  6F47               	movwf	71,b	;volatile
  9249                           
  9250                           ; BSR set to: 15
  9251                           ;main.c: 687: (RTCCFGbits.RTCWREN = 0);
  9252  015672  010F               	movlb	15	; () banked
  9253  015674  9B3F               	bcf	63,5,b	;volatile
  9254                           
  9255                           ; BSR set to: 15
  9256                           ;main.c: 688: timer_count = 1;
  9257  015676  0E01               	movlw	1
  9258  015678  6E4B               	movwf	_timer_count,c	;volatile
  9259                           
  9260                           ; BSR set to: 15
  9261                           ;main.c: 689: timer_flag = 0;
  9262  01567A  0E00               	movlw	0
  9263  01567C  0101               	movlb	1	; () banked
  9264  01567E  6F6B               	movwf	_timer_flag& (0+255),b	;volatile
  9265                           
  9266                           ;main.c: 690: }
  9267  015680  0012               	return	
  9268  015682                     l1205:
  9269                           
  9270                           ; BSR set to: 1
  9271                           ;main.c: 691: else
  9272                           ;main.c: 692: {
  9273                           ;main.c: 693: m_update_frequency = m_var.value_byte1;
  9274  015682  C1BB  F1FF         	movff	_m_var+4,_m_update_frequency	;volatile
  9275                           
  9276                           ; BSR set to: 1
  9277                           ;main.c: 694: RtccWrOn();
  9278  015686  EC7C  F0B5         	call	_RtccWrOn	;wreg free
  9279                           
  9280                           ;main.c: 695: RTCCFGbits.RTCPTR0 = 0;
  9281  01568A  010F               	movlb	15	; () banked
  9282  01568C  913F               	bcf	63,0,b	;volatile
  9283                           
  9284                           ; BSR set to: 15
  9285                           ;main.c: 696: RTCCFGbits.RTCPTR1 = 0;
  9286  01568E  010F               	movlb	15	; () banked
  9287  015690  933F               	bcf	63,1,b	;volatile
  9288                           
  9289                           ; BSR set to: 15
  9290                           ;main.c: 697: RTCVALHbits.RTCVALH = 0x00;
  9291  015692  0E00               	movlw	0
  9292  015694  010F               	movlb	15	; () banked
  9293  015696  6F3B               	movwf	59,b	;volatile
  9294                           
  9295                           ; BSR set to: 15
  9296                           ;main.c: 698: RTCVALLbits.RTCVALL = 0x00;
  9297  015698  0E00               	movlw	0
  9298  01569A  010F               	movlb	15	; () banked
  9299  01569C  6F3A               	movwf	58,b	;volatile
  9300                           
  9301                           ; BSR set to: 15
  9302                           ;main.c: 699: ALRMCFGbits.AMASK = 0b0011;
  9303  01569E  010F               	movlb	15	; () banked
  9304  0156A0  5147               	movf	71,w,b	;volatile
  9305  0156A2  0BC3               	andlw	-61
  9306  0156A4  090C               	iorlw	12
  9307  0156A6  6F47               	movwf	71,b	;volatile
  9308                           
  9309                           ; BSR set to: 15
  9310                           ;main.c: 700: (RTCCFGbits.RTCWREN = 0);
  9311  0156A8  010F               	movlb	15	; () banked
  9312  0156AA  9B3F               	bcf	63,5,b	;volatile
  9313                           
  9314                           ; BSR set to: 15
  9315                           ;main.c: 701: timer_count = m_update_frequency;
  9316  0156AC  C1FF  F04B         	movff	_m_update_frequency,_timer_count	;volatile
  9317                           
  9318                           ; BSR set to: 15
  9319                           ;main.c: 702: timer_flag = 0;
  9320  0156B0  0E00               	movlw	0
  9321  0156B2  0101               	movlb	1	; () banked
  9322  0156B4  6F6B               	movwf	_timer_flag& (0+255),b	;volatile
  9323                           
  9324                           ; BSR set to: 1
  9325                           
  9326                           ; BSR set to: 1
  9327  0156B6  0012               	return	
  9328  0156B8                     __end_of_update_variable:
  9329                           	opt stack 0
  9330                           tblptru	equ	0xFF8
  9331                           tblptrh	equ	0xFF7
  9332                           tblptrl	equ	0xFF6
  9333                           tablat	equ	0xFF5
  9334                           prodh	equ	0xFF4
  9335                           prodl	equ	0xFF3
  9336                           postinc0	equ	0xFEE
  9337                           plusw0	equ	0xFEB
  9338                           wreg	equ	0xFE8
  9339                           indf1	equ	0xFE7
  9340                           fsr1h	equ	0xFE2
  9341                           fsr1l	equ	0xFE1
  9342                           indf2	equ	0xFDF
  9343                           postinc2	equ	0xFDE
  9344                           postdec2	equ	0xFDD
  9345                           plusw2	equ	0xFDB
  9346                           fsr2h	equ	0xFDA
  9347                           fsr2l	equ	0xFD9
  9348                           status	equ	0xFD8
  9349                           
  9350 ;; *************** function _strcmp *****************
  9351 ;; Defined at:
  9352 ;;		line 33 in file "/opt/microchip/xc8/v1.35/sources/common/strcmp.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;  s1              2   33[BANK0 ] PTR const unsigned char 
  9355 ;;		 -> UPDATE_FREQUENCY_LABEL(4), POWER_LABEL(4), 
  9356 ;;  s2              2   35[BANK0 ] PTR const unsigned char 
  9357 ;;		 -> m_var.label(3), m_var(9), 
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;  r               1   38[BANK0 ] char 
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  2   33[BANK0 ] int 
  9362 ;; Registers used:
  9363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9369 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9371 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9372 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9373 ;;Total ram usage:        6 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; Hardware stack levels required when called:    7
  9376 ;; This function calls:
  9377 ;;		Nothing
  9378 ;; This function is called by:
  9379 ;;		_update_variable
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text26
  9384  016558                     __ptext26:
  9385                           	opt stack 0
  9386  016558                     _strcmp:
  9387                           	opt stack 21
  9388                           
  9389                           ;incstack = 0
  9390  016558  D006               	goto	l12384
  9391  01655A                     l12382:
  9392  01655A  0100               	movlb	0	; () banked
  9393  01655C  4B81               	infsnz	strcmp@s1& (0+255),f,b
  9394  01655E  2B82               	incf	(strcmp@s1+1)& (0+255),f,b
  9395  016560  0100               	movlb	0	; () banked
  9396  016562  4B83               	infsnz	strcmp@s2& (0+255),f,b
  9397  016564  2B84               	incf	(strcmp@s2+1)& (0+255),f,b
  9398  016566                     l12384:
  9399  016566  C081  FFF6         	movff	strcmp@s1,tblptrl
  9400  01656A  C082  FFF7         	movff	strcmp@s1+1,tblptrh
  9401  01656E                     	if	0	;tblptru may be non-zero
  9402  01656E                     	endif
  9403  01656E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9404  01656E  0E00               	movlw	low (__mediumconst shr (0+16))
  9405  016570  6EF8               	movwf	tblptru,c
  9406  016572                     	endif
  9407  016572  0008               	tblrd		*
  9408  016574  CFF5 F085          	movff	tablat,??_strcmp
  9409  016578  C083  FFD9         	movff	strcmp@s2,fsr2l
  9410  01657C  C084  FFDA         	movff	strcmp@s2+1,fsr2h
  9411  016580  50DF               	movf	indf2,w,c
  9412  016582  0800               	sublw	0
  9413  016584  0100               	movlb	0	; () banked
  9414  016586  2585               	addwf	??_strcmp& (0+255),w,b
  9415  016588  0100               	movlb	0	; () banked
  9416  01658A  6F86               	movwf	strcmp@r& (0+255),b
  9417  01658C  0100               	movlb	0	; () banked
  9418  01658E  5186               	movf	strcmp@r& (0+255),w,b
  9419  016590  A4D8               	btfss	status,2,c
  9420  016592  D00B               	goto	l12388
  9421                           
  9422                           ; BSR set to: 0
  9423  016594  C081  FFF6         	movff	strcmp@s1,tblptrl
  9424  016598  C082  FFF7         	movff	strcmp@s1+1,tblptrh
  9425  01659C                     	if	0	;tblptru may be non-zero
  9426  01659C                     	endif
  9427  01659C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9428  01659C  0E00               	movlw	low (__mediumconst shr (0+16))
  9429  01659E  6EF8               	movwf	tblptru,c
  9430  0165A0                     	endif
  9431  0165A0  0008               	tblrd		*
  9432  0165A2  50F5               	movf	tablat,w,c
  9433  0165A4  0900               	iorlw	0
  9434  0165A6  A4D8               	btfss	status,2,c
  9435  0165A8  D7D8               	goto	l12382
  9436  0165AA                     l12388:
  9437                           
  9438                           ; BSR set to: 0
  9439  0165AA  0100               	movlb	0	; () banked
  9440  0165AC  5186               	movf	strcmp@r& (0+255),w,b
  9441  0165AE  0100               	movlb	0	; () banked
  9442  0165B0  6F81               	movwf	?_strcmp& (0+255),b
  9443  0165B2  6B82               	clrf	(?_strcmp+1)& (0+255),b
  9444  0165B4  BF81               	btfsc	?_strcmp& (0+255),7,b
  9445  0165B6  0782               	decf	(?_strcmp+1)& (0+255),f,b
  9446  0165B8  0012               	return	
  9447  0165BA                     __end_of_strcmp:
  9448                           	opt stack 0
  9449                           tblptru	equ	0xFF8
  9450                           tblptrh	equ	0xFF7
  9451                           tblptrl	equ	0xFF6
  9452                           tablat	equ	0xFF5
  9453                           prodh	equ	0xFF4
  9454                           prodl	equ	0xFF3
  9455                           postinc0	equ	0xFEE
  9456                           plusw0	equ	0xFEB
  9457                           wreg	equ	0xFE8
  9458                           indf1	equ	0xFE7
  9459                           fsr1h	equ	0xFE2
  9460                           fsr1l	equ	0xFE1
  9461                           indf2	equ	0xFDF
  9462                           postinc2	equ	0xFDE
  9463                           postdec2	equ	0xFDD
  9464                           plusw2	equ	0xFDB
  9465                           fsr2h	equ	0xFDA
  9466                           fsr2l	equ	0xFD9
  9467                           status	equ	0xFD8
  9468                           
  9469 ;; *************** function _timer_reset *****************
  9470 ;; Defined at:
  9471 ;;		line 709 in file "src/main.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;		None
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;		None
  9476 ;; Return value:  Size  Location     Type
  9477 ;;		None               void
  9478 ;; Registers used:
  9479 ;;		wreg, status,2
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9489 ;;Total ram usage:        0 bytes
  9490 ;; Hardware stack levels used:    1
  9491 ;; Hardware stack levels required when called:    7
  9492 ;; This function calls:
  9493 ;;		Nothing
  9494 ;; This function is called by:
  9495 ;;		_main
  9496 ;;		_process_update_answer
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           	psect	text27
  9501  016AAE                     __ptext27:
  9502                           	opt stack 0
  9503  016AAE                     _timer_reset:
  9504                           	opt stack 23
  9505                           
  9506                           ;main.c: 718: if (m_update_frequency == 0)
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;incstack = 0
  9510  016AAE  0101               	movlb	1	; () banked
  9511  016AB0  51FF               	movf	_m_update_frequency& (0+255),w,b	;volatile
  9512  016AB2  A4D8               	btfss	status,2,c
  9513  016AB4  D003               	goto	l1210
  9514                           
  9515                           ; BSR set to: 1
  9516                           ;main.c: 719: timer_count = 1;
  9517  016AB6  0E01               	movlw	1
  9518  016AB8  6E4B               	movwf	_timer_count,c	;volatile
  9519  016ABA  D002               	goto	l12836
  9520  016ABC                     l1210:
  9521                           
  9522                           ; BSR set to: 1
  9523                           ;main.c: 720: else
  9524                           ;main.c: 721: timer_count = m_update_frequency;
  9525  016ABC  C1FF  F04B         	movff	_m_update_frequency,_timer_count	;volatile
  9526  016AC0                     l12836:
  9527                           
  9528                           ; BSR set to: 1
  9529                           ;main.c: 722: timer_flag = 0;
  9530  016AC0  0E00               	movlw	0
  9531  016AC2  0101               	movlb	1	; () banked
  9532  016AC4  6F6B               	movwf	_timer_flag& (0+255),b	;volatile
  9533                           
  9534                           ; BSR set to: 1
  9535  016AC6  0012               	return		;funcret
  9536  016AC8                     __end_of_timer_reset:
  9537                           	opt stack 0
  9538                           tblptru	equ	0xFF8
  9539                           tblptrh	equ	0xFF7
  9540                           tblptrl	equ	0xFF6
  9541                           tablat	equ	0xFF5
  9542                           prodh	equ	0xFF4
  9543                           prodl	equ	0xFF3
  9544                           postinc0	equ	0xFEE
  9545                           plusw0	equ	0xFEB
  9546                           wreg	equ	0xFE8
  9547                           indf1	equ	0xFE7
  9548                           fsr1h	equ	0xFE2
  9549                           fsr1l	equ	0xFE1
  9550                           indf2	equ	0xFDF
  9551                           postinc2	equ	0xFDE
  9552                           postdec2	equ	0xFDD
  9553                           plusw2	equ	0xFDB
  9554                           fsr2h	equ	0xFDA
  9555                           fsr2l	equ	0xFD9
  9556                           status	equ	0xFD8
  9557                           
  9558 ;; *************** function _send_writables_update *****************
  9559 ;; Defined at:
  9560 ;;		line 564 in file "src/main.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;		None
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;  tmp             2    0        unsigned int 
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      unsigned char 
  9567 ;; Registers used:
  9568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9576 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9577 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9578 ;;Total ram usage:        1 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:   16
  9581 ;; This function calls:
  9582 ;;		_do_UPDATE
  9583 ;;		_encode_uint8_variable
  9584 ;;		_memcpy
  9585 ;; This function is called by:
  9586 ;;		_process_update_answer
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590                           	psect	text28
  9591  0153C0                     __ptext28:
  9592                           	opt stack 0
  9593  0153C0                     _send_writables_update:
  9594                           	opt stack 13
  9595                           
  9596                           ;main.c: 566: uint16_t tmp;
  9597                           ;main.c: 567: p_buffer = m_buffer;
  9598                           
  9599                           ; BSR set to: 1
  9600                           ;incstack = 0
  9601  0153C0  0E97               	movlw	low _m_buffer
  9602  0153C2  0101               	movlb	1	; () banked
  9603  0153C4  6F5C               	movwf	_p_buffer& (0+255),b
  9604  0153C6  0E01               	movlw	high _m_buffer
  9605  0153C8  0101               	movlb	1	; () banked
  9606  0153CA  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  9607                           
  9608                           ; BSR set to: 1
  9609                           ;main.c: 570: memcpy(m_var.label, POWER_LABEL, 3);
  9610  0153CC  0EB7               	movlw	low _m_var
  9611  0153CE  0100               	movlb	0	; () banked
  9612  0153D0  6F81               	movwf	memcpy@d1& (0+255),b
  9613  0153D2  0E01               	movlw	high _m_var
  9614  0153D4  0100               	movlb	0	; () banked
  9615  0153D6  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  9616  0153D8  0EEB               	movlw	low _POWER_LABEL
  9617  0153DA  0100               	movlb	0	; () banked
  9618  0153DC  6F83               	movwf	memcpy@s1& (0+255),b
  9619  0153DE  0EFF               	movlw	high _POWER_LABEL
  9620  0153E0  0100               	movlb	0	; () banked
  9621  0153E2  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  9622  0153E4  0E00               	movlw	0
  9623  0153E6  0100               	movlb	0	; () banked
  9624  0153E8  6F86               	movwf	(memcpy@n+1)& (0+255),b
  9625  0153EA  0E03               	movlw	3
  9626  0153EC  6F85               	movwf	memcpy@n& (0+255),b
  9627  0153EE  ECDD  F0B2         	call	_memcpy	;wreg free
  9628                           
  9629                           ;main.c: 571: m_var.unit = 0;
  9630  0153F2  0E00               	movlw	0
  9631  0153F4  0101               	movlb	1	; () banked
  9632  0153F6  6FBD               	movwf	(_m_var+6)& (0+255),b
  9633                           
  9634                           ; BSR set to: 1
  9635                           ;main.c: 572: m_var.value_byte1 = m_power;
  9636  0153F8  C169  F1BB         	movff	_m_power,_m_var+4
  9637                           
  9638                           ; BSR set to: 1
  9639                           ;main.c: 573: m_var.writable = 1;
  9640  0153FC  0E01               	movlw	1
  9641  0153FE  0101               	movlb	1	; () banked
  9642  015400  6FBE               	movwf	(_m_var+7)& (0+255),b
  9643                           
  9644                           ; BSR set to: 1
  9645                           ;main.c: 574: p_buffer += encode_uint8_variable(p_buffer, m_var);
  9646  015402  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  9647  015406  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  9648  01540A  EE21  F0B7         	lfsr	2,_m_var
  9649  01540E  EE00  F083         	lfsr	0,encode_uint8_variable@var
  9650  015412  0E08               	movlw	8
  9651  015414                     u15011:
  9652  015414  CFDB FFEB          	movff	plusw2,plusw0
  9653  015418  06E8               	decf	wreg,f,c
  9654  01541A  E2FC               	bc	u15011
  9655  01541C  EC23  F0B0         	call	_encode_uint8_variable	;wreg free
  9656  015420  0101               	movlb	1	; () banked
  9657  015422  6FFD               	movwf	??_send_writables_update& (0+255),b
  9658  015424  0101               	movlb	1	; () banked
  9659  015426  51FD               	movf	??_send_writables_update& (0+255),w,b
  9660  015428  0D01               	mullw	1
  9661  01542A  50F3               	movf	prodl,w,c
  9662  01542C  0101               	movlb	1	; () banked
  9663  01542E  275C               	addwf	_p_buffer& (0+255),f,b
  9664  015430  50F4               	movf	prodh,w,c
  9665  015432  0101               	movlb	1	; () banked
  9666  015434  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  9667                           
  9668                           ; BSR set to: 1
  9669                           ;main.c: 576: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  9670  015436  0EB7               	movlw	low _m_var
  9671  015438  0100               	movlb	0	; () banked
  9672  01543A  6F81               	movwf	memcpy@d1& (0+255),b
  9673  01543C  0E01               	movlw	high _m_var
  9674  01543E  0100               	movlb	0	; () banked
  9675  015440  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  9676  015442  0EF7               	movlw	low _UPDATE_FREQUENCY_LABEL
  9677  015444  0100               	movlb	0	; () banked
  9678  015446  6F83               	movwf	memcpy@s1& (0+255),b
  9679  015448  0EFF               	movlw	high _UPDATE_FREQUENCY_LABEL
  9680  01544A  0100               	movlb	0	; () banked
  9681  01544C  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  9682  01544E  0E00               	movlw	0
  9683  015450  0100               	movlb	0	; () banked
  9684  015452  6F86               	movwf	(memcpy@n+1)& (0+255),b
  9685  015454  0E03               	movlw	3
  9686  015456  6F85               	movwf	memcpy@n& (0+255),b
  9687  015458  ECDD  F0B2         	call	_memcpy	;wreg free
  9688                           
  9689                           ;main.c: 577: m_var.unit = 4;
  9690  01545C  0E04               	movlw	4
  9691  01545E  0101               	movlb	1	; () banked
  9692  015460  6FBD               	movwf	(_m_var+6)& (0+255),b
  9693                           
  9694                           ; BSR set to: 1
  9695                           ;main.c: 578: m_var.value_byte1 = m_update_frequency;
  9696  015462  C1FF  F1BB         	movff	_m_update_frequency,_m_var+4	;volatile
  9697                           
  9698                           ; BSR set to: 1
  9699                           ;main.c: 579: m_var.writable = 1;
  9700  015466  0E01               	movlw	1
  9701  015468  0101               	movlb	1	; () banked
  9702  01546A  6FBE               	movwf	(_m_var+7)& (0+255),b
  9703                           
  9704                           ; BSR set to: 1
  9705                           ;main.c: 580: p_buffer += encode_uint8_variable(p_buffer, m_var);
  9706  01546C  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  9707  015470  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  9708  015474  EE21  F0B7         	lfsr	2,_m_var
  9709  015478  EE00  F083         	lfsr	0,encode_uint8_variable@var
  9710  01547C  0E08               	movlw	8
  9711  01547E                     u15021:
  9712  01547E  CFDB FFEB          	movff	plusw2,plusw0
  9713  015482  06E8               	decf	wreg,f,c
  9714  015484  E2FC               	bc	u15021
  9715  015486  EC23  F0B0         	call	_encode_uint8_variable	;wreg free
  9716  01548A  0101               	movlb	1	; () banked
  9717  01548C  6FFD               	movwf	??_send_writables_update& (0+255),b
  9718  01548E  0101               	movlb	1	; () banked
  9719  015490  51FD               	movf	??_send_writables_update& (0+255),w,b
  9720  015492  0D01               	mullw	1
  9721  015494  50F3               	movf	prodl,w,c
  9722  015496  0101               	movlb	1	; () banked
  9723  015498  275C               	addwf	_p_buffer& (0+255),f,b
  9724  01549A  50F4               	movf	prodh,w,c
  9725  01549C  0101               	movlb	1	; () banked
  9726  01549E  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  9727                           
  9728                           ; BSR set to: 1
  9729                           ;main.c: 582: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  9730  0154A0  0E97               	movlw	low _m_buffer
  9731  0154A2  0101               	movlb	1	; () banked
  9732  0154A4  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  9733  0154A6  0E01               	movlw	high _m_buffer
  9734  0154A8  0101               	movlb	1	; () banked
  9735  0154AA  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  9736  0154AC  0E97               	movlw	_m_buffer& (0+255)
  9737  0154AE  0800               	sublw	0
  9738  0154B0  0101               	movlb	1	; () banked
  9739  0154B2  255C               	addwf	_p_buffer& (0+255),w,b
  9740  0154B4  0101               	movlb	1	; () banked
  9741  0154B6  6FF6               	movwf	do_UPDATE@size& (0+255),b
  9742  0154B8  0E01               	movlw	1
  9743  0154BA  0101               	movlb	1	; () banked
  9744  0154BC  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  9745  0154BE  EC9C  F0A0         	call	_do_UPDATE	;wreg free
  9746  0154C2  0012               	return	
  9747  0154C4                     __end_of_send_writables_update:
  9748                           	opt stack 0
  9749                           tblptru	equ	0xFF8
  9750                           tblptrh	equ	0xFF7
  9751                           tblptrl	equ	0xFF6
  9752                           tablat	equ	0xFF5
  9753                           prodh	equ	0xFF4
  9754                           prodl	equ	0xFF3
  9755                           postinc0	equ	0xFEE
  9756                           plusw0	equ	0xFEB
  9757                           wreg	equ	0xFE8
  9758                           indf1	equ	0xFE7
  9759                           fsr1h	equ	0xFE2
  9760                           fsr1l	equ	0xFE1
  9761                           indf2	equ	0xFDF
  9762                           postinc2	equ	0xFDE
  9763                           postdec2	equ	0xFDD
  9764                           plusw2	equ	0xFDB
  9765                           fsr2h	equ	0xFDA
  9766                           fsr2l	equ	0xFD9
  9767                           status	equ	0xFD8
  9768                           
  9769 ;; *************** function _encode_uint8_variable *****************
  9770 ;; Defined at:
  9771 ;;		line 43 in file "../../muta/muta_messages.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
  9774 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
  9775 ;;  var             9   35[BANK0 ] struct .
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;		None
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1    wreg      unsigned char 
  9780 ;; Registers used:
  9781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9787 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9790 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9791 ;;Total ram usage:       11 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:    7
  9794 ;; This function calls:
  9795 ;;		Nothing
  9796 ;; This function is called by:
  9797 ;;		_send_initial_update
  9798 ;;		_send_writables_update
  9799 ;;		_send_periodical_update
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           	psect	text29
  9804  016046                     __ptext29:
  9805                           	opt stack 0
  9806  016046                     _encode_uint8_variable:
  9807                           	opt stack 22
  9808                           
  9809                           ;muta_messages.c: 45: *(buffer++) = var.label[0];
  9810                           
  9811                           ;incstack = 0
  9812  016046  C081  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9813  01604A  C082  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9814  01604E  C083  FFDF         	movff	encode_uint8_variable@var,indf2
  9815  016052  0100               	movlb	0	; () banked
  9816  016054  4B81               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9817  016056  2B82               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;muta_messages.c: 46: *(buffer++) = var.label[1];
  9821  016058  C081  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9822  01605C  C082  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9823  016060  C084  FFDF         	movff	encode_uint8_variable@var+1,indf2
  9824  016064  0100               	movlb	0	; () banked
  9825  016066  4B81               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9826  016068  2B82               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;muta_messages.c: 47: *(buffer++) = var.label[2];
  9830  01606A  C081  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9831  01606E  C082  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9832  016072  C085  FFDF         	movff	encode_uint8_variable@var+2,indf2
  9833                           
  9834                           ; BSR set to: 0
  9835  016076  0100               	movlb	0	; () banked
  9836  016078  4B81               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9837  01607A  2B82               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;muta_messages.c: 48: var.type = 0 << 1;
  9841  01607C  0E00               	movlw	0
  9842  01607E  0100               	movlb	0	; () banked
  9843  016080  6F86               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;muta_messages.c: 49: if (var.writable)
  9847  016082  0100               	movlb	0	; () banked
  9848  016084  518A               	movf	(encode_uint8_variable@var+7)& (0+255),w,b
  9849  016086  B4D8               	btfsc	status,2,c
  9850  016088  D004               	goto	l1290
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;muta_messages.c: 50: {
  9854                           ;muta_messages.c: 51: var.type = var.type + 1;
  9855  01608A  0100               	movlb	0	; () banked
  9856  01608C  2986               	incf	(encode_uint8_variable@var+3)& (0+255),w,b
  9857  01608E  0100               	movlb	0	; () banked
  9858  016090  6F86               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9859  016092                     l1290:
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;muta_messages.c: 52: }
  9863                           ;muta_messages.c: 53: var.type = var.type << 4;
  9864  016092  0100               	movlb	0	; () banked
  9865  016094  3986               	swapf	(encode_uint8_variable@var+3)& (0+255),w,b
  9866  016096  0BF0               	andlw	240
  9867  016098  0100               	movlb	0	; () banked
  9868  01609A  6F86               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9869                           
  9870                           ;muta_messages.c: 54: var.type = var.type + var.unit;
  9871  01609C  0100               	movlb	0	; () banked
  9872  01609E  5186               	movf	(encode_uint8_variable@var+3)& (0+255),w,b
  9873  0160A0  0100               	movlb	0	; () banked
  9874  0160A2  2589               	addwf	(encode_uint8_variable@var+6)& (0+255),w,b
  9875  0160A4  0100               	movlb	0	; () banked
  9876  0160A6  6F86               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;muta_messages.c: 55: *(buffer++) = var.type;
  9880  0160A8  C081  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9881  0160AC  C082  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9882  0160B0  C086  FFDF         	movff	encode_uint8_variable@var+3,indf2
  9883                           
  9884                           ; BSR set to: 0
  9885  0160B4  0100               	movlb	0	; () banked
  9886  0160B6  4B81               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9887  0160B8  2B82               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;muta_messages.c: 56: *(buffer++) = var.value_byte1;
  9891  0160BA  C081  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9892  0160BE  C082  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9893  0160C2  C087  FFDF         	movff	encode_uint8_variable@var+4,indf2
  9894                           
  9895                           ; BSR set to: 0
  9896  0160C6  0100               	movlb	0	; () banked
  9897  0160C8  4B81               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9898  0160CA  2B82               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;muta_messages.c: 57: return 5;
  9902  0160CC  0E05               	movlw	5
  9903  0160CE  0012               	return	
  9904  0160D0                     __end_of_encode_uint8_variable:
  9905                           	opt stack 0
  9906                           tblptru	equ	0xFF8
  9907                           tblptrh	equ	0xFF7
  9908                           tblptrl	equ	0xFF6
  9909                           tablat	equ	0xFF5
  9910                           prodh	equ	0xFF4
  9911                           prodl	equ	0xFF3
  9912                           postinc0	equ	0xFEE
  9913                           plusw0	equ	0xFEB
  9914                           wreg	equ	0xFE8
  9915                           indf1	equ	0xFE7
  9916                           fsr1h	equ	0xFE2
  9917                           fsr1l	equ	0xFE1
  9918                           indf2	equ	0xFDF
  9919                           postinc2	equ	0xFDE
  9920                           postdec2	equ	0xFDD
  9921                           plusw2	equ	0xFDB
  9922                           fsr2h	equ	0xFDA
  9923                           fsr2l	equ	0xFD9
  9924                           status	equ	0xFD8
  9925                           
  9926 ;; *************** function _do_UPDATE *****************
  9927 ;; Defined at:
  9928 ;;		line 333 in file "../../muta/muta_messages.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;  p_buff          2   33[BANK1 ] PTR unsigned char 
  9931 ;;		 -> m_buffer(32), 
  9932 ;;  size            1   35[BANK1 ] unsigned char 
  9933 ;;  ack_required    1   36[BANK1 ] unsigned char 
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;  i               2   39[BANK1 ] unsigned int 
  9936 ;;  shortaddress    2   37[BANK1 ] unsigned char [2]
  9937 ;;  result          1   41[BANK1 ] unsigned char 
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      unsigned char 
  9940 ;; Registers used:
  9941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9947 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9948 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9950 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9951 ;;Total ram usage:       10 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:   15
  9954 ;; This function calls:
  9955 ;;		_MiApp_DiscardMessage
  9956 ;;		_MiApp_MessageAvailable
  9957 ;;		_MiApp_UnicastAddress
  9958 ;;		_memcpy
  9959 ;; This function is called by:
  9960 ;;		_send_initial_update
  9961 ;;		_send_writables_update
  9962 ;;		_send_periodical_update
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966                           	psect	text30
  9967  014138                     __ptext30:
  9968                           	opt stack 0
  9969  014138                     _do_UPDATE:
  9970                           	opt stack 14
  9971                           
  9972                           ;muta_messages.c: 335: uint8_t shortaddress[2] = { 0x00, 0x00 };
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;incstack = 0
  9976  014138  C162  F1F8         	movff	do_UPDATE@F10230,do_UPDATE@shortaddress
  9977  01413C  C163  F1F9         	movff	do_UPDATE@F10230+1,do_UPDATE@shortaddress+1
  9978                           
  9979                           ;muta_messages.c: 336: {TxData = 11;};
  9980  014140  0E0B               	movlw	11
  9981  014142  0100               	movlb	0	; () banked
  9982  014144  6FD8               	movwf	_TxData& (0+255),b
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;muta_messages.c: 337: TxBuffer[TxData++] = 04;
  9986  014146  0100               	movlb	0	; () banked
  9987  014148  51D8               	movf	_TxData& (0+255),w,b
  9988  01414A  0D01               	mullw	1
  9989  01414C  0E6C               	movlw	low _TxBuffer
  9990  01414E  24F3               	addwf	prodl,w,c
  9991  014150  6ED9               	movwf	fsr2l,c
  9992  014152  0E01               	movlw	high _TxBuffer
  9993  014154  20F4               	addwfc	prodh,w,c
  9994  014156  6EDA               	movwf	fsr2h,c
  9995  014158  0E04               	movlw	4
  9996  01415A  6EDF               	movwf	indf2,c
  9997                           
  9998                           ; BSR set to: 0
  9999  01415C  0100               	movlb	0	; () banked
 10000  01415E  2BD8               	incf	_TxData& (0+255),f,b
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;muta_messages.c: 338: if (ack_required)
 10004  014160  0101               	movlb	1	; () banked
 10005  014162  51F7               	movf	do_UPDATE@ack_required& (0+255),w,b
 10006  014164  0101               	movlb	1	; () banked
 10007  014166  B4D8               	btfsc	status,2,c
 10008  014168  D00E               	goto	l12320
 10009                           
 10010                           ; BSR set to: 1
 10011                           ;muta_messages.c: 339: TxBuffer[TxData++] = 0xff;
 10012  01416A  0100               	movlb	0	; () banked
 10013  01416C  51D8               	movf	_TxData& (0+255),w,b
 10014  01416E  0D01               	mullw	1
 10015  014170  0E6C               	movlw	low _TxBuffer
 10016  014172  24F3               	addwf	prodl,w,c
 10017  014174  6ED9               	movwf	fsr2l,c
 10018  014176  0E01               	movlw	high _TxBuffer
 10019  014178  20F4               	addwfc	prodh,w,c
 10020  01417A  6EDA               	movwf	fsr2h,c
 10021  01417C  0EFF               	movlw	255
 10022  01417E  D00D               	goto	L7
 10023  014180                     l12318:
 10024                           
 10025                           ; BSR set to: 0
 10026  014180  0100               	movlb	0	; () banked
 10027  014182  2BD8               	incf	_TxData& (0+255),f,b
 10028  014184  D00C               	goto	l12324
 10029  014186                     l12320:
 10030                           
 10031                           ;muta_messages.c: 340: else
 10032                           ;muta_messages.c: 341: TxBuffer[TxData++] = 0xf0;
 10033  014186  0100               	movlb	0	; () banked
 10034  014188  51D8               	movf	_TxData& (0+255),w,b
 10035  01418A  0D01               	mullw	1
 10036  01418C  0E6C               	movlw	low _TxBuffer
 10037  01418E  24F3               	addwf	prodl,w,c
 10038  014190  6ED9               	movwf	fsr2l,c
 10039  014192  0E01               	movlw	high _TxBuffer
 10040  014194  20F4               	addwfc	prodh,w,c
 10041  014196  6EDA               	movwf	fsr2h,c
 10042  014198  0EF0               	movlw	240
 10043  01419A                     L7:
 10044  01419A  6EDF               	movwf	indf2,c
 10045  01419C  D7F1               	goto	l12318
 10046  01419E                     l12324:
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;muta_messages.c: 342: memcpy(&TxBuffer[TxData], p_buff, size);
 10050  01419E  0100               	movlb	0	; () banked
 10051  0141A0  51D8               	movf	_TxData& (0+255),w,b
 10052  0141A2  0D01               	mullw	1
 10053  0141A4  0E6C               	movlw	low _TxBuffer
 10054  0141A6  24F3               	addwf	prodl,w,c
 10055  0141A8  0100               	movlb	0	; () banked
 10056  0141AA  6F81               	movwf	memcpy@d1& (0+255),b
 10057  0141AC  0E01               	movlw	high _TxBuffer
 10058  0141AE  20F4               	addwfc	prodh,w,c
 10059  0141B0  0100               	movlb	0	; () banked
 10060  0141B2  6F82               	movwf	(memcpy@d1+1)& (0+255),b
 10061  0141B4  C1F4  F083         	movff	do_UPDATE@p_buff,memcpy@s1
 10062  0141B8  C1F5  F084         	movff	do_UPDATE@p_buff+1,memcpy@s1+1
 10063  0141BC  C1F6  F085         	movff	do_UPDATE@size,memcpy@n
 10064  0141C0  0100               	movlb	0	; () banked
 10065  0141C2  6B86               	clrf	(memcpy@n+1)& (0+255),b
 10066  0141C4  ECDD  F0B2         	call	_memcpy	;wreg free
 10067                           
 10068                           ;muta_messages.c: 343: TxData = TxData + size;
 10069  0141C8  0100               	movlb	0	; () banked
 10070  0141CA  51D8               	movf	_TxData& (0+255),w,b
 10071  0141CC  0101               	movlb	1	; () banked
 10072  0141CE  25F6               	addwf	do_UPDATE@size& (0+255),w,b
 10073  0141D0  0100               	movlb	0	; () banked
 10074  0141D2  6FD8               	movwf	_TxData& (0+255),b
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;muta_messages.c: 344: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 1);
 10078  0141D4  0EF8               	movlw	low do_UPDATE@shortaddress
 10079  0141D6  0101               	movlb	1	; () banked
 10080  0141D8  6FE8               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 10081  0141DA  0E01               	movlw	high do_UPDATE@shortaddress
 10082  0141DC  0101               	movlb	1	; () banked
 10083  0141DE  6FE9               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 10084  0141E0  0E00               	movlw	0
 10085  0141E2  0101               	movlb	1	; () banked
 10086  0141E4  6FEA               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 10087  0141E6  0E01               	movlw	1
 10088  0141E8  0101               	movlb	1	; () banked
 10089  0141EA  6FEB               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 10090  0141EC  EC22  F090         	call	_MiApp_UnicastAddress	;wreg free
 10091  0141F0  0101               	movlb	1	; () banked
 10092  0141F2  6FFC               	movwf	do_UPDATE@result& (0+255),b
 10093                           
 10094                           ; BSR set to: 1
 10095                           ;muta_messages.c: 345: if (!result)
 10096  0141F4  0101               	movlb	1	; () banked
 10097  0141F6  51FC               	movf	do_UPDATE@result& (0+255),w,b
 10098  0141F8  0101               	movlb	1	; () banked
 10099  0141FA  A4D8               	btfss	status,2,c
 10100  0141FC  D009               	goto	l12338
 10101                           
 10102                           ; BSR set to: 1
 10103                           ;muta_messages.c: 346: {
 10104                           ;muta_messages.c: 347: m_failed_messages++;
 10105  0141FE  0E01               	movlw	1
 10106  014200  0101               	movlb	1	; () banked
 10107  014202  2742               	addwf	_m_failed_messages& (0+255),f,b
 10108  014204  0E00               	movlw	0
 10109  014206  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 10110  014208  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 10111  01420A  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 10112                           
 10113                           ; BSR set to: 1
 10114                           ;muta_messages.c: 348: return 0;
 10115  01420C  0E00               	movlw	0
 10116                           
 10117                           ; BSR set to: 1
 10118  01420E  0012               	return	
 10119  014210                     l12338:
 10120                           
 10121                           ; BSR set to: 1
 10122                           ;muta_messages.c: 349: }
 10123                           ;muta_messages.c: 350: if (ack_required)
 10124  014210  0101               	movlb	1	; () banked
 10125  014212  51F7               	movf	do_UPDATE@ack_required& (0+255),w,b
 10126  014214  0101               	movlb	1	; () banked
 10127  014216  B4D8               	btfsc	status,2,c
 10128  014218  D04A               	goto	l12374
 10129                           
 10130                           ; BSR set to: 1
 10131                           ;muta_messages.c: 351: {
 10132                           ;muta_messages.c: 352: unsigned int i;
 10133                           ;muta_messages.c: 353: result = 0;
 10134  01421A  0E00               	movlw	0
 10135  01421C  0101               	movlb	1	; () banked
 10136  01421E  6FFC               	movwf	do_UPDATE@result& (0+255),b
 10137                           
 10138                           ;muta_messages.c: 354: for (i=0; i<100; i++)
 10139  014220  0E00               	movlw	0
 10140  014222  0101               	movlb	1	; () banked
 10141  014224  6FFB               	movwf	(do_UPDATE@i+1)& (0+255),b
 10142  014226  0E00               	movlw	0
 10143  014228  6FFA               	movwf	do_UPDATE@i& (0+255),b
 10144  01422A                     l12342:
 10145                           
 10146                           ; BSR set to: 1
 10147  01422A  0101               	movlb	1	; () banked
 10148  01422C  51FB               	movf	(do_UPDATE@i+1)& (0+255),w,b
 10149  01422E  E128               	bnz	l12362
 10150  014230  0E64               	movlw	100
 10151  014232  0101               	movlb	1	; () banked
 10152  014234  5DFA               	subwf	do_UPDATE@i& (0+255),w,b
 10153  014236  B0D8               	btfsc	status,0,c
 10154  014238  D023               	goto	l12362
 10155                           
 10156                           ; BSR set to: 1
 10157                           ;muta_messages.c: 355: {
 10158                           ;muta_messages.c: 356: _delay((unsigned long)((10)*(8000000/4000.0)));
 10159                           
 10160                           ; BSR set to: 1
 10161                           
 10162                           ; BSR set to: 1
 10163  01423A  0E1A               	movlw	26
 10164  01423C  0100               	movlb	0	; () banked
 10165  01423E  6FD0               	movwf	??_do_UPDATE& (0+255),b
 10166  014240  0EF8               	movlw	248
 10167  014242                     u17627:
 10168  014242  2EE8               	decfsz	wreg,f,c
 10169  014244  D7FE               	goto	u17627
 10170  014246  2FD0               	decfsz	??_do_UPDATE& (0+255),f,b
 10171  014248  D7FC               	goto	u17627
 10172  01424A  D000               	nop2	
 10173                           
 10174                           ;muta_messages.c: 357: if(MiApp_MessageAvailable())
 10175  01424C  EC85  F0B5         	call	_MiApp_MessageAvailable	;wreg free
 10176  014250  0900               	iorlw	0
 10177  014252  B4D8               	btfsc	status,2,c
 10178  014254  D011               	goto	l12358
 10179                           
 10180                           ;muta_messages.c: 358: {
 10181                           ;muta_messages.c: 360: last_rssi = rxMessage.PacketRSSI;
 10182  014256  C134  F167         	movff	_rxMessage+8,_last_rssi
 10183                           
 10184                           ;muta_messages.c: 361: if (rxMessage.Payload[0] != 04)
 10185  01425A  C131  FFD9         	movff	_rxMessage+5,fsr2l
 10186  01425E  C132  FFDA         	movff	_rxMessage+6,fsr2h
 10187  014262  0E04               	movlw	4
 10188  014264  18DE               	xorwf	postinc2,w,c
 10189  014266  B4D8               	btfsc	status,2,c
 10190  014268  D003               	goto	l12356
 10191                           
 10192                           ;muta_messages.c: 362: {
 10193                           ;muta_messages.c: 363: MiApp_DiscardMessage();
 10194  01426A  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
 10195                           
 10196                           ;muta_messages.c: 364: }
 10197  01426E  D008               	goto	l12362
 10198  014270                     l12356:
 10199                           
 10200                           ;muta_messages.c: 365: else
 10201                           ;muta_messages.c: 366: result = 1;
 10202  014270  0E01               	movlw	1
 10203  014272  0101               	movlb	1	; () banked
 10204  014274  6FFC               	movwf	do_UPDATE@result& (0+255),b
 10205                           
 10206                           ; BSR set to: 1
 10207                           ;muta_messages.c: 369: break;
 10208  014276  D004               	goto	l12362
 10209  014278                     l12358:
 10210  014278  0101               	movlb	1	; () banked
 10211  01427A  4BFA               	infsnz	do_UPDATE@i& (0+255),f,b
 10212  01427C  2BFB               	incf	(do_UPDATE@i+1)& (0+255),f,b
 10213  01427E  D7D5               	goto	l12342
 10214  014280                     l12362:
 10215                           
 10216                           ;muta_messages.c: 370: }
 10217                           ;muta_messages.c: 371: }
 10218                           ;muta_messages.c: 372: if (!result)
 10219  014280  0101               	movlb	1	; () banked
 10220  014282  51FC               	movf	do_UPDATE@result& (0+255),w,b
 10221  014284  0101               	movlb	1	; () banked
 10222  014286  A4D8               	btfss	status,2,c
 10223  014288  D008               	goto	l12366
 10224                           
 10225                           ; BSR set to: 1
 10226                           ;muta_messages.c: 373: m_failed_messages++;
 10227  01428A  0E01               	movlw	1
 10228  01428C  0101               	movlb	1	; () banked
 10229  01428E  2742               	addwf	_m_failed_messages& (0+255),f,b
 10230  014290  0E00               	movlw	0
 10231  014292  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 10232  014294  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 10233  014296  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 10234  014298  D007               	goto	l12368
 10235  01429A                     l12366:
 10236                           
 10237                           ; BSR set to: 1
 10238                           ;muta_messages.c: 374: else
 10239                           ;muta_messages.c: 375: m_sent_messages++;
 10240  01429A  0E01               	movlw	1
 10241  01429C  0101               	movlb	1	; () banked
 10242  01429E  2746               	addwf	_m_sent_messages& (0+255),f,b
 10243  0142A0  0E00               	movlw	0
 10244  0142A2  2347               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 10245  0142A4  2348               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 10246  0142A6  2349               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 10247  0142A8                     l12368:
 10248                           
 10249                           ; BSR set to: 1
 10250                           ;muta_messages.c: 376: return result;
 10251  0142A8  0101               	movlb	1	; () banked
 10252  0142AA  51FC               	movf	do_UPDATE@result& (0+255),w,b
 10253                           
 10254                           ; BSR set to: 1
 10255                           ;muta_messages.c: 377: }
 10256                           
 10257                           ; BSR set to: 1
 10258  0142AC  0012               	return	
 10259  0142AE                     l12374:
 10260                           
 10261                           ; BSR set to: 1
 10262                           ;muta_messages.c: 378: else
 10263                           ;muta_messages.c: 379: {
 10264                           ;muta_messages.c: 380: m_sent_messages++;
 10265  0142AE  0E01               	movlw	1
 10266  0142B0  0101               	movlb	1	; () banked
 10267  0142B2  2746               	addwf	_m_sent_messages& (0+255),f,b
 10268  0142B4  0E00               	movlw	0
 10269  0142B6  2347               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 10270  0142B8  2348               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 10271  0142BA  2349               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 10272                           
 10273                           ; BSR set to: 1
 10274                           ;muta_messages.c: 381: return 1;
 10275  0142BC  0E01               	movlw	1
 10276                           
 10277                           ; BSR set to: 1
 10278  0142BE  0012               	return	
 10279  0142C0                     __end_of_do_UPDATE:
 10280                           	opt stack 0
 10281                           tblptru	equ	0xFF8
 10282                           tblptrh	equ	0xFF7
 10283                           tblptrl	equ	0xFF6
 10284                           tablat	equ	0xFF5
 10285                           prodh	equ	0xFF4
 10286                           prodl	equ	0xFF3
 10287                           postinc0	equ	0xFEE
 10288                           plusw0	equ	0xFEB
 10289                           wreg	equ	0xFE8
 10290                           indf1	equ	0xFE7
 10291                           fsr1h	equ	0xFE2
 10292                           fsr1l	equ	0xFE1
 10293                           indf2	equ	0xFDF
 10294                           postinc2	equ	0xFDE
 10295                           postdec2	equ	0xFDD
 10296                           plusw2	equ	0xFDB
 10297                           fsr2h	equ	0xFDA
 10298                           fsr2l	equ	0xFD9
 10299                           status	equ	0xFD8
 10300                           
 10301 ;; *************** function _decode_variable *****************
 10302 ;; Defined at:
 10303 ;;		line 120 in file "../../muta/muta_messages.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;  p_buffer        2   43[BANK0 ] PTR unsigned char 
 10306 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;  var             9   54[BANK0 ] struct .
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  9   43[BANK0 ] struct .
 10311 ;; Registers used:
 10312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10318 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10319 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10320 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10321 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10322 ;;Total ram usage:       20 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:    8
 10325 ;; This function calls:
 10326 ;;		_memcpy
 10327 ;; This function is called by:
 10328 ;;		_process_update_answer
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           	psect	text31
 10333  0156B8                     __ptext31:
 10334                           	opt stack 0
 10335  0156B8                     _decode_variable:
 10336                           	opt stack 21
 10337                           
 10338                           ;muta_messages.c: 122: MUTA_VARIABLE var;
 10339                           ;muta_messages.c: 123: memcpy(var.label, p_buffer, 3);
 10340                           
 10341                           ; BSR set to: 1
 10342                           ;incstack = 0
 10343  0156B8  0E96               	movlw	low decode_variable@var
 10344  0156BA  0100               	movlb	0	; () banked
 10345  0156BC  6F81               	movwf	memcpy@d1& (0+255),b
 10346  0156BE  0E00               	movlw	high decode_variable@var
 10347  0156C0  0100               	movlb	0	; () banked
 10348  0156C2  6F82               	movwf	(memcpy@d1+1)& (0+255),b
 10349  0156C4  C08B  F083         	movff	decode_variable@p_buffer,memcpy@s1
 10350  0156C8  C08C  F084         	movff	decode_variable@p_buffer+1,memcpy@s1+1
 10351  0156CC  0E00               	movlw	0
 10352  0156CE  0100               	movlb	0	; () banked
 10353  0156D0  6F86               	movwf	(memcpy@n+1)& (0+255),b
 10354  0156D2  0E03               	movlw	3
 10355  0156D4  6F85               	movwf	memcpy@n& (0+255),b
 10356  0156D6  ECDD  F0B2         	call	_memcpy	;wreg free
 10357                           
 10358                           ;muta_messages.c: 124: p_buffer += 3;
 10359  0156DA  0E03               	movlw	3
 10360  0156DC  0100               	movlb	0	; () banked
 10361  0156DE  278B               	addwf	decode_variable@p_buffer& (0+255),f,b
 10362  0156E0  0E00               	movlw	0
 10363  0156E2  238C               	addwfc	(decode_variable@p_buffer+1)& (0+255),f,b
 10364                           
 10365                           ; BSR set to: 0
 10366                           ;muta_messages.c: 126: var.unit = *p_buffer & 0b00000111;
 10367  0156E4  C08B  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10368  0156E8  C08C  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10369  0156EC  50DF               	movf	indf2,w,c
 10370  0156EE  0B07               	andlw	7
 10371  0156F0  0100               	movlb	0	; () banked
 10372  0156F2  6F9C               	movwf	(decode_variable@var+6)& (0+255),b
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;muta_messages.c: 127: if (*p_buffer & 0b00010000)
 10376  0156F4  C08B  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10377  0156F8  C08C  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10378  0156FC  0100               	movlb	0	; () banked
 10379  0156FE  A8DF               	btfss	indf2,4,c
 10380  015700  D002               	goto	l12858
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;muta_messages.c: 128: var.writable = 1;
 10384  015702  0E01               	movlw	1
 10385  015704  D001               	goto	L8
 10386  015706                     l12858:
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;muta_messages.c: 129: else
 10390                           ;muta_messages.c: 130: var.writable = 0;
 10391  015706  0E00               	movlw	0
 10392  015708                     L8:
 10393  015708  0100               	movlb	0	; () banked
 10394  01570A  6F9D               	movwf	(decode_variable@var+7)& (0+255),b
 10395                           
 10396                           ; BSR set to: 0
 10397                           ;muta_messages.c: 131: var.type = (*p_buffer++ & 0b11100000) >> 5;
 10398                           
 10399                           ; BSR set to: 0
 10400  01570C  C08B  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10401  015710  C08C  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10402  015714  50DF               	movf	indf2,w,c
 10403  015716  0100               	movlb	0	; () banked
 10404  015718  6F94               	movwf	??_decode_variable& (0+255),b
 10405  01571A  0E05               	movlw	5
 10406  01571C  0100               	movlb	0	; () banked
 10407  01571E  6F95               	movwf	(??_decode_variable+1)& (0+255),b
 10408  015720                     u14905:
 10409  015720  0100               	movlb	0	; () banked
 10410  015722  90D8               	bcf	status,0,c
 10411  015724  3394               	rrcf	??_decode_variable& (0+255),f,b
 10412  015726  0100               	movlb	0	; () banked
 10413  015728  2F95               	decfsz	(??_decode_variable+1)& (0+255),f,b
 10414  01572A  D7FA               	goto	u14905
 10415  01572C  0100               	movlb	0	; () banked
 10416  01572E  5194               	movf	??_decode_variable& (0+255),w,b
 10417  015730  0B07               	andlw	7
 10418  015732  0100               	movlb	0	; () banked
 10419  015734  6F99               	movwf	(decode_variable@var+3)& (0+255),b
 10420                           
 10421                           ; BSR set to: 0
 10422  015736  0100               	movlb	0	; () banked
 10423  015738  4B8B               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10424  01573A  2B8C               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;muta_messages.c: 132: var.value_byte1 = *p_buffer++;
 10428  01573C  C08B  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10429  015740  C08C  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10430  015744  50DF               	movf	indf2,w,c
 10431  015746  0100               	movlb	0	; () banked
 10432  015748  6F9A               	movwf	(decode_variable@var+4)& (0+255),b
 10433                           
 10434                           ; BSR set to: 0
 10435  01574A  0100               	movlb	0	; () banked
 10436  01574C  4B8B               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10437  01574E  2B8C               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10438                           
 10439                           ;muta_messages.c: 133: if ((var.type == 1) || (var.type == 2))
 10440  015750  0100               	movlb	0	; () banked
 10441  015752  0599               	decf	(decode_variable@var+3)& (0+255),w,b
 10442  015754  B4D8               	btfsc	status,2,c
 10443  015756  D005               	goto	l12870
 10444                           
 10445                           ; BSR set to: 0
 10446  015758  0E02               	movlw	2
 10447  01575A  0100               	movlb	0	; () banked
 10448  01575C  1999               	xorwf	(decode_variable@var+3)& (0+255),w,b
 10449  01575E  A4D8               	btfss	status,2,c
 10450  015760  D00C               	goto	l12876
 10451  015762                     l12870:
 10452                           
 10453                           ; BSR set to: 0
 10454                           ;muta_messages.c: 134: {
 10455                           ;muta_messages.c: 135: var.value_byte2 = *p_buffer++;
 10456  015762  C08B  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10457  015766  C08C  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10458  01576A  50DF               	movf	indf2,w,c
 10459  01576C  0100               	movlb	0	; () banked
 10460  01576E  6F9B               	movwf	(decode_variable@var+5)& (0+255),b
 10461                           
 10462                           ; BSR set to: 0
 10463  015770  0100               	movlb	0	; () banked
 10464  015772  4B8B               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10465  015774  2B8C               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;muta_messages.c: 136: var.size = 6;
 10469  015776  0E06               	movlw	6
 10470  015778  D001               	goto	L9
 10471  01577A                     l12876:
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;muta_messages.c: 138: else
 10475                           ;muta_messages.c: 139: var.size = 5;
 10476  01577A  0E05               	movlw	5
 10477  01577C                     L9:
 10478  01577C  0100               	movlb	0	; () banked
 10479  01577E  6F9E               	movwf	(decode_variable@var+8)& (0+255),b
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;muta_messages.c: 140: return var;
 10483                           
 10484                           ; BSR set to: 0
 10485  015780  EE20  F096         	lfsr	2,decode_variable@var
 10486  015784  EE00  F08B         	lfsr	0,?_decode_variable
 10487  015788  0E08               	movlw	8
 10488  01578A                     u14931:
 10489  01578A  CFDB FFEB          	movff	plusw2,plusw0
 10490  01578E  06E8               	decf	wreg,f,c
 10491  015790  E2FC               	bc	u14931
 10492  015792  0012               	return	
 10493  015794                     __end_of_decode_variable:
 10494                           	opt stack 0
 10495                           tblptru	equ	0xFF8
 10496                           tblptrh	equ	0xFF7
 10497                           tblptrl	equ	0xFF6
 10498                           tablat	equ	0xFF5
 10499                           prodh	equ	0xFF4
 10500                           prodl	equ	0xFF3
 10501                           postinc0	equ	0xFEE
 10502                           plusw0	equ	0xFEB
 10503                           wreg	equ	0xFE8
 10504                           indf1	equ	0xFE7
 10505                           fsr1h	equ	0xFE2
 10506                           fsr1l	equ	0xFE1
 10507                           indf2	equ	0xFDF
 10508                           postinc2	equ	0xFDE
 10509                           postdec2	equ	0xFDD
 10510                           plusw2	equ	0xFDB
 10511                           fsr2h	equ	0xFDA
 10512                           fsr2l	equ	0xFD9
 10513                           status	equ	0xFD8
 10514                           
 10515 ;; *************** function _MiApp_TransceiverPowerState *****************
 10516 ;; Defined at:
 10517 ;;		line 3805 in file "src/miwi/miwi_mesh.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  Mode            1    wreg     unsigned char 
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;  Mode            1   53[BANK0 ] unsigned char 
 10522 ;;  status          1    0        unsigned char 
 10523 ;; Return value:  Size  Location     Type
 10524 ;;                  1    wreg      unsigned char 
 10525 ;; Registers used:
 10526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10527 ;; Tracked objects:
 10528 ;;		On entry : 0/0
 10529 ;;		On exit  : 0/0
 10530 ;;		Unchanged: 0/0
 10531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10535 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10536 ;;Total ram usage:        1 bytes
 10537 ;; Hardware stack levels used:    1
 10538 ;; Hardware stack levels required when called:   11
 10539 ;; This function calls:
 10540 ;;		_MiMAC_PowerState
 10541 ;; This function is called by:
 10542 ;;		_main
 10543 ;;		_process_update_answer
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547                           	psect	text32
 10548  016878                     __ptext32:
 10549                           	opt stack 0
 10550  016878                     _MiApp_TransceiverPowerState:
 10551                           	opt stack 18
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;incstack = 0
 10555                           ;MiApp_TransceiverPowerState@Mode stored from wreg
 10556  016878  0100               	movlb	0	; () banked
 10557  01687A  6F95               	movwf	MiApp_TransceiverPowerState@Mode& (0+255),b
 10558                           
 10559                           ;miwi_mesh.c: 3807: uint8_t status;
 10560                           ;miwi_mesh.c: 3809: switch(Mode)
 10561  01687C  D012               	goto	l12772
 10562  01687E                     l12762:
 10563                           
 10564                           ;miwi_mesh.c: 3812: {
 10565                           ;miwi_mesh.c: 3820: if( MiMAC_PowerState(0x00) )
 10566  01687E  0E00               	movlw	0
 10567  016880  EC5F  F0B1         	call	_MiMAC_PowerState
 10568  016884  0900               	iorlw	0
 10569  016886  B4D8               	btfsc	status,2,c
 10570  016888  0012               	return	
 10571                           
 10572                           ;miwi_mesh.c: 3821: {
 10573                           ;miwi_mesh.c: 3822: MiWiStateMachine.bits.Sleeping = 1;
 10574  01688A  0100               	movlb	0	; () banked
 10575  01688C  81D5               	bsf	(_MiWiStateMachine+1)& (0+255),0,b
 10576                           
 10577                           ; BSR set to: 0
 10578                           ;miwi_mesh.c: 3824: }
 10579                           ;miwi_mesh.c: 3825: return 0x01;
 10580                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10581                           
 10582                           ;miwi_mesh.c: 3823: return 0x00;
 10583                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10584  01688E  0012               	return	
 10585  016890                     l12766:
 10586                           
 10587                           ; BSR set to: 0
 10588                           ;miwi_mesh.c: 3829: {
 10589                           ;miwi_mesh.c: 3830: if( MiMAC_PowerState(0xFF) )
 10590  016890  0EFF               	movlw	255
 10591  016892  EC5F  F0B1         	call	_MiMAC_PowerState
 10592  016896  0900               	iorlw	0
 10593  016898  B4D8               	btfsc	status,2,c
 10594  01689A  0012               	return	
 10595                           
 10596                           ;miwi_mesh.c: 3831: {
 10597                           ;miwi_mesh.c: 3832: MiWiStateMachine.bits.Sleeping = 0;
 10598  01689C  0100               	movlb	0	; () banked
 10599  01689E  91D5               	bcf	(_MiWiStateMachine+1)& (0+255),0,b
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;miwi_mesh.c: 3860: }
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;miwi_mesh.c: 3859: break;
 10606                           
 10607                           ;miwi_mesh.c: 3836: }
 10608                           ;miwi_mesh.c: 3858: default:
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;miwi_mesh.c: 3834: }
 10612                           ;miwi_mesh.c: 3835: return 0x01;
 10613                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10614                           
 10615                           ;miwi_mesh.c: 3833: return 0x00;
 10616                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10617  0168A0  0012               	return	
 10618  0168A2                     l12772:
 10619  0168A2  0100               	movlb	0	; () banked
 10620  0168A4  5195               	movf	MiApp_TransceiverPowerState@Mode& (0+255),w,b
 10621                           
 10622                           ; Switch size 1, requested type "space"
 10623                           ; Number of cases is 2, Range of values is 0 to 1
 10624                           ; switch strategies available:
 10625                           ; Name         Instructions Cycles
 10626                           ; simple_byte            7     4 (average)
 10627                           ;	Chosen strategy is simple_byte
 10628  0168A6  0A00               	xorlw	0	; case 0
 10629  0168A8  B4D8               	btfsc	status,2,c
 10630  0168AA  D7E9               	goto	l12762
 10631  0168AC  0A01               	xorlw	1	; case 1
 10632  0168AE  A4D8               	btfss	status,2,c
 10633  0168B0  0012               	return	
 10634  0168B2  D7EE               	goto	l12766
 10635  0168B4                     __end_of_MiApp_TransceiverPowerState:
 10636                           	opt stack 0
 10637                           tblptru	equ	0xFF8
 10638                           tblptrh	equ	0xFF7
 10639                           tblptrl	equ	0xFF6
 10640                           tablat	equ	0xFF5
 10641                           prodh	equ	0xFF4
 10642                           prodl	equ	0xFF3
 10643                           postinc0	equ	0xFEE
 10644                           plusw0	equ	0xFEB
 10645                           wreg	equ	0xFE8
 10646                           indf1	equ	0xFE7
 10647                           fsr1h	equ	0xFE2
 10648                           fsr1l	equ	0xFE1
 10649                           indf2	equ	0xFDF
 10650                           postinc2	equ	0xFDE
 10651                           postdec2	equ	0xFDD
 10652                           plusw2	equ	0xFDB
 10653                           fsr2h	equ	0xFDA
 10654                           fsr2l	equ	0xFD9
 10655                           status	equ	0xFD8
 10656                           
 10657 ;; *************** function _MiMAC_PowerState *****************
 10658 ;; Defined at:
 10659 ;;		line 1174 in file "src/miwi/drv_mrf_miwi_89xa.c"
 10660 ;; Parameters:    Size  Location     Type
 10661 ;;  PowerState      1    wreg     unsigned char 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  PowerState      1   51[BANK0 ] unsigned char 
 10664 ;;  i               1   52[BANK0 ] unsigned char 
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  1    wreg      unsigned char 
 10667 ;; Registers used:
 10668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10675 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10678 ;;Total ram usage:        2 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; Hardware stack levels required when called:   10
 10681 ;; This function calls:
 10682 ;;		_DELAY_ms
 10683 ;;		_SetRFMode
 10684 ;; This function is called by:
 10685 ;;		_MiApp_TransceiverPowerState
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           	psect	text33
 10690  0162BE                     __ptext33:
 10691                           	opt stack 0
 10692  0162BE                     _MiMAC_PowerState:
 10693                           	opt stack 18
 10694                           
 10695                           ;incstack = 0
 10696                           ;MiMAC_PowerState@PowerState stored from wreg
 10697  0162BE  0100               	movlb	0	; () banked
 10698  0162C0  6F93               	movwf	MiMAC_PowerState@PowerState& (0+255),b
 10699                           
 10700                           ;drv_mrf_miwi_89xa.c: 1176: switch(PowerState)
 10701  0162C2  D02D               	goto	l12252
 10702  0162C4                     l12222:
 10703                           
 10704                           ;drv_mrf_miwi_89xa.c: 1179: {
 10705                           ;drv_mrf_miwi_89xa.c: 1180: SetRFMode(0x00);
 10706  0162C4  0E00               	movlw	0
 10707  0162C6  EC96  F0AF         	call	_SetRFMode
 10708                           
 10709                           ;drv_mrf_miwi_89xa.c: 1182: INTCONbits.INT0IE = 0;
 10710  0162CA  98F2               	bcf	intcon,4,c	;volatile
 10711                           
 10712                           ;drv_mrf_miwi_89xa.c: 1184: INTCON3bits.INT1IE = 0;
 10713  0162CC  96F0               	bcf	intcon3,3,c	;volatile
 10714                           
 10715                           ;drv_mrf_miwi_89xa.c: 1185: }
 10716                           ;drv_mrf_miwi_89xa.c: 1186: break;
 10717  0162CE  D030               	goto	l12254
 10718  0162D0                     l12228:
 10719                           
 10720                           ;drv_mrf_miwi_89xa.c: 1189: {
 10721                           ;drv_mrf_miwi_89xa.c: 1190: uint8_t i;
 10722                           ;drv_mrf_miwi_89xa.c: 1192: SetRFMode(0x20);
 10723  0162D0  0E20               	movlw	32
 10724  0162D2  EC96  F0AF         	call	_SetRFMode
 10725                           
 10726                           ;drv_mrf_miwi_89xa.c: 1193: SetRFMode(0x60);
 10727  0162D6  0E60               	movlw	96
 10728  0162D8  EC96  F0AF         	call	_SetRFMode
 10729                           
 10730                           ;drv_mrf_miwi_89xa.c: 1195: INTCONbits.INT0IE = 1;
 10731  0162DC  88F2               	bsf	intcon,4,c	;volatile
 10732                           
 10733                           ;drv_mrf_miwi_89xa.c: 1197: INTCON3bits.INT1IE = 1;
 10734  0162DE  86F0               	bsf	intcon3,3,c	;volatile
 10735                           
 10736                           ;drv_mrf_miwi_89xa.c: 1198: DELAY_ms(10);
 10737  0162E0  0E00               	movlw	0
 10738  0162E2  0100               	movlb	0	; () banked
 10739  0162E4  6F8E               	movwf	(DELAY_ms@ms+1)& (0+255),b
 10740  0162E6  0E0A               	movlw	10
 10741  0162E8  6F8D               	movwf	DELAY_ms@ms& (0+255),b
 10742  0162EA  EC0E  F0AE         	call	_DELAY_ms	;wreg free
 10743                           
 10744                           ;drv_mrf_miwi_89xa.c: 1200: for(i = 0; i < 5; i++)
 10745  0162EE  0E00               	movlw	0
 10746  0162F0  0100               	movlb	0	; () banked
 10747  0162F2  6F94               	movwf	MiMAC_PowerState@i& (0+255),b
 10748  0162F4                     l12236:
 10749                           
 10750                           ; BSR set to: 0
 10751  0162F4  0E04               	movlw	4
 10752  0162F6  0100               	movlb	0	; () banked
 10753  0162F8  6594               	cpfsgt	MiMAC_PowerState@i& (0+255),b
 10754  0162FA  D001               	goto	l12240
 10755  0162FC  D019               	goto	l12254
 10756  0162FE                     l12240:
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;drv_mrf_miwi_89xa.c: 1201: {
 10760                           ;drv_mrf_miwi_89xa.c: 1202: AckInfo[i].Valid = 0;
 10761  0162FE  0100               	movlb	0	; () banked
 10762  016300  5194               	movf	MiMAC_PowerState@i& (0+255),w,b
 10763  016302  0D06               	mullw	6
 10764  016304  0E28               	movlw	low _AckInfo
 10765  016306  24F3               	addwf	prodl,w,c
 10766  016308  6ED9               	movwf	fsr2l,c
 10767  01630A  0E02               	movlw	high _AckInfo
 10768  01630C  20F4               	addwfc	prodh,w,c
 10769  01630E  6EDA               	movwf	fsr2h,c
 10770  016310  0E00               	movlw	0
 10771  016312  6EDF               	movwf	indf2,c
 10772                           
 10773                           ; BSR set to: 0
 10774  016314  0100               	movlb	0	; () banked
 10775  016316  2B94               	incf	MiMAC_PowerState@i& (0+255),f,b
 10776  016318  D7ED               	goto	l12236
 10777  01631A                     l12246:
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;drv_mrf_miwi_89xa.c: 1209: return 0;
 10781  01631A  0E00               	movlw	0
 10782                           
 10783                           ; BSR set to: 0
 10784  01631C  0012               	return	
 10785  01631E                     l12252:
 10786  01631E  0100               	movlb	0	; () banked
 10787  016320  5193               	movf	MiMAC_PowerState@PowerState& (0+255),w,b
 10788                           
 10789                           ; Switch size 1, requested type "space"
 10790                           ; Number of cases is 2, Range of values is 0 to 255
 10791                           ; switch strategies available:
 10792                           ; Name         Instructions Cycles
 10793                           ; simple_byte            7     4 (average)
 10794                           ;	Chosen strategy is simple_byte
 10795  016322  0A00               	xorlw	0	; case 0
 10796  016324  B4D8               	btfsc	status,2,c
 10797  016326  D7CE               	goto	l12222
 10798  016328  0AFF               	xorlw	255	; case 255
 10799  01632A  B4D8               	btfsc	status,2,c
 10800  01632C  D7D1               	goto	l12228
 10801  01632E  D7F5               	goto	l12246
 10802  016330                     l12254:
 10803                           
 10804                           ;drv_mrf_miwi_89xa.c: 1211: return 1;
 10805  016330  0E01               	movlw	1
 10806  016332  0012               	return	
 10807  016334                     __end_of_MiMAC_PowerState:
 10808                           	opt stack 0
 10809                           tblptru	equ	0xFF8
 10810                           tblptrh	equ	0xFF7
 10811                           tblptrl	equ	0xFF6
 10812                           tablat	equ	0xFF5
 10813                           prodh	equ	0xFF4
 10814                           prodl	equ	0xFF3
 10815                           intcon	equ	0xFF2
 10816                           intcon3	equ	0xFF0
 10817                           postinc0	equ	0xFEE
 10818                           plusw0	equ	0xFEB
 10819                           wreg	equ	0xFE8
 10820                           indf1	equ	0xFE7
 10821                           fsr1h	equ	0xFE2
 10822                           fsr1l	equ	0xFE1
 10823                           indf2	equ	0xFDF
 10824                           postinc2	equ	0xFDE
 10825                           postdec2	equ	0xFDD
 10826                           plusw2	equ	0xFDB
 10827                           fsr2h	equ	0xFDA
 10828                           fsr2l	equ	0xFD9
 10829                           status	equ	0xFD8
 10830                           
 10831 ;; *************** function _do_NETWORK_REGISTER *****************
 10832 ;; Defined at:
 10833 ;;		line 146 in file "../../muta/muta_messages.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;  p_uid           2   33[BANK1 ] PTR unsigned char 
 10836 ;;		 -> myLongAddress(4), 
 10837 ;;  sleeping_dev    1   35[BANK1 ] unsigned char 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  i               2   38[BANK1 ] unsigned int 
 10840 ;;  shortaddress    2   36[BANK1 ] unsigned char [2]
 10841 ;;  result          1   40[BANK1 ] unsigned char 
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      unsigned char 
 10844 ;; Registers used:
 10845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10851 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10852 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10854 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10855 ;;Total ram usage:        9 bytes
 10856 ;; Hardware stack levels used:    1
 10857 ;; Hardware stack levels required when called:   15
 10858 ;; This function calls:
 10859 ;;		_MiApp_DiscardMessage
 10860 ;;		_MiApp_MessageAvailable
 10861 ;;		_MiApp_UnicastAddress
 10862 ;;		_memcpy
 10863 ;; This function is called by:
 10864 ;;		_main
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           	psect	text34
 10869  013FAC                     __ptext34:
 10870                           	opt stack 0
 10871  013FAC                     _do_NETWORK_REGISTER:
 10872                           	opt stack 15
 10873                           
 10874                           ;muta_messages.c: 148: uint8_t shortaddress[2] = { 0x00, 0x00 };
 10875                           
 10876                           ;incstack = 0
 10877  013FAC  C160  F1F7         	movff	do_NETWORK_REGISTER@F10202,do_NETWORK_REGISTER@shortaddress
 10878  013FB0  C161  F1F8         	movff	do_NETWORK_REGISTER@F10202+1,do_NETWORK_REGISTER@shortaddress+1
 10879                           
 10880                           ;muta_messages.c: 149: {TxData = 11;};
 10881  013FB4  0E0B               	movlw	11
 10882  013FB6  0100               	movlb	0	; () banked
 10883  013FB8  6FD8               	movwf	_TxData& (0+255),b
 10884                           
 10885                           ; BSR set to: 0
 10886                           ;muta_messages.c: 150: TxBuffer[TxData++] = 02;
 10887  013FBA  0100               	movlb	0	; () banked
 10888  013FBC  51D8               	movf	_TxData& (0+255),w,b
 10889  013FBE  0D01               	mullw	1
 10890  013FC0  0E6C               	movlw	low _TxBuffer
 10891  013FC2  24F3               	addwf	prodl,w,c
 10892  013FC4  6ED9               	movwf	fsr2l,c
 10893  013FC6  0E01               	movlw	high _TxBuffer
 10894  013FC8  20F4               	addwfc	prodh,w,c
 10895  013FCA  6EDA               	movwf	fsr2h,c
 10896  013FCC  0E02               	movlw	2
 10897  013FCE  6EDF               	movwf	indf2,c
 10898                           
 10899                           ; BSR set to: 0
 10900  013FD0  0100               	movlb	0	; () banked
 10901  013FD2  2BD8               	incf	_TxData& (0+255),f,b
 10902                           
 10903                           ; BSR set to: 0
 10904                           ;muta_messages.c: 151: memcpy(&TxBuffer[TxData], p_uid, 4);
 10905  013FD4  0100               	movlb	0	; () banked
 10906  013FD6  51D8               	movf	_TxData& (0+255),w,b
 10907  013FD8  0D01               	mullw	1
 10908  013FDA  0E6C               	movlw	low _TxBuffer
 10909  013FDC  24F3               	addwf	prodl,w,c
 10910  013FDE  0100               	movlb	0	; () banked
 10911  013FE0  6F81               	movwf	memcpy@d1& (0+255),b
 10912  013FE2  0E01               	movlw	high _TxBuffer
 10913  013FE4  20F4               	addwfc	prodh,w,c
 10914  013FE6  0100               	movlb	0	; () banked
 10915  013FE8  6F82               	movwf	(memcpy@d1+1)& (0+255),b
 10916  013FEA  C1F4  F083         	movff	do_NETWORK_REGISTER@p_uid,memcpy@s1
 10917  013FEE  C1F5  F084         	movff	do_NETWORK_REGISTER@p_uid+1,memcpy@s1+1
 10918  013FF2  0E00               	movlw	0
 10919  013FF4  0100               	movlb	0	; () banked
 10920  013FF6  6F86               	movwf	(memcpy@n+1)& (0+255),b
 10921  013FF8  0E04               	movlw	4
 10922  013FFA  6F85               	movwf	memcpy@n& (0+255),b
 10923  013FFC  ECDD  F0B2         	call	_memcpy	;wreg free
 10924                           
 10925                           ;muta_messages.c: 152: TxData = TxData + 4;
 10926  014000  0100               	movlb	0	; () banked
 10927  014002  51D8               	movf	_TxData& (0+255),w,b
 10928  014004  0F04               	addlw	4
 10929  014006  0100               	movlb	0	; () banked
 10930  014008  6FD8               	movwf	_TxData& (0+255),b
 10931                           
 10932                           ; BSR set to: 0
 10933                           ;muta_messages.c: 153: TxBuffer[TxData++] = sleeping_device;
 10934  01400A  0100               	movlb	0	; () banked
 10935  01400C  51D8               	movf	_TxData& (0+255),w,b
 10936  01400E  0D01               	mullw	1
 10937  014010  0E6C               	movlw	low _TxBuffer
 10938  014012  24F3               	addwf	prodl,w,c
 10939  014014  6ED9               	movwf	fsr2l,c
 10940  014016  0E01               	movlw	high _TxBuffer
 10941  014018  20F4               	addwfc	prodh,w,c
 10942  01401A  6EDA               	movwf	fsr2h,c
 10943  01401C  C1F6  FFDF         	movff	do_NETWORK_REGISTER@sleeping_device,indf2
 10944                           
 10945                           ; BSR set to: 0
 10946  014020  0100               	movlb	0	; () banked
 10947  014022  2BD8               	incf	_TxData& (0+255),f,b
 10948                           
 10949                           ; BSR set to: 0
 10950                           ;muta_messages.c: 154: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 0);
 10951  014024  0EF7               	movlw	low do_NETWORK_REGISTER@shortaddress
 10952  014026  0101               	movlb	1	; () banked
 10953  014028  6FE8               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 10954  01402A  0E01               	movlw	high do_NETWORK_REGISTER@shortaddress
 10955  01402C  0101               	movlb	1	; () banked
 10956  01402E  6FE9               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 10957  014030  0E00               	movlw	0
 10958  014032  0101               	movlb	1	; () banked
 10959  014034  6FEA               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 10960  014036  0E00               	movlw	0
 10961  014038  0101               	movlb	1	; () banked
 10962  01403A  6FEB               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 10963  01403C  EC22  F090         	call	_MiApp_UnicastAddress	;wreg free
 10964  014040  0101               	movlb	1	; () banked
 10965  014042  6FFB               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 10966                           
 10967                           ; BSR set to: 1
 10968                           ;muta_messages.c: 155: if (!result)
 10969  014044  0101               	movlb	1	; () banked
 10970  014046  51FB               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 10971  014048  0101               	movlb	1	; () banked
 10972  01404A  A4D8               	btfss	status,2,c
 10973  01404C  D009               	goto	l13954
 10974                           
 10975                           ; BSR set to: 1
 10976                           ;muta_messages.c: 156: {
 10977                           ;muta_messages.c: 157: m_failed_messages++;
 10978  01404E  0E01               	movlw	1
 10979  014050  0101               	movlb	1	; () banked
 10980  014052  2742               	addwf	_m_failed_messages& (0+255),f,b
 10981  014054  0E00               	movlw	0
 10982  014056  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 10983  014058  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 10984  01405A  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 10985                           
 10986                           ; BSR set to: 1
 10987                           ;muta_messages.c: 158: return 0;
 10988  01405C  0E00               	movlw	0
 10989                           
 10990                           ; BSR set to: 1
 10991                           ;muta_messages.c: 159: }
 10992                           
 10993                           ; BSR set to: 1
 10994  01405E  0012               	return	
 10995  014060                     l13954:
 10996                           
 10997                           ; BSR set to: 1
 10998                           ;muta_messages.c: 160: else
 10999                           ;muta_messages.c: 161: {
 11000                           ;muta_messages.c: 162: unsigned int i;
 11001                           ;muta_messages.c: 163: result = 0;
 11002  014060  0E00               	movlw	0
 11003  014062  0101               	movlb	1	; () banked
 11004  014064  6FFB               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 11005                           
 11006                           ;muta_messages.c: 164: for (i=0; i<100; i++)
 11007  014066  0E00               	movlw	0
 11008  014068  0101               	movlb	1	; () banked
 11009  01406A  6FFA               	movwf	(do_NETWORK_REGISTER@i+1)& (0+255),b
 11010  01406C  0E00               	movlw	0
 11011  01406E  6FF9               	movwf	do_NETWORK_REGISTER@i& (0+255),b
 11012  014070                     l13956:
 11013                           
 11014                           ; BSR set to: 1
 11015  014070  0101               	movlb	1	; () banked
 11016  014072  51FA               	movf	(do_NETWORK_REGISTER@i+1)& (0+255),w,b
 11017  014074  E14A               	bnz	l13978
 11018  014076  0E64               	movlw	100
 11019  014078  0101               	movlb	1	; () banked
 11020  01407A  5DF9               	subwf	do_NETWORK_REGISTER@i& (0+255),w,b
 11021  01407C  B0D8               	btfsc	status,0,c
 11022  01407E  D045               	goto	l13978
 11023                           
 11024                           ; BSR set to: 1
 11025                           ;muta_messages.c: 165: {
 11026                           ;muta_messages.c: 166: _delay((unsigned long)((10)*(8000000/4000.0)));
 11027                           
 11028                           ; BSR set to: 1
 11029                           
 11030                           ; BSR set to: 1
 11031  014080  0E1A               	movlw	26
 11032  014082  0100               	movlb	0	; () banked
 11033  014084  6FD0               	movwf	??_do_NETWORK_REGISTER& (0+255),b
 11034  014086  0EF8               	movlw	248
 11035  014088                     u17637:
 11036  014088  2EE8               	decfsz	wreg,f,c
 11037  01408A  D7FE               	goto	u17637
 11038  01408C  2FD0               	decfsz	??_do_NETWORK_REGISTER& (0+255),f,b
 11039  01408E  D7FC               	goto	u17637
 11040  014090  D000               	nop2	
 11041                           
 11042                           ;muta_messages.c: 167: if(MiApp_MessageAvailable())
 11043  014092  EC85  F0B5         	call	_MiApp_MessageAvailable	;wreg free
 11044  014096  0900               	iorlw	0
 11045  014098  B4D8               	btfsc	status,2,c
 11046  01409A  D033               	goto	l13974
 11047                           
 11048                           ;muta_messages.c: 168: {
 11049                           ;muta_messages.c: 170: last_rssi = rxMessage.PacketRSSI;
 11050  01409C  C134  F167         	movff	_rxMessage+8,_last_rssi
 11051                           
 11052                           ;muta_messages.c: 171: if (rxMessage.Payload[0] != 02)
 11053  0140A0  C131  FFD9         	movff	_rxMessage+5,fsr2l
 11054  0140A4  C132  FFDA         	movff	_rxMessage+6,fsr2h
 11055  0140A8  0E02               	movlw	2
 11056  0140AA  18DE               	xorwf	postinc2,w,c
 11057  0140AC  B4D8               	btfsc	status,2,c
 11058  0140AE  D003               	goto	l13970
 11059                           
 11060                           ;muta_messages.c: 172: {
 11061                           ;muta_messages.c: 173: MiApp_DiscardMessage();
 11062  0140B0  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
 11063                           
 11064                           ;muta_messages.c: 174: }
 11065  0140B4  D026               	goto	l13974
 11066  0140B6                     l13970:
 11067                           
 11068                           ;muta_messages.c: 175: else
 11069                           ;muta_messages.c: 176: {
 11070                           ;muta_messages.c: 177: result = (rxMessage.Payload[1] == 0xff);
 11071  0140B6  0101               	movlb	1	; () banked
 11072  0140B8  EE20 F001          	lfsr	2,1
 11073  0140BC  5131               	movf	(_rxMessage+5)& (0+255),w,b
 11074  0140BE  26D9               	addwf	fsr2l,f,c
 11075  0140C0  5132               	movf	(_rxMessage+6)& (0+255),w,b
 11076  0140C2  22DA               	addwfc	fsr2h,f,c
 11077  0140C4  28DE               	incf	postinc2,w,c
 11078  0140C6  A4D8               	btfss	status,2,c
 11079  0140C8  D002               	goto	u16300
 11080  0140CA  0E01               	movlw	1
 11081  0140CC  D001               	goto	u16310
 11082  0140CE                     u16300:
 11083  0140CE  0E00               	movlw	0
 11084  0140D0                     u16310:
 11085  0140D0  0101               	movlb	1	; () banked
 11086  0140D2  6FFB               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 11087                           
 11088                           ;muta_messages.c: 178: mySecurityKey[2] = rxMessage.Payload[2];
 11089  0140D4  0101               	movlb	1	; () banked
 11090  0140D6  EE20 F002          	lfsr	2,2
 11091  0140DA  5131               	movf	(_rxMessage+5)& (0+255),w,b
 11092  0140DC  26D9               	addwf	fsr2l,f,c
 11093  0140DE  5132               	movf	(_rxMessage+6)& (0+255),w,b
 11094  0140E0  22DA               	addwfc	fsr2h,f,c
 11095  0140E2  50DF               	movf	indf2,w,c
 11096  0140E4  0101               	movlb	1	; () banked
 11097  0140E6  6F38               	movwf	(_mySecurityKey+2)& (0+255),b
 11098                           
 11099                           ;muta_messages.c: 179: mySecurityKey[6] = rxMessage.Payload[3];
 11100  0140E8  0101               	movlb	1	; () banked
 11101  0140EA  EE20 F003          	lfsr	2,3
 11102  0140EE  5131               	movf	(_rxMessage+5)& (0+255),w,b
 11103  0140F0  26D9               	addwf	fsr2l,f,c
 11104  0140F2  5132               	movf	(_rxMessage+6)& (0+255),w,b
 11105  0140F4  22DA               	addwfc	fsr2h,f,c
 11106  0140F6  50DF               	movf	indf2,w,c
 11107  0140F8  0101               	movlb	1	; () banked
 11108  0140FA  6F3C               	movwf	(_mySecurityKey+6)& (0+255),b
 11109                           
 11110                           ; BSR set to: 1
 11111                           ;muta_messages.c: 180: MiApp_DiscardMessage();
 11112  0140FC  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
 11113                           
 11114                           ;muta_messages.c: 181: break;
 11115  014100  D004               	goto	l13978
 11116  014102                     l13974:
 11117  014102  0101               	movlb	1	; () banked
 11118  014104  4BF9               	infsnz	do_NETWORK_REGISTER@i& (0+255),f,b
 11119  014106  2BFA               	incf	(do_NETWORK_REGISTER@i+1)& (0+255),f,b
 11120  014108  D7B3               	goto	l13956
 11121  01410A                     l13978:
 11122                           
 11123                           ;muta_messages.c: 182: }
 11124                           ;muta_messages.c: 183: }
 11125                           ;muta_messages.c: 184: }
 11126                           ;muta_messages.c: 186: if (!result)
 11127  01410A  0101               	movlb	1	; () banked
 11128  01410C  51FB               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 11129  01410E  0101               	movlb	1	; () banked
 11130  014110  A4D8               	btfss	status,2,c
 11131  014112  D008               	goto	l13982
 11132                           
 11133                           ; BSR set to: 1
 11134                           ;muta_messages.c: 187: m_failed_messages++;
 11135  014114  0E01               	movlw	1
 11136  014116  0101               	movlb	1	; () banked
 11137  014118  2742               	addwf	_m_failed_messages& (0+255),f,b
 11138  01411A  0E00               	movlw	0
 11139  01411C  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 11140  01411E  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 11141  014120  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 11142  014122  D007               	goto	l13984
 11143  014124                     l13982:
 11144                           
 11145                           ; BSR set to: 1
 11146                           ;muta_messages.c: 188: else
 11147                           ;muta_messages.c: 189: m_sent_messages++;
 11148  014124  0E01               	movlw	1
 11149  014126  0101               	movlb	1	; () banked
 11150  014128  2746               	addwf	_m_sent_messages& (0+255),f,b
 11151  01412A  0E00               	movlw	0
 11152  01412C  2347               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 11153  01412E  2348               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 11154  014130  2349               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 11155  014132                     l13984:
 11156                           
 11157                           ; BSR set to: 1
 11158                           ;muta_messages.c: 190: return result;
 11159  014132  0101               	movlb	1	; () banked
 11160  014134  51FB               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 11161                           
 11162                           ; BSR set to: 1
 11163  014136  0012               	return	
 11164  014138                     __end_of_do_NETWORK_REGISTER:
 11165                           	opt stack 0
 11166                           tblptru	equ	0xFF8
 11167                           tblptrh	equ	0xFF7
 11168                           tblptrl	equ	0xFF6
 11169                           tablat	equ	0xFF5
 11170                           prodh	equ	0xFF4
 11171                           prodl	equ	0xFF3
 11172                           intcon	equ	0xFF2
 11173                           intcon3	equ	0xFF0
 11174                           postinc0	equ	0xFEE
 11175                           plusw0	equ	0xFEB
 11176                           wreg	equ	0xFE8
 11177                           indf1	equ	0xFE7
 11178                           fsr1h	equ	0xFE2
 11179                           fsr1l	equ	0xFE1
 11180                           indf2	equ	0xFDF
 11181                           postinc2	equ	0xFDE
 11182                           postdec2	equ	0xFDD
 11183                           plusw2	equ	0xFDB
 11184                           fsr2h	equ	0xFDA
 11185                           fsr2l	equ	0xFD9
 11186                           status	equ	0xFD8
 11187                           
 11188 ;; *************** function _memcpy *****************
 11189 ;; Defined at:
 11190 ;;		line 11 in file "/opt/microchip/xc8/v1.35/sources/common/memcpy.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  d1              2   33[BANK0 ] PTR void 
 11193 ;;		 -> decode_variable@var(9), m_var(9), TxBuffer(43), 
 11194 ;;  s1              2   35[BANK0 ] PTR const void 
 11195 ;;		 -> do_PING@buffer(21), FAILEDMSG_LABEL(4), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), 
 11196 ;;		 -> POWER_LABEL(4), TEMPERATURE_LABEL(4), LIGHT_LEVEL_LABEL(4), BATTERY_VOLTAGE_LABEL(4), 
 11197 ;;		 -> m_buffer(32), myLongAddress(4), NULL(0), RxPacket.Payload(64), 
 11198 ;;		 -> RxPacket(132), 
 11199 ;;  n               2   37[BANK0 ] unsigned int 
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 11202 ;;		 -> do_PING@buffer(21), FAILEDMSG_LABEL(4), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), 
 11203 ;;		 -> POWER_LABEL(4), TEMPERATURE_LABEL(4), LIGHT_LEVEL_LABEL(4), BATTERY_VOLTAGE_LABEL(4), 
 11204 ;;		 -> m_buffer(32), myLongAddress(4), NULL(0), RxPacket.Payload(64), 
 11205 ;;		 -> RxPacket(132), 
 11206 ;;  d               2   39[BANK0 ] PTR unsigned char 
 11207 ;;		 -> decode_variable@var(9), m_var(9), TxBuffer(43), 
 11208 ;; Return value:  Size  Location     Type
 11209 ;;                  2   33[BANK0 ] PTR void 
 11210 ;; Registers used:
 11211 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11212 ;; Tracked objects:
 11213 ;;		On entry : 0/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11217 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11218 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11220 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11221 ;;Total ram usage:       10 bytes
 11222 ;; Hardware stack levels used:    1
 11223 ;; Hardware stack levels required when called:    7
 11224 ;; This function calls:
 11225 ;;		Nothing
 11226 ;; This function is called by:
 11227 ;;		_send_initial_update
 11228 ;;		_send_writables_update
 11229 ;;		_send_periodical_update
 11230 ;;		_decode_variable
 11231 ;;		_do_NETWORK_REGISTER
 11232 ;;		_do_UPDATE
 11233 ;;		_do_PING
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           	psect	text35
 11238  0165BA                     __ptext35:
 11239                           	opt stack 0
 11240  0165BA                     _memcpy:
 11241                           	opt stack 22
 11242                           
 11243                           ; BSR set to: 1
 11244                           ;incstack = 0
 11245  0165BA  C083  F089         	movff	memcpy@s1,memcpy@s
 11246  0165BE  C084  F08A         	movff	memcpy@s1+1,memcpy@s+1
 11247  0165C2  C081  F087         	movff	memcpy@d1,memcpy@d
 11248  0165C6  C082  F088         	movff	memcpy@d1+1,memcpy@d+1
 11249  0165CA  D01C               	goto	l12142
 11250  0165CC                     l12136:
 11251  0165CC  C089  FFF6         	movff	memcpy@s,tblptrl
 11252  0165D0  C08A  FFF7         	movff	memcpy@s+1,tblptrh
 11253  0165D4  0E00               	movlw	low (__mediumconst shr (0+16))
 11254  0165D6  6EF8               	movwf	tblptru,c
 11255  0165D8  C087  FFD9         	movff	memcpy@d,fsr2l
 11256  0165DC  C088  FFDA         	movff	memcpy@d+1,fsr2h
 11257  0165E0  0E0E               	movlw	(high __ramtop+-1)
 11258  0165E2  64F7               	cpfsgt	tblptrh,c
 11259  0165E4  D003               	bra	u13937
 11260  0165E6  0008               	tblrd		*
 11261  0165E8  50F5               	movf	tablat,w,c
 11262  0165EA  D005               	bra	u13930
 11263  0165EC                     u13937:
 11264  0165EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 11265  0165F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 11266  0165F4  50EF               	movf	indf0,w,c
 11267  0165F6                     u13930:
 11268  0165F6  6EDF               	movwf	indf2,c
 11269  0165F8  0100               	movlb	0	; () banked
 11270  0165FA  4B89               	infsnz	memcpy@s& (0+255),f,b
 11271  0165FC  2B8A               	incf	(memcpy@s+1)& (0+255),f,b
 11272                           
 11273                           ; BSR set to: 0
 11274  0165FE  0100               	movlb	0	; () banked
 11275  016600  4B87               	infsnz	memcpy@d& (0+255),f,b
 11276  016602  2B88               	incf	(memcpy@d+1)& (0+255),f,b
 11277  016604                     l12142:
 11278  016604  0100               	movlb	0	; () banked
 11279  016606  0785               	decf	memcpy@n& (0+255),f,b
 11280  016608  A0D8               	btfss	status,0,c
 11281  01660A  0786               	decf	(memcpy@n+1)& (0+255),f,b
 11282  01660C  0100               	movlb	0	; () banked
 11283  01660E  2985               	incf	memcpy@n& (0+255),w,b
 11284  016610  E1DD               	bnz	l12136
 11285  016612  0100               	movlb	0	; () banked
 11286  016614  2986               	incf	(memcpy@n+1)& (0+255),w,b
 11287  016616  B4D8               	btfsc	status,2,c
 11288  016618  0012               	return	
 11289  01661A  D7D8               	goto	l12136
 11290  01661C                     __end_of_memcpy:
 11291                           	opt stack 0
 11292                           tblptru	equ	0xFF8
 11293                           tblptrh	equ	0xFF7
 11294                           tblptrl	equ	0xFF6
 11295                           tablat	equ	0xFF5
 11296                           prodh	equ	0xFF4
 11297                           prodl	equ	0xFF3
 11298                           intcon	equ	0xFF2
 11299                           intcon3	equ	0xFF0
 11300                           indf0	equ	0xFEF
 11301                           postinc0	equ	0xFEE
 11302                           plusw0	equ	0xFEB
 11303                           fsr0h	equ	0xFEA
 11304                           fsr0l	equ	0xFE9
 11305                           wreg	equ	0xFE8
 11306                           indf1	equ	0xFE7
 11307                           fsr1h	equ	0xFE2
 11308                           fsr1l	equ	0xFE1
 11309                           indf2	equ	0xFDF
 11310                           postinc2	equ	0xFDE
 11311                           postdec2	equ	0xFDD
 11312                           plusw2	equ	0xFDB
 11313                           fsr2h	equ	0xFDA
 11314                           fsr2l	equ	0xFD9
 11315                           status	equ	0xFD8
 11316                           
 11317 ;; *************** function _adapt_power_level *****************
 11318 ;; Defined at:
 11319 ;;		line 252 in file "../../muta/muta_messages.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;  power           1    wreg     unsigned char 
 11322 ;;  minimal_rssi    1   40[BANK1 ] unsigned char 
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;  power           1    0[COMRAM] unsigned char 
 11325 ;;  m_power         1   21[BANK2 ] unsigned char 
 11326 ;;  last_good_po    1   20[BANK2 ] unsigned char 
 11327 ;;  rssi            1   19[BANK2 ] unsigned char 
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  1    wreg      unsigned char 
 11330 ;; Registers used:
 11331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11337 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11338 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11339 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11340 ;;      Totals:         0       0       2       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11341 ;;Total ram usage:        5 bytes
 11342 ;; Hardware stack levels used:    1
 11343 ;; Hardware stack levels required when called:   16
 11344 ;; This function calls:
 11345 ;;		_MiMAC_SetPower
 11346 ;;		_do_POWER_TEST
 11347 ;; This function is called by:
 11348 ;;		_main
 11349 ;; This function uses a non-reentrant model
 11350 ;;
 11351                           
 11352                           	psect	text36
 11353  0164F4                     __ptext36:
 11354                           	opt stack 0
 11355  0164F4                     _adapt_power_level:
 11356                           	opt stack 14
 11357                           
 11358                           ;muta_messages.c: 254: uint8_t m_power = 0x00;
 11359                           
 11360                           ; BSR set to: 0
 11361                           ;incstack = 0
 11362  0164F4  0E00               	movlw	0
 11363  0164F6  0102               	movlb	2	; () banked
 11364  0164F8  6FF5               	movwf	adapt_power_level@m_power& (0+255),b
 11365                           
 11366                           ; BSR set to: 2
 11367                           ;muta_messages.c: 255: uint8_t last_good_power = m_power;
 11368  0164FA  C2F5  F2F4         	movff	adapt_power_level@m_power,adapt_power_level@last_good_power
 11369  0164FE                     l13992:
 11370                           
 11371                           ; BSR set to: 2
 11372                           ;muta_messages.c: 258: {
 11373                           ;muta_messages.c: 259: MiMAC_SetPower(m_power);
 11374  0164FE  0102               	movlb	2	; () banked
 11375  016500  51F5               	movf	adapt_power_level@m_power& (0+255),w,b
 11376  016502  EC5A  F0B4         	call	_MiMAC_SetPower
 11377                           
 11378                           ;muta_messages.c: 260: _delay((unsigned long)((20)*(8000000/4000.0)));
 11379  016506  0E34               	movlw	52
 11380  016508  0101               	movlb	1	; () banked
 11381  01650A  6FFC               	movwf	??_adapt_power_level& (0+255),b
 11382  01650C  0EF2               	movlw	242
 11383  01650E                     u17647:
 11384  01650E  2EE8               	decfsz	wreg,f,c
 11385  016510  D7FE               	goto	u17647
 11386  016512  2FFC               	decfsz	??_adapt_power_level& (0+255),f,b
 11387  016514  D7FC               	goto	u17647
 11388                           
 11389                           ;muta_messages.c: 261: rssi = do_POWER_TEST(m_power);
 11390  016516  0102               	movlb	2	; () banked
 11391  016518  51F5               	movf	adapt_power_level@m_power& (0+255),w,b
 11392  01651A  EC60  F0A1         	call	_do_POWER_TEST
 11393  01651E  0102               	movlb	2	; () banked
 11394  016520  6FF3               	movwf	adapt_power_level@rssi& (0+255),b
 11395                           
 11396                           ; BSR set to: 2
 11397                           ;muta_messages.c: 262: if (rssi < minimal_rssi)
 11398  016522  0101               	movlb	1	; () banked
 11399  016524  51FB               	movf	adapt_power_level@minimal_rssi& (0+255),w,b
 11400  016526  0102               	movlb	2	; () banked
 11401  016528  5DF3               	subwf	adapt_power_level@rssi& (0+255),w,b
 11402  01652A  A0D8               	btfss	status,0,c
 11403  01652C  D00C               	goto	l1350
 11404                           
 11405                           ; BSR set to: 2
 11406                           ;muta_messages.c: 266: else
 11407                           ;muta_messages.c: 267: {
 11408                           ;muta_messages.c: 268: last_good_power = m_power;
 11409                           
 11410                           ; BSR set to: 2
 11411                           ;muta_messages.c: 265: }
 11412                           
 11413                           ; BSR set to: 2
 11414                           ;muta_messages.c: 263: {
 11415                           ;muta_messages.c: 264: break;
 11416  01652E  C2F5  F2F4         	movff	adapt_power_level@m_power,adapt_power_level@last_good_power
 11417                           
 11418                           ; BSR set to: 2
 11419                           ;muta_messages.c: 269: if (m_power == 0x07)
 11420  016532  0E07               	movlw	7
 11421  016534  0102               	movlb	2	; () banked
 11422  016536  19F5               	xorwf	adapt_power_level@m_power& (0+255),w,b
 11423  016538  B4D8               	btfsc	status,2,c
 11424  01653A  D005               	goto	l1350
 11425                           
 11426                           ; BSR set to: 2
 11427                           ;muta_messages.c: 273: else
 11428                           ;muta_messages.c: 274: {
 11429                           ;muta_messages.c: 275: m_power = m_power + 1;
 11430                           
 11431                           ; BSR set to: 2
 11432                           
 11433                           ; BSR set to: 2
 11434                           ;muta_messages.c: 272: }
 11435                           
 11436                           ; BSR set to: 2
 11437                           ;muta_messages.c: 270: {
 11438                           ;muta_messages.c: 271: break;
 11439  01653C  0102               	movlb	2	; () banked
 11440  01653E  29F5               	incf	adapt_power_level@m_power& (0+255),w,b
 11441  016540  0102               	movlb	2	; () banked
 11442  016542  6FF5               	movwf	adapt_power_level@m_power& (0+255),b
 11443                           
 11444                           ; BSR set to: 2
 11445                           
 11446                           ; BSR set to: 2
 11447                           
 11448                           ; BSR set to: 2
 11449  016544  D7DC               	goto	l13992
 11450  016546                     l1350:
 11451                           
 11452                           ; BSR set to: 2
 11453                           ;muta_messages.c: 276: }
 11454                           ;muta_messages.c: 277: }
 11455                           ;muta_messages.c: 278: }
 11456                           ;muta_messages.c: 279: m_power = last_good_power;
 11457  016546  C2F4  F2F5         	movff	adapt_power_level@last_good_power,adapt_power_level@m_power
 11458                           
 11459                           ; BSR set to: 2
 11460                           ;muta_messages.c: 280: MiMAC_SetPower(m_power);
 11461  01654A  0102               	movlb	2	; () banked
 11462  01654C  51F5               	movf	adapt_power_level@m_power& (0+255),w,b
 11463  01654E  EC5A  F0B4         	call	_MiMAC_SetPower
 11464                           
 11465                           ;muta_messages.c: 281: return m_power;
 11466  016552  0102               	movlb	2	; () banked
 11467  016554  51F5               	movf	adapt_power_level@m_power& (0+255),w,b
 11468  016556  0012               	return	
 11469  016558                     __end_of_adapt_power_level:
 11470                           	opt stack 0
 11471                           tblptru	equ	0xFF8
 11472                           tblptrh	equ	0xFF7
 11473                           tblptrl	equ	0xFF6
 11474                           tablat	equ	0xFF5
 11475                           prodh	equ	0xFF4
 11476                           prodl	equ	0xFF3
 11477                           intcon	equ	0xFF2
 11478                           intcon3	equ	0xFF0
 11479                           indf0	equ	0xFEF
 11480                           postinc0	equ	0xFEE
 11481                           plusw0	equ	0xFEB
 11482                           fsr0h	equ	0xFEA
 11483                           fsr0l	equ	0xFE9
 11484                           wreg	equ	0xFE8
 11485                           indf1	equ	0xFE7
 11486                           fsr1h	equ	0xFE2
 11487                           fsr1l	equ	0xFE1
 11488                           indf2	equ	0xFDF
 11489                           postinc2	equ	0xFDE
 11490                           postdec2	equ	0xFDD
 11491                           plusw2	equ	0xFDB
 11492                           fsr2h	equ	0xFDA
 11493                           fsr2l	equ	0xFD9
 11494                           status	equ	0xFD8
 11495                           
 11496 ;; *************** function _do_POWER_TEST *****************
 11497 ;; Defined at:
 11498 ;;		line 194 in file "../../muta/muta_messages.c"
 11499 ;; Parameters:    Size  Location     Type
 11500 ;;  power_lvl       1    wreg     unsigned char 
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;  power_lvl       1   34[BANK1 ] unsigned char 
 11503 ;;  i               2   35[BANK1 ] unsigned int 
 11504 ;;  rssi            1   37[BANK1 ] unsigned char 
 11505 ;;  shortaddress    2   38[BANK1 ] unsigned char [2]
 11506 ;;  result          1   33[BANK1 ] unsigned char 
 11507 ;; Return value:  Size  Location     Type
 11508 ;;                  1    wreg      unsigned char 
 11509 ;; Registers used:
 11510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11511 ;; Tracked objects:
 11512 ;;		On entry : 0/0
 11513 ;;		On exit  : 0/0
 11514 ;;		Unchanged: 0/0
 11515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11517 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11518 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11519 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11520 ;;Total ram usage:        8 bytes
 11521 ;; Hardware stack levels used:    1
 11522 ;; Hardware stack levels required when called:   15
 11523 ;; This function calls:
 11524 ;;		_MiApp_DiscardMessage
 11525 ;;		_MiApp_MessageAvailable
 11526 ;;		_MiApp_UnicastAddress
 11527 ;; This function is called by:
 11528 ;;		_adapt_power_level
 11529 ;; This function uses a non-reentrant model
 11530 ;;
 11531                           
 11532                           	psect	text37
 11533  0142C0                     __ptext37:
 11534                           	opt stack 0
 11535  0142C0                     _do_POWER_TEST:
 11536                           	opt stack 14
 11537                           
 11538                           ; BSR set to: 2
 11539                           ;incstack = 0
 11540                           ;do_POWER_TEST@power_lvl stored from wreg
 11541  0142C0  0101               	movlb	1	; () banked
 11542  0142C2  6FF5               	movwf	do_POWER_TEST@power_lvl& (0+255),b
 11543                           
 11544                           ;muta_messages.c: 196: uint8_t shortaddress[2];
 11545                           ;muta_messages.c: 197: {TxData = 11;};
 11546  0142C4  0E0B               	movlw	11
 11547  0142C6  0100               	movlb	0	; () banked
 11548  0142C8  6FD8               	movwf	_TxData& (0+255),b
 11549                           
 11550                           ; BSR set to: 0
 11551                           ;muta_messages.c: 198: TxBuffer[TxData++] = 01;
 11552  0142CA  0100               	movlb	0	; () banked
 11553  0142CC  51D8               	movf	_TxData& (0+255),w,b
 11554  0142CE  0D01               	mullw	1
 11555  0142D0  0E6C               	movlw	low _TxBuffer
 11556  0142D2  24F3               	addwf	prodl,w,c
 11557  0142D4  6ED9               	movwf	fsr2l,c
 11558  0142D6  0E01               	movlw	high _TxBuffer
 11559  0142D8  20F4               	addwfc	prodh,w,c
 11560  0142DA  6EDA               	movwf	fsr2h,c
 11561  0142DC  0E01               	movlw	1
 11562  0142DE  6EDF               	movwf	indf2,c
 11563                           
 11564                           ; BSR set to: 0
 11565  0142E0  0100               	movlb	0	; () banked
 11566  0142E2  2BD8               	incf	_TxData& (0+255),f,b
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;muta_messages.c: 199: TxBuffer[TxData++] = power_lvl;
 11570  0142E4  0100               	movlb	0	; () banked
 11571  0142E6  51D8               	movf	_TxData& (0+255),w,b
 11572  0142E8  0D01               	mullw	1
 11573  0142EA  0E6C               	movlw	low _TxBuffer
 11574  0142EC  24F3               	addwf	prodl,w,c
 11575  0142EE  6ED9               	movwf	fsr2l,c
 11576  0142F0  0E01               	movlw	high _TxBuffer
 11577  0142F2  20F4               	addwfc	prodh,w,c
 11578  0142F4  6EDA               	movwf	fsr2h,c
 11579  0142F6  C1F5  FFDF         	movff	do_POWER_TEST@power_lvl,indf2
 11580                           
 11581                           ; BSR set to: 0
 11582  0142FA  0100               	movlb	0	; () banked
 11583  0142FC  2BD8               	incf	_TxData& (0+255),f,b
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;muta_messages.c: 200: if (myShortAddress.v[0] == 0x00)
 11587  0142FE  0100               	movlb	0	; () banked
 11588  014300  51DD               	movf	_myShortAddress& (0+255),w,b
 11589  014302  A4D8               	btfss	status,2,c
 11590  014304  D00D               	goto	l13118
 11591                           
 11592                           ; BSR set to: 0
 11593                           ;muta_messages.c: 201: {
 11594                           ;muta_messages.c: 202: if (myShortAddress.v[1] == 0x00)
 11595  014306  0100               	movlb	0	; () banked
 11596  014308  51DE               	movf	(_myShortAddress+1)& (0+255),w,b
 11597  01430A  A4D8               	btfss	status,2,c
 11598  01430C  D002               	goto	l13116
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;muta_messages.c: 203: {
 11602                           ;muta_messages.c: 204: return 0;
 11603  01430E  0E00               	movlw	0
 11604                           
 11605                           ; BSR set to: 0
 11606  014310  0012               	return	
 11607  014312                     l13116:
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;muta_messages.c: 205: }
 11611                           ;muta_messages.c: 206: shortaddress[0] = 0x00;
 11612  014312  0E00               	movlw	0
 11613  014314  0101               	movlb	1	; () banked
 11614  014316  6FF9               	movwf	do_POWER_TEST@shortaddress& (0+255),b
 11615                           
 11616                           ;muta_messages.c: 207: shortaddress[1] = 0x00;
 11617  014318  0E00               	movlw	0
 11618  01431A  0101               	movlb	1	; () banked
 11619  01431C  6FFA               	movwf	(do_POWER_TEST@shortaddress+1)& (0+255),b
 11620                           
 11621                           ;muta_messages.c: 208: }
 11622  01431E  D005               	goto	l13122
 11623  014320                     l13118:
 11624                           
 11625                           ;muta_messages.c: 209: else
 11626                           ;muta_messages.c: 210: {
 11627                           ;muta_messages.c: 211: shortaddress[0] = 0x00;
 11628  014320  0E00               	movlw	0
 11629  014322  0101               	movlb	1	; () banked
 11630  014324  6FF9               	movwf	do_POWER_TEST@shortaddress& (0+255),b
 11631                           
 11632                           ; BSR set to: 1
 11633                           ;muta_messages.c: 212: shortaddress[1] = myShortAddress.v[1];
 11634  014326  C0DE  F1FA         	movff	_myShortAddress+1,do_POWER_TEST@shortaddress+1
 11635  01432A                     l13122:
 11636                           
 11637                           ; BSR set to: 1
 11638                           ;muta_messages.c: 213: }
 11639                           ;muta_messages.c: 214: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 1);
 11640  01432A  0EF9               	movlw	low do_POWER_TEST@shortaddress
 11641  01432C  0101               	movlb	1	; () banked
 11642  01432E  6FE8               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 11643  014330  0E01               	movlw	high do_POWER_TEST@shortaddress
 11644  014332  0101               	movlb	1	; () banked
 11645  014334  6FE9               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 11646  014336  0E00               	movlw	0
 11647  014338  0101               	movlb	1	; () banked
 11648  01433A  6FEA               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 11649  01433C  0E01               	movlw	1
 11650  01433E  0101               	movlb	1	; () banked
 11651  014340  6FEB               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 11652  014342  EC22  F090         	call	_MiApp_UnicastAddress	;wreg free
 11653  014346  0101               	movlb	1	; () banked
 11654  014348  6FF4               	movwf	do_POWER_TEST@result& (0+255),b
 11655                           
 11656                           ; BSR set to: 1
 11657                           ;muta_messages.c: 215: if (!result)
 11658  01434A  0101               	movlb	1	; () banked
 11659  01434C  51F4               	movf	do_POWER_TEST@result& (0+255),w,b
 11660  01434E  0101               	movlb	1	; () banked
 11661  014350  A4D8               	btfss	status,2,c
 11662  014352  D009               	goto	l13134
 11663                           
 11664                           ; BSR set to: 1
 11665                           ;muta_messages.c: 216: {
 11666                           ;muta_messages.c: 217: m_failed_messages++;
 11667  014354  0E01               	movlw	1
 11668  014356  0101               	movlb	1	; () banked
 11669  014358  2742               	addwf	_m_failed_messages& (0+255),f,b
 11670  01435A  0E00               	movlw	0
 11671  01435C  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 11672  01435E  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 11673  014360  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 11674                           
 11675                           ; BSR set to: 1
 11676                           ;muta_messages.c: 218: return 0;
 11677  014362  0E00               	movlw	0
 11678                           
 11679                           ; BSR set to: 1
 11680                           ;muta_messages.c: 219: }
 11681                           
 11682                           ; BSR set to: 1
 11683  014364  0012               	return	
 11684  014366                     l13134:
 11685                           
 11686                           ; BSR set to: 1
 11687                           ;muta_messages.c: 220: else
 11688                           ;muta_messages.c: 221: {
 11689                           ;muta_messages.c: 222: unsigned int i;
 11690                           ;muta_messages.c: 223: uint8_t rssi = 0;
 11691  014366  0E00               	movlw	0
 11692  014368  0101               	movlb	1	; () banked
 11693  01436A  6FF8               	movwf	do_POWER_TEST@rssi& (0+255),b
 11694                           
 11695                           ;muta_messages.c: 224: for (i=0; i<100; i++)
 11696  01436C  0E00               	movlw	0
 11697  01436E  0101               	movlb	1	; () banked
 11698  014370  6FF7               	movwf	(do_POWER_TEST@i+1)& (0+255),b
 11699  014372  0E00               	movlw	0
 11700  014374  6FF6               	movwf	do_POWER_TEST@i& (0+255),b
 11701  014376                     l13136:
 11702                           
 11703                           ; BSR set to: 1
 11704  014376  0101               	movlb	1	; () banked
 11705  014378  51F7               	movf	(do_POWER_TEST@i+1)& (0+255),w,b
 11706  01437A  E13C               	bnz	l13160
 11707  01437C  0E64               	movlw	100
 11708  01437E  0101               	movlb	1	; () banked
 11709  014380  5DF6               	subwf	do_POWER_TEST@i& (0+255),w,b
 11710  014382  B0D8               	btfsc	status,0,c
 11711  014384  D037               	goto	l13160
 11712                           
 11713                           ; BSR set to: 1
 11714                           ;muta_messages.c: 225: {
 11715                           ;muta_messages.c: 226: _delay((unsigned long)((10)*(8000000/4000.0)));
 11716                           
 11717                           ; BSR set to: 1
 11718                           
 11719                           ; BSR set to: 1
 11720  014386  0E1A               	movlw	26
 11721  014388  0100               	movlb	0	; () banked
 11722  01438A  6FD0               	movwf	??_do_POWER_TEST& (0+255),b
 11723  01438C  0EF8               	movlw	248
 11724  01438E                     u17657:
 11725  01438E  2EE8               	decfsz	wreg,f,c
 11726  014390  D7FE               	goto	u17657
 11727  014392  2FD0               	decfsz	??_do_POWER_TEST& (0+255),f,b
 11728  014394  D7FC               	goto	u17657
 11729  014396  D000               	nop2	
 11730                           
 11731                           ;muta_messages.c: 227: if(MiApp_MessageAvailable())
 11732  014398  EC85  F0B5         	call	_MiApp_MessageAvailable	;wreg free
 11733  01439C  0900               	iorlw	0
 11734  01439E  B4D8               	btfsc	status,2,c
 11735  0143A0  D025               	goto	l13156
 11736                           
 11737                           ;muta_messages.c: 228: {
 11738                           ;muta_messages.c: 230: last_rssi = rxMessage.PacketRSSI;
 11739  0143A2  C134  F167         	movff	_rxMessage+8,_last_rssi
 11740                           
 11741                           ;muta_messages.c: 231: if (rxMessage.Payload[0] != 01 || rxMessage.Payload[1] != power_l
      +                          vl)
 11742  0143A6  C131  FFD9         	movff	_rxMessage+5,fsr2l
 11743  0143AA  C132  FFDA         	movff	_rxMessage+6,fsr2h
 11744  0143AE  04DE               	decf	postinc2,w,c
 11745  0143B0  A4D8               	btfss	status,2,c
 11746  0143B2  D00C               	goto	l13150
 11747  0143B4  0101               	movlb	1	; () banked
 11748  0143B6  EE20 F001          	lfsr	2,1
 11749  0143BA  5131               	movf	(_rxMessage+5)& (0+255),w,b
 11750  0143BC  26D9               	addwf	fsr2l,f,c
 11751  0143BE  5132               	movf	(_rxMessage+6)& (0+255),w,b
 11752  0143C0  22DA               	addwfc	fsr2h,f,c
 11753  0143C2  0101               	movlb	1	; () banked
 11754  0143C4  51F5               	movf	do_POWER_TEST@power_lvl& (0+255),w,b
 11755  0143C6  18DE               	xorwf	postinc2,w,c
 11756  0143C8  B4D8               	btfsc	status,2,c
 11757  0143CA  D003               	goto	l13152
 11758  0143CC                     l13150:
 11759                           
 11760                           ;muta_messages.c: 232: {
 11761                           ;muta_messages.c: 233: MiApp_DiscardMessage();
 11762  0143CC  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
 11763                           
 11764                           ;muta_messages.c: 234: }
 11765  0143D0  D00D               	goto	l13156
 11766  0143D2                     l13152:
 11767                           
 11768                           ;muta_messages.c: 235: else
 11769                           ;muta_messages.c: 236: {
 11770                           ;muta_messages.c: 237: rssi = (rxMessage.Payload[2]);
 11771  0143D2  0101               	movlb	1	; () banked
 11772  0143D4  EE20 F002          	lfsr	2,2
 11773  0143D8  5131               	movf	(_rxMessage+5)& (0+255),w,b
 11774  0143DA  26D9               	addwf	fsr2l,f,c
 11775  0143DC  5132               	movf	(_rxMessage+6)& (0+255),w,b
 11776  0143DE  22DA               	addwfc	fsr2h,f,c
 11777  0143E0  50DF               	movf	indf2,w,c
 11778  0143E2  0101               	movlb	1	; () banked
 11779  0143E4  6FF8               	movwf	do_POWER_TEST@rssi& (0+255),b
 11780                           
 11781                           ; BSR set to: 1
 11782                           ;muta_messages.c: 238: MiApp_DiscardMessage();
 11783  0143E6  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
 11784                           
 11785                           ;muta_messages.c: 239: break;
 11786  0143EA  D004               	goto	l13160
 11787  0143EC                     l13156:
 11788  0143EC  0101               	movlb	1	; () banked
 11789  0143EE  4BF6               	infsnz	do_POWER_TEST@i& (0+255),f,b
 11790  0143F0  2BF7               	incf	(do_POWER_TEST@i+1)& (0+255),f,b
 11791  0143F2  D7C1               	goto	l13136
 11792  0143F4                     l13160:
 11793                           
 11794                           ;muta_messages.c: 240: }
 11795                           ;muta_messages.c: 241: }
 11796                           ;muta_messages.c: 242: }
 11797                           ;muta_messages.c: 244: if (rssi == 0)
 11798  0143F4  0101               	movlb	1	; () banked
 11799  0143F6  51F8               	movf	do_POWER_TEST@rssi& (0+255),w,b
 11800  0143F8  0101               	movlb	1	; () banked
 11801  0143FA  A4D8               	btfss	status,2,c
 11802  0143FC  D008               	goto	l13164
 11803                           
 11804                           ; BSR set to: 1
 11805                           ;muta_messages.c: 245: m_failed_messages++;
 11806  0143FE  0E01               	movlw	1
 11807  014400  0101               	movlb	1	; () banked
 11808  014402  2742               	addwf	_m_failed_messages& (0+255),f,b
 11809  014404  0E00               	movlw	0
 11810  014406  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 11811  014408  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 11812  01440A  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 11813  01440C  D007               	goto	l13166
 11814  01440E                     l13164:
 11815                           
 11816                           ; BSR set to: 1
 11817                           ;muta_messages.c: 246: else
 11818                           ;muta_messages.c: 247: m_sent_messages++;
 11819  01440E  0E01               	movlw	1
 11820  014410  0101               	movlb	1	; () banked
 11821  014412  2746               	addwf	_m_sent_messages& (0+255),f,b
 11822  014414  0E00               	movlw	0
 11823  014416  2347               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 11824  014418  2348               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 11825  01441A  2349               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 11826  01441C                     l13166:
 11827                           
 11828                           ; BSR set to: 1
 11829                           ;muta_messages.c: 248: return rssi;
 11830  01441C  0101               	movlb	1	; () banked
 11831  01441E  51F8               	movf	do_POWER_TEST@rssi& (0+255),w,b
 11832                           
 11833                           ; BSR set to: 1
 11834  014420  0012               	return	
 11835  014422                     __end_of_do_POWER_TEST:
 11836                           	opt stack 0
 11837                           tblptru	equ	0xFF8
 11838                           tblptrh	equ	0xFF7
 11839                           tblptrl	equ	0xFF6
 11840                           tablat	equ	0xFF5
 11841                           prodh	equ	0xFF4
 11842                           prodl	equ	0xFF3
 11843                           intcon	equ	0xFF2
 11844                           intcon3	equ	0xFF0
 11845                           indf0	equ	0xFEF
 11846                           postinc0	equ	0xFEE
 11847                           plusw0	equ	0xFEB
 11848                           fsr0h	equ	0xFEA
 11849                           fsr0l	equ	0xFE9
 11850                           wreg	equ	0xFE8
 11851                           indf1	equ	0xFE7
 11852                           fsr1h	equ	0xFE2
 11853                           fsr1l	equ	0xFE1
 11854                           indf2	equ	0xFDF
 11855                           postinc2	equ	0xFDE
 11856                           postdec2	equ	0xFDD
 11857                           plusw2	equ	0xFDB
 11858                           fsr2h	equ	0xFDA
 11859                           fsr2l	equ	0xFD9
 11860                           status	equ	0xFD8
 11861                           
 11862 ;; *************** function _MiMAC_SetPower *****************
 11863 ;; Defined at:
 11864 ;;		line 544 in file "src/miwi/drv_mrf_miwi_89xa.c"
 11865 ;; Parameters:    Size  Location     Type
 11866 ;;  outputPower     1    wreg     unsigned char 
 11867 ;; Auto vars:     Size  Location     Type
 11868 ;;  outputPower     1   41[BANK0 ] unsigned char 
 11869 ;; Return value:  Size  Location     Type
 11870 ;;                  1    wreg      unsigned char 
 11871 ;; Registers used:
 11872 ;;		wreg, status,2, status,0, cstack
 11873 ;; Tracked objects:
 11874 ;;		On entry : 0/0
 11875 ;;		On exit  : 0/0
 11876 ;;		Unchanged: 0/0
 11877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11881 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11882 ;;Total ram usage:        3 bytes
 11883 ;; Hardware stack levels used:    1
 11884 ;; Hardware stack levels required when called:    9
 11885 ;; This function calls:
 11886 ;;		_RegisterSet
 11887 ;; This function is called by:
 11888 ;;		_main
 11889 ;;		_update_variable
 11890 ;;		_adapt_power_level
 11891 ;; This function uses a non-reentrant model
 11892 ;;
 11893                           
 11894                           	psect	text38
 11895  0168B4                     __ptext38:
 11896                           	opt stack 0
 11897  0168B4                     _MiMAC_SetPower:
 11898                           	opt stack 19
 11899                           
 11900                           ;incstack = 0
 11901                           ;MiMAC_SetPower@outputPower stored from wreg
 11902  0168B4  0100               	movlb	0	; () banked
 11903  0168B6  6F89               	movwf	MiMAC_SetPower@outputPower& (0+255),b
 11904                           
 11905                           ;drv_mrf_miwi_89xa.c: 546: if( outputPower > 0x07 )
 11906  0168B8  0E07               	movlw	7
 11907  0168BA  0100               	movlb	0	; () banked
 11908  0168BC  6589               	cpfsgt	MiMAC_SetPower@outputPower& (0+255),b
 11909  0168BE  D001               	goto	l12216
 11910  0168C0  0012               	return	
 11911  0168C2                     l12216:
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;drv_mrf_miwi_89xa.c: 549: }
 11915                           ;drv_mrf_miwi_89xa.c: 550: RegisterSet(0x3400 | ((0xF0 | (0x00<<1)) & 0xF0) | (outputPow
      +                          er<<1));
 11916  0168C2  0100               	movlb	0	; () banked
 11917  0168C4  5189               	movf	MiMAC_SetPower@outputPower& (0+255),w,b
 11918  0168C6  0100               	movlb	0	; () banked
 11919  0168C8  6F87               	movwf	??_MiMAC_SetPower& (0+255),b
 11920  0168CA  6B88               	clrf	(??_MiMAC_SetPower+1)& (0+255),b
 11921  0168CC  90D8               	bcf	status,0,c
 11922  0168CE  0100               	movlb	0	; () banked
 11923  0168D0  3787               	rlcf	??_MiMAC_SetPower& (0+255),f,b
 11924  0168D2  3788               	rlcf	(??_MiMAC_SetPower+1)& (0+255),f,b
 11925  0168D4  0EF0               	movlw	240
 11926  0168D6  0100               	movlb	0	; () banked
 11927  0168D8  1187               	iorwf	??_MiMAC_SetPower& (0+255),w,b
 11928  0168DA  0100               	movlb	0	; () banked
 11929  0168DC  6F83               	movwf	RegisterSet@setting& (0+255),b
 11930  0168DE  0E34               	movlw	52
 11931  0168E0  0100               	movlb	0	; () banked
 11932  0168E2  1188               	iorwf	(??_MiMAC_SetPower+1)& (0+255),w,b
 11933  0168E4  0100               	movlb	0	; () banked
 11934  0168E6  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 11935  0168E8  ECB6  F0B3         	call	_RegisterSet	;wreg free
 11936  0168EC  0012               	return	
 11937  0168EE                     __end_of_MiMAC_SetPower:
 11938                           	opt stack 0
 11939                           tblptru	equ	0xFF8
 11940                           tblptrh	equ	0xFF7
 11941                           tblptrl	equ	0xFF6
 11942                           tablat	equ	0xFF5
 11943                           prodh	equ	0xFF4
 11944                           prodl	equ	0xFF3
 11945                           intcon	equ	0xFF2
 11946                           intcon3	equ	0xFF0
 11947                           indf0	equ	0xFEF
 11948                           postinc0	equ	0xFEE
 11949                           plusw0	equ	0xFEB
 11950                           fsr0h	equ	0xFEA
 11951                           fsr0l	equ	0xFE9
 11952                           wreg	equ	0xFE8
 11953                           indf1	equ	0xFE7
 11954                           fsr1h	equ	0xFE2
 11955                           fsr1l	equ	0xFE1
 11956                           indf2	equ	0xFDF
 11957                           postinc2	equ	0xFDE
 11958                           postdec2	equ	0xFDD
 11959                           plusw2	equ	0xFDB
 11960                           fsr2h	equ	0xFDA
 11961                           fsr2l	equ	0xFD9
 11962                           status	equ	0xFD8
 11963                           
 11964 ;; *************** function _SYSTEM_Initialize *****************
 11965 ;; Defined at:
 11966 ;;		line 58 in file "src/18F27J53/system.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;		None
 11969 ;; Auto vars:     Size  Location     Type
 11970 ;;		None
 11971 ;; Return value:  Size  Location     Type
 11972 ;;		None               void
 11973 ;; Registers used:
 11974 ;;		wreg, status,2, cstack
 11975 ;; Tracked objects:
 11976 ;;		On entry : 0/0
 11977 ;;		On exit  : 0/0
 11978 ;;		Unchanged: 0/0
 11979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11984 ;;Total ram usage:        0 bytes
 11985 ;; Hardware stack levels used:    1
 11986 ;; Hardware stack levels required when called:    8
 11987 ;; This function calls:
 11988 ;;		_RtccWrOn
 11989 ;; This function is called by:
 11990 ;;		_main
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994                           	psect	text39
 11995  014F70                     __ptext39:
 11996                           	opt stack 0
 11997  014F70                     _SYSTEM_Initialize:
 11998                           	opt stack 22
 11999                           
 12000                           ;system.c: 61: PLLEN = 0;
 12001                           
 12002                           ;incstack = 0
 12003  014F70  9C9B               	bcf	3995,6,c	;volatile
 12004                           
 12005                           ;system.c: 64: OSCCONbits.IRCF = 0b111;
 12006  014F72  88D3               	bsf	4051,4,c	;volatile
 12007  014F74  8AD3               	bsf	4051,5,c	;volatile
 12008  014F76  8CD3               	bsf	4051,6,c	;volatile
 12009                           
 12010                           ;system.c: 67: ANCON0 = 0xFF;
 12011  014F78  010F               	movlb	15	; () banked
 12012  014F7A  6948               	setf	72,b	;volatile
 12013                           
 12014                           ; BSR set to: 15
 12015                           ;system.c: 68: ANCON1 = 0x1F;
 12016  014F7C  0E1F               	movlw	31
 12017  014F7E  010F               	movlb	15	; () banked
 12018  014F80  6F49               	movwf	73,b	;volatile
 12019                           
 12020                           ;system.c: 71: TRISA = 0;
 12021  014F82  0E00               	movlw	0
 12022  014F84  6E92               	movwf	3986,c	;volatile
 12023                           
 12024                           ;system.c: 72: TRISB = 0;
 12025  014F86  0E00               	movlw	0
 12026  014F88  6E93               	movwf	3987,c	;volatile
 12027                           
 12028                           ;system.c: 73: TRISC = 0;
 12029  014F8A  0E00               	movlw	0
 12030  014F8C  6E94               	movwf	3988,c	;volatile
 12031                           
 12032                           ; BSR set to: 15
 12033                           ;system.c: 75: LATCbits.LATC0 = 1;
 12034  014F8E  808B               	bsf	3979,0,c	;volatile
 12035                           
 12036                           ; BSR set to: 15
 12037                           ;system.c: 77: UPUEN = 0;
 12038  014F90  010F               	movlb	15	; () banked
 12039  014F92  9939               	bcf	57,4,b	;volatile
 12040                           
 12041                           ; BSR set to: 15
 12042                           ;system.c: 78: UCONbits.USBEN = 0;
 12043  014F94  9665               	bcf	3941,3,c	;volatile
 12044                           
 12045                           ; BSR set to: 15
 12046                           ;system.c: 80: RCONbits.IPEN = 1;
 12047  014F96  8ED0               	bsf	4048,7,c	;volatile
 12048                           
 12049                           ;system.c: 83: ALRMCFGbits.AMASK = 0b0011;
 12050  014F98  010F               	movlb	15	; () banked
 12051  014F9A  5147               	movf	71,w,b	;volatile
 12052  014F9C  0BC3               	andlw	-61
 12053  014F9E  090C               	iorlw	12
 12054  014FA0  6F47               	movwf	71,b	;volatile
 12055                           
 12056                           ; BSR set to: 15
 12057                           ;system.c: 85: ALRMCFGbits.CHIME = 1;
 12058  014FA2  010F               	movlb	15	; () banked
 12059  014FA4  8D47               	bsf	71,6,b	;volatile
 12060                           
 12061                           ; BSR set to: 15
 12062                           ;system.c: 86: ALRMCFGbits.ALRMEN = 1;
 12063  014FA6  010F               	movlb	15	; () banked
 12064  014FA8  8F47               	bsf	71,7,b	;volatile
 12065                           
 12066                           ;system.c: 91: RTCCFG = 0x0;
 12067  014FAA  0E00               	movlw	0
 12068  014FAC  010F               	movlb	15	; () banked
 12069  014FAE  6F3F               	movwf	63,b	;volatile
 12070                           
 12071                           ;system.c: 92: RTCCAL = 0x00;
 12072  014FB0  0E00               	movlw	0
 12073  014FB2  010F               	movlb	15	; () banked
 12074  014FB4  6F3E               	movwf	62,b	;volatile
 12075                           
 12076                           ; BSR set to: 15
 12077                           ;system.c: 93: if((RTCCFGbits.RTCEN))
 12078  014FB6  010F               	movlb	15	; () banked
 12079  014FB8  AF3F               	btfss	63,7,b	;volatile
 12080  014FBA  D006               	goto	l13402
 12081                           
 12082                           ; BSR set to: 15
 12083                           ;system.c: 94: {
 12084                           ;system.c: 95: if(!(RTCCFGbits.RTCWREN))
 12085  014FBC  010F               	movlb	15	; () banked
 12086  014FBE  AB3F               	btfss	63,5,b	;volatile
 12087                           
 12088                           ; BSR set to: 15
 12089                           ;system.c: 96: {
 12090                           ;system.c: 97: RtccWrOn();
 12091  014FC0  EC7C  F0B5         	call	_RtccWrOn	;wreg free
 12092                           
 12093                           ;system.c: 98: }
 12094                           ;system.c: 99: (RTCCFGbits.RTCEN=0);
 12095  014FC4  010F               	movlb	15	; () banked
 12096  014FC6  9F3F               	bcf	63,7,b	;volatile
 12097  014FC8                     l13402:
 12098                           
 12099                           ; BSR set to: 15
 12100                           ;system.c: 100: }
 12101                           ;system.c: 101: (RTCCFGbits.RTCWREN = 0);
 12102  014FC8  010F               	movlb	15	; () banked
 12103  014FCA  9B3F               	bcf	63,5,b	;volatile
 12104                           
 12105                           ;system.c: 102: RtccWrOn();
 12106  014FCC  EC7C  F0B5         	call	_RtccWrOn	;wreg free
 12107                           
 12108                           ;system.c: 103: (RTCCFGbits.RTCEN=1);
 12109  014FD0  010F               	movlb	15	; () banked
 12110  014FD2  8F3F               	bsf	63,7,b	;volatile
 12111                           
 12112                           ; BSR set to: 15
 12113                           ;system.c: 104: (ALRMCFGbits.ALRMEN=1);
 12114  014FD4  010F               	movlb	15	; () banked
 12115  014FD6  8F47               	bsf	71,7,b	;volatile
 12116                           
 12117                           ; BSR set to: 15
 12118                           ;system.c: 105: RTCCFGbits.RTCPTR0 = 0;
 12119  014FD8  010F               	movlb	15	; () banked
 12120  014FDA  913F               	bcf	63,0,b	;volatile
 12121                           
 12122                           ; BSR set to: 15
 12123                           ;system.c: 106: RTCCFGbits.RTCPTR1 = 0;
 12124  014FDC  010F               	movlb	15	; () banked
 12125  014FDE  933F               	bcf	63,1,b	;volatile
 12126                           
 12127                           ; BSR set to: 15
 12128                           ;system.c: 107: RTCVALHbits.RTCVALH = 0x00;
 12129  014FE0  0E00               	movlw	0
 12130  014FE2  010F               	movlb	15	; () banked
 12131  014FE4  6F3B               	movwf	59,b	;volatile
 12132                           
 12133                           ; BSR set to: 15
 12134                           ;system.c: 108: RTCVALLbits.RTCVALL = 0x00;
 12135  014FE6  0E00               	movlw	0
 12136  014FE8  010F               	movlb	15	; () banked
 12137  014FEA  6F3A               	movwf	58,b	;volatile
 12138                           
 12139                           ; BSR set to: 15
 12140                           ;system.c: 109: (RTCCFGbits.RTCWREN = 0);
 12141  014FEC  010F               	movlb	15	; () banked
 12142  014FEE  9B3F               	bcf	63,5,b	;volatile
 12143                           
 12144                           ; BSR set to: 15
 12145                           ;system.c: 112: IPR3bits.RTCCIP = 0;
 12146  014FF0  90A5               	bcf	4005,0,c	;volatile
 12147                           
 12148                           ; BSR set to: 15
 12149                           ;system.c: 113: PIR3bits.RTCCIF = 0;
 12150  014FF2  90A4               	bcf	4004,0,c	;volatile
 12151                           
 12152                           ; BSR set to: 15
 12153                           ;system.c: 114: PIE3bits.RTCCIE = 1;
 12154  014FF4  80A3               	bsf	4003,0,c	;volatile
 12155                           
 12156                           ; BSR set to: 15
 12157                           ;system.c: 119: TRISBbits.TRISB4 = 1;
 12158  014FF6  8893               	bsf	3987,4,c	;volatile
 12159                           
 12160                           ; BSR set to: 15
 12161                           ;system.c: 120: TRISBbits.TRISB5 = 1;
 12162  014FF8  8A93               	bsf	3987,5,c	;volatile
 12163                           
 12164                           ; BSR set to: 15
 12165                           ;system.c: 122: SSP1ADD = 19;
 12166  014FFA  0E13               	movlw	19
 12167  014FFC  6EC8               	movwf	4040,c	;volatile
 12168                           
 12169                           ; BSR set to: 15
 12170                           ;system.c: 128: LATAbits.LATA6 = 0;
 12171  014FFE  9C89               	bcf	3977,6,c	;volatile
 12172                           
 12173                           ; BSR set to: 15
 12174                           ;system.c: 131: ADCON0bits.ADON = 0;
 12175  015000  90C2               	bcf	4034,0,c	;volatile
 12176                           
 12177                           ; BSR set to: 15
 12178                           ;system.c: 134: TRISAbits.TRISA0 = 1;
 12179  015002  8092               	bsf	3986,0,c	;volatile
 12180                           
 12181                           ; BSR set to: 15
 12182                           ;system.c: 136: ANCON0bits.PCFG0 = 0;
 12183  015004  010F               	movlb	15	; () banked
 12184  015006  9148               	bcf	72,0,b	;volatile
 12185                           
 12186                           ; BSR set to: 15
 12187                           ;system.c: 139: TRISAbits.TRISA1 = 1;
 12188  015008  8292               	bsf	3986,1,c	;volatile
 12189                           
 12190                           ; BSR set to: 15
 12191                           ;system.c: 141: ANCON0bits.PCFG1 = 0;
 12192  01500A  010F               	movlb	15	; () banked
 12193  01500C  9348               	bcf	72,1,b	;volatile
 12194                           
 12195                           ; BSR set to: 15
 12196                           ;system.c: 143: ANCON1bits.VBGEN = 0;
 12197  01500E  010F               	movlb	15	; () banked
 12198  015010  9F49               	bcf	73,7,b	;volatile
 12199                           
 12200                           ; BSR set to: 15
 12201                           ;system.c: 148: ADCON0bits.VCFG0 = 0;
 12202  015012  9CC2               	bcf	4034,6,c	;volatile
 12203                           
 12204                           ; BSR set to: 15
 12205                           ;system.c: 149: ADCON0bits.VCFG1 = 0;
 12206  015014  9EC2               	bcf	4034,7,c	;volatile
 12207                           
 12208                           ; BSR set to: 15
 12209                           ;system.c: 151: ADCON1bits.ADCS = 0b001;
 12210  015016  50C1               	movf	4033,w,c	;volatile
 12211  015018  0BF8               	andlw	-8
 12212  01501A  0901               	iorlw	1
 12213  01501C  6EC1               	movwf	4033,c	;volatile
 12214                           
 12215                           ; BSR set to: 15
 12216                           ;system.c: 153: ADCON1bits.ACQT = 0b111;
 12217  01501E  86C1               	bsf	4033,3,c	;volatile
 12218  015020  88C1               	bsf	4033,4,c	;volatile
 12219  015022  8AC1               	bsf	4033,5,c	;volatile
 12220                           
 12221                           ; BSR set to: 15
 12222                           ;system.c: 154: ADCON1bits.ADFM = 1;
 12223  015024  8EC1               	bsf	4033,7,c	;volatile
 12224                           
 12225                           ; BSR set to: 15
 12226                           ;system.c: 160: EECON2 = 0x55;
 12227  015026  0E55               	movlw	85
 12228  015028  6EA7               	movwf	4007,c	;volatile
 12229                           
 12230                           ; BSR set to: 15
 12231                           ;system.c: 161: EECON2 = 0xAA;
 12232  01502A  0EAA               	movlw	170
 12233  01502C  6EA7               	movwf	4007,c	;volatile
 12234                           
 12235                           ; BSR set to: 15
 12236                           ;system.c: 162: PPSCONbits.IOLOCK = 0;
 12237  01502E  010E               	movlb	14	; () banked
 12238  015030  91BF               	bcf	191,0,b	;volatile
 12239                           
 12240                           ; BSR set to: 14
 12241                           ;system.c: 165: RPINR1 = 13;
 12242  015032  0E0D               	movlw	13
 12243  015034  010E               	movlb	14	; () banked
 12244  015036  6FE1               	movwf	225,b	;volatile
 12245                           
 12246                           ; BSR set to: 14
 12247                           ;system.c: 166: RPINR21 = 12;
 12248  015038  0E0C               	movlw	12
 12249  01503A  010E               	movlb	14	; () banked
 12250  01503C  6FFC               	movwf	252,b	;volatile
 12251                           
 12252                           ; BSR set to: 14
 12253                           ;system.c: 167: RPINR22 = 5;
 12254  01503E  0E05               	movlw	5
 12255  015040  010E               	movlb	14	; () banked
 12256  015042  6FFD               	movwf	253,b	;volatile
 12257                           
 12258                           ; BSR set to: 14
 12259                           ;system.c: 170: RPOR4 = 10;
 12260  015044  0E0A               	movlw	10
 12261  015046  010E               	movlb	14	; () banked
 12262  015048  6FC4               	movwf	196,b	;volatile
 12263                           
 12264                           ; BSR set to: 14
 12265                           ;system.c: 171: RPOR5 = 11;
 12266  01504A  0E0B               	movlw	11
 12267  01504C  010E               	movlb	14	; () banked
 12268  01504E  6FC5               	movwf	197,b	;volatile
 12269                           
 12270                           ; BSR set to: 14
 12271                           ;system.c: 175: EECON2 = 0x55;
 12272  015050  0E55               	movlw	85
 12273  015052  6EA7               	movwf	4007,c	;volatile
 12274                           
 12275                           ; BSR set to: 14
 12276                           ;system.c: 176: EECON2 = 0xAA;
 12277  015054  0EAA               	movlw	170
 12278  015056  6EA7               	movwf	4007,c	;volatile
 12279                           
 12280                           ; BSR set to: 14
 12281                           ;system.c: 177: PPSCONbits.IOLOCK = 1;
 12282  015058  010E               	movlb	14	; () banked
 12283  01505A  81BF               	bsf	191,0,b	;volatile
 12284                           
 12285                           ; BSR set to: 14
 12286                           ;system.c: 189: LATCbits.LATC6 = 1;
 12287  01505C  8C8B               	bsf	3979,6,c	;volatile
 12288                           
 12289                           ; BSR set to: 14
 12290                           ;system.c: 190: LATBbits.LATB3 = 1;
 12291  01505E  868A               	bsf	3978,3,c	;volatile
 12292                           
 12293                           ; BSR set to: 14
 12294                           ;system.c: 192: TRISCbits.TRISC6 = 0;
 12295  015060  9C94               	bcf	3988,6,c	;volatile
 12296                           
 12297                           ; BSR set to: 14
 12298                           ;system.c: 193: TRISBbits.TRISB3 = 0;
 12299  015062  9693               	bcf	3987,3,c	;volatile
 12300                           
 12301                           ; BSR set to: 14
 12302                           ;system.c: 196: TRISBbits.TRISB0 = 1;
 12303  015064  8093               	bsf	3987,0,c	;volatile
 12304                           
 12305                           ; BSR set to: 14
 12306                           ;system.c: 197: TRISCbits.TRISC2 = 1;
 12307  015066  8494               	bsf	3988,2,c	;volatile
 12308                           
 12309                           ; BSR set to: 14
 12310                           ;system.c: 200: INTCON2bits.INTEDG1 = 1;
 12311  015068  8AF1               	bsf	intcon2,5,c	;volatile
 12312                           
 12313                           ; BSR set to: 14
 12314                           ;system.c: 203: INTCON2bits.INTEDG0 = 1;
 12315  01506A  8CF1               	bsf	intcon2,6,c	;volatile
 12316                           
 12317                           ; BSR set to: 14
 12318                           ;system.c: 205: INTCONbits.INT0IF = 0;
 12319  01506C  92F2               	bcf	intcon,1,c	;volatile
 12320                           
 12321                           ; BSR set to: 14
 12322                           ;system.c: 206: INTCONbits.INT0IE = 1;
 12323  01506E  88F2               	bsf	intcon,4,c	;volatile
 12324                           
 12325                           ; BSR set to: 14
 12326                           ;system.c: 208: INTCON3bits.INT1IF = 0;
 12327  015070  90F0               	bcf	intcon3,0,c	;volatile
 12328                           
 12329                           ; BSR set to: 14
 12330                           ;system.c: 209: INTCON3bits.INT1IP = 1;
 12331  015072  8CF0               	bsf	intcon3,6,c	;volatile
 12332                           
 12333                           ; BSR set to: 14
 12334                           ;system.c: 210: INTCON3bits.INT1IE = 1;
 12335  015074  86F0               	bsf	intcon3,3,c	;volatile
 12336                           
 12337                           ; BSR set to: 14
 12338                           ;system.c: 216: TRISCbits.TRISC1 = 1;
 12339  015076  8294               	bsf	3988,1,c	;volatile
 12340                           
 12341                           ; BSR set to: 14
 12342                           ;system.c: 217: TRISBbits.TRISB1 = 0;
 12343  015078  9293               	bcf	3987,1,c	;volatile
 12344                           
 12345                           ; BSR set to: 14
 12346                           ;system.c: 218: TRISBbits.TRISB2 = 0;
 12347  01507A  9493               	bcf	3987,2,c	;volatile
 12348                           
 12349                           ; BSR set to: 14
 12350                           ;system.c: 220: SSP2STAT = 0xC0;
 12351  01507C  0EC0               	movlw	192
 12352  01507E  6E73               	movwf	3955,c	;volatile
 12353                           
 12354                           ; BSR set to: 14
 12355                           ;system.c: 221: SSP2CON1 = 0b00101010;
 12356  015080  0E2A               	movlw	42
 12357  015082  6E72               	movwf	3954,c	;volatile
 12358                           
 12359                           ; BSR set to: 14
 12360                           ;system.c: 225: LATAbits.LATA5 = 0;
 12361  015084  9A89               	bcf	3977,5,c	;volatile
 12362                           
 12363                           ; BSR set to: 14
 12364                           ;system.c: 226: TRISAbits.TRISA5 = 1;
 12365  015086  8A92               	bsf	3986,5,c	;volatile
 12366                           
 12367                           ; BSR set to: 14
 12368                           ;system.c: 231: INTCONbits.GIEH = 1;
 12369  015088  8EF2               	bsf	intcon,7,c	;volatile
 12370                           
 12371                           ; BSR set to: 14
 12372                           ;system.c: 232: INTCONbits.GIEL = 1;
 12373  01508A  8CF2               	bsf	intcon,6,c	;volatile
 12374                           
 12375                           ; BSR set to: 14
 12376  01508C  0012               	return		;funcret
 12377  01508E                     __end_of_SYSTEM_Initialize:
 12378                           	opt stack 0
 12379                           tblptru	equ	0xFF8
 12380                           tblptrh	equ	0xFF7
 12381                           tblptrl	equ	0xFF6
 12382                           tablat	equ	0xFF5
 12383                           prodh	equ	0xFF4
 12384                           prodl	equ	0xFF3
 12385                           intcon	equ	0xFF2
 12386                           intcon2	equ	0xFF1
 12387                           intcon3	equ	0xFF0
 12388                           indf0	equ	0xFEF
 12389                           postinc0	equ	0xFEE
 12390                           plusw0	equ	0xFEB
 12391                           fsr0h	equ	0xFEA
 12392                           fsr0l	equ	0xFE9
 12393                           wreg	equ	0xFE8
 12394                           indf1	equ	0xFE7
 12395                           fsr1h	equ	0xFE2
 12396                           fsr1l	equ	0xFE1
 12397                           indf2	equ	0xFDF
 12398                           postinc2	equ	0xFDE
 12399                           postdec2	equ	0xFDD
 12400                           plusw2	equ	0xFDB
 12401                           fsr2h	equ	0xFDA
 12402                           fsr2l	equ	0xFD9
 12403                           status	equ	0xFD8
 12404                           
 12405 ;; *************** function _RtccWrOn *****************
 12406 ;; Defined at:
 12407 ;;		line 21 in file "/opt/microchip/xc8/v1.35/sources/pic18/plib/rtcc/RtccWrOn.c"
 12408 ;; Parameters:    Size  Location     Type
 12409 ;;		None
 12410 ;; Auto vars:     Size  Location     Type
 12411 ;;  data            2    0        unsigned int 
 12412 ;; Return value:  Size  Location     Type
 12413 ;;		None               void
 12414 ;; Registers used:
 12415 ;;		wreg, status,2
 12416 ;; Tracked objects:
 12417 ;;		On entry : 0/0
 12418 ;;		On exit  : 0/0
 12419 ;;		Unchanged: 0/0
 12420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12425 ;;Total ram usage:        0 bytes
 12426 ;; Hardware stack levels used:    1
 12427 ;; Hardware stack levels required when called:    7
 12428 ;; This function calls:
 12429 ;;		Nothing
 12430 ;; This function is called by:
 12431 ;;		_SYSTEM_Initialize
 12432 ;;		_update_variable
 12433 ;; This function uses a non-reentrant model
 12434 ;;
 12435                           
 12436                           	psect	text40
 12437  016AF8                     __ptext40:
 12438                           	opt stack 0
 12439  016AF8                     _RtccWrOn:
 12440                           	opt stack 21
 12441                           
 12442                           ; BSR set to: 14
 12443                           ;incstack = 0
 12444  016AF8  9CF2               	bcf	intcon,6,c	;volatile
 12445  016AFA  0E55               	movlw	85
 12446  016AFC  6EA7               	movwf	4007,c	;volatile
 12447  016AFE  0EAA               	movlw	170
 12448  016B00  6EA7               	movwf	4007,c	;volatile
 12449  016B02  010F               	movlb	15	; () banked
 12450  016B04  8B3F               	bsf	63,5,b	;volatile
 12451                           
 12452                           ; BSR set to: 15
 12453  016B06  8CF2               	bsf	intcon,6,c	;volatile
 12454                           
 12455                           ; BSR set to: 15
 12456  016B08  0012               	return		;funcret
 12457  016B0A                     __end_of_RtccWrOn:
 12458                           	opt stack 0
 12459                           tblptru	equ	0xFF8
 12460                           tblptrh	equ	0xFF7
 12461                           tblptrl	equ	0xFF6
 12462                           tablat	equ	0xFF5
 12463                           prodh	equ	0xFF4
 12464                           prodl	equ	0xFF3
 12465                           intcon	equ	0xFF2
 12466                           intcon2	equ	0xFF1
 12467                           intcon3	equ	0xFF0
 12468                           indf0	equ	0xFEF
 12469                           postinc0	equ	0xFEE
 12470                           plusw0	equ	0xFEB
 12471                           fsr0h	equ	0xFEA
 12472                           fsr0l	equ	0xFE9
 12473                           wreg	equ	0xFE8
 12474                           indf1	equ	0xFE7
 12475                           fsr1h	equ	0xFE2
 12476                           fsr1l	equ	0xFE1
 12477                           indf2	equ	0xFDF
 12478                           postinc2	equ	0xFDE
 12479                           postdec2	equ	0xFDD
 12480                           plusw2	equ	0xFDB
 12481                           fsr2h	equ	0xFDA
 12482                           fsr2l	equ	0xFD9
 12483                           status	equ	0xFD8
 12484                           
 12485 ;; *************** function _MiApp_ProtocolInit *****************
 12486 ;; Defined at:
 12487 ;;		line 3563 in file "src/miwi/miwi_mesh.c"
 12488 ;; Parameters:    Size  Location     Type
 12489 ;;  bNetworkFree    1    wreg     unsigned char 
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;  bNetworkFree    1   56[BANK0 ] unsigned char 
 12492 ;;  MIP             3   57[BANK0 ] struct .
 12493 ;;  i               1   60[BANK0 ] unsigned char 
 12494 ;; Return value:  Size  Location     Type
 12495 ;;                  1    wreg      unsigned char 
 12496 ;; Registers used:
 12497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12498 ;; Tracked objects:
 12499 ;;		On entry : 0/0
 12500 ;;		On exit  : 0/0
 12501 ;;		Unchanged: 0/0
 12502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12504 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12506 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12507 ;;Total ram usage:        6 bytes
 12508 ;; Hardware stack levels used:    1
 12509 ;; Hardware stack levels required when called:   12
 12510 ;; This function calls:
 12511 ;;		_InitSymbolTimer
 12512 ;;		_MiApp_SetChannel
 12513 ;;		_MiMAC_Init
 12514 ;;		_MiMAC_SetAltAddress
 12515 ;; This function is called by:
 12516 ;;		_main
 12517 ;; This function uses a non-reentrant model
 12518 ;;
 12519                           
 12520                           	psect	text41
 12521  014D2A                     __ptext41:
 12522                           	opt stack 0
 12523  014D2A                     _MiApp_ProtocolInit:
 12524                           	opt stack 18
 12525                           
 12526                           ; BSR set to: 15
 12527                           ;incstack = 0
 12528                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
 12529  014D2A  0100               	movlb	0	; () banked
 12530  014D2C  6F98               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
 12531                           
 12532                           ;miwi_mesh.c: 3565: MACINIT_PARAM MIP;
 12533                           ;miwi_mesh.c: 3566: uint8_t i;
 12534                           ;miwi_mesh.c: 3601: myShortAddress.Val = 0xFFFF;
 12535  014D2E  0100               	movlb	0	; () banked
 12536  014D30  69DD               	setf	_myShortAddress& (0+255),b
 12537  014D32  69DE               	setf	(_myShortAddress+1)& (0+255),b
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;miwi_mesh.c: 3602: myPANID.Val = 0x1337;
 12541  014D34  0E13               	movlw	19
 12542  014D36  0100               	movlb	0	; () banked
 12543  014D38  6FDC               	movwf	(_myPANID+1)& (0+255),b
 12544  014D3A  0E37               	movlw	55
 12545  014D3C  6FDB               	movwf	_myPANID& (0+255),b
 12546                           
 12547                           ;miwi_mesh.c: 3607: for(i = 0; i < 10; i++)
 12548  014D3E  0E00               	movlw	0
 12549  014D40  0100               	movlb	0	; () banked
 12550  014D42  6F9C               	movwf	MiApp_ProtocolInit@i& (0+255),b
 12551  014D44                     l13742:
 12552                           
 12553                           ; BSR set to: 0
 12554  014D44  0E09               	movlw	9
 12555  014D46  0100               	movlb	0	; () banked
 12556  014D48  659C               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 12557  014D4A  D001               	goto	l13746
 12558  014D4C  D012               	goto	l13752
 12559  014D4E                     l13746:
 12560                           
 12561                           ; BSR set to: 0
 12562                           ;miwi_mesh.c: 3608: {
 12563                           ;miwi_mesh.c: 3609: ConnectionTable[i].status.Val = 0;
 12564  014D4E  0100               	movlb	0	; () banked
 12565  014D50  519C               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 12566  014D52  0D09               	mullw	9
 12567  014D54  0E08               	movlw	8
 12568  014D56  26F3               	addwf	prodl,f,c
 12569  014D58  0E00               	movlw	0
 12570  014D5A  22F4               	addwfc	prodh,f,c
 12571  014D5C  0E46               	movlw	low _ConnectionTable
 12572  014D5E  24F3               	addwf	prodl,w,c
 12573  014D60  6ED9               	movwf	fsr2l,c
 12574  014D62  0E02               	movlw	high _ConnectionTable
 12575  014D64  20F4               	addwfc	prodh,w,c
 12576  014D66  6EDA               	movwf	fsr2h,c
 12577  014D68  0E00               	movlw	0
 12578  014D6A  6EDF               	movwf	indf2,c
 12579                           
 12580                           ; BSR set to: 0
 12581  014D6C  0100               	movlb	0	; () banked
 12582  014D6E  2B9C               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 12583  014D70  D7E9               	goto	l13742
 12584  014D72                     l13752:
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;miwi_mesh.c: 3610: }
 12588                           ;miwi_mesh.c: 3621: MiWiStateMachine.Val = 0;
 12589  014D72  0E00               	movlw	0
 12590  014D74  0100               	movlb	0	; () banked
 12591  014D76  6FD5               	movwf	(_MiWiStateMachine+1)& (0+255),b
 12592  014D78  0E00               	movlw	0
 12593  014D7A  6FD4               	movwf	_MiWiStateMachine& (0+255),b
 12594                           
 12595                           ;miwi_mesh.c: 3623: openSocketInfo.status.Val = 0;
 12596  014D7C  0E00               	movlw	0
 12597  014D7E  0101               	movlb	1	; () banked
 12598  014D80  6F20               	movwf	_openSocketInfo& (0+255),b
 12599                           
 12600                           ;miwi_mesh.c: 3624: MiWiCapacityInfo.Val = 0;
 12601  014D82  0E00               	movlw	0
 12602  014D84  0101               	movlb	1	; () banked
 12603  014D86  6F64               	movwf	_MiWiCapacityInfo& (0+255),b
 12604                           
 12605                           ; BSR set to: 1
 12606                           ;miwi_mesh.c: 3626: InitSymbolTimer();
 12607  014D88  EC71  F0B5         	call	_InitSymbolTimer	;wreg free
 12608                           
 12609                           ;miwi_mesh.c: 3628: TxData = 0;
 12610  014D8C  0E00               	movlw	0
 12611  014D8E  0100               	movlb	0	; () banked
 12612  014D90  6FD8               	movwf	_TxData& (0+255),b
 12613                           
 12614                           ; BSR set to: 0
 12615                           ;miwi_mesh.c: 3644: for(i = 0; i < 10; i++)
 12616  014D92  0E00               	movlw	0
 12617  014D94  0100               	movlb	0	; () banked
 12618  014D96  6F9C               	movwf	MiApp_ProtocolInit@i& (0+255),b
 12619  014D98                     l13760:
 12620                           
 12621                           ; BSR set to: 0
 12622  014D98  0E09               	movlw	9
 12623  014D9A  0100               	movlb	0	; () banked
 12624  014D9C  659C               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 12625  014D9E  D001               	goto	l13764
 12626  014DA0  D010               	goto	l13770
 12627  014DA2                     l13764:
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;miwi_mesh.c: 3645: {
 12631                           ;miwi_mesh.c: 3646: IncomingFrameCounter[i].Val = 0;
 12632  014DA2  0100               	movlb	0	; () banked
 12633  014DA4  519C               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 12634  014DA6  0D04               	mullw	4
 12635  014DA8  0E00               	movlw	low _IncomingFrameCounter
 12636  014DAA  24F3               	addwf	prodl,w,c
 12637  014DAC  6ED9               	movwf	fsr2l,c
 12638  014DAE  0E02               	movlw	high _IncomingFrameCounter
 12639  014DB0  20F4               	addwfc	prodh,w,c
 12640  014DB2  6EDA               	movwf	fsr2h,c
 12641  014DB4  6ADE               	clrf	postinc2,c
 12642  014DB6  6ADE               	clrf	postinc2,c
 12643  014DB8  6ADE               	clrf	postinc2,c
 12644  014DBA  6ADD               	clrf	postdec2,c
 12645                           
 12646                           ; BSR set to: 0
 12647  014DBC  0100               	movlb	0	; () banked
 12648  014DBE  2B9C               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 12649  014DC0  D7EB               	goto	l13760
 12650  014DC2                     l13770:
 12651                           
 12652                           ; BSR set to: 0
 12653                           ;miwi_mesh.c: 3647: }
 12654                           ;miwi_mesh.c: 3708: MIP.actionFlags.Val = 0;
 12655  014DC2  0E00               	movlw	0
 12656  014DC4  0100               	movlb	0	; () banked
 12657  014DC6  6F99               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 12658                           
 12659                           ;miwi_mesh.c: 3709: MIP.actionFlags.bits.PAddrLength = 4;
 12660  014DC8  0100               	movlb	0	; () banked
 12661  014DCA  5199               	movf	MiApp_ProtocolInit@MIP& (0+255),w,b
 12662  014DCC  0B87               	andlw	-121
 12663  014DCE  0920               	iorlw	32
 12664  014DD0  6F99               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 12665                           
 12666                           ; BSR set to: 0
 12667                           ;miwi_mesh.c: 3710: MIP.actionFlags.bits.CCAEnable = 1;
 12668  014DD2  0100               	movlb	0	; () banked
 12669  014DD4  8399               	bsf	MiApp_ProtocolInit@MIP& (0+255),1,b
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;miwi_mesh.c: 3711: MIP.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
 12673  014DD6  0100               	movlb	0	; () banked
 12674  014DD8  B198               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
 12675  014DDA  D003               	bra	u16075
 12676  014DDC  0100               	movlb	0	; () banked
 12677  014DDE  9599               	bcf	MiApp_ProtocolInit@MIP& (0+255),2,b
 12678  014DE0  D002               	bra	u16076
 12679  014DE2                     u16075:
 12680  014DE2  0100               	movlb	0	; () banked
 12681  014DE4  8599               	bsf	MiApp_ProtocolInit@MIP& (0+255),2,b
 12682  014DE6                     u16076:
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;miwi_mesh.c: 3712: MIP.PAddress = myLongAddress;
 12686  014DE6  0EC8               	movlw	low _myLongAddress
 12687  014DE8  0100               	movlb	0	; () banked
 12688  014DEA  6F9A               	movwf	(MiApp_ProtocolInit@MIP+1)& (0+255),b
 12689  014DEC  0E01               	movlw	high _myLongAddress
 12690  014DEE  0100               	movlb	0	; () banked
 12691  014DF0  6F9B               	movwf	(MiApp_ProtocolInit@MIP+2)& (0+255),b
 12692                           
 12693                           ; BSR set to: 0
 12694                           ;miwi_mesh.c: 3714: MiMAC_Init(MIP);
 12695  014DF2  C099  F093         	movff	MiApp_ProtocolInit@MIP,MiMAC_Init@initValue
 12696  014DF6  C09A  F094         	movff	MiApp_ProtocolInit@MIP+1,MiMAC_Init@initValue+1
 12697  014DFA  C09B  F095         	movff	MiApp_ProtocolInit@MIP+2,MiMAC_Init@initValue+2
 12698  014DFE  EC5A  F0A5         	call	_MiMAC_Init	;wreg free
 12699                           
 12700                           ;miwi_mesh.c: 3716: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 12701  014E02  0EDD               	movlw	low _myShortAddress
 12702  014E04  0100               	movlb	0	; () banked
 12703  014E06  6F81               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 12704  014E08  0E00               	movlw	high _myShortAddress
 12705  014E0A  0100               	movlb	0	; () banked
 12706  014E0C  6F82               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 12707  014E0E  0EDB               	movlw	low _myPANID
 12708  014E10  0100               	movlb	0	; () banked
 12709  014E12  6F83               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 12710  014E14  0E00               	movlw	high _myPANID
 12711  014E16  0100               	movlb	0	; () banked
 12712  014E18  6F84               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 12713  014E1A  EC9F  F0B5         	call	_MiMAC_SetAltAddress	;wreg free
 12714                           
 12715                           ;miwi_mesh.c: 3717: MiApp_SetChannel(currentChannel);
 12716  014E1E  0101               	movlb	1	; () banked
 12717  014E20  51D2               	movf	_currentChannel& (0+255),w,b
 12718  014E22  EC1D  F0B5         	call	_MiApp_SetChannel
 12719                           
 12720                           ;miwi_mesh.c: 3722: MiWiCapacityInfo.bits.Sleep = 1;
 12721  014E26  0101               	movlb	1	; () banked
 12722  014E28  8164               	bsf	_MiWiCapacityInfo& (0+255),0,b
 12723                           
 12724                           ; BSR set to: 1
 12725                           ;miwi_mesh.c: 3725: MiWiCapacityInfo.bits.Security = 1;
 12726  014E2A  0101               	movlb	1	; () banked
 12727  014E2C  8764               	bsf	_MiWiCapacityInfo& (0+255),3,b
 12728                           
 12729                           ; BSR set to: 1
 12730                           ;miwi_mesh.c: 3727: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 12731  014E2E  C03F  F097         	movff	_ConnMode,??_MiApp_ProtocolInit
 12732  014E32  0100               	movlb	0	; () banked
 12733  014E34  3B97               	swapf	??_MiApp_ProtocolInit& (0+255),f,b
 12734  014E36  0101               	movlb	1	; () banked
 12735  014E38  5164               	movf	_MiWiCapacityInfo& (0+255),w,b
 12736  014E3A  0100               	movlb	0	; () banked
 12737  014E3C  1997               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 12738  014E3E  0BCF               	andlw	-49
 12739  014E40  1997               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 12740  014E42  0101               	movlb	1	; () banked
 12741  014E44  6F64               	movwf	_MiWiCapacityInfo& (0+255),b
 12742                           
 12743                           ; BSR set to: 1
 12744                           ;miwi_mesh.c: 3742: MiWiSeqNum = TMR1L;
 12745  014E46  CFCE F0D7          	movff	4046,_MiWiSeqNum	;volatile
 12746                           
 12747                           ; BSR set to: 1
 12748                           ;miwi_mesh.c: 3744: INTCON3bits.INT1IF = 0;
 12749  014E4A  90F0               	bcf	intcon3,0,c	;volatile
 12750                           
 12751                           ; BSR set to: 1
 12752                           ;miwi_mesh.c: 3745: INTCON3bits.INT1IE = 1;
 12753  014E4C  86F0               	bsf	intcon3,3,c	;volatile
 12754  014E4E  0012               	return	
 12755  014E50                     __end_of_MiApp_ProtocolInit:
 12756                           	opt stack 0
 12757                           tblptru	equ	0xFF8
 12758                           tblptrh	equ	0xFF7
 12759                           tblptrl	equ	0xFF6
 12760                           tablat	equ	0xFF5
 12761                           prodh	equ	0xFF4
 12762                           prodl	equ	0xFF3
 12763                           intcon	equ	0xFF2
 12764                           intcon2	equ	0xFF1
 12765                           intcon3	equ	0xFF0
 12766                           indf0	equ	0xFEF
 12767                           postinc0	equ	0xFEE
 12768                           plusw0	equ	0xFEB
 12769                           fsr0h	equ	0xFEA
 12770                           fsr0l	equ	0xFE9
 12771                           wreg	equ	0xFE8
 12772                           indf1	equ	0xFE7
 12773                           fsr1h	equ	0xFE2
 12774                           fsr1l	equ	0xFE1
 12775                           indf2	equ	0xFDF
 12776                           postinc2	equ	0xFDE
 12777                           postdec2	equ	0xFDD
 12778                           plusw2	equ	0xFDB
 12779                           fsr2h	equ	0xFDA
 12780                           fsr2l	equ	0xFD9
 12781                           status	equ	0xFD8
 12782                           
 12783 ;; *************** function _MiMAC_Init *****************
 12784 ;; Defined at:
 12785 ;;		line 585 in file "src/miwi/drv_mrf_miwi_89xa.c"
 12786 ;; Parameters:    Size  Location     Type
 12787 ;;  initValue       3   51[BANK0 ] struct .
 12788 ;; Auto vars:     Size  Location     Type
 12789 ;;  i               1   54[BANK0 ] unsigned char 
 12790 ;; Return value:  Size  Location     Type
 12791 ;;                  1    wreg      unsigned char 
 12792 ;; Registers used:
 12793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12794 ;; Tracked objects:
 12795 ;;		On entry : 0/0
 12796 ;;		On exit  : 0/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12799 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12800 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12802 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12803 ;;Total ram usage:        4 bytes
 12804 ;; Hardware stack levels used:    1
 12805 ;; Hardware stack levels required when called:   10
 12806 ;; This function calls:
 12807 ;;		_DELAY_ms
 12808 ;;		_RegisterSet
 12809 ;;		_SetRFMode
 12810 ;; This function is called by:
 12811 ;;		_MiApp_ProtocolInit
 12812 ;; This function uses a non-reentrant model
 12813 ;;
 12814                           
 12815                           	psect	text42
 12816  014AB4                     __ptext42:
 12817                           	opt stack 0
 12818  014AB4                     _MiMAC_Init:
 12819                           	opt stack 19
 12820                           
 12821                           ;drv_mrf_miwi_89xa.c: 587: uint8_t i;
 12822                           ;drv_mrf_miwi_89xa.c: 589: MACInitParams = initValue;
 12823                           
 12824                           ; BSR set to: 1
 12825                           ;incstack = 0
 12826  014AB4  C093  F03C         	movff	MiMAC_Init@initValue,_MACInitParams
 12827  014AB8  C094  F03D         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
 12828  014ABC  C095  F03E         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
 12829                           
 12830                           ;drv_mrf_miwi_89xa.c: 591: DELAY_ms(20);
 12831  014AC0  0E00               	movlw	0
 12832  014AC2  0100               	movlb	0	; () banked
 12833  014AC4  6F8E               	movwf	(DELAY_ms@ms+1)& (0+255),b
 12834  014AC6  0E14               	movlw	20
 12835  014AC8  6F8D               	movwf	DELAY_ms@ms& (0+255),b
 12836  014ACA  EC0E  F0AE         	call	_DELAY_ms	;wreg free
 12837                           
 12838                           ;drv_mrf_miwi_89xa.c: 592: LATBbits.LATB3 = 1;
 12839  014ACE  868A               	bsf	3978,3,c	;volatile
 12840                           
 12841                           ;drv_mrf_miwi_89xa.c: 593: LATCbits.LATC6 = 1;
 12842  014AD0  8C8B               	bsf	3979,6,c	;volatile
 12843                           
 12844                           ;drv_mrf_miwi_89xa.c: 596: MACSeq = TMR1L;
 12845  014AD2  CFCE F041          	movff	4046,_MACSeq	;volatile
 12846                           
 12847                           ;drv_mrf_miwi_89xa.c: 597: ReceivedBankIndex = 0xFF;
 12848  014AD6  6845               	setf	_ReceivedBankIndex,c
 12849                           
 12850                           ;drv_mrf_miwi_89xa.c: 599: for(i = 0; i < 2; i++)
 12851  014AD8  0E00               	movlw	0
 12852  014ADA  0100               	movlb	0	; () banked
 12853  014ADC  6F96               	movwf	MiMAC_Init@i& (0+255),b
 12854  014ADE                     l12662:
 12855                           
 12856                           ; BSR set to: 0
 12857  014ADE  0E01               	movlw	1
 12858  014AE0  0100               	movlb	0	; () banked
 12859  014AE2  6596               	cpfsgt	MiMAC_Init@i& (0+255),b
 12860  014AE4  D001               	goto	l12666
 12861  014AE6  D00E               	goto	l12672
 12862  014AE8                     l12666:
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;drv_mrf_miwi_89xa.c: 600: {
 12866                           ;drv_mrf_miwi_89xa.c: 601: RxPacket[i].flags.Val = 0;
 12867  014AE8  0100               	movlb	0	; () banked
 12868  014AEA  5196               	movf	MiMAC_Init@i& (0+255),w,b
 12869  014AEC  0D42               	mullw	66
 12870  014AEE  0E50               	movlw	low _RxPacket
 12871  014AF0  24F3               	addwf	prodl,w,c
 12872  014AF2  6ED9               	movwf	fsr2l,c
 12873  014AF4  0E03               	movlw	high _RxPacket
 12874  014AF6  20F4               	addwfc	prodh,w,c
 12875  014AF8  6EDA               	movwf	fsr2h,c
 12876  014AFA  0E00               	movlw	0
 12877  014AFC  6EDF               	movwf	indf2,c
 12878                           
 12879                           ; BSR set to: 0
 12880  014AFE  0100               	movlb	0	; () banked
 12881  014B00  2B96               	incf	MiMAC_Init@i& (0+255),f,b
 12882  014B02  D7ED               	goto	l12662
 12883  014B04                     l12672:
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;drv_mrf_miwi_89xa.c: 602: }
 12887                           ;drv_mrf_miwi_89xa.c: 605: for(i = 0; i < 5; i++)
 12888  014B04  0E00               	movlw	0
 12889  014B06  0100               	movlb	0	; () banked
 12890  014B08  6F96               	movwf	MiMAC_Init@i& (0+255),b
 12891  014B0A                     l12674:
 12892                           
 12893                           ; BSR set to: 0
 12894  014B0A  0E04               	movlw	4
 12895  014B0C  0100               	movlb	0	; () banked
 12896  014B0E  6596               	cpfsgt	MiMAC_Init@i& (0+255),b
 12897  014B10  D001               	goto	l12678
 12898  014B12  D00E               	goto	l12684
 12899  014B14                     l12678:
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;drv_mrf_miwi_89xa.c: 606: {
 12903                           ;drv_mrf_miwi_89xa.c: 607: AckInfo[i].Valid = FALSE;
 12904  014B14  0100               	movlb	0	; () banked
 12905  014B16  5196               	movf	MiMAC_Init@i& (0+255),w,b
 12906  014B18  0D06               	mullw	6
 12907  014B1A  0E28               	movlw	low _AckInfo
 12908  014B1C  24F3               	addwf	prodl,w,c
 12909  014B1E  6ED9               	movwf	fsr2l,c
 12910  014B20  0E02               	movlw	high _AckInfo
 12911  014B22  20F4               	addwfc	prodh,w,c
 12912  014B24  6EDA               	movwf	fsr2h,c
 12913  014B26  0E00               	movlw	0
 12914  014B28  6EDF               	movwf	indf2,c
 12915                           
 12916                           ; BSR set to: 0
 12917  014B2A  0100               	movlb	0	; () banked
 12918  014B2C  2B96               	incf	MiMAC_Init@i& (0+255),f,b
 12919  014B2E  D7ED               	goto	l12674
 12920  014B30                     l12684:
 12921                           
 12922                           ; BSR set to: 0
 12923                           ;drv_mrf_miwi_89xa.c: 608: }
 12924                           ;drv_mrf_miwi_89xa.c: 626: OutgoingFrameCounter.Val = 1;
 12925  014B30  0E01               	movlw	1
 12926  014B32  0101               	movlb	1	; () banked
 12927  014B34  6F3E               	movwf	_OutgoingFrameCounter& (0+255),b
 12928  014B36  0E00               	movlw	0
 12929  014B38  6F3F               	movwf	(_OutgoingFrameCounter+1)& (0+255),b
 12930  014B3A  0E00               	movlw	0
 12931  014B3C  6F40               	movwf	(_OutgoingFrameCounter+2)& (0+255),b
 12932  014B3E  0E00               	movlw	0
 12933  014B40  6F41               	movwf	(_OutgoingFrameCounter+3)& (0+255),b
 12934                           
 12935                           ;drv_mrf_miwi_89xa.c: 628: for(i = 0; i < 8; i++)
 12936  014B42  0E00               	movlw	0
 12937  014B44  0100               	movlb	0	; () banked
 12938  014B46  6F96               	movwf	MiMAC_Init@i& (0+255),b
 12939  014B48                     l12686:
 12940                           
 12941                           ; BSR set to: 0
 12942  014B48  0E07               	movlw	7
 12943  014B4A  0100               	movlb	0	; () banked
 12944  014B4C  6596               	cpfsgt	MiMAC_Init@i& (0+255),b
 12945  014B4E  D001               	goto	l12690
 12946  014B50  D017               	goto	l12696
 12947  014B52                     l12690:
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;drv_mrf_miwi_89xa.c: 629: {
 12951                           ;drv_mrf_miwi_89xa.c: 630: key[i] = mySecurityKey[i];
 12952  014B52  0100               	movlb	0	; () banked
 12953  014B54  5196               	movf	MiMAC_Init@i& (0+255),w,b
 12954  014B56  0D01               	mullw	1
 12955  014B58  0E36               	movlw	low _mySecurityKey
 12956  014B5A  24F3               	addwf	prodl,w,c
 12957  014B5C  6ED9               	movwf	fsr2l,c
 12958  014B5E  0E01               	movlw	high _mySecurityKey
 12959  014B60  20F4               	addwfc	prodh,w,c
 12960  014B62  6EDA               	movwf	fsr2h,c
 12961  014B64  0100               	movlb	0	; () banked
 12962  014B66  5196               	movf	MiMAC_Init@i& (0+255),w,b
 12963  014B68  0D01               	mullw	1
 12964  014B6A  0EC0               	movlw	low _key
 12965  014B6C  24F3               	addwf	prodl,w,c
 12966  014B6E  6EE1               	movwf	fsr1l,c
 12967  014B70  0E01               	movlw	high _key
 12968  014B72  20F4               	addwfc	prodh,w,c
 12969  014B74  6EE2               	movwf	fsr1h,c
 12970  014B76  CFDF FFE7          	movff	indf2,indf1
 12971                           
 12972                           ; BSR set to: 0
 12973  014B7A  0100               	movlb	0	; () banked
 12974  014B7C  2B96               	incf	MiMAC_Init@i& (0+255),f,b
 12975  014B7E  D7E4               	goto	l12686
 12976  014B80                     l12696:
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;drv_mrf_miwi_89xa.c: 631: }
 12980                           ;drv_mrf_miwi_89xa.c: 636: for (i = 0 ; i <= 31; i++)
 12981  014B80  0E00               	movlw	0
 12982  014B82  0100               	movlb	0	; () banked
 12983  014B84  6F96               	movwf	MiMAC_Init@i& (0+255),b
 12984  014B86                     l12698:
 12985                           
 12986                           ; BSR set to: 0
 12987  014B86  0E1F               	movlw	31
 12988  014B88  0100               	movlb	0	; () banked
 12989  014B8A  6596               	cpfsgt	MiMAC_Init@i& (0+255),b
 12990  014B8C  D001               	goto	l12702
 12991  014B8E  D017               	goto	l12708
 12992  014B90                     l12702:
 12993                           
 12994                           ; BSR set to: 0
 12995                           ;drv_mrf_miwi_89xa.c: 637: {
 12996                           ;drv_mrf_miwi_89xa.c: 638: RegisterSet(InitConfigRegs[i]);
 12997  014B90  0100               	movlb	0	; () banked
 12998  014B92  5196               	movf	MiMAC_Init@i& (0+255),w,b
 12999  014B94  0D02               	mullw	2
 13000  014B96  0EF1               	movlw	low _InitConfigRegs
 13001  014B98  24F3               	addwf	prodl,w,c
 13002  014B9A  6EF6               	movwf	tblptrl,c
 13003  014B9C  0EFE               	movlw	high _InitConfigRegs
 13004  014B9E  20F4               	addwfc	prodh,w,c
 13005  014BA0  6EF7               	movwf	tblptrh,c
 13006  014BA2                     	if	1	;There are 3 active tblptr bytes
 13007  014BA2  6AF8               	clrf	tblptru,c
 13008  014BA4  0E00               	movlw	low (__mediumconst shr (0+16))
 13009  014BA6  22F8               	addwfc	tblptru,f,c
 13010  014BA8                     	endif
 13011  014BA8  0009               	tblrd		*+
 13012  014BAA  CFF5 F083          	movff	tablat,RegisterSet@setting
 13013  014BAE  000A               	tblrd		*-
 13014  014BB0  CFF5 F084          	movff	tablat,RegisterSet@setting+1
 13015  014BB4  ECB6  F0B3         	call	_RegisterSet	;wreg free
 13016  014BB8  0100               	movlb	0	; () banked
 13017  014BBA  2B96               	incf	MiMAC_Init@i& (0+255),f,b
 13018  014BBC  D7E4               	goto	l12698
 13019  014BBE                     l12708:
 13020                           
 13021                           ; BSR set to: 0
 13022                           ;drv_mrf_miwi_89xa.c: 639: }
 13023                           ;drv_mrf_miwi_89xa.c: 640: SetRFMode(0x20);
 13024  014BBE  0E20               	movlw	32
 13025  014BC0  EC96  F0AF         	call	_SetRFMode
 13026                           
 13027                           ;drv_mrf_miwi_89xa.c: 642: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 13028  014BC4  0E00               	movlw	0
 13029  014BC6  0100               	movlb	0	; () banked
 13030  014BC8  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 13031  014BCA  0E56               	movlw	86
 13032  014BCC  6F83               	movwf	RegisterSet@setting& (0+255),b
 13033  014BCE  ECB6  F0B3         	call	_RegisterSet	;wreg free
 13034                           
 13035                           ;drv_mrf_miwi_89xa.c: 643: SetRFMode(0x40);
 13036  014BD2  0E40               	movlw	64
 13037  014BD4  EC96  F0AF         	call	_SetRFMode
 13038                           
 13039                           ;drv_mrf_miwi_89xa.c: 646: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 13040  014BD8  0E1C               	movlw	28
 13041  014BDA  0100               	movlb	0	; () banked
 13042  014BDC  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 13043  014BDE  0E0F               	movlw	15
 13044  014BE0  6F83               	movwf	RegisterSet@setting& (0+255),b
 13045  014BE2  ECB6  F0B3         	call	_RegisterSet	;wreg free
 13046                           
 13047                           ;drv_mrf_miwi_89xa.c: 648: SetRFMode(0x60);
 13048  014BE6  0E60               	movlw	96
 13049  014BE8  EC96  F0AF         	call	_SetRFMode
 13050                           
 13051                           ;drv_mrf_miwi_89xa.c: 651: INTCONbits.INT0IF = 0;
 13052  014BEC  92F2               	bcf	intcon,1,c	;volatile
 13053                           
 13054                           ;drv_mrf_miwi_89xa.c: 652: INTCONbits.INT0IE = 1;
 13055  014BEE  88F2               	bsf	intcon,4,c	;volatile
 13056                           
 13057                           ;drv_mrf_miwi_89xa.c: 654: INTCON3bits.INT1IF = 0;
 13058  014BF0  90F0               	bcf	intcon3,0,c	;volatile
 13059                           
 13060                           ;drv_mrf_miwi_89xa.c: 655: INTCON3bits.INT1IE = 1;
 13061  014BF2  86F0               	bsf	intcon3,3,c	;volatile
 13062  014BF4  0012               	return	
 13063  014BF6                     __end_of_MiMAC_Init:
 13064                           	opt stack 0
 13065                           tblptru	equ	0xFF8
 13066                           tblptrh	equ	0xFF7
 13067                           tblptrl	equ	0xFF6
 13068                           tablat	equ	0xFF5
 13069                           prodh	equ	0xFF4
 13070                           prodl	equ	0xFF3
 13071                           intcon	equ	0xFF2
 13072                           intcon2	equ	0xFF1
 13073                           intcon3	equ	0xFF0
 13074                           indf0	equ	0xFEF
 13075                           postinc0	equ	0xFEE
 13076                           plusw0	equ	0xFEB
 13077                           fsr0h	equ	0xFEA
 13078                           fsr0l	equ	0xFE9
 13079                           wreg	equ	0xFE8
 13080                           indf1	equ	0xFE7
 13081                           fsr1h	equ	0xFE2
 13082                           fsr1l	equ	0xFE1
 13083                           indf2	equ	0xFDF
 13084                           postinc2	equ	0xFDE
 13085                           postdec2	equ	0xFDD
 13086                           plusw2	equ	0xFDB
 13087                           fsr2h	equ	0xFDA
 13088                           fsr2l	equ	0xFD9
 13089                           status	equ	0xFD8
 13090                           
 13091 ;; *************** function _DELAY_ms *****************
 13092 ;; Defined at:
 13093 ;;		line 108 in file "src/18F27J53/delay.c"
 13094 ;; Parameters:    Size  Location     Type
 13095 ;;  ms              2   45[BANK0 ] unsigned int 
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;  cyclesRequir    4   47[BANK0 ] long 
 13098 ;; Return value:  Size  Location     Type
 13099 ;;		None               void
 13100 ;; Registers used:
 13101 ;;		wreg, status,2, status,0, cstack
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13108 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13110 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13111 ;;Total ram usage:        6 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; Hardware stack levels required when called:    8
 13114 ;; This function calls:
 13115 ;;		___lmul
 13116 ;; This function is called by:
 13117 ;;		_MiMAC_Init
 13118 ;;		_MiMAC_PowerState
 13119 ;; This function uses a non-reentrant model
 13120 ;;
 13121                           
 13122                           	psect	text43
 13123  015C1C                     __ptext43:
 13124                           	opt stack 0
 13125  015C1C                     _DELAY_ms:
 13126                           	opt stack 19
 13127                           
 13128                           ;delay.c: 110: int32_t cyclesRequiredForEntireDelay = 0;
 13129                           
 13130                           ;incstack = 0
 13131  015C1C  0E00               	movlw	0
 13132  015C1E  0100               	movlb	0	; () banked
 13133  015C20  6F8F               	movwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),b
 13134  015C22  0E00               	movlw	0
 13135  015C24  6F90               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),b
 13136  015C26  0E00               	movlw	0
 13137  015C28  6F91               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),b
 13138  015C2A  0E00               	movlw	0
 13139  015C2C  6F92               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),b
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;delay.c: 113: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 13143  015C2E  C08D  F081         	movff	DELAY_ms@ms,___lmul@multiplier
 13144  015C32  C08E  F082         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
 13145  015C36  0100               	movlb	0	; () banked
 13146  015C38  6B83               	clrf	(___lmul@multiplier+2)& (0+255),b
 13147  015C3A  6B84               	clrf	(___lmul@multiplier+3)& (0+255),b
 13148  015C3C  0EA0               	movlw	160
 13149  015C3E  0100               	movlb	0	; () banked
 13150  015C40  6F85               	movwf	___lmul@multiplicand& (0+255),b
 13151  015C42  0E0F               	movlw	15
 13152  015C44  6F86               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13153  015C46  0E00               	movlw	0
 13154  015C48  6F87               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13155  015C4A  0E00               	movlw	0
 13156  015C4C  6F88               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13157  015C4E  EC9A  F0B1         	call	___lmul	;wreg free
 13158  015C52  C081  F08F         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
 13159  015C56  C082  F090         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
 13160  015C5A  C083  F091         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
 13161  015C5E  C084  F092         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
 13162                           
 13163                           ;delay.c: 117: cyclesRequiredForEntireDelay -= (148 + 22);
 13164  015C62  0E56               	movlw	86
 13165  015C64  0100               	movlb	0	; () banked
 13166  015C66  278F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 13167  015C68  0EFF               	movlw	255
 13168  015C6A  2390               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 13169  015C6C  0EFF               	movlw	255
 13170  015C6E  2391               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 13171  015C70  0EFF               	movlw	255
 13172  015C72  2392               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;delay.c: 119: if (cyclesRequiredForEntireDelay <= (170+25))
 13176  015C74  0100               	movlb	0	; () banked
 13177  015C76  BF92               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 13178  015C78  0012               	return	
 13179  015C7A  0100               	movlb	0	; () banked
 13180  015C7C  5192               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 13181  015C7E  0100               	movlb	0	; () banked
 13182  015C80  1191               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 13183  015C82  0100               	movlb	0	; () banked
 13184  015C84  1190               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 13185  015C86  E110               	bnz	l18
 13186  015C88  0EC4               	movlw	196
 13187  015C8A  0100               	movlb	0	; () banked
 13188  015C8C  5D8F               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 13189  015C8E  A0D8               	btfss	status,0,c
 13190  015C90  0012               	return	
 13191  015C92  D00A               	goto	l18
 13192  015C94                     l19:
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;delay.c: 126: {
 13196                           ;delay.c: 127: __nop();
 13197  015C94  F000               	nop	
 13198                           
 13199                           ;delay.c: 128: cyclesRequiredForEntireDelay -= 39;
 13200  015C96  0ED9               	movlw	217
 13201  015C98  0100               	movlb	0	; () banked
 13202  015C9A  278F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 13203  015C9C  0EFF               	movlw	255
 13204  015C9E  2390               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 13205  015CA0  0EFF               	movlw	255
 13206  015CA2  2391               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 13207  015CA4  0EFF               	movlw	255
 13208  015CA6  2392               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 13209  015CA8                     l18:
 13210                           
 13211                           ; BSR set to: 0
 13212  015CA8  0100               	movlb	0	; () banked
 13213  015CAA  BF92               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 13214  015CAC  0012               	return	
 13215  015CAE  0100               	movlb	0	; () banked
 13216  015CB0  5192               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 13217  015CB2  0100               	movlb	0	; () banked
 13218  015CB4  1191               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 13219  015CB6  0100               	movlb	0	; () banked
 13220  015CB8  1190               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 13221  015CBA  E1EC               	bnz	l19
 13222  015CBC  0100               	movlb	0	; () banked
 13223  015CBE  058F               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 13224  015CC0  A0D8               	btfss	status,0,c
 13225  015CC2  0012               	return	
 13226  015CC4  D7E7               	goto	l19
 13227  015CC6                     __end_of_DELAY_ms:
 13228                           	opt stack 0
 13229                           tblptru	equ	0xFF8
 13230                           tblptrh	equ	0xFF7
 13231                           tblptrl	equ	0xFF6
 13232                           tablat	equ	0xFF5
 13233                           prodh	equ	0xFF4
 13234                           prodl	equ	0xFF3
 13235                           intcon	equ	0xFF2
 13236                           intcon2	equ	0xFF1
 13237                           intcon3	equ	0xFF0
 13238                           indf0	equ	0xFEF
 13239                           postinc0	equ	0xFEE
 13240                           plusw0	equ	0xFEB
 13241                           fsr0h	equ	0xFEA
 13242                           fsr0l	equ	0xFE9
 13243                           wreg	equ	0xFE8
 13244                           indf1	equ	0xFE7
 13245                           fsr1h	equ	0xFE2
 13246                           fsr1l	equ	0xFE1
 13247                           indf2	equ	0xFDF
 13248                           postinc2	equ	0xFDE
 13249                           postdec2	equ	0xFDD
 13250                           plusw2	equ	0xFDB
 13251                           fsr2h	equ	0xFDA
 13252                           fsr2l	equ	0xFD9
 13253                           status	equ	0xFD8
 13254                           
 13255 ;; *************** function ___lmul *****************
 13256 ;; Defined at:
 13257 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/Umul32.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  multiplier      4   33[BANK0 ] unsigned long 
 13260 ;;  multiplicand    4   37[BANK0 ] unsigned long 
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;  product         4   41[BANK0 ] unsigned long 
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  4   33[BANK0 ] unsigned long 
 13265 ;; Registers used:
 13266 ;;		wreg, status,2, status,0
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/0
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13272 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13273 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13275 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13276 ;;Total ram usage:       12 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; Hardware stack levels required when called:    7
 13279 ;; This function calls:
 13280 ;;		Nothing
 13281 ;; This function is called by:
 13282 ;;		_DELAY_ms
 13283 ;;		_send_initial_update
 13284 ;;		_send_periodical_update
 13285 ;;		_DELAY_10us
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text44
 13290  016334                     __ptext44:
 13291                           	opt stack 0
 13292  016334                     ___lmul:
 13293                           	opt stack 22
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;incstack = 0
 13297  016334  0E00               	movlw	0
 13298  016336  0100               	movlb	0	; () banked
 13299  016338  6F89               	movwf	___lmul@product& (0+255),b
 13300  01633A  0E00               	movlw	0
 13301  01633C  6F8A               	movwf	(___lmul@product+1)& (0+255),b
 13302  01633E  0E00               	movlw	0
 13303  016340  6F8B               	movwf	(___lmul@product+2)& (0+255),b
 13304  016342  0E00               	movlw	0
 13305  016344  6F8C               	movwf	(___lmul@product+3)& (0+255),b
 13306  016346                     l11868:
 13307                           
 13308                           ; BSR set to: 0
 13309  016346  0100               	movlb	0	; () banked
 13310  016348  A181               	btfss	___lmul@multiplier& (0+255),0,b
 13311  01634A  D010               	goto	l11872
 13312                           
 13313                           ; BSR set to: 0
 13314  01634C  0100               	movlb	0	; () banked
 13315  01634E  5185               	movf	___lmul@multiplicand& (0+255),w,b
 13316  016350  0100               	movlb	0	; () banked
 13317  016352  2789               	addwf	___lmul@product& (0+255),f,b
 13318  016354  0100               	movlb	0	; () banked
 13319  016356  5186               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13320  016358  0100               	movlb	0	; () banked
 13321  01635A  238A               	addwfc	(___lmul@product+1)& (0+255),f,b
 13322  01635C  0100               	movlb	0	; () banked
 13323  01635E  5187               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13324  016360  0100               	movlb	0	; () banked
 13325  016362  238B               	addwfc	(___lmul@product+2)& (0+255),f,b
 13326  016364  0100               	movlb	0	; () banked
 13327  016366  5188               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13328  016368  0100               	movlb	0	; () banked
 13329  01636A  238C               	addwfc	(___lmul@product+3)& (0+255),f,b
 13330  01636C                     l11872:
 13331                           
 13332                           ; BSR set to: 0
 13333  01636C  0100               	movlb	0	; () banked
 13334  01636E  90D8               	bcf	status,0,c
 13335  016370  3785               	rlcf	___lmul@multiplicand& (0+255),f,b
 13336  016372  3786               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13337  016374  3787               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13338  016376  3788               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13339                           
 13340                           ; BSR set to: 0
 13341  016378  0100               	movlb	0	; () banked
 13342  01637A  90D8               	bcf	status,0,c
 13343  01637C  3384               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13344  01637E  3383               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13345  016380  3382               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13346  016382  3381               	rrcf	___lmul@multiplier& (0+255),f,b
 13347  016384  0100               	movlb	0	; () banked
 13348  016386  5181               	movf	___lmul@multiplier& (0+255),w,b
 13349  016388  0100               	movlb	0	; () banked
 13350  01638A  1182               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13351  01638C  0100               	movlb	0	; () banked
 13352  01638E  1183               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13353  016390  0100               	movlb	0	; () banked
 13354  016392  1184               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13355  016394  A4D8               	btfss	status,2,c
 13356  016396  D7D7               	goto	l11868
 13357                           
 13358                           ; BSR set to: 0
 13359  016398  C089  F081         	movff	___lmul@product,?___lmul
 13360  01639C  C08A  F082         	movff	___lmul@product+1,?___lmul+1
 13361  0163A0  C08B  F083         	movff	___lmul@product+2,?___lmul+2
 13362  0163A4  C08C  F084         	movff	___lmul@product+3,?___lmul+3
 13363                           
 13364                           ; BSR set to: 0
 13365  0163A8  0012               	return		;funcret
 13366  0163AA                     __end_of___lmul:
 13367                           	opt stack 0
 13368                           tblptru	equ	0xFF8
 13369                           tblptrh	equ	0xFF7
 13370                           tblptrl	equ	0xFF6
 13371                           tablat	equ	0xFF5
 13372                           prodh	equ	0xFF4
 13373                           prodl	equ	0xFF3
 13374                           intcon	equ	0xFF2
 13375                           intcon2	equ	0xFF1
 13376                           intcon3	equ	0xFF0
 13377                           indf0	equ	0xFEF
 13378                           postinc0	equ	0xFEE
 13379                           plusw0	equ	0xFEB
 13380                           fsr0h	equ	0xFEA
 13381                           fsr0l	equ	0xFE9
 13382                           wreg	equ	0xFE8
 13383                           indf1	equ	0xFE7
 13384                           fsr1h	equ	0xFE2
 13385                           fsr1l	equ	0xFE1
 13386                           indf2	equ	0xFDF
 13387                           postinc2	equ	0xFDE
 13388                           postdec2	equ	0xFDD
 13389                           plusw2	equ	0xFDB
 13390                           fsr2h	equ	0xFDA
 13391                           fsr2l	equ	0xFD9
 13392                           status	equ	0xFD8
 13393                           
 13394 ;; *************** function _InitSymbolTimer *****************
 13395 ;; Defined at:
 13396 ;;		line 59 in file "src/18F27J53/symbol.c"
 13397 ;; Parameters:    Size  Location     Type
 13398 ;;		None
 13399 ;; Auto vars:     Size  Location     Type
 13400 ;;		None
 13401 ;; Return value:  Size  Location     Type
 13402 ;;		None               void
 13403 ;; Registers used:
 13404 ;;		wreg, status,2
 13405 ;; Tracked objects:
 13406 ;;		On entry : 0/0
 13407 ;;		On exit  : 0/0
 13408 ;;		Unchanged: 0/0
 13409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13414 ;;Total ram usage:        0 bytes
 13415 ;; Hardware stack levels used:    1
 13416 ;; Hardware stack levels required when called:    7
 13417 ;; This function calls:
 13418 ;;		Nothing
 13419 ;; This function is called by:
 13420 ;;		_MiApp_ProtocolInit
 13421 ;; This function uses a non-reentrant model
 13422 ;;
 13423                           
 13424                           	psect	text45
 13425  016AE2                     __ptext45:
 13426                           	opt stack 0
 13427  016AE2                     _InitSymbolTimer:
 13428                           	opt stack 22
 13429                           
 13430                           ;symbol.c: 62: T1CON = 0b00110000;
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;incstack = 0
 13434  016AE2  0E30               	movlw	48
 13435  016AE4  6ECD               	movwf	4045,c	;volatile
 13436                           
 13437                           ;symbol.c: 63: PIR1bits.TMR1IF = 0;
 13438  016AE6  909E               	bcf	3998,0,c	;volatile
 13439                           
 13440                           ;symbol.c: 64: PIE1bits.TMR1IE = 1;
 13441  016AE8  809D               	bsf	3997,0,c	;volatile
 13442                           
 13443                           ;symbol.c: 65: T1CONbits.TMR1ON = 1;
 13444  016AEA  80CD               	bsf	4045,0,c	;volatile
 13445                           
 13446                           ;symbol.c: 74: timerExtension1 = 0;
 13447  016AEC  0E00               	movlw	0
 13448  016AEE  0100               	movlb	0	; () banked
 13449  016AF0  6FDA               	movwf	_timerExtension1& (0+255),b	;volatile
 13450                           
 13451                           ;symbol.c: 75: timerExtension2 = 0;
 13452  016AF2  0E00               	movlw	0
 13453  016AF4  6E49               	movwf	_timerExtension2,c	;volatile
 13454                           
 13455                           ; BSR set to: 0
 13456  016AF6  0012               	return		;funcret
 13457  016AF8                     __end_of_InitSymbolTimer:
 13458                           	opt stack 0
 13459                           tblptru	equ	0xFF8
 13460                           tblptrh	equ	0xFF7
 13461                           tblptrl	equ	0xFF6
 13462                           tablat	equ	0xFF5
 13463                           prodh	equ	0xFF4
 13464                           prodl	equ	0xFF3
 13465                           intcon	equ	0xFF2
 13466                           intcon2	equ	0xFF1
 13467                           intcon3	equ	0xFF0
 13468                           indf0	equ	0xFEF
 13469                           postinc0	equ	0xFEE
 13470                           plusw0	equ	0xFEB
 13471                           fsr0h	equ	0xFEA
 13472                           fsr0l	equ	0xFE9
 13473                           wreg	equ	0xFE8
 13474                           indf1	equ	0xFE7
 13475                           fsr1h	equ	0xFE2
 13476                           fsr1l	equ	0xFE1
 13477                           indf2	equ	0xFDF
 13478                           postinc2	equ	0xFDE
 13479                           postdec2	equ	0xFDD
 13480                           plusw2	equ	0xFDB
 13481                           fsr2h	equ	0xFDA
 13482                           fsr2l	equ	0xFD9
 13483                           status	equ	0xFD8
 13484                           
 13485 ;; *************** function _MiApp_EstablishConnection *****************
 13486 ;; Defined at:
 13487 ;;		line 4095 in file "src/miwi/miwi_mesh.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;  ActiveScanIn    1    wreg     unsigned char 
 13490 ;;  Mode            1   34[BANK1 ] unsigned char 
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;  ActiveScanIn    1   28[BANK2 ] unsigned char 
 13493 ;;  t2              4   23[BANK2 ] struct _MIWI_TICK
 13494 ;;  t1              4   19[BANK2 ] struct _MIWI_TICK
 13495 ;;  i               1   29[BANK2 ] unsigned char 
 13496 ;;  retry           1   27[BANK2 ] unsigned char 
 13497 ;; Return value:  Size  Location     Type
 13498 ;;                  1    wreg      unsigned char 
 13499 ;; Registers used:
 13500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13501 ;; Tracked objects:
 13502 ;;		On entry : 0/0
 13503 ;;		On exit  : 0/0
 13504 ;;		Unchanged: 0/0
 13505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13506 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13507 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13508 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13509 ;;      Totals:         0       0       9      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13510 ;;Total ram usage:       20 bytes
 13511 ;; Hardware stack levels used:    1
 13512 ;; Hardware stack levels required when called:   16
 13513 ;; This function calls:
 13514 ;;		_MiApp_DiscardMessage
 13515 ;;		_MiApp_MessageAvailable
 13516 ;;		_MiApp_SearchConnection
 13517 ;;		_MiApp_SetChannel
 13518 ;;		_MiMAC_SetAltAddress
 13519 ;;		_MiWi_TickGet
 13520 ;;		_OpenSocket
 13521 ;;		_SearchForLongAddress
 13522 ;;		_SendMACPacket
 13523 ;;		_findNextNetworkEntry
 13524 ;; This function is called by:
 13525 ;;		_main
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text46
 13530  012978                     __ptext46:
 13531                           	opt stack 0
 13532  012978                     _MiApp_EstablishConnection:
 13533                           	opt stack 14
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;incstack = 0
 13537                           ;MiApp_EstablishConnection@ActiveScanIndex stored from wreg
 13538  012978  0102               	movlb	2	; () banked
 13539  01297A  6FFC               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 13540                           
 13541                           ;miwi_mesh.c: 4097: uint8_t retry = 3;
 13542  01297C  0E03               	movlw	3
 13543  01297E  0102               	movlb	2	; () banked
 13544  012980  6FFB               	movwf	MiApp_EstablishConnection@retry& (0+255),b
 13545                           
 13546                           ; BSR set to: 2
 13547                           ;miwi_mesh.c: 4098: uint8_t i;
 13548                           ;miwi_mesh.c: 4099: MIWI_TICK t1, t2;
 13549                           ;miwi_mesh.c: 4101: if( Mode == 0x01 )
 13550  012982  0101               	movlb	1	; () banked
 13551  012984  05F5               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
 13552  012986  A4D8               	btfss	status,2,c
 13553  012988  D014               	goto	l13826
 13554                           
 13555                           ; BSR set to: 1
 13556                           ;miwi_mesh.c: 4102: {
 13557                           ;miwi_mesh.c: 4106: OpenSocket();
 13558  01298A  EC94  F0AC         	call	_OpenSocket	;wreg free
 13559                           
 13560                           ;miwi_mesh.c: 4107: while(openSocketInfo.status.bits.requestIsOpen)
 13561  01298E  D006               	goto	l13814
 13562  012990                     l13810:
 13563                           
 13564                           ;miwi_mesh.c: 4108: {
 13565                           ;miwi_mesh.c: 4109: if( MiApp_MessageAvailable())
 13566  012990  EC85  F0B5         	call	_MiApp_MessageAvailable	;wreg free
 13567  012994  0900               	iorlw	0
 13568  012996  A4D8               	btfss	status,2,c
 13569                           
 13570                           ;miwi_mesh.c: 4110: {
 13571                           ;miwi_mesh.c: 4111: MiApp_DiscardMessage();
 13572  012998  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
 13573  01299C                     l13814:
 13574  01299C  0101               	movlb	1	; () banked
 13575  01299E  B320               	btfsc	_openSocketInfo& (0+255),1,b
 13576  0129A0  D7F7               	goto	l13810
 13577                           
 13578                           ; BSR set to: 1
 13579                           ;miwi_mesh.c: 4112: }
 13580                           ;miwi_mesh.c: 4122: }
 13581                           ;miwi_mesh.c: 4123: if( openSocketInfo.status.bits.matchFound )
 13582  0129A2  0101               	movlb	1	; () banked
 13583  0129A4  A120               	btfss	_openSocketInfo& (0+255),0,b
 13584  0129A6  D003               	goto	l13820
 13585                           
 13586                           ; BSR set to: 1
 13587                           ;miwi_mesh.c: 4124: {
 13588                           ;miwi_mesh.c: 4125: return openSocketInfo.socketHandle;
 13589  0129A8  0101               	movlb	1	; () banked
 13590  0129AA  5121               	movf	(_openSocketInfo+1)& (0+255),w,b
 13591                           
 13592                           ; BSR set to: 1
 13593  0129AC  0012               	return	
 13594  0129AE                     l13820:
 13595                           
 13596                           ; BSR set to: 1
 13597                           ;miwi_mesh.c: 4126: }
 13598                           ;miwi_mesh.c: 4127: return 0xFF;
 13599  0129AE  0EFF               	movlw	255
 13600                           
 13601                           ; BSR set to: 1
 13602  0129B0  0012               	return	
 13603  0129B2                     l13826:
 13604                           
 13605                           ; BSR set to: 1
 13606                           ;miwi_mesh.c: 4129: else if( Mode == 0x00)
 13607  0129B2  0101               	movlb	1	; () banked
 13608  0129B4  51F5               	movf	MiApp_EstablishConnection@Mode& (0+255),w,b
 13609  0129B6  0101               	movlb	1	; () banked
 13610  0129B8  A4D8               	btfss	status,2,c
 13611  0129BA  D1F7               	goto	l13922
 13612                           
 13613                           ; BSR set to: 1
 13614                           ;miwi_mesh.c: 4130: {
 13615                           ;miwi_mesh.c: 4131: if( ActiveScanIndex == 0xFF )
 13616  0129BC  0102               	movlb	2	; () banked
 13617  0129BE  29FC               	incf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 13618  0129C0  B4D8               	btfsc	status,2,c
 13619  0129C2  D006               	goto	l13836
 13620  0129C4  D02A               	goto	l13840
 13621  0129C6                     l784:
 13622                           
 13623                           ;miwi_mesh.c: 4134: {
 13624                           ;miwi_mesh.c: 4135: if( --retry == 0 )
 13625  0129C6  0102               	movlb	2	; () banked
 13626  0129C8  2FFB               	decfsz	MiApp_EstablishConnection@retry& (0+255),f,b
 13627  0129CA  D002               	goto	l13836
 13628                           
 13629                           ; BSR set to: 2
 13630                           ;miwi_mesh.c: 4136: {
 13631                           ;miwi_mesh.c: 4137: return 0xFF;
 13632  0129CC  0EFF               	movlw	255
 13633                           
 13634                           ; BSR set to: 2
 13635  0129CE  0012               	return	
 13636  0129D0                     l13836:
 13637                           
 13638                           ; BSR set to: 2
 13639  0129D0  C1D2  F1F6         	movff	_currentChannel,??_MiApp_EstablishConnection
 13640  0129D4  0E01               	movlw	1
 13641  0129D6  0101               	movlb	1	; () banked
 13642  0129D8  6FF7               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 13643  0129DA  6BF8               	clrf	(??_MiApp_EstablishConnection+2)& (0+255),b
 13644  0129DC  6BF9               	clrf	(??_MiApp_EstablishConnection+3)& (0+255),b
 13645  0129DE  6BFA               	clrf	(??_MiApp_EstablishConnection+4)& (0+255),b
 13646  0129E0  0101               	movlb	1	; () banked
 13647  0129E2  2BF6               	incf	??_MiApp_EstablishConnection& (0+255),f,b
 13648  0129E4  D006               	goto	u16150
 13649  0129E6                     u16155:
 13650  0129E6  90D8               	bcf	status,0,c
 13651  0129E8  0101               	movlb	1	; () banked
 13652  0129EA  37F7               	rlcf	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 13653  0129EC  37F8               	rlcf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 13654  0129EE  37F9               	rlcf	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 13655  0129F0  37FA               	rlcf	(??_MiApp_EstablishConnection+4)& (0+255),f,b
 13656  0129F2                     u16150:
 13657  0129F2  0101               	movlb	1	; () banked
 13658  0129F4  2FF6               	decfsz	??_MiApp_EstablishConnection& (0+255),f,b
 13659  0129F6  D7F7               	goto	u16155
 13660  0129F8  C1F7  F1E8         	movff	??_MiApp_EstablishConnection+1,MiApp_SearchConnection@ChannelMap
 13661  0129FC  C1F8  F1E9         	movff	??_MiApp_EstablishConnection+2,MiApp_SearchConnection@ChannelMap+1
 13662  012A00  C1F9  F1EA         	movff	??_MiApp_EstablishConnection+3,MiApp_SearchConnection@ChannelMap+2
 13663  012A04  C1FA  F1EB         	movff	??_MiApp_EstablishConnection+4,MiApp_SearchConnection@ChannelMap+3
 13664  012A08  0E0A               	movlw	10
 13665  012A0A  EC1F  F09D         	call	_MiApp_SearchConnection
 13666  012A0E  0900               	iorlw	0
 13667  012A10  B4D8               	btfsc	status,2,c
 13668  012A12  D7D9               	goto	l784
 13669                           
 13670                           ;miwi_mesh.c: 4138: }
 13671                           ;miwi_mesh.c: 4139: }
 13672                           ;miwi_mesh.c: 4140: ActiveScanIndex = 0;
 13673  012A14  0E00               	movlw	0
 13674  012A16  0102               	movlb	2	; () banked
 13675  012A18  6FFC               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 13676  012A1A                     l13840:
 13677                           
 13678                           ; BSR set to: 2
 13679                           ;miwi_mesh.c: 4141: }
 13680                           ;miwi_mesh.c: 4149: tempPANID.Val = ActiveScanResults[ActiveScanIndex].PANID.Val;
 13681  012A1A  0102               	movlb	2	; () banked
 13682  012A1C  51FC               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 13683  012A1E  0D0A               	mullw	10
 13684  012A20  0E05               	movlw	5
 13685  012A22  26F3               	addwf	prodl,f,c
 13686  012A24  0E00               	movlw	0
 13687  012A26  22F4               	addwfc	prodh,f,c
 13688  012A28  0E00               	movlw	low _ActiveScanResults
 13689  012A2A  24F3               	addwf	prodl,w,c
 13690  012A2C  6ED9               	movwf	fsr2l,c
 13691  012A2E  0E03               	movlw	high _ActiveScanResults
 13692  012A30  20F4               	addwfc	prodh,w,c
 13693  012A32  6EDA               	movwf	fsr2h,c
 13694  012A34  CFDE F15E          	movff	postinc2,_tempPANID
 13695  012A38  CFDD F15F          	movff	postdec2,_tempPANID+1
 13696                           
 13697                           ; BSR set to: 2
 13698                           ;miwi_mesh.c: 4150: for(i = 0; i < 4; i++)
 13699  012A3C  0E00               	movlw	0
 13700  012A3E  0102               	movlb	2	; () banked
 13701  012A40  6FFD               	movwf	MiApp_EstablishConnection@i& (0+255),b
 13702  012A42                     l13844:
 13703                           
 13704                           ; BSR set to: 2
 13705  012A42  0E03               	movlw	3
 13706  012A44  0102               	movlb	2	; () banked
 13707  012A46  65FD               	cpfsgt	MiApp_EstablishConnection@i& (0+255),b
 13708  012A48  D001               	goto	l13848
 13709  012A4A  D02C               	goto	l13854
 13710  012A4C                     l13848:
 13711                           
 13712                           ; BSR set to: 2
 13713                           ;miwi_mesh.c: 4151: {
 13714                           ;miwi_mesh.c: 4152: tempLongAddress[i] = ActiveScanResults[ActiveScanIndex].Address[i];
 13715  012A4C  0102               	movlb	2	; () banked
 13716  012A4E  51FD               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 13717  012A50  0D01               	mullw	1
 13718  012A52  0E01               	movlw	1
 13719  012A54  26F3               	addwf	prodl,f,c
 13720  012A56  0E00               	movlw	0
 13721  012A58  22F4               	addwfc	prodh,f,c
 13722  012A5A  0E00               	movlw	low _ActiveScanResults
 13723  012A5C  0101               	movlb	1	; () banked
 13724  012A5E  6FF6               	movwf	??_MiApp_EstablishConnection& (0+255),b
 13725  012A60  0E03               	movlw	high _ActiveScanResults
 13726  012A62  0101               	movlb	1	; () banked
 13727  012A64  6FF7               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 13728  012A66  50F3               	movf	prodl,w,c
 13729  012A68  0101               	movlb	1	; () banked
 13730  012A6A  27F6               	addwf	??_MiApp_EstablishConnection& (0+255),f,b
 13731  012A6C  50F4               	movf	prodh,w,c
 13732  012A6E  0101               	movlb	1	; () banked
 13733  012A70  23F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 13734  012A72  0102               	movlb	2	; () banked
 13735  012A74  51FC               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 13736  012A76  0D0A               	mullw	10
 13737  012A78  50F3               	movf	prodl,w,c
 13738  012A7A  0101               	movlb	1	; () banked
 13739  012A7C  25F6               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 13740  012A7E  6ED9               	movwf	fsr2l,c
 13741  012A80  50F4               	movf	prodh,w,c
 13742  012A82  0101               	movlb	1	; () banked
 13743  012A84  21F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 13744  012A86  6EDA               	movwf	fsr2h,c
 13745  012A88  0102               	movlb	2	; () banked
 13746  012A8A  51FD               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 13747  012A8C  0D01               	mullw	1
 13748  012A8E  0E4E               	movlw	low _tempLongAddress
 13749  012A90  24F3               	addwf	prodl,w,c
 13750  012A92  6EE1               	movwf	fsr1l,c
 13751  012A94  0E01               	movlw	high _tempLongAddress
 13752  012A96  20F4               	addwfc	prodh,w,c
 13753  012A98  6EE2               	movwf	fsr1h,c
 13754  012A9A  CFDF FFE7          	movff	indf2,indf1
 13755                           
 13756                           ; BSR set to: 2
 13757  012A9E  0102               	movlb	2	; () banked
 13758  012AA0  2BFD               	incf	MiApp_EstablishConnection@i& (0+255),f,b
 13759  012AA2  D7CF               	goto	l13844
 13760  012AA4                     l13854:
 13761                           
 13762                           ; BSR set to: 2
 13763                           ;miwi_mesh.c: 4153: }
 13764                           ;miwi_mesh.c: 4154: myParent = SearchForLongAddress();
 13765  012AA4  ECCA  F0AB         	call	_SearchForLongAddress	;wreg free
 13766  012AA8  0100               	movlb	0	; () banked
 13767  012AAA  6FD9               	movwf	_myParent& (0+255),b
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;miwi_mesh.c: 4157: if( myParent == 0xFF )
 13771  012AAC  0100               	movlb	0	; () banked
 13772  012AAE  29D9               	incf	_myParent& (0+255),w,b
 13773  012AB0  A4D8               	btfss	status,2,c
 13774  012AB2  D00A               	goto	l13864
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;miwi_mesh.c: 4158: {
 13778                           ;miwi_mesh.c: 4159: if( (myParent = findNextNetworkEntry()) == 0xFF )
 13779  012AB4  EC1C  F0B4         	call	_findNextNetworkEntry	;wreg free
 13780  012AB8  0100               	movlb	0	; () banked
 13781  012ABA  6FD9               	movwf	_myParent& (0+255),b
 13782  012ABC  0100               	movlb	0	; () banked
 13783  012ABE  29D9               	incf	_myParent& (0+255),w,b
 13784  012AC0  A4D8               	btfss	status,2,c
 13785  012AC2  D002               	goto	l13864
 13786                           
 13787                           ; BSR set to: 0
 13788                           ;miwi_mesh.c: 4160: {
 13789                           ;miwi_mesh.c: 4161: return 0xFF;
 13790  012AC4  0EFF               	movlw	255
 13791                           
 13792                           ; BSR set to: 0
 13793  012AC6  0012               	return	
 13794  012AC8                     l13864:
 13795                           
 13796                           ; BSR set to: 0
 13797                           ;miwi_mesh.c: 4162: }
 13798                           ;miwi_mesh.c: 4163: }
 13799                           ;miwi_mesh.c: 4165: ConnectionTable[myParent].status.Val = 0;
 13800  012AC8  0100               	movlb	0	; () banked
 13801  012ACA  51D9               	movf	_myParent& (0+255),w,b
 13802  012ACC  0D09               	mullw	9
 13803  012ACE  0E08               	movlw	8
 13804  012AD0  26F3               	addwf	prodl,f,c
 13805  012AD2  0E00               	movlw	0
 13806  012AD4  22F4               	addwfc	prodh,f,c
 13807  012AD6  0E46               	movlw	low _ConnectionTable
 13808  012AD8  24F3               	addwf	prodl,w,c
 13809  012ADA  6ED9               	movwf	fsr2l,c
 13810  012ADC  0E02               	movlw	high _ConnectionTable
 13811  012ADE  20F4               	addwfc	prodh,w,c
 13812  012AE0  6EDA               	movwf	fsr2h,c
 13813  012AE2  0E00               	movlw	0
 13814  012AE4  6EDF               	movwf	indf2,c
 13815                           
 13816                           ; BSR set to: 0
 13817                           ;miwi_mesh.c: 4166: ConnectionTable[myParent].PANID.Val = ActiveScanResults[ActiveScanIn
      +                          dex].PANID.Val;
 13818  012AE6  0102               	movlb	2	; () banked
 13819  012AE8  51FC               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 13820  012AEA  0D0A               	mullw	10
 13821  012AEC  0E05               	movlw	5
 13822  012AEE  26F3               	addwf	prodl,f,c
 13823  012AF0  0E00               	movlw	0
 13824  012AF2  22F4               	addwfc	prodh,f,c
 13825  012AF4  0E00               	movlw	low _ActiveScanResults
 13826  012AF6  24F3               	addwf	prodl,w,c
 13827  012AF8  6ED9               	movwf	fsr2l,c
 13828  012AFA  0E03               	movlw	high _ActiveScanResults
 13829  012AFC  20F4               	addwfc	prodh,w,c
 13830  012AFE  6EDA               	movwf	fsr2h,c
 13831  012B00  0100               	movlb	0	; () banked
 13832  012B02  51D9               	movf	_myParent& (0+255),w,b
 13833  012B04  0D09               	mullw	9
 13834  012B06  0E46               	movlw	low _ConnectionTable
 13835  012B08  24F3               	addwf	prodl,w,c
 13836  012B0A  6EE1               	movwf	fsr1l,c
 13837  012B0C  0E02               	movlw	high _ConnectionTable
 13838  012B0E  20F4               	addwfc	prodh,w,c
 13839  012B10  6EE2               	movwf	fsr1h,c
 13840  012B12  CFDE FFE6          	movff	postinc2,postinc1
 13841  012B16  CFDD FFE5          	movff	postdec2,postdec1
 13842                           
 13843                           ; BSR set to: 0
 13844                           ;miwi_mesh.c: 4172: for(i = 0; i < 4; i++)
 13845  012B1A  0E00               	movlw	0
 13846  012B1C  0102               	movlb	2	; () banked
 13847  012B1E  6FFD               	movwf	MiApp_EstablishConnection@i& (0+255),b
 13848  012B20                     l13870:
 13849                           
 13850                           ; BSR set to: 2
 13851  012B20  0E03               	movlw	3
 13852  012B22  0102               	movlb	2	; () banked
 13853  012B24  65FD               	cpfsgt	MiApp_EstablishConnection@i& (0+255),b
 13854  012B26  D001               	goto	l13874
 13855  012B28  D041               	goto	l13880
 13856  012B2A                     l13874:
 13857                           
 13858                           ; BSR set to: 2
 13859                           ;miwi_mesh.c: 4173: {
 13860                           ;miwi_mesh.c: 4174: ConnectionTable[myParent].Address[i] = ActiveScanResults[ActiveScanI
      +                          ndex].Address[i];
 13861  012B2A  0102               	movlb	2	; () banked
 13862  012B2C  51FD               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 13863  012B2E  0D01               	mullw	1
 13864  012B30  0E01               	movlw	1
 13865  012B32  26F3               	addwf	prodl,f,c
 13866  012B34  0E00               	movlw	0
 13867  012B36  22F4               	addwfc	prodh,f,c
 13868  012B38  0E00               	movlw	low _ActiveScanResults
 13869  012B3A  0101               	movlb	1	; () banked
 13870  012B3C  6FF6               	movwf	??_MiApp_EstablishConnection& (0+255),b
 13871  012B3E  0E03               	movlw	high _ActiveScanResults
 13872  012B40  0101               	movlb	1	; () banked
 13873  012B42  6FF7               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 13874  012B44  50F3               	movf	prodl,w,c
 13875  012B46  0101               	movlb	1	; () banked
 13876  012B48  27F6               	addwf	??_MiApp_EstablishConnection& (0+255),f,b
 13877  012B4A  50F4               	movf	prodh,w,c
 13878  012B4C  0101               	movlb	1	; () banked
 13879  012B4E  23F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 13880  012B50  0102               	movlb	2	; () banked
 13881  012B52  51FC               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 13882  012B54  0D0A               	mullw	10
 13883  012B56  50F3               	movf	prodl,w,c
 13884  012B58  0101               	movlb	1	; () banked
 13885  012B5A  25F6               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 13886  012B5C  6ED9               	movwf	fsr2l,c
 13887  012B5E  50F4               	movf	prodh,w,c
 13888  012B60  0101               	movlb	1	; () banked
 13889  012B62  21F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 13890  012B64  6EDA               	movwf	fsr2h,c
 13891  012B66  0102               	movlb	2	; () banked
 13892  012B68  51FD               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 13893  012B6A  0D01               	mullw	1
 13894  012B6C  0E04               	movlw	4
 13895  012B6E  26F3               	addwf	prodl,f,c
 13896  012B70  0E00               	movlw	0
 13897  012B72  22F4               	addwfc	prodh,f,c
 13898  012B74  0E46               	movlw	low _ConnectionTable
 13899  012B76  0101               	movlb	1	; () banked
 13900  012B78  6FF8               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
 13901  012B7A  0E02               	movlw	high _ConnectionTable
 13902  012B7C  0101               	movlb	1	; () banked
 13903  012B7E  6FF9               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
 13904  012B80  50F3               	movf	prodl,w,c
 13905  012B82  0101               	movlb	1	; () banked
 13906  012B84  27F8               	addwf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 13907  012B86  50F4               	movf	prodh,w,c
 13908  012B88  0101               	movlb	1	; () banked
 13909  012B8A  23F9               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 13910  012B8C  0100               	movlb	0	; () banked
 13911  012B8E  51D9               	movf	_myParent& (0+255),w,b
 13912  012B90  0D09               	mullw	9
 13913  012B92  50F3               	movf	prodl,w,c
 13914  012B94  0101               	movlb	1	; () banked
 13915  012B96  25F8               	addwf	(??_MiApp_EstablishConnection+2)& (0+255),w,b
 13916  012B98  6EE1               	movwf	fsr1l,c
 13917  012B9A  50F4               	movf	prodh,w,c
 13918  012B9C  0101               	movlb	1	; () banked
 13919  012B9E  21F9               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),w,b
 13920  012BA0  6EE2               	movwf	fsr1h,c
 13921  012BA2  CFDF FFE7          	movff	indf2,indf1
 13922                           
 13923                           ; BSR set to: 1
 13924  012BA6  0102               	movlb	2	; () banked
 13925  012BA8  2BFD               	incf	MiApp_EstablishConnection@i& (0+255),f,b
 13926  012BAA  D7BA               	goto	l13870
 13927  012BAC                     l13880:
 13928                           
 13929                           ; BSR set to: 2
 13930                           ;miwi_mesh.c: 4175: }
 13931                           ;miwi_mesh.c: 4176: ConnectionTable[myParent].status.bits.longAddressValid = 1;
 13932  012BAC  0100               	movlb	0	; () banked
 13933  012BAE  51D9               	movf	_myParent& (0+255),w,b
 13934  012BB0  0D09               	mullw	9
 13935  012BB2  0E08               	movlw	8
 13936  012BB4  26F3               	addwf	prodl,f,c
 13937  012BB6  0E00               	movlw	0
 13938  012BB8  22F4               	addwfc	prodh,f,c
 13939  012BBA  0E46               	movlw	low _ConnectionTable
 13940  012BBC  24F3               	addwf	prodl,w,c
 13941  012BBE  6ED9               	movwf	fsr2l,c
 13942  012BC0  0E02               	movlw	high _ConnectionTable
 13943  012BC2  20F4               	addwfc	prodh,w,c
 13944  012BC4  6EDA               	movwf	fsr2h,c
 13945  012BC6  0102               	movlb	2	; () banked
 13946  012BC8  84DF               	bsf	indf2,2,c
 13947                           
 13948                           ;miwi_mesh.c: 4185: ConnectionTable[myParent].status.bits.directConnection = 1;
 13949  012BCA  0100               	movlb	0	; () banked
 13950  012BCC  51D9               	movf	_myParent& (0+255),w,b
 13951  012BCE  0D09               	mullw	9
 13952  012BD0  0E08               	movlw	8
 13953  012BD2  26F3               	addwf	prodl,f,c
 13954  012BD4  0E00               	movlw	0
 13955  012BD6  22F4               	addwfc	prodh,f,c
 13956  012BD8  0E46               	movlw	low _ConnectionTable
 13957  012BDA  24F3               	addwf	prodl,w,c
 13958  012BDC  6ED9               	movwf	fsr2l,c
 13959  012BDE  0E02               	movlw	high _ConnectionTable
 13960  012BE0  20F4               	addwfc	prodh,w,c
 13961  012BE2  6EDA               	movwf	fsr2h,c
 13962  012BE4  0102               	movlb	2	; () banked
 13963  012BE6  82DF               	bsf	indf2,1,c
 13964                           
 13965                           ;miwi_mesh.c: 4186: ConnectionTable[myParent].status.bits.isFamily = 1;
 13966  012BE8  0100               	movlb	0	; () banked
 13967  012BEA  51D9               	movf	_myParent& (0+255),w,b
 13968  012BEC  0D09               	mullw	9
 13969  012BEE  0E08               	movlw	8
 13970  012BF0  26F3               	addwf	prodl,f,c
 13971  012BF2  0E00               	movlw	0
 13972  012BF4  22F4               	addwfc	prodh,f,c
 13973  012BF6  0E46               	movlw	low _ConnectionTable
 13974  012BF8  24F3               	addwf	prodl,w,c
 13975  012BFA  6ED9               	movwf	fsr2l,c
 13976  012BFC  0E02               	movlw	high _ConnectionTable
 13977  012BFE  20F4               	addwfc	prodh,w,c
 13978  012C00  6EDA               	movwf	fsr2h,c
 13979  012C02  0102               	movlb	2	; () banked
 13980  012C04  8ADF               	bsf	indf2,5,c
 13981                           
 13982                           ;miwi_mesh.c: 4187: ConnectionTable[myParent].status.bits.RXOnWhenIdle = 1;
 13983  012C06  0100               	movlb	0	; () banked
 13984  012C08  51D9               	movf	_myParent& (0+255),w,b
 13985  012C0A  0D09               	mullw	9
 13986  012C0C  0E08               	movlw	8
 13987  012C0E  26F3               	addwf	prodl,f,c
 13988  012C10  0E00               	movlw	0
 13989  012C12  22F4               	addwfc	prodh,f,c
 13990  012C14  0E46               	movlw	low _ConnectionTable
 13991  012C16  24F3               	addwf	prodl,w,c
 13992  012C18  6ED9               	movwf	fsr2l,c
 13993  012C1A  0E02               	movlw	high _ConnectionTable
 13994  012C1C  20F4               	addwfc	prodh,w,c
 13995  012C1E  6EDA               	movwf	fsr2h,c
 13996  012C20  0102               	movlb	2	; () banked
 13997  012C22  80DF               	bsf	indf2,0,c
 13998                           
 13999                           ; BSR set to: 2
 14000                           ;miwi_mesh.c: 4189: MiApp_SetChannel(ActiveScanResults[ActiveScanIndex].Channel);
 14001  012C24  0102               	movlb	2	; () banked
 14002  012C26  51FC               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14003  012C28  0D0A               	mullw	10
 14004  012C2A  0E00               	movlw	low _ActiveScanResults
 14005  012C2C  24F3               	addwf	prodl,w,c
 14006  012C2E  6ED9               	movwf	fsr2l,c
 14007  012C30  0E03               	movlw	high _ActiveScanResults
 14008  012C32  20F4               	addwfc	prodh,w,c
 14009  012C34  6EDA               	movwf	fsr2h,c
 14010  012C36  50DF               	movf	indf2,w,c
 14011  012C38  EC1D  F0B5         	call	_MiApp_SetChannel
 14012                           
 14013                           ;miwi_mesh.c: 4192: myPANID.Val = ConnectionTable[myParent].PANID.Val;
 14014  012C3C  0100               	movlb	0	; () banked
 14015  012C3E  51D9               	movf	_myParent& (0+255),w,b
 14016  012C40  0D09               	mullw	9
 14017  012C42  0E46               	movlw	low _ConnectionTable
 14018  012C44  24F3               	addwf	prodl,w,c
 14019  012C46  6ED9               	movwf	fsr2l,c
 14020  012C48  0E02               	movlw	high _ConnectionTable
 14021  012C4A  20F4               	addwfc	prodh,w,c
 14022  012C4C  6EDA               	movwf	fsr2h,c
 14023  012C4E  CFDE F0DB          	movff	postinc2,_myPANID
 14024  012C52  CFDD F0DC          	movff	postdec2,_myPANID+1
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;miwi_mesh.c: 4193: tempShortAddress.Val = 0xFFFF;
 14028  012C56  0101               	movlb	1	; () banked
 14029  012C58  69D0               	setf	_tempShortAddress& (0+255),b
 14030  012C5A  69D1               	setf	(_tempShortAddress+1)& (0+255),b
 14031                           
 14032                           ; BSR set to: 1
 14033                           ;miwi_mesh.c: 4194: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 14034  012C5C  0ED0               	movlw	low _tempShortAddress
 14035  012C5E  0100               	movlb	0	; () banked
 14036  012C60  6F81               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 14037  012C62  0E01               	movlw	high _tempShortAddress
 14038  012C64  0100               	movlb	0	; () banked
 14039  012C66  6F82               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 14040  012C68  0EDB               	movlw	low _myPANID
 14041  012C6A  0100               	movlb	0	; () banked
 14042  012C6C  6F83               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 14043  012C6E  0E00               	movlw	high _myPANID
 14044  012C70  0100               	movlb	0	; () banked
 14045  012C72  6F84               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 14046  012C74  EC9F  F0B5         	call	_MiMAC_SetAltAddress	;wreg free
 14047                           
 14048                           ;miwi_mesh.c: 4197: {TxData = 0;};
 14049  012C78  0E00               	movlw	0
 14050  012C7A  0100               	movlb	0	; () banked
 14051  012C7C  6FD8               	movwf	_TxData& (0+255),b
 14052                           
 14053                           ; BSR set to: 0
 14054                           ;miwi_mesh.c: 4198: TxBuffer[TxData++] = 0x01;
 14055  012C7E  0100               	movlb	0	; () banked
 14056  012C80  51D8               	movf	_TxData& (0+255),w,b
 14057  012C82  0D01               	mullw	1
 14058  012C84  0E6C               	movlw	low _TxBuffer
 14059  012C86  24F3               	addwf	prodl,w,c
 14060  012C88  6ED9               	movwf	fsr2l,c
 14061  012C8A  0E01               	movlw	high _TxBuffer
 14062  012C8C  20F4               	addwfc	prodh,w,c
 14063  012C8E  6EDA               	movwf	fsr2h,c
 14064  012C90  0E01               	movlw	1
 14065  012C92  6EDF               	movwf	indf2,c
 14066                           
 14067                           ; BSR set to: 0
 14068  012C94  0100               	movlb	0	; () banked
 14069  012C96  2BD8               	incf	_TxData& (0+255),f,b
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;miwi_mesh.c: 4199: TxBuffer[TxData++] = MiWiCapacityInfo.Val;
 14073  012C98  0100               	movlb	0	; () banked
 14074  012C9A  51D8               	movf	_TxData& (0+255),w,b
 14075  012C9C  0D01               	mullw	1
 14076  012C9E  0E6C               	movlw	low _TxBuffer
 14077  012CA0  24F3               	addwf	prodl,w,c
 14078  012CA2  6ED9               	movwf	fsr2l,c
 14079  012CA4  0E01               	movlw	high _TxBuffer
 14080  012CA6  20F4               	addwfc	prodh,w,c
 14081  012CA8  6EDA               	movwf	fsr2h,c
 14082  012CAA  C164  FFDF         	movff	_MiWiCapacityInfo,indf2
 14083                           
 14084                           ; BSR set to: 0
 14085  012CAE  0100               	movlb	0	; () banked
 14086  012CB0  2BD8               	incf	_TxData& (0+255),f,b
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;miwi_mesh.c: 4210: SendMACPacket(ConnectionTable[myParent].Address, 0x01);
 14090  012CB2  0100               	movlb	0	; () banked
 14091  012CB4  51D9               	movf	_myParent& (0+255),w,b
 14092  012CB6  0D09               	mullw	9
 14093  012CB8  0E04               	movlw	4
 14094  012CBA  26F3               	addwf	prodl,f,c
 14095  012CBC  0E00               	movlw	0
 14096  012CBE  22F4               	addwfc	prodh,f,c
 14097  012CC0  0E46               	movlw	low _ConnectionTable
 14098  012CC2  24F3               	addwf	prodl,w,c
 14099  012CC4  0100               	movlb	0	; () banked
 14100  012CC6  6FBA               	movwf	SendMACPacket@Address& (0+255),b
 14101  012CC8  0E02               	movlw	high _ConnectionTable
 14102  012CCA  20F4               	addwfc	prodh,w,c
 14103  012CCC  0100               	movlb	0	; () banked
 14104  012CCE  6FBB               	movwf	(SendMACPacket@Address+1)& (0+255),b
 14105  012CD0  0E01               	movlw	1
 14106  012CD2  0100               	movlb	0	; () banked
 14107  012CD4  6FBC               	movwf	SendMACPacket@PacketType& (0+255),b
 14108  012CD6  ECE6  F0B0         	call	_SendMACPacket	;wreg free
 14109                           
 14110                           ;miwi_mesh.c: 4213: t1 = MiWi_TickGet();
 14111  012CDA  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 14112  012CDE  C081  F2F3         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
 14113  012CE2  C082  F2F4         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
 14114  012CE6  C083  F2F5         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
 14115  012CEA  C084  F2F6         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
 14116                           
 14117                           ;miwi_mesh.c: 4214: while(ConnectionTable[myParent].status.bits.FinishJoin == 0 )
 14118  012CEE  D04A               	goto	l13916
 14119  012CF0                     l13904:
 14120                           
 14121                           ;miwi_mesh.c: 4215: {
 14122                           ;miwi_mesh.c: 4216: if( MiApp_MessageAvailable())
 14123  012CF0  EC85  F0B5         	call	_MiApp_MessageAvailable	;wreg free
 14124  012CF4  0900               	iorlw	0
 14125  012CF6  A4D8               	btfss	status,2,c
 14126                           
 14127                           ;miwi_mesh.c: 4217: {
 14128                           ;miwi_mesh.c: 4218: MiApp_DiscardMessage();
 14129  012CF8  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
 14130                           
 14131                           ;miwi_mesh.c: 4219: }
 14132                           ;miwi_mesh.c: 4221: t2 = MiWi_TickGet();
 14133  012CFC  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 14134  012D00  C081  F2F7         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
 14135  012D04  C082  F2F8         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
 14136  012D08  C083  F2F9         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
 14137  012D0C  C084  F2FA         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
 14138                           
 14139                           ;miwi_mesh.c: 4222: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32) )
 14140  012D10  C2F3  F1F6         	movff	MiApp_EstablishConnection@t1,??_MiApp_EstablishConnection
 14141  012D14  C2F4  F1F7         	movff	MiApp_EstablishConnection@t1+1,??_MiApp_EstablishConnection+1
 14142  012D18  C2F5  F1F8         	movff	MiApp_EstablishConnection@t1+2,??_MiApp_EstablishConnection+2
 14143  012D1C  C2F6  F1F9         	movff	MiApp_EstablishConnection@t1+3,??_MiApp_EstablishConnection+3
 14144  012D20  0101               	movlb	1	; () banked
 14145  012D22  1FF6               	comf	??_MiApp_EstablishConnection& (0+255),f,b
 14146  012D24  1FF7               	comf	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14147  012D26  1FF8               	comf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14148  012D28  1FF9               	comf	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14149  012D2A  2BF6               	incf	??_MiApp_EstablishConnection& (0+255),f,b
 14150  012D2C  0E00               	movlw	0
 14151  012D2E  23F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14152  012D30  23F8               	addwfc	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14153  012D32  23F9               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14154  012D34  0102               	movlb	2	; () banked
 14155  012D36  51F7               	movf	MiApp_EstablishConnection@t2& (0+255),w,b
 14156  012D38  0101               	movlb	1	; () banked
 14157  012D3A  25F6               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 14158  012D3C  0101               	movlb	1	; () banked
 14159  012D3E  6FFA               	movwf	(??_MiApp_EstablishConnection+4)& (0+255),b
 14160  012D40  0102               	movlb	2	; () banked
 14161  012D42  51F8               	movf	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
 14162  012D44  0101               	movlb	1	; () banked
 14163  012D46  21F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 14164  012D48  0101               	movlb	1	; () banked
 14165  012D4A  6FFB               	movwf	(??_MiApp_EstablishConnection+5)& (0+255),b
 14166  012D4C  0102               	movlb	2	; () banked
 14167  012D4E  51F9               	movf	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
 14168  012D50  0101               	movlb	1	; () banked
 14169  012D52  21F8               	addwfc	(??_MiApp_EstablishConnection+2)& (0+255),w,b
 14170  012D54  0101               	movlb	1	; () banked
 14171  012D56  6FFC               	movwf	(??_MiApp_EstablishConnection+6)& (0+255),b
 14172  012D58  0102               	movlb	2	; () banked
 14173  012D5A  51FA               	movf	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
 14174  012D5C  0101               	movlb	1	; () banked
 14175  012D5E  21F9               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),w,b
 14176  012D60  0101               	movlb	1	; () banked
 14177  012D62  6FFD               	movwf	(??_MiApp_EstablishConnection+7)& (0+255),b
 14178  012D64  0101               	movlb	1	; () banked
 14179  012D66  51FD               	movf	(??_MiApp_EstablishConnection+7)& (0+255),w,b
 14180  012D68  E10B               	bnz	u16240
 14181  012D6A  0E21               	movlw	33
 14182  012D6C  0101               	movlb	1	; () banked
 14183  012D6E  5DFA               	subwf	(??_MiApp_EstablishConnection+4)& (0+255),w,b
 14184  012D70  0EA1               	movlw	161
 14185  012D72  0101               	movlb	1	; () banked
 14186  012D74  59FB               	subwfb	(??_MiApp_EstablishConnection+5)& (0+255),w,b
 14187  012D76  0E07               	movlw	7
 14188  012D78  0101               	movlb	1	; () banked
 14189  012D7A  59FC               	subwfb	(??_MiApp_EstablishConnection+6)& (0+255),w,b
 14190  012D7C  A0D8               	btfss	status,0,c
 14191  012D7E  D002               	goto	l13916
 14192  012D80                     u16240:
 14193                           
 14194                           ; BSR set to: 1
 14195                           ;miwi_mesh.c: 4223: {
 14196                           ;miwi_mesh.c: 4224: return 0xFF;
 14197  012D80  0EFF               	movlw	255
 14198                           
 14199                           ; BSR set to: 1
 14200  012D82  0012               	return	
 14201  012D84                     l13916:
 14202  012D84  0100               	movlb	0	; () banked
 14203  012D86  51D9               	movf	_myParent& (0+255),w,b
 14204  012D88  0D09               	mullw	9
 14205  012D8A  0E08               	movlw	8
 14206  012D8C  26F3               	addwf	prodl,f,c
 14207  012D8E  0E00               	movlw	0
 14208  012D90  22F4               	addwfc	prodh,f,c
 14209  012D92  0E46               	movlw	low _ConnectionTable
 14210  012D94  24F3               	addwf	prodl,w,c
 14211  012D96  6ED9               	movwf	fsr2l,c
 14212  012D98  0E02               	movlw	high _ConnectionTable
 14213  012D9A  20F4               	addwfc	prodh,w,c
 14214  012D9C  6EDA               	movwf	fsr2h,c
 14215  012D9E  0102               	movlb	2	; () banked
 14216  012DA0  A8DF               	btfss	indf2,4,c
 14217  012DA2  D7A6               	goto	l13904
 14218                           
 14219                           ; BSR set to: 2
 14220                           ;miwi_mesh.c: 4225: }
 14221                           ;miwi_mesh.c: 4226: }
 14222                           ;miwi_mesh.c: 4231: return myParent;
 14223                           
 14224                           ; BSR set to: 2
 14225  012DA4  0100               	movlb	0	; () banked
 14226  012DA6  51D9               	movf	_myParent& (0+255),w,b
 14227                           
 14228                           ; BSR set to: 0
 14229  012DA8  0012               	return	
 14230  012DAA                     l13922:
 14231                           
 14232                           ;miwi_mesh.c: 4232: }
 14233                           ;miwi_mesh.c: 4233: return 0xFF;
 14234  012DAA  0EFF               	movlw	255
 14235  012DAC  0012               	return	
 14236  012DAE                     __end_of_MiApp_EstablishConnection:
 14237                           	opt stack 0
 14238                           tblptru	equ	0xFF8
 14239                           tblptrh	equ	0xFF7
 14240                           tblptrl	equ	0xFF6
 14241                           tablat	equ	0xFF5
 14242                           prodh	equ	0xFF4
 14243                           prodl	equ	0xFF3
 14244                           intcon	equ	0xFF2
 14245                           intcon2	equ	0xFF1
 14246                           intcon3	equ	0xFF0
 14247                           indf0	equ	0xFEF
 14248                           postinc0	equ	0xFEE
 14249                           plusw0	equ	0xFEB
 14250                           fsr0h	equ	0xFEA
 14251                           fsr0l	equ	0xFE9
 14252                           wreg	equ	0xFE8
 14253                           indf1	equ	0xFE7
 14254                           postinc1	equ	0xFE6
 14255                           postdec1	equ	0xFE5
 14256                           fsr1h	equ	0xFE2
 14257                           fsr1l	equ	0xFE1
 14258                           indf2	equ	0xFDF
 14259                           postinc2	equ	0xFDE
 14260                           postdec2	equ	0xFDD
 14261                           plusw2	equ	0xFDB
 14262                           fsr2h	equ	0xFDA
 14263                           fsr2l	equ	0xFD9
 14264                           status	equ	0xFD8
 14265                           
 14266 ;; *************** function _OpenSocket *****************
 14267 ;; Defined at:
 14268 ;;		line 2959 in file "src/miwi/miwi_mesh.c"
 14269 ;; Parameters:    Size  Location     Type
 14270 ;;		None
 14271 ;; Auto vars:     Size  Location     Type
 14272 ;;  i               1  112[BANK0 ] unsigned char 
 14273 ;; Return value:  Size  Location     Type
 14274 ;;		None               void
 14275 ;; Registers used:
 14276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14277 ;; Tracked objects:
 14278 ;;		On entry : 0/0
 14279 ;;		On exit  : 0/0
 14280 ;;		Unchanged: 0/0
 14281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14285 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14286 ;;Total ram usage:        1 bytes
 14287 ;; Hardware stack levels used:    1
 14288 ;; Hardware stack levels required when called:   15
 14289 ;; This function calls:
 14290 ;;		_MiApp_UnicastAddress
 14291 ;;		_MiWi_TickGet
 14292 ;; This function is called by:
 14293 ;;		_MiApp_EstablishConnection
 14294 ;; This function uses a non-reentrant model
 14295 ;;
 14296                           
 14297                           	psect	text47
 14298  015928                     __ptext47:
 14299                           	opt stack 0
 14300  015928                     _OpenSocket:
 14301                           	opt stack 14
 14302                           
 14303                           ;miwi_mesh.c: 2961: uint8_t i;
 14304                           ;miwi_mesh.c: 2963: openSocketInfo.status.bits.matchFound = 0;
 14305                           
 14306                           ;incstack = 0
 14307  015928  0101               	movlb	1	; () banked
 14308  01592A  9120               	bcf	_openSocketInfo& (0+255),0,b
 14309                           
 14310                           ; BSR set to: 1
 14311                           ;miwi_mesh.c: 3069: openSocketInfo.socketStart = MiWi_TickGet();
 14312  01592C  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 14313  015930  C081  F128         	movff	?_MiWi_TickGet,_openSocketInfo+8
 14314  015934  C082  F129         	movff	?_MiWi_TickGet+1,_openSocketInfo+9
 14315  015938  C083  F12A         	movff	?_MiWi_TickGet+2,_openSocketInfo+10
 14316  01593C  C084  F12B         	movff	?_MiWi_TickGet+3,_openSocketInfo+11
 14317                           
 14318                           ;miwi_mesh.c: 3072: tempShortAddress.Val = 0x0000;
 14319  015940  0E00               	movlw	0
 14320  015942  0101               	movlb	1	; () banked
 14321  015944  6FD1               	movwf	(_tempShortAddress+1)& (0+255),b
 14322  015946  0E00               	movlw	0
 14323  015948  6FD0               	movwf	_tempShortAddress& (0+255),b
 14324                           
 14325                           ; BSR set to: 1
 14326                           ;miwi_mesh.c: 3074: {TxData = 11;};
 14327  01594A  0E0B               	movlw	11
 14328  01594C  0100               	movlb	0	; () banked
 14329  01594E  6FD8               	movwf	_TxData& (0+255),b
 14330                           
 14331                           ; BSR set to: 0
 14332                           ;miwi_mesh.c: 3075: TxBuffer[TxData++] = 0x00;
 14333  015950  0100               	movlb	0	; () banked
 14334  015952  51D8               	movf	_TxData& (0+255),w,b
 14335  015954  0D01               	mullw	1
 14336  015956  0E6C               	movlw	low _TxBuffer
 14337  015958  24F3               	addwf	prodl,w,c
 14338  01595A  6ED9               	movwf	fsr2l,c
 14339  01595C  0E01               	movlw	high _TxBuffer
 14340  01595E  20F4               	addwfc	prodh,w,c
 14341  015960  6EDA               	movwf	fsr2h,c
 14342  015962  0E00               	movlw	0
 14343  015964  6EDF               	movwf	indf2,c
 14344                           
 14345                           ; BSR set to: 0
 14346  015966  0100               	movlb	0	; () banked
 14347  015968  2BD8               	incf	_TxData& (0+255),f,b
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;miwi_mesh.c: 3076: TxBuffer[TxData++] = 0x10;
 14351  01596A  0100               	movlb	0	; () banked
 14352  01596C  51D8               	movf	_TxData& (0+255),w,b
 14353  01596E  0D01               	mullw	1
 14354  015970  0E6C               	movlw	low _TxBuffer
 14355  015972  24F3               	addwf	prodl,w,c
 14356  015974  6ED9               	movwf	fsr2l,c
 14357  015976  0E01               	movlw	high _TxBuffer
 14358  015978  20F4               	addwfc	prodh,w,c
 14359  01597A  6EDA               	movwf	fsr2h,c
 14360  01597C  0E10               	movlw	16
 14361  01597E  6EDF               	movwf	indf2,c
 14362                           
 14363                           ; BSR set to: 0
 14364  015980  0100               	movlb	0	; () banked
 14365  015982  2BD8               	incf	_TxData& (0+255),f,b
 14366                           
 14367                           ; BSR set to: 0
 14368                           ;miwi_mesh.c: 3077: for(i = 0; i < 4; i++)
 14369  015984  0E00               	movlw	0
 14370  015986  0100               	movlb	0	; () banked
 14371  015988  6FD0               	movwf	OpenSocket@i& (0+255),b
 14372  01598A                     l12744:
 14373                           
 14374                           ; BSR set to: 0
 14375  01598A  0E03               	movlw	3
 14376  01598C  0100               	movlb	0	; () banked
 14377  01598E  65D0               	cpfsgt	OpenSocket@i& (0+255),b
 14378  015990  D001               	goto	l12748
 14379  015992  D019               	goto	l12756
 14380  015994                     l12748:
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;miwi_mesh.c: 3078: {
 14384                           ;miwi_mesh.c: 3079: TxBuffer[TxData++] = myLongAddress[i];
 14385  015994  0100               	movlb	0	; () banked
 14386  015996  51D0               	movf	OpenSocket@i& (0+255),w,b
 14387  015998  0D01               	mullw	1
 14388  01599A  0EC8               	movlw	low _myLongAddress
 14389  01599C  24F3               	addwf	prodl,w,c
 14390  01599E  6ED9               	movwf	fsr2l,c
 14391  0159A0  0E01               	movlw	high _myLongAddress
 14392  0159A2  20F4               	addwfc	prodh,w,c
 14393  0159A4  6EDA               	movwf	fsr2h,c
 14394  0159A6  0100               	movlb	0	; () banked
 14395  0159A8  51D8               	movf	_TxData& (0+255),w,b
 14396  0159AA  0D01               	mullw	1
 14397  0159AC  0E6C               	movlw	low _TxBuffer
 14398  0159AE  24F3               	addwf	prodl,w,c
 14399  0159B0  6EE1               	movwf	fsr1l,c
 14400  0159B2  0E01               	movlw	high _TxBuffer
 14401  0159B4  20F4               	addwfc	prodh,w,c
 14402  0159B6  6EE2               	movwf	fsr1h,c
 14403  0159B8  CFDF FFE7          	movff	indf2,indf1
 14404                           
 14405                           ; BSR set to: 0
 14406  0159BC  0100               	movlb	0	; () banked
 14407  0159BE  2BD8               	incf	_TxData& (0+255),f,b
 14408                           
 14409                           ; BSR set to: 0
 14410  0159C0  0100               	movlb	0	; () banked
 14411  0159C2  2BD0               	incf	OpenSocket@i& (0+255),f,b
 14412  0159C4  D7E2               	goto	l12744
 14413  0159C6                     l12756:
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;miwi_mesh.c: 3080: }
 14417                           ;miwi_mesh.c: 3088: MiApp_UnicastAddress(tempShortAddress.v, 0, 0);
 14418  0159C6  0ED0               	movlw	low _tempShortAddress
 14419  0159C8  0101               	movlb	1	; () banked
 14420  0159CA  6FE8               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 14421  0159CC  0E01               	movlw	high _tempShortAddress
 14422  0159CE  0101               	movlb	1	; () banked
 14423  0159D0  6FE9               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 14424  0159D2  0E00               	movlw	0
 14425  0159D4  0101               	movlb	1	; () banked
 14426  0159D6  6FEA               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 14427  0159D8  0E00               	movlw	0
 14428  0159DA  0101               	movlb	1	; () banked
 14429  0159DC  6FEB               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 14430  0159DE  EC22  F090         	call	_MiApp_UnicastAddress	;wreg free
 14431                           
 14432                           ;miwi_mesh.c: 3090: openSocketInfo.status.bits.requestIsOpen = 1;
 14433  0159E2  0101               	movlb	1	; () banked
 14434  0159E4  8320               	bsf	_openSocketInfo& (0+255),1,b
 14435                           
 14436                           ; BSR set to: 1
 14437  0159E6  0012               	return		;funcret
 14438  0159E8                     __end_of_OpenSocket:
 14439                           	opt stack 0
 14440                           tblptru	equ	0xFF8
 14441                           tblptrh	equ	0xFF7
 14442                           tblptrl	equ	0xFF6
 14443                           tablat	equ	0xFF5
 14444                           prodh	equ	0xFF4
 14445                           prodl	equ	0xFF3
 14446                           intcon	equ	0xFF2
 14447                           intcon2	equ	0xFF1
 14448                           intcon3	equ	0xFF0
 14449                           indf0	equ	0xFEF
 14450                           postinc0	equ	0xFEE
 14451                           plusw0	equ	0xFEB
 14452                           fsr0h	equ	0xFEA
 14453                           fsr0l	equ	0xFE9
 14454                           wreg	equ	0xFE8
 14455                           indf1	equ	0xFE7
 14456                           postinc1	equ	0xFE6
 14457                           postdec1	equ	0xFE5
 14458                           fsr1h	equ	0xFE2
 14459                           fsr1l	equ	0xFE1
 14460                           indf2	equ	0xFDF
 14461                           postinc2	equ	0xFDE
 14462                           postdec2	equ	0xFDD
 14463                           plusw2	equ	0xFDB
 14464                           fsr2h	equ	0xFDA
 14465                           fsr2l	equ	0xFD9
 14466                           status	equ	0xFD8
 14467                           
 14468 ;; *************** function _MiApp_UnicastAddress *****************
 14469 ;; Defined at:
 14470 ;;		line 4565 in file "src/miwi/miwi_mesh.c"
 14471 ;; Parameters:    Size  Location     Type
 14472 ;;  DestAddress     2   21[BANK1 ] PTR unsigned char 
 14473 ;;		 -> do_UPDATE@shortaddress(2), do_POWER_TEST@shortaddress(2), do_NETWORK_REGISTER@shortaddress(2), tempShortAddress(
      +2), 
 14474 ;;  PermanentAdd    1   23[BANK1 ] unsigned char 
 14475 ;;  SecEn           1   24[BANK1 ] unsigned char 
 14476 ;; Auto vars:     Size  Location     Type
 14477 ;;  t2              4    4[BANK2 ] struct _MIWI_TICK
 14478 ;;  t1              4    0[BANK2 ] struct _MIWI_TICK
 14479 ;;  t2              4   12[BANK2 ] struct _MIWI_TICK
 14480 ;;  t1              4    8[BANK2 ] struct _MIWI_TICK
 14481 ;;  handle          1   18[BANK2 ] unsigned char 
 14482 ;;  i               1   17[BANK2 ] unsigned char 
 14483 ;;  MiWiFrameCon    1   16[BANK2 ] unsigned char 
 14484 ;; Return value:  Size  Location     Type
 14485 ;;                  1    wreg      unsigned char 
 14486 ;; Registers used:
 14487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14488 ;; Tracked objects:
 14489 ;;		On entry : 0/0
 14490 ;;		On exit  : 0/0
 14491 ;;		Unchanged: 0/0
 14492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14493 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14494 ;;      Locals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14495 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14496 ;;      Totals:         0       0      12      19       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14497 ;;Total ram usage:       31 bytes
 14498 ;; Hardware stack levels used:    1
 14499 ;; Hardware stack levels required when called:   14
 14500 ;; This function calls:
 14501 ;;		_MiApp_DiscardMessage
 14502 ;;		_MiApp_MessageAvailable
 14503 ;;		_MiMAC_SendPacket
 14504 ;;		_MiWi_TickGet
 14505 ;;		_SearchForLongAddress
 14506 ;; This function is called by:
 14507 ;;		_OpenSocket
 14508 ;;		_do_NETWORK_REGISTER
 14509 ;;		_do_POWER_TEST
 14510 ;;		_do_UPDATE
 14511 ;;		_do_PING
 14512 ;; This function uses a non-reentrant model
 14513 ;;
 14514                           
 14515                           	psect	text48
 14516  012044                     __ptext48:
 14517                           	opt stack 0
 14518  012044                     _MiApp_UnicastAddress:
 14519                           	opt stack 14
 14520                           
 14521                           ;miwi_mesh.c: 4567: uint8_t handle;
 14522                           ;miwi_mesh.c: 4568: uint8_t i;
 14523                           ;miwi_mesh.c: 4569: uint8_t MiWiFrameControl;
 14524                           ;miwi_mesh.c: 4571: if( MiWiAckRequired && TxBuffer[11])
 14525                           
 14526                           ; BSR set to: 1
 14527                           ;incstack = 0
 14528  012044  5042               	movf	_MiWiAckRequired,w,c
 14529  012046  B4D8               	btfsc	status,2,c
 14530  012048  D00C               	goto	l11930
 14531  01204A  0101               	movlb	1	; () banked
 14532  01204C  5177               	movf	(_TxBuffer+11)& (0+255),w,b
 14533  01204E  B4D8               	btfsc	status,2,c
 14534  012050  D008               	goto	l11930
 14535                           
 14536                           ; BSR set to: 1
 14537                           ;miwi_mesh.c: 4572: {
 14538                           ;miwi_mesh.c: 4573: MiWiStateMachine.bits.MiWiAckInProgress = 1;
 14539  012052  0100               	movlb	0	; () banked
 14540  012054  87D4               	bsf	_MiWiStateMachine& (0+255),3,b
 14541                           
 14542                           ;miwi_mesh.c: 4574: AcknowledgementSeq = MiWiSeqNum;
 14543  012056  C0D7  F1FE         	movff	_MiWiSeqNum,_AcknowledgementSeq
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;miwi_mesh.c: 4575: MiWiFrameControl = 0x06;
 14547  01205A  0E06               	movlw	6
 14548  01205C  0102               	movlb	2	; () banked
 14549  01205E  6FF0               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 14550                           
 14551                           ;miwi_mesh.c: 4576: }
 14552  012060  D005               	goto	l829
 14553  012062                     l11930:
 14554                           
 14555                           ;miwi_mesh.c: 4577: else
 14556                           ;miwi_mesh.c: 4578: {
 14557                           ;miwi_mesh.c: 4579: MiWiFrameControl = 0x02;
 14558  012062  0E02               	movlw	2
 14559  012064  0102               	movlb	2	; () banked
 14560  012066  6FF0               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 14561                           
 14562                           ; BSR set to: 2
 14563                           ;miwi_mesh.c: 4580: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14564  012068  0100               	movlb	0	; () banked
 14565  01206A  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 14566  01206C                     l829:
 14567                           
 14568                           ;miwi_mesh.c: 4581: }
 14569                           ;miwi_mesh.c: 4583: if( PermanentAddr )
 14570  01206C  0101               	movlb	1	; () banked
 14571  01206E  51EA               	movf	MiApp_UnicastAddress@PermanentAddr& (0+255),w,b
 14572  012070  0101               	movlb	1	; () banked
 14573  012072  B4D8               	btfsc	status,2,c
 14574  012074  D16A               	goto	l12062
 14575                           
 14576                           ; BSR set to: 1
 14577                           ;miwi_mesh.c: 4584: {
 14578                           ;miwi_mesh.c: 4585: for(i = 0; i < 4; i++)
 14579  012076  0E00               	movlw	0
 14580  012078  0102               	movlb	2	; () banked
 14581  01207A  6FF1               	movwf	MiApp_UnicastAddress@i& (0+255),b
 14582  01207C                     l11936:
 14583                           
 14584                           ; BSR set to: 2
 14585  01207C  0E03               	movlw	3
 14586  01207E  0102               	movlb	2	; () banked
 14587  012080  65F1               	cpfsgt	MiApp_UnicastAddress@i& (0+255),b
 14588  012082  D001               	goto	l11940
 14589  012084  D019               	goto	l11946
 14590  012086                     l11940:
 14591                           
 14592                           ; BSR set to: 2
 14593                           ;miwi_mesh.c: 4586: {
 14594                           ;miwi_mesh.c: 4587: tempLongAddress[i] = DestAddress[i];
 14595  012086  0102               	movlb	2	; () banked
 14596  012088  51F1               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 14597  01208A  0D01               	mullw	1
 14598  01208C  50F3               	movf	prodl,w,c
 14599  01208E  0101               	movlb	1	; () banked
 14600  012090  25E8               	addwf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14601  012092  6ED9               	movwf	fsr2l,c
 14602  012094  50F4               	movf	prodh,w,c
 14603  012096  0101               	movlb	1	; () banked
 14604  012098  21E9               	addwfc	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14605  01209A  6EDA               	movwf	fsr2h,c
 14606  01209C  0102               	movlb	2	; () banked
 14607  01209E  51F1               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 14608  0120A0  0D01               	mullw	1
 14609  0120A2  0E4E               	movlw	low _tempLongAddress
 14610  0120A4  24F3               	addwf	prodl,w,c
 14611  0120A6  6EE1               	movwf	fsr1l,c
 14612  0120A8  0E01               	movlw	high _tempLongAddress
 14613  0120AA  20F4               	addwfc	prodh,w,c
 14614  0120AC  6EE2               	movwf	fsr1h,c
 14615  0120AE  CFDF FFE7          	movff	indf2,indf1
 14616                           
 14617                           ; BSR set to: 2
 14618  0120B2  0102               	movlb	2	; () banked
 14619  0120B4  2BF1               	incf	MiApp_UnicastAddress@i& (0+255),f,b
 14620  0120B6  D7E2               	goto	l11936
 14621  0120B8                     l11946:
 14622                           
 14623                           ; BSR set to: 2
 14624                           ;miwi_mesh.c: 4588: }
 14625                           ;miwi_mesh.c: 4589: if( (handle = SearchForLongAddress()) == 0xFF )
 14626  0120B8  ECCA  F0AB         	call	_SearchForLongAddress	;wreg free
 14627  0120BC  0102               	movlb	2	; () banked
 14628  0120BE  6FF2               	movwf	MiApp_UnicastAddress@handle& (0+255),b
 14629  0120C0  0102               	movlb	2	; () banked
 14630  0120C2  29F2               	incf	MiApp_UnicastAddress@handle& (0+255),w,b
 14631  0120C4  A4D8               	btfss	status,2,c
 14632  0120C6  D03D               	goto	l11986
 14633  0120C8                     l834:
 14634                           
 14635                           ; BSR set to: 2
 14636                           ;miwi_mesh.c: 4593: TxBuffer[0] = defaultHops;
 14637  0120C8  C04A  F16C         	movff	_defaultHops,_TxBuffer
 14638                           
 14639                           ; BSR set to: 2
 14640                           ;miwi_mesh.c: 4594: TxBuffer[1] = 0x02;
 14641  0120CC  0E02               	movlw	2
 14642  0120CE  0101               	movlb	1	; () banked
 14643  0120D0  6F6D               	movwf	(_TxBuffer+1)& (0+255),b
 14644                           
 14645                           ; BSR set to: 1
 14646                           ;miwi_mesh.c: 4595: TxBuffer[2] = 0xFF;
 14647  0120D2  0101               	movlb	1	; () banked
 14648  0120D4  696E               	setf	(_TxBuffer+2)& (0+255),b
 14649                           
 14650                           ; BSR set to: 1
 14651                           ;miwi_mesh.c: 4596: TxBuffer[3] = 0xFF;
 14652  0120D6  0101               	movlb	1	; () banked
 14653  0120D8  696F               	setf	(_TxBuffer+3)& (0+255),b
 14654                           
 14655                           ; BSR set to: 1
 14656                           ;miwi_mesh.c: 4597: TxBuffer[4] = 0xFF;
 14657  0120DA  0101               	movlb	1	; () banked
 14658  0120DC  6970               	setf	(_TxBuffer+4)& (0+255),b
 14659                           
 14660                           ; BSR set to: 1
 14661                           ;miwi_mesh.c: 4598: TxBuffer[5] = 0xFF;
 14662  0120DE  0101               	movlb	1	; () banked
 14663  0120E0  6971               	setf	(_TxBuffer+5)& (0+255),b
 14664                           
 14665                           ; BSR set to: 1
 14666                           ;miwi_mesh.c: 4599: TxBuffer[6] = myPANID.v[0];
 14667  0120E2  C0DB  F172         	movff	_myPANID,_TxBuffer+6
 14668                           
 14669                           ; BSR set to: 1
 14670                           ;miwi_mesh.c: 4600: TxBuffer[7] = myPANID.v[1];
 14671  0120E6  C0DC  F173         	movff	_myPANID+1,_TxBuffer+7
 14672                           
 14673                           ; BSR set to: 1
 14674                           ;miwi_mesh.c: 4601: TxBuffer[8] = myShortAddress.v[0];
 14675  0120EA  C0DD  F174         	movff	_myShortAddress,_TxBuffer+8
 14676                           
 14677                           ; BSR set to: 1
 14678                           ;miwi_mesh.c: 4602: TxBuffer[9] = myShortAddress.v[1];
 14679  0120EE  C0DE  F175         	movff	_myShortAddress+1,_TxBuffer+9
 14680                           
 14681                           ; BSR set to: 1
 14682                           ;miwi_mesh.c: 4603: TxBuffer[10] = MiWiSeqNum++;
 14683  0120F2  C0D7  F176         	movff	_MiWiSeqNum,_TxBuffer+10
 14684                           
 14685                           ; BSR set to: 1
 14686  0120F6  0100               	movlb	0	; () banked
 14687  0120F8  2BD7               	incf	_MiWiSeqNum& (0+255),f,b
 14688                           
 14689                           ; BSR set to: 0
 14690                           ;miwi_mesh.c: 4616: MTP.flags.Val = 0;
 14691  0120FA  0E00               	movlw	0
 14692  0120FC  0100               	movlb	0	; () banked
 14693  0120FE  6FD1               	movwf	_MTP& (0+255),b
 14694                           
 14695                           ; BSR set to: 0
 14696                           ;miwi_mesh.c: 4617: MTP.flags.bits.ackReq = 1;
 14697  012100  0100               	movlb	0	; () banked
 14698  012102  8BD1               	bsf	_MTP& (0+255),5,b
 14699                           
 14700                           ; BSR set to: 0
 14701                           ;miwi_mesh.c: 4618: MTP.flags.bits.secEn = SecEn;
 14702  012104  0101               	movlb	1	; () banked
 14703  012106  B1EB               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 14704  012108  D003               	bra	u13785
 14705  01210A  0100               	movlb	0	; () banked
 14706  01210C  97D1               	bcf	_MTP& (0+255),3,b
 14707  01210E  D002               	bra	u13786
 14708  012110                     u13785:
 14709  012110  0100               	movlb	0	; () banked
 14710  012112  87D1               	bsf	_MTP& (0+255),3,b
 14711  012114                     u13786:
 14712                           
 14713                           ; BSR set to: 0
 14714                           ;miwi_mesh.c: 4619: MTP.DestAddress = DestAddress;
 14715  012114  C1E8  F0D2         	movff	MiApp_UnicastAddress@DestAddress,_MTP+1
 14716  012118  C1E9  F0D3         	movff	MiApp_UnicastAddress@DestAddress+1,_MTP+2
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;miwi_mesh.c: 4625: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14720  01211C  0100               	movlb	0	; () banked
 14721  01211E  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 14722                           
 14723                           ; BSR set to: 0
 14724                           ;miwi_mesh.c: 4627: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 14725  012120  C0D1  F0B0         	movff	_MTP,MiMAC_SendPacket@transParam
 14726  012124  C0D2  F0B1         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 14727  012128  C0D3  F0B2         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 14728  01212C  0E6C               	movlw	low _TxBuffer
 14729  01212E  0100               	movlb	0	; () banked
 14730  012130  6FB3               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 14731  012132  0E01               	movlw	high _TxBuffer
 14732  012134  0100               	movlb	0	; () banked
 14733  012136  6FB4               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 14734  012138  C0D8  F0B5         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 14735  01213C  ECED  F09A         	call	_MiMAC_SendPacket	;wreg free
 14736  012140  0012               	return	
 14737  012142                     l11986:
 14738                           
 14739                           ;miwi_mesh.c: 4629: else
 14740                           ;miwi_mesh.c: 4630: {
 14741                           ;miwi_mesh.c: 4631: if( ConnectionTable[handle].status.bits.shortAddressValid == 0 )
 14742  012142  0102               	movlb	2	; () banked
 14743  012144  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14744  012146  0D09               	mullw	9
 14745  012148  0E08               	movlw	8
 14746  01214A  26F3               	addwf	prodl,f,c
 14747  01214C  0E00               	movlw	0
 14748  01214E  22F4               	addwfc	prodh,f,c
 14749  012150  0E46               	movlw	low _ConnectionTable
 14750  012152  24F3               	addwf	prodl,w,c
 14751  012154  6ED9               	movwf	fsr2l,c
 14752  012156  0E02               	movlw	high _ConnectionTable
 14753  012158  20F4               	addwfc	prodh,w,c
 14754  01215A  6EDA               	movwf	fsr2h,c
 14755  01215C  0102               	movlb	2	; () banked
 14756  01215E  A6DF               	btfss	indf2,3,c
 14757  012160  D7B3               	goto	l834
 14758                           
 14759                           ; BSR set to: 2
 14760                           ;miwi_mesh.c: 4634: }
 14761                           ;miwi_mesh.c: 4636: if( MiWiAckRequired )
 14762                           
 14763                           ; BSR set to: 2
 14764                           
 14765                           ; BSR set to: 2
 14766                           ;miwi_mesh.c: 4632: {
 14767                           ;miwi_mesh.c: 4633: goto DIRECT_LONG_ADDRESS;
 14768  012162  5042               	movf	_MiWiAckRequired,w,c
 14769  012164  B4D8               	btfsc	status,2,c
 14770  012166  D011               	goto	l11994
 14771                           
 14772                           ; BSR set to: 2
 14773                           ;miwi_mesh.c: 4637: {
 14774                           ;miwi_mesh.c: 4638: AcknowledgementAddr.Val = ConnectionTable[handle].AltAddress.Val;
 14775  012168  0102               	movlb	2	; () banked
 14776  01216A  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14777  01216C  0D09               	mullw	9
 14778  01216E  0E02               	movlw	2
 14779  012170  26F3               	addwf	prodl,f,c
 14780  012172  0E00               	movlw	0
 14781  012174  22F4               	addwfc	prodh,f,c
 14782  012176  0E46               	movlw	low _ConnectionTable
 14783  012178  24F3               	addwf	prodl,w,c
 14784  01217A  6ED9               	movwf	fsr2l,c
 14785  01217C  0E02               	movlw	high _ConnectionTable
 14786  01217E  20F4               	addwfc	prodh,w,c
 14787  012180  6EDA               	movwf	fsr2h,c
 14788  012182  CFDE F158          	movff	postinc2,_AcknowledgementAddr
 14789  012186  CFDD F159          	movff	postdec2,_AcknowledgementAddr+1
 14790  01218A                     l11994:
 14791                           
 14792                           ; BSR set to: 2
 14793                           ;miwi_mesh.c: 4639: }
 14794                           ;miwi_mesh.c: 4641: TxBuffer[0] = 4;
 14795  01218A  0E04               	movlw	4
 14796  01218C  0101               	movlb	1	; () banked
 14797  01218E  6F6C               	movwf	_TxBuffer& (0+255),b
 14798                           
 14799                           ; BSR set to: 1
 14800                           ;miwi_mesh.c: 4642: TxBuffer[1] = MiWiFrameControl;
 14801  012190  C2F0  F16D         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 14802                           
 14803                           ; BSR set to: 1
 14804                           ;miwi_mesh.c: 4643: TxBuffer[2] = ConnectionTable[handle].PANID.v[0];
 14805  012194  0102               	movlb	2	; () banked
 14806  012196  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14807  012198  0D09               	mullw	9
 14808  01219A  0E46               	movlw	low _ConnectionTable
 14809  01219C  24F3               	addwf	prodl,w,c
 14810  01219E  6ED9               	movwf	fsr2l,c
 14811  0121A0  0E02               	movlw	high _ConnectionTable
 14812  0121A2  20F4               	addwfc	prodh,w,c
 14813  0121A4  6EDA               	movwf	fsr2h,c
 14814  0121A6  50DF               	movf	indf2,w,c
 14815  0121A8  0101               	movlb	1	; () banked
 14816  0121AA  6F6E               	movwf	(_TxBuffer+2)& (0+255),b
 14817                           
 14818                           ; BSR set to: 1
 14819                           ;miwi_mesh.c: 4644: TxBuffer[3] = ConnectionTable[handle].PANID.v[1];
 14820  0121AC  0102               	movlb	2	; () banked
 14821  0121AE  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14822  0121B0  0D09               	mullw	9
 14823  0121B2  0E01               	movlw	1
 14824  0121B4  26F3               	addwf	prodl,f,c
 14825  0121B6  0E00               	movlw	0
 14826  0121B8  22F4               	addwfc	prodh,f,c
 14827  0121BA  0E46               	movlw	low _ConnectionTable
 14828  0121BC  24F3               	addwf	prodl,w,c
 14829  0121BE  6ED9               	movwf	fsr2l,c
 14830  0121C0  0E02               	movlw	high _ConnectionTable
 14831  0121C2  20F4               	addwfc	prodh,w,c
 14832  0121C4  6EDA               	movwf	fsr2h,c
 14833  0121C6  50DF               	movf	indf2,w,c
 14834  0121C8  0101               	movlb	1	; () banked
 14835  0121CA  6F6F               	movwf	(_TxBuffer+3)& (0+255),b
 14836                           
 14837                           ; BSR set to: 1
 14838                           ;miwi_mesh.c: 4645: TxBuffer[4] = ConnectionTable[handle].AltAddress.v[0];
 14839  0121CC  0102               	movlb	2	; () banked
 14840  0121CE  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14841  0121D0  0D09               	mullw	9
 14842  0121D2  0E02               	movlw	2
 14843  0121D4  26F3               	addwf	prodl,f,c
 14844  0121D6  0E00               	movlw	0
 14845  0121D8  22F4               	addwfc	prodh,f,c
 14846  0121DA  0E46               	movlw	low _ConnectionTable
 14847  0121DC  24F3               	addwf	prodl,w,c
 14848  0121DE  6ED9               	movwf	fsr2l,c
 14849  0121E0  0E02               	movlw	high _ConnectionTable
 14850  0121E2  20F4               	addwfc	prodh,w,c
 14851  0121E4  6EDA               	movwf	fsr2h,c
 14852  0121E6  50DF               	movf	indf2,w,c
 14853  0121E8  0101               	movlb	1	; () banked
 14854  0121EA  6F70               	movwf	(_TxBuffer+4)& (0+255),b
 14855                           
 14856                           ; BSR set to: 1
 14857                           ;miwi_mesh.c: 4646: TxBuffer[5] = ConnectionTable[handle].AltAddress.v[1];
 14858  0121EC  0102               	movlb	2	; () banked
 14859  0121EE  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14860  0121F0  0D09               	mullw	9
 14861  0121F2  0E03               	movlw	3
 14862  0121F4  26F3               	addwf	prodl,f,c
 14863  0121F6  0E00               	movlw	0
 14864  0121F8  22F4               	addwfc	prodh,f,c
 14865  0121FA  0E46               	movlw	low _ConnectionTable
 14866  0121FC  24F3               	addwf	prodl,w,c
 14867  0121FE  6ED9               	movwf	fsr2l,c
 14868  012200  0E02               	movlw	high _ConnectionTable
 14869  012202  20F4               	addwfc	prodh,w,c
 14870  012204  6EDA               	movwf	fsr2h,c
 14871  012206  50DF               	movf	indf2,w,c
 14872  012208  0101               	movlb	1	; () banked
 14873  01220A  6F71               	movwf	(_TxBuffer+5)& (0+255),b
 14874                           
 14875                           ; BSR set to: 1
 14876                           ;miwi_mesh.c: 4647: TxBuffer[6] = myPANID.v[0];
 14877  01220C  C0DB  F172         	movff	_myPANID,_TxBuffer+6
 14878                           
 14879                           ; BSR set to: 1
 14880                           ;miwi_mesh.c: 4648: TxBuffer[7] = myPANID.v[1];
 14881  012210  C0DC  F173         	movff	_myPANID+1,_TxBuffer+7
 14882                           
 14883                           ; BSR set to: 1
 14884                           ;miwi_mesh.c: 4649: TxBuffer[8] = myShortAddress.v[0];
 14885  012214  C0DD  F174         	movff	_myShortAddress,_TxBuffer+8
 14886                           
 14887                           ; BSR set to: 1
 14888                           ;miwi_mesh.c: 4650: TxBuffer[9] = myShortAddress.v[1];
 14889  012218  C0DE  F175         	movff	_myShortAddress+1,_TxBuffer+9
 14890                           
 14891                           ; BSR set to: 1
 14892                           ;miwi_mesh.c: 4651: TxBuffer[10] = MiWiSeqNum++;
 14893  01221C  C0D7  F176         	movff	_MiWiSeqNum,_TxBuffer+10
 14894                           
 14895                           ; BSR set to: 1
 14896  012220  0100               	movlb	0	; () banked
 14897  012222  2BD7               	incf	_MiWiSeqNum& (0+255),f,b
 14898                           
 14899                           ; BSR set to: 0
 14900                           ;miwi_mesh.c: 4696: MTP.flags.Val = 0;
 14901  012224  0E00               	movlw	0
 14902  012226  0100               	movlb	0	; () banked
 14903  012228  6FD1               	movwf	_MTP& (0+255),b
 14904                           
 14905                           ; BSR set to: 0
 14906                           ;miwi_mesh.c: 4697: MTP.flags.bits.ackReq = 1;
 14907  01222A  0100               	movlb	0	; () banked
 14908  01222C  8BD1               	bsf	_MTP& (0+255),5,b
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;miwi_mesh.c: 4698: MTP.flags.bits.secEn = SecEn;
 14912  01222E  0101               	movlb	1	; () banked
 14913  012230  B1EB               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 14914  012232  D003               	bra	u13815
 14915  012234  0100               	movlb	0	; () banked
 14916  012236  97D1               	bcf	_MTP& (0+255),3,b
 14917  012238  D002               	bra	u13816
 14918  01223A                     u13815:
 14919  01223A  0100               	movlb	0	; () banked
 14920  01223C  87D1               	bsf	_MTP& (0+255),3,b
 14921  01223E                     u13816:
 14922                           
 14923                           ; BSR set to: 0
 14924                           ;miwi_mesh.c: 4706: MTP.DestAddress = ConnectionTable[myParent].Address;
 14925  01223E  0100               	movlb	0	; () banked
 14926  012240  51D9               	movf	_myParent& (0+255),w,b
 14927  012242  0D09               	mullw	9
 14928  012244  0E04               	movlw	4
 14929  012246  26F3               	addwf	prodl,f,c
 14930  012248  0E00               	movlw	0
 14931  01224A  22F4               	addwfc	prodh,f,c
 14932  01224C  0E46               	movlw	low _ConnectionTable
 14933  01224E  24F3               	addwf	prodl,w,c
 14934  012250  0100               	movlb	0	; () banked
 14935  012252  6FD2               	movwf	(_MTP+1)& (0+255),b
 14936  012254  0E02               	movlw	high _ConnectionTable
 14937  012256  20F4               	addwfc	prodh,w,c
 14938  012258  0100               	movlb	0	; () banked
 14939  01225A  6FD3               	movwf	(_MTP+2)& (0+255),b
 14940                           
 14941                           ; BSR set to: 0
 14942                           ;miwi_mesh.c: 4709: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 14943  01225C  C0D1  F0B0         	movff	_MTP,MiMAC_SendPacket@transParam
 14944  012260  C0D2  F0B1         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 14945  012264  C0D3  F0B2         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 14946  012268  0E6C               	movlw	low _TxBuffer
 14947  01226A  0100               	movlb	0	; () banked
 14948  01226C  6FB3               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 14949  01226E  0E01               	movlw	high _TxBuffer
 14950  012270  0100               	movlb	0	; () banked
 14951  012272  6FB4               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 14952  012274  C0D8  F0B5         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 14953  012278  ECED  F09A         	call	_MiMAC_SendPacket	;wreg free
 14954  01227C  0900               	iorlw	0
 14955  01227E  A4D8               	btfss	status,2,c
 14956  012280  D004               	goto	l839
 14957                           
 14958                           ;miwi_mesh.c: 4710: {
 14959                           ;miwi_mesh.c: 4711: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14960  012282  0100               	movlb	0	; () banked
 14961  012284  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 14962                           
 14963                           ; BSR set to: 0
 14964                           ;miwi_mesh.c: 4712: return 0;
 14965  012286  0E00               	movlw	0
 14966                           
 14967                           ; BSR set to: 0
 14968  012288  0012               	return	
 14969  01228A                     l839:
 14970                           
 14971                           ;miwi_mesh.c: 4714: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 14972  01228A  0100               	movlb	0	; () banked
 14973  01228C  A7D4               	btfss	_MiWiStateMachine& (0+255),3,b
 14974  01228E  D05B               	goto	l12058
 14975                           
 14976                           ; BSR set to: 0
 14977                           ;miwi_mesh.c: 4715: {
 14978                           ;miwi_mesh.c: 4716: MIWI_TICK t1, t2;
 14979                           ;miwi_mesh.c: 4717: t1 = MiWi_TickGet();
 14980  012290  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 14981  012294  C081  F2E0         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1
 14982  012298  C082  F2E1         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1+1
 14983  01229C  C083  F2E2         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1+2
 14984  0122A0  C084  F2E3         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1+3
 14985  0122A4                     l12038:
 14986                           
 14987                           ;miwi_mesh.c: 4719: {
 14988                           ;miwi_mesh.c: 4720: if( MiApp_MessageAvailable())
 14989  0122A4  EC85  F0B5         	call	_MiApp_MessageAvailable	;wreg free
 14990  0122A8  0900               	iorlw	0
 14991  0122AA  A4D8               	btfss	status,2,c
 14992                           
 14993                           ;miwi_mesh.c: 4721: {
 14994                           ;miwi_mesh.c: 4722: MiApp_DiscardMessage();
 14995  0122AC  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
 14996                           
 14997                           ;miwi_mesh.c: 4723: }
 14998                           ;miwi_mesh.c: 4725: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 14999  0122B0  0100               	movlb	0	; () banked
 15000  0122B2  B7D4               	btfsc	_MiWiStateMachine& (0+255),3,b
 15001  0122B4  D002               	goto	l12048
 15002                           
 15003                           ; BSR set to: 0
 15004                           ;miwi_mesh.c: 4726: {
 15005                           ;miwi_mesh.c: 4727: return 1;
 15006  0122B6  0E01               	movlw	1
 15007                           
 15008                           ; BSR set to: 0
 15009  0122B8  0012               	return	
 15010  0122BA                     l12048:
 15011                           
 15012                           ; BSR set to: 0
 15013                           ;miwi_mesh.c: 4728: }
 15014                           ;miwi_mesh.c: 4729: t2 = MiWi_TickGet();
 15015  0122BA  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 15016  0122BE  C081  F2E4         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2
 15017  0122C2  C082  F2E5         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2+1
 15018  0122C6  C083  F2E6         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2+2
 15019  0122CA  C084  F2E7         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2+3
 15020                           
 15021                           ;miwi_mesh.c: 4730: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 15022  0122CE  C2E0  F1EC         	movff	MiApp_UnicastAddress@t1,??_MiApp_UnicastAddress
 15023  0122D2  C2E1  F1ED         	movff	MiApp_UnicastAddress@t1+1,??_MiApp_UnicastAddress+1
 15024  0122D6  C2E2  F1EE         	movff	MiApp_UnicastAddress@t1+2,??_MiApp_UnicastAddress+2
 15025  0122DA  C2E3  F1EF         	movff	MiApp_UnicastAddress@t1+3,??_MiApp_UnicastAddress+3
 15026  0122DE  0101               	movlb	1	; () banked
 15027  0122E0  1FEC               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 15028  0122E2  1FED               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15029  0122E4  1FEE               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15030  0122E6  1FEF               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15031  0122E8  2BEC               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 15032  0122EA  0E00               	movlw	0
 15033  0122EC  23ED               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15034  0122EE  23EE               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15035  0122F0  23EF               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15036  0122F2  0102               	movlb	2	; () banked
 15037  0122F4  51E4               	movf	MiApp_UnicastAddress@t2& (0+255),w,b
 15038  0122F6  0101               	movlb	1	; () banked
 15039  0122F8  25EC               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 15040  0122FA  0101               	movlb	1	; () banked
 15041  0122FC  6FF0               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 15042  0122FE  0102               	movlb	2	; () banked
 15043  012300  51E5               	movf	(MiApp_UnicastAddress@t2+1)& (0+255),w,b
 15044  012302  0101               	movlb	1	; () banked
 15045  012304  21ED               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 15046  012306  0101               	movlb	1	; () banked
 15047  012308  6FF1               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 15048  01230A  0102               	movlb	2	; () banked
 15049  01230C  51E6               	movf	(MiApp_UnicastAddress@t2+2)& (0+255),w,b
 15050  01230E  0101               	movlb	1	; () banked
 15051  012310  21EE               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 15052  012312  0101               	movlb	1	; () banked
 15053  012314  6FF2               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 15054  012316  0102               	movlb	2	; () banked
 15055  012318  51E7               	movf	(MiApp_UnicastAddress@t2+3)& (0+255),w,b
 15056  01231A  0101               	movlb	1	; () banked
 15057  01231C  21EF               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 15058  01231E  0101               	movlb	1	; () banked
 15059  012320  6FF3               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 15060  012322  0101               	movlb	1	; () banked
 15061  012324  51F3               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 15062  012326  E10B               	bnz	u13860
 15063  012328  0E21               	movlw	33
 15064  01232A  0101               	movlb	1	; () banked
 15065  01232C  5DF0               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 15066  01232E  0EA1               	movlw	161
 15067  012330  0101               	movlb	1	; () banked
 15068  012332  59F1               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 15069  012334  0E07               	movlw	7
 15070  012336  0101               	movlb	1	; () banked
 15071  012338  59F2               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 15072  01233A  A0D8               	btfss	status,0,c
 15073  01233C  D7B3               	goto	l12038
 15074  01233E                     u13860:
 15075                           
 15076                           ; BSR set to: 1
 15077                           ;miwi_mesh.c: 4731: {
 15078                           ;miwi_mesh.c: 4732: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15079  01233E  0100               	movlb	0	; () banked
 15080  012340  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 15081                           
 15082                           ; BSR set to: 0
 15083                           ;miwi_mesh.c: 4733: return 0;
 15084  012342  0E00               	movlw	0
 15085                           
 15086                           ; BSR set to: 0
 15087  012344  0012               	return	
 15088  012346                     l12058:
 15089                           
 15090                           ; BSR set to: 0
 15091                           ;miwi_mesh.c: 4734: }
 15092                           ;miwi_mesh.c: 4735: }
 15093                           ;miwi_mesh.c: 4736: }
 15094                           ;miwi_mesh.c: 4737: return 1;
 15095  012346  0E01               	movlw	1
 15096                           
 15097                           ; BSR set to: 0
 15098  012348  0012               	return	
 15099  01234A                     l12062:
 15100                           
 15101                           ;miwi_mesh.c: 4739: }
 15102                           ;miwi_mesh.c: 4740: }
 15103                           ;miwi_mesh.c: 4742: TxBuffer[0] = 4;
 15104  01234A  0E04               	movlw	4
 15105  01234C  0101               	movlb	1	; () banked
 15106  01234E  6F6C               	movwf	_TxBuffer& (0+255),b
 15107                           
 15108                           ; BSR set to: 1
 15109                           ;miwi_mesh.c: 4743: TxBuffer[1] = MiWiFrameControl;
 15110  012350  C2F0  F16D         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 15111                           
 15112                           ; BSR set to: 1
 15113                           ;miwi_mesh.c: 4744: TxBuffer[2] = myPANID.v[0];
 15114  012354  C0DB  F16E         	movff	_myPANID,_TxBuffer+2
 15115                           
 15116                           ; BSR set to: 1
 15117                           ;miwi_mesh.c: 4745: TxBuffer[3] = myPANID.v[1];
 15118  012358  C0DC  F16F         	movff	_myPANID+1,_TxBuffer+3
 15119                           
 15120                           ; BSR set to: 1
 15121                           ;miwi_mesh.c: 4746: TxBuffer[4] = DestAddress[0];
 15122  01235C  C1E8  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 15123  012360  C1E9  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 15124  012364  50DF               	movf	indf2,w,c
 15125  012366  0101               	movlb	1	; () banked
 15126  012368  6F70               	movwf	(_TxBuffer+4)& (0+255),b
 15127                           
 15128                           ; BSR set to: 1
 15129                           ;miwi_mesh.c: 4747: TxBuffer[5] = DestAddress[1];
 15130  01236A  0101               	movlb	1	; () banked
 15131  01236C  EE20 F001          	lfsr	2,1
 15132  012370  51E8               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 15133  012372  26D9               	addwf	fsr2l,f,c
 15134  012374  51E9               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 15135  012376  22DA               	addwfc	fsr2h,f,c
 15136  012378  50DF               	movf	indf2,w,c
 15137  01237A  0101               	movlb	1	; () banked
 15138  01237C  6F71               	movwf	(_TxBuffer+5)& (0+255),b
 15139                           
 15140                           ; BSR set to: 1
 15141                           ;miwi_mesh.c: 4748: TxBuffer[6] = myPANID.v[0];
 15142  01237E  C0DB  F172         	movff	_myPANID,_TxBuffer+6
 15143                           
 15144                           ; BSR set to: 1
 15145                           ;miwi_mesh.c: 4749: TxBuffer[7] = myPANID.v[1];
 15146  012382  C0DC  F173         	movff	_myPANID+1,_TxBuffer+7
 15147                           
 15148                           ; BSR set to: 1
 15149                           ;miwi_mesh.c: 4750: TxBuffer[8] = myShortAddress.v[0];
 15150  012386  C0DD  F174         	movff	_myShortAddress,_TxBuffer+8
 15151                           
 15152                           ; BSR set to: 1
 15153                           ;miwi_mesh.c: 4751: TxBuffer[9] = myShortAddress.v[1];
 15154  01238A  C0DE  F175         	movff	_myShortAddress+1,_TxBuffer+9
 15155                           
 15156                           ; BSR set to: 1
 15157                           ;miwi_mesh.c: 4752: TxBuffer[10] = MiWiSeqNum++;
 15158  01238E  C0D7  F176         	movff	_MiWiSeqNum,_TxBuffer+10
 15159                           
 15160                           ; BSR set to: 1
 15161  012392  0100               	movlb	0	; () banked
 15162  012394  2BD7               	incf	_MiWiSeqNum& (0+255),f,b
 15163                           
 15164                           ; BSR set to: 0
 15165                           ;miwi_mesh.c: 4754: AcknowledgementAddr.v[0] = DestAddress[0];
 15166  012396  C1E8  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 15167  01239A  C1E9  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 15168  01239E  50DF               	movf	indf2,w,c
 15169  0123A0  0101               	movlb	1	; () banked
 15170  0123A2  6F58               	movwf	_AcknowledgementAddr& (0+255),b
 15171                           
 15172                           ; BSR set to: 1
 15173                           ;miwi_mesh.c: 4755: AcknowledgementAddr.v[1] = DestAddress[1];
 15174  0123A4  0101               	movlb	1	; () banked
 15175  0123A6  EE20 F001          	lfsr	2,1
 15176  0123AA  51E8               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 15177  0123AC  26D9               	addwf	fsr2l,f,c
 15178  0123AE  51E9               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 15179  0123B0  22DA               	addwfc	fsr2h,f,c
 15180  0123B2  50DF               	movf	indf2,w,c
 15181  0123B4  0101               	movlb	1	; () banked
 15182  0123B6  6F59               	movwf	(_AcknowledgementAddr+1)& (0+255),b
 15183                           
 15184                           ; BSR set to: 1
 15185                           ;miwi_mesh.c: 4803: MTP.flags.Val = 0;
 15186  0123B8  0E00               	movlw	0
 15187  0123BA  0100               	movlb	0	; () banked
 15188  0123BC  6FD1               	movwf	_MTP& (0+255),b
 15189                           
 15190                           ; BSR set to: 0
 15191                           ;miwi_mesh.c: 4804: MTP.flags.bits.ackReq = 1;
 15192  0123BE  0100               	movlb	0	; () banked
 15193  0123C0  8BD1               	bsf	_MTP& (0+255),5,b
 15194                           
 15195                           ; BSR set to: 0
 15196                           ;miwi_mesh.c: 4805: MTP.flags.bits.secEn = SecEn;
 15197  0123C2  0101               	movlb	1	; () banked
 15198  0123C4  B1EB               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 15199  0123C6  D003               	bra	u13875
 15200  0123C8  0100               	movlb	0	; () banked
 15201  0123CA  97D1               	bcf	_MTP& (0+255),3,b
 15202  0123CC  D002               	bra	u13876
 15203  0123CE                     u13875:
 15204  0123CE  0100               	movlb	0	; () banked
 15205  0123D0  87D1               	bsf	_MTP& (0+255),3,b
 15206  0123D2                     u13876:
 15207                           
 15208                           ; BSR set to: 0
 15209                           ;miwi_mesh.c: 4813: MTP.DestAddress = ConnectionTable[myParent].Address;
 15210  0123D2  0100               	movlb	0	; () banked
 15211  0123D4  51D9               	movf	_myParent& (0+255),w,b
 15212  0123D6  0D09               	mullw	9
 15213  0123D8  0E04               	movlw	4
 15214  0123DA  26F3               	addwf	prodl,f,c
 15215  0123DC  0E00               	movlw	0
 15216  0123DE  22F4               	addwfc	prodh,f,c
 15217  0123E0  0E46               	movlw	low _ConnectionTable
 15218  0123E2  24F3               	addwf	prodl,w,c
 15219  0123E4  0100               	movlb	0	; () banked
 15220  0123E6  6FD2               	movwf	(_MTP+1)& (0+255),b
 15221  0123E8  0E02               	movlw	high _ConnectionTable
 15222  0123EA  20F4               	addwfc	prodh,w,c
 15223  0123EC  0100               	movlb	0	; () banked
 15224  0123EE  6FD3               	movwf	(_MTP+2)& (0+255),b
 15225                           
 15226                           ; BSR set to: 0
 15227                           ;miwi_mesh.c: 4817: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 15228  0123F0  C0D1  F0B0         	movff	_MTP,MiMAC_SendPacket@transParam
 15229  0123F4  C0D2  F0B1         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15230  0123F8  C0D3  F0B2         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15231  0123FC  0E6C               	movlw	low _TxBuffer
 15232  0123FE  0100               	movlb	0	; () banked
 15233  012400  6FB3               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15234  012402  0E01               	movlw	high _TxBuffer
 15235  012404  0100               	movlb	0	; () banked
 15236  012406  6FB4               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15237  012408  C0D8  F0B5         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15238  01240C  ECED  F09A         	call	_MiMAC_SendPacket	;wreg free
 15239  012410  0900               	iorlw	0
 15240  012412  A4D8               	btfss	status,2,c
 15241  012414  D004               	goto	l848
 15242                           
 15243                           ;miwi_mesh.c: 4818: {
 15244                           ;miwi_mesh.c: 4819: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15245  012416  0100               	movlb	0	; () banked
 15246  012418  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 15247                           
 15248                           ; BSR set to: 0
 15249                           ;miwi_mesh.c: 4820: return 0;
 15250  01241A  0E00               	movlw	0
 15251                           
 15252                           ; BSR set to: 0
 15253  01241C  0012               	return	
 15254  01241E                     l848:
 15255                           
 15256                           ;miwi_mesh.c: 4822: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 15257  01241E  0100               	movlb	0	; () banked
 15258  012420  A7D4               	btfss	_MiWiStateMachine& (0+255),3,b
 15259  012422  D05B               	goto	l12130
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;miwi_mesh.c: 4823: {
 15263                           ;miwi_mesh.c: 4824: MIWI_TICK t1, t2;
 15264                           ;miwi_mesh.c: 4825: t1 = MiWi_TickGet();
 15265  012424  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 15266  012428  C081  F2E8         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1_2763
 15267  01242C  C082  F2E9         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1_2763+1
 15268  012430  C083  F2EA         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1_2763+2
 15269  012434  C084  F2EB         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1_2763+3
 15270  012438                     l12110:
 15271                           
 15272                           ;miwi_mesh.c: 4827: {
 15273                           ;miwi_mesh.c: 4828: if( MiApp_MessageAvailable())
 15274  012438  EC85  F0B5         	call	_MiApp_MessageAvailable	;wreg free
 15275  01243C  0900               	iorlw	0
 15276  01243E  A4D8               	btfss	status,2,c
 15277                           
 15278                           ;miwi_mesh.c: 4829: {
 15279                           ;miwi_mesh.c: 4830: MiApp_DiscardMessage();
 15280  012440  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
 15281                           
 15282                           ;miwi_mesh.c: 4831: }
 15283                           ;miwi_mesh.c: 4833: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 15284  012444  0100               	movlb	0	; () banked
 15285  012446  B7D4               	btfsc	_MiWiStateMachine& (0+255),3,b
 15286  012448  D002               	goto	l12120
 15287                           
 15288                           ; BSR set to: 0
 15289                           ;miwi_mesh.c: 4834: {
 15290                           ;miwi_mesh.c: 4835: return 1;
 15291  01244A  0E01               	movlw	1
 15292                           
 15293                           ; BSR set to: 0
 15294  01244C  0012               	return	
 15295  01244E                     l12120:
 15296                           
 15297                           ; BSR set to: 0
 15298                           ;miwi_mesh.c: 4836: }
 15299                           ;miwi_mesh.c: 4837: t2 = MiWi_TickGet();
 15300  01244E  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 15301  012452  C081  F2EC         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2_2774
 15302  012456  C082  F2ED         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2_2774+1
 15303  01245A  C083  F2EE         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2_2774+2
 15304  01245E  C084  F2EF         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2_2774+3
 15305                           
 15306                           ;miwi_mesh.c: 4838: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 15307  012462  C2E8  F1EC         	movff	MiApp_UnicastAddress@t1_2763,??_MiApp_UnicastAddress
 15308  012466  C2E9  F1ED         	movff	MiApp_UnicastAddress@t1_2763+1,??_MiApp_UnicastAddress+1
 15309  01246A  C2EA  F1EE         	movff	MiApp_UnicastAddress@t1_2763+2,??_MiApp_UnicastAddress+2
 15310  01246E  C2EB  F1EF         	movff	MiApp_UnicastAddress@t1_2763+3,??_MiApp_UnicastAddress+3
 15311  012472  0101               	movlb	1	; () banked
 15312  012474  1FEC               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 15313  012476  1FED               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15314  012478  1FEE               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15315  01247A  1FEF               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15316  01247C  2BEC               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 15317  01247E  0E00               	movlw	0
 15318  012480  23ED               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15319  012482  23EE               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15320  012484  23EF               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15321  012486  0102               	movlb	2	; () banked
 15322  012488  51EC               	movf	MiApp_UnicastAddress@t2_2774& (0+255),w,b
 15323  01248A  0101               	movlb	1	; () banked
 15324  01248C  25EC               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 15325  01248E  0101               	movlb	1	; () banked
 15326  012490  6FF0               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 15327  012492  0102               	movlb	2	; () banked
 15328  012494  51ED               	movf	(MiApp_UnicastAddress@t2_2774+1)& (0+255),w,b
 15329  012496  0101               	movlb	1	; () banked
 15330  012498  21ED               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 15331  01249A  0101               	movlb	1	; () banked
 15332  01249C  6FF1               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 15333  01249E  0102               	movlb	2	; () banked
 15334  0124A0  51EE               	movf	(MiApp_UnicastAddress@t2_2774+2)& (0+255),w,b
 15335  0124A2  0101               	movlb	1	; () banked
 15336  0124A4  21EE               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 15337  0124A6  0101               	movlb	1	; () banked
 15338  0124A8  6FF2               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 15339  0124AA  0102               	movlb	2	; () banked
 15340  0124AC  51EF               	movf	(MiApp_UnicastAddress@t2_2774+3)& (0+255),w,b
 15341  0124AE  0101               	movlb	1	; () banked
 15342  0124B0  21EF               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 15343  0124B2  0101               	movlb	1	; () banked
 15344  0124B4  6FF3               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 15345  0124B6  0101               	movlb	1	; () banked
 15346  0124B8  51F3               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 15347  0124BA  E10B               	bnz	u13920
 15348  0124BC  0E21               	movlw	33
 15349  0124BE  0101               	movlb	1	; () banked
 15350  0124C0  5DF0               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 15351  0124C2  0EA1               	movlw	161
 15352  0124C4  0101               	movlb	1	; () banked
 15353  0124C6  59F1               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 15354  0124C8  0E07               	movlw	7
 15355  0124CA  0101               	movlb	1	; () banked
 15356  0124CC  59F2               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 15357  0124CE  A0D8               	btfss	status,0,c
 15358  0124D0  D7B3               	goto	l12110
 15359  0124D2                     u13920:
 15360                           
 15361                           ; BSR set to: 1
 15362                           ;miwi_mesh.c: 4839: {
 15363                           ;miwi_mesh.c: 4840: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15364  0124D2  0100               	movlb	0	; () banked
 15365  0124D4  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;miwi_mesh.c: 4841: return 0;
 15369  0124D6  0E00               	movlw	0
 15370                           
 15371                           ; BSR set to: 0
 15372  0124D8  0012               	return	
 15373  0124DA                     l12130:
 15374                           
 15375                           ; BSR set to: 0
 15376                           ;miwi_mesh.c: 4842: }
 15377                           ;miwi_mesh.c: 4843: }
 15378                           ;miwi_mesh.c: 4844: }
 15379                           ;miwi_mesh.c: 4846: return 1;
 15380  0124DA  0E01               	movlw	1
 15381  0124DC  0012               	return	
 15382  0124DE                     __end_of_MiApp_UnicastAddress:
 15383                           	opt stack 0
 15384                           tblptru	equ	0xFF8
 15385                           tblptrh	equ	0xFF7
 15386                           tblptrl	equ	0xFF6
 15387                           tablat	equ	0xFF5
 15388                           prodh	equ	0xFF4
 15389                           prodl	equ	0xFF3
 15390                           intcon	equ	0xFF2
 15391                           intcon2	equ	0xFF1
 15392                           intcon3	equ	0xFF0
 15393                           indf0	equ	0xFEF
 15394                           postinc0	equ	0xFEE
 15395                           plusw0	equ	0xFEB
 15396                           fsr0h	equ	0xFEA
 15397                           fsr0l	equ	0xFE9
 15398                           wreg	equ	0xFE8
 15399                           indf1	equ	0xFE7
 15400                           postinc1	equ	0xFE6
 15401                           postdec1	equ	0xFE5
 15402                           fsr1h	equ	0xFE2
 15403                           fsr1l	equ	0xFE1
 15404                           indf2	equ	0xFDF
 15405                           postinc2	equ	0xFDE
 15406                           postdec2	equ	0xFDD
 15407                           plusw2	equ	0xFDB
 15408                           fsr2h	equ	0xFDA
 15409                           fsr2l	equ	0xFD9
 15410                           status	equ	0xFD8
 15411                           
 15412 ;; *************** function _MiApp_SearchConnection *****************
 15413 ;; Defined at:
 15414 ;;		line 3979 in file "src/miwi/miwi_mesh.c"
 15415 ;; Parameters:    Size  Location     Type
 15416 ;;  ScanDuration    1    wreg     unsigned char 
 15417 ;;  ChannelMap      4   21[BANK1 ] unsigned long 
 15418 ;; Auto vars:     Size  Location     Type
 15419 ;;  ScanDuration    1   12[BANK2 ] unsigned char 
 15420 ;;  t2              4    8[BANK2 ] struct _MIWI_TICK
 15421 ;;  t1              4    4[BANK2 ] struct _MIWI_TICK
 15422 ;;  channelMask     4    0[BANK2 ] unsigned long 
 15423 ;;  i               1   14[BANK2 ] unsigned char 
 15424 ;;  backupChanne    1   13[BANK2 ] unsigned char 
 15425 ;; Return value:  Size  Location     Type
 15426 ;;                  1    wreg      unsigned char 
 15427 ;; Registers used:
 15428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15429 ;; Tracked objects:
 15430 ;;		On entry : 0/0
 15431 ;;		On exit  : 0/0
 15432 ;;		Unchanged: 0/0
 15433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15434 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15435 ;;      Locals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15436 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15437 ;;      Totals:         0       0      13      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15438 ;;Total ram usage:       28 bytes
 15439 ;; Hardware stack levels used:    1
 15440 ;; Hardware stack levels required when called:   14
 15441 ;; This function calls:
 15442 ;;		_MiApp_DiscardMessage
 15443 ;;		_MiApp_MessageAvailable
 15444 ;;		_MiApp_SetChannel
 15445 ;;		_MiWi_TickGet
 15446 ;;		_SendMACPacket
 15447 ;; This function is called by:
 15448 ;;		_MiApp_EstablishConnection
 15449 ;;		_main
 15450 ;; This function uses a non-reentrant model
 15451 ;;
 15452                           
 15453                           	psect	text49
 15454  013A3E                     __ptext49:
 15455                           	opt stack 0
 15456  013A3E                     _MiApp_SearchConnection:
 15457                           	opt stack 16
 15458                           
 15459                           ;incstack = 0
 15460                           ;MiApp_SearchConnection@ScanDuration stored from wreg
 15461  013A3E  0102               	movlb	2	; () banked
 15462  013A40  6FEC               	movwf	MiApp_SearchConnection@ScanDuration& (0+255),b
 15463                           
 15464                           ;miwi_mesh.c: 3981: uint8_t i;
 15465                           ;miwi_mesh.c: 3982: uint32_t channelMask = 0x00000001;
 15466  013A42  0E01               	movlw	1
 15467  013A44  0102               	movlb	2	; () banked
 15468  013A46  6FE0               	movwf	MiApp_SearchConnection@channelMask& (0+255),b
 15469  013A48  0E00               	movlw	0
 15470  013A4A  6FE1               	movwf	(MiApp_SearchConnection@channelMask+1)& (0+255),b
 15471  013A4C  0E00               	movlw	0
 15472  013A4E  6FE2               	movwf	(MiApp_SearchConnection@channelMask+2)& (0+255),b
 15473  013A50  0E00               	movlw	0
 15474  013A52  6FE3               	movwf	(MiApp_SearchConnection@channelMask+3)& (0+255),b
 15475                           
 15476                           ; BSR set to: 2
 15477                           ;miwi_mesh.c: 3983: uint8_t backupChannel = currentChannel;
 15478  013A54  C1D2  F2ED         	movff	_currentChannel,MiApp_SearchConnection@backupChannel
 15479                           
 15480                           ;miwi_mesh.c: 3984: MIWI_TICK t1, t2;
 15481                           ;miwi_mesh.c: 3986: for(i = 0; i < 8; i++)
 15482  013A58  0E00               	movlw	0
 15483  013A5A  0102               	movlb	2	; () banked
 15484  013A5C  6FEE               	movwf	MiApp_SearchConnection@i& (0+255),b
 15485  013A5E                     l12778:
 15486                           
 15487                           ; BSR set to: 2
 15488  013A5E  0E07               	movlw	7
 15489  013A60  0102               	movlb	2	; () banked
 15490  013A62  65EE               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
 15491  013A64  D001               	goto	l12782
 15492  013A66  D00E               	goto	l12788
 15493  013A68                     l12782:
 15494                           
 15495                           ; BSR set to: 2
 15496                           ;miwi_mesh.c: 3987: {
 15497                           ;miwi_mesh.c: 3988: ActiveScanResults[i].Channel = 0xFF;
 15498  013A68  0102               	movlb	2	; () banked
 15499  013A6A  51EE               	movf	MiApp_SearchConnection@i& (0+255),w,b
 15500  013A6C  0D0A               	mullw	10
 15501  013A6E  0E00               	movlw	low _ActiveScanResults
 15502  013A70  24F3               	addwf	prodl,w,c
 15503  013A72  6ED9               	movwf	fsr2l,c
 15504  013A74  0E03               	movlw	high _ActiveScanResults
 15505  013A76  20F4               	addwfc	prodh,w,c
 15506  013A78  6EDA               	movwf	fsr2h,c
 15507  013A7A  0EFF               	movlw	255
 15508  013A7C  6EDF               	movwf	indf2,c
 15509                           
 15510                           ; BSR set to: 2
 15511  013A7E  0102               	movlb	2	; () banked
 15512  013A80  2BEE               	incf	MiApp_SearchConnection@i& (0+255),f,b
 15513  013A82  D7ED               	goto	l12778
 15514  013A84                     l12788:
 15515                           
 15516                           ; BSR set to: 2
 15517                           ;miwi_mesh.c: 3989: }
 15518                           ;miwi_mesh.c: 3990: ActiveScanResultIndex = 0;
 15519  013A84  0E00               	movlw	0
 15520  013A86  0100               	movlb	0	; () banked
 15521  013A88  6FD6               	movwf	_ActiveScanResultIndex& (0+255),b
 15522                           
 15523                           ; BSR set to: 0
 15524                           ;miwi_mesh.c: 3991: MiWiStateMachine.bits.searchingForNetwork = 1;
 15525  013A8A  0100               	movlb	0	; () banked
 15526  013A8C  81D4               	bsf	_MiWiStateMachine& (0+255),0,b
 15527                           
 15528                           ;miwi_mesh.c: 3993: i = 0;
 15529  013A8E  0E00               	movlw	0
 15530  013A90  0102               	movlb	2	; () banked
 15531  013A92  6FEE               	movwf	MiApp_SearchConnection@i& (0+255),b
 15532                           
 15533                           ;miwi_mesh.c: 3994: while(i < 32 )
 15534  013A94  D0C8               	goto	l12822
 15535  013A96                     l12792:
 15536                           
 15537                           ; BSR set to: 2
 15538                           ;miwi_mesh.c: 3995: {
 15539                           ;miwi_mesh.c: 3996: if( ChannelMap & 0xFFFFFFFF & (channelMask << i) )
 15540  013A96  C2EE  F1EC         	movff	MiApp_SearchConnection@i,??_MiApp_SearchConnection
 15541  013A9A  C2E0  F1ED         	movff	MiApp_SearchConnection@channelMask,??_MiApp_SearchConnection+1
 15542  013A9E  C2E1  F1EE         	movff	MiApp_SearchConnection@channelMask+1,??_MiApp_SearchConnection+2
 15543  013AA2  C2E2  F1EF         	movff	MiApp_SearchConnection@channelMask+2,??_MiApp_SearchConnection+3
 15544  013AA6  C2E3  F1F0         	movff	MiApp_SearchConnection@channelMask+3,??_MiApp_SearchConnection+4
 15545  013AAA  0101               	movlb	1	; () banked
 15546  013AAC  2BEC               	incf	??_MiApp_SearchConnection& (0+255),f,b
 15547  013AAE  D006               	goto	u14810
 15548  013AB0                     u14815:
 15549  013AB0  90D8               	bcf	status,0,c
 15550  013AB2  0101               	movlb	1	; () banked
 15551  013AB4  37ED               	rlcf	(??_MiApp_SearchConnection+1)& (0+255),f,b
 15552  013AB6  37EE               	rlcf	(??_MiApp_SearchConnection+2)& (0+255),f,b
 15553  013AB8  37EF               	rlcf	(??_MiApp_SearchConnection+3)& (0+255),f,b
 15554  013ABA  37F0               	rlcf	(??_MiApp_SearchConnection+4)& (0+255),f,b
 15555  013ABC                     u14810:
 15556  013ABC  0101               	movlb	1	; () banked
 15557  013ABE  2FEC               	decfsz	??_MiApp_SearchConnection& (0+255),f,b
 15558  013AC0  D7F7               	goto	u14815
 15559  013AC2  0101               	movlb	1	; () banked
 15560  013AC4  51E8               	movf	MiApp_SearchConnection@ChannelMap& (0+255),w,b
 15561  013AC6  0101               	movlb	1	; () banked
 15562  013AC8  15ED               	andwf	(??_MiApp_SearchConnection+1)& (0+255),w,b
 15563  013ACA  0101               	movlb	1	; () banked
 15564  013ACC  6FF1               	movwf	(??_MiApp_SearchConnection+5)& (0+255),b
 15565  013ACE  0101               	movlb	1	; () banked
 15566  013AD0  51E9               	movf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),w,b
 15567  013AD2  0101               	movlb	1	; () banked
 15568  013AD4  15EE               	andwf	(??_MiApp_SearchConnection+2)& (0+255),w,b
 15569  013AD6  0101               	movlb	1	; () banked
 15570  013AD8  6FF2               	movwf	(??_MiApp_SearchConnection+6)& (0+255),b
 15571  013ADA  0101               	movlb	1	; () banked
 15572  013ADC  51EA               	movf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),w,b
 15573  013ADE  0101               	movlb	1	; () banked
 15574  013AE0  15EF               	andwf	(??_MiApp_SearchConnection+3)& (0+255),w,b
 15575  013AE2  0101               	movlb	1	; () banked
 15576  013AE4  6FF3               	movwf	(??_MiApp_SearchConnection+7)& (0+255),b
 15577  013AE6  0101               	movlb	1	; () banked
 15578  013AE8  51EB               	movf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),w,b
 15579  013AEA  0101               	movlb	1	; () banked
 15580  013AEC  15F0               	andwf	(??_MiApp_SearchConnection+4)& (0+255),w,b
 15581  013AEE  0101               	movlb	1	; () banked
 15582  013AF0  6FF4               	movwf	(??_MiApp_SearchConnection+8)& (0+255),b
 15583  013AF2  0101               	movlb	1	; () banked
 15584  013AF4  51F1               	movf	(??_MiApp_SearchConnection+5)& (0+255),w,b
 15585  013AF6  0101               	movlb	1	; () banked
 15586  013AF8  11F2               	iorwf	(??_MiApp_SearchConnection+6)& (0+255),w,b
 15587  013AFA  0101               	movlb	1	; () banked
 15588  013AFC  11F3               	iorwf	(??_MiApp_SearchConnection+7)& (0+255),w,b
 15589  013AFE  0101               	movlb	1	; () banked
 15590  013B00  11F4               	iorwf	(??_MiApp_SearchConnection+8)& (0+255),w,b
 15591  013B02  B4D8               	btfsc	status,2,c
 15592  013B04  D08E               	goto	l12820
 15593                           
 15594                           ; BSR set to: 1
 15595                           ;miwi_mesh.c: 3997: {
 15596                           ;miwi_mesh.c: 3998: ;
 15597                           ;miwi_mesh.c: 3999: ;
 15598                           ;miwi_mesh.c: 4001: MiApp_SetChannel( i );
 15599  013B06  0102               	movlb	2	; () banked
 15600  013B08  51EE               	movf	MiApp_SearchConnection@i& (0+255),w,b
 15601  013B0A  EC1D  F0B5         	call	_MiApp_SetChannel
 15602                           
 15603                           ;miwi_mesh.c: 4003: {TxData = 0;};
 15604  013B0E  0E00               	movlw	0
 15605  013B10  0100               	movlb	0	; () banked
 15606  013B12  6FD8               	movwf	_TxData& (0+255),b
 15607                           
 15608                           ; BSR set to: 0
 15609                           ;miwi_mesh.c: 4004: TxBuffer[TxData++] = 0x07;
 15610  013B14  0100               	movlb	0	; () banked
 15611  013B16  51D8               	movf	_TxData& (0+255),w,b
 15612  013B18  0D01               	mullw	1
 15613  013B1A  0E6C               	movlw	low _TxBuffer
 15614  013B1C  24F3               	addwf	prodl,w,c
 15615  013B1E  6ED9               	movwf	fsr2l,c
 15616  013B20  0E01               	movlw	high _TxBuffer
 15617  013B22  20F4               	addwfc	prodh,w,c
 15618  013B24  6EDA               	movwf	fsr2h,c
 15619  013B26  0E07               	movlw	7
 15620  013B28  6EDF               	movwf	indf2,c
 15621                           
 15622                           ; BSR set to: 0
 15623  013B2A  0100               	movlb	0	; () banked
 15624  013B2C  2BD8               	incf	_TxData& (0+255),f,b
 15625                           
 15626                           ; BSR set to: 0
 15627                           ;miwi_mesh.c: 4005: TxBuffer[TxData++] = currentChannel;
 15628  013B2E  0100               	movlb	0	; () banked
 15629  013B30  51D8               	movf	_TxData& (0+255),w,b
 15630  013B32  0D01               	mullw	1
 15631  013B34  0E6C               	movlw	low _TxBuffer
 15632  013B36  24F3               	addwf	prodl,w,c
 15633  013B38  6ED9               	movwf	fsr2l,c
 15634  013B3A  0E01               	movlw	high _TxBuffer
 15635  013B3C  20F4               	addwfc	prodh,w,c
 15636  013B3E  6EDA               	movwf	fsr2h,c
 15637  013B40  C1D2  FFDF         	movff	_currentChannel,indf2
 15638                           
 15639                           ; BSR set to: 0
 15640  013B44  0100               	movlb	0	; () banked
 15641  013B46  2BD8               	incf	_TxData& (0+255),f,b
 15642                           
 15643                           ; BSR set to: 0
 15644                           ;miwi_mesh.c: 4010: SendMACPacket((0), 0x01);
 15645  013B48  0E00               	movlw	0
 15646  013B4A  0100               	movlb	0	; () banked
 15647  013B4C  6FBA               	movwf	SendMACPacket@Address& (0+255),b
 15648  013B4E  0E00               	movlw	0
 15649  013B50  0100               	movlb	0	; () banked
 15650  013B52  6FBB               	movwf	(SendMACPacket@Address+1)& (0+255),b
 15651  013B54  0E01               	movlw	1
 15652  013B56  0100               	movlb	0	; () banked
 15653  013B58  6FBC               	movwf	SendMACPacket@PacketType& (0+255),b
 15654  013B5A  ECE6  F0B0         	call	_SendMACPacket	;wreg free
 15655                           
 15656                           ;miwi_mesh.c: 4013: t1 = MiWi_TickGet();
 15657  013B5E  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 15658  013B62  C081  F2E4         	movff	?_MiWi_TickGet,MiApp_SearchConnection@t1
 15659  013B66  C082  F2E5         	movff	?_MiWi_TickGet+1,MiApp_SearchConnection@t1+1
 15660  013B6A  C083  F2E6         	movff	?_MiWi_TickGet+2,MiApp_SearchConnection@t1+2
 15661  013B6E  C084  F2E7         	movff	?_MiWi_TickGet+3,MiApp_SearchConnection@t1+3
 15662  013B72                     l12810:
 15663                           
 15664                           ;miwi_mesh.c: 4015: {
 15665                           ;miwi_mesh.c: 4016: if( MiApp_MessageAvailable() )
 15666  013B72  EC85  F0B5         	call	_MiApp_MessageAvailable	;wreg free
 15667  013B76  0900               	iorlw	0
 15668  013B78  A4D8               	btfss	status,2,c
 15669                           
 15670                           ;miwi_mesh.c: 4017: {
 15671                           ;miwi_mesh.c: 4018: MiApp_DiscardMessage();
 15672  013B7A  EC93  F0B5         	call	_MiApp_DiscardMessage	;wreg free
 15673                           
 15674                           ;miwi_mesh.c: 4019: }
 15675                           ;miwi_mesh.c: 4021: t2 = MiWi_TickGet();
 15676  013B7E  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 15677  013B82  C081  F2E8         	movff	?_MiWi_TickGet,MiApp_SearchConnection@t2
 15678  013B86  C082  F2E9         	movff	?_MiWi_TickGet+1,MiApp_SearchConnection@t2+1
 15679  013B8A  C083  F2EA         	movff	?_MiWi_TickGet+2,MiApp_SearchConnection@t2+2
 15680  013B8E  C084  F2EB         	movff	?_MiWi_TickGet+3,MiApp_SearchConnection@t2+3
 15681                           
 15682                           ;miwi_mesh.c: 4022: if( (t2.Val - t1.Val) > ((uint32_t)(ScanTime[ScanDuration])) )
 15683  013B92  C2E4  F1EC         	movff	MiApp_SearchConnection@t1,??_MiApp_SearchConnection
 15684  013B96  C2E5  F1ED         	movff	MiApp_SearchConnection@t1+1,??_MiApp_SearchConnection+1
 15685  013B9A  C2E6  F1EE         	movff	MiApp_SearchConnection@t1+2,??_MiApp_SearchConnection+2
 15686  013B9E  C2E7  F1EF         	movff	MiApp_SearchConnection@t1+3,??_MiApp_SearchConnection+3
 15687  013BA2  0101               	movlb	1	; () banked
 15688  013BA4  1FEC               	comf	??_MiApp_SearchConnection& (0+255),f,b
 15689  013BA6  1FED               	comf	(??_MiApp_SearchConnection+1)& (0+255),f,b
 15690  013BA8  1FEE               	comf	(??_MiApp_SearchConnection+2)& (0+255),f,b
 15691  013BAA  1FEF               	comf	(??_MiApp_SearchConnection+3)& (0+255),f,b
 15692  013BAC  2BEC               	incf	??_MiApp_SearchConnection& (0+255),f,b
 15693  013BAE  0E00               	movlw	0
 15694  013BB0  23ED               	addwfc	(??_MiApp_SearchConnection+1)& (0+255),f,b
 15695  013BB2  23EE               	addwfc	(??_MiApp_SearchConnection+2)& (0+255),f,b
 15696  013BB4  23EF               	addwfc	(??_MiApp_SearchConnection+3)& (0+255),f,b
 15697  013BB6  0102               	movlb	2	; () banked
 15698  013BB8  51E8               	movf	MiApp_SearchConnection@t2& (0+255),w,b
 15699  013BBA  0101               	movlb	1	; () banked
 15700  013BBC  25EC               	addwf	??_MiApp_SearchConnection& (0+255),w,b
 15701  013BBE  0101               	movlb	1	; () banked
 15702  013BC0  6FF0               	movwf	(??_MiApp_SearchConnection+4)& (0+255),b
 15703  013BC2  0102               	movlb	2	; () banked
 15704  013BC4  51E9               	movf	(MiApp_SearchConnection@t2+1)& (0+255),w,b
 15705  013BC6  0101               	movlb	1	; () banked
 15706  013BC8  21ED               	addwfc	(??_MiApp_SearchConnection+1)& (0+255),w,b
 15707  013BCA  0101               	movlb	1	; () banked
 15708  013BCC  6FF1               	movwf	(??_MiApp_SearchConnection+5)& (0+255),b
 15709  013BCE  0102               	movlb	2	; () banked
 15710  013BD0  51EA               	movf	(MiApp_SearchConnection@t2+2)& (0+255),w,b
 15711  013BD2  0101               	movlb	1	; () banked
 15712  013BD4  21EE               	addwfc	(??_MiApp_SearchConnection+2)& (0+255),w,b
 15713  013BD6  0101               	movlb	1	; () banked
 15714  013BD8  6FF2               	movwf	(??_MiApp_SearchConnection+6)& (0+255),b
 15715  013BDA  0102               	movlb	2	; () banked
 15716  013BDC  51EB               	movf	(MiApp_SearchConnection@t2+3)& (0+255),w,b
 15717  013BDE  0101               	movlb	1	; () banked
 15718  013BE0  21EF               	addwfc	(??_MiApp_SearchConnection+3)& (0+255),w,b
 15719  013BE2  0101               	movlb	1	; () banked
 15720  013BE4  6FF3               	movwf	(??_MiApp_SearchConnection+7)& (0+255),b
 15721  013BE6  0102               	movlb	2	; () banked
 15722  013BE8  51EC               	movf	MiApp_SearchConnection@ScanDuration& (0+255),w,b
 15723  013BEA  0D04               	mullw	4
 15724  013BEC  0E31               	movlw	low _ScanTime
 15725  013BEE  24F3               	addwf	prodl,w,c
 15726  013BF0  6EF6               	movwf	tblptrl,c
 15727  013BF2  0EFF               	movlw	high _ScanTime
 15728  013BF4  20F4               	addwfc	prodh,w,c
 15729  013BF6  6EF7               	movwf	tblptrh,c
 15730  013BF8                     	if	1	;There are 3 active tblptr bytes
 15731  013BF8  6AF8               	clrf	tblptru,c
 15732  013BFA  0E00               	movlw	low (__mediumconst shr (0+16))
 15733  013BFC  22F8               	addwfc	tblptru,f,c
 15734  013BFE                     	endif
 15735  013BFE  0101               	movlb	1	; () banked
 15736  013C00  51F0               	movf	(??_MiApp_SearchConnection+4)& (0+255),w,b
 15737  013C02  0009               	tblrd		*+
 15738  013C04  5CF5               	subwf	tablat,w,c
 15739  013C06  0101               	movlb	1	; () banked
 15740  013C08  51F1               	movf	(??_MiApp_SearchConnection+5)& (0+255),w,b
 15741  013C0A  0009               	tblrd		*+
 15742  013C0C  58F5               	subwfb	tablat,w,c
 15743  013C0E  0101               	movlb	1	; () banked
 15744  013C10  51F2               	movf	(??_MiApp_SearchConnection+6)& (0+255),w,b
 15745  013C12  0009               	tblrd		*+
 15746  013C14  58F5               	subwfb	tablat,w,c
 15747  013C16  0101               	movlb	1	; () banked
 15748  013C18  51F3               	movf	(??_MiApp_SearchConnection+7)& (0+255),w,b
 15749  013C1A  0009               	tblrd		*+
 15750  013C1C  58F5               	subwfb	tablat,w,c
 15751  013C1E  B0D8               	btfsc	status,0,c
 15752  013C20  D7A8               	goto	l12810
 15753  013C22                     l12820:
 15754                           
 15755                           ; BSR set to: 1
 15756                           ;miwi_mesh.c: 4026: }
 15757                           ;miwi_mesh.c: 4027: }
 15758                           ;miwi_mesh.c: 4028: }
 15759                           ;miwi_mesh.c: 4029: i++;
 15760  013C22  0102               	movlb	2	; () banked
 15761  013C24  2BEE               	incf	MiApp_SearchConnection@i& (0+255),f,b
 15762  013C26                     l12822:
 15763                           
 15764                           ; BSR set to: 2
 15765  013C26  0E1F               	movlw	31
 15766  013C28  0102               	movlb	2	; () banked
 15767  013C2A  65EE               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
 15768  013C2C  D734               	goto	l12792
 15769                           
 15770                           ; BSR set to: 2
 15771                           ;miwi_mesh.c: 4030: }
 15772                           ;miwi_mesh.c: 4032: MiApp_SetChannel(backupChannel);
 15773                           
 15774                           ; BSR set to: 2
 15775  013C2E  0102               	movlb	2	; () banked
 15776  013C30  51ED               	movf	MiApp_SearchConnection@backupChannel& (0+255),w,b
 15777  013C32  EC1D  F0B5         	call	_MiApp_SetChannel
 15778                           
 15779                           ;miwi_mesh.c: 4033: MiWiStateMachine.bits.searchingForNetwork = 0;
 15780  013C36  0100               	movlb	0	; () banked
 15781  013C38  91D4               	bcf	_MiWiStateMachine& (0+255),0,b
 15782                           
 15783                           ; BSR set to: 0
 15784                           ;miwi_mesh.c: 4035: return ActiveScanResultIndex;
 15785  013C3A  0100               	movlb	0	; () banked
 15786  013C3C  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 15787  013C3E  0012               	return	
 15788  013C40                     __end_of_MiApp_SearchConnection:
 15789                           	opt stack 0
 15790                           tblptru	equ	0xFF8
 15791                           tblptrh	equ	0xFF7
 15792                           tblptrl	equ	0xFF6
 15793                           tablat	equ	0xFF5
 15794                           prodh	equ	0xFF4
 15795                           prodl	equ	0xFF3
 15796                           intcon	equ	0xFF2
 15797                           intcon2	equ	0xFF1
 15798                           intcon3	equ	0xFF0
 15799                           indf0	equ	0xFEF
 15800                           postinc0	equ	0xFEE
 15801                           plusw0	equ	0xFEB
 15802                           fsr0h	equ	0xFEA
 15803                           fsr0l	equ	0xFE9
 15804                           wreg	equ	0xFE8
 15805                           indf1	equ	0xFE7
 15806                           postinc1	equ	0xFE6
 15807                           postdec1	equ	0xFE5
 15808                           fsr1h	equ	0xFE2
 15809                           fsr1l	equ	0xFE1
 15810                           indf2	equ	0xFDF
 15811                           postinc2	equ	0xFDE
 15812                           postdec2	equ	0xFDD
 15813                           plusw2	equ	0xFDB
 15814                           fsr2h	equ	0xFDA
 15815                           fsr2l	equ	0xFD9
 15816                           status	equ	0xFD8
 15817                           
 15818 ;; *************** function _SendMACPacket *****************
 15819 ;; Defined at:
 15820 ;;		line 2251 in file "src/miwi/miwi_mesh.c"
 15821 ;; Parameters:    Size  Location     Type
 15822 ;;  Address         2   90[BANK0 ] PTR unsigned char 
 15823 ;;		 -> ConnectionTable(90), NULL(0), 
 15824 ;;  PacketType      1   92[BANK0 ] unsigned char 
 15825 ;; Auto vars:     Size  Location     Type
 15826 ;;		None
 15827 ;; Return value:  Size  Location     Type
 15828 ;;                  1    wreg      unsigned char 
 15829 ;; Registers used:
 15830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15831 ;; Tracked objects:
 15832 ;;		On entry : 0/0
 15833 ;;		On exit  : 0/0
 15834 ;;		Unchanged: 0/0
 15835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15836 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15838 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15839 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15840 ;;Total ram usage:        4 bytes
 15841 ;; Hardware stack levels used:    1
 15842 ;; Hardware stack levels required when called:   12
 15843 ;; This function calls:
 15844 ;;		_MiMAC_SendPacket
 15845 ;; This function is called by:
 15846 ;;		_MiApp_SearchConnection
 15847 ;;		_MiApp_EstablishConnection
 15848 ;; This function uses a non-reentrant model
 15849 ;;
 15850                           
 15851                           	psect	text50
 15852  0161CC                     __ptext50:
 15853                           	opt stack 0
 15854  0161CC                     _SendMACPacket:
 15855                           	opt stack 17
 15856                           
 15857                           ;miwi_mesh.c: 2254: MTP.flags.Val = 0;
 15858                           
 15859                           ; BSR set to: 0
 15860                           ;incstack = 0
 15861  0161CC  0E00               	movlw	0
 15862  0161CE  0100               	movlb	0	; () banked
 15863  0161D0  6FD1               	movwf	_MTP& (0+255),b
 15864                           
 15865                           ; BSR set to: 0
 15866                           ;miwi_mesh.c: 2256: MTP.flags.bits.packetType = PacketType;
 15867  0161D2  0100               	movlb	0	; () banked
 15868  0161D4  51D1               	movf	_MTP& (0+255),w,b
 15869  0161D6  0100               	movlb	0	; () banked
 15870  0161D8  19BC               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 15871  0161DA  0BFC               	andlw	-4
 15872  0161DC  19BC               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 15873  0161DE  0100               	movlb	0	; () banked
 15874  0161E0  6FD1               	movwf	_MTP& (0+255),b
 15875                           
 15876                           ; BSR set to: 0
 15877                           ;miwi_mesh.c: 2257: if( Address == (0) )
 15878  0161E2  0100               	movlb	0	; () banked
 15879  0161E4  51BA               	movf	SendMACPacket@Address& (0+255),w,b
 15880  0161E6  0100               	movlb	0	; () banked
 15881  0161E8  11BB               	iorwf	(SendMACPacket@Address+1)& (0+255),w,b
 15882  0161EA  A4D8               	btfss	status,2,c
 15883  0161EC  D002               	goto	l12266
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;miwi_mesh.c: 2258: {
 15887                           ;miwi_mesh.c: 2259: MTP.flags.bits.broadcast = 1;
 15888  0161EE  0100               	movlb	0	; () banked
 15889  0161F0  85D1               	bsf	_MTP& (0+255),2,b
 15890  0161F2                     l12266:
 15891                           
 15892                           ; BSR set to: 0
 15893                           ;miwi_mesh.c: 2260: }
 15894                           ;miwi_mesh.c: 2261: MTP.flags.bits.ackReq = (MTP.flags.bits.broadcast) ? 0:1;
 15895  0161F2  0100               	movlb	0	; () banked
 15896  0161F4  B5D1               	btfsc	_MTP& (0+255),2,b
 15897  0161F6  D004               	goto	u14090
 15898  0161F8  0100               	movlb	0	; () banked
 15899  0161FA  6BBD               	clrf	??_SendMACPacket& (0+255),b
 15900  0161FC  2BBD               	incf	??_SendMACPacket& (0+255),f,b
 15901  0161FE  D002               	goto	u14108
 15902  016200                     u14090:
 15903  016200  0100               	movlb	0	; () banked
 15904  016202  6BBD               	clrf	??_SendMACPacket& (0+255),b
 15905  016204                     u14108:
 15906  016204  0100               	movlb	0	; () banked
 15907  016206  3BBD               	swapf	??_SendMACPacket& (0+255),f,b
 15908  016208  47BD               	rlncf	??_SendMACPacket& (0+255),f,b
 15909  01620A  0100               	movlb	0	; () banked
 15910  01620C  51D1               	movf	_MTP& (0+255),w,b
 15911  01620E  0100               	movlb	0	; () banked
 15912  016210  19BD               	xorwf	??_SendMACPacket& (0+255),w,b
 15913  016212  0BDF               	andlw	-33
 15914  016214  19BD               	xorwf	??_SendMACPacket& (0+255),w,b
 15915  016216  0100               	movlb	0	; () banked
 15916  016218  6FD1               	movwf	_MTP& (0+255),b
 15917                           
 15918                           ; BSR set to: 0
 15919                           ;miwi_mesh.c: 2262: MTP.flags.bits.sourcePrsnt = 1;
 15920  01621A  0100               	movlb	0	; () banked
 15921  01621C  8FD1               	bsf	_MTP& (0+255),7,b
 15922                           
 15923                           ;miwi_mesh.c: 2264: MTP.DestAddress = Address;
 15924  01621E  C0BA  F0D2         	movff	SendMACPacket@Address,_MTP+1
 15925  016222  C0BB  F0D3         	movff	SendMACPacket@Address+1,_MTP+2
 15926                           
 15927                           ; BSR set to: 0
 15928                           ;miwi_mesh.c: 2287: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 15929                           ;	Return value of _SendMACPacket is never used
 15930  016226  C0D1  F0B0         	movff	_MTP,MiMAC_SendPacket@transParam
 15931  01622A  C0D2  F0B1         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15932  01622E  C0D3  F0B2         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15933  016232  0E6C               	movlw	low _TxBuffer
 15934  016234  0100               	movlb	0	; () banked
 15935  016236  6FB3               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15936  016238  0E01               	movlw	high _TxBuffer
 15937  01623A  0100               	movlb	0	; () banked
 15938  01623C  6FB4               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15939  01623E  C0D8  F0B5         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15940  016242  ECED  F09A         	call	_MiMAC_SendPacket	;wreg free
 15941  016246  0012               	return	
 15942  016248                     __end_of_SendMACPacket:
 15943                           	opt stack 0
 15944                           tblptru	equ	0xFF8
 15945                           tblptrh	equ	0xFF7
 15946                           tblptrl	equ	0xFF6
 15947                           tablat	equ	0xFF5
 15948                           prodh	equ	0xFF4
 15949                           prodl	equ	0xFF3
 15950                           intcon	equ	0xFF2
 15951                           intcon2	equ	0xFF1
 15952                           intcon3	equ	0xFF0
 15953                           indf0	equ	0xFEF
 15954                           postinc0	equ	0xFEE
 15955                           plusw0	equ	0xFEB
 15956                           fsr0h	equ	0xFEA
 15957                           fsr0l	equ	0xFE9
 15958                           wreg	equ	0xFE8
 15959                           indf1	equ	0xFE7
 15960                           postinc1	equ	0xFE6
 15961                           postdec1	equ	0xFE5
 15962                           fsr1h	equ	0xFE2
 15963                           fsr1l	equ	0xFE1
 15964                           indf2	equ	0xFDF
 15965                           postinc2	equ	0xFDE
 15966                           postdec2	equ	0xFDD
 15967                           plusw2	equ	0xFDB
 15968                           fsr2h	equ	0xFDA
 15969                           fsr2l	equ	0xFD9
 15970                           status	equ	0xFD8
 15971                           
 15972 ;; *************** function _MiApp_SetChannel *****************
 15973 ;; Defined at:
 15974 ;;		line 3867 in file "src/miwi/miwi_mesh.c"
 15975 ;; Parameters:    Size  Location     Type
 15976 ;;  channel         1    wreg     unsigned char 
 15977 ;; Auto vars:     Size  Location     Type
 15978 ;;  channel         1   43[BANK0 ] unsigned char 
 15979 ;; Return value:  Size  Location     Type
 15980 ;;                  1    wreg      unsigned char 
 15981 ;; Registers used:
 15982 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15983 ;; Tracked objects:
 15984 ;;		On entry : 0/0
 15985 ;;		On exit  : 0/0
 15986 ;;		Unchanged: 0/0
 15987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15991 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15992 ;;Total ram usage:        1 bytes
 15993 ;; Hardware stack levels used:    1
 15994 ;; Hardware stack levels required when called:   11
 15995 ;; This function calls:
 15996 ;;		_MiMAC_SetChannel
 15997 ;; This function is called by:
 15998 ;;		_MiApp_ProtocolInit
 15999 ;;		_MiApp_SearchConnection
 16000 ;;		_MiApp_EstablishConnection
 16001 ;; This function uses a non-reentrant model
 16002 ;;
 16003                           
 16004                           	psect	text51
 16005  016A3A                     __ptext51:
 16006                           	opt stack 0
 16007  016A3A                     _MiApp_SetChannel:
 16008                           	opt stack 18
 16009                           
 16010                           ;incstack = 0
 16011                           ;MiApp_SetChannel@channel stored from wreg
 16012  016A3A  0100               	movlb	0	; () banked
 16013  016A3C  6F8B               	movwf	MiApp_SetChannel@channel& (0+255),b
 16014                           
 16015                           ;miwi_mesh.c: 3869: if( MiMAC_SetChannel(channel, 0) )
 16016  016A3E  0E00               	movlw	0
 16017  016A40  0100               	movlb	0	; () banked
 16018  016A42  6F88               	movwf	MiMAC_SetChannel@offsetFreq& (0+255),b
 16019  016A44  0100               	movlb	0	; () banked
 16020  016A46  518B               	movf	MiApp_SetChannel@channel& (0+255),w,b
 16021  016A48  ECB1  F0AD         	call	_MiMAC_SetChannel
 16022  016A4C  0900               	iorlw	0
 16023  016A4E  B4D8               	btfsc	status,2,c
 16024  016A50  0012               	return	
 16025                           
 16026                           ;miwi_mesh.c: 3870: {
 16027                           ;miwi_mesh.c: 3871: currentChannel = channel;
 16028  016A52  C08B  F1D2         	movff	MiApp_SetChannel@channel,_currentChannel
 16029                           
 16030                           ;miwi_mesh.c: 3875: return 1;
 16031                           ;	Return value of _MiApp_SetChannel is never used
 16032  016A56  0012               	return	
 16033  016A58                     __end_of_MiApp_SetChannel:
 16034                           	opt stack 0
 16035                           tblptru	equ	0xFF8
 16036                           tblptrh	equ	0xFF7
 16037                           tblptrl	equ	0xFF6
 16038                           tablat	equ	0xFF5
 16039                           prodh	equ	0xFF4
 16040                           prodl	equ	0xFF3
 16041                           intcon	equ	0xFF2
 16042                           intcon2	equ	0xFF1
 16043                           intcon3	equ	0xFF0
 16044                           indf0	equ	0xFEF
 16045                           postinc0	equ	0xFEE
 16046                           plusw0	equ	0xFEB
 16047                           fsr0h	equ	0xFEA
 16048                           fsr0l	equ	0xFE9
 16049                           wreg	equ	0xFE8
 16050                           indf1	equ	0xFE7
 16051                           postinc1	equ	0xFE6
 16052                           postdec1	equ	0xFE5
 16053                           fsr1h	equ	0xFE2
 16054                           fsr1l	equ	0xFE1
 16055                           indf2	equ	0xFDF
 16056                           postinc2	equ	0xFDE
 16057                           postdec2	equ	0xFDD
 16058                           plusw2	equ	0xFDB
 16059                           fsr2h	equ	0xFDA
 16060                           fsr2l	equ	0xFD9
 16061                           status	equ	0xFD8
 16062                           
 16063 ;; *************** function _MiMAC_SetChannel *****************
 16064 ;; Defined at:
 16065 ;;		line 490 in file "src/miwi/drv_mrf_miwi_89xa.c"
 16066 ;; Parameters:    Size  Location     Type
 16067 ;;  channel         1    wreg     unsigned char 
 16068 ;;  offsetFreq      1   40[BANK0 ] unsigned char 
 16069 ;; Auto vars:     Size  Location     Type
 16070 ;;  channel         1   42[BANK0 ] unsigned char 
 16071 ;; Return value:  Size  Location     Type
 16072 ;;                  1    wreg      unsigned char 
 16073 ;; Registers used:
 16074 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16075 ;; Tracked objects:
 16076 ;;		On entry : 0/0
 16077 ;;		On exit  : 0/0
 16078 ;;		Unchanged: 0/0
 16079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16080 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16082 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16083 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16084 ;;Total ram usage:        3 bytes
 16085 ;; Hardware stack levels used:    1
 16086 ;; Hardware stack levels required when called:   10
 16087 ;; This function calls:
 16088 ;;		_RegisterSet
 16089 ;;		_SetRFMode
 16090 ;; This function is called by:
 16091 ;;		_MiApp_SetChannel
 16092 ;; This function uses a non-reentrant model
 16093 ;;
 16094                           
 16095                           	psect	text52
 16096  015B62                     __ptext52:
 16097                           	opt stack 0
 16098  015B62                     _MiMAC_SetChannel:
 16099                           	opt stack 18
 16100                           
 16101                           ;incstack = 0
 16102                           ;MiMAC_SetChannel@channel stored from wreg
 16103  015B62  0100               	movlb	0	; () banked
 16104  015B64  6F8A               	movwf	MiMAC_SetChannel@channel& (0+255),b
 16105                           
 16106                           ;drv_mrf_miwi_89xa.c: 492: if( channel >= 32 )
 16107  015B66  0E1F               	movlw	31
 16108  015B68  0100               	movlb	0	; () banked
 16109  015B6A  658A               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 16110  015B6C  D002               	goto	l11902
 16111                           
 16112                           ; BSR set to: 0
 16113                           ;drv_mrf_miwi_89xa.c: 493: {
 16114                           ;drv_mrf_miwi_89xa.c: 494: return 0;
 16115  015B6E  0E00               	movlw	0
 16116                           
 16117                           ; BSR set to: 0
 16118  015B70  0012               	return	
 16119  015B72                     l11902:
 16120                           
 16121                           ; BSR set to: 0
 16122                           ;drv_mrf_miwi_89xa.c: 495: }
 16123                           ;drv_mrf_miwi_89xa.c: 498: RegisterSet(0x0C00 | 100);
 16124  015B72  0E0C               	movlw	12
 16125  015B74  0100               	movlb	0	; () banked
 16126  015B76  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 16127  015B78  0E64               	movlw	100
 16128  015B7A  6F83               	movwf	RegisterSet@setting& (0+255),b
 16129  015B7C  ECB6  F0B3         	call	_RegisterSet	;wreg free
 16130                           
 16131                           ;drv_mrf_miwi_89xa.c: 499: RegisterSet(0x0E00 | PVALUE[channel]);
 16132  015B80  0100               	movlb	0	; () banked
 16133  015B82  518A               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 16134  015B84  0D01               	mullw	1
 16135  015B86  0E6D               	movlw	low _PVALUE
 16136  015B88  24F3               	addwf	prodl,w,c
 16137  015B8A  6EF6               	movwf	tblptrl,c
 16138  015B8C  0EFF               	movlw	high _PVALUE
 16139  015B8E  20F4               	addwfc	prodh,w,c
 16140  015B90  6EF7               	movwf	tblptrh,c
 16141  015B92                     	if	1	;There are 3 active tblptr bytes
 16142  015B92  6AF8               	clrf	tblptru,c
 16143  015B94  0E00               	movlw	low (__mediumconst shr (0+16))
 16144  015B96  22F8               	addwfc	tblptru,f,c
 16145  015B98                     	endif
 16146  015B98  0008               	tblrd		*
 16147  015B9A  CFF5 F089          	movff	tablat,??_MiMAC_SetChannel
 16148  015B9E  0E00               	movlw	0
 16149  015BA0  0100               	movlb	0	; () banked
 16150  015BA2  1189               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 16151  015BA4  0100               	movlb	0	; () banked
 16152  015BA6  6F83               	movwf	RegisterSet@setting& (0+255),b
 16153  015BA8  0E0E               	movlw	14
 16154  015BAA  0100               	movlb	0	; () banked
 16155  015BAC  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 16156  015BAE  ECB6  F0B3         	call	_RegisterSet	;wreg free
 16157                           
 16158                           ;drv_mrf_miwi_89xa.c: 500: RegisterSet(0x1000 | SVALUE[channel]);
 16159  015BB2  0100               	movlb	0	; () banked
 16160  015BB4  518A               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 16161  015BB6  0D01               	mullw	1
 16162  015BB8  0E8D               	movlw	low _SVALUE
 16163  015BBA  24F3               	addwf	prodl,w,c
 16164  015BBC  6EF6               	movwf	tblptrl,c
 16165  015BBE  0EFF               	movlw	high _SVALUE
 16166  015BC0  20F4               	addwfc	prodh,w,c
 16167  015BC2  6EF7               	movwf	tblptrh,c
 16168  015BC4                     	if	1	;There are 3 active tblptr bytes
 16169  015BC4  6AF8               	clrf	tblptru,c
 16170  015BC6  0E00               	movlw	low (__mediumconst shr (0+16))
 16171  015BC8  22F8               	addwfc	tblptru,f,c
 16172  015BCA                     	endif
 16173  015BCA  0008               	tblrd		*
 16174  015BCC  CFF5 F089          	movff	tablat,??_MiMAC_SetChannel
 16175  015BD0  0E00               	movlw	0
 16176  015BD2  0100               	movlb	0	; () banked
 16177  015BD4  1189               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 16178  015BD6  0100               	movlb	0	; () banked
 16179  015BD8  6F83               	movwf	RegisterSet@setting& (0+255),b
 16180  015BDA  0E10               	movlw	16
 16181  015BDC  0100               	movlb	0	; () banked
 16182  015BDE  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 16183  015BE0  ECB6  F0B3         	call	_RegisterSet	;wreg free
 16184                           
 16185                           ;drv_mrf_miwi_89xa.c: 501: SetRFMode(0x20);
 16186  015BE4  0E20               	movlw	32
 16187  015BE6  EC96  F0AF         	call	_SetRFMode
 16188                           
 16189                           ;drv_mrf_miwi_89xa.c: 502: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 16190  015BEA  0E00               	movlw	0
 16191  015BEC  0100               	movlb	0	; () banked
 16192  015BEE  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 16193  015BF0  0E56               	movlw	86
 16194  015BF2  6F83               	movwf	RegisterSet@setting& (0+255),b
 16195  015BF4  ECB6  F0B3         	call	_RegisterSet	;wreg free
 16196                           
 16197                           ;drv_mrf_miwi_89xa.c: 503: SetRFMode(0x40);
 16198  015BF8  0E40               	movlw	64
 16199  015BFA  EC96  F0AF         	call	_SetRFMode
 16200                           
 16201                           ;drv_mrf_miwi_89xa.c: 504: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 16202  015BFE  0E1C               	movlw	28
 16203  015C00  0100               	movlb	0	; () banked
 16204  015C02  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 16205  015C04  0E0F               	movlw	15
 16206  015C06  6F83               	movwf	RegisterSet@setting& (0+255),b
 16207  015C08  ECB6  F0B3         	call	_RegisterSet	;wreg free
 16208                           
 16209                           ;drv_mrf_miwi_89xa.c: 505: SetRFMode(0x20);
 16210  015C0C  0E20               	movlw	32
 16211  015C0E  EC96  F0AF         	call	_SetRFMode
 16212                           
 16213                           ;drv_mrf_miwi_89xa.c: 506: SetRFMode(0x60);
 16214  015C12  0E60               	movlw	96
 16215  015C14  EC96  F0AF         	call	_SetRFMode
 16216                           
 16217                           ;drv_mrf_miwi_89xa.c: 508: return 1;
 16218  015C18  0E01               	movlw	1
 16219  015C1A  0012               	return	
 16220  015C1C                     __end_of_MiMAC_SetChannel:
 16221                           	opt stack 0
 16222                           tblptru	equ	0xFF8
 16223                           tblptrh	equ	0xFF7
 16224                           tblptrl	equ	0xFF6
 16225                           tablat	equ	0xFF5
 16226                           prodh	equ	0xFF4
 16227                           prodl	equ	0xFF3
 16228                           intcon	equ	0xFF2
 16229                           intcon2	equ	0xFF1
 16230                           intcon3	equ	0xFF0
 16231                           indf0	equ	0xFEF
 16232                           postinc0	equ	0xFEE
 16233                           plusw0	equ	0xFEB
 16234                           fsr0h	equ	0xFEA
 16235                           fsr0l	equ	0xFE9
 16236                           wreg	equ	0xFE8
 16237                           indf1	equ	0xFE7
 16238                           postinc1	equ	0xFE6
 16239                           postdec1	equ	0xFE5
 16240                           fsr1h	equ	0xFE2
 16241                           fsr1l	equ	0xFE1
 16242                           indf2	equ	0xFDF
 16243                           postinc2	equ	0xFDE
 16244                           postdec2	equ	0xFDD
 16245                           plusw2	equ	0xFDB
 16246                           fsr2h	equ	0xFDA
 16247                           fsr2l	equ	0xFD9
 16248                           status	equ	0xFD8
 16249                           
 16250 ;; *************** function _MiApp_MessageAvailable *****************
 16251 ;; Defined at:
 16252 ;;		line 4236 in file "src/miwi/miwi_mesh.c"
 16253 ;; Parameters:    Size  Location     Type
 16254 ;;		None
 16255 ;; Auto vars:     Size  Location     Type
 16256 ;;		None
 16257 ;; Return value:  Size  Location     Type
 16258 ;;                  1    wreg      unsigned char 
 16259 ;; Registers used:
 16260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16261 ;; Tracked objects:
 16262 ;;		On entry : 0/0
 16263 ;;		On exit  : 0/0
 16264 ;;		Unchanged: 0/0
 16265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16270 ;;Total ram usage:        0 bytes
 16271 ;; Hardware stack levels used:    1
 16272 ;; Hardware stack levels required when called:   13
 16273 ;; This function calls:
 16274 ;;		_MiWiTasks
 16275 ;; This function is called by:
 16276 ;;		_MiApp_SearchConnection
 16277 ;;		_MiApp_EstablishConnection
 16278 ;;		_MiApp_UnicastAddress
 16279 ;;		_main
 16280 ;;		_process_update_answer
 16281 ;;		_do_NETWORK_REGISTER
 16282 ;;		_do_POWER_TEST
 16283 ;;		_do_UPDATE
 16284 ;;		_MiApp_UnicastConnection
 16285 ;;		_do_PING
 16286 ;; This function uses a non-reentrant model
 16287 ;;
 16288                           
 16289                           	psect	text53
 16290  016B0A                     __ptext53:
 16291                           	opt stack 0
 16292  016B0A                     _MiApp_MessageAvailable:
 16293                           	opt stack 14
 16294                           
 16295                           ;miwi_mesh.c: 4238: MiWiTasks();
 16296                           
 16297                           ;incstack = 0
 16298  016B0A  EC00  F080         	call	_MiWiTasks	;wreg free
 16299                           
 16300                           ;miwi_mesh.c: 4239: return MiWiStateMachine.bits.RxHasUserData;
 16301  016B0E  0100               	movlb	0	; () banked
 16302  016B10  A5D4               	btfss	_MiWiStateMachine& (0+255),2,b
 16303  016B12  D002               	goto	u13640
 16304  016B14  0E01               	movlw	1
 16305  016B16  0012               	return	
 16306  016B18                     u13640:
 16307  016B18  0E00               	movlw	0
 16308  016B1A  0012               	return	
 16309  016B1C                     __end_of_MiApp_MessageAvailable:
 16310                           	opt stack 0
 16311                           tblptru	equ	0xFF8
 16312                           tblptrh	equ	0xFF7
 16313                           tblptrl	equ	0xFF6
 16314                           tablat	equ	0xFF5
 16315                           prodh	equ	0xFF4
 16316                           prodl	equ	0xFF3
 16317                           intcon	equ	0xFF2
 16318                           intcon2	equ	0xFF1
 16319                           intcon3	equ	0xFF0
 16320                           indf0	equ	0xFEF
 16321                           postinc0	equ	0xFEE
 16322                           plusw0	equ	0xFEB
 16323                           fsr0h	equ	0xFEA
 16324                           fsr0l	equ	0xFE9
 16325                           wreg	equ	0xFE8
 16326                           indf1	equ	0xFE7
 16327                           postinc1	equ	0xFE6
 16328                           postdec1	equ	0xFE5
 16329                           fsr1h	equ	0xFE2
 16330                           fsr1l	equ	0xFE1
 16331                           indf2	equ	0xFDF
 16332                           postinc2	equ	0xFDE
 16333                           postdec2	equ	0xFDD
 16334                           plusw2	equ	0xFDB
 16335                           fsr2h	equ	0xFDA
 16336                           fsr2l	equ	0xFD9
 16337                           status	equ	0xFD8
 16338                           
 16339 ;; *************** function _MiWiTasks *****************
 16340 ;; Defined at:
 16341 ;;		line 282 in file "src/miwi/miwi_mesh.c"
 16342 ;; Parameters:    Size  Location     Type
 16343 ;;		None
 16344 ;; Auto vars:     Size  Location     Type
 16345 ;;  j               1   15[BANK1 ] unsigned char 
 16346 ;;  CapacityByte    1   14[BANK1 ] struct .
 16347 ;;  cIndex          1    4[BANK1 ] unsigned char 
 16348 ;;  rxIndex         1   13[BANK1 ] unsigned char 
 16349 ;;  sourceShortA    2   18[BANK1 ] struct .
 16350 ;;  sourcePANID     2   16[BANK1 ] struct .
 16351 ;;  destShortAdd    2   11[BANK1 ] struct .
 16352 ;;  destPANID       2    9[BANK1 ] struct .
 16353 ;;  t1              4    5[BANK1 ] struct _MIWI_TICK
 16354 ;;  t2              4    0[BANK1 ] struct _MIWI_TICK
 16355 ;;  i               1   20[BANK1 ] unsigned char 
 16356 ;; Return value:  Size  Location     Type
 16357 ;;		None               void
 16358 ;; Registers used:
 16359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16360 ;; Tracked objects:
 16361 ;;		On entry : 0/0
 16362 ;;		On exit  : 0/0
 16363 ;;		Unchanged: 0/0
 16364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16366 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16367 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16368 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16369 ;;Total ram usage:       29 bytes
 16370 ;; Hardware stack levels used:    1
 16371 ;; Hardware stack levels required when called:   12
 16372 ;; This function calls:
 16373 ;;		_AddNodeToNetworkTable
 16374 ;;		_MiMAC_DiscardPacket
 16375 ;;		_MiMAC_ReceivedPacket
 16376 ;;		_MiMAC_SendPacket
 16377 ;;		_MiMAC_SetAltAddress
 16378 ;;		_MiWi_TickGet
 16379 ;;		_SearchForLongAddress
 16380 ;;		_SearchForShortAddress
 16381 ;; This function is called by:
 16382 ;;		_MiApp_MessageAvailable
 16383 ;;		_main
 16384 ;; This function uses a non-reentrant model
 16385 ;;
 16386                           
 16387                           	psect	text54
 16388  010000                     __ptext54:
 16389                           	opt stack 0
 16390  010000                     _MiWiTasks:
 16391                           	opt stack 14
 16392                           
 16393                           ;miwi_mesh.c: 284: uint8_t i;
 16394                           ;miwi_mesh.c: 285: MIWI_TICK t1, t2;
 16395                           ;miwi_mesh.c: 287: if( MiMAC_ReceivedPacket() )
 16396                           
 16397                           ; BSR set to: 0
 16398                           ;incstack = 0
 16399  010000  EC6F  F092         	call	_MiMAC_ReceivedPacket	;wreg free
 16400  010004  0900               	iorlw	0
 16401  010006  B4D8               	btfsc	status,2,c
 16402  010008  EF3F  F085         	goto	l11830
 16403                           
 16404                           ;miwi_mesh.c: 288: {
 16405                           ;miwi_mesh.c: 289: if( MiWiStateMachine.bits.RxHasUserData )
 16406  01000C  0100               	movlb	0	; () banked
 16407  01000E  B5D4               	btfsc	_MiWiStateMachine& (0+255),2,b
 16408  010010  0012               	return	
 16409                           
 16410                           ; BSR set to: 0
 16411                           ;miwi_mesh.c: 292: }
 16412                           ;miwi_mesh.c: 294: rxMessage.flags.Val = 0;
 16413                           
 16414                           ; BSR set to: 0
 16415                           
 16416                           ; BSR set to: 0
 16417                           ;miwi_mesh.c: 290: {
 16418                           ;miwi_mesh.c: 291: return;
 16419  010012  0E00               	movlw	0
 16420  010014  0101               	movlb	1	; () banked
 16421  010016  6F2C               	movwf	_rxMessage& (0+255),b
 16422                           
 16423                           ; BSR set to: 1
 16424                           ;miwi_mesh.c: 295: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
 16425  010018  A434               	btfss	_MACRxPacket,2,c
 16426  01001A  D004               	goto	u12970
 16427  01001C  0100               	movlb	0	; () banked
 16428  01001E  6BC8               	clrf	??_MiWiTasks& (0+255),b
 16429  010020  2BC8               	incf	??_MiWiTasks& (0+255),f,b
 16430  010022  D002               	goto	u12978
 16431  010024                     u12970:
 16432  010024  0100               	movlb	0	; () banked
 16433  010026  6BC8               	clrf	??_MiWiTasks& (0+255),b
 16434  010028                     u12978:
 16435  010028  0101               	movlb	1	; () banked
 16436  01002A  512C               	movf	_rxMessage& (0+255),w,b
 16437  01002C  0100               	movlb	0	; () banked
 16438  01002E  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 16439  010030  0BFC               	andlw	-4
 16440  010032  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 16441  010034  0101               	movlb	1	; () banked
 16442  010036  6F2C               	movwf	_rxMessage& (0+255),b
 16443                           
 16444                           ; BSR set to: 1
 16445                           ;miwi_mesh.c: 296: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 16446  010038  A634               	btfss	_MACRxPacket,3,c
 16447  01003A  D003               	bra	u12985
 16448  01003C  0101               	movlb	1	; () banked
 16449  01003E  872C               	bsf	_rxMessage& (0+255),3,b
 16450  010040  D002               	bra	u12987
 16451  010042                     u12985:
 16452  010042  0101               	movlb	1	; () banked
 16453  010044  972C               	bcf	_rxMessage& (0+255),3,b
 16454  010046                     u12987:
 16455                           
 16456                           ; BSR set to: 1
 16457                           ;miwi_mesh.c: 297: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 
      +                          0x01) ? 1:0;
 16458  010046  5034               	movf	_MACRxPacket,w,c
 16459  010048  0B03               	andlw	3
 16460  01004A  06E8               	decf	wreg,f,c
 16461  01004C  A4D8               	btfss	status,2,c
 16462  01004E  D004               	goto	u12990
 16463  010050  0100               	movlb	0	; () banked
 16464  010052  6BC8               	clrf	??_MiWiTasks& (0+255),b
 16465  010054  2BC8               	incf	??_MiWiTasks& (0+255),f,b
 16466  010056  D002               	goto	u13008
 16467  010058                     u12990:
 16468  010058  0100               	movlb	0	; () banked
 16469  01005A  6BC8               	clrf	??_MiWiTasks& (0+255),b
 16470  01005C                     u13008:
 16471  01005C  0100               	movlb	0	; () banked
 16472  01005E  3BC8               	swapf	??_MiWiTasks& (0+255),f,b
 16473  010060  47C8               	rlncf	??_MiWiTasks& (0+255),f,b
 16474  010062  0101               	movlb	1	; () banked
 16475  010064  512C               	movf	_rxMessage& (0+255),w,b
 16476  010066  0100               	movlb	0	; () banked
 16477  010068  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 16478  01006A  0BDF               	andlw	-33
 16479  01006C  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 16480  01006E  0101               	movlb	1	; () banked
 16481  010070  6F2C               	movwf	_rxMessage& (0+255),b
 16482                           
 16483                           ; BSR set to: 1
 16484                           ;miwi_mesh.c: 298: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 16485  010072  AE34               	btfss	_MACRxPacket,7,c
 16486  010074  D003               	bra	u13015
 16487  010076  0101               	movlb	1	; () banked
 16488  010078  8D2C               	bsf	_rxMessage& (0+255),6,b
 16489  01007A  D002               	bra	u13017
 16490  01007C                     u13015:
 16491  01007C  0101               	movlb	1	; () banked
 16492  01007E  9D2C               	bcf	_rxMessage& (0+255),6,b
 16493  010080                     u13017:
 16494                           
 16495                           ; BSR set to: 1
 16496                           ;miwi_mesh.c: 299: if( MACRxPacket.flags.bits.sourcePrsnt )
 16497  010080  AE34               	btfss	_MACRxPacket,7,c
 16498  010082  D006               	goto	l11502
 16499                           
 16500                           ; BSR set to: 1
 16501                           ;miwi_mesh.c: 300: {
 16502                           ;miwi_mesh.c: 304: rxMessage.flags.bits.altSrcAddr = 1;
 16503  010084  0101               	movlb	1	; () banked
 16504  010086  8F2C               	bsf	_rxMessage& (0+255),7,b
 16505                           
 16506                           ; BSR set to: 1
 16507                           ;miwi_mesh.c: 306: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 16508  010088  C035  F12F         	movff	_MACRxPacket+1,_rxMessage+3
 16509  01008C  C036  F130         	movff	_MACRxPacket+2,_rxMessage+4
 16510  010090                     l11502:
 16511                           
 16512                           ; BSR set to: 1
 16513                           ;miwi_mesh.c: 307: }
 16514                           ;miwi_mesh.c: 311: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 16515  010090  C03B  F135         	movff	_MACRxPacket+7,_rxMessage+9
 16516                           
 16517                           ; BSR set to: 1
 16518                           ;miwi_mesh.c: 312: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 16519  010094  C03A  F134         	movff	_MACRxPacket+6,_rxMessage+8
 16520                           
 16521                           ; BSR set to: 1
 16522                           ;miwi_mesh.c: 314: MiWiStateMachine.bits.RxHasUserData = 0;
 16523  010098  0100               	movlb	0	; () banked
 16524  01009A  95D4               	bcf	_MiWiStateMachine& (0+255),2,b
 16525                           
 16526                           ;miwi_mesh.c: 317: switch(MACRxPacket.flags.bits.packetType)
 16527  01009C  EF2F  F085         	goto	l11826
 16528  0100A0                     l11508:
 16529                           
 16530                           ;miwi_mesh.c: 347: if( MACRxPacket.PayloadLen < 10 )
 16531  0100A0  0E0A               	movlw	10
 16532  0100A2  6039               	cpfslt	_MACRxPacket+5,c
 16533  0100A4  D002               	goto	l11512
 16534  0100A6  EF3B  F085         	goto	l601
 16535  0100AA                     l11512:
 16536                           
 16537                           ;miwi_mesh.c: 350: }
 16538                           ;miwi_mesh.c: 353: destPANID.v[0] = MACRxPacket.Payload[2];
 16539  0100AA  EE20 F002          	lfsr	2,2
 16540  0100AE  5037               	movf	_MACRxPacket+3,w,c
 16541  0100B0  26D9               	addwf	fsr2l,f,c
 16542  0100B2  5038               	movf	_MACRxPacket+4,w,c
 16543  0100B4  22DA               	addwfc	fsr2h,f,c
 16544  0100B6  50DF               	movf	indf2,w,c
 16545  0100B8  0101               	movlb	1	; () banked
 16546  0100BA  6FDC               	movwf	MiWiTasks@destPANID& (0+255),b
 16547                           
 16548                           ;miwi_mesh.c: 354: destPANID.v[1] = MACRxPacket.Payload[3];
 16549  0100BC  EE20 F003          	lfsr	2,3
 16550  0100C0  5037               	movf	_MACRxPacket+3,w,c
 16551  0100C2  26D9               	addwf	fsr2l,f,c
 16552  0100C4  5038               	movf	_MACRxPacket+4,w,c
 16553  0100C6  22DA               	addwfc	fsr2h,f,c
 16554  0100C8  50DF               	movf	indf2,w,c
 16555  0100CA  0101               	movlb	1	; () banked
 16556  0100CC  6FDD               	movwf	(MiWiTasks@destPANID+1)& (0+255),b
 16557                           
 16558                           ;miwi_mesh.c: 355: destShortAddress.v[0] = MACRxPacket.Payload[4];
 16559  0100CE  EE20 F004          	lfsr	2,4
 16560  0100D2  5037               	movf	_MACRxPacket+3,w,c
 16561  0100D4  26D9               	addwf	fsr2l,f,c
 16562  0100D6  5038               	movf	_MACRxPacket+4,w,c
 16563  0100D8  22DA               	addwfc	fsr2h,f,c
 16564  0100DA  50DF               	movf	indf2,w,c
 16565  0100DC  0101               	movlb	1	; () banked
 16566  0100DE  6FDE               	movwf	MiWiTasks@destShortAddress& (0+255),b
 16567                           
 16568                           ;miwi_mesh.c: 356: destShortAddress.v[1] = MACRxPacket.Payload[5];
 16569  0100E0  EE20 F005          	lfsr	2,5
 16570  0100E4  5037               	movf	_MACRxPacket+3,w,c
 16571  0100E6  26D9               	addwf	fsr2l,f,c
 16572  0100E8  5038               	movf	_MACRxPacket+4,w,c
 16573  0100EA  22DA               	addwfc	fsr2h,f,c
 16574  0100EC  50DF               	movf	indf2,w,c
 16575  0100EE  0101               	movlb	1	; () banked
 16576  0100F0  6FDF               	movwf	(MiWiTasks@destShortAddress+1)& (0+255),b
 16577                           
 16578                           ;miwi_mesh.c: 357: sourcePANID.v[0] = MACRxPacket.Payload[6];
 16579  0100F2  EE20 F006          	lfsr	2,6
 16580  0100F6  5037               	movf	_MACRxPacket+3,w,c
 16581  0100F8  26D9               	addwf	fsr2l,f,c
 16582  0100FA  5038               	movf	_MACRxPacket+4,w,c
 16583  0100FC  22DA               	addwfc	fsr2h,f,c
 16584  0100FE  50DF               	movf	indf2,w,c
 16585  010100  0101               	movlb	1	; () banked
 16586  010102  6FE3               	movwf	MiWiTasks@sourcePANID& (0+255),b
 16587                           
 16588                           ;miwi_mesh.c: 358: sourcePANID.v[1] = MACRxPacket.Payload[7];
 16589  010104  EE20 F007          	lfsr	2,7
 16590  010108  5037               	movf	_MACRxPacket+3,w,c
 16591  01010A  26D9               	addwf	fsr2l,f,c
 16592  01010C  5038               	movf	_MACRxPacket+4,w,c
 16593  01010E  22DA               	addwfc	fsr2h,f,c
 16594  010110  50DF               	movf	indf2,w,c
 16595  010112  0101               	movlb	1	; () banked
 16596  010114  6FE4               	movwf	(MiWiTasks@sourcePANID+1)& (0+255),b
 16597                           
 16598                           ;miwi_mesh.c: 359: sourceShortAddress.v[0] = MACRxPacket.Payload[8];
 16599  010116  EE20 F008          	lfsr	2,8
 16600  01011A  5037               	movf	_MACRxPacket+3,w,c
 16601  01011C  26D9               	addwf	fsr2l,f,c
 16602  01011E  5038               	movf	_MACRxPacket+4,w,c
 16603  010120  22DA               	addwfc	fsr2h,f,c
 16604  010122  50DF               	movf	indf2,w,c
 16605  010124  0101               	movlb	1	; () banked
 16606  010126  6FE5               	movwf	MiWiTasks@sourceShortAddress& (0+255),b
 16607                           
 16608                           ;miwi_mesh.c: 360: sourceShortAddress.v[1] = MACRxPacket.Payload[9];
 16609  010128  EE20 F009          	lfsr	2,9
 16610  01012C  5037               	movf	_MACRxPacket+3,w,c
 16611  01012E  26D9               	addwf	fsr2l,f,c
 16612  010130  5038               	movf	_MACRxPacket+4,w,c
 16613  010132  22DA               	addwfc	fsr2h,f,c
 16614  010134  50DF               	movf	indf2,w,c
 16615  010136  0101               	movlb	1	; () banked
 16616  010138  6FE6               	movwf	(MiWiTasks@sourceShortAddress+1)& (0+255),b
 16617                           
 16618                           ; BSR set to: 1
 16619                           ;miwi_mesh.c: 362: rxMessage.flags.Val = 0;
 16620  01013A  0E00               	movlw	0
 16621  01013C  0101               	movlb	1	; () banked
 16622  01013E  6F2C               	movwf	_rxMessage& (0+255),b
 16623                           
 16624                           ; BSR set to: 1
 16625                           ;miwi_mesh.c: 363: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 16626  010140  A634               	btfss	_MACRxPacket,3,c
 16627  010142  D003               	bra	u13045
 16628  010144  0101               	movlb	1	; () banked
 16629  010146  872C               	bsf	_rxMessage& (0+255),3,b
 16630  010148  D002               	bra	u13047
 16631  01014A                     u13045:
 16632  01014A  0101               	movlb	1	; () banked
 16633  01014C  972C               	bcf	_rxMessage& (0+255),3,b
 16634  01014E                     u13047:
 16635                           
 16636                           ; BSR set to: 1
 16637                           ;miwi_mesh.c: 365: if(rxMessage.flags.bits.broadcast || destShortAddress.Val == 0xFFFF)
 16638  01014E  0101               	movlb	1	; () banked
 16639  010150  512C               	movf	_rxMessage& (0+255),w,b
 16640  010152  0B03               	andlw	3
 16641  010154  0900               	iorlw	0
 16642  010156  A4D8               	btfss	status,2,c
 16643  010158  D007               	goto	l11522
 16644                           
 16645                           ; BSR set to: 1
 16646  01015A  0101               	movlb	1	; () banked
 16647  01015C  29DE               	incf	MiWiTasks@destShortAddress& (0+255),w,b
 16648  01015E  E103               	bnz	u13061
 16649  010160  0101               	movlb	1	; () banked
 16650  010162  29DF               	incf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 16651  010164  A4D8               	btfss	status,2,c
 16652  010166                     u13061:
 16653  010166  D0D2               	goto	l11576
 16654  010168                     l11522:
 16655                           
 16656                           ; BSR set to: 1
 16657                           ;miwi_mesh.c: 366: {
 16658                           ;miwi_mesh.c: 368: if( sourceShortAddress.Val == myShortAddress.Val &&
 16659                           ;miwi_mesh.c: 369: sourcePANID.Val == myPANID.Val )
 16660  010168  0100               	movlb	0	; () banked
 16661  01016A  51DD               	movf	_myShortAddress& (0+255),w,b
 16662  01016C  0101               	movlb	1	; () banked
 16663  01016E  19E5               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 16664  010170  E112               	bnz	l11528
 16665  010172  0100               	movlb	0	; () banked
 16666  010174  51DE               	movf	(_myShortAddress+1)& (0+255),w,b
 16667  010176  0101               	movlb	1	; () banked
 16668  010178  19E6               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 16669  01017A  A4D8               	btfss	status,2,c
 16670  01017C  D00C               	goto	l11528
 16671                           
 16672                           ; BSR set to: 1
 16673  01017E  0100               	movlb	0	; () banked
 16674  010180  51DB               	movf	_myPANID& (0+255),w,b
 16675  010182  0101               	movlb	1	; () banked
 16676  010184  19E3               	xorwf	MiWiTasks@sourcePANID& (0+255),w,b
 16677  010186  E107               	bnz	l11528
 16678  010188  0100               	movlb	0	; () banked
 16679  01018A  51DC               	movf	(_myPANID+1)& (0+255),w,b
 16680  01018C  0101               	movlb	1	; () banked
 16681  01018E  19E4               	xorwf	(MiWiTasks@sourcePANID+1)& (0+255),w,b
 16682  010190  B4D8               	btfsc	status,2,c
 16683  010192  EF3B  F085         	goto	l601
 16684  010196                     l11528:
 16685                           
 16686                           ; BSR set to: 1
 16687                           ;miwi_mesh.c: 372: }
 16688                           ;miwi_mesh.c: 420: for(i = 0; i < 4; i++)
 16689  010196  0E00               	movlw	0
 16690  010198  0101               	movlb	1	; () banked
 16691  01019A  6FE7               	movwf	MiWiTasks@i& (0+255),b
 16692  01019C                     l11530:
 16693                           
 16694                           ; BSR set to: 1
 16695  01019C  0E03               	movlw	3
 16696  01019E  0101               	movlb	1	; () banked
 16697  0101A0  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 16698  0101A2  D001               	goto	l11534
 16699  0101A4  D03C               	goto	l11546
 16700  0101A6                     l11534:
 16701                           
 16702                           ; BSR set to: 1
 16703                           ;miwi_mesh.c: 421: {
 16704                           ;miwi_mesh.c: 422: if( BroadcastRecords[i].RxCounter &&
 16705                           ;miwi_mesh.c: 423: BroadcastRecords[i].AltSourceAddr.Val == sourceShortAddress.Val &&
 16706                           ;miwi_mesh.c: 424: BroadcastRecords[i].MiWiSeq == MACRxPacket.Payload[10] )
 16707  0101A6  0101               	movlb	1	; () banked
 16708  0101A8  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16709  0101AA  0D08               	mullw	8
 16710  0101AC  0E03               	movlw	3
 16711  0101AE  26F3               	addwf	prodl,f,c
 16712  0101B0  0E00               	movlw	0
 16713  0101B2  22F4               	addwfc	prodh,f,c
 16714  0101B4  0E00               	movlw	low _BroadcastRecords
 16715  0101B6  24F3               	addwf	prodl,w,c
 16716  0101B8  6ED9               	movwf	fsr2l,c
 16717  0101BA  0E01               	movlw	high _BroadcastRecords
 16718  0101BC  20F4               	addwfc	prodh,w,c
 16719  0101BE  6EDA               	movwf	fsr2h,c
 16720  0101C0  50DF               	movf	indf2,w,c
 16721  0101C2  B4D8               	btfsc	status,2,c
 16722  0101C4  D029               	goto	l11542
 16723                           
 16724                           ; BSR set to: 1
 16725  0101C6  0101               	movlb	1	; () banked
 16726  0101C8  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16727  0101CA  0D08               	mullw	8
 16728  0101CC  0E00               	movlw	low _BroadcastRecords
 16729  0101CE  24F3               	addwf	prodl,w,c
 16730  0101D0  6ED9               	movwf	fsr2l,c
 16731  0101D2  0E01               	movlw	high _BroadcastRecords
 16732  0101D4  20F4               	addwfc	prodh,w,c
 16733  0101D6  6EDA               	movwf	fsr2h,c
 16734  0101D8  0101               	movlb	1	; () banked
 16735  0101DA  51E5               	movf	MiWiTasks@sourceShortAddress& (0+255),w,b
 16736  0101DC  18DE               	xorwf	postinc2,w,c
 16737  0101DE  E11C               	bnz	l11542
 16738  0101E0  0101               	movlb	1	; () banked
 16739  0101E2  51E6               	movf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 16740  0101E4  18DE               	xorwf	postinc2,w,c
 16741  0101E6  A4D8               	btfss	status,2,c
 16742  0101E8  D017               	goto	l11542
 16743                           
 16744                           ; BSR set to: 1
 16745  0101EA  EE20 F00A          	lfsr	2,10
 16746  0101EE  5037               	movf	_MACRxPacket+3,w,c
 16747  0101F0  26D9               	addwf	fsr2l,f,c
 16748  0101F2  5038               	movf	_MACRxPacket+4,w,c
 16749  0101F4  22DA               	addwfc	fsr2h,f,c
 16750  0101F6  0101               	movlb	1	; () banked
 16751  0101F8  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16752  0101FA  0D08               	mullw	8
 16753  0101FC  0E02               	movlw	2
 16754  0101FE  26F3               	addwf	prodl,f,c
 16755  010200  0E00               	movlw	0
 16756  010202  22F4               	addwfc	prodh,f,c
 16757  010204  0E00               	movlw	low _BroadcastRecords
 16758  010206  24F3               	addwf	prodl,w,c
 16759  010208  6EE1               	movwf	fsr1l,c
 16760  01020A  0E01               	movlw	high _BroadcastRecords
 16761  01020C  20F4               	addwfc	prodh,w,c
 16762  01020E  6EE2               	movwf	fsr1h,c
 16763  010210  50DE               	movf	postinc2,w,c
 16764  010212  18E6               	xorwf	postinc1,w,c
 16765  010214  B4D8               	btfsc	status,2,c
 16766  010216  D003               	goto	l11546
 16767  010218                     l11542:
 16768                           
 16769                           ; BSR set to: 1
 16770  010218  0101               	movlb	1	; () banked
 16771  01021A  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 16772  01021C  D7BF               	goto	l11530
 16773  01021E                     l11546:
 16774                           
 16775                           ; BSR set to: 1
 16776                           ;miwi_mesh.c: 427: }
 16777                           ;miwi_mesh.c: 428: }
 16778                           ;miwi_mesh.c: 431: if( i < 4 )
 16779  01021E  0E04               	movlw	4
 16780  010220  0101               	movlb	1	; () banked
 16781  010222  61E7               	cpfslt	MiWiTasks@i& (0+255),b
 16782  010224  D002               	goto	l11550
 16783  010226  EF3B  F085         	goto	l601
 16784  01022A                     l11550:
 16785                           
 16786                           ; BSR set to: 1
 16787                           ;miwi_mesh.c: 437: }
 16788                           ;miwi_mesh.c: 441: for(i = 0; i < 4; i++)
 16789  01022A  0E00               	movlw	0
 16790  01022C  0101               	movlb	1	; () banked
 16791  01022E  6FE7               	movwf	MiWiTasks@i& (0+255),b
 16792  010230                     l11552:
 16793                           
 16794                           ; BSR set to: 1
 16795  010230  0E03               	movlw	3
 16796  010232  0101               	movlb	1	; () banked
 16797  010234  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 16798  010236  D001               	goto	l11556
 16799  010238  D013               	goto	l11564
 16800  01023A                     l11556:
 16801                           
 16802                           ; BSR set to: 1
 16803                           ;miwi_mesh.c: 442: {
 16804                           ;miwi_mesh.c: 443: if( BroadcastRecords[i].RxCounter == 0 )
 16805  01023A  0101               	movlb	1	; () banked
 16806  01023C  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16807  01023E  0D08               	mullw	8
 16808  010240  0E03               	movlw	3
 16809  010242  26F3               	addwf	prodl,f,c
 16810  010244  0E00               	movlw	0
 16811  010246  22F4               	addwfc	prodh,f,c
 16812  010248  0E00               	movlw	low _BroadcastRecords
 16813  01024A  24F3               	addwf	prodl,w,c
 16814  01024C  6ED9               	movwf	fsr2l,c
 16815  01024E  0E01               	movlw	high _BroadcastRecords
 16816  010250  20F4               	addwfc	prodh,w,c
 16817  010252  6EDA               	movwf	fsr2h,c
 16818  010254  50DF               	movf	indf2,w,c
 16819  010256  B4D8               	btfsc	status,2,c
 16820  010258  D003               	goto	l11564
 16821                           
 16822                           ; BSR set to: 1
 16823                           
 16824                           ; BSR set to: 1
 16825                           
 16826                           ; BSR set to: 1
 16827                           ;miwi_mesh.c: 444: {
 16828                           ;miwi_mesh.c: 445: break;
 16829  01025A  0101               	movlb	1	; () banked
 16830  01025C  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 16831  01025E  D7E8               	goto	l11552
 16832  010260                     l11564:
 16833                           
 16834                           ; BSR set to: 1
 16835                           ;miwi_mesh.c: 446: }
 16836                           ;miwi_mesh.c: 447: }
 16837                           ;miwi_mesh.c: 449: if( i < 4 )
 16838  010260  0E04               	movlw	4
 16839  010262  0101               	movlb	1	; () banked
 16840  010264  61E7               	cpfslt	MiWiTasks@i& (0+255),b
 16841  010266  D04C               	goto	l11574
 16842                           
 16843                           ; BSR set to: 1
 16844                           ;miwi_mesh.c: 450: {
 16845                           ;miwi_mesh.c: 451: BroadcastRecords[i].AltSourceAddr.Val = sourceShortAddress.Val;
 16846  010268  0101               	movlb	1	; () banked
 16847  01026A  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16848  01026C  0D08               	mullw	8
 16849  01026E  0E00               	movlw	low _BroadcastRecords
 16850  010270  24F3               	addwf	prodl,w,c
 16851  010272  6ED9               	movwf	fsr2l,c
 16852  010274  0E01               	movlw	high _BroadcastRecords
 16853  010276  20F4               	addwfc	prodh,w,c
 16854  010278  6EDA               	movwf	fsr2h,c
 16855  01027A  C1E5  FFDE         	movff	MiWiTasks@sourceShortAddress,postinc2
 16856  01027E  C1E6  FFDD         	movff	MiWiTasks@sourceShortAddress+1,postdec2
 16857                           
 16858                           ; BSR set to: 1
 16859                           ;miwi_mesh.c: 452: BroadcastRecords[i].MiWiSeq = MACRxPacket.Payload[10];
 16860  010282  EE20 F00A          	lfsr	2,10
 16861  010286  5037               	movf	_MACRxPacket+3,w,c
 16862  010288  26D9               	addwf	fsr2l,f,c
 16863  01028A  5038               	movf	_MACRxPacket+4,w,c
 16864  01028C  22DA               	addwfc	fsr2h,f,c
 16865  01028E  0101               	movlb	1	; () banked
 16866  010290  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16867  010292  0D08               	mullw	8
 16868  010294  0E02               	movlw	2
 16869  010296  26F3               	addwf	prodl,f,c
 16870  010298  0E00               	movlw	0
 16871  01029A  22F4               	addwfc	prodh,f,c
 16872  01029C  0E00               	movlw	low _BroadcastRecords
 16873  01029E  24F3               	addwf	prodl,w,c
 16874  0102A0  6EE1               	movwf	fsr1l,c
 16875  0102A2  0E01               	movlw	high _BroadcastRecords
 16876  0102A4  20F4               	addwfc	prodh,w,c
 16877  0102A6  6EE2               	movwf	fsr1h,c
 16878  0102A8  CFDF FFE7          	movff	indf2,indf1
 16879                           
 16880                           ; BSR set to: 1
 16881                           ;miwi_mesh.c: 453: BroadcastRecords[i].RxCounter = 2 + 1;
 16882  0102AC  0101               	movlb	1	; () banked
 16883  0102AE  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16884  0102B0  0D08               	mullw	8
 16885  0102B2  0E03               	movlw	3
 16886  0102B4  26F3               	addwf	prodl,f,c
 16887  0102B6  0E00               	movlw	0
 16888  0102B8  22F4               	addwfc	prodh,f,c
 16889  0102BA  0E00               	movlw	low _BroadcastRecords
 16890  0102BC  24F3               	addwf	prodl,w,c
 16891  0102BE  6ED9               	movwf	fsr2l,c
 16892  0102C0  0E01               	movlw	high _BroadcastRecords
 16893  0102C2  20F4               	addwfc	prodh,w,c
 16894  0102C4  6EDA               	movwf	fsr2h,c
 16895  0102C6  0E03               	movlw	3
 16896  0102C8  6EDF               	movwf	indf2,c
 16897                           
 16898                           ; BSR set to: 1
 16899                           ;miwi_mesh.c: 455: BroadcastRecords[i].StartTick = MiWi_TickGet();
 16900  0102CA  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 16901  0102CE  0101               	movlb	1	; () banked
 16902  0102D0  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16903  0102D2  0D08               	mullw	8
 16904  0102D4  0E04               	movlw	4
 16905  0102D6  26F3               	addwf	prodl,f,c
 16906  0102D8  0E00               	movlw	0
 16907  0102DA  22F4               	addwfc	prodh,f,c
 16908  0102DC  0E00               	movlw	low _BroadcastRecords
 16909  0102DE  24F3               	addwf	prodl,w,c
 16910  0102E0  6ED9               	movwf	fsr2l,c
 16911  0102E2  0E01               	movlw	high _BroadcastRecords
 16912  0102E4  20F4               	addwfc	prodh,w,c
 16913  0102E6  6EDA               	movwf	fsr2h,c
 16914  0102E8  0100               	movlb	0	; () banked
 16915  0102EA  C081  FFDE         	movff	?_MiWi_TickGet,postinc2
 16916  0102EE  0100               	movlb	0	; () banked
 16917  0102F0  C082  FFDE         	movff	?_MiWi_TickGet+1,postinc2
 16918  0102F4  0100               	movlb	0	; () banked
 16919  0102F6  C083  FFDE         	movff	?_MiWi_TickGet+2,postinc2
 16920  0102FA  0100               	movlb	0	; () banked
 16921  0102FC  C084  FFDE         	movff	?_MiWi_TickGet+3,postinc2
 16922  010300                     l11574:
 16923                           
 16924                           ;miwi_mesh.c: 457: }
 16925                           ;miwi_mesh.c: 459: rxMessage.flags.bits.broadcast = 1;
 16926  010300  0101               	movlb	1	; () banked
 16927  010302  512C               	movf	_rxMessage& (0+255),w,b
 16928  010304  0BFC               	andlw	-4
 16929  010306  0901               	iorlw	1
 16930  010308  6F2C               	movwf	_rxMessage& (0+255),b
 16931                           
 16932                           ;miwi_mesh.c: 460: goto ThisPacketIsForMe;
 16933  01030A  D06B               	goto	l11620
 16934  01030C                     l11576:
 16935                           
 16936                           ; BSR set to: 1
 16937                           ;miwi_mesh.c: 461: }
 16938                           ;miwi_mesh.c: 464: if((destPANID.Val == myPANID.Val) && (destShortAddress.Val == myShort
      +                          Address.Val))
 16939  01030C  0100               	movlb	0	; () banked
 16940  01030E  51DB               	movf	_myPANID& (0+255),w,b
 16941  010310  0101               	movlb	1	; () banked
 16942  010312  19DC               	xorwf	MiWiTasks@destPANID& (0+255),w,b
 16943  010314  E105               	bnz	u13191
 16944  010316  0100               	movlb	0	; () banked
 16945  010318  51DC               	movf	(_myPANID+1)& (0+255),w,b
 16946  01031A  0101               	movlb	1	; () banked
 16947  01031C  19DD               	xorwf	(MiWiTasks@destPANID+1)& (0+255),w,b
 16948  01031E  A4D8               	btfss	status,2,c
 16949  010320                     u13191:
 16950  010320  D3AA               	goto	l601
 16951                           
 16952                           ; BSR set to: 1
 16953  010322  0100               	movlb	0	; () banked
 16954  010324  51DD               	movf	_myShortAddress& (0+255),w,b
 16955  010326  0101               	movlb	1	; () banked
 16956  010328  19DE               	xorwf	MiWiTasks@destShortAddress& (0+255),w,b
 16957  01032A  E105               	bnz	u13201
 16958  01032C  0100               	movlb	0	; () banked
 16959  01032E  51DE               	movf	(_myShortAddress+1)& (0+255),w,b
 16960  010330  0101               	movlb	1	; () banked
 16961  010332  19DF               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 16962  010334  A4D8               	btfss	status,2,c
 16963  010336                     u13201:
 16964  010336  D39F               	goto	l601
 16965                           
 16966                           ; BSR set to: 1
 16967                           ;miwi_mesh.c: 465: {
 16968                           ;miwi_mesh.c: 467: if(MACRxPacket.Payload[1] & 0x04)
 16969  010338  EE20 F001          	lfsr	2,1
 16970  01033C  5037               	movf	_MACRxPacket+3,w,c
 16971  01033E  26D9               	addwf	fsr2l,f,c
 16972  010340  5038               	movf	_MACRxPacket+4,w,c
 16973  010342  22DA               	addwfc	fsr2h,f,c
 16974  010344  A4DF               	btfss	indf2,2,c
 16975  010346  D04D               	goto	l11620
 16976                           
 16977                           ; BSR set to: 1
 16978                           ;miwi_mesh.c: 468: {
 16979                           ;miwi_mesh.c: 469: TxBuffer[0] = defaultHops;
 16980  010348  C04A  F16C         	movff	_defaultHops,_TxBuffer
 16981                           
 16982                           ; BSR set to: 1
 16983                           ;miwi_mesh.c: 470: TxBuffer[1] = 0x02;
 16984  01034C  0E02               	movlw	2
 16985  01034E  0101               	movlb	1	; () banked
 16986  010350  6F6D               	movwf	(_TxBuffer+1)& (0+255),b
 16987                           
 16988                           ; BSR set to: 1
 16989                           ;miwi_mesh.c: 471: TxBuffer[2] = sourcePANID.v[0];
 16990  010352  C1E3  F16E         	movff	MiWiTasks@sourcePANID,_TxBuffer+2
 16991                           
 16992                           ; BSR set to: 1
 16993                           ;miwi_mesh.c: 472: TxBuffer[3] = sourcePANID.v[1];
 16994  010356  C1E4  F16F         	movff	MiWiTasks@sourcePANID+1,_TxBuffer+3
 16995                           
 16996                           ; BSR set to: 1
 16997                           ;miwi_mesh.c: 473: TxBuffer[4] = sourceShortAddress.v[0];
 16998  01035A  C1E5  F170         	movff	MiWiTasks@sourceShortAddress,_TxBuffer+4
 16999                           
 17000                           ; BSR set to: 1
 17001                           ;miwi_mesh.c: 474: TxBuffer[5] = sourceShortAddress.v[1];
 17002  01035E  C1E6  F171         	movff	MiWiTasks@sourceShortAddress+1,_TxBuffer+5
 17003                           
 17004                           ; BSR set to: 1
 17005                           ;miwi_mesh.c: 475: TxBuffer[6] = myPANID.v[0];
 17006  010362  C0DB  F172         	movff	_myPANID,_TxBuffer+6
 17007                           
 17008                           ; BSR set to: 1
 17009                           ;miwi_mesh.c: 476: TxBuffer[7] = myPANID.v[1];
 17010  010366  C0DC  F173         	movff	_myPANID+1,_TxBuffer+7
 17011                           
 17012                           ; BSR set to: 1
 17013                           ;miwi_mesh.c: 477: TxBuffer[8] = myShortAddress.v[0];
 17014  01036A  C0DD  F174         	movff	_myShortAddress,_TxBuffer+8
 17015                           
 17016                           ; BSR set to: 1
 17017                           ;miwi_mesh.c: 478: TxBuffer[9] = myShortAddress.v[1];
 17018  01036E  C0DE  F175         	movff	_myShortAddress+1,_TxBuffer+9
 17019                           
 17020                           ; BSR set to: 1
 17021                           ;miwi_mesh.c: 479: TxBuffer[10] = MACRxPacket.Payload[11-1];
 17022  010372  EE20 F00A          	lfsr	2,10
 17023  010376  5037               	movf	_MACRxPacket+3,w,c
 17024  010378  26D9               	addwf	fsr2l,f,c
 17025  01037A  5038               	movf	_MACRxPacket+4,w,c
 17026  01037C  22DA               	addwfc	fsr2h,f,c
 17027  01037E  50DF               	movf	indf2,w,c
 17028  010380  0101               	movlb	1	; () banked
 17029  010382  6F76               	movwf	(_TxBuffer+10)& (0+255),b
 17030                           
 17031                           ; BSR set to: 1
 17032                           ;miwi_mesh.c: 480: TxBuffer[11] = 0x00;
 17033  010384  0E00               	movlw	0
 17034  010386  0101               	movlb	1	; () banked
 17035  010388  6F77               	movwf	(_TxBuffer+11)& (0+255),b
 17036                           
 17037                           ; BSR set to: 1
 17038                           ;miwi_mesh.c: 481: TxBuffer[12] = 0x30;
 17039  01038A  0E30               	movlw	48
 17040  01038C  0101               	movlb	1	; () banked
 17041  01038E  6F78               	movwf	(_TxBuffer+12)& (0+255),b
 17042                           
 17043                           ; BSR set to: 1
 17044                           ;miwi_mesh.c: 482: TxData = 13;
 17045  010390  0E0D               	movlw	13
 17046  010392  0100               	movlb	0	; () banked
 17047  010394  6FD8               	movwf	_TxData& (0+255),b
 17048                           
 17049                           ; BSR set to: 0
 17050                           ;miwi_mesh.c: 512: MTP.flags.Val = 0;
 17051  010396  0E00               	movlw	0
 17052  010398  0100               	movlb	0	; () banked
 17053  01039A  6FD1               	movwf	_MTP& (0+255),b
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;miwi_mesh.c: 513: MTP.flags.bits.ackReq = 1;
 17057  01039C  0100               	movlb	0	; () banked
 17058  01039E  8BD1               	bsf	_MTP& (0+255),5,b
 17059                           
 17060                           ; BSR set to: 0
 17061                           ;miwi_mesh.c: 521: MTP.DestAddress = ConnectionTable[myParent].Address;
 17062  0103A0  0100               	movlb	0	; () banked
 17063  0103A2  51D9               	movf	_myParent& (0+255),w,b
 17064  0103A4  0D09               	mullw	9
 17065  0103A6  0E04               	movlw	4
 17066  0103A8  26F3               	addwf	prodl,f,c
 17067  0103AA  0E00               	movlw	0
 17068  0103AC  22F4               	addwfc	prodh,f,c
 17069  0103AE  0E46               	movlw	low _ConnectionTable
 17070  0103B0  24F3               	addwf	prodl,w,c
 17071  0103B2  0100               	movlb	0	; () banked
 17072  0103B4  6FD2               	movwf	(_MTP+1)& (0+255),b
 17073  0103B6  0E02               	movlw	high _ConnectionTable
 17074  0103B8  20F4               	addwfc	prodh,w,c
 17075  0103BA  0100               	movlb	0	; () banked
 17076  0103BC  6FD3               	movwf	(_MTP+2)& (0+255),b
 17077                           
 17078                           ; BSR set to: 0
 17079                           ;miwi_mesh.c: 524: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 17080  0103BE  C0D1  F0B0         	movff	_MTP,MiMAC_SendPacket@transParam
 17081  0103C2  C0D2  F0B1         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 17082  0103C6  C0D3  F0B2         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 17083  0103CA  0E6C               	movlw	low _TxBuffer
 17084  0103CC  0100               	movlb	0	; () banked
 17085  0103CE  6FB3               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 17086  0103D0  0E01               	movlw	high _TxBuffer
 17087  0103D2  0100               	movlb	0	; () banked
 17088  0103D4  6FB4               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 17089  0103D6  C0D8  F0B5         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 17090  0103DA  ECED  F09A         	call	_MiMAC_SendPacket	;wreg free
 17091                           
 17092                           ;miwi_mesh.c: 526: rxMessage.flags.bits.ackReq = 1;
 17093  0103DE  0101               	movlb	1	; () banked
 17094  0103E0  852C               	bsf	_rxMessage& (0+255),2,b
 17095  0103E2                     l11620:
 17096                           
 17097                           ; BSR set to: 1
 17098                           ;miwi_mesh.c: 531: if(MACRxPacket.Payload[11] == 0x00)
 17099  0103E2  EE20 F00B          	lfsr	2,11
 17100  0103E6  5037               	movf	_MACRxPacket+3,w,c
 17101  0103E8  26D9               	addwf	fsr2l,f,c
 17102  0103EA  5038               	movf	_MACRxPacket+4,w,c
 17103  0103EC  22DA               	addwfc	fsr2h,f,c
 17104  0103EE  50DF               	movf	indf2,w,c
 17105  0103F0  A4D8               	btfss	status,2,c
 17106  0103F2  D0A6               	goto	l11680
 17107                           
 17108                           ; BSR set to: 1
 17109                           ;miwi_mesh.c: 532: {
 17110                           ;miwi_mesh.c: 533: if( MACRxPacket.Payload[11+1] != 0x30)
 17111  0103F4  EE20 F00C          	lfsr	2,12
 17112  0103F8  5037               	movf	_MACRxPacket+3,w,c
 17113  0103FA  26D9               	addwf	fsr2l,f,c
 17114  0103FC  5038               	movf	_MACRxPacket+4,w,c
 17115  0103FE  22DA               	addwfc	fsr2h,f,c
 17116  010400  0E30               	movlw	48
 17117  010402  18DE               	xorwf	postinc2,w,c
 17118  010404  A4D8               	btfss	status,2,c
 17119  010406  D078               	goto	l11672
 17120  010408  D082               	goto	l11674
 17121  01040A                     l11626:
 17122                           
 17123                           ; BSR set to: 1
 17124                           ;miwi_mesh.c: 826: {
 17125                           ;miwi_mesh.c: 827: uint8_t j;
 17126                           ;miwi_mesh.c: 830: for(j=0;j<4;j++)
 17127  01040A  0E00               	movlw	0
 17128  01040C  0101               	movlb	1	; () banked
 17129  01040E  6FE2               	movwf	MiWiTasks@j& (0+255),b
 17130  010410                     l11628:
 17131                           
 17132                           ; BSR set to: 1
 17133  010410  0E03               	movlw	3
 17134  010412  0101               	movlb	1	; () banked
 17135  010414  65E2               	cpfsgt	MiWiTasks@j& (0+255),b
 17136  010416  D001               	goto	l11632
 17137  010418  D020               	goto	l11638
 17138  01041A                     l11632:
 17139                           
 17140                           ; BSR set to: 1
 17141                           ;miwi_mesh.c: 831: {
 17142                           ;miwi_mesh.c: 832: tempLongAddress[j] = MACRxPacket.Payload[j+13];
 17143  01041A  0101               	movlb	1	; () banked
 17144  01041C  51E2               	movf	MiWiTasks@j& (0+255),w,b
 17145  01041E  0100               	movlb	0	; () banked
 17146  010420  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17147  010422  6BC9               	clrf	(??_MiWiTasks+1)& (0+255),b
 17148  010424  0E0D               	movlw	13
 17149  010426  0100               	movlb	0	; () banked
 17150  010428  27C8               	addwf	??_MiWiTasks& (0+255),f,b
 17151  01042A  0E00               	movlw	0
 17152  01042C  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17153  01042E  0100               	movlb	0	; () banked
 17154  010430  51C8               	movf	??_MiWiTasks& (0+255),w,b
 17155  010432  2437               	addwf	_MACRxPacket+3,w,c
 17156  010434  6ED9               	movwf	fsr2l,c
 17157  010436  0100               	movlb	0	; () banked
 17158  010438  51C9               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17159  01043A  2038               	addwfc	_MACRxPacket+4,w,c
 17160  01043C  6EDA               	movwf	fsr2h,c
 17161  01043E  0101               	movlb	1	; () banked
 17162  010440  51E2               	movf	MiWiTasks@j& (0+255),w,b
 17163  010442  0D01               	mullw	1
 17164  010444  0E4E               	movlw	low _tempLongAddress
 17165  010446  24F3               	addwf	prodl,w,c
 17166  010448  6EE1               	movwf	fsr1l,c
 17167  01044A  0E01               	movlw	high _tempLongAddress
 17168  01044C  20F4               	addwfc	prodh,w,c
 17169  01044E  6EE2               	movwf	fsr1h,c
 17170  010450  CFDF FFE7          	movff	indf2,indf1
 17171                           
 17172                           ; BSR set to: 1
 17173  010454  0101               	movlb	1	; () banked
 17174  010456  2BE2               	incf	MiWiTasks@j& (0+255),f,b
 17175  010458  D7DB               	goto	l11628
 17176  01045A                     l11638:
 17177                           
 17178                           ; BSR set to: 1
 17179                           ;miwi_mesh.c: 833: }
 17180                           ;miwi_mesh.c: 836: tempNodeStatus.Val = 0x8D;
 17181  01045A  0E8D               	movlw	141
 17182  01045C  6E48               	movwf	_tempNodeStatus,c
 17183                           
 17184                           ; BSR set to: 1
 17185                           ;miwi_mesh.c: 838: if(MACRxPacket.Payload[13+4] & 0x80)
 17186  01045E  EE20 F011          	lfsr	2,17
 17187  010462  5037               	movf	_MACRxPacket+3,w,c
 17188  010464  26D9               	addwf	fsr2l,f,c
 17189  010466  5038               	movf	_MACRxPacket+4,w,c
 17190  010468  22DA               	addwfc	fsr2h,f,c
 17191  01046A  BEDF               	btfsc	indf2,7,c
 17192                           
 17193                           ; BSR set to: 1
 17194                           ;miwi_mesh.c: 839: {
 17195                           ;miwi_mesh.c: 840: tempNodeStatus.bits.RXOnWhenIdle = 0;
 17196  01046C  9048               	bcf	_tempNodeStatus,0,c
 17197                           
 17198                           ; BSR set to: 1
 17199                           ;miwi_mesh.c: 841: }
 17200                           ;miwi_mesh.c: 844: tempShortAddress.v[0] = MACRxPacket.Payload[4+13];
 17201                           
 17202                           ; BSR set to: 1
 17203  01046E  EE20 F011          	lfsr	2,17
 17204  010472  5037               	movf	_MACRxPacket+3,w,c
 17205  010474  26D9               	addwf	fsr2l,f,c
 17206  010476  5038               	movf	_MACRxPacket+4,w,c
 17207  010478  22DA               	addwfc	fsr2h,f,c
 17208  01047A  50DF               	movf	indf2,w,c
 17209  01047C  0101               	movlb	1	; () banked
 17210  01047E  6FD0               	movwf	_tempShortAddress& (0+255),b
 17211                           
 17212                           ;miwi_mesh.c: 845: tempShortAddress.v[1] = MACRxPacket.Payload[4+14];
 17213  010480  EE20 F012          	lfsr	2,18
 17214  010484  5037               	movf	_MACRxPacket+3,w,c
 17215  010486  26D9               	addwf	fsr2l,f,c
 17216  010488  5038               	movf	_MACRxPacket+4,w,c
 17217  01048A  22DA               	addwfc	fsr2h,f,c
 17218  01048C  50DF               	movf	indf2,w,c
 17219  01048E  0101               	movlb	1	; () banked
 17220  010490  6FD1               	movwf	(_tempShortAddress+1)& (0+255),b
 17221                           
 17222                           ; BSR set to: 1
 17223                           ;miwi_mesh.c: 848: tempPANID.Val = myPANID.Val;
 17224  010492  C0DB  F15E         	movff	_myPANID,_tempPANID
 17225  010496  C0DC  F15F         	movff	_myPANID+1,_tempPANID+1
 17226                           
 17227                           ; BSR set to: 1
 17228                           ;miwi_mesh.c: 851: openSocketInfo.socketHandle = SearchForShortAddress();
 17229  01049A  ECDD  F0AF         	call	_SearchForShortAddress	;wreg free
 17230  01049E  0101               	movlb	1	; () banked
 17231  0104A0  6F21               	movwf	(_openSocketInfo+1)& (0+255),b
 17232                           
 17233                           ; BSR set to: 1
 17234                           ;miwi_mesh.c: 853: if(openSocketInfo.socketHandle != 0xFF)
 17235  0104A2  0101               	movlb	1	; () banked
 17236  0104A4  2921               	incf	(_openSocketInfo+1)& (0+255),w,b
 17237  0104A6  B4D8               	btfsc	status,2,c
 17238  0104A8  D012               	goto	l11658
 17239                           
 17240                           ; BSR set to: 1
 17241                           ;miwi_mesh.c: 854: {
 17242                           ;miwi_mesh.c: 856: tempNodeStatus.Val = ConnectionTable[openSocketInfo.socketHandle].sta
      +                          tus.Val;
 17243  0104AA  0101               	movlb	1	; () banked
 17244  0104AC  5121               	movf	(_openSocketInfo+1)& (0+255),w,b
 17245  0104AE  0D09               	mullw	9
 17246  0104B0  0E08               	movlw	8
 17247  0104B2  26F3               	addwf	prodl,f,c
 17248  0104B4  0E00               	movlw	0
 17249  0104B6  22F4               	addwfc	prodh,f,c
 17250  0104B8  0E46               	movlw	low _ConnectionTable
 17251  0104BA  24F3               	addwf	prodl,w,c
 17252  0104BC  6ED9               	movwf	fsr2l,c
 17253  0104BE  0E02               	movlw	high _ConnectionTable
 17254  0104C0  20F4               	addwfc	prodh,w,c
 17255  0104C2  6EDA               	movwf	fsr2h,c
 17256  0104C4  50DF               	movf	indf2,w,c
 17257  0104C6  6E48               	movwf	_tempNodeStatus,c
 17258                           
 17259                           ; BSR set to: 1
 17260                           ;miwi_mesh.c: 857: tempNodeStatus.bits.longAddressValid = 1;
 17261  0104C8  8448               	bsf	_tempNodeStatus,2,c
 17262                           
 17263                           ; BSR set to: 1
 17264                           ;miwi_mesh.c: 858: tempNodeStatus.bits.shortAddressValid = 1;
 17265  0104CA  8648               	bsf	_tempNodeStatus,3,c
 17266                           
 17267                           ;miwi_mesh.c: 859: }
 17268  0104CC  D005               	goto	l11664
 17269  0104CE                     l11658:
 17270                           
 17271                           ; BSR set to: 1
 17272                           ;miwi_mesh.c: 860: else
 17273                           ;miwi_mesh.c: 861: {
 17274                           ;miwi_mesh.c: 863: tempNodeStatus.Val = 0x8D;
 17275  0104CE  0E8D               	movlw	141
 17276  0104D0  6E48               	movwf	_tempNodeStatus,c
 17277                           
 17278                           ; BSR set to: 1
 17279                           ;miwi_mesh.c: 864: if(tempShortAddress.v[0] & 0x80)
 17280  0104D2  0101               	movlb	1	; () banked
 17281  0104D4  BFD0               	btfsc	_tempShortAddress& (0+255),7,b
 17282                           
 17283                           ; BSR set to: 1
 17284                           ;miwi_mesh.c: 865: {
 17285                           ;miwi_mesh.c: 866: tempNodeStatus.bits.RXOnWhenIdle = 0;
 17286  0104D6  9048               	bcf	_tempNodeStatus,0,c
 17287  0104D8                     l11664:
 17288                           
 17289                           ; BSR set to: 1
 17290                           ;miwi_mesh.c: 867: }
 17291                           ;miwi_mesh.c: 868: }
 17292                           ;miwi_mesh.c: 870: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 17293  0104D8  EC47  F0A8         	call	_AddNodeToNetworkTable	;wreg free
 17294  0104DC  0101               	movlb	1	; () banked
 17295  0104DE  6F21               	movwf	(_openSocketInfo+1)& (0+255),b
 17296                           
 17297                           ; BSR set to: 1
 17298                           ;miwi_mesh.c: 871: if( openSocketInfo.socketHandle < 0xFF )
 17299  0104E0  0101               	movlb	1	; () banked
 17300  0104E2  2921               	incf	(_openSocketInfo+1)& (0+255),w,b
 17301  0104E4  B4D8               	btfsc	status,2,c
 17302  0104E6  D003               	goto	l627
 17303                           
 17304                           ; BSR set to: 1
 17305                           ;miwi_mesh.c: 872: {
 17306                           ;miwi_mesh.c: 882: openSocketInfo.status.bits.matchFound = 1;
 17307  0104E8  0101               	movlb	1	; () banked
 17308  0104EA  8120               	bsf	_openSocketInfo& (0+255),0,b
 17309                           
 17310                           ;miwi_mesh.c: 883: }
 17311  0104EC  D002               	goto	l628
 17312  0104EE                     l627:
 17313                           
 17314                           ; BSR set to: 1
 17315                           ;miwi_mesh.c: 884: else
 17316                           ;miwi_mesh.c: 885: {
 17317                           ;miwi_mesh.c: 886: openSocketInfo.status.bits.matchFound = 0;
 17318  0104EE  0101               	movlb	1	; () banked
 17319  0104F0  9120               	bcf	_openSocketInfo& (0+255),0,b
 17320  0104F2                     l628:
 17321                           
 17322                           ; BSR set to: 1
 17323                           ;miwi_mesh.c: 887: }
 17324                           ;miwi_mesh.c: 890: openSocketInfo.status.bits.requestIsOpen = 0;
 17325  0104F2  0101               	movlb	1	; () banked
 17326  0104F4  9320               	bcf	_openSocketInfo& (0+255),1,b
 17327                           
 17328                           ; BSR set to: 1
 17329                           ;miwi_mesh.c: 968: }
 17330                           
 17331                           ; BSR set to: 1
 17332                           ;miwi_mesh.c: 967: break;
 17333                           
 17334                           ;miwi_mesh.c: 964: default:
 17335                           
 17336                           ;miwi_mesh.c: 892: }
 17337                           ;miwi_mesh.c: 893: break;
 17338  0104F6  D2BF               	goto	l601
 17339  0104F8                     l11672:
 17340                           
 17341                           ; BSR set to: 1
 17342  0104F8  EE20 F00C          	lfsr	2,12
 17343  0104FC  5037               	movf	_MACRxPacket+3,w,c
 17344  0104FE  26D9               	addwf	fsr2l,f,c
 17345  010500  5038               	movf	_MACRxPacket+4,w,c
 17346  010502  22DA               	addwfc	fsr2h,f,c
 17347  010504  50DF               	movf	indf2,w,c
 17348                           
 17349                           ; Switch size 1, requested type "space"
 17350                           ; Number of cases is 1, Range of values is 17 to 17
 17351                           ; switch strategies available:
 17352                           ; Name         Instructions Cycles
 17353                           ; simple_byte            4     3 (average)
 17354                           ;	Chosen strategy is simple_byte
 17355  010506  0A11               	xorlw	17	; case 17
 17356  010508  B4D8               	btfsc	status,2,c
 17357  01050A  D77F               	goto	l11626
 17358                           
 17359                           ; BSR set to: 1
 17360                           ;miwi_mesh.c: 969: }
 17361  01050C  D2B4               	goto	l601
 17362  01050E                     l11674:
 17363                           
 17364                           ; BSR set to: 1
 17365                           ;miwi_mesh.c: 970: else
 17366                           ;miwi_mesh.c: 971: {
 17367                           ;miwi_mesh.c: 973: if( AcknowledgementSeq == MACRxPacket.Payload[11-1] &&
 17368                           ;miwi_mesh.c: 974: sourceShortAddress.Val == AcknowledgementAddr.Val)
 17369  01050E  EE20 F00A          	lfsr	2,10
 17370  010512  5037               	movf	_MACRxPacket+3,w,c
 17371  010514  26D9               	addwf	fsr2l,f,c
 17372  010516  5038               	movf	_MACRxPacket+4,w,c
 17373  010518  22DA               	addwfc	fsr2h,f,c
 17374  01051A  0101               	movlb	1	; () banked
 17375  01051C  51FE               	movf	_AcknowledgementSeq& (0+255),w,b
 17376  01051E  18DE               	xorwf	postinc2,w,c
 17377  010520  A4D8               	btfss	status,2,c
 17378  010522  D2A9               	goto	l601
 17379                           
 17380                           ; BSR set to: 1
 17381  010524  0101               	movlb	1	; () banked
 17382  010526  5158               	movf	_AcknowledgementAddr& (0+255),w,b
 17383  010528  0101               	movlb	1	; () banked
 17384  01052A  19E5               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 17385  01052C  E105               	bnz	u13311
 17386  01052E  0101               	movlb	1	; () banked
 17387  010530  5159               	movf	(_AcknowledgementAddr+1)& (0+255),w,b
 17388  010532  0101               	movlb	1	; () banked
 17389  010534  19E6               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 17390  010536  A4D8               	btfss	status,2,c
 17391  010538                     u13311:
 17392  010538  D29E               	goto	l601
 17393                           
 17394                           ; BSR set to: 1
 17395                           ;miwi_mesh.c: 975: {
 17396                           ;miwi_mesh.c: 976: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 17397  01053A  0100               	movlb	0	; () banked
 17398  01053C  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 17399                           
 17400                           ; BSR set to: 0
 17401                           ;miwi_mesh.c: 980: }
 17402                           ;miwi_mesh.c: 981: }
 17403                           
 17404                           ; BSR set to: 0
 17405                           ;miwi_mesh.c: 977: }
 17406                           ;miwi_mesh.c: 979: break;
 17407  01053E  D29B               	goto	l601
 17408  010540                     l11680:
 17409                           
 17410                           ;miwi_mesh.c: 982: else
 17411                           ;miwi_mesh.c: 983: {
 17412                           ;miwi_mesh.c: 988: rxMessage.PayloadSize = MACRxPacket.PayloadLen - 11;
 17413  010540  5039               	movf	_MACRxPacket+5,w,c
 17414  010542  0FF5               	addlw	245
 17415  010544  0101               	movlb	1	; () banked
 17416  010546  6F33               	movwf	(_rxMessage+7)& (0+255),b
 17417                           
 17418                           ;miwi_mesh.c: 989: rxMessage.Payload = &MACRxPacket.Payload[11];
 17419  010548  0E0B               	movlw	11
 17420  01054A  2437               	addwf	_MACRxPacket+3,w,c
 17421  01054C  0101               	movlb	1	; () banked
 17422  01054E  6F31               	movwf	(_rxMessage+5)& (0+255),b
 17423  010550  0E00               	movlw	0
 17424  010552  2038               	addwfc	_MACRxPacket+4,w,c
 17425  010554  0101               	movlb	1	; () banked
 17426  010556  6F32               	movwf	(_rxMessage+6)& (0+255),b
 17427                           
 17428                           ; BSR set to: 1
 17429                           ;miwi_mesh.c: 990: rxMessage.SourcePANID.Val = sourcePANID.Val;
 17430  010558  C1E3  F12D         	movff	MiWiTasks@sourcePANID,_rxMessage+1
 17431  01055C  C1E4  F12E         	movff	MiWiTasks@sourcePANID+1,_rxMessage+2
 17432                           
 17433                           ; BSR set to: 1
 17434                           ;miwi_mesh.c: 991: if( MACRxPacket.Payload[8] == 0xFF && MACRxPacket.Payload[9] == 0xFF 
      +                          )
 17435  010560  EE20 F008          	lfsr	2,8
 17436  010564  5037               	movf	_MACRxPacket+3,w,c
 17437  010566  26D9               	addwf	fsr2l,f,c
 17438  010568  5038               	movf	_MACRxPacket+4,w,c
 17439  01056A  22DA               	addwfc	fsr2h,f,c
 17440  01056C  28DE               	incf	postinc2,w,c
 17441  01056E  A4D8               	btfss	status,2,c
 17442  010570  D00F               	goto	l634
 17443                           
 17444                           ; BSR set to: 1
 17445  010572  EE20 F009          	lfsr	2,9
 17446  010576  5037               	movf	_MACRxPacket+3,w,c
 17447  010578  26D9               	addwf	fsr2l,f,c
 17448  01057A  5038               	movf	_MACRxPacket+4,w,c
 17449  01057C  22DA               	addwfc	fsr2h,f,c
 17450  01057E  28DE               	incf	postinc2,w,c
 17451  010580  B4D8               	btfsc	status,2,c
 17452                           
 17453                           ; BSR set to: 1
 17454                           ;miwi_mesh.c: 992: {
 17455                           ;miwi_mesh.c: 997: if( MACRxPacket.flags.bits.sourcePrsnt )
 17456  010582  AE34               	btfss	_MACRxPacket,7,c
 17457  010584  D005               	goto	l634
 17458                           
 17459                           ; BSR set to: 1
 17460                           ;miwi_mesh.c: 998: {
 17461                           ;miwi_mesh.c: 999: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 17462  010586  C035  F12F         	movff	_MACRxPacket+1,_rxMessage+3
 17463  01058A  C036  F130         	movff	_MACRxPacket+2,_rxMessage+4
 17464                           
 17465                           ;miwi_mesh.c: 1000: }
 17466  01058E  D00A               	goto	l11696
 17467  010590                     l634:
 17468                           
 17469                           ; BSR set to: 1
 17470                           ;miwi_mesh.c: 1009: else
 17471                           ;miwi_mesh.c: 1010: {
 17472                           ;miwi_mesh.c: 1011: rxMessage.flags.bits.altSrcAddr = 1;
 17473  010590  0101               	movlb	1	; () banked
 17474  010592  8F2C               	bsf	_rxMessage& (0+255),7,b
 17475                           
 17476                           ; BSR set to: 1
 17477                           ;miwi_mesh.c: 1012: rxMessage.SourceAddress = &(MACRxPacket.Payload[8]);
 17478  010594  0E08               	movlw	8
 17479  010596  2437               	addwf	_MACRxPacket+3,w,c
 17480  010598  0101               	movlb	1	; () banked
 17481  01059A  6F2F               	movwf	(_rxMessage+3)& (0+255),b
 17482  01059C  0E00               	movlw	0
 17483  01059E  2038               	addwfc	_MACRxPacket+4,w,c
 17484  0105A0  0101               	movlb	1	; () banked
 17485  0105A2  6F30               	movwf	(_rxMessage+4)& (0+255),b
 17486  0105A4                     l11696:
 17487                           
 17488                           ; BSR set to: 1
 17489                           ;miwi_mesh.c: 1013: }
 17490                           ;miwi_mesh.c: 1014: rxMessage.flags.bits.srcPrsnt = 1;
 17491  0105A4  0101               	movlb	1	; () banked
 17492  0105A6  8D2C               	bsf	_rxMessage& (0+255),6,b
 17493                           
 17494                           ; BSR set to: 1
 17495                           ;miwi_mesh.c: 1016: if( rxMessage.PayloadSize > 0 )
 17496  0105A8  0101               	movlb	1	; () banked
 17497  0105AA  5133               	movf	(_rxMessage+7)& (0+255),w,b
 17498  0105AC  B4D8               	btfsc	status,2,c
 17499  0105AE  D263               	goto	l601
 17500                           
 17501                           ; BSR set to: 1
 17502                           ;miwi_mesh.c: 1017: {
 17503                           ;miwi_mesh.c: 1018: MiWiStateMachine.bits.RxHasUserData = 1;
 17504  0105B0  0100               	movlb	0	; () banked
 17505  0105B2  85D4               	bsf	_MiWiStateMachine& (0+255),2,b
 17506                           
 17507                           ; BSR set to: 0
 17508                           ;miwi_mesh.c: 1066: }
 17509                           ;miwi_mesh.c: 1068: }
 17510                           ;miwi_mesh.c: 1069: break;
 17511                           
 17512                           ;miwi_mesh.c: 1023: else
 17513                           ;miwi_mesh.c: 1024: {
 17514                           
 17515                           ; BSR set to: 0
 17516                           
 17517                           ; BSR set to: 0
 17518                           ;miwi_mesh.c: 1019: }
 17519                           ;miwi_mesh.c: 1021: }
 17520                           ;miwi_mesh.c: 1022: }
 17521                           
 17522                           ; BSR set to: 0
 17523  0105B4  D260               	goto	l601
 17524  0105B6                     l11702:
 17525                           
 17526                           ;miwi_mesh.c: 1073: {
 17527                           ;miwi_mesh.c: 1074: uint8_t rxIndex;
 17528                           ;miwi_mesh.c: 1079: rxIndex = 4;
 17529  0105B6  0E04               	movlw	4
 17530  0105B8  0101               	movlb	1	; () banked
 17531  0105BA  6FE0               	movwf	MiWiTasks@rxIndex& (0+255),b
 17532                           
 17533                           ; BSR set to: 1
 17534                           ;miwi_mesh.c: 1083: if(MACRxPacket.Payload[rxIndex+4] != 0x4D )
 17535  0105BC  0101               	movlb	1	; () banked
 17536  0105BE  51E0               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17537  0105C0  0100               	movlb	0	; () banked
 17538  0105C2  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17539  0105C4  6BC9               	clrf	(??_MiWiTasks+1)& (0+255),b
 17540  0105C6  0E04               	movlw	4
 17541  0105C8  0100               	movlb	0	; () banked
 17542  0105CA  27C8               	addwf	??_MiWiTasks& (0+255),f,b
 17543  0105CC  0E00               	movlw	0
 17544  0105CE  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17545  0105D0  0100               	movlb	0	; () banked
 17546  0105D2  51C8               	movf	??_MiWiTasks& (0+255),w,b
 17547  0105D4  2437               	addwf	_MACRxPacket+3,w,c
 17548  0105D6  6ED9               	movwf	fsr2l,c
 17549  0105D8  0100               	movlb	0	; () banked
 17550  0105DA  51C9               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17551  0105DC  2038               	addwfc	_MACRxPacket+4,w,c
 17552  0105DE  6EDA               	movwf	fsr2h,c
 17553  0105E0  0E4D               	movlw	77
 17554  0105E2  18DE               	xorwf	postinc2,w,c
 17555  0105E4  B4D8               	btfsc	status,2,c
 17556  0105E6  D016               	goto	l641
 17557                           
 17558                           ; BSR set to: 0
 17559                           ;miwi_mesh.c: 1084: {
 17560                           ;miwi_mesh.c: 1086: if(MACRxPacket.Payload[rxIndex+4] != 0x5D)
 17561  0105E8  0101               	movlb	1	; () banked
 17562  0105EA  51E0               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17563  0105EC  0100               	movlb	0	; () banked
 17564  0105EE  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17565  0105F0  6BC9               	clrf	(??_MiWiTasks+1)& (0+255),b
 17566  0105F2  0E04               	movlw	4
 17567  0105F4  0100               	movlb	0	; () banked
 17568  0105F6  27C8               	addwf	??_MiWiTasks& (0+255),f,b
 17569  0105F8  0E00               	movlw	0
 17570  0105FA  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17571  0105FC  0100               	movlb	0	; () banked
 17572  0105FE  51C8               	movf	??_MiWiTasks& (0+255),w,b
 17573  010600  2437               	addwf	_MACRxPacket+3,w,c
 17574  010602  6ED9               	movwf	fsr2l,c
 17575  010604  0100               	movlb	0	; () banked
 17576  010606  51C9               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17577  010608  2038               	addwfc	_MACRxPacket+4,w,c
 17578  01060A  6EDA               	movwf	fsr2h,c
 17579  01060C  0E5D               	movlw	93
 17580  01060E  18DE               	xorwf	postinc2,w,c
 17581  010610  A4D8               	btfss	status,2,c
 17582  010612  D231               	goto	l601
 17583  010614                     l641:
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;miwi_mesh.c: 1090: }
 17587                           ;miwi_mesh.c: 1091: }
 17588                           ;miwi_mesh.c: 1186: if(MiWiStateMachine.bits.searchingForNetwork)
 17589  010614  0100               	movlb	0	; () banked
 17590  010616  A1D4               	btfss	_MiWiStateMachine& (0+255),0,b
 17591  010618  D22E               	goto	l601
 17592                           
 17593                           ; BSR set to: 0
 17594                           ;miwi_mesh.c: 1187: {
 17595                           ;miwi_mesh.c: 1193: tempPANID.v[0] = MACRxPacket.Payload[0];
 17596  01061A  C037  FFD9         	movff	_MACRxPacket+3,fsr2l
 17597  01061E  C038  FFDA         	movff	_MACRxPacket+4,fsr2h
 17598  010622  50DF               	movf	indf2,w,c
 17599  010624  0101               	movlb	1	; () banked
 17600  010626  6F5E               	movwf	_tempPANID& (0+255),b
 17601                           
 17602                           ; BSR set to: 1
 17603                           ;miwi_mesh.c: 1194: tempPANID.v[1] = MACRxPacket.Payload[1];
 17604  010628  EE20 F001          	lfsr	2,1
 17605  01062C  5037               	movf	_MACRxPacket+3,w,c
 17606  01062E  26D9               	addwf	fsr2l,f,c
 17607  010630  5038               	movf	_MACRxPacket+4,w,c
 17608  010632  22DA               	addwfc	fsr2h,f,c
 17609  010634  50DF               	movf	indf2,w,c
 17610  010636  0101               	movlb	1	; () banked
 17611  010638  6F5F               	movwf	(_tempPANID+1)& (0+255),b
 17612                           
 17613                           ; BSR set to: 1
 17614                           ;miwi_mesh.c: 1195: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 17615  01063A  EE20 F002          	lfsr	2,2
 17616  01063E  5037               	movf	_MACRxPacket+3,w,c
 17617  010640  26D9               	addwf	fsr2l,f,c
 17618  010642  5038               	movf	_MACRxPacket+4,w,c
 17619  010644  22DA               	addwfc	fsr2h,f,c
 17620  010646  50DF               	movf	indf2,w,c
 17621  010648  0101               	movlb	1	; () banked
 17622  01064A  6FD0               	movwf	_tempShortAddress& (0+255),b
 17623                           
 17624                           ; BSR set to: 1
 17625                           ;miwi_mesh.c: 1196: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 17626  01064C  EE20 F003          	lfsr	2,3
 17627  010650  5037               	movf	_MACRxPacket+3,w,c
 17628  010652  26D9               	addwf	fsr2l,f,c
 17629  010654  5038               	movf	_MACRxPacket+4,w,c
 17630  010656  22DA               	addwfc	fsr2h,f,c
 17631  010658  50DF               	movf	indf2,w,c
 17632  01065A  0101               	movlb	1	; () banked
 17633  01065C  6FD1               	movwf	(_tempShortAddress+1)& (0+255),b
 17634                           
 17635                           ; BSR set to: 1
 17636                           ;miwi_mesh.c: 1200: if(MACRxPacket.Payload[rxIndex] == 0xFF)
 17637  01065E  0101               	movlb	1	; () banked
 17638  010660  51E0               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17639  010662  0D01               	mullw	1
 17640  010664  50F3               	movf	prodl,w,c
 17641  010666  2437               	addwf	_MACRxPacket+3,w,c
 17642  010668  6ED9               	movwf	fsr2l,c
 17643  01066A  50F4               	movf	prodh,w,c
 17644  01066C  2038               	addwfc	_MACRxPacket+4,w,c
 17645  01066E  6EDA               	movwf	fsr2h,c
 17646  010670  28DE               	incf	postinc2,w,c
 17647  010672  A4D8               	btfss	status,2,c
 17648  010674  D200               	goto	l601
 17649                           
 17650                           ; BSR set to: 1
 17651                           ;miwi_mesh.c: 1201: {
 17652                           ;miwi_mesh.c: 1202: MIWI_CAPACITY_INFO CapacityByte;
 17653                           ;miwi_mesh.c: 1203: CapacityByte.Val = MACRxPacket.Payload[rxIndex+1];
 17654  010676  0101               	movlb	1	; () banked
 17655  010678  51E0               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17656  01067A  0100               	movlb	0	; () banked
 17657  01067C  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17658  01067E  6BC9               	clrf	(??_MiWiTasks+1)& (0+255),b
 17659  010680  0E01               	movlw	1
 17660  010682  0100               	movlb	0	; () banked
 17661  010684  27C8               	addwf	??_MiWiTasks& (0+255),f,b
 17662  010686  0E00               	movlw	0
 17663  010688  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17664  01068A  0100               	movlb	0	; () banked
 17665  01068C  51C8               	movf	??_MiWiTasks& (0+255),w,b
 17666  01068E  2437               	addwf	_MACRxPacket+3,w,c
 17667  010690  6ED9               	movwf	fsr2l,c
 17668  010692  0100               	movlb	0	; () banked
 17669  010694  51C9               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17670  010696  2038               	addwfc	_MACRxPacket+4,w,c
 17671  010698  6EDA               	movwf	fsr2h,c
 17672  01069A  50DF               	movf	indf2,w,c
 17673  01069C  0101               	movlb	1	; () banked
 17674  01069E  6FE1               	movwf	MiWiTasks@CapacityByte& (0+255),b
 17675                           
 17676                           ; BSR set to: 1
 17677                           ;miwi_mesh.c: 1204: if( (ActiveScanResultIndex < 8) && (CapacityByte.bits.ConnMode <= 0x
      +                          01) )
 17678  0106A0  0E08               	movlw	8
 17679  0106A2  0100               	movlb	0	; () banked
 17680  0106A4  61D6               	cpfslt	_ActiveScanResultIndex& (0+255),b
 17681  0106A6  D1E7               	goto	l601
 17682                           
 17683                           ; BSR set to: 0
 17684  0106A8  0101               	movlb	1	; () banked
 17685  0106AA  39E1               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 17686  0106AC  0B03               	andlw	3
 17687  0106AE  0100               	movlb	0	; () banked
 17688  0106B0  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17689  0106B2  0E02               	movlw	2
 17690  0106B4  0100               	movlb	0	; () banked
 17691  0106B6  61C8               	cpfslt	??_MiWiTasks& (0+255),b
 17692  0106B8  D1DE               	goto	l601
 17693                           
 17694                           ; BSR set to: 0
 17695                           ;miwi_mesh.c: 1205: {
 17696                           ;miwi_mesh.c: 1207: ActiveScanResults[ActiveScanResultIndex].Channel = currentChannel;
 17697  0106BA  0100               	movlb	0	; () banked
 17698  0106BC  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17699  0106BE  0D0A               	mullw	10
 17700  0106C0  0E00               	movlw	low _ActiveScanResults
 17701  0106C2  24F3               	addwf	prodl,w,c
 17702  0106C4  6ED9               	movwf	fsr2l,c
 17703  0106C6  0E03               	movlw	high _ActiveScanResults
 17704  0106C8  20F4               	addwfc	prodh,w,c
 17705  0106CA  6EDA               	movwf	fsr2h,c
 17706  0106CC  C1D2  FFDF         	movff	_currentChannel,indf2
 17707                           
 17708                           ;miwi_mesh.c: 1208: ActiveScanResults[ActiveScanResultIndex].RSSIValue = rxMessage.Packe
      +                          tRSSI;
 17709  0106D0  0100               	movlb	0	; () banked
 17710  0106D2  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17711  0106D4  0D0A               	mullw	10
 17712  0106D6  0E07               	movlw	7
 17713  0106D8  26F3               	addwf	prodl,f,c
 17714  0106DA  0E00               	movlw	0
 17715  0106DC  22F4               	addwfc	prodh,f,c
 17716  0106DE  0E00               	movlw	low _ActiveScanResults
 17717  0106E0  24F3               	addwf	prodl,w,c
 17718  0106E2  6ED9               	movwf	fsr2l,c
 17719  0106E4  0E03               	movlw	high _ActiveScanResults
 17720  0106E6  20F4               	addwfc	prodh,w,c
 17721  0106E8  6EDA               	movwf	fsr2h,c
 17722  0106EA  C134  FFDF         	movff	_rxMessage+8,indf2
 17723                           
 17724                           ;miwi_mesh.c: 1209: ActiveScanResults[ActiveScanResultIndex].LQIValue = rxMessage.Packet
      +                          LQI;
 17725  0106EE  0100               	movlb	0	; () banked
 17726  0106F0  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17727  0106F2  0D0A               	mullw	10
 17728  0106F4  0E08               	movlw	8
 17729  0106F6  26F3               	addwf	prodl,f,c
 17730  0106F8  0E00               	movlw	0
 17731  0106FA  22F4               	addwfc	prodh,f,c
 17732  0106FC  0E00               	movlw	low _ActiveScanResults
 17733  0106FE  24F3               	addwf	prodl,w,c
 17734  010700  6ED9               	movwf	fsr2l,c
 17735  010702  0E03               	movlw	high _ActiveScanResults
 17736  010704  20F4               	addwfc	prodh,w,c
 17737  010706  6EDA               	movwf	fsr2h,c
 17738  010708  C135  FFDF         	movff	_rxMessage+9,indf2
 17739                           
 17740                           ;miwi_mesh.c: 1210: ActiveScanResults[ActiveScanResultIndex].PANID.Val = tempPANID.Val;
 17741  01070C  0100               	movlb	0	; () banked
 17742  01070E  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17743  010710  0D0A               	mullw	10
 17744  010712  0E05               	movlw	5
 17745  010714  26F3               	addwf	prodl,f,c
 17746  010716  0E00               	movlw	0
 17747  010718  22F4               	addwfc	prodh,f,c
 17748  01071A  0E00               	movlw	low _ActiveScanResults
 17749  01071C  24F3               	addwf	prodl,w,c
 17750  01071E  6ED9               	movwf	fsr2l,c
 17751  010720  0E03               	movlw	high _ActiveScanResults
 17752  010722  20F4               	addwfc	prodh,w,c
 17753  010724  6EDA               	movwf	fsr2h,c
 17754  010726  C15E  FFDE         	movff	_tempPANID,postinc2
 17755  01072A  C15F  FFDD         	movff	_tempPANID+1,postdec2
 17756                           
 17757                           ;miwi_mesh.c: 1212: ActiveScanResults[ActiveScanResultIndex].Capability.Val = 0;
 17758  01072E  0100               	movlb	0	; () banked
 17759  010730  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17760  010732  0D0A               	mullw	10
 17761  010734  0E09               	movlw	9
 17762  010736  26F3               	addwf	prodl,f,c
 17763  010738  0E00               	movlw	0
 17764  01073A  22F4               	addwfc	prodh,f,c
 17765  01073C  0E00               	movlw	low _ActiveScanResults
 17766  01073E  24F3               	addwf	prodl,w,c
 17767  010740  6ED9               	movwf	fsr2l,c
 17768  010742  0E03               	movlw	high _ActiveScanResults
 17769  010744  20F4               	addwfc	prodh,w,c
 17770  010746  6EDA               	movwf	fsr2h,c
 17771  010748  0E00               	movlw	0
 17772  01074A  6EDF               	movwf	indf2,c
 17773                           
 17774                           ;miwi_mesh.c: 1213: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Direct = 1;
 17775  01074C  0100               	movlb	0	; () banked
 17776  01074E  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17777  010750  0D0A               	mullw	10
 17778  010752  0E09               	movlw	9
 17779  010754  26F3               	addwf	prodl,f,c
 17780  010756  0E00               	movlw	0
 17781  010758  22F4               	addwfc	prodh,f,c
 17782  01075A  0E00               	movlw	low _ActiveScanResults
 17783  01075C  24F3               	addwf	prodl,w,c
 17784  01075E  6ED9               	movwf	fsr2l,c
 17785  010760  0E03               	movlw	high _ActiveScanResults
 17786  010762  20F4               	addwfc	prodh,w,c
 17787  010764  6EDA               	movwf	fsr2h,c
 17788  010766  0103               	movlb	3	; () banked
 17789  010768  8CDF               	bsf	indf2,6,c
 17790                           
 17791                           ;miwi_mesh.c: 1214: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Role = Capa
      +                          cityByte.bits.Role;
 17792  01076A  0101               	movlb	1	; () banked
 17793  01076C  31E1               	rrcf	MiWiTasks@CapacityByte& (0+255),w,b
 17794  01076E  0B03               	andlw	3
 17795  010770  0100               	movlb	0	; () banked
 17796  010772  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17797  010774  0100               	movlb	0	; () banked
 17798  010776  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17799  010778  0D0A               	mullw	10
 17800  01077A  0E09               	movlw	9
 17801  01077C  26F3               	addwf	prodl,f,c
 17802  01077E  0E00               	movlw	0
 17803  010780  22F4               	addwfc	prodh,f,c
 17804  010782  0E00               	movlw	low _ActiveScanResults
 17805  010784  24F3               	addwf	prodl,w,c
 17806  010786  6ED9               	movwf	fsr2l,c
 17807  010788  0E03               	movlw	high _ActiveScanResults
 17808  01078A  20F4               	addwfc	prodh,w,c
 17809  01078C  6EDA               	movwf	fsr2h,c
 17810  01078E  0103               	movlb	3	; () banked
 17811  010790  50DF               	movf	223,w,c
 17812  010792  0100               	movlb	0	; () banked
 17813  010794  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 17814  010796  0BFC               	andlw	-4
 17815  010798  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 17816  01079A  0103               	movlb	3	; () banked
 17817  01079C  6EDF               	movwf	223,c
 17818                           
 17819                           ; BSR set to: 3
 17820                           ;miwi_mesh.c: 1215: if( CapacityByte.bits.Security )
 17821  01079E  0101               	movlb	1	; () banked
 17822  0107A0  A7E1               	btfss	MiWiTasks@CapacityByte& (0+255),3,b
 17823  0107A2  D00F               	goto	l11732
 17824                           
 17825                           ; BSR set to: 1
 17826                           ;miwi_mesh.c: 1216: {
 17827                           ;miwi_mesh.c: 1217: ActiveScanResults[ActiveScanResultIndex].Capability.bits.SecurityEn 
      +                          = 1;
 17828  0107A4  0100               	movlb	0	; () banked
 17829  0107A6  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17830  0107A8  0D0A               	mullw	10
 17831  0107AA  0E09               	movlw	9
 17832  0107AC  26F3               	addwf	prodl,f,c
 17833  0107AE  0E00               	movlw	0
 17834  0107B0  22F4               	addwfc	prodh,f,c
 17835  0107B2  0E00               	movlw	low _ActiveScanResults
 17836  0107B4  24F3               	addwf	prodl,w,c
 17837  0107B6  6ED9               	movwf	fsr2l,c
 17838  0107B8  0E03               	movlw	high _ActiveScanResults
 17839  0107BA  20F4               	addwfc	prodh,w,c
 17840  0107BC  6EDA               	movwf	fsr2h,c
 17841  0107BE  0103               	movlb	3	; () banked
 17842  0107C0  86DF               	bsf	indf2,3,c
 17843  0107C2                     l11732:
 17844                           
 17845                           ;miwi_mesh.c: 1218: }
 17846                           ;miwi_mesh.c: 1219: if( CapacityByte.bits.ConnMode <= 0x01 )
 17847  0107C2  0101               	movlb	1	; () banked
 17848  0107C4  39E1               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 17849  0107C6  0B03               	andlw	3
 17850  0107C8  0100               	movlb	0	; () banked
 17851  0107CA  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17852  0107CC  0E02               	movlw	2
 17853  0107CE  0100               	movlb	0	; () banked
 17854  0107D0  61C8               	cpfslt	??_MiWiTasks& (0+255),b
 17855  0107D2  D00F               	goto	l11736
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;miwi_mesh.c: 1220: {
 17859                           ;miwi_mesh.c: 1221: ActiveScanResults[ActiveScanResultIndex].Capability.bits.AllowJoin =
      +                           1;
 17860  0107D4  0100               	movlb	0	; () banked
 17861  0107D6  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17862  0107D8  0D0A               	mullw	10
 17863  0107DA  0E09               	movlw	9
 17864  0107DC  26F3               	addwf	prodl,f,c
 17865  0107DE  0E00               	movlw	0
 17866  0107E0  22F4               	addwfc	prodh,f,c
 17867  0107E2  0E00               	movlw	low _ActiveScanResults
 17868  0107E4  24F3               	addwf	prodl,w,c
 17869  0107E6  6ED9               	movwf	fsr2l,c
 17870  0107E8  0E03               	movlw	high _ActiveScanResults
 17871  0107EA  20F4               	addwfc	prodh,w,c
 17872  0107EC  6EDA               	movwf	fsr2h,c
 17873  0107EE  0103               	movlb	3	; () banked
 17874  0107F0  8ADF               	bsf	indf2,5,c
 17875  0107F2                     l11736:
 17876                           
 17877                           ;miwi_mesh.c: 1222: }
 17878                           ;miwi_mesh.c: 1230: for(i = 0; i < 4; i++)
 17879  0107F2  0E00               	movlw	0
 17880  0107F4  0101               	movlb	1	; () banked
 17881  0107F6  6FE7               	movwf	MiWiTasks@i& (0+255),b
 17882  0107F8                     l11738:
 17883                           
 17884                           ; BSR set to: 1
 17885  0107F8  0E03               	movlw	3
 17886  0107FA  0101               	movlb	1	; () banked
 17887  0107FC  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 17888  0107FE  D001               	goto	l11742
 17889  010800  D02E               	goto	l11748
 17890  010802                     l11742:
 17891                           
 17892                           ; BSR set to: 1
 17893                           ;miwi_mesh.c: 1231: {
 17894                           ;miwi_mesh.c: 1232: ActiveScanResults[ActiveScanResultIndex].Address[i] = rxMessage.Sour
      +                          ceAddress[i];
 17895  010802  0101               	movlb	1	; () banked
 17896  010804  51E7               	movf	MiWiTasks@i& (0+255),w,b
 17897  010806  0D01               	mullw	1
 17898  010808  50F3               	movf	prodl,w,c
 17899  01080A  0101               	movlb	1	; () banked
 17900  01080C  252F               	addwf	(_rxMessage+3)& (0+255),w,b
 17901  01080E  6ED9               	movwf	fsr2l,c
 17902  010810  50F4               	movf	prodh,w,c
 17903  010812  0101               	movlb	1	; () banked
 17904  010814  2130               	addwfc	(_rxMessage+4)& (0+255),w,b
 17905  010816  6EDA               	movwf	fsr2h,c
 17906  010818  0101               	movlb	1	; () banked
 17907  01081A  51E7               	movf	MiWiTasks@i& (0+255),w,b
 17908  01081C  0D01               	mullw	1
 17909  01081E  0E01               	movlw	1
 17910  010820  26F3               	addwf	prodl,f,c
 17911  010822  0E00               	movlw	0
 17912  010824  22F4               	addwfc	prodh,f,c
 17913  010826  0E00               	movlw	low _ActiveScanResults
 17914  010828  0100               	movlb	0	; () banked
 17915  01082A  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17916  01082C  0E03               	movlw	high _ActiveScanResults
 17917  01082E  0100               	movlb	0	; () banked
 17918  010830  6FC9               	movwf	(??_MiWiTasks+1)& (0+255),b
 17919  010832  50F3               	movf	prodl,w,c
 17920  010834  0100               	movlb	0	; () banked
 17921  010836  27C8               	addwf	??_MiWiTasks& (0+255),f,b
 17922  010838  50F4               	movf	prodh,w,c
 17923  01083A  0100               	movlb	0	; () banked
 17924  01083C  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17925  01083E  0100               	movlb	0	; () banked
 17926  010840  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17927  010842  0D0A               	mullw	10
 17928  010844  50F3               	movf	prodl,w,c
 17929  010846  0100               	movlb	0	; () banked
 17930  010848  25C8               	addwf	??_MiWiTasks& (0+255),w,b
 17931  01084A  6EE1               	movwf	fsr1l,c
 17932  01084C  50F4               	movf	prodh,w,c
 17933  01084E  0100               	movlb	0	; () banked
 17934  010850  21C9               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 17935  010852  6EE2               	movwf	fsr1h,c
 17936  010854  CFDF FFE7          	movff	indf2,indf1
 17937                           
 17938                           ; BSR set to: 0
 17939  010858  0101               	movlb	1	; () banked
 17940  01085A  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 17941  01085C  D7CD               	goto	l11738
 17942  01085E                     l11748:
 17943                           
 17944                           ; BSR set to: 1
 17945                           ;miwi_mesh.c: 1233: }
 17946                           ;miwi_mesh.c: 1241: ActiveScanResultIndex++;
 17947  01085E  0100               	movlb	0	; () banked
 17948  010860  2BD6               	incf	_ActiveScanResultIndex& (0+255),f,b
 17949                           
 17950                           ; BSR set to: 0
 17951                           ;miwi_mesh.c: 1242: }
 17952                           ;miwi_mesh.c: 1243: }
 17953                           ;miwi_mesh.c: 1244: }
 17954                           ;miwi_mesh.c: 1245: }
 17955                           ;miwi_mesh.c: 1246: break;
 17956                           
 17957                           ; BSR set to: 0
 17958                           
 17959                           ; BSR set to: 0
 17960  010862  D109               	goto	l601
 17961  010864                     l11750:
 17962                           
 17963                           ;miwi_mesh.c: 1412: {
 17964                           ;miwi_mesh.c: 1413: if(MACRxPacket.Payload[3] == 0x00)
 17965  010864  EE20 F003          	lfsr	2,3
 17966  010868  5037               	movf	_MACRxPacket+3,w,c
 17967  01086A  26D9               	addwf	fsr2l,f,c
 17968  01086C  5038               	movf	_MACRxPacket+4,w,c
 17969  01086E  22DA               	addwfc	fsr2h,f,c
 17970  010870  50DF               	movf	indf2,w,c
 17971  010872  A4D8               	btfss	status,2,c
 17972  010874  D067               	goto	l654
 17973                           
 17974                           ;miwi_mesh.c: 1414: {
 17975                           ;miwi_mesh.c: 1417: myShortAddress.v[0] = MACRxPacket.Payload[1];
 17976  010876  EE20 F001          	lfsr	2,1
 17977  01087A  5037               	movf	_MACRxPacket+3,w,c
 17978  01087C  26D9               	addwf	fsr2l,f,c
 17979  01087E  5038               	movf	_MACRxPacket+4,w,c
 17980  010880  22DA               	addwfc	fsr2h,f,c
 17981  010882  50DF               	movf	indf2,w,c
 17982  010884  0100               	movlb	0	; () banked
 17983  010886  6FDD               	movwf	_myShortAddress& (0+255),b
 17984                           
 17985                           ;miwi_mesh.c: 1418: myShortAddress.v[1] = MACRxPacket.Payload[2];
 17986  010888  EE20 F002          	lfsr	2,2
 17987  01088C  5037               	movf	_MACRxPacket+3,w,c
 17988  01088E  26D9               	addwf	fsr2l,f,c
 17989  010890  5038               	movf	_MACRxPacket+4,w,c
 17990  010892  22DA               	addwfc	fsr2h,f,c
 17991  010894  50DF               	movf	indf2,w,c
 17992  010896  0100               	movlb	0	; () banked
 17993  010898  6FDE               	movwf	(_myShortAddress+1)& (0+255),b
 17994                           
 17995                           ; BSR set to: 0
 17996                           ;miwi_mesh.c: 1441: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 17997  01089A  0EDD               	movlw	low _myShortAddress
 17998  01089C  0100               	movlb	0	; () banked
 17999  01089E  6F81               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18000  0108A0  0E00               	movlw	high _myShortAddress
 18001  0108A2  0100               	movlb	0	; () banked
 18002  0108A4  6F82               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18003  0108A6  0EDB               	movlw	low _myPANID
 18004  0108A8  0100               	movlb	0	; () banked
 18005  0108AA  6F83               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18006  0108AC  0E00               	movlw	high _myPANID
 18007  0108AE  0100               	movlb	0	; () banked
 18008  0108B0  6F84               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18009  0108B2  EC9F  F0B5         	call	_MiMAC_SetAltAddress	;wreg free
 18010                           
 18011                           ;miwi_mesh.c: 1444: MiWiStateMachine.bits.memberOfNetwork = 1;
 18012  0108B6  0100               	movlb	0	; () banked
 18013  0108B8  83D4               	bsf	_MiWiStateMachine& (0+255),1,b
 18014                           
 18015                           ; BSR set to: 0
 18016                           ;miwi_mesh.c: 1447: tempNodeStatus.Val = 0xBF;
 18017  0108BA  0EBF               	movlw	191
 18018  0108BC  6E48               	movwf	_tempNodeStatus,c
 18019                           
 18020                           ; BSR set to: 0
 18021                           ;miwi_mesh.c: 1448: for(i = 0; i < 4; i++)
 18022  0108BE  0E00               	movlw	0
 18023  0108C0  0101               	movlb	1	; () banked
 18024  0108C2  6FE7               	movwf	MiWiTasks@i& (0+255),b
 18025  0108C4                     l11762:
 18026                           
 18027                           ; BSR set to: 1
 18028  0108C4  0E03               	movlw	3
 18029  0108C6  0101               	movlb	1	; () banked
 18030  0108C8  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 18031  0108CA  D001               	goto	l11766
 18032  0108CC  D017               	goto	l11772
 18033  0108CE                     l11766:
 18034                           
 18035                           ; BSR set to: 1
 18036                           ;miwi_mesh.c: 1449: {
 18037                           ;miwi_mesh.c: 1450: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18038  0108CE  0101               	movlb	1	; () banked
 18039  0108D0  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18040  0108D2  0D01               	mullw	1
 18041  0108D4  50F3               	movf	prodl,w,c
 18042  0108D6  2435               	addwf	_MACRxPacket+1,w,c
 18043  0108D8  6ED9               	movwf	fsr2l,c
 18044  0108DA  50F4               	movf	prodh,w,c
 18045  0108DC  2036               	addwfc	_MACRxPacket+2,w,c
 18046  0108DE  6EDA               	movwf	fsr2h,c
 18047  0108E0  0101               	movlb	1	; () banked
 18048  0108E2  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18049  0108E4  0D01               	mullw	1
 18050  0108E6  0E4E               	movlw	low _tempLongAddress
 18051  0108E8  24F3               	addwf	prodl,w,c
 18052  0108EA  6EE1               	movwf	fsr1l,c
 18053  0108EC  0E01               	movlw	high _tempLongAddress
 18054  0108EE  20F4               	addwfc	prodh,w,c
 18055  0108F0  6EE2               	movwf	fsr1h,c
 18056  0108F2  CFDF FFE7          	movff	indf2,indf1
 18057                           
 18058                           ; BSR set to: 1
 18059  0108F6  0101               	movlb	1	; () banked
 18060  0108F8  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 18061  0108FA  D7E4               	goto	l11762
 18062  0108FC                     l11772:
 18063                           
 18064                           ; BSR set to: 1
 18065                           ;miwi_mesh.c: 1451: }
 18066                           ;miwi_mesh.c: 1453: if(myShortAddress.v[0] == 0x00)
 18067  0108FC  0100               	movlb	0	; () banked
 18068  0108FE  51DD               	movf	_myShortAddress& (0+255),w,b
 18069  010900  A4D8               	btfss	status,2,c
 18070  010902  D005               	goto	l657
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;miwi_mesh.c: 1454: {
 18074                           ;miwi_mesh.c: 1457: tempShortAddress.Val = 0x0000;
 18075  010904  0E00               	movlw	0
 18076  010906  0101               	movlb	1	; () banked
 18077  010908  6FD1               	movwf	(_tempShortAddress+1)& (0+255),b
 18078  01090A  0E00               	movlw	0
 18079  01090C  D004               	goto	L10
 18080  01090E                     l657:
 18081                           
 18082                           ; BSR set to: 0
 18083                           ;miwi_mesh.c: 1459: else
 18084                           ;miwi_mesh.c: 1460: {
 18085                           ;miwi_mesh.c: 1461: tempShortAddress.v[1] = myShortAddress.v[1];
 18086  01090E  C0DE  F1D1         	movff	_myShortAddress+1,_tempShortAddress+1
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;miwi_mesh.c: 1462: tempShortAddress.v[0] = 0x00;
 18090  010912  0E00               	movlw	0
 18091  010914  0101               	movlb	1	; () banked
 18092  010916                     L10:
 18093  010916  6FD0               	movwf	_tempShortAddress& (0+255),b
 18094                           
 18095                           ; BSR set to: 1
 18096                           ;miwi_mesh.c: 1463: }
 18097                           ;miwi_mesh.c: 1465: tempPANID.Val = myPANID.Val;
 18098                           
 18099                           ; BSR set to: 1
 18100  010918  C0DB  F15E         	movff	_myPANID,_tempPANID
 18101  01091C  C0DC  F15F         	movff	_myPANID+1,_tempPANID+1
 18102                           
 18103                           ; BSR set to: 1
 18104                           ;miwi_mesh.c: 1468: myParent = AddNodeToNetworkTable();
 18105  010920  EC47  F0A8         	call	_AddNodeToNetworkTable	;wreg free
 18106  010924  0100               	movlb	0	; () banked
 18107  010926  6FD9               	movwf	_myParent& (0+255),b
 18108                           
 18109                           ; BSR set to: 0
 18110                           ;miwi_mesh.c: 1470: IncomingFrameCounter[myParent].Val = 0;
 18111  010928  0100               	movlb	0	; () banked
 18112  01092A  51D9               	movf	_myParent& (0+255),w,b
 18113  01092C  0D04               	mullw	4
 18114  01092E  0E00               	movlw	low _IncomingFrameCounter
 18115  010930  24F3               	addwf	prodl,w,c
 18116  010932  6ED9               	movwf	fsr2l,c
 18117  010934  0E02               	movlw	high _IncomingFrameCounter
 18118  010936  20F4               	addwfc	prodh,w,c
 18119  010938  6EDA               	movwf	fsr2h,c
 18120  01093A  6ADE               	clrf	postinc2,c
 18121  01093C  6ADE               	clrf	postinc2,c
 18122  01093E  6ADE               	clrf	postinc2,c
 18123  010940  6ADD               	clrf	postdec2,c
 18124                           
 18125                           ;miwi_mesh.c: 1490: ;
 18126                           ;miwi_mesh.c: 1491: }
 18127  010942  D099               	goto	l601
 18128  010944                     l654:
 18129                           
 18130                           ;miwi_mesh.c: 1492: else
 18131                           ;miwi_mesh.c: 1493: {
 18132                           ;miwi_mesh.c: 1495: myParent = 0xFF;
 18133  010944  0100               	movlb	0	; () banked
 18134  010946  69D9               	setf	_myParent& (0+255),b
 18135                           
 18136                           ;miwi_mesh.c: 1496: myPANID.Val = 0xFFFF;
 18137  010948  0100               	movlb	0	; () banked
 18138  01094A  69DB               	setf	_myPANID& (0+255),b
 18139  01094C  69DC               	setf	(_myPANID+1)& (0+255),b
 18140                           
 18141                           ;miwi_mesh.c: 1497: tempShortAddress.Val = 0xFFFF;
 18142  01094E  0101               	movlb	1	; () banked
 18143  010950  69D0               	setf	_tempShortAddress& (0+255),b
 18144  010952  69D1               	setf	(_tempShortAddress+1)& (0+255),b
 18145                           
 18146                           ; BSR set to: 1
 18147                           ;miwi_mesh.c: 1498: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 18148  010954  0ED0               	movlw	low _tempShortAddress
 18149  010956  0100               	movlb	0	; () banked
 18150  010958  6F81               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18151  01095A  0E01               	movlw	high _tempShortAddress
 18152  01095C  0100               	movlb	0	; () banked
 18153  01095E  6F82               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18154  010960  0EDB               	movlw	low _myPANID
 18155  010962  0100               	movlb	0	; () banked
 18156  010964  6F83               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18157  010966  0E00               	movlw	high _myPANID
 18158  010968  0100               	movlb	0	; () banked
 18159  01096A  6F84               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18160  01096C  EC9F  F0B5         	call	_MiMAC_SetAltAddress	;wreg free
 18161                           
 18162                           ;miwi_mesh.c: 1504: }
 18163                           ;miwi_mesh.c: 1505: }
 18164                           ;miwi_mesh.c: 1506: break;
 18165  010970  D082               	goto	l601
 18166  010972                     l11786:
 18167                           
 18168                           ;miwi_mesh.c: 1510: {
 18169                           ;miwi_mesh.c: 1511: uint8_t cIndex;
 18170                           ;miwi_mesh.c: 1526: {
 18171                           ;miwi_mesh.c: 1527: for(i = 0; i < 4; i++)
 18172  010972  0E00               	movlw	0
 18173  010974  0101               	movlb	1	; () banked
 18174  010976  6FE7               	movwf	MiWiTasks@i& (0+255),b
 18175  010978                     l11788:
 18176                           
 18177                           ; BSR set to: 1
 18178  010978  0E03               	movlw	3
 18179  01097A  0101               	movlb	1	; () banked
 18180  01097C  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 18181  01097E  D001               	goto	l11792
 18182  010980  D017               	goto	l11798
 18183  010982                     l11792:
 18184                           
 18185                           ; BSR set to: 1
 18186                           ;miwi_mesh.c: 1528: {
 18187                           ;miwi_mesh.c: 1529: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18188  010982  0101               	movlb	1	; () banked
 18189  010984  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18190  010986  0D01               	mullw	1
 18191  010988  50F3               	movf	prodl,w,c
 18192  01098A  2435               	addwf	_MACRxPacket+1,w,c
 18193  01098C  6ED9               	movwf	fsr2l,c
 18194  01098E  50F4               	movf	prodh,w,c
 18195  010990  2036               	addwfc	_MACRxPacket+2,w,c
 18196  010992  6EDA               	movwf	fsr2h,c
 18197  010994  0101               	movlb	1	; () banked
 18198  010996  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18199  010998  0D01               	mullw	1
 18200  01099A  0E4E               	movlw	low _tempLongAddress
 18201  01099C  24F3               	addwf	prodl,w,c
 18202  01099E  6EE1               	movwf	fsr1l,c
 18203  0109A0  0E01               	movlw	high _tempLongAddress
 18204  0109A2  20F4               	addwfc	prodh,w,c
 18205  0109A4  6EE2               	movwf	fsr1h,c
 18206  0109A6  CFDF FFE7          	movff	indf2,indf1
 18207                           
 18208                           ; BSR set to: 1
 18209  0109AA  0101               	movlb	1	; () banked
 18210  0109AC  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 18211  0109AE  D7E4               	goto	l11788
 18212  0109B0                     l11798:
 18213                           
 18214                           ; BSR set to: 1
 18215                           ;miwi_mesh.c: 1530: }
 18216                           ;miwi_mesh.c: 1531: if( (cIndex = SearchForLongAddress()) == 0xFF )
 18217  0109B0  ECCA  F0AB         	call	_SearchForLongAddress	;wreg free
 18218  0109B4  0101               	movlb	1	; () banked
 18219  0109B6  6FD7               	movwf	MiWiTasks@cIndex& (0+255),b
 18220  0109B8  0101               	movlb	1	; () banked
 18221  0109BA  29D7               	incf	MiWiTasks@cIndex& (0+255),w,b
 18222  0109BC  B4D8               	btfsc	status,2,c
 18223  0109BE  D05B               	goto	l601
 18224                           
 18225                           ; BSR set to: 1
 18226                           ;miwi_mesh.c: 1534: }
 18227                           ;miwi_mesh.c: 1535: }
 18228                           ;miwi_mesh.c: 1590: if( ConnectionTable[cIndex].status.bits.isFamily )
 18229                           
 18230                           ; BSR set to: 1
 18231                           
 18232                           ; BSR set to: 1
 18233                           ;miwi_mesh.c: 1532: {
 18234                           ;miwi_mesh.c: 1533: break;
 18235  0109C0  0101               	movlb	1	; () banked
 18236  0109C2  51D7               	movf	MiWiTasks@cIndex& (0+255),w,b
 18237  0109C4  0D09               	mullw	9
 18238  0109C6  0E08               	movlw	8
 18239  0109C8  26F3               	addwf	prodl,f,c
 18240  0109CA  0E00               	movlw	0
 18241  0109CC  22F4               	addwfc	prodh,f,c
 18242  0109CE  0E46               	movlw	low _ConnectionTable
 18243  0109D0  24F3               	addwf	prodl,w,c
 18244  0109D2  6ED9               	movwf	fsr2l,c
 18245  0109D4  0E02               	movlw	high _ConnectionTable
 18246  0109D6  20F4               	addwfc	prodh,w,c
 18247  0109D8  6EDA               	movwf	fsr2h,c
 18248  0109DA  0102               	movlb	2	; () banked
 18249  0109DC  AADF               	btfss	indf2,5,c
 18250  0109DE  D04B               	goto	l601
 18251                           
 18252                           ; BSR set to: 2
 18253                           ;miwi_mesh.c: 1591: {
 18254                           ;miwi_mesh.c: 1592: for(i = 0; i < 10; i++)
 18255  0109E0  0E00               	movlw	0
 18256  0109E2  0101               	movlb	1	; () banked
 18257  0109E4  6FE7               	movwf	MiWiTasks@i& (0+255),b
 18258  0109E6                     l11806:
 18259                           
 18260                           ; BSR set to: 1
 18261  0109E6  0E09               	movlw	9
 18262  0109E8  0101               	movlb	1	; () banked
 18263  0109EA  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 18264  0109EC  D001               	goto	l11810
 18265  0109EE  D012               	goto	l667
 18266  0109F0                     l11810:
 18267                           
 18268                           ; BSR set to: 1
 18269                           ;miwi_mesh.c: 1593: {
 18270                           ;miwi_mesh.c: 1594: ConnectionTable[i].status.Val = 0;
 18271  0109F0  0101               	movlb	1	; () banked
 18272  0109F2  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18273  0109F4  0D09               	mullw	9
 18274  0109F6  0E08               	movlw	8
 18275  0109F8  26F3               	addwf	prodl,f,c
 18276  0109FA  0E00               	movlw	0
 18277  0109FC  22F4               	addwfc	prodh,f,c
 18278  0109FE  0E46               	movlw	low _ConnectionTable
 18279  010A00  24F3               	addwf	prodl,w,c
 18280  010A02  6ED9               	movwf	fsr2l,c
 18281  010A04  0E02               	movlw	high _ConnectionTable
 18282  010A06  20F4               	addwfc	prodh,w,c
 18283  010A08  6EDA               	movwf	fsr2h,c
 18284  010A0A  0E00               	movlw	0
 18285  010A0C  6EDF               	movwf	indf2,c
 18286                           
 18287                           ; BSR set to: 1
 18288  010A0E  0101               	movlb	1	; () banked
 18289  010A10  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 18290  010A12  D7E9               	goto	l11806
 18291  010A14                     l667:
 18292                           
 18293                           ; BSR set to: 1
 18294                           ;miwi_mesh.c: 1595: }
 18295                           ;miwi_mesh.c: 1596: myParent = 0xFF;
 18296  010A14  0100               	movlb	0	; () banked
 18297  010A16  69D9               	setf	_myParent& (0+255),b
 18298                           
 18299                           ;miwi_mesh.c: 1597: myShortAddress.Val = 0xFFFF;
 18300  010A18  0100               	movlb	0	; () banked
 18301  010A1A  69DD               	setf	_myShortAddress& (0+255),b
 18302  010A1C  69DE               	setf	(_myShortAddress+1)& (0+255),b
 18303                           
 18304                           ;miwi_mesh.c: 1598: myPANID.Val = 0xFFFF;
 18305  010A1E  0100               	movlb	0	; () banked
 18306  010A20  69DB               	setf	_myPANID& (0+255),b
 18307  010A22  69DC               	setf	(_myPANID+1)& (0+255),b
 18308                           
 18309                           ; BSR set to: 0
 18310                           ;miwi_mesh.c: 1599: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 18311  010A24  0EDD               	movlw	low _myShortAddress
 18312  010A26  0100               	movlb	0	; () banked
 18313  010A28  6F81               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18314  010A2A  0E00               	movlw	high _myShortAddress
 18315  010A2C  0100               	movlb	0	; () banked
 18316  010A2E  6F82               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18317  010A30  0EDB               	movlw	low _myPANID
 18318  010A32  0100               	movlb	0	; () banked
 18319  010A34  6F83               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18320  010A36  0E00               	movlw	high _myPANID
 18321  010A38  0100               	movlb	0	; () banked
 18322  010A3A  6F84               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18323  010A3C  EC9F  F0B5         	call	_MiMAC_SetAltAddress	;wreg free
 18324                           
 18325                           ;miwi_mesh.c: 1600: MiWiStateMachine.bits.memberOfNetwork = 0;
 18326  010A40  0100               	movlb	0	; () banked
 18327  010A42  93D4               	bcf	_MiWiStateMachine& (0+255),1,b
 18328                           
 18329                           ; BSR set to: 0
 18330                           ;miwi_mesh.c: 1763: }
 18331                           
 18332                           ; BSR set to: 0
 18333                           ;miwi_mesh.c: 1762: break;
 18334                           
 18335                           ;miwi_mesh.c: 1761: default:
 18336                           
 18337                           ; BSR set to: 0
 18338                           ;miwi_mesh.c: 1606: }
 18339                           ;miwi_mesh.c: 1609: }
 18340                           ;miwi_mesh.c: 1610: break;
 18341  010A44  D018               	goto	l601
 18342  010A46                     l11822:
 18343  010A46  C037  FFD9         	movff	_MACRxPacket+3,fsr2l
 18344  010A4A  C038  FFDA         	movff	_MACRxPacket+4,fsr2h
 18345  010A4E  50DF               	movf	indf2,w,c
 18346                           
 18347                           ; Switch size 1, requested type "space"
 18348                           ; Number of cases is 2, Range of values is 2 to 3
 18349                           ; switch strategies available:
 18350                           ; Name         Instructions Cycles
 18351                           ; simple_byte            7     4 (average)
 18352                           ;	Chosen strategy is simple_byte
 18353  010A50  0A02               	xorlw	2	; case 2
 18354  010A52  B4D8               	btfsc	status,2,c
 18355  010A54  D707               	goto	l11750
 18356  010A56  0A01               	xorlw	1	; case 3
 18357  010A58  B4D8               	btfsc	status,2,c
 18358  010A5A  D78B               	goto	l11786
 18359                           
 18360                           ;miwi_mesh.c: 1769: }
 18361                           
 18362                           ;miwi_mesh.c: 1767: break;
 18363                           
 18364                           ;miwi_mesh.c: 1766: default:
 18365                           
 18366                           ;miwi_mesh.c: 1764: break;
 18367  010A5C  D00C               	goto	l601
 18368  010A5E                     l11826:
 18369  010A5E  5034               	movf	_MACRxPacket,w,c
 18370  010A60  0B03               	andlw	3
 18371                           
 18372                           ; Switch size 1, requested type "space"
 18373                           ; Number of cases is 3, Range of values is 0 to 3
 18374                           ; switch strategies available:
 18375                           ; Name         Instructions Cycles
 18376                           ; simple_byte           10     6 (average)
 18377                           ;	Chosen strategy is simple_byte
 18378  010A62  0A00               	xorlw	0	; case 0
 18379  010A64  B4D8               	btfsc	status,2,c
 18380  010A66  EF50  F080         	goto	l11508
 18381  010A6A  0A01               	xorlw	1	; case 1
 18382  010A6C  B4D8               	btfsc	status,2,c
 18383  010A6E  D7EB               	goto	l11822
 18384  010A70  0A02               	xorlw	2	; case 3
 18385  010A72  B4D8               	btfsc	status,2,c
 18386  010A74  D5A0               	goto	l11702
 18387  010A76                     l601:
 18388                           
 18389                           ;miwi_mesh.c: 1771: if( MiWiStateMachine.bits.RxHasUserData == 0 )
 18390  010A76  0100               	movlb	0	; () banked
 18391  010A78  A5D4               	btfss	_MiWiStateMachine& (0+255),2,b
 18392                           
 18393                           ; BSR set to: 0
 18394                           ;miwi_mesh.c: 1772: {
 18395                           ;miwi_mesh.c: 1773: MiMAC_DiscardPacket();
 18396  010A7A  EC2C  F0B5         	call	_MiMAC_DiscardPacket	;wreg free
 18397  010A7E                     l11830:
 18398                           
 18399                           ;miwi_mesh.c: 1774: }
 18400                           ;miwi_mesh.c: 1775: }
 18401                           ;miwi_mesh.c: 1777: t1 = MiWi_TickGet();
 18402  010A7E  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 18403  010A82  C081  F1D8         	movff	?_MiWi_TickGet,MiWiTasks@t1
 18404  010A86  C082  F1D9         	movff	?_MiWi_TickGet+1,MiWiTasks@t1+1
 18405  010A8A  C083  F1DA         	movff	?_MiWi_TickGet+2,MiWiTasks@t1+2
 18406  010A8E  C084  F1DB         	movff	?_MiWi_TickGet+3,MiWiTasks@t1+3
 18407                           
 18408                           ;miwi_mesh.c: 1844: for(i = 0; i < 4; i++)
 18409  010A92  0E00               	movlw	0
 18410  010A94  0101               	movlb	1	; () banked
 18411  010A96  6FE7               	movwf	MiWiTasks@i& (0+255),b
 18412  010A98                     l11834:
 18413                           
 18414                           ; BSR set to: 1
 18415  010A98  0E03               	movlw	3
 18416  010A9A  0101               	movlb	1	; () banked
 18417  010A9C  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 18418  010A9E  D001               	goto	l11838
 18419  010AA0  D067               	goto	l672
 18420  010AA2                     l11838:
 18421                           
 18422                           ; BSR set to: 1
 18423                           ;miwi_mesh.c: 1845: {
 18424                           ;miwi_mesh.c: 1846: if( BroadcastRecords[i].RxCounter > 0 )
 18425  010AA2  0101               	movlb	1	; () banked
 18426  010AA4  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18427  010AA6  0D08               	mullw	8
 18428  010AA8  0E03               	movlw	3
 18429  010AAA  26F3               	addwf	prodl,f,c
 18430  010AAC  0E00               	movlw	0
 18431  010AAE  22F4               	addwfc	prodh,f,c
 18432  010AB0  0E00               	movlw	low _BroadcastRecords
 18433  010AB2  24F3               	addwf	prodl,w,c
 18434  010AB4  6ED9               	movwf	fsr2l,c
 18435  010AB6  0E01               	movlw	high _BroadcastRecords
 18436  010AB8  20F4               	addwfc	prodh,w,c
 18437  010ABA  6EDA               	movwf	fsr2h,c
 18438  010ABC  50DF               	movf	indf2,w,c
 18439  010ABE  B4D8               	btfsc	status,2,c
 18440  010AC0  D054               	goto	l11844
 18441                           
 18442                           ; BSR set to: 1
 18443                           ;miwi_mesh.c: 1847: {
 18444                           ;miwi_mesh.c: 1848: if( (t1.Val - BroadcastRecords[i].StartTick.Val) > (((uint32_t)(1600
      +                          0000)/32)) )
 18445  010AC2  0101               	movlb	1	; () banked
 18446  010AC4  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18447  010AC6  0D08               	mullw	8
 18448  010AC8  0E04               	movlw	4
 18449  010ACA  26F3               	addwf	prodl,f,c
 18450  010ACC  0E00               	movlw	0
 18451  010ACE  22F4               	addwfc	prodh,f,c
 18452  010AD0  0E00               	movlw	low _BroadcastRecords
 18453  010AD2  24F3               	addwf	prodl,w,c
 18454  010AD4  6ED9               	movwf	fsr2l,c
 18455  010AD6  0E01               	movlw	high _BroadcastRecords
 18456  010AD8  20F4               	addwfc	prodh,w,c
 18457  010ADA  6EDA               	movwf	fsr2h,c
 18458  010ADC  CFDE F0C8          	movff	postinc2,??_MiWiTasks
 18459  010AE0  CFDE F0C9          	movff	postinc2,??_MiWiTasks+1
 18460  010AE4  CFDE F0CA          	movff	postinc2,??_MiWiTasks+2
 18461  010AE8  CFDE F0CB          	movff	postinc2,??_MiWiTasks+3
 18462  010AEC  0100               	movlb	0	; () banked
 18463  010AEE  1FC8               	comf	??_MiWiTasks& (0+255),f,b
 18464  010AF0  1FC9               	comf	(??_MiWiTasks+1)& (0+255),f,b
 18465  010AF2  1FCA               	comf	(??_MiWiTasks+2)& (0+255),f,b
 18466  010AF4  1FCB               	comf	(??_MiWiTasks+3)& (0+255),f,b
 18467  010AF6  2BC8               	incf	??_MiWiTasks& (0+255),f,b
 18468  010AF8  0E00               	movlw	0
 18469  010AFA  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18470  010AFC  23CA               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 18471  010AFE  23CB               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 18472  010B00  0101               	movlb	1	; () banked
 18473  010B02  51D8               	movf	MiWiTasks@t1& (0+255),w,b
 18474  010B04  0100               	movlb	0	; () banked
 18475  010B06  25C8               	addwf	??_MiWiTasks& (0+255),w,b
 18476  010B08  0100               	movlb	0	; () banked
 18477  010B0A  6FCC               	movwf	(??_MiWiTasks+4)& (0+255),b
 18478  010B0C  0101               	movlb	1	; () banked
 18479  010B0E  51D9               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 18480  010B10  0100               	movlb	0	; () banked
 18481  010B12  21C9               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 18482  010B14  0100               	movlb	0	; () banked
 18483  010B16  6FCD               	movwf	(??_MiWiTasks+5)& (0+255),b
 18484  010B18  0101               	movlb	1	; () banked
 18485  010B1A  51DA               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 18486  010B1C  0100               	movlb	0	; () banked
 18487  010B1E  21CA               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 18488  010B20  0100               	movlb	0	; () banked
 18489  010B22  6FCE               	movwf	(??_MiWiTasks+6)& (0+255),b
 18490  010B24  0101               	movlb	1	; () banked
 18491  010B26  51DB               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 18492  010B28  0100               	movlb	0	; () banked
 18493  010B2A  21CB               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 18494  010B2C  0100               	movlb	0	; () banked
 18495  010B2E  6FCF               	movwf	(??_MiWiTasks+7)& (0+255),b
 18496  010B30  0100               	movlb	0	; () banked
 18497  010B32  51CF               	movf	(??_MiWiTasks+7)& (0+255),w,b
 18498  010B34  E10B               	bnz	u13590
 18499  010B36  0E21               	movlw	33
 18500  010B38  0100               	movlb	0	; () banked
 18501  010B3A  5DCC               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 18502  010B3C  0EA1               	movlw	161
 18503  010B3E  0100               	movlb	0	; () banked
 18504  010B40  59CD               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 18505  010B42  0E07               	movlw	7
 18506  010B44  0100               	movlb	0	; () banked
 18507  010B46  59CE               	subwfb	(??_MiWiTasks+6)& (0+255),w,b
 18508  010B48  A0D8               	btfss	status,0,c
 18509  010B4A  D00F               	goto	l11844
 18510  010B4C                     u13590:
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;miwi_mesh.c: 1849: {
 18514                           ;miwi_mesh.c: 1850: BroadcastRecords[i].RxCounter = 0;
 18515  010B4C  0101               	movlb	1	; () banked
 18516  010B4E  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18517  010B50  0D08               	mullw	8
 18518  010B52  0E03               	movlw	3
 18519  010B54  26F3               	addwf	prodl,f,c
 18520  010B56  0E00               	movlw	0
 18521  010B58  22F4               	addwfc	prodh,f,c
 18522  010B5A  0E00               	movlw	low _BroadcastRecords
 18523  010B5C  24F3               	addwf	prodl,w,c
 18524  010B5E  6ED9               	movwf	fsr2l,c
 18525  010B60  0E01               	movlw	high _BroadcastRecords
 18526  010B62  20F4               	addwfc	prodh,w,c
 18527  010B64  6EDA               	movwf	fsr2h,c
 18528  010B66  0E00               	movlw	0
 18529  010B68  6EDF               	movwf	indf2,c
 18530  010B6A                     l11844:
 18531  010B6A  0101               	movlb	1	; () banked
 18532  010B6C  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 18533  010B6E  D794               	goto	l11834
 18534  010B70                     l672:
 18535                           
 18536                           ; BSR set to: 1
 18537                           ;miwi_mesh.c: 1851: }
 18538                           ;miwi_mesh.c: 1852: }
 18539                           ;miwi_mesh.c: 1853: }
 18540                           ;miwi_mesh.c: 1857: if(openSocketInfo.status.bits.requestIsOpen)
 18541  010B70  0101               	movlb	1	; () banked
 18542  010B72  A320               	btfss	_openSocketInfo& (0+255),1,b
 18543  010B74  0012               	return	
 18544                           
 18545                           ; BSR set to: 1
 18546                           ;miwi_mesh.c: 1858: {
 18547                           ;miwi_mesh.c: 1859: if(openSocketInfo.status.bits.matchFound)
 18548  010B76  0101               	movlb	1	; () banked
 18549  010B78  B120               	btfsc	_openSocketInfo& (0+255),0,b
 18550  010B7A  0012               	return	
 18551                           
 18552                           ; BSR set to: 1
 18553                           ;miwi_mesh.c: 1894: else
 18554                           ;miwi_mesh.c: 1895: {
 18555                           ;miwi_mesh.c: 1896: t2.Val = (t1.Val - openSocketInfo.socketStart.Val);
 18556                           
 18557                           ; BSR set to: 1
 18558                           
 18559                           ; BSR set to: 1
 18560                           ;miwi_mesh.c: 1860: {
 18561                           ;miwi_mesh.c: 1893: }
 18562  010B7C  C128  F0C8         	movff	_openSocketInfo+8,??_MiWiTasks
 18563  010B80  C129  F0C9         	movff	_openSocketInfo+9,??_MiWiTasks+1
 18564  010B84  C12A  F0CA         	movff	_openSocketInfo+10,??_MiWiTasks+2
 18565  010B88  C12B  F0CB         	movff	_openSocketInfo+11,??_MiWiTasks+3
 18566  010B8C  0100               	movlb	0	; () banked
 18567  010B8E  1FC8               	comf	??_MiWiTasks& (0+255),f,b
 18568  010B90  1FC9               	comf	(??_MiWiTasks+1)& (0+255),f,b
 18569  010B92  1FCA               	comf	(??_MiWiTasks+2)& (0+255),f,b
 18570  010B94  1FCB               	comf	(??_MiWiTasks+3)& (0+255),f,b
 18571  010B96  2BC8               	incf	??_MiWiTasks& (0+255),f,b
 18572  010B98  0E00               	movlw	0
 18573  010B9A  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18574  010B9C  23CA               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 18575  010B9E  23CB               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 18576  010BA0  0101               	movlb	1	; () banked
 18577  010BA2  51D8               	movf	MiWiTasks@t1& (0+255),w,b
 18578  010BA4  0100               	movlb	0	; () banked
 18579  010BA6  25C8               	addwf	??_MiWiTasks& (0+255),w,b
 18580  010BA8  0101               	movlb	1	; () banked
 18581  010BAA  6FD3               	movwf	MiWiTasks@t2& (0+255),b
 18582  010BAC  0101               	movlb	1	; () banked
 18583  010BAE  51D9               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 18584  010BB0  0100               	movlb	0	; () banked
 18585  010BB2  21C9               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 18586  010BB4  0101               	movlb	1	; () banked
 18587  010BB6  6FD4               	movwf	(MiWiTasks@t2+1)& (0+255),b
 18588  010BB8  0101               	movlb	1	; () banked
 18589  010BBA  51DA               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 18590  010BBC  0100               	movlb	0	; () banked
 18591  010BBE  21CA               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 18592  010BC0  0101               	movlb	1	; () banked
 18593  010BC2  6FD5               	movwf	(MiWiTasks@t2+2)& (0+255),b
 18594  010BC4  0101               	movlb	1	; () banked
 18595  010BC6  51DB               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 18596  010BC8  0100               	movlb	0	; () banked
 18597  010BCA  21CB               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 18598  010BCC  0101               	movlb	1	; () banked
 18599  010BCE  6FD6               	movwf	(MiWiTasks@t2+3)& (0+255),b
 18600                           
 18601                           ;miwi_mesh.c: 1898: if(t2.Val > (((uint32_t)(16000000)/32) * 3))
 18602  010BD0  0101               	movlb	1	; () banked
 18603  010BD2  51D6               	movf	(MiWiTasks@t2+3)& (0+255),w,b
 18604  010BD4  E10B               	bnz	u13630
 18605  010BD6  0E61               	movlw	97
 18606  010BD8  0101               	movlb	1	; () banked
 18607  010BDA  5DD3               	subwf	MiWiTasks@t2& (0+255),w,b
 18608  010BDC  0EE3               	movlw	227
 18609  010BDE  0101               	movlb	1	; () banked
 18610  010BE0  59D4               	subwfb	(MiWiTasks@t2+1)& (0+255),w,b
 18611  010BE2  0E16               	movlw	22
 18612  010BE4  0101               	movlb	1	; () banked
 18613  010BE6  59D5               	subwfb	(MiWiTasks@t2+2)& (0+255),w,b
 18614  010BE8  A0D8               	btfss	status,0,c
 18615  010BEA  0012               	return	
 18616  010BEC                     u13630:
 18617                           
 18618                           ; BSR set to: 1
 18619                           ;miwi_mesh.c: 1899: {
 18620                           ;miwi_mesh.c: 1901: openSocketInfo.status.bits.requestIsOpen = 0;
 18621  010BEC  0101               	movlb	1	; () banked
 18622  010BEE  9320               	bcf	_openSocketInfo& (0+255),1,b
 18623                           
 18624                           ; BSR set to: 1
 18625                           
 18626                           ; BSR set to: 1
 18627  010BF0  0012               	return	
 18628  010BF2                     __end_of_MiWiTasks:
 18629                           	opt stack 0
 18630                           tblptru	equ	0xFF8
 18631                           tblptrh	equ	0xFF7
 18632                           tblptrl	equ	0xFF6
 18633                           tablat	equ	0xFF5
 18634                           prodh	equ	0xFF4
 18635                           prodl	equ	0xFF3
 18636                           intcon	equ	0xFF2
 18637                           intcon2	equ	0xFF1
 18638                           intcon3	equ	0xFF0
 18639                           indf0	equ	0xFEF
 18640                           postinc0	equ	0xFEE
 18641                           plusw0	equ	0xFEB
 18642                           fsr0h	equ	0xFEA
 18643                           fsr0l	equ	0xFE9
 18644                           wreg	equ	0xFE8
 18645                           indf1	equ	0xFE7
 18646                           postinc1	equ	0xFE6
 18647                           postdec1	equ	0xFE5
 18648                           fsr1h	equ	0xFE2
 18649                           fsr1l	equ	0xFE1
 18650                           indf2	equ	0xFDF
 18651                           postinc2	equ	0xFDE
 18652                           postdec2	equ	0xFDD
 18653                           plusw2	equ	0xFDB
 18654                           fsr2h	equ	0xFDA
 18655                           fsr2l	equ	0xFD9
 18656                           status	equ	0xFD8
 18657                           
 18658 ;; *************** function _MiMAC_SetAltAddress *****************
 18659 ;; Defined at:
 18660 ;;		line 445 in file "src/miwi/drv_mrf_miwi_89xa.c"
 18661 ;; Parameters:    Size  Location     Type
 18662 ;;  Address         2   33[BANK0 ] PTR unsigned char 
 18663 ;;		 -> tempShortAddress(2), myShortAddress(2), 
 18664 ;;  PANID           2   35[BANK0 ] PTR unsigned char 
 18665 ;;		 -> myPANID(2), 
 18666 ;; Auto vars:     Size  Location     Type
 18667 ;;		None
 18668 ;; Return value:  Size  Location     Type
 18669 ;;                  1    wreg      unsigned char 
 18670 ;; Registers used:
 18671 ;;		None
 18672 ;; Tracked objects:
 18673 ;;		On entry : 0/0
 18674 ;;		On exit  : 0/0
 18675 ;;		Unchanged: 0/0
 18676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18677 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18680 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18681 ;;Total ram usage:        4 bytes
 18682 ;; Hardware stack levels used:    1
 18683 ;; Hardware stack levels required when called:    7
 18684 ;; This function calls:
 18685 ;;		Nothing
 18686 ;; This function is called by:
 18687 ;;		_MiWiTasks
 18688 ;;		_MiApp_ProtocolInit
 18689 ;;		_MiApp_EstablishConnection
 18690 ;;		_MiApp_RemoveConnection
 18691 ;; This function uses a non-reentrant model
 18692 ;;
 18693                           
 18694                           	psect	text55
 18695  016B3E                     __ptext55:
 18696                           	opt stack 0
 18697  016B3E                     _MiMAC_SetAltAddress:
 18698                           	opt stack 18
 18699                           
 18700                           ;drv_mrf_miwi_89xa.c: 447: return 0;
 18701                           ;	Return value of _MiMAC_SetAltAddress is never used
 18702                           
 18703                           ;incstack = 0
 18704  016B3E  0012               	return		;funcret
 18705  016B40                     __end_of_MiMAC_SetAltAddress:
 18706                           	opt stack 0
 18707                           tblptru	equ	0xFF8
 18708                           tblptrh	equ	0xFF7
 18709                           tblptrl	equ	0xFF6
 18710                           tablat	equ	0xFF5
 18711                           prodh	equ	0xFF4
 18712                           prodl	equ	0xFF3
 18713                           intcon	equ	0xFF2
 18714                           intcon2	equ	0xFF1
 18715                           intcon3	equ	0xFF0
 18716                           indf0	equ	0xFEF
 18717                           postinc0	equ	0xFEE
 18718                           plusw0	equ	0xFEB
 18719                           fsr0h	equ	0xFEA
 18720                           fsr0l	equ	0xFE9
 18721                           wreg	equ	0xFE8
 18722                           indf1	equ	0xFE7
 18723                           postinc1	equ	0xFE6
 18724                           postdec1	equ	0xFE5
 18725                           fsr1h	equ	0xFE2
 18726                           fsr1l	equ	0xFE1
 18727                           indf2	equ	0xFDF
 18728                           postinc2	equ	0xFDE
 18729                           postdec2	equ	0xFDD
 18730                           plusw2	equ	0xFDB
 18731                           fsr2h	equ	0xFDA
 18732                           fsr2l	equ	0xFD9
 18733                           status	equ	0xFD8
 18734                           
 18735 ;; *************** function _MiMAC_SendPacket *****************
 18736 ;; Defined at:
 18737 ;;		line 735 in file "src/miwi/drv_mrf_miwi_89xa.c"
 18738 ;; Parameters:    Size  Location     Type
 18739 ;;  transParam      3   80[BANK0 ] struct .
 18740 ;;  MACPayload      2   83[BANK0 ] PTR unsigned char 
 18741 ;;		 -> TxBuffer(43), 
 18742 ;;  MACPayloadLe    1   85[BANK0 ] unsigned char 
 18743 ;; Auto vars:     Size  Location     Type
 18744 ;;  headerLen       1   87[BANK0 ] unsigned char 
 18745 ;;  i               1   89[BANK0 ] unsigned char 
 18746 ;;  TxIndex         1   88[BANK0 ] unsigned char 
 18747 ;; Return value:  Size  Location     Type
 18748 ;;                  1    wreg      unsigned char 
 18749 ;; Registers used:
 18750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18751 ;; Tracked objects:
 18752 ;;		On entry : 0/0
 18753 ;;		On exit  : 0/0
 18754 ;;		Unchanged: 0/0
 18755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18756 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18757 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18758 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18759 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18760 ;;Total ram usage:       10 bytes
 18761 ;; Hardware stack levels used:    1
 18762 ;; Hardware stack levels required when called:   11
 18763 ;; This function calls:
 18764 ;;		_CCM_Enc
 18765 ;;		_TxPacket
 18766 ;; This function is called by:
 18767 ;;		_MiWiTasks
 18768 ;;		_SendMACPacket
 18769 ;;		_MiApp_UnicastAddress
 18770 ;;		_MiApp_BroadcastPacket
 18771 ;;		_MiApp_UnicastConnection
 18772 ;;		_UnicastShortAddress
 18773 ;;		_MiApp_RemoveConnection
 18774 ;; This function uses a non-reentrant model
 18775 ;;
 18776                           
 18777                           	psect	text56
 18778  0135DA                     __ptext56:
 18779                           	opt stack 0
 18780  0135DA                     _MiMAC_SendPacket:
 18781                           	opt stack 16
 18782                           
 18783                           ;drv_mrf_miwi_89xa.c: 739: uint8_t i;
 18784                           ;drv_mrf_miwi_89xa.c: 740: uint8_t TxIndex;
 18785                           ;drv_mrf_miwi_89xa.c: 742: if( MACPayloadLen > 32 )
 18786                           
 18787                           ;incstack = 0
 18788  0135DA  0E20               	movlw	32
 18789  0135DC  0100               	movlb	0	; () banked
 18790  0135DE  65B5               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 18791  0135E0  D002               	goto	l11226
 18792                           
 18793                           ; BSR set to: 0
 18794                           ;drv_mrf_miwi_89xa.c: 743: {
 18795                           ;drv_mrf_miwi_89xa.c: 744: return 0;
 18796  0135E2  0E00               	movlw	0
 18797                           
 18798                           ; BSR set to: 0
 18799  0135E4  0012               	return	
 18800  0135E6                     l11226:
 18801                           
 18802                           ; BSR set to: 0
 18803                           ;drv_mrf_miwi_89xa.c: 745: }
 18804                           ;drv_mrf_miwi_89xa.c: 750: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 18805  0135E6  0100               	movlb	0	; () banked
 18806  0135E8  B5B0               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 18807  0135EA  D004               	goto	u12510
 18808  0135EC  0100               	movlb	0	; () banked
 18809  0135EE  6BB6               	clrf	??_MiMAC_SendPacket& (0+255),b
 18810  0135F0  2BB6               	incf	??_MiMAC_SendPacket& (0+255),f,b
 18811  0135F2  D002               	goto	u12528
 18812  0135F4                     u12510:
 18813  0135F4  0100               	movlb	0	; () banked
 18814  0135F6  6BB6               	clrf	??_MiMAC_SendPacket& (0+255),b
 18815  0135F8                     u12528:
 18816  0135F8  0100               	movlb	0	; () banked
 18817  0135FA  3BB6               	swapf	??_MiMAC_SendPacket& (0+255),f,b
 18818  0135FC  47B6               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 18819  0135FE  47B6               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 18820  013600  0100               	movlb	0	; () banked
 18821  013602  51B0               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 18822  013604  0100               	movlb	0	; () banked
 18823  013606  19B6               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 18824  013608  0BBF               	andlw	-65
 18825  01360A  19B6               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 18826  01360C  0100               	movlb	0	; () banked
 18827  01360E  6FB0               	movwf	MiMAC_SendPacket@transParam& (0+255),b
 18828                           
 18829                           ;drv_mrf_miwi_89xa.c: 757: if( transParam.flags.bits.packetType == 0x01 )
 18830  013610  0100               	movlb	0	; () banked
 18831  013612  51B0               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 18832  013614  0B03               	andlw	3
 18833  013616  06E8               	decf	wreg,f,c
 18834  013618  A4D8               	btfss	status,2,c
 18835  01361A  D002               	goto	l318
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;drv_mrf_miwi_89xa.c: 758: {
 18839                           ;drv_mrf_miwi_89xa.c: 759: transParam.flags.bits.sourcePrsnt = 1;
 18840  01361C  0100               	movlb	0	; () banked
 18841  01361E  8FB0               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 18842  013620                     l318:
 18843                           
 18844                           ; BSR set to: 0
 18845                           ;drv_mrf_miwi_89xa.c: 760: }
 18846                           ;drv_mrf_miwi_89xa.c: 762: MACTxBuffer[0] = transParam.flags.Val;
 18847  013620  C0B0  F2A0         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 18848                           
 18849                           ;drv_mrf_miwi_89xa.c: 763: MACTxBuffer[1] = MACSeq++;
 18850  013624  C041  F2A1         	movff	_MACSeq,_MACTxBuffer+1	;volatile
 18851                           
 18852                           ; BSR set to: 0
 18853  013628  2A41               	incf	_MACSeq,f,c
 18854                           
 18855                           ; BSR set to: 0
 18856                           ;drv_mrf_miwi_89xa.c: 766: TxIndex = 2;
 18857  01362A  0E02               	movlw	2
 18858  01362C  0100               	movlb	0	; () banked
 18859  01362E  6FB8               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
 18860                           
 18861                           ; BSR set to: 0
 18862                           ;drv_mrf_miwi_89xa.c: 768: if( transParam.flags.bits.destPrsnt )
 18863  013630  0100               	movlb	0	; () banked
 18864  013632  ADB0               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 18865  013634  D02A               	goto	l323
 18866                           
 18867                           ; BSR set to: 0
 18868                           ;drv_mrf_miwi_89xa.c: 769: {
 18869                           ;drv_mrf_miwi_89xa.c: 770: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 18870  013636  0E00               	movlw	0
 18871  013638  0100               	movlb	0	; () banked
 18872  01363A  6FB9               	movwf	MiMAC_SendPacket@i& (0+255),b
 18873  01363C  D01A               	goto	l11244
 18874  01363E                     l11238:
 18875                           
 18876                           ; BSR set to: 0
 18877                           ;drv_mrf_miwi_89xa.c: 771: {
 18878                           ;drv_mrf_miwi_89xa.c: 772: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 18879  01363E  0100               	movlb	0	; () banked
 18880  013640  51B9               	movf	MiMAC_SendPacket@i& (0+255),w,b
 18881  013642  0D01               	mullw	1
 18882  013644  50F3               	movf	prodl,w,c
 18883  013646  0100               	movlb	0	; () banked
 18884  013648  25B1               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 18885  01364A  6ED9               	movwf	fsr2l,c
 18886  01364C  50F4               	movf	prodh,w,c
 18887  01364E  0100               	movlb	0	; () banked
 18888  013650  21B2               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 18889  013652  6EDA               	movwf	fsr2h,c
 18890  013654  0100               	movlb	0	; () banked
 18891  013656  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 18892  013658  0D01               	mullw	1
 18893  01365A  0EA0               	movlw	low _MACTxBuffer
 18894  01365C  24F3               	addwf	prodl,w,c
 18895  01365E  6EE1               	movwf	fsr1l,c
 18896  013660  0E02               	movlw	high _MACTxBuffer
 18897  013662  20F4               	addwfc	prodh,w,c
 18898  013664  6EE2               	movwf	fsr1h,c
 18899  013666  CFDF FFE7          	movff	indf2,indf1
 18900                           
 18901                           ; BSR set to: 0
 18902  01366A  0100               	movlb	0	; () banked
 18903  01366C  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 18904                           
 18905                           ; BSR set to: 0
 18906  01366E  0100               	movlb	0	; () banked
 18907  013670  2BB9               	incf	MiMAC_SendPacket@i& (0+255),f,b
 18908  013672                     l11244:
 18909                           
 18910                           ; BSR set to: 0
 18911  013672  303C               	rrcf	_MACInitParams,w,c
 18912  013674  32E8               	rrcf	wreg,f,c
 18913  013676  32E8               	rrcf	wreg,f,c
 18914  013678  0B0F               	andlw	15
 18915  01367A  0100               	movlb	0	; () banked
 18916  01367C  6FB6               	movwf	??_MiMAC_SendPacket& (0+255),b
 18917  01367E  0100               	movlb	0	; () banked
 18918  013680  51B6               	movf	??_MiMAC_SendPacket& (0+255),w,b
 18919  013682  0100               	movlb	0	; () banked
 18920  013684  5DB9               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 18921  013686  A0D8               	btfss	status,0,c
 18922  013688  D7DA               	goto	l11238
 18923  01368A                     l323:
 18924                           
 18925                           ; BSR set to: 0
 18926                           ;drv_mrf_miwi_89xa.c: 778: }
 18927                           ;drv_mrf_miwi_89xa.c: 780: if( transParam.flags.bits.sourcePrsnt )
 18928  01368A  0100               	movlb	0	; () banked
 18929  01368C  AFB0               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 18930  01368E  D028               	goto	l324
 18931                           
 18932                           ; BSR set to: 0
 18933                           ;drv_mrf_miwi_89xa.c: 781: {
 18934                           ;drv_mrf_miwi_89xa.c: 782: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 18935  013690  0E00               	movlw	0
 18936  013692  0100               	movlb	0	; () banked
 18937  013694  6FB9               	movwf	MiMAC_SendPacket@i& (0+255),b
 18938  013696  D018               	goto	l11254
 18939  013698                     l11248:
 18940                           
 18941                           ; BSR set to: 0
 18942                           ;drv_mrf_miwi_89xa.c: 783: {
 18943                           ;drv_mrf_miwi_89xa.c: 784: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 18944  013698  0100               	movlb	0	; () banked
 18945  01369A  51B9               	movf	MiMAC_SendPacket@i& (0+255),w,b
 18946  01369C  0D01               	mullw	1
 18947  01369E  50F3               	movf	prodl,w,c
 18948  0136A0  243D               	addwf	_MACInitParams+1,w,c
 18949  0136A2  6ED9               	movwf	fsr2l,c
 18950  0136A4  50F4               	movf	prodh,w,c
 18951  0136A6  203E               	addwfc	_MACInitParams+2,w,c
 18952  0136A8  6EDA               	movwf	fsr2h,c
 18953  0136AA  0100               	movlb	0	; () banked
 18954  0136AC  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 18955  0136AE  0D01               	mullw	1
 18956  0136B0  0EA0               	movlw	low _MACTxBuffer
 18957  0136B2  24F3               	addwf	prodl,w,c
 18958  0136B4  6EE1               	movwf	fsr1l,c
 18959  0136B6  0E02               	movlw	high _MACTxBuffer
 18960  0136B8  20F4               	addwfc	prodh,w,c
 18961  0136BA  6EE2               	movwf	fsr1h,c
 18962  0136BC  CFDF FFE7          	movff	indf2,indf1
 18963                           
 18964                           ; BSR set to: 0
 18965  0136C0  0100               	movlb	0	; () banked
 18966  0136C2  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 18967                           
 18968                           ; BSR set to: 0
 18969  0136C4  0100               	movlb	0	; () banked
 18970  0136C6  2BB9               	incf	MiMAC_SendPacket@i& (0+255),f,b
 18971  0136C8                     l11254:
 18972                           
 18973                           ; BSR set to: 0
 18974  0136C8  303C               	rrcf	_MACInitParams,w,c
 18975  0136CA  32E8               	rrcf	wreg,f,c
 18976  0136CC  32E8               	rrcf	wreg,f,c
 18977  0136CE  0B0F               	andlw	15
 18978  0136D0  0100               	movlb	0	; () banked
 18979  0136D2  6FB6               	movwf	??_MiMAC_SendPacket& (0+255),b
 18980  0136D4  0100               	movlb	0	; () banked
 18981  0136D6  51B6               	movf	??_MiMAC_SendPacket& (0+255),w,b
 18982  0136D8  0100               	movlb	0	; () banked
 18983  0136DA  5DB9               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 18984  0136DC  A0D8               	btfss	status,0,c
 18985  0136DE  D7DC               	goto	l11248
 18986  0136E0                     l324:
 18987                           
 18988                           ; BSR set to: 0
 18989                           ;drv_mrf_miwi_89xa.c: 785: }
 18990                           ;drv_mrf_miwi_89xa.c: 787: }
 18991                           ;drv_mrf_miwi_89xa.c: 790: if( transParam.flags.bits.secEn )
 18992  0136E0  0100               	movlb	0	; () banked
 18993  0136E2  A7B0               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 18994  0136E4  D071               	goto	l11292
 18995                           
 18996                           ; BSR set to: 0
 18997                           ;drv_mrf_miwi_89xa.c: 791: {
 18998                           ;drv_mrf_miwi_89xa.c: 793: for(i = 0; i < 4; i++)
 18999  0136E6  0E00               	movlw	0
 19000  0136E8  0100               	movlb	0	; () banked
 19001  0136EA  6FB9               	movwf	MiMAC_SendPacket@i& (0+255),b
 19002  0136EC                     l11258:
 19003                           
 19004                           ; BSR set to: 0
 19005  0136EC  0E03               	movlw	3
 19006  0136EE  0100               	movlb	0	; () banked
 19007  0136F0  65B9               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 19008  0136F2  D001               	goto	l11262
 19009  0136F4  D019               	goto	l11270
 19010  0136F6                     l11262:
 19011                           
 19012                           ; BSR set to: 0
 19013                           ;drv_mrf_miwi_89xa.c: 794: {
 19014                           ;drv_mrf_miwi_89xa.c: 795: MACTxBuffer[TxIndex++] = OutgoingFrameCounter.v[i];
 19015  0136F6  0100               	movlb	0	; () banked
 19016  0136F8  51B9               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19017  0136FA  0D01               	mullw	1
 19018  0136FC  0E3E               	movlw	low _OutgoingFrameCounter
 19019  0136FE  24F3               	addwf	prodl,w,c
 19020  013700  6ED9               	movwf	fsr2l,c
 19021  013702  0E01               	movlw	high _OutgoingFrameCounter
 19022  013704  20F4               	addwfc	prodh,w,c
 19023  013706  6EDA               	movwf	fsr2h,c
 19024  013708  0100               	movlb	0	; () banked
 19025  01370A  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19026  01370C  0D01               	mullw	1
 19027  01370E  0EA0               	movlw	low _MACTxBuffer
 19028  013710  24F3               	addwf	prodl,w,c
 19029  013712  6EE1               	movwf	fsr1l,c
 19030  013714  0E02               	movlw	high _MACTxBuffer
 19031  013716  20F4               	addwfc	prodh,w,c
 19032  013718  6EE2               	movwf	fsr1h,c
 19033  01371A  CFDF FFE7          	movff	indf2,indf1
 19034                           
 19035                           ; BSR set to: 0
 19036  01371E  0100               	movlb	0	; () banked
 19037  013720  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19038                           
 19039                           ; BSR set to: 0
 19040  013722  0100               	movlb	0	; () banked
 19041  013724  2BB9               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19042  013726  D7E2               	goto	l11258
 19043  013728                     l11270:
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;drv_mrf_miwi_89xa.c: 796: }
 19047                           ;drv_mrf_miwi_89xa.c: 797: OutgoingFrameCounter.Val++;
 19048  013728  0E01               	movlw	1
 19049  01372A  0101               	movlb	1	; () banked
 19050  01372C  273E               	addwf	_OutgoingFrameCounter& (0+255),f,b
 19051  01372E  0E00               	movlw	0
 19052  013730  233F               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 19053  013732  2340               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 19054  013734  2341               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 19055                           
 19056                           ; BSR set to: 1
 19057                           ;drv_mrf_miwi_89xa.c: 804: MACTxBuffer[TxIndex++] = 0x00;
 19058  013736  0100               	movlb	0	; () banked
 19059  013738  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19060  01373A  0D01               	mullw	1
 19061  01373C  0EA0               	movlw	low _MACTxBuffer
 19062  01373E  24F3               	addwf	prodl,w,c
 19063  013740  6ED9               	movwf	fsr2l,c
 19064  013742  0E02               	movlw	high _MACTxBuffer
 19065  013744  20F4               	addwfc	prodh,w,c
 19066  013746  6EDA               	movwf	fsr2h,c
 19067  013748  0E00               	movlw	0
 19068  01374A  6EDF               	movwf	indf2,c
 19069                           
 19070                           ; BSR set to: 0
 19071  01374C  0100               	movlb	0	; () banked
 19072  01374E  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19073                           
 19074                           ; BSR set to: 0
 19075                           ;drv_mrf_miwi_89xa.c: 806: {
 19076                           ;drv_mrf_miwi_89xa.c: 807: uint8_t headerLen;
 19077                           ;drv_mrf_miwi_89xa.c: 809: headerLen = TxIndex;
 19078  013750  C0B8  F0B7         	movff	MiMAC_SendPacket@TxIndex,MiMAC_SendPacket@headerLen
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;drv_mrf_miwi_89xa.c: 811: for(i = 0; i < MACPayloadLen; i++)
 19082  013754  0E00               	movlw	0
 19083  013756  0100               	movlb	0	; () banked
 19084  013758  6FB9               	movwf	MiMAC_SendPacket@i& (0+255),b
 19085  01375A  D01A               	goto	l11286
 19086  01375C                     l11280:
 19087                           
 19088                           ; BSR set to: 0
 19089                           ;drv_mrf_miwi_89xa.c: 812: {
 19090                           ;drv_mrf_miwi_89xa.c: 813: MACTxBuffer[TxIndex++] = MACPayload[i];
 19091  01375C  0100               	movlb	0	; () banked
 19092  01375E  51B9               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19093  013760  0D01               	mullw	1
 19094  013762  50F3               	movf	prodl,w,c
 19095  013764  0100               	movlb	0	; () banked
 19096  013766  25B3               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 19097  013768  6ED9               	movwf	fsr2l,c
 19098  01376A  50F4               	movf	prodh,w,c
 19099  01376C  0100               	movlb	0	; () banked
 19100  01376E  21B4               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 19101  013770  6EDA               	movwf	fsr2h,c
 19102  013772  0100               	movlb	0	; () banked
 19103  013774  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19104  013776  0D01               	mullw	1
 19105  013778  0EA0               	movlw	low _MACTxBuffer
 19106  01377A  24F3               	addwf	prodl,w,c
 19107  01377C  6EE1               	movwf	fsr1l,c
 19108  01377E  0E02               	movlw	high _MACTxBuffer
 19109  013780  20F4               	addwfc	prodh,w,c
 19110  013782  6EE2               	movwf	fsr1h,c
 19111  013784  CFDF FFE7          	movff	indf2,indf1
 19112                           
 19113                           ; BSR set to: 0
 19114  013788  0100               	movlb	0	; () banked
 19115  01378A  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19116                           
 19117                           ; BSR set to: 0
 19118  01378C  0100               	movlb	0	; () banked
 19119  01378E  2BB9               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19120  013790                     l11286:
 19121                           
 19122                           ; BSR set to: 0
 19123  013790  0100               	movlb	0	; () banked
 19124  013792  51B5               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 19125  013794  0100               	movlb	0	; () banked
 19126  013796  5DB9               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19127  013798  A0D8               	btfss	status,0,c
 19128  01379A  D7E0               	goto	l11280
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;drv_mrf_miwi_89xa.c: 814: }
 19132                           ;drv_mrf_miwi_89xa.c: 834: CCM_Enc((uint8_t *)MACTxBuffer, headerLen, MACPayloadLen, key
      +                          );
 19133                           
 19134                           ; BSR set to: 0
 19135  01379C  0EA0               	movlw	low _MACTxBuffer
 19136  01379E  0100               	movlb	0	; () banked
 19137  0137A0  6FA5               	movwf	CCM_Enc@text& (0+255),b
 19138  0137A2  0E02               	movlw	high _MACTxBuffer
 19139  0137A4  0100               	movlb	0	; () banked
 19140  0137A6  6FA6               	movwf	(CCM_Enc@text+1)& (0+255),b
 19141  0137A8  C0B7  F0A7         	movff	MiMAC_SendPacket@headerLen,CCM_Enc@headerLen
 19142  0137AC  C0B5  F0A8         	movff	MiMAC_SendPacket@MACPayloadLen,CCM_Enc@payloadLen
 19143  0137B0  0EC0               	movlw	low _key
 19144  0137B2  0100               	movlb	0	; () banked
 19145  0137B4  6FA9               	movwf	CCM_Enc@key& (0+255),b
 19146  0137B6  0E01               	movlw	high _key
 19147  0137B8  0100               	movlb	0	; () banked
 19148  0137BA  6FAA               	movwf	(CCM_Enc@key+1)& (0+255),b
 19149  0137BC  ECFB  F0A5         	call	_CCM_Enc	;wreg free
 19150                           
 19151                           ;drv_mrf_miwi_89xa.c: 835: TxIndex += 2;
 19152  0137C0  0E02               	movlw	2
 19153  0137C2  0100               	movlb	0	; () banked
 19154  0137C4  27B8               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19155                           
 19156                           ;drv_mrf_miwi_89xa.c: 842: }
 19157                           ;drv_mrf_miwi_89xa.c: 843: }
 19158  0137C6  D024               	goto	l11302
 19159  0137C8                     l11292:
 19160                           
 19161                           ; BSR set to: 0
 19162                           ;drv_mrf_miwi_89xa.c: 844: else
 19163                           ;drv_mrf_miwi_89xa.c: 848: for(i = 0; i < MACPayloadLen; i++)
 19164  0137C8  0E00               	movlw	0
 19165  0137CA  0100               	movlb	0	; () banked
 19166  0137CC  6FB9               	movwf	MiMAC_SendPacket@i& (0+255),b
 19167  0137CE  D01A               	goto	l11300
 19168  0137D0                     l11294:
 19169                           
 19170                           ; BSR set to: 0
 19171                           ;drv_mrf_miwi_89xa.c: 849: {
 19172                           ;drv_mrf_miwi_89xa.c: 850: MACTxBuffer[TxIndex++] = MACPayload[i];
 19173  0137D0  0100               	movlb	0	; () banked
 19174  0137D2  51B9               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19175  0137D4  0D01               	mullw	1
 19176  0137D6  50F3               	movf	prodl,w,c
 19177  0137D8  0100               	movlb	0	; () banked
 19178  0137DA  25B3               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 19179  0137DC  6ED9               	movwf	fsr2l,c
 19180  0137DE  50F4               	movf	prodh,w,c
 19181  0137E0  0100               	movlb	0	; () banked
 19182  0137E2  21B4               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 19183  0137E4  6EDA               	movwf	fsr2h,c
 19184  0137E6  0100               	movlb	0	; () banked
 19185  0137E8  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19186  0137EA  0D01               	mullw	1
 19187  0137EC  0EA0               	movlw	low _MACTxBuffer
 19188  0137EE  24F3               	addwf	prodl,w,c
 19189  0137F0  6EE1               	movwf	fsr1l,c
 19190  0137F2  0E02               	movlw	high _MACTxBuffer
 19191  0137F4  20F4               	addwfc	prodh,w,c
 19192  0137F6  6EE2               	movwf	fsr1h,c
 19193  0137F8  CFDF FFE7          	movff	indf2,indf1
 19194                           
 19195                           ; BSR set to: 0
 19196  0137FC  0100               	movlb	0	; () banked
 19197  0137FE  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19198                           
 19199                           ; BSR set to: 0
 19200  013800  0100               	movlb	0	; () banked
 19201  013802  2BB9               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19202  013804                     l11300:
 19203                           
 19204                           ; BSR set to: 0
 19205  013804  0100               	movlb	0	; () banked
 19206  013806  51B5               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 19207  013808  0100               	movlb	0	; () banked
 19208  01380A  5DB9               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19209  01380C  A0D8               	btfss	status,0,c
 19210  01380E  D7E0               	goto	l11294
 19211  013810                     l11302:
 19212                           
 19213                           ; BSR set to: 0
 19214                           ;drv_mrf_miwi_89xa.c: 851: }
 19215                           ;drv_mrf_miwi_89xa.c: 853: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 19216  013810  0E00               	movlw	0
 19217  013812  B23C               	btfsc	_MACInitParams,1,c
 19218  013814  0E01               	movlw	1
 19219  013816  0100               	movlb	0	; () banked
 19220  013818  6F8B               	movwf	TxPacket@CCA& (0+255),b
 19221  01381A  0100               	movlb	0	; () banked
 19222  01381C  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19223  01381E  EC05  F09F         	call	_TxPacket
 19224  013822  0012               	return	
 19225  013824                     __end_of_MiMAC_SendPacket:
 19226                           	opt stack 0
 19227                           tblptru	equ	0xFF8
 19228                           tblptrh	equ	0xFF7
 19229                           tblptrl	equ	0xFF6
 19230                           tablat	equ	0xFF5
 19231                           prodh	equ	0xFF4
 19232                           prodl	equ	0xFF3
 19233                           intcon	equ	0xFF2
 19234                           intcon2	equ	0xFF1
 19235                           intcon3	equ	0xFF0
 19236                           indf0	equ	0xFEF
 19237                           postinc0	equ	0xFEE
 19238                           plusw0	equ	0xFEB
 19239                           fsr0h	equ	0xFEA
 19240                           fsr0l	equ	0xFE9
 19241                           wreg	equ	0xFE8
 19242                           indf1	equ	0xFE7
 19243                           postinc1	equ	0xFE6
 19244                           postdec1	equ	0xFE5
 19245                           fsr1h	equ	0xFE2
 19246                           fsr1l	equ	0xFE1
 19247                           indf2	equ	0xFDF
 19248                           postinc2	equ	0xFDE
 19249                           postdec2	equ	0xFDD
 19250                           plusw2	equ	0xFDB
 19251                           fsr2h	equ	0xFDA
 19252                           fsr2l	equ	0xFD9
 19253                           status	equ	0xFD8
 19254                           
 19255 ;; *************** function _TxPacket *****************
 19256 ;; Defined at:
 19257 ;;		line 295 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19258 ;; Parameters:    Size  Location     Type
 19259 ;;  TxPacketLen     1    wreg     unsigned char 
 19260 ;;  CCA             1   43[BANK0 ] unsigned char 
 19261 ;; Auto vars:     Size  Location     Type
 19262 ;;  TxPacketLen     1   64[BANK0 ] unsigned char 
 19263 ;;  allowedTxFai    1   62[BANK0 ] unsigned char 
 19264 ;;  t2              4   56[BANK0 ] struct _MIWI_TICK
 19265 ;;  t1              4   52[BANK0 ] struct _MIWI_TICK
 19266 ;;  rssival         1   66[BANK0 ] unsigned char 
 19267 ;;  i               1   65[BANK0 ] unsigned char 
 19268 ;;  status          1   63[BANK0 ] unsigned char 
 19269 ;;  reTry           1   61[BANK0 ] unsigned char 
 19270 ;;  CCARetries      1   60[BANK0 ] unsigned char 
 19271 ;; Return value:  Size  Location     Type
 19272 ;;                  1    wreg      unsigned char 
 19273 ;; Registers used:
 19274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19275 ;; Tracked objects:
 19276 ;;		On entry : 0/0
 19277 ;;		On exit  : 0/0
 19278 ;;		Unchanged: 0/0
 19279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19280 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19281 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19282 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19283 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19284 ;;Total ram usage:       24 bytes
 19285 ;; Hardware stack levels used:    1
 19286 ;; Hardware stack levels required when called:   10
 19287 ;; This function calls:
 19288 ;;		_MiWi_TickGet
 19289 ;;		_RegisterRead
 19290 ;;		_RegisterSet
 19291 ;;		_SetRFMode
 19292 ;;		_WriteFIFO
 19293 ;; This function is called by:
 19294 ;;		_MiMAC_SendPacket
 19295 ;; This function uses a non-reentrant model
 19296 ;;
 19297                           
 19298                           	psect	text57
 19299  013E0A                     __ptext57:
 19300                           	opt stack 0
 19301  013E0A                     _TxPacket:
 19302                           	opt stack 16
 19303                           
 19304                           ;incstack = 0
 19305                           ;TxPacket@TxPacketLen stored from wreg
 19306  013E0A  0100               	movlb	0	; () banked
 19307  013E0C  6FA0               	movwf	TxPacket@TxPacketLen& (0+255),b
 19308                           
 19309                           ;drv_mrf_miwi_89xa.c: 297: bool status;
 19310                           ;drv_mrf_miwi_89xa.c: 298: uint8_t i;
 19311                           ;drv_mrf_miwi_89xa.c: 299: MIWI_TICK t1, t2;
 19312                           ;drv_mrf_miwi_89xa.c: 301: uint8_t CCARetries;
 19313                           ;drv_mrf_miwi_89xa.c: 302: uint8_t rssival;
 19314                           ;drv_mrf_miwi_89xa.c: 306: uint8_t reTry = 3;
 19315  013E0E  0E03               	movlw	3
 19316  013E10  0100               	movlb	0	; () banked
 19317  013E12  6F9D               	movwf	TxPacket@reTry& (0+255),b
 19318                           
 19319                           ;drv_mrf_miwi_89xa.c: 310: while( reTry-- )
 19320  013E14  D0BF               	goto	l11040
 19321  013E16                     l10972:
 19322                           
 19323                           ; BSR set to: 0
 19324                           ;drv_mrf_miwi_89xa.c: 312: {
 19325                           ;drv_mrf_miwi_89xa.c: 313: uint8_t allowedTxFailure;
 19326                           ;drv_mrf_miwi_89xa.c: 314: allowedTxFailure = 0;
 19327  013E16  0E00               	movlw	0
 19328  013E18  0100               	movlb	0	; () banked
 19329  013E1A  6F9E               	movwf	TxPacket@allowedTxFailure& (0+255),b
 19330  013E1C                     l258:
 19331                           
 19332                           ; BSR set to: 0
 19333                           ;drv_mrf_miwi_89xa.c: 319: hasAck = 0;
 19334  013E1C  0E00               	movlw	0
 19335  013E1E  6E47               	movwf	_hasAck,c	;volatile
 19336                           
 19337                           ;drv_mrf_miwi_89xa.c: 323: CCARetries = 0;
 19338  013E20  0E00               	movlw	0
 19339  013E22  0100               	movlb	0	; () banked
 19340  013E24  6F9C               	movwf	TxPacket@CCARetries& (0+255),b
 19341                           
 19342                           ; BSR set to: 0
 19343                           ;drv_mrf_miwi_89xa.c: 325: if( CCA )
 19344  013E26  0100               	movlb	0	; () banked
 19345  013E28  518B               	movf	TxPacket@CCA& (0+255),w,b
 19346  013E2A  0100               	movlb	0	; () banked
 19347  013E2C  B4D8               	btfsc	status,2,c
 19348  013E2E  D019               	goto	l259
 19349  013E30                     l10976:
 19350                           
 19351                           ; BSR set to: 0
 19352                           ;drv_mrf_miwi_89xa.c: 329: rssival = RegisterRead(0x2800>>8);
 19353  013E30  0E28               	movlw	40
 19354  013E32  EC0E  F0B3         	call	_RegisterRead
 19355  013E36  0100               	movlb	0	; () banked
 19356  013E38  6FA2               	movwf	TxPacket@rssival& (0+255),b
 19357                           
 19358                           ; BSR set to: 0
 19359                           ;drv_mrf_miwi_89xa.c: 330: rssival = (rssival>>1);
 19360  013E3A  0100               	movlb	0	; () banked
 19361  013E3C  90D8               	bcf	status,0,c
 19362  013E3E  31A2               	rrcf	TxPacket@rssival& (0+255),w,b
 19363  013E40  0100               	movlb	0	; () banked
 19364  013E42  6FA2               	movwf	TxPacket@rssival& (0+255),b
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;drv_mrf_miwi_89xa.c: 332: if( rssival > 65 )
 19368  013E44  0E41               	movlw	65
 19369  013E46  0100               	movlb	0	; () banked
 19370  013E48  65A2               	cpfsgt	TxPacket@rssival& (0+255),b
 19371  013E4A  D00B               	goto	l259
 19372                           
 19373                           ; BSR set to: 0
 19374                           ;drv_mrf_miwi_89xa.c: 333: {
 19375                           ;drv_mrf_miwi_89xa.c: 334: if(CCARetries++ > 4 )
 19376  013E4C  0100               	movlb	0	; () banked
 19377  013E4E  2B9C               	incf	TxPacket@CCARetries& (0+255),f,b
 19378  013E50  059C               	decf	TxPacket@CCARetries& (0+255),w,b
 19379  013E52  0100               	movlb	0	; () banked
 19380  013E54  6F8C               	movwf	??_TxPacket& (0+255),b
 19381  013E56  0E04               	movlw	4
 19382  013E58  0100               	movlb	0	; () banked
 19383  013E5A  658C               	cpfsgt	??_TxPacket& (0+255),b
 19384  013E5C  D7E9               	goto	l10976
 19385                           
 19386                           ; BSR set to: 0
 19387                           ;drv_mrf_miwi_89xa.c: 335: {
 19388                           ;drv_mrf_miwi_89xa.c: 336: return 0;
 19389  013E5E  0E00               	movlw	0
 19390                           
 19391                           ; BSR set to: 0
 19392  013E60  0012               	return	
 19393  013E62                     l259:
 19394                           
 19395                           ; BSR set to: 0
 19396                           ;drv_mrf_miwi_89xa.c: 340: }
 19397                           ;drv_mrf_miwi_89xa.c: 341: }
 19398                           ;drv_mrf_miwi_89xa.c: 346: INTCONbits.INT0IE = 0;
 19399  013E62  98F2               	bcf	intcon,4,c	;volatile
 19400                           
 19401                           ;drv_mrf_miwi_89xa.c: 348: INTCON3bits.INT1IE = 0;
 19402  013E64  96F0               	bcf	intcon3,3,c	;volatile
 19403                           
 19404                           ; BSR set to: 0
 19405                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x20);
 19406  013E66  0E20               	movlw	32
 19407  013E68  EC96  F0AF         	call	_SetRFMode
 19408                           
 19409                           ;drv_mrf_miwi_89xa.c: 350: RegisterSet(0x1A00 | (0xC8) | 0x01);
 19410  013E6C  0E1A               	movlw	26
 19411  013E6E  0100               	movlb	0	; () banked
 19412  013E70  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19413  013E72  0EC9               	movlw	201
 19414  013E74  6F83               	movwf	RegisterSet@setting& (0+255),b
 19415  013E76  ECB6  F0B3         	call	_RegisterSet	;wreg free
 19416                           
 19417                           ;drv_mrf_miwi_89xa.c: 351: WriteFIFO(TxPacketLen);
 19418  013E7A  0100               	movlb	0	; () banked
 19419  013E7C  51A0               	movf	TxPacket@TxPacketLen& (0+255),w,b
 19420  013E7E  ECFB  F0B3         	call	_WriteFIFO
 19421                           
 19422                           ;drv_mrf_miwi_89xa.c: 352: for(i=0; i< TxPacketLen; i++)
 19423  013E82  0E00               	movlw	0
 19424  013E84  0100               	movlb	0	; () banked
 19425  013E86  6FA1               	movwf	TxPacket@i& (0+255),b
 19426  013E88  D00E               	goto	l11000
 19427  013E8A                     l10996:
 19428                           
 19429                           ; BSR set to: 0
 19430                           ;drv_mrf_miwi_89xa.c: 353: {
 19431                           ;drv_mrf_miwi_89xa.c: 354: WriteFIFO(MACTxBuffer[i]);
 19432  013E8A  0100               	movlb	0	; () banked
 19433  013E8C  51A1               	movf	TxPacket@i& (0+255),w,b
 19434  013E8E  0D01               	mullw	1
 19435  013E90  0EA0               	movlw	low _MACTxBuffer
 19436  013E92  24F3               	addwf	prodl,w,c
 19437  013E94  6ED9               	movwf	fsr2l,c
 19438  013E96  0E02               	movlw	high _MACTxBuffer
 19439  013E98  20F4               	addwfc	prodh,w,c
 19440  013E9A  6EDA               	movwf	fsr2h,c
 19441  013E9C  50DF               	movf	indf2,w,c
 19442  013E9E  ECFB  F0B3         	call	_WriteFIFO
 19443  013EA2  0100               	movlb	0	; () banked
 19444  013EA4  2BA1               	incf	TxPacket@i& (0+255),f,b
 19445  013EA6                     l11000:
 19446                           
 19447                           ; BSR set to: 0
 19448  013EA6  0100               	movlb	0	; () banked
 19449  013EA8  51A0               	movf	TxPacket@TxPacketLen& (0+255),w,b
 19450  013EAA  0100               	movlb	0	; () banked
 19451  013EAC  5DA1               	subwf	TxPacket@i& (0+255),w,b
 19452  013EAE  A0D8               	btfss	status,0,c
 19453  013EB0  D7EC               	goto	l10996
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;drv_mrf_miwi_89xa.c: 355: }
 19457                           ;drv_mrf_miwi_89xa.c: 356: SetRFMode(0x80);
 19458                           
 19459                           ; BSR set to: 0
 19460  013EB2  0E80               	movlw	128
 19461  013EB4  EC96  F0AF         	call	_SetRFMode
 19462                           
 19463                           ;drv_mrf_miwi_89xa.c: 358: INTCONbits.INT0IE = 1;
 19464  013EB8  88F2               	bsf	intcon,4,c	;volatile
 19465                           
 19466                           ;drv_mrf_miwi_89xa.c: 360: INTCON3bits.INT1IE = 1;
 19467  013EBA  86F0               	bsf	intcon3,3,c	;volatile
 19468  013EBC                     l11008:
 19469  013EBC  5040               	movf	_IRQ1_Received,w,c	;volatile
 19470  013EBE  B4D8               	btfsc	status,2,c
 19471  013EC0  B0F0               	btfsc	intcon3,0,c	;volatile
 19472  013EC2  D001               	goto	l11012
 19473  013EC4  D7FB               	goto	l11008
 19474  013EC6                     l11012:
 19475                           
 19476                           ;drv_mrf_miwi_89xa.c: 364: };
 19477                           ;drv_mrf_miwi_89xa.c: 368: IRQ1_Received = 0;
 19478  013EC6  0E00               	movlw	0
 19479  013EC8  6E40               	movwf	_IRQ1_Received,c	;volatile
 19480                           
 19481                           ;drv_mrf_miwi_89xa.c: 369: SetRFMode(0x20);
 19482  013ECA  0E20               	movlw	32
 19483  013ECC  EC96  F0AF         	call	_SetRFMode
 19484                           
 19485                           ;drv_mrf_miwi_89xa.c: 370: SetRFMode(0x60);
 19486  013ED0  0E60               	movlw	96
 19487  013ED2  EC96  F0AF         	call	_SetRFMode
 19488                           
 19489                           ;drv_mrf_miwi_89xa.c: 373: if( (MACTxBuffer[0] & 0x20) > 0 )
 19490  013ED6  0102               	movlb	2	; () banked
 19491  013ED8  ABA0               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 19492  013EDA  D05A               	goto	l11038
 19493                           
 19494                           ; BSR set to: 2
 19495                           ;drv_mrf_miwi_89xa.c: 374: {
 19496                           ;drv_mrf_miwi_89xa.c: 375: TxMACSeq = MACTxBuffer[1];
 19497  013EDC  C2A1  F046         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 19498                           
 19499                           ; BSR set to: 2
 19500                           ;drv_mrf_miwi_89xa.c: 376: t1 = MiWi_TickGet();
 19501  013EE0  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 19502  013EE4  C081  F094         	movff	?_MiWi_TickGet,TxPacket@t1
 19503  013EE8  C082  F095         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 19504  013EEC  C083  F096         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 19505  013EF0  C084  F097         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 19506  013EF4                     l11024:
 19507                           
 19508                           ;drv_mrf_miwi_89xa.c: 378: {
 19509                           ;drv_mrf_miwi_89xa.c: 379: if( hasAck )
 19510  013EF4  5047               	movf	_hasAck,w,c	;volatile
 19511  013EF6  A4D8               	btfss	status,2,c
 19512  013EF8  D04B               	goto	l11038
 19513                           
 19514                           ;drv_mrf_miwi_89xa.c: 383: }
 19515                           ;drv_mrf_miwi_89xa.c: 384: t2 = MiWi_TickGet();
 19516                           
 19517                           ; BSR set to: 0
 19518                           
 19519                           ;drv_mrf_miwi_89xa.c: 382: goto TX_END_HERE;
 19520                           
 19521                           ;drv_mrf_miwi_89xa.c: 380: {
 19522                           ;drv_mrf_miwi_89xa.c: 381: status = 1;
 19523  013EFA  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 19524  013EFE  C081  F098         	movff	?_MiWi_TickGet,TxPacket@t2
 19525  013F02  C082  F099         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 19526  013F06  C083  F09A         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 19527  013F0A  C084  F09B         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 19528                           
 19529                           ;drv_mrf_miwi_89xa.c: 385: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 19530  013F0E  C094  F08C         	movff	TxPacket@t1,??_TxPacket
 19531  013F12  C095  F08D         	movff	TxPacket@t1+1,??_TxPacket+1
 19532  013F16  C096  F08E         	movff	TxPacket@t1+2,??_TxPacket+2
 19533  013F1A  C097  F08F         	movff	TxPacket@t1+3,??_TxPacket+3
 19534  013F1E  0100               	movlb	0	; () banked
 19535  013F20  1F8C               	comf	??_TxPacket& (0+255),f,b
 19536  013F22  1F8D               	comf	(??_TxPacket+1)& (0+255),f,b
 19537  013F24  1F8E               	comf	(??_TxPacket+2)& (0+255),f,b
 19538  013F26  1F8F               	comf	(??_TxPacket+3)& (0+255),f,b
 19539  013F28  2B8C               	incf	??_TxPacket& (0+255),f,b
 19540  013F2A  0E00               	movlw	0
 19541  013F2C  238D               	addwfc	(??_TxPacket+1)& (0+255),f,b
 19542  013F2E  238E               	addwfc	(??_TxPacket+2)& (0+255),f,b
 19543  013F30  238F               	addwfc	(??_TxPacket+3)& (0+255),f,b
 19544  013F32  0100               	movlb	0	; () banked
 19545  013F34  5198               	movf	TxPacket@t2& (0+255),w,b
 19546  013F36  0100               	movlb	0	; () banked
 19547  013F38  258C               	addwf	??_TxPacket& (0+255),w,b
 19548  013F3A  0100               	movlb	0	; () banked
 19549  013F3C  6F90               	movwf	(??_TxPacket+4)& (0+255),b
 19550  013F3E  0100               	movlb	0	; () banked
 19551  013F40  5199               	movf	(TxPacket@t2+1)& (0+255),w,b
 19552  013F42  0100               	movlb	0	; () banked
 19553  013F44  218D               	addwfc	(??_TxPacket+1)& (0+255),w,b
 19554  013F46  0100               	movlb	0	; () banked
 19555  013F48  6F91               	movwf	(??_TxPacket+5)& (0+255),b
 19556  013F4A  0100               	movlb	0	; () banked
 19557  013F4C  519A               	movf	(TxPacket@t2+2)& (0+255),w,b
 19558  013F4E  0100               	movlb	0	; () banked
 19559  013F50  218E               	addwfc	(??_TxPacket+2)& (0+255),w,b
 19560  013F52  0100               	movlb	0	; () banked
 19561  013F54  6F92               	movwf	(??_TxPacket+6)& (0+255),b
 19562  013F56  0100               	movlb	0	; () banked
 19563  013F58  519B               	movf	(TxPacket@t2+3)& (0+255),w,b
 19564  013F5A  0100               	movlb	0	; () banked
 19565  013F5C  218F               	addwfc	(??_TxPacket+3)& (0+255),w,b
 19566  013F5E  0100               	movlb	0	; () banked
 19567  013F60  6F93               	movwf	(??_TxPacket+7)& (0+255),b
 19568  013F62  0100               	movlb	0	; () banked
 19569  013F64  5193               	movf	(??_TxPacket+7)& (0+255),w,b
 19570  013F66  0100               	movlb	0	; () banked
 19571  013F68  1192               	iorwf	(??_TxPacket+6)& (0+255),w,b
 19572  013F6A  E108               	bnz	l11034
 19573  013F6C  0EA9               	movlw	169
 19574  013F6E  0100               	movlb	0	; () banked
 19575  013F70  5D90               	subwf	(??_TxPacket+4)& (0+255),w,b
 19576  013F72  0E61               	movlw	97
 19577  013F74  0100               	movlb	0	; () banked
 19578  013F76  5991               	subwfb	(??_TxPacket+5)& (0+255),w,b
 19579  013F78  A0D8               	btfss	status,0,c
 19580  013F7A  D7BC               	goto	l11024
 19581  013F7C                     l11034:
 19582                           
 19583                           ; BSR set to: 0
 19584                           ;drv_mrf_miwi_89xa.c: 388: }
 19585                           ;drv_mrf_miwi_89xa.c: 389: }
 19586                           ;drv_mrf_miwi_89xa.c: 391: if(allowedTxFailure++ <= 3)
 19587  013F7C  0100               	movlb	0	; () banked
 19588  013F7E  2B9E               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 19589  013F80  059E               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 19590  013F82  0100               	movlb	0	; () banked
 19591  013F84  6F8C               	movwf	??_TxPacket& (0+255),b
 19592  013F86  0E04               	movlw	4
 19593  013F88  0100               	movlb	0	; () banked
 19594  013F8A  618C               	cpfslt	??_TxPacket& (0+255),b
 19595  013F8C  D003               	goto	l11040
 19596  013F8E  D746               	goto	l258
 19597  013F90                     l11038:
 19598                           
 19599                           ;drv_mrf_miwi_89xa.c: 395: else
 19600                           ;drv_mrf_miwi_89xa.c: 397: {
 19601                           ;drv_mrf_miwi_89xa.c: 398: status = 1;
 19602  013F90  0E01               	movlw	1
 19603  013F92  D007               	goto	L11
 19604  013F94                     l11040:
 19605                           
 19606                           ; BSR set to: 0
 19607  013F94  0100               	movlb	0	; () banked
 19608  013F96  079D               	decf	TxPacket@reTry& (0+255),f,b
 19609  013F98  0100               	movlb	0	; () banked
 19610  013F9A  299D               	incf	TxPacket@reTry& (0+255),w,b
 19611  013F9C  A4D8               	btfss	status,2,c
 19612  013F9E  D73B               	goto	l10972
 19613                           
 19614                           ; BSR set to: 0
 19615                           ;drv_mrf_miwi_89xa.c: 400: }
 19616                           ;drv_mrf_miwi_89xa.c: 401: }
 19617                           ;drv_mrf_miwi_89xa.c: 403: status = 0;
 19618                           
 19619                           ; BSR set to: 0
 19620  013FA0  0E00               	movlw	0
 19621  013FA2                     L11:
 19622  013FA2  0100               	movlb	0	; () banked
 19623  013FA4  6F9F               	movwf	TxPacket@status& (0+255),b
 19624                           
 19625                           ; BSR set to: 0
 19626                           ;drv_mrf_miwi_89xa.c: 405: return status;
 19627                           
 19628                           ;drv_mrf_miwi_89xa.c: 404: TX_END_HERE:
 19629  013FA6  0100               	movlb	0	; () banked
 19630  013FA8  519F               	movf	TxPacket@status& (0+255),w,b
 19631  013FAA  0012               	return	
 19632  013FAC                     __end_of_TxPacket:
 19633                           	opt stack 0
 19634                           tblptru	equ	0xFF8
 19635                           tblptrh	equ	0xFF7
 19636                           tblptrl	equ	0xFF6
 19637                           tablat	equ	0xFF5
 19638                           prodh	equ	0xFF4
 19639                           prodl	equ	0xFF3
 19640                           intcon	equ	0xFF2
 19641                           intcon2	equ	0xFF1
 19642                           intcon3	equ	0xFF0
 19643                           indf0	equ	0xFEF
 19644                           postinc0	equ	0xFEE
 19645                           plusw0	equ	0xFEB
 19646                           fsr0h	equ	0xFEA
 19647                           fsr0l	equ	0xFE9
 19648                           wreg	equ	0xFE8
 19649                           indf1	equ	0xFE7
 19650                           postinc1	equ	0xFE6
 19651                           postdec1	equ	0xFE5
 19652                           fsr1h	equ	0xFE2
 19653                           fsr1l	equ	0xFE1
 19654                           indf2	equ	0xFDF
 19655                           postinc2	equ	0xFDE
 19656                           postdec2	equ	0xFDD
 19657                           plusw2	equ	0xFDB
 19658                           fsr2h	equ	0xFDA
 19659                           fsr2l	equ	0xFD9
 19660                           status	equ	0xFD8
 19661                           
 19662 ;; *************** function _WriteFIFO *****************
 19663 ;; Defined at:
 19664 ;;		line 251 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19665 ;; Parameters:    Size  Location     Type
 19666 ;;  Data            1    wreg     unsigned char 
 19667 ;; Auto vars:     Size  Location     Type
 19668 ;;  Data            1   35[BANK0 ] unsigned char 
 19669 ;;  IRQ0select      1   37[BANK0 ] unsigned char 
 19670 ;;  IRQ1select      1   36[BANK0 ] unsigned char 
 19671 ;; Return value:  Size  Location     Type
 19672 ;;		None               void
 19673 ;; Registers used:
 19674 ;;		wreg, status,2, cstack
 19675 ;; Tracked objects:
 19676 ;;		On entry : 0/0
 19677 ;;		On exit  : 0/0
 19678 ;;		Unchanged: 0/0
 19679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19681 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19683 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19684 ;;Total ram usage:        3 bytes
 19685 ;; Hardware stack levels used:    1
 19686 ;; Hardware stack levels required when called:    8
 19687 ;; This function calls:
 19688 ;;		_SPIPut
 19689 ;; This function is called by:
 19690 ;;		_TxPacket
 19691 ;; This function uses a non-reentrant model
 19692 ;;
 19693                           
 19694                           	psect	text58
 19695  0167F6                     __ptext58:
 19696                           	opt stack 0
 19697  0167F6                     _WriteFIFO:
 19698                           	opt stack 17
 19699                           
 19700                           ; BSR set to: 0
 19701                           ;incstack = 0
 19702                           ;WriteFIFO@Data stored from wreg
 19703  0167F6  0100               	movlb	0	; () banked
 19704  0167F8  6F83               	movwf	WriteFIFO@Data& (0+255),b
 19705                           
 19706                           ;drv_mrf_miwi_89xa.c: 253: uint8_t IRQ1select = INTCON3bits.INT1IE;
 19707  0167FA  0E00               	movlw	0
 19708  0167FC  B6F0               	btfsc	intcon3,3,c	;volatile
 19709  0167FE  0E01               	movlw	1
 19710  016800  0100               	movlb	0	; () banked
 19711  016802  6F84               	movwf	WriteFIFO@IRQ1select& (0+255),b
 19712                           
 19713                           ;drv_mrf_miwi_89xa.c: 255: bool IRQ0select = INTCONbits.INT0IE;
 19714  016804  0E00               	movlw	0
 19715  016806  B8F2               	btfsc	intcon,4,c	;volatile
 19716  016808  0E01               	movlw	1
 19717  01680A  0100               	movlb	0	; () banked
 19718  01680C  6F85               	movwf	WriteFIFO@IRQ0select& (0+255),b
 19719                           
 19720                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.INT0IE = 0;
 19721  01680E  98F2               	bcf	intcon,4,c	;volatile
 19722                           
 19723                           ;drv_mrf_miwi_89xa.c: 260: INTCON3bits.INT1IE = 0;
 19724  016810  96F0               	bcf	intcon3,3,c	;volatile
 19725                           
 19726                           ;drv_mrf_miwi_89xa.c: 261: LATCbits.LATC6 = 0;
 19727  016812  9C8B               	bcf	3979,6,c	;volatile
 19728                           
 19729                           ; BSR set to: 0
 19730                           ;drv_mrf_miwi_89xa.c: 262: SPIPut(Data);
 19731  016814  0100               	movlb	0	; () banked
 19732  016816  5183               	movf	WriteFIFO@Data& (0+255),w,b
 19733  016818  EC49  F0B5         	call	_SPIPut
 19734                           
 19735                           ;drv_mrf_miwi_89xa.c: 263: LATCbits.LATC6 = 1;
 19736  01681C  8C8B               	bsf	3979,6,c	;volatile
 19737                           
 19738                           ;drv_mrf_miwi_89xa.c: 264: INTCON3bits.INT1IE = IRQ1select;
 19739  01681E  0100               	movlb	0	; () banked
 19740  016820  B184               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 19741  016822  D002               	bra	u11965
 19742  016824  96F0               	bcf	intcon3,3,c	;volatile
 19743  016826  D001               	bra	u11966
 19744  016828                     u11965:
 19745  016828  86F0               	bsf	intcon3,3,c	;volatile
 19746  01682A                     u11966:
 19747                           
 19748                           ;drv_mrf_miwi_89xa.c: 267: INTCONbits.INT0IE = IRQ0select;
 19749  01682A  0100               	movlb	0	; () banked
 19750  01682C  B185               	btfsc	WriteFIFO@IRQ0select& (0+255),0,b
 19751  01682E  D002               	bra	u11975
 19752  016830  98F2               	bcf	intcon,4,c	;volatile
 19753  016832  D001               	bra	u11976
 19754  016834                     u11975:
 19755  016834  88F2               	bsf	intcon,4,c	;volatile
 19756  016836                     u11976:
 19757  016836  0012               	return		;funcret
 19758  016838                     __end_of_WriteFIFO:
 19759                           	opt stack 0
 19760                           tblptru	equ	0xFF8
 19761                           tblptrh	equ	0xFF7
 19762                           tblptrl	equ	0xFF6
 19763                           tablat	equ	0xFF5
 19764                           prodh	equ	0xFF4
 19765                           prodl	equ	0xFF3
 19766                           intcon	equ	0xFF2
 19767                           intcon2	equ	0xFF1
 19768                           intcon3	equ	0xFF0
 19769                           indf0	equ	0xFEF
 19770                           postinc0	equ	0xFEE
 19771                           plusw0	equ	0xFEB
 19772                           fsr0h	equ	0xFEA
 19773                           fsr0l	equ	0xFE9
 19774                           wreg	equ	0xFE8
 19775                           indf1	equ	0xFE7
 19776                           postinc1	equ	0xFE6
 19777                           postdec1	equ	0xFE5
 19778                           fsr1h	equ	0xFE2
 19779                           fsr1l	equ	0xFE1
 19780                           indf2	equ	0xFDF
 19781                           postinc2	equ	0xFDE
 19782                           postdec2	equ	0xFDD
 19783                           plusw2	equ	0xFDB
 19784                           fsr2h	equ	0xFDA
 19785                           fsr2l	equ	0xFD9
 19786                           status	equ	0xFD8
 19787                           
 19788 ;; *************** function _SetRFMode *****************
 19789 ;; Defined at:
 19790 ;;		line 674 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19791 ;; Parameters:    Size  Location     Type
 19792 ;;  mode            1    wreg     unsigned char 
 19793 ;; Auto vars:     Size  Location     Type
 19794 ;;  mode            1   39[BANK0 ] unsigned char 
 19795 ;; Return value:  Size  Location     Type
 19796 ;;		None               void
 19797 ;; Registers used:
 19798 ;;		wreg, status,2, status,0, cstack
 19799 ;; Tracked objects:
 19800 ;;		On entry : 0/0
 19801 ;;		On exit  : 0/0
 19802 ;;		Unchanged: 0/0
 19803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19805 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19807 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19808 ;;Total ram usage:        1 bytes
 19809 ;; Hardware stack levels used:    1
 19810 ;; Hardware stack levels required when called:    9
 19811 ;; This function calls:
 19812 ;;		_RegisterSet
 19813 ;; This function is called by:
 19814 ;;		_TxPacket
 19815 ;;		_MiMAC_SetChannel
 19816 ;;		_MiMAC_Init
 19817 ;;		_MiMAC_PowerState
 19818 ;; This function uses a non-reentrant model
 19819 ;;
 19820                           
 19821                           	psect	text59
 19822  015F2C                     __ptext59:
 19823                           	opt stack 0
 19824  015F2C                     _SetRFMode:
 19825                           	opt stack 16
 19826                           
 19827                           ;incstack = 0
 19828                           ;SetRFMode@mode stored from wreg
 19829  015F2C  0100               	movlb	0	; () banked
 19830  015F2E  6F87               	movwf	SetRFMode@mode& (0+255),b
 19831                           
 19832                           ;drv_mrf_miwi_89xa.c: 676: switch (mode) {
 19833  015F30  D032               	goto	l10892
 19834  015F32                     l10870:
 19835                           
 19836                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 19837  015F32  0E00               	movlw	0
 19838  015F34  0100               	movlb	0	; () banked
 19839  015F36  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19840  015F38  0E96               	movlw	150
 19841  015F3A  6F83               	movwf	RegisterSet@setting& (0+255),b
 19842  015F3C  ECB6  F0B3         	call	_RegisterSet	;wreg free
 19843                           
 19844                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x80;
 19845  015F40  0E80               	movlw	128
 19846  015F42  6E43               	movwf	_RF_Mode,c
 19847                           
 19848                           ;drv_mrf_miwi_89xa.c: 680: break;
 19849  015F44  0012               	return	
 19850  015F46                     l10874:
 19851                           
 19852                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 19853  015F46  0E00               	movlw	0
 19854  015F48  0100               	movlb	0	; () banked
 19855  015F4A  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19856  015F4C  0E76               	movlw	118
 19857  015F4E  6F83               	movwf	RegisterSet@setting& (0+255),b
 19858  015F50  ECB6  F0B3         	call	_RegisterSet	;wreg free
 19859                           
 19860                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x60;
 19861  015F54  0E60               	movlw	96
 19862  015F56  6E43               	movwf	_RF_Mode,c
 19863                           
 19864                           ;drv_mrf_miwi_89xa.c: 684: break;
 19865  015F58  0012               	return	
 19866  015F5A                     l10878:
 19867                           
 19868                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 19869  015F5A  0E00               	movlw	0
 19870  015F5C  0100               	movlb	0	; () banked
 19871  015F5E  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19872  015F60  0E56               	movlw	86
 19873  015F62  6F83               	movwf	RegisterSet@setting& (0+255),b
 19874  015F64  ECB6  F0B3         	call	_RegisterSet	;wreg free
 19875                           
 19876                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x40;
 19877  015F68  0E40               	movlw	64
 19878  015F6A  6E43               	movwf	_RF_Mode,c
 19879                           
 19880                           ;drv_mrf_miwi_89xa.c: 688: break;
 19881  015F6C  0012               	return	
 19882  015F6E                     l10882:
 19883                           
 19884                           ;drv_mrf_miwi_89xa.c: 690: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 19885  015F6E  0E00               	movlw	0
 19886  015F70  0100               	movlb	0	; () banked
 19887  015F72  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19888  015F74  0E36               	movlw	54
 19889  015F76  6F83               	movwf	RegisterSet@setting& (0+255),b
 19890  015F78  ECB6  F0B3         	call	_RegisterSet	;wreg free
 19891                           
 19892                           ;drv_mrf_miwi_89xa.c: 691: RF_Mode = 0x20;
 19893  015F7C  0E20               	movlw	32
 19894  015F7E  6E43               	movwf	_RF_Mode,c
 19895                           
 19896                           ;drv_mrf_miwi_89xa.c: 692: break;
 19897  015F80  0012               	return	
 19898  015F82                     l10886:
 19899                           
 19900                           ;drv_mrf_miwi_89xa.c: 694: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 19901  015F82  0E00               	movlw	0
 19902  015F84  0100               	movlb	0	; () banked
 19903  015F86  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19904  015F88  0E16               	movlw	22
 19905  015F8A  6F83               	movwf	RegisterSet@setting& (0+255),b
 19906  015F8C  ECB6  F0B3         	call	_RegisterSet	;wreg free
 19907                           
 19908                           ;drv_mrf_miwi_89xa.c: 695: RF_Mode = 0x00;
 19909  015F90  0E00               	movlw	0
 19910  015F92  6E43               	movwf	_RF_Mode,c
 19911                           
 19912                           ;drv_mrf_miwi_89xa.c: 697: }
 19913                           
 19914                           ;drv_mrf_miwi_89xa.c: 696: break;
 19915  015F94  0012               	return	
 19916  015F96                     l10892:
 19917  015F96  0100               	movlb	0	; () banked
 19918  015F98  5187               	movf	SetRFMode@mode& (0+255),w,b
 19919                           
 19920                           ; Switch size 1, requested type "space"
 19921                           ; Number of cases is 5, Range of values is 0 to 128
 19922                           ; switch strategies available:
 19923                           ; Name         Instructions Cycles
 19924                           ; simple_byte           16     9 (average)
 19925                           ;	Chosen strategy is simple_byte
 19926  015F9A  0A00               	xorlw	0	; case 0
 19927  015F9C  B4D8               	btfsc	status,2,c
 19928  015F9E  D7F1               	goto	l10886
 19929  015FA0  0A20               	xorlw	32	; case 32
 19930  015FA2  B4D8               	btfsc	status,2,c
 19931  015FA4  D7E4               	goto	l10882
 19932  015FA6  0A60               	xorlw	96	; case 64
 19933  015FA8  B4D8               	btfsc	status,2,c
 19934  015FAA  D7D7               	goto	l10878
 19935  015FAC  0A20               	xorlw	32	; case 96
 19936  015FAE  B4D8               	btfsc	status,2,c
 19937  015FB0  D7CA               	goto	l10874
 19938  015FB2  0AE0               	xorlw	224	; case 128
 19939  015FB4  A4D8               	btfss	status,2,c
 19940  015FB6  0012               	return	
 19941  015FB8  D7BC               	goto	l10870
 19942  015FBA                     __end_of_SetRFMode:
 19943                           	opt stack 0
 19944                           tblptru	equ	0xFF8
 19945                           tblptrh	equ	0xFF7
 19946                           tblptrl	equ	0xFF6
 19947                           tablat	equ	0xFF5
 19948                           prodh	equ	0xFF4
 19949                           prodl	equ	0xFF3
 19950                           intcon	equ	0xFF2
 19951                           intcon2	equ	0xFF1
 19952                           intcon3	equ	0xFF0
 19953                           indf0	equ	0xFEF
 19954                           postinc0	equ	0xFEE
 19955                           plusw0	equ	0xFEB
 19956                           fsr0h	equ	0xFEA
 19957                           fsr0l	equ	0xFE9
 19958                           wreg	equ	0xFE8
 19959                           indf1	equ	0xFE7
 19960                           postinc1	equ	0xFE6
 19961                           postdec1	equ	0xFE5
 19962                           fsr1h	equ	0xFE2
 19963                           fsr1l	equ	0xFE1
 19964                           indf2	equ	0xFDF
 19965                           postinc2	equ	0xFDE
 19966                           postdec2	equ	0xFDD
 19967                           plusw2	equ	0xFDB
 19968                           fsr2h	equ	0xFDA
 19969                           fsr2l	equ	0xFD9
 19970                           status	equ	0xFD8
 19971                           
 19972 ;; *************** function _RegisterSet *****************
 19973 ;; Defined at:
 19974 ;;		line 171 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19975 ;; Parameters:    Size  Location     Type
 19976 ;;  setting         2   35[BANK0 ] unsigned int 
 19977 ;; Auto vars:     Size  Location     Type
 19978 ;;  IRQ0select      1   38[BANK0 ] unsigned char 
 19979 ;;  IRQ1select      1   37[BANK0 ] unsigned char 
 19980 ;; Return value:  Size  Location     Type
 19981 ;;		None               void
 19982 ;; Registers used:
 19983 ;;		wreg, status,2, cstack
 19984 ;; Tracked objects:
 19985 ;;		On entry : 0/0
 19986 ;;		On exit  : 0/0
 19987 ;;		Unchanged: 0/0
 19988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19992 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19993 ;;Total ram usage:        4 bytes
 19994 ;; Hardware stack levels used:    1
 19995 ;; Hardware stack levels required when called:    8
 19996 ;; This function calls:
 19997 ;;		_SPIPut
 19998 ;; This function is called by:
 19999 ;;		_TxPacket
 20000 ;;		_MiMAC_SetChannel
 20001 ;;		_MiMAC_SetPower
 20002 ;;		_MiMAC_Init
 20003 ;;		_SetRFMode
 20004 ;; This function uses a non-reentrant model
 20005 ;;
 20006                           
 20007                           	psect	text60
 20008  01676C                     __ptext60:
 20009                           	opt stack 0
 20010  01676C                     _RegisterSet:
 20011                           	opt stack 16
 20012                           
 20013                           ;drv_mrf_miwi_89xa.c: 173: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20014                           
 20015                           ;incstack = 0
 20016  01676C  0E00               	movlw	0
 20017  01676E  B6F0               	btfsc	intcon3,3,c	;volatile
 20018  016770  0E01               	movlw	1
 20019  016772  0100               	movlb	0	; () banked
 20020  016774  6F85               	movwf	RegisterSet@IRQ1select& (0+255),b
 20021                           
 20022                           ;drv_mrf_miwi_89xa.c: 175: bool IRQ0select = INTCONbits.INT0IE;
 20023  016776  0E00               	movlw	0
 20024  016778  B8F2               	btfsc	intcon,4,c	;volatile
 20025  01677A  0E01               	movlw	1
 20026  01677C  0100               	movlb	0	; () banked
 20027  01677E  6F86               	movwf	RegisterSet@IRQ0select& (0+255),b
 20028                           
 20029                           ; BSR set to: 0
 20030                           ;drv_mrf_miwi_89xa.c: 176: INTCONbits.INT0IE = 0;
 20031  016780  98F2               	bcf	intcon,4,c	;volatile
 20032                           
 20033                           ; BSR set to: 0
 20034                           ;drv_mrf_miwi_89xa.c: 179: INTCON3bits.INT1IE = 0;
 20035  016782  96F0               	bcf	intcon3,3,c	;volatile
 20036                           
 20037                           ; BSR set to: 0
 20038                           ;drv_mrf_miwi_89xa.c: 180: LATBbits.LATB3 = 0;
 20039  016784  968A               	bcf	3978,3,c	;volatile
 20040                           
 20041                           ; BSR set to: 0
 20042                           ;drv_mrf_miwi_89xa.c: 181: SPIPut((uint8_t)(setting >> 8));
 20043  016786  0100               	movlb	0	; () banked
 20044  016788  5184               	movf	(RegisterSet@setting+1)& (0+255),w,b
 20045  01678A  EC49  F0B5         	call	_SPIPut
 20046                           
 20047                           ;drv_mrf_miwi_89xa.c: 182: SPIPut((uint8_t)setting);
 20048  01678E  0100               	movlb	0	; () banked
 20049  016790  5183               	movf	RegisterSet@setting& (0+255),w,b
 20050  016792  EC49  F0B5         	call	_SPIPut
 20051                           
 20052                           ;drv_mrf_miwi_89xa.c: 183: LATBbits.LATB3 = 1;
 20053  016796  868A               	bsf	3978,3,c	;volatile
 20054                           
 20055                           ;drv_mrf_miwi_89xa.c: 184: INTCON3bits.INT1IE = IRQ1select;
 20056  016798  0100               	movlb	0	; () banked
 20057  01679A  B185               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 20058  01679C  D002               	bra	u11775
 20059  01679E  96F0               	bcf	intcon3,3,c	;volatile
 20060  0167A0  D001               	bra	u11776
 20061  0167A2                     u11775:
 20062  0167A2  86F0               	bsf	intcon3,3,c	;volatile
 20063  0167A4                     u11776:
 20064                           
 20065                           ;drv_mrf_miwi_89xa.c: 187: INTCONbits.INT0IE = IRQ0select;
 20066  0167A4  0100               	movlb	0	; () banked
 20067  0167A6  B186               	btfsc	RegisterSet@IRQ0select& (0+255),0,b
 20068  0167A8  D002               	bra	u11785
 20069  0167AA  98F2               	bcf	intcon,4,c	;volatile
 20070  0167AC  D001               	bra	u11786
 20071  0167AE                     u11785:
 20072  0167AE  88F2               	bsf	intcon,4,c	;volatile
 20073  0167B0                     u11786:
 20074  0167B0  0012               	return		;funcret
 20075  0167B2                     __end_of_RegisterSet:
 20076                           	opt stack 0
 20077                           tblptru	equ	0xFF8
 20078                           tblptrh	equ	0xFF7
 20079                           tblptrl	equ	0xFF6
 20080                           tablat	equ	0xFF5
 20081                           prodh	equ	0xFF4
 20082                           prodl	equ	0xFF3
 20083                           intcon	equ	0xFF2
 20084                           intcon2	equ	0xFF1
 20085                           intcon3	equ	0xFF0
 20086                           indf0	equ	0xFEF
 20087                           postinc0	equ	0xFEE
 20088                           plusw0	equ	0xFEB
 20089                           fsr0h	equ	0xFEA
 20090                           fsr0l	equ	0xFE9
 20091                           wreg	equ	0xFE8
 20092                           indf1	equ	0xFE7
 20093                           postinc1	equ	0xFE6
 20094                           postdec1	equ	0xFE5
 20095                           fsr1h	equ	0xFE2
 20096                           fsr1l	equ	0xFE1
 20097                           indf2	equ	0xFDF
 20098                           postinc2	equ	0xFDE
 20099                           postdec2	equ	0xFDD
 20100                           plusw2	equ	0xFDB
 20101                           fsr2h	equ	0xFDA
 20102                           fsr2l	equ	0xFD9
 20103                           status	equ	0xFD8
 20104                           
 20105 ;; *************** function _RegisterRead *****************
 20106 ;; Defined at:
 20107 ;;		line 207 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20108 ;; Parameters:    Size  Location     Type
 20109 ;;  address         1    wreg     unsigned char 
 20110 ;; Auto vars:     Size  Location     Type
 20111 ;;  address         1   38[BANK0 ] unsigned char 
 20112 ;;  IRQ0select      1   37[BANK0 ] unsigned char 
 20113 ;;  IRQ1select      1   36[BANK0 ] unsigned char 
 20114 ;;  value           1   35[BANK0 ] unsigned char 
 20115 ;; Return value:  Size  Location     Type
 20116 ;;                  1    wreg      unsigned char 
 20117 ;; Registers used:
 20118 ;;		wreg, status,2, status,0, cstack
 20119 ;; Tracked objects:
 20120 ;;		On entry : 0/0
 20121 ;;		On exit  : 0/0
 20122 ;;		Unchanged: 0/0
 20123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20125 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20127 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20128 ;;Total ram usage:        4 bytes
 20129 ;; Hardware stack levels used:    1
 20130 ;; Hardware stack levels required when called:    9
 20131 ;; This function calls:
 20132 ;;		_SPIGet
 20133 ;;		_SPIPut
 20134 ;; This function is called by:
 20135 ;;		_TxPacket
 20136 ;;		_getReceiverBW
 20137 ;; This function uses a non-reentrant model
 20138 ;;
 20139                           
 20140                           	psect	text61
 20141  01661C                     __ptext61:
 20142                           	opt stack 0
 20143  01661C                     _RegisterRead:
 20144                           	opt stack 16
 20145                           
 20146                           ;incstack = 0
 20147                           ;RegisterRead@address stored from wreg
 20148  01661C  0100               	movlb	0	; () banked
 20149  01661E  6F86               	movwf	RegisterRead@address& (0+255),b
 20150                           
 20151                           ;drv_mrf_miwi_89xa.c: 209: uint8_t value;
 20152                           ;drv_mrf_miwi_89xa.c: 210: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20153  016620  0E00               	movlw	0
 20154  016622  B6F0               	btfsc	intcon3,3,c	;volatile
 20155  016624  0E01               	movlw	1
 20156  016626  0100               	movlb	0	; () banked
 20157  016628  6F84               	movwf	RegisterRead@IRQ1select& (0+255),b
 20158                           
 20159                           ;drv_mrf_miwi_89xa.c: 212: bool IRQ0select = INTCONbits.INT0IE;
 20160  01662A  0E00               	movlw	0
 20161  01662C  B8F2               	btfsc	intcon,4,c	;volatile
 20162  01662E  0E01               	movlw	1
 20163  016630  0100               	movlb	0	; () banked
 20164  016632  6F85               	movwf	RegisterRead@IRQ0select& (0+255),b
 20165                           
 20166                           ;drv_mrf_miwi_89xa.c: 214: INTCONbits.INT0IE = 0;
 20167  016634  98F2               	bcf	intcon,4,c	;volatile
 20168                           
 20169                           ;drv_mrf_miwi_89xa.c: 217: INTCON3bits.INT1IE = 0;
 20170  016636  96F0               	bcf	intcon3,3,c	;volatile
 20171                           
 20172                           ;drv_mrf_miwi_89xa.c: 218: LATBbits.LATB3 = 0;
 20173  016638  968A               	bcf	3978,3,c	;volatile
 20174                           
 20175                           ; BSR set to: 0
 20176                           ;drv_mrf_miwi_89xa.c: 219: address = (address|0x40);
 20177  01663A  0100               	movlb	0	; () banked
 20178  01663C  5186               	movf	RegisterRead@address& (0+255),w,b
 20179  01663E  0940               	iorlw	64
 20180  016640  0100               	movlb	0	; () banked
 20181  016642  6F86               	movwf	RegisterRead@address& (0+255),b
 20182                           
 20183                           ; BSR set to: 0
 20184                           ;drv_mrf_miwi_89xa.c: 220: SPIPut(address);
 20185  016644  0100               	movlb	0	; () banked
 20186  016646  5186               	movf	RegisterRead@address& (0+255),w,b
 20187  016648  EC49  F0B5         	call	_SPIPut
 20188                           
 20189                           ;drv_mrf_miwi_89xa.c: 221: value = SPIGet();
 20190  01664C  EC8E  F0B5         	call	_SPIGet	;wreg free
 20191  016650  0100               	movlb	0	; () banked
 20192  016652  6F83               	movwf	RegisterRead@value& (0+255),b
 20193                           
 20194                           ; BSR set to: 0
 20195                           ;drv_mrf_miwi_89xa.c: 222: LATBbits.LATB3 = 1;
 20196  016654  868A               	bsf	3978,3,c	;volatile
 20197                           
 20198                           ; BSR set to: 0
 20199                           ;drv_mrf_miwi_89xa.c: 223: INTCON3bits.INT1IE = IRQ1select;
 20200  016656  0100               	movlb	0	; () banked
 20201  016658  B184               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 20202  01665A  D002               	bra	u11945
 20203  01665C  96F0               	bcf	intcon3,3,c	;volatile
 20204  01665E  D001               	bra	u11946
 20205  016660                     u11945:
 20206  016660  86F0               	bsf	intcon3,3,c	;volatile
 20207  016662                     u11946:
 20208                           
 20209                           ;drv_mrf_miwi_89xa.c: 226: INTCONbits.INT0IE = IRQ0select;
 20210  016662  0100               	movlb	0	; () banked
 20211  016664  B185               	btfsc	RegisterRead@IRQ0select& (0+255),0,b
 20212  016666  D002               	bra	u11955
 20213  016668  98F2               	bcf	intcon,4,c	;volatile
 20214  01666A  D001               	bra	u11956
 20215  01666C                     u11955:
 20216  01666C  88F2               	bsf	intcon,4,c	;volatile
 20217  01666E                     u11956:
 20218                           
 20219                           ;drv_mrf_miwi_89xa.c: 229: return value;
 20220  01666E  0100               	movlb	0	; () banked
 20221  016670  5183               	movf	RegisterRead@value& (0+255),w,b
 20222  016672  0012               	return	
 20223  016674                     __end_of_RegisterRead:
 20224                           	opt stack 0
 20225                           tblptru	equ	0xFF8
 20226                           tblptrh	equ	0xFF7
 20227                           tblptrl	equ	0xFF6
 20228                           tablat	equ	0xFF5
 20229                           prodh	equ	0xFF4
 20230                           prodl	equ	0xFF3
 20231                           intcon	equ	0xFF2
 20232                           intcon2	equ	0xFF1
 20233                           intcon3	equ	0xFF0
 20234                           indf0	equ	0xFEF
 20235                           postinc0	equ	0xFEE
 20236                           plusw0	equ	0xFEB
 20237                           fsr0h	equ	0xFEA
 20238                           fsr0l	equ	0xFE9
 20239                           wreg	equ	0xFE8
 20240                           indf1	equ	0xFE7
 20241                           postinc1	equ	0xFE6
 20242                           postdec1	equ	0xFE5
 20243                           fsr1h	equ	0xFE2
 20244                           fsr1l	equ	0xFE1
 20245                           indf2	equ	0xFDF
 20246                           postinc2	equ	0xFDE
 20247                           postdec2	equ	0xFDD
 20248                           plusw2	equ	0xFDB
 20249                           fsr2h	equ	0xFDA
 20250                           fsr2l	equ	0xFD9
 20251                           status	equ	0xFD8
 20252                           
 20253 ;; *************** function _SPIGet *****************
 20254 ;; Defined at:
 20255 ;;		line 104 in file "src/18F27J53/spi.c"
 20256 ;; Parameters:    Size  Location     Type
 20257 ;;		None
 20258 ;; Auto vars:     Size  Location     Type
 20259 ;;		None
 20260 ;; Return value:  Size  Location     Type
 20261 ;;                  1    wreg      unsigned char 
 20262 ;; Registers used:
 20263 ;;		wreg, status,2, cstack
 20264 ;; Tracked objects:
 20265 ;;		On entry : 0/0
 20266 ;;		On exit  : 0/0
 20267 ;;		Unchanged: 0/0
 20268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20273 ;;Total ram usage:        0 bytes
 20274 ;; Hardware stack levels used:    1
 20275 ;; Hardware stack levels required when called:    8
 20276 ;; This function calls:
 20277 ;;		_SPIPut
 20278 ;; This function is called by:
 20279 ;;		_RegisterRead
 20280 ;; This function uses a non-reentrant model
 20281 ;;
 20282                           
 20283                           	psect	text62
 20284  016B1C                     __ptext62:
 20285                           	opt stack 0
 20286  016B1C                     _SPIGet:
 20287                           	opt stack 16
 20288                           
 20289                           ;spi.c: 128: SPIPut(0x00);
 20290                           
 20291                           ; BSR set to: 0
 20292                           ;incstack = 0
 20293  016B1C  0E00               	movlw	0
 20294  016B1E  EC49  F0B5         	call	_SPIPut
 20295                           
 20296                           ;spi.c: 129: return SSP2BUF;
 20297  016B22  5075               	movf	3957,w,c	;volatile
 20298  016B24  0012               	return	
 20299  016B26                     __end_of_SPIGet:
 20300                           	opt stack 0
 20301                           tblptru	equ	0xFF8
 20302                           tblptrh	equ	0xFF7
 20303                           tblptrl	equ	0xFF6
 20304                           tablat	equ	0xFF5
 20305                           prodh	equ	0xFF4
 20306                           prodl	equ	0xFF3
 20307                           intcon	equ	0xFF2
 20308                           intcon2	equ	0xFF1
 20309                           intcon3	equ	0xFF0
 20310                           indf0	equ	0xFEF
 20311                           postinc0	equ	0xFEE
 20312                           plusw0	equ	0xFEB
 20313                           fsr0h	equ	0xFEA
 20314                           fsr0l	equ	0xFE9
 20315                           wreg	equ	0xFE8
 20316                           indf1	equ	0xFE7
 20317                           postinc1	equ	0xFE6
 20318                           postdec1	equ	0xFE5
 20319                           fsr1h	equ	0xFE2
 20320                           fsr1l	equ	0xFE1
 20321                           indf2	equ	0xFDF
 20322                           postinc2	equ	0xFDE
 20323                           postdec2	equ	0xFDD
 20324                           plusw2	equ	0xFDB
 20325                           fsr2h	equ	0xFDA
 20326                           fsr2l	equ	0xFD9
 20327                           status	equ	0xFD8
 20328                           
 20329 ;; *************** function _SPIPut *****************
 20330 ;; Defined at:
 20331 ;;		line 45 in file "src/18F27J53/spi.c"
 20332 ;; Parameters:    Size  Location     Type
 20333 ;;  v               1    wreg     unsigned char 
 20334 ;; Auto vars:     Size  Location     Type
 20335 ;;  v               1   34[BANK0 ] unsigned char 
 20336 ;;  i               1   33[BANK0 ] unsigned char 
 20337 ;; Return value:  Size  Location     Type
 20338 ;;		None               void
 20339 ;; Registers used:
 20340 ;;		wreg
 20341 ;; Tracked objects:
 20342 ;;		On entry : 0/0
 20343 ;;		On exit  : 0/0
 20344 ;;		Unchanged: 0/0
 20345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20350 ;;Total ram usage:        2 bytes
 20351 ;; Hardware stack levels used:    1
 20352 ;; Hardware stack levels required when called:    7
 20353 ;; This function calls:
 20354 ;;		Nothing
 20355 ;; This function is called by:
 20356 ;;		_SPIGet
 20357 ;;		_RegisterSet
 20358 ;;		_RegisterRead
 20359 ;;		_WriteFIFO
 20360 ;; This function uses a non-reentrant model
 20361 ;;
 20362                           
 20363                           	psect	text63
 20364  016A92                     __ptext63:
 20365                           	opt stack 0
 20366  016A92                     _SPIPut:
 20367                           	opt stack 17
 20368                           
 20369                           ;incstack = 0
 20370                           ;SPIPut@v stored from wreg
 20371  016A92  0100               	movlb	0	; () banked
 20372  016A94  6F82               	movwf	SPIPut@v& (0+255),b
 20373                           
 20374                           ;spi.c: 66: {
 20375                           ;spi.c: 68: uint8_t i;
 20376                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 20377  016A96  9EA4               	bcf	4004,7,c	;volatile
 20378                           
 20379                           ;spi.c: 72: i = SSP2BUF;
 20380  016A98  CF75 F081          	movff	3957,SPIPut@i	;volatile
 20381  016A9C                     l29:
 20382                           
 20383                           ;spi.c: 75: {
 20384                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 20385  016A9C  9E72               	bcf	3954,7,c	;volatile
 20386                           
 20387                           ;spi.c: 77: SSP2BUF = v;
 20388  016A9E  C082  FF75         	movff	SPIPut@v,3957	;volatile
 20389                           
 20390                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 20391  016AA2  BE72               	btfsc	3954,7,c	;volatile
 20392  016AA4  D7FB               	goto	l29
 20393  016AA6                     l31:
 20394  016AA6  AEA4               	btfss	4004,7,c	;volatile
 20395  016AA8  D7FE               	goto	l31
 20396                           
 20397                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 20398  016AAA  9EA4               	bcf	4004,7,c	;volatile
 20399  016AAC  0012               	return		;funcret
 20400  016AAE                     __end_of_SPIPut:
 20401                           	opt stack 0
 20402                           tblptru	equ	0xFF8
 20403                           tblptrh	equ	0xFF7
 20404                           tblptrl	equ	0xFF6
 20405                           tablat	equ	0xFF5
 20406                           prodh	equ	0xFF4
 20407                           prodl	equ	0xFF3
 20408                           intcon	equ	0xFF2
 20409                           intcon2	equ	0xFF1
 20410                           intcon3	equ	0xFF0
 20411                           indf0	equ	0xFEF
 20412                           postinc0	equ	0xFEE
 20413                           plusw0	equ	0xFEB
 20414                           fsr0h	equ	0xFEA
 20415                           fsr0l	equ	0xFE9
 20416                           wreg	equ	0xFE8
 20417                           indf1	equ	0xFE7
 20418                           postinc1	equ	0xFE6
 20419                           postdec1	equ	0xFE5
 20420                           fsr1h	equ	0xFE2
 20421                           fsr1l	equ	0xFE1
 20422                           indf2	equ	0xFDF
 20423                           postinc2	equ	0xFDE
 20424                           postdec2	equ	0xFDD
 20425                           plusw2	equ	0xFDB
 20426                           fsr2h	equ	0xFDA
 20427                           fsr2l	equ	0xFD9
 20428                           status	equ	0xFD8
 20429                           
 20430 ;; *************** function _CCM_Enc *****************
 20431 ;; Defined at:
 20432 ;;		line 240 in file "src/miwi/drv_mrf_miwi_security.c"
 20433 ;; Parameters:    Size  Location     Type
 20434 ;;  text            2   69[BANK0 ] PTR unsigned char 
 20435 ;;		 -> MACTxBuffer(64), 
 20436 ;;  headerLen       1   71[BANK0 ] unsigned char 
 20437 ;;  payloadLen      1   72[BANK0 ] unsigned char 
 20438 ;;  key             2   73[BANK0 ] PTR unsigned char 
 20439 ;;		 -> key(8), 
 20440 ;; Auto vars:     Size  Location     Type
 20441 ;;  i               1   79[BANK0 ] unsigned char 
 20442 ;; Return value:  Size  Location     Type
 20443 ;;		None               void
 20444 ;; Registers used:
 20445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20446 ;; Tracked objects:
 20447 ;;		On entry : 0/0
 20448 ;;		On exit  : 0/0
 20449 ;;		Unchanged: 0/0
 20450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20451 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20452 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20454 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20455 ;;Total ram usage:       11 bytes
 20456 ;; Hardware stack levels used:    1
 20457 ;; Hardware stack levels required when called:    9
 20458 ;; This function calls:
 20459 ;;		_CBC_MAC
 20460 ;;		_CTR
 20461 ;; This function is called by:
 20462 ;;		_MiMAC_SendPacket
 20463 ;; This function uses a non-reentrant model
 20464 ;;
 20465                           
 20466                           	psect	text64
 20467  014BF6                     __ptext64:
 20468                           	opt stack 0
 20469  014BF6                     _CCM_Enc:
 20470                           	opt stack 17
 20471                           
 20472                           ;drv_mrf_miwi_security.c: 245: uint8_t i;
 20473                           ;drv_mrf_miwi_security.c: 252: CBC_MAC(text, (headerLen + payloadLen), key, tmpBlock);
 20474                           
 20475                           ;incstack = 0
 20476  014BF6  C0A5  F098         	movff	CCM_Enc@text,CBC_MAC@text
 20477  014BFA  C0A6  F099         	movff	CCM_Enc@text+1,CBC_MAC@text+1
 20478  014BFE  0100               	movlb	0	; () banked
 20479  014C00  51A7               	movf	CCM_Enc@headerLen& (0+255),w,b
 20480  014C02  0100               	movlb	0	; () banked
 20481  014C04  25A8               	addwf	CCM_Enc@payloadLen& (0+255),w,b
 20482  014C06  0100               	movlb	0	; () banked
 20483  014C08  6F9A               	movwf	CBC_MAC@len& (0+255),b
 20484  014C0A  C0A9  F09B         	movff	CCM_Enc@key,CBC_MAC@key
 20485  014C0E  C0AA  F09C         	movff	CCM_Enc@key+1,CBC_MAC@key+1
 20486  014C12  0ECC               	movlw	low _tmpBlock
 20487  014C14  0100               	movlb	0	; () banked
 20488  014C16  6F9D               	movwf	CBC_MAC@MIC& (0+255),b
 20489  014C18  0E01               	movlw	high _tmpBlock
 20490  014C1A  0100               	movlb	0	; () banked
 20491  014C1C  6F9E               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 20492  014C1E  EC5B  F0A9         	call	_CBC_MAC	;wreg free
 20493                           
 20494                           ;drv_mrf_miwi_security.c: 254: for(i = 0; i < 4; i++)
 20495  014C22  0E00               	movlw	0
 20496  014C24  0100               	movlb	0	; () banked
 20497  014C26  6FAF               	movwf	CCM_Enc@i& (0+255),b
 20498  014C28                     l11050:
 20499                           
 20500                           ; BSR set to: 0
 20501  014C28  0E03               	movlw	3
 20502  014C2A  0100               	movlb	0	; () banked
 20503  014C2C  65AF               	cpfsgt	CCM_Enc@i& (0+255),b
 20504  014C2E  D001               	goto	l11054
 20505  014C30  D028               	goto	l11060
 20506  014C32                     l11054:
 20507                           
 20508                           ; BSR set to: 0
 20509                           ;drv_mrf_miwi_security.c: 255: {
 20510                           ;drv_mrf_miwi_security.c: 256: text[headerLen + payloadLen + i] = tmpBlock[i];
 20511  014C32  0100               	movlb	0	; () banked
 20512  014C34  51AF               	movf	CCM_Enc@i& (0+255),w,b
 20513  014C36  0D01               	mullw	1
 20514  014C38  0ECC               	movlw	low _tmpBlock
 20515  014C3A  24F3               	addwf	prodl,w,c
 20516  014C3C  6ED9               	movwf	fsr2l,c
 20517  014C3E  0E01               	movlw	high _tmpBlock
 20518  014C40  20F4               	addwfc	prodh,w,c
 20519  014C42  6EDA               	movwf	fsr2h,c
 20520  014C44  0100               	movlb	0	; () banked
 20521  014C46  51A8               	movf	CCM_Enc@payloadLen& (0+255),w,b
 20522  014C48  C0A7  F0AB         	movff	CCM_Enc@headerLen,??_CCM_Enc
 20523  014C4C  0100               	movlb	0	; () banked
 20524  014C4E  6BAC               	clrf	(??_CCM_Enc+1)& (0+255),b
 20525  014C50  0100               	movlb	0	; () banked
 20526  014C52  27AB               	addwf	??_CCM_Enc& (0+255),f,b
 20527  014C54  0E00               	movlw	0
 20528  014C56  23AC               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 20529  014C58  0100               	movlb	0	; () banked
 20530  014C5A  51AF               	movf	CCM_Enc@i& (0+255),w,b
 20531  014C5C  0100               	movlb	0	; () banked
 20532  014C5E  27AB               	addwf	??_CCM_Enc& (0+255),f,b
 20533  014C60  0E00               	movlw	0
 20534  014C62  23AC               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 20535  014C64  0100               	movlb	0	; () banked
 20536  014C66  51AB               	movf	??_CCM_Enc& (0+255),w,b
 20537  014C68  0100               	movlb	0	; () banked
 20538  014C6A  25A5               	addwf	CCM_Enc@text& (0+255),w,b
 20539  014C6C  6EE1               	movwf	fsr1l,c
 20540  014C6E  0100               	movlb	0	; () banked
 20541  014C70  51AC               	movf	(??_CCM_Enc+1)& (0+255),w,b
 20542  014C72  0100               	movlb	0	; () banked
 20543  014C74  21A6               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 20544  014C76  6EE2               	movwf	fsr1h,c
 20545  014C78  CFDF FFE7          	movff	indf2,indf1
 20546                           
 20547                           ; BSR set to: 0
 20548  014C7C  0100               	movlb	0	; () banked
 20549  014C7E  2BAF               	incf	CCM_Enc@i& (0+255),f,b
 20550  014C80  D7D3               	goto	l11050
 20551  014C82                     l11060:
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;drv_mrf_miwi_security.c: 257: }
 20555                           ;drv_mrf_miwi_security.c: 259: for(i = 0; i < 4-1; i++)
 20556  014C82  0E00               	movlw	0
 20557  014C84  0100               	movlb	0	; () banked
 20558  014C86  6FAF               	movwf	CCM_Enc@i& (0+255),b
 20559  014C88                     l11062:
 20560                           
 20561                           ; BSR set to: 0
 20562  014C88  0E02               	movlw	2
 20563  014C8A  0100               	movlb	0	; () banked
 20564  014C8C  65AF               	cpfsgt	CCM_Enc@i& (0+255),b
 20565  014C8E  D001               	goto	l11066
 20566  014C90  D02D               	goto	l11076
 20567  014C92                     l11066:
 20568                           
 20569                           ; BSR set to: 0
 20570                           ;drv_mrf_miwi_security.c: 260: {
 20571                           ;drv_mrf_miwi_security.c: 261: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 20572  014C92  0100               	movlb	0	; () banked
 20573  014C94  51A7               	movf	CCM_Enc@headerLen& (0+255),w,b
 20574  014C96  0100               	movlb	0	; () banked
 20575  014C98  5DAF               	subwf	CCM_Enc@i& (0+255),w,b
 20576  014C9A  A0D8               	btfss	status,0,c
 20577  014C9C  D006               	goto	l11070
 20578                           
 20579                           ; BSR set to: 0
 20580  014C9E  0E00               	movlw	0
 20581  014CA0  0100               	movlb	0	; () banked
 20582  014CA2  6FAE               	movwf	(_CCM_Enc$2085+1)& (0+255),b
 20583  014CA4  0E00               	movlw	0
 20584  014CA6  6FAD               	movwf	_CCM_Enc$2085& (0+255),b
 20585  014CA8  D013               	goto	l468
 20586  014CAA                     l11070:
 20587                           
 20588                           ; BSR set to: 0
 20589  014CAA  0100               	movlb	0	; () banked
 20590  014CAC  51AF               	movf	CCM_Enc@i& (0+255),w,b
 20591  014CAE  0D01               	mullw	1
 20592  014CB0  50F3               	movf	prodl,w,c
 20593  014CB2  0100               	movlb	0	; () banked
 20594  014CB4  25A5               	addwf	CCM_Enc@text& (0+255),w,b
 20595  014CB6  6ED9               	movwf	fsr2l,c
 20596  014CB8  50F4               	movf	prodh,w,c
 20597  014CBA  0100               	movlb	0	; () banked
 20598  014CBC  21A6               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 20599  014CBE  6EDA               	movwf	fsr2h,c
 20600  014CC0  50DF               	movf	indf2,w,c
 20601  014CC2  0100               	movlb	0	; () banked
 20602  014CC4  6FAB               	movwf	??_CCM_Enc& (0+255),b
 20603  014CC6  0100               	movlb	0	; () banked
 20604  014CC8  51AB               	movf	??_CCM_Enc& (0+255),w,b
 20605  014CCA  0100               	movlb	0	; () banked
 20606  014CCC  6FAD               	movwf	_CCM_Enc$2085& (0+255),b
 20607  014CCE  6BAE               	clrf	(_CCM_Enc$2085+1)& (0+255),b
 20608  014CD0                     l468:
 20609                           
 20610                           ; BSR set to: 0
 20611  014CD0  0100               	movlb	0	; () banked
 20612  014CD2  51AF               	movf	CCM_Enc@i& (0+255),w,b
 20613  014CD4  0D01               	mullw	1
 20614  014CD6  0ECC               	movlw	low _tmpBlock
 20615  014CD8  24F3               	addwf	prodl,w,c
 20616  014CDA  6ED9               	movwf	fsr2l,c
 20617  014CDC  0E01               	movlw	high _tmpBlock
 20618  014CDE  20F4               	addwfc	prodh,w,c
 20619  014CE0  6EDA               	movwf	fsr2h,c
 20620  014CE2  C0AD  FFDF         	movff	_CCM_Enc$2085,indf2
 20621                           
 20622                           ; BSR set to: 0
 20623  014CE6  0100               	movlb	0	; () banked
 20624  014CE8  2BAF               	incf	CCM_Enc@i& (0+255),f,b
 20625  014CEA  D7CE               	goto	l11062
 20626  014CEC                     l11076:
 20627                           
 20628                           ; BSR set to: 0
 20629                           ;drv_mrf_miwi_security.c: 262: }
 20630                           ;drv_mrf_miwi_security.c: 264: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBlock);
 20631  014CEC  0100               	movlb	0	; () banked
 20632  014CEE  51A7               	movf	CCM_Enc@headerLen& (0+255),w,b
 20633  014CF0  0D01               	mullw	1
 20634  014CF2  50F3               	movf	prodl,w,c
 20635  014CF4  0100               	movlb	0	; () banked
 20636  014CF6  25A5               	addwf	CCM_Enc@text& (0+255),w,b
 20637  014CF8  0100               	movlb	0	; () banked
 20638  014CFA  6F98               	movwf	CTR@text& (0+255),b
 20639  014CFC  50F4               	movf	prodh,w,c
 20640  014CFE  0100               	movlb	0	; () banked
 20641  014D00  21A6               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 20642  014D02  0100               	movlb	0	; () banked
 20643  014D04  6F99               	movwf	(CTR@text+1)& (0+255),b
 20644  014D06  0100               	movlb	0	; () banked
 20645  014D08  51A8               	movf	CCM_Enc@payloadLen& (0+255),w,b
 20646  014D0A  0F04               	addlw	4
 20647  014D0C  0100               	movlb	0	; () banked
 20648  014D0E  6F9A               	movwf	CTR@len& (0+255),b
 20649  014D10  C0A9  F09B         	movff	CCM_Enc@key,CTR@key
 20650  014D14  C0AA  F09C         	movff	CCM_Enc@key+1,CTR@key+1
 20651  014D18  0ECC               	movlw	low _tmpBlock
 20652  014D1A  0100               	movlb	0	; () banked
 20653  014D1C  6F9D               	movwf	CTR@nounce& (0+255),b
 20654  014D1E  0E01               	movlw	high _tmpBlock
 20655  014D20  0100               	movlb	0	; () banked
 20656  014D22  6F9E               	movwf	(CTR@nounce+1)& (0+255),b
 20657  014D24  EC28  F0A7         	call	_CTR	;wreg free
 20658  014D28  0012               	return		;funcret
 20659  014D2A                     __end_of_CCM_Enc:
 20660                           	opt stack 0
 20661                           tblptru	equ	0xFF8
 20662                           tblptrh	equ	0xFF7
 20663                           tblptrl	equ	0xFF6
 20664                           tablat	equ	0xFF5
 20665                           prodh	equ	0xFF4
 20666                           prodl	equ	0xFF3
 20667                           intcon	equ	0xFF2
 20668                           intcon2	equ	0xFF1
 20669                           intcon3	equ	0xFF0
 20670                           indf0	equ	0xFEF
 20671                           postinc0	equ	0xFEE
 20672                           plusw0	equ	0xFEB
 20673                           fsr0h	equ	0xFEA
 20674                           fsr0l	equ	0xFE9
 20675                           wreg	equ	0xFE8
 20676                           indf1	equ	0xFE7
 20677                           postinc1	equ	0xFE6
 20678                           postdec1	equ	0xFE5
 20679                           fsr1h	equ	0xFE2
 20680                           fsr1l	equ	0xFE1
 20681                           indf2	equ	0xFDF
 20682                           postinc2	equ	0xFDE
 20683                           postdec2	equ	0xFDD
 20684                           plusw2	equ	0xFDB
 20685                           fsr2h	equ	0xFDA
 20686                           fsr2l	equ	0xFD9
 20687                           status	equ	0xFD8
 20688                           
 20689 ;; *************** function _MiMAC_ReceivedPacket *****************
 20690 ;; Defined at:
 20691 ;;		line 858 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20692 ;; Parameters:    Size  Location     Type
 20693 ;;		None
 20694 ;; Auto vars:     Size  Location     Type
 20695 ;;  FrameCounter    4   96[BANK0 ] struct .
 20696 ;;  k               1  100[BANK0 ] unsigned char 
 20697 ;;  PayloadIndex    1  102[BANK0 ] unsigned char 
 20698 ;;  j               1  101[BANK0 ] unsigned char 
 20699 ;;  currentTick     4   92[BANK0 ] struct _MIWI_TICK
 20700 ;;  i               1  103[BANK0 ] unsigned char 
 20701 ;; Return value:  Size  Location     Type
 20702 ;;                  1    wreg      unsigned char 
 20703 ;; Registers used:
 20704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20705 ;; Tracked objects:
 20706 ;;		On entry : 0/0
 20707 ;;		On exit  : 0/0
 20708 ;;		Unchanged: 0/0
 20709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20711 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20712 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20713 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20714 ;;Total ram usage:       20 bytes
 20715 ;; Hardware stack levels used:    1
 20716 ;; Hardware stack levels required when called:   10
 20717 ;; This function calls:
 20718 ;;		_CCM_Dec
 20719 ;;		_MiWi_TickGet
 20720 ;;		_isSameAddress
 20721 ;; This function is called by:
 20722 ;;		_MiWiTasks
 20723 ;; This function uses a non-reentrant model
 20724 ;;
 20725                           
 20726                           	psect	text65
 20727  0124DE                     __ptext65:
 20728                           	opt stack 0
 20729  0124DE                     _MiMAC_ReceivedPacket:
 20730                           	opt stack 15
 20731                           
 20732                           ;drv_mrf_miwi_89xa.c: 860: uint8_t i;
 20733                           ;drv_mrf_miwi_89xa.c: 861: MIWI_TICK currentTick;
 20734                           ;drv_mrf_miwi_89xa.c: 865: for(i = 0; i < 5; i++)
 20735                           
 20736                           ;incstack = 0
 20737  0124DE  0E00               	movlw	0
 20738  0124E0  0100               	movlb	0	; () banked
 20739  0124E2  6FC7               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 20740  0124E4                     l11308:
 20741                           
 20742                           ; BSR set to: 0
 20743  0124E4  0E04               	movlw	4
 20744  0124E6  0100               	movlb	0	; () banked
 20745  0124E8  65C7               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 20746  0124EA  D001               	goto	l11312
 20747  0124EC  D084               	goto	l11326
 20748  0124EE                     l11312:
 20749                           
 20750                           ; BSR set to: 0
 20751                           ;drv_mrf_miwi_89xa.c: 866: {
 20752                           ;drv_mrf_miwi_89xa.c: 867: currentTick = MiWi_TickGet();
 20753  0124EE  ECD5  F0B1         	call	_MiWi_TickGet	;wreg free
 20754  0124F2  C081  F0BC         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
 20755  0124F6  C082  F0BD         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
 20756  0124FA  C083  F0BE         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
 20757  0124FE  C084  F0BF         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
 20758                           
 20759                           ;drv_mrf_miwi_89xa.c: 868: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
 20760                           ;drv_mrf_miwi_89xa.c: 869: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          6000000)/32)) )
 20761  012502  0100               	movlb	0	; () banked
 20762  012504  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20763  012506  0D06               	mullw	6
 20764  012508  0E28               	movlw	low _AckInfo
 20765  01250A  24F3               	addwf	prodl,w,c
 20766  01250C  6ED9               	movwf	fsr2l,c
 20767  01250E  0E02               	movlw	high _AckInfo
 20768  012510  20F4               	addwfc	prodh,w,c
 20769  012512  6EDA               	movwf	fsr2h,c
 20770  012514  50DF               	movf	indf2,w,c
 20771  012516  B4D8               	btfsc	status,2,c
 20772  012518  D06B               	goto	l11322
 20773                           
 20774                           ; BSR set to: 0
 20775  01251A  0100               	movlb	0	; () banked
 20776  01251C  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20777  01251E  0D06               	mullw	6
 20778  012520  0E02               	movlw	2
 20779  012522  26F3               	addwf	prodl,f,c
 20780  012524  0E00               	movlw	0
 20781  012526  22F4               	addwfc	prodh,f,c
 20782  012528  0E28               	movlw	low _AckInfo
 20783  01252A  24F3               	addwf	prodl,w,c
 20784  01252C  6ED9               	movwf	fsr2l,c
 20785  01252E  0E02               	movlw	high _AckInfo
 20786  012530  20F4               	addwfc	prodh,w,c
 20787  012532  6EDA               	movwf	fsr2h,c
 20788  012534  0100               	movlb	0	; () banked
 20789  012536  51BC               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 20790  012538  5CDE               	subwf	postinc2,w,c
 20791  01253A  0100               	movlb	0	; () banked
 20792  01253C  51BD               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 20793  01253E  58DE               	subwfb	postinc2,w,c
 20794  012540  0100               	movlb	0	; () banked
 20795  012542  51BE               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 20796  012544  58DE               	subwfb	postinc2,w,c
 20797  012546  0100               	movlb	0	; () banked
 20798  012548  51BF               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 20799  01254A  58DE               	subwfb	postinc2,w,c
 20800  01254C  B0D8               	btfsc	status,0,c
 20801  01254E  D050               	goto	l11322
 20802                           
 20803                           ; BSR set to: 0
 20804  012550  0100               	movlb	0	; () banked
 20805  012552  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20806  012554  0D06               	mullw	6
 20807  012556  0E02               	movlw	2
 20808  012558  26F3               	addwf	prodl,f,c
 20809  01255A  0E00               	movlw	0
 20810  01255C  22F4               	addwfc	prodh,f,c
 20811  01255E  0E28               	movlw	low _AckInfo
 20812  012560  24F3               	addwf	prodl,w,c
 20813  012562  6ED9               	movwf	fsr2l,c
 20814  012564  0E02               	movlw	high _AckInfo
 20815  012566  20F4               	addwfc	prodh,w,c
 20816  012568  6EDA               	movwf	fsr2h,c
 20817  01256A  CFDE F0B4          	movff	postinc2,??_MiMAC_ReceivedPacket
 20818  01256E  CFDE F0B5          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 20819  012572  CFDE F0B6          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 20820  012576  CFDE F0B7          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 20821  01257A  0100               	movlb	0	; () banked
 20822  01257C  1FB4               	comf	??_MiMAC_ReceivedPacket& (0+255),f,b
 20823  01257E  1FB5               	comf	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 20824  012580  1FB6               	comf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 20825  012582  1FB7               	comf	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 20826  012584  2BB4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 20827  012586  0E00               	movlw	0
 20828  012588  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 20829  01258A  23B6               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 20830  01258C  23B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 20831  01258E  0100               	movlb	0	; () banked
 20832  012590  51BC               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 20833  012592  0100               	movlb	0	; () banked
 20834  012594  25B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 20835  012596  0100               	movlb	0	; () banked
 20836  012598  6FB8               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 20837  01259A  0100               	movlb	0	; () banked
 20838  01259C  51BD               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 20839  01259E  0100               	movlb	0	; () banked
 20840  0125A0  21B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 20841  0125A2  0100               	movlb	0	; () banked
 20842  0125A4  6FB9               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 20843  0125A6  0100               	movlb	0	; () banked
 20844  0125A8  51BE               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 20845  0125AA  0100               	movlb	0	; () banked
 20846  0125AC  21B6               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 20847  0125AE  0100               	movlb	0	; () banked
 20848  0125B0  6FBA               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 20849  0125B2  0100               	movlb	0	; () banked
 20850  0125B4  51BF               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 20851  0125B6  0100               	movlb	0	; () banked
 20852  0125B8  21B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 20853  0125BA  0100               	movlb	0	; () banked
 20854  0125BC  6FBB               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 20855  0125BE  0100               	movlb	0	; () banked
 20856  0125C0  51BB               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 20857  0125C2  E10B               	bnz	u12660
 20858  0125C4  0E21               	movlw	33
 20859  0125C6  0100               	movlb	0	; () banked
 20860  0125C8  5DB8               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 20861  0125CA  0EA1               	movlw	161
 20862  0125CC  0100               	movlb	0	; () banked
 20863  0125CE  59B9               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 20864  0125D0  0E07               	movlw	7
 20865  0125D2  0100               	movlb	0	; () banked
 20866  0125D4  59BA               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 20867  0125D6  A0D8               	btfss	status,0,c
 20868  0125D8  D00B               	goto	l11322
 20869  0125DA                     u12660:
 20870                           
 20871                           ; BSR set to: 0
 20872                           ;drv_mrf_miwi_89xa.c: 870: {
 20873                           ;drv_mrf_miwi_89xa.c: 871: AckInfo[i].Valid = 0;
 20874  0125DA  0100               	movlb	0	; () banked
 20875  0125DC  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20876  0125DE  0D06               	mullw	6
 20877  0125E0  0E28               	movlw	low _AckInfo
 20878  0125E2  24F3               	addwf	prodl,w,c
 20879  0125E4  6ED9               	movwf	fsr2l,c
 20880  0125E6  0E02               	movlw	high _AckInfo
 20881  0125E8  20F4               	addwfc	prodh,w,c
 20882  0125EA  6EDA               	movwf	fsr2h,c
 20883  0125EC  0E00               	movlw	0
 20884  0125EE  6EDF               	movwf	indf2,c
 20885  0125F0                     l11322:
 20886                           
 20887                           ; BSR set to: 0
 20888  0125F0  0100               	movlb	0	; () banked
 20889  0125F2  2BC7               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 20890  0125F4  D777               	goto	l11308
 20891  0125F6                     l11326:
 20892                           
 20893                           ; BSR set to: 0
 20894                           ;drv_mrf_miwi_89xa.c: 872: }
 20895                           ;drv_mrf_miwi_89xa.c: 873: }
 20896                           ;drv_mrf_miwi_89xa.c: 876: if( ReceivedBankIndex != 0xFF )
 20897  0125F6  2845               	incf	_ReceivedBankIndex,w,c
 20898  0125F8  B4D8               	btfsc	status,2,c
 20899  0125FA  D002               	goto	l11332
 20900                           
 20901                           ; BSR set to: 0
 20902                           ;drv_mrf_miwi_89xa.c: 877: {
 20903                           ;drv_mrf_miwi_89xa.c: 878: return 0;
 20904  0125FC  0E00               	movlw	0
 20905                           
 20906                           ; BSR set to: 0
 20907  0125FE  0012               	return	
 20908  012600                     l11332:
 20909                           
 20910                           ; BSR set to: 0
 20911                           ;drv_mrf_miwi_89xa.c: 879: }
 20912                           ;drv_mrf_miwi_89xa.c: 881: for(i = 0; i < 2; i++)
 20913  012600  0E00               	movlw	0
 20914  012602  0100               	movlb	0	; () banked
 20915  012604  6FC7               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 20916  012606                     l11334:
 20917                           
 20918                           ; BSR set to: 0
 20919  012606  0E01               	movlw	1
 20920  012608  0100               	movlb	0	; () banked
 20921  01260A  65C7               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 20922  01260C  D001               	goto	l11338
 20923  01260E  D1B2               	goto	l11436
 20924  012610                     l11338:
 20925                           
 20926                           ; BSR set to: 0
 20927                           ;drv_mrf_miwi_89xa.c: 882: {
 20928                           ;drv_mrf_miwi_89xa.c: 883: if( RxPacket[i].flags.bits.Valid )
 20929  012610  0100               	movlb	0	; () banked
 20930  012612  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20931  012614  0D42               	mullw	66
 20932  012616  0E50               	movlw	low _RxPacket
 20933  012618  24F3               	addwf	prodl,w,c
 20934  01261A  6ED9               	movwf	fsr2l,c
 20935  01261C  0E03               	movlw	high _RxPacket
 20936  01261E  20F4               	addwfc	prodh,w,c
 20937  012620  6EDA               	movwf	fsr2h,c
 20938  012622  0103               	movlb	3	; () banked
 20939  012624  A0DF               	btfss	indf2,0,c
 20940  012626  D1A3               	goto	l11432
 20941                           
 20942                           ; BSR set to: 3
 20943                           ;drv_mrf_miwi_89xa.c: 884: {
 20944                           ;drv_mrf_miwi_89xa.c: 885: uint8_t PayloadIndex;
 20945                           ;drv_mrf_miwi_89xa.c: 886: uint8_t j;
 20946                           ;drv_mrf_miwi_89xa.c: 888: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 20947  012628  0100               	movlb	0	; () banked
 20948  01262A  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20949  01262C  0D42               	mullw	66
 20950  01262E  0E01               	movlw	1
 20951  012630  26F3               	addwf	prodl,f,c
 20952  012632  0E00               	movlw	0
 20953  012634  22F4               	addwfc	prodh,f,c
 20954  012636  0E50               	movlw	low _RxPacket
 20955  012638  24F3               	addwf	prodl,w,c
 20956  01263A  6ED9               	movwf	fsr2l,c
 20957  01263C  0E03               	movlw	high _RxPacket
 20958  01263E  20F4               	addwfc	prodh,w,c
 20959  012640  6EDA               	movwf	fsr2h,c
 20960  012642  50DF               	movf	indf2,w,c
 20961  012644  6E34               	movwf	_MACRxPacket,c
 20962                           
 20963                           ;drv_mrf_miwi_89xa.c: 889: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 20964  012646  0100               	movlb	0	; () banked
 20965  012648  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20966  01264A  0D42               	mullw	66
 20967  01264C  0E41               	movlw	65
 20968  01264E  26F3               	addwf	prodl,f,c
 20969  012650  0E00               	movlw	0
 20970  012652  22F4               	addwfc	prodh,f,c
 20971  012654  0E50               	movlw	low _RxPacket
 20972  012656  24F3               	addwf	prodl,w,c
 20973  012658  6ED9               	movwf	fsr2l,c
 20974  01265A  0E03               	movlw	high _RxPacket
 20975  01265C  20F4               	addwfc	prodh,w,c
 20976  01265E  6EDA               	movwf	fsr2h,c
 20977  012660  50DF               	movf	indf2,w,c
 20978  012662  6E39               	movwf	_MACRxPacket+5,c
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;drv_mrf_miwi_89xa.c: 890: PayloadIndex = 2;
 20982  012664  0E02               	movlw	2
 20983  012666  0100               	movlb	0	; () banked
 20984  012668  6FC6               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;drv_mrf_miwi_89xa.c: 892: if( MACRxPacket.flags.bits.destPrsnt )
 20988  01266A  AC34               	btfss	_MACRxPacket,6,c
 20989  01266C  D006               	goto	l11348
 20990                           
 20991                           ; BSR set to: 0
 20992                           ;drv_mrf_miwi_89xa.c: 893: {
 20993                           ;drv_mrf_miwi_89xa.c: 894: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 20994  01266E  303C               	rrcf	_MACInitParams,w,c
 20995  012670  32E8               	rrcf	wreg,f,c
 20996  012672  32E8               	rrcf	wreg,f,c
 20997  012674  0B0F               	andlw	15
 20998  012676  0100               	movlb	0	; () banked
 20999  012678  27C6               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21000  01267A                     l11348:
 21001                           
 21002                           ; BSR set to: 0
 21003                           ;drv_mrf_miwi_89xa.c: 895: }
 21004                           ;drv_mrf_miwi_89xa.c: 897: if( MACRxPacket.flags.bits.sourcePrsnt )
 21005  01267A  AE34               	btfss	_MACRxPacket,7,c
 21006  01267C  D025               	goto	l11354
 21007                           
 21008                           ; BSR set to: 0
 21009                           ;drv_mrf_miwi_89xa.c: 898: {
 21010                           ;drv_mrf_miwi_89xa.c: 899: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 21011  01267E  0100               	movlb	0	; () banked
 21012  012680  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21013  012682  0D01               	mullw	1
 21014  012684  0E01               	movlw	1
 21015  012686  26F3               	addwf	prodl,f,c
 21016  012688  0E00               	movlw	0
 21017  01268A  22F4               	addwfc	prodh,f,c
 21018  01268C  0E50               	movlw	low _RxPacket
 21019  01268E  0100               	movlb	0	; () banked
 21020  012690  6FB4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21021  012692  0E03               	movlw	high _RxPacket
 21022  012694  0100               	movlb	0	; () banked
 21023  012696  6FB5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21024  012698  50F3               	movf	prodl,w,c
 21025  01269A  0100               	movlb	0	; () banked
 21026  01269C  27B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21027  01269E  50F4               	movf	prodh,w,c
 21028  0126A0  0100               	movlb	0	; () banked
 21029  0126A2  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21030  0126A4  0100               	movlb	0	; () banked
 21031  0126A6  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21032  0126A8  0D42               	mullw	66
 21033  0126AA  50F3               	movf	prodl,w,c
 21034  0126AC  0100               	movlb	0	; () banked
 21035  0126AE  25B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21036  0126B0  6E35               	movwf	_MACRxPacket+1,c
 21037  0126B2  50F4               	movf	prodh,w,c
 21038  0126B4  0100               	movlb	0	; () banked
 21039  0126B6  21B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21040  0126B8  6E36               	movwf	_MACRxPacket+2,c
 21041                           
 21042                           ; BSR set to: 0
 21043                           ;drv_mrf_miwi_89xa.c: 900: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 21044  0126BA  303C               	rrcf	_MACInitParams,w,c
 21045  0126BC  32E8               	rrcf	wreg,f,c
 21046  0126BE  32E8               	rrcf	wreg,f,c
 21047  0126C0  0B0F               	andlw	15
 21048  0126C2  0100               	movlb	0	; () banked
 21049  0126C4  27C6               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21050                           
 21051                           ;drv_mrf_miwi_89xa.c: 901: }
 21052  0126C6  D004               	goto	l11356
 21053  0126C8                     l11354:
 21054                           
 21055                           ; BSR set to: 0
 21056                           ;drv_mrf_miwi_89xa.c: 902: else
 21057                           ;drv_mrf_miwi_89xa.c: 903: {
 21058                           ;drv_mrf_miwi_89xa.c: 904: MACRxPacket.SourceAddress = (0);
 21059  0126C8  0E00               	movlw	0
 21060  0126CA  6E35               	movwf	_MACRxPacket+1,c
 21061  0126CC  0E00               	movlw	0
 21062  0126CE  6E36               	movwf	_MACRxPacket+2,c
 21063  0126D0                     l11356:
 21064                           
 21065                           ; BSR set to: 0
 21066                           ;drv_mrf_miwi_89xa.c: 905: }
 21067                           ;drv_mrf_miwi_89xa.c: 909: if( MACRxPacket.flags.bits.secEn )
 21068  0126D0  A634               	btfss	_MACRxPacket,3,c
 21069  0126D2  D126               	goto	l11420
 21070                           
 21071                           ; BSR set to: 0
 21072                           ;drv_mrf_miwi_89xa.c: 910: {
 21073                           ;drv_mrf_miwi_89xa.c: 912: if( 0x00 != RxPacket[i].Payload[PayloadIndex+4] )
 21074  0126D4  0100               	movlb	0	; () banked
 21075  0126D6  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21076  0126D8  0D42               	mullw	66
 21077  0126DA  0100               	movlb	0	; () banked
 21078  0126DC  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21079  0126DE  0100               	movlb	0	; () banked
 21080  0126E0  6FB4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21081  0126E2  6BB5               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21082  0126E4  0E05               	movlw	5
 21083  0126E6  0100               	movlb	0	; () banked
 21084  0126E8  27B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21085  0126EA  0E00               	movlw	0
 21086  0126EC  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21087  0126EE  0E50               	movlw	low _RxPacket
 21088  0126F0  0100               	movlb	0	; () banked
 21089  0126F2  6FB6               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 21090  0126F4  0E03               	movlw	high _RxPacket
 21091  0126F6  0100               	movlb	0	; () banked
 21092  0126F8  6FB7               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 21093  0126FA  0100               	movlb	0	; () banked
 21094  0126FC  51B4               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21095  0126FE  0100               	movlb	0	; () banked
 21096  012700  27B6               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21097  012702  0100               	movlb	0	; () banked
 21098  012704  51B5               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21099  012706  0100               	movlb	0	; () banked
 21100  012708  23B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21101  01270A  50F3               	movf	prodl,w,c
 21102  01270C  0100               	movlb	0	; () banked
 21103  01270E  25B6               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21104  012710  6ED9               	movwf	fsr2l,c
 21105  012712  50F4               	movf	prodh,w,c
 21106  012714  0100               	movlb	0	; () banked
 21107  012716  21B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21108  012718  6EDA               	movwf	fsr2h,c
 21109  01271A  50DF               	movf	indf2,w,c
 21110  01271C  B4D8               	btfsc	status,2,c
 21111  01271E  D00D               	goto	l352
 21112                           
 21113                           ; BSR set to: 0
 21114                           ;drv_mrf_miwi_89xa.c: 913: {
 21115                           ;drv_mrf_miwi_89xa.c: 914: RxPacket[i].flags.Val = 0;
 21116  012720  0100               	movlb	0	; () banked
 21117  012722  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21118  012724  0D42               	mullw	66
 21119  012726  0E50               	movlw	low _RxPacket
 21120  012728  24F3               	addwf	prodl,w,c
 21121  01272A  6ED9               	movwf	fsr2l,c
 21122  01272C  0E03               	movlw	high _RxPacket
 21123  01272E  20F4               	addwfc	prodh,w,c
 21124  012730  6EDA               	movwf	fsr2h,c
 21125  012732  0E00               	movlw	0
 21126  012734  6EDF               	movwf	indf2,c
 21127                           
 21128                           ; BSR set to: 0
 21129                           ;drv_mrf_miwi_89xa.c: 915: return 0;
 21130  012736  0E00               	movlw	0
 21131                           
 21132                           ; BSR set to: 0
 21133  012738  0012               	return	
 21134  01273A                     l352:
 21135                           
 21136                           ; BSR set to: 0
 21137                           ;drv_mrf_miwi_89xa.c: 916: }
 21138                           ;drv_mrf_miwi_89xa.c: 919: if( MACRxPacket.flags.bits.sourcePrsnt )
 21139  01273A  AE34               	btfss	_MACRxPacket,7,c
 21140  01273C  D0AA               	goto	l11408
 21141                           
 21142                           ; BSR set to: 0
 21143                           ;drv_mrf_miwi_89xa.c: 920: {
 21144                           ;drv_mrf_miwi_89xa.c: 922: for(j = 0; j < 10; j++)
 21145  01273E  0E00               	movlw	0
 21146  012740  0100               	movlb	0	; () banked
 21147  012742  6FC5               	movwf	MiMAC_ReceivedPacket@j& (0+255),b
 21148  012744                     l11368:
 21149                           
 21150                           ; BSR set to: 0
 21151  012744  0E09               	movlw	9
 21152  012746  0100               	movlb	0	; () banked
 21153  012748  65C5               	cpfsgt	MiMAC_ReceivedPacket@j& (0+255),b
 21154  01274A  D001               	goto	l11372
 21155  01274C  D02B               	goto	l11382
 21156  01274E                     l11372:
 21157                           
 21158                           ; BSR set to: 0
 21159                           ;drv_mrf_miwi_89xa.c: 923: {
 21160                           ;drv_mrf_miwi_89xa.c: 924: if( (ConnectionTable[j].status.bits.isValid) &&
 21161                           ;drv_mrf_miwi_89xa.c: 925: isSameAddress(ConnectionTable[j].Address, MACRxPacket.SourceA
      +                          ddress) )
 21162  01274E  0100               	movlb	0	; () banked
 21163  012750  51C5               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21164  012752  0D09               	mullw	9
 21165  012754  0E08               	movlw	8
 21166  012756  26F3               	addwf	prodl,f,c
 21167  012758  0E00               	movlw	0
 21168  01275A  22F4               	addwfc	prodh,f,c
 21169  01275C  0E46               	movlw	low _ConnectionTable
 21170  01275E  24F3               	addwf	prodl,w,c
 21171  012760  6ED9               	movwf	fsr2l,c
 21172  012762  0E02               	movlw	high _ConnectionTable
 21173  012764  20F4               	addwfc	prodh,w,c
 21174  012766  6EDA               	movwf	fsr2h,c
 21175  012768  0102               	movlb	2	; () banked
 21176  01276A  AEDF               	btfss	indf2,7,c
 21177  01276C  D018               	goto	l11378
 21178                           
 21179                           ; BSR set to: 2
 21180  01276E  0100               	movlb	0	; () banked
 21181  012770  51C5               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21182  012772  0D09               	mullw	9
 21183  012774  0E04               	movlw	4
 21184  012776  26F3               	addwf	prodl,f,c
 21185  012778  0E00               	movlw	0
 21186  01277A  22F4               	addwfc	prodh,f,c
 21187  01277C  0E46               	movlw	low _ConnectionTable
 21188  01277E  24F3               	addwf	prodl,w,c
 21189  012780  0100               	movlb	0	; () banked
 21190  012782  6F81               	movwf	isSameAddress@Address1& (0+255),b
 21191  012784  0E02               	movlw	high _ConnectionTable
 21192  012786  20F4               	addwfc	prodh,w,c
 21193  012788  0100               	movlb	0	; () banked
 21194  01278A  6F82               	movwf	(isSameAddress@Address1+1)& (0+255),b
 21195  01278C  C035  F083         	movff	_MACRxPacket+1,isSameAddress@Address2
 21196  012790  C036  F084         	movff	_MACRxPacket+2,isSameAddress@Address2+1
 21197  012794  EC66  F0B3         	call	_isSameAddress	;wreg free
 21198  012798  0900               	iorlw	0
 21199  01279A  A4D8               	btfss	status,2,c
 21200  01279C  D003               	goto	l11382
 21201  01279E                     l11378:
 21202  01279E  0100               	movlb	0	; () banked
 21203  0127A0  2BC5               	incf	MiMAC_ReceivedPacket@j& (0+255),f,b
 21204  0127A2  D7D0               	goto	l11368
 21205  0127A4                     l11382:
 21206                           
 21207                           ;drv_mrf_miwi_89xa.c: 928: }
 21208                           ;drv_mrf_miwi_89xa.c: 929: }
 21209                           ;drv_mrf_miwi_89xa.c: 930: if( j < 10 )
 21210  0127A4  0E0A               	movlw	10
 21211  0127A6  0100               	movlb	0	; () banked
 21212  0127A8  61C5               	cpfslt	MiMAC_ReceivedPacket@j& (0+255),b
 21213  0127AA  D073               	goto	l11408
 21214                           
 21215                           ; BSR set to: 0
 21216                           ;drv_mrf_miwi_89xa.c: 931: {
 21217                           ;drv_mrf_miwi_89xa.c: 932: API_UINT32_UNION FrameCounter;
 21218                           ;drv_mrf_miwi_89xa.c: 933: uint8_t k;
 21219                           ;drv_mrf_miwi_89xa.c: 935: for(k = 0; k < 4; k++)
 21220  0127AC  0E00               	movlw	0
 21221  0127AE  0100               	movlb	0	; () banked
 21222  0127B0  6FC4               	movwf	MiMAC_ReceivedPacket@k& (0+255),b
 21223  0127B2                     l11386:
 21224                           
 21225                           ; BSR set to: 0
 21226  0127B2  0E03               	movlw	3
 21227  0127B4  0100               	movlb	0	; () banked
 21228  0127B6  65C4               	cpfsgt	MiMAC_ReceivedPacket@k& (0+255),b
 21229  0127B8  D001               	goto	l11390
 21230  0127BA  D036               	goto	l11396
 21231  0127BC                     l11390:
 21232                           
 21233                           ; BSR set to: 0
 21234                           ;drv_mrf_miwi_89xa.c: 936: {
 21235                           ;drv_mrf_miwi_89xa.c: 937: FrameCounter.v[k] = RxPacket[i].Payload[PayloadIndex+k];
 21236  0127BC  0100               	movlb	0	; () banked
 21237  0127BE  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21238  0127C0  0D42               	mullw	66
 21239  0127C2  0100               	movlb	0	; () banked
 21240  0127C4  51C4               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 21241  0127C6  C0C6  F0B4         	movff	MiMAC_ReceivedPacket@PayloadIndex,??_MiMAC_ReceivedPacket
 21242  0127CA  0100               	movlb	0	; () banked
 21243  0127CC  6BB5               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21244  0127CE  0100               	movlb	0	; () banked
 21245  0127D0  27B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21246  0127D2  0E00               	movlw	0
 21247  0127D4  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21248  0127D6  0E01               	movlw	1
 21249  0127D8  0100               	movlb	0	; () banked
 21250  0127DA  27B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21251  0127DC  0E00               	movlw	0
 21252  0127DE  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21253  0127E0  0E50               	movlw	low _RxPacket
 21254  0127E2  0100               	movlb	0	; () banked
 21255  0127E4  6FB6               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 21256  0127E6  0E03               	movlw	high _RxPacket
 21257  0127E8  0100               	movlb	0	; () banked
 21258  0127EA  6FB7               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 21259  0127EC  0100               	movlb	0	; () banked
 21260  0127EE  51B4               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21261  0127F0  0100               	movlb	0	; () banked
 21262  0127F2  27B6               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21263  0127F4  0100               	movlb	0	; () banked
 21264  0127F6  51B5               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21265  0127F8  0100               	movlb	0	; () banked
 21266  0127FA  23B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21267  0127FC  50F3               	movf	prodl,w,c
 21268  0127FE  0100               	movlb	0	; () banked
 21269  012800  25B6               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21270  012802  6ED9               	movwf	fsr2l,c
 21271  012804  50F4               	movf	prodh,w,c
 21272  012806  0100               	movlb	0	; () banked
 21273  012808  21B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21274  01280A  6EDA               	movwf	fsr2h,c
 21275  01280C  0100               	movlb	0	; () banked
 21276  01280E  51C4               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 21277  012810  0D01               	mullw	1
 21278  012812  0EC0               	movlw	low MiMAC_ReceivedPacket@FrameCounter
 21279  012814  24F3               	addwf	prodl,w,c
 21280  012816  6EE1               	movwf	fsr1l,c
 21281  012818  0E00               	movlw	high MiMAC_ReceivedPacket@FrameCounter
 21282  01281A  20F4               	addwfc	prodh,w,c
 21283  01281C  6EE2               	movwf	fsr1h,c
 21284  01281E  CFDF FFE7          	movff	indf2,indf1
 21285                           
 21286                           ; BSR set to: 0
 21287  012822  0100               	movlb	0	; () banked
 21288  012824  2BC4               	incf	MiMAC_ReceivedPacket@k& (0+255),f,b
 21289  012826  D7C5               	goto	l11386
 21290  012828                     l11396:
 21291                           
 21292                           ; BSR set to: 0
 21293                           ;drv_mrf_miwi_89xa.c: 938: }
 21294                           ;drv_mrf_miwi_89xa.c: 940: if( IncomingFrameCounter[j].Val > FrameCounter.Val )
 21295  012828  0100               	movlb	0	; () banked
 21296  01282A  51C5               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21297  01282C  0D04               	mullw	4
 21298  01282E  0E00               	movlw	low _IncomingFrameCounter
 21299  012830  24F3               	addwf	prodl,w,c
 21300  012832  6ED9               	movwf	fsr2l,c
 21301  012834  0E02               	movlw	high _IncomingFrameCounter
 21302  012836  20F4               	addwfc	prodh,w,c
 21303  012838  6EDA               	movwf	fsr2h,c
 21304  01283A  50DE               	movf	postinc2,w,c
 21305  01283C  0100               	movlb	0	; () banked
 21306  01283E  5DC0               	subwf	MiMAC_ReceivedPacket@FrameCounter& (0+255),w,b
 21307  012840  50DE               	movf	postinc2,w,c
 21308  012842  0100               	movlb	0	; () banked
 21309  012844  59C1               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+1)& (0+255),w,b
 21310  012846  50DE               	movf	postinc2,w,c
 21311  012848  0100               	movlb	0	; () banked
 21312  01284A  59C2               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+2)& (0+255),w,b
 21313  01284C  50DE               	movf	postinc2,w,c
 21314  01284E  0100               	movlb	0	; () banked
 21315  012850  59C3               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+3)& (0+255),w,b
 21316  012852  B0D8               	btfsc	status,0,c
 21317  012854  D00D               	goto	l11406
 21318                           
 21319                           ; BSR set to: 0
 21320                           ;drv_mrf_miwi_89xa.c: 941: {
 21321                           ;drv_mrf_miwi_89xa.c: 942: RxPacket[i].flags.Val = 0;
 21322  012856  0100               	movlb	0	; () banked
 21323  012858  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21324  01285A  0D42               	mullw	66
 21325  01285C  0E50               	movlw	low _RxPacket
 21326  01285E  24F3               	addwf	prodl,w,c
 21327  012860  6ED9               	movwf	fsr2l,c
 21328  012862  0E03               	movlw	high _RxPacket
 21329  012864  20F4               	addwfc	prodh,w,c
 21330  012866  6EDA               	movwf	fsr2h,c
 21331  012868  0E00               	movlw	0
 21332  01286A  6EDF               	movwf	indf2,c
 21333                           
 21334                           ; BSR set to: 0
 21335                           ;drv_mrf_miwi_89xa.c: 943: return 0;
 21336  01286C  0E00               	movlw	0
 21337                           
 21338                           ; BSR set to: 0
 21339  01286E  0012               	return	
 21340  012870                     l11406:
 21341                           
 21342                           ; BSR set to: 0
 21343                           ;drv_mrf_miwi_89xa.c: 945: else
 21344                           ;drv_mrf_miwi_89xa.c: 946: {
 21345                           ;drv_mrf_miwi_89xa.c: 947: IncomingFrameCounter[j].Val = FrameCounter.Val;
 21346  012870  0100               	movlb	0	; () banked
 21347  012872  51C5               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21348  012874  0D04               	mullw	4
 21349  012876  0E00               	movlw	low _IncomingFrameCounter
 21350  012878  24F3               	addwf	prodl,w,c
 21351  01287A  6ED9               	movwf	fsr2l,c
 21352  01287C  0E02               	movlw	high _IncomingFrameCounter
 21353  01287E  20F4               	addwfc	prodh,w,c
 21354  012880  6EDA               	movwf	fsr2h,c
 21355  012882  C0C0  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter,postinc2
 21356  012886  C0C1  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+1,postinc2
 21357  01288A  C0C2  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+2,postinc2
 21358  01288E  C0C3  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+3,postinc2
 21359  012892                     l11408:
 21360                           
 21361                           ; BSR set to: 0
 21362                           ;drv_mrf_miwi_89xa.c: 948: }
 21363                           ;drv_mrf_miwi_89xa.c: 949: }
 21364                           ;drv_mrf_miwi_89xa.c: 950: }
 21365                           ;drv_mrf_miwi_89xa.c: 953: PayloadIndex += 5;
 21366  012892  0E05               	movlw	5
 21367  012894  0100               	movlb	0	; () banked
 21368  012896  27C6               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21369                           
 21370                           ; BSR set to: 0
 21371                           ;drv_mrf_miwi_89xa.c: 975: if(CCM_Dec((uint8_t *)RxPacket[i].Payload, PayloadIndex, RxPa
      +                          cket[i].PayloadLen-PayloadIndex, key) == 0)
 21372  012898  0100               	movlb	0	; () banked
 21373  01289A  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21374  01289C  0D42               	mullw	66
 21375  01289E  0E01               	movlw	1
 21376  0128A0  26F3               	addwf	prodl,f,c
 21377  0128A2  0E00               	movlw	0
 21378  0128A4  22F4               	addwfc	prodh,f,c
 21379  0128A6  0E50               	movlw	low _RxPacket
 21380  0128A8  24F3               	addwf	prodl,w,c
 21381  0128AA  0100               	movlb	0	; () banked
 21382  0128AC  6FA5               	movwf	CCM_Dec@text& (0+255),b
 21383  0128AE  0E03               	movlw	high _RxPacket
 21384  0128B0  20F4               	addwfc	prodh,w,c
 21385  0128B2  0100               	movlb	0	; () banked
 21386  0128B4  6FA6               	movwf	(CCM_Dec@text+1)& (0+255),b
 21387  0128B6  C0C6  F0A7         	movff	MiMAC_ReceivedPacket@PayloadIndex,CCM_Dec@headerLen
 21388  0128BA  0100               	movlb	0	; () banked
 21389  0128BC  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21390  0128BE  0D42               	mullw	66
 21391  0128C0  0E41               	movlw	65
 21392  0128C2  26F3               	addwf	prodl,f,c
 21393  0128C4  0E00               	movlw	0
 21394  0128C6  22F4               	addwfc	prodh,f,c
 21395  0128C8  0E50               	movlw	low _RxPacket
 21396  0128CA  24F3               	addwf	prodl,w,c
 21397  0128CC  6ED9               	movwf	fsr2l,c
 21398  0128CE  0E03               	movlw	high _RxPacket
 21399  0128D0  20F4               	addwfc	prodh,w,c
 21400  0128D2  6EDA               	movwf	fsr2h,c
 21401  0128D4  50DF               	movf	indf2,w,c
 21402  0128D6  0100               	movlb	0	; () banked
 21403  0128D8  6FB4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21404  0128DA  0100               	movlb	0	; () banked
 21405  0128DC  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21406  0128DE  0800               	sublw	0
 21407  0128E0  0100               	movlb	0	; () banked
 21408  0128E2  25B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21409  0128E4  0100               	movlb	0	; () banked
 21410  0128E6  6FA8               	movwf	CCM_Dec@payloadLen& (0+255),b
 21411  0128E8  0EC0               	movlw	low _key
 21412  0128EA  0100               	movlb	0	; () banked
 21413  0128EC  6FA9               	movwf	CCM_Dec@key& (0+255),b
 21414  0128EE  0E01               	movlw	high _key
 21415  0128F0  0100               	movlb	0	; () banked
 21416  0128F2  6FAA               	movwf	(CCM_Dec@key+1)& (0+255),b
 21417  0128F4  ECC0  F0A2         	call	_CCM_Dec	;wreg free
 21418  0128F8  0900               	iorlw	0
 21419  0128FA  A4D8               	btfss	status,2,c
 21420  0128FC  D00D               	goto	l11418
 21421                           
 21422                           ;drv_mrf_miwi_89xa.c: 976: {
 21423                           ;drv_mrf_miwi_89xa.c: 977: RxPacket[i].flags.Val = 0;
 21424  0128FE  0100               	movlb	0	; () banked
 21425  012900  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21426  012902  0D42               	mullw	66
 21427  012904  0E50               	movlw	low _RxPacket
 21428  012906  24F3               	addwf	prodl,w,c
 21429  012908  6ED9               	movwf	fsr2l,c
 21430  01290A  0E03               	movlw	high _RxPacket
 21431  01290C  20F4               	addwfc	prodh,w,c
 21432  01290E  6EDA               	movwf	fsr2h,c
 21433  012910  0E00               	movlw	0
 21434  012912  6EDF               	movwf	indf2,c
 21435                           
 21436                           ; BSR set to: 0
 21437                           ;drv_mrf_miwi_89xa.c: 978: return 0;
 21438  012914  0E00               	movlw	0
 21439                           
 21440                           ; BSR set to: 0
 21441  012916  0012               	return	
 21442  012918                     l11418:
 21443                           
 21444                           ;drv_mrf_miwi_89xa.c: 979: }
 21445                           ;drv_mrf_miwi_89xa.c: 996: MACRxPacket.PayloadLen -= (PayloadIndex + 2);
 21446  012918  0100               	movlb	0	; () banked
 21447  01291A  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21448  01291C  0F02               	addlw	2
 21449  01291E  D002               	goto	L12
 21450  012920                     l11420:
 21451                           
 21452                           ; BSR set to: 0
 21453                           ;drv_mrf_miwi_89xa.c: 998: else
 21454                           ;drv_mrf_miwi_89xa.c: 999: {
 21455                           ;drv_mrf_miwi_89xa.c: 1000: MACRxPacket.PayloadLen -= PayloadIndex;
 21456  012920  0100               	movlb	0	; () banked
 21457  012922  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21458  012924                     L12:
 21459  012924  5E39               	subwf	_MACRxPacket+5,f,c
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;drv_mrf_miwi_89xa.c: 1001: }
 21463                           ;drv_mrf_miwi_89xa.c: 1009: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
 21464                           
 21465                           ; BSR set to: 0
 21466  012926  0100               	movlb	0	; () banked
 21467  012928  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21468  01292A  0D01               	mullw	1
 21469  01292C  0E01               	movlw	1
 21470  01292E  26F3               	addwf	prodl,f,c
 21471  012930  0E00               	movlw	0
 21472  012932  22F4               	addwfc	prodh,f,c
 21473  012934  0E50               	movlw	low _RxPacket
 21474  012936  0100               	movlb	0	; () banked
 21475  012938  6FB4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21476  01293A  0E03               	movlw	high _RxPacket
 21477  01293C  0100               	movlb	0	; () banked
 21478  01293E  6FB5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21479  012940  50F3               	movf	prodl,w,c
 21480  012942  0100               	movlb	0	; () banked
 21481  012944  27B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21482  012946  50F4               	movf	prodh,w,c
 21483  012948  0100               	movlb	0	; () banked
 21484  01294A  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21485  01294C  0100               	movlb	0	; () banked
 21486  01294E  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21487  012950  0D42               	mullw	66
 21488  012952  50F3               	movf	prodl,w,c
 21489  012954  0100               	movlb	0	; () banked
 21490  012956  25B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21491  012958  6E37               	movwf	_MACRxPacket+3,c
 21492  01295A  50F4               	movf	prodh,w,c
 21493  01295C  0100               	movlb	0	; () banked
 21494  01295E  21B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21495  012960  6E38               	movwf	_MACRxPacket+4,c
 21496                           
 21497                           ; BSR set to: 0
 21498                           ;drv_mrf_miwi_89xa.c: 1011: MACRxPacket.RSSIValue = RSSILock;
 21499  012962  C165  F03A         	movff	_RSSILock,_MACRxPacket+6
 21500                           
 21501                           ; BSR set to: 0
 21502                           ;drv_mrf_miwi_89xa.c: 1014: ReceivedBankIndex = i;
 21503  012966  C0C7  F045         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;drv_mrf_miwi_89xa.c: 1015: return 1;
 21507  01296A  0E01               	movlw	1
 21508                           
 21509                           ; BSR set to: 0
 21510  01296C  0012               	return	
 21511  01296E                     l11432:
 21512  01296E  0100               	movlb	0	; () banked
 21513  012970  2BC7               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 21514  012972  D649               	goto	l11334
 21515  012974                     l11436:
 21516                           
 21517                           ; BSR set to: 0
 21518                           ;drv_mrf_miwi_89xa.c: 1016: }
 21519                           ;drv_mrf_miwi_89xa.c: 1017: }
 21520                           ;drv_mrf_miwi_89xa.c: 1019: return 0;
 21521  012974  0E00               	movlw	0
 21522  012976  0012               	return	
 21523  012978                     __end_of_MiMAC_ReceivedPacket:
 21524                           	opt stack 0
 21525                           tblptru	equ	0xFF8
 21526                           tblptrh	equ	0xFF7
 21527                           tblptrl	equ	0xFF6
 21528                           tablat	equ	0xFF5
 21529                           prodh	equ	0xFF4
 21530                           prodl	equ	0xFF3
 21531                           intcon	equ	0xFF2
 21532                           intcon2	equ	0xFF1
 21533                           intcon3	equ	0xFF0
 21534                           indf0	equ	0xFEF
 21535                           postinc0	equ	0xFEE
 21536                           plusw0	equ	0xFEB
 21537                           fsr0h	equ	0xFEA
 21538                           fsr0l	equ	0xFE9
 21539                           wreg	equ	0xFE8
 21540                           indf1	equ	0xFE7
 21541                           postinc1	equ	0xFE6
 21542                           postdec1	equ	0xFE5
 21543                           fsr1h	equ	0xFE2
 21544                           fsr1l	equ	0xFE1
 21545                           indf2	equ	0xFDF
 21546                           postinc2	equ	0xFDE
 21547                           postdec2	equ	0xFDD
 21548                           plusw2	equ	0xFDB
 21549                           fsr2h	equ	0xFDA
 21550                           fsr2l	equ	0xFD9
 21551                           status	equ	0xFD8
 21552                           
 21553 ;; *************** function _isSameAddress *****************
 21554 ;; Defined at:
 21555 ;;		line 3442 in file "src/miwi/miwi_mesh.c"
 21556 ;; Parameters:    Size  Location     Type
 21557 ;;  Address1        2   33[BANK0 ] PTR unsigned char 
 21558 ;;		 -> ConnectionTable(90), 
 21559 ;;  Address2        2   35[BANK0 ] PTR unsigned char 
 21560 ;;		 -> NULL(0), RxPacket.Payload(64), RxPacket(132), 
 21561 ;; Auto vars:     Size  Location     Type
 21562 ;;  i               1   39[BANK0 ] unsigned char 
 21563 ;; Return value:  Size  Location     Type
 21564 ;;                  1    wreg      unsigned char 
 21565 ;; Registers used:
 21566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21567 ;; Tracked objects:
 21568 ;;		On entry : 0/0
 21569 ;;		On exit  : 0/0
 21570 ;;		Unchanged: 0/0
 21571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21572 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21575 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21576 ;;Total ram usage:        7 bytes
 21577 ;; Hardware stack levels used:    1
 21578 ;; Hardware stack levels required when called:    7
 21579 ;; This function calls:
 21580 ;;		Nothing
 21581 ;; This function is called by:
 21582 ;;		_MiMAC_ReceivedPacket
 21583 ;; This function uses a non-reentrant model
 21584 ;;
 21585                           
 21586                           	psect	text66
 21587  0166CC                     __ptext66:
 21588                           	opt stack 0
 21589  0166CC                     _isSameAddress:
 21590                           	opt stack 17
 21591                           
 21592                           ;miwi_mesh.c: 3444: uint8_t i;
 21593                           ;miwi_mesh.c: 3446: for(i = 0; i < 4; i++)
 21594                           
 21595                           ; BSR set to: 0
 21596                           ;incstack = 0
 21597  0166CC  0E00               	movlw	0
 21598  0166CE  0100               	movlb	0	; () banked
 21599  0166D0  6F87               	movwf	isSameAddress@i& (0+255),b
 21600  0166D2                     l11080:
 21601                           
 21602                           ; BSR set to: 0
 21603  0166D2  0E03               	movlw	3
 21604  0166D4  0100               	movlb	0	; () banked
 21605  0166D6  6587               	cpfsgt	isSameAddress@i& (0+255),b
 21606  0166D8  D001               	goto	l11084
 21607  0166DA  D01F               	goto	l11094
 21608  0166DC                     l11084:
 21609                           
 21610                           ; BSR set to: 0
 21611                           ;miwi_mesh.c: 3447: {
 21612                           ;miwi_mesh.c: 3448: if( Address1[i] != Address2[i] )
 21613  0166DC  0100               	movlb	0	; () banked
 21614  0166DE  5187               	movf	isSameAddress@i& (0+255),w,b
 21615  0166E0  0D01               	mullw	1
 21616  0166E2  50F3               	movf	prodl,w,c
 21617  0166E4  0100               	movlb	0	; () banked
 21618  0166E6  2583               	addwf	isSameAddress@Address2& (0+255),w,b
 21619  0166E8  6ED9               	movwf	fsr2l,c
 21620  0166EA  50F4               	movf	prodh,w,c
 21621  0166EC  0100               	movlb	0	; () banked
 21622  0166EE  2184               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 21623  0166F0  6EDA               	movwf	fsr2h,c
 21624  0166F2  0100               	movlb	0	; () banked
 21625  0166F4  5187               	movf	isSameAddress@i& (0+255),w,b
 21626  0166F6  0D01               	mullw	1
 21627  0166F8  50F3               	movf	prodl,w,c
 21628  0166FA  0100               	movlb	0	; () banked
 21629  0166FC  2581               	addwf	isSameAddress@Address1& (0+255),w,b
 21630  0166FE  6EE1               	movwf	fsr1l,c
 21631  016700  50F4               	movf	prodh,w,c
 21632  016702  0100               	movlb	0	; () banked
 21633  016704  2182               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 21634  016706  6EE2               	movwf	fsr1h,c
 21635  016708  50DE               	movf	postinc2,w,c
 21636  01670A  18E6               	xorwf	postinc1,w,c
 21637  01670C  B4D8               	btfsc	status,2,c
 21638  01670E  D002               	goto	l11090
 21639                           
 21640                           ; BSR set to: 0
 21641                           ;miwi_mesh.c: 3449: {
 21642                           ;miwi_mesh.c: 3450: return 0;
 21643  016710  0E00               	movlw	0
 21644                           
 21645                           ; BSR set to: 0
 21646  016712  0012               	return	
 21647  016714                     l11090:
 21648                           
 21649                           ; BSR set to: 0
 21650  016714  0100               	movlb	0	; () banked
 21651  016716  2B87               	incf	isSameAddress@i& (0+255),f,b
 21652  016718  D7DC               	goto	l11080
 21653  01671A                     l11094:
 21654                           
 21655                           ; BSR set to: 0
 21656                           ;miwi_mesh.c: 3451: }
 21657                           ;miwi_mesh.c: 3452: }
 21658                           ;miwi_mesh.c: 3453: return 1;
 21659  01671A  0E01               	movlw	1
 21660  01671C  0012               	return	
 21661  01671E                     __end_of_isSameAddress:
 21662                           	opt stack 0
 21663                           tblptru	equ	0xFF8
 21664                           tblptrh	equ	0xFF7
 21665                           tblptrl	equ	0xFF6
 21666                           tablat	equ	0xFF5
 21667                           prodh	equ	0xFF4
 21668                           prodl	equ	0xFF3
 21669                           intcon	equ	0xFF2
 21670                           intcon2	equ	0xFF1
 21671                           intcon3	equ	0xFF0
 21672                           indf0	equ	0xFEF
 21673                           postinc0	equ	0xFEE
 21674                           plusw0	equ	0xFEB
 21675                           fsr0h	equ	0xFEA
 21676                           fsr0l	equ	0xFE9
 21677                           wreg	equ	0xFE8
 21678                           indf1	equ	0xFE7
 21679                           postinc1	equ	0xFE6
 21680                           postdec1	equ	0xFE5
 21681                           fsr1h	equ	0xFE2
 21682                           fsr1l	equ	0xFE1
 21683                           indf2	equ	0xFDF
 21684                           postinc2	equ	0xFDE
 21685                           postdec2	equ	0xFDD
 21686                           plusw2	equ	0xFDB
 21687                           fsr2h	equ	0xFDA
 21688                           fsr2l	equ	0xFD9
 21689                           status	equ	0xFD8
 21690                           
 21691 ;; *************** function _MiWi_TickGet *****************
 21692 ;; Defined at:
 21693 ;;		line 104 in file "src/18F27J53/symbol.c"
 21694 ;; Parameters:    Size  Location     Type
 21695 ;;		None
 21696 ;; Auto vars:     Size  Location     Type
 21697 ;;  currentTime     4   39[BANK0 ] struct _MIWI_TICK
 21698 ;;  failureCount    1   38[BANK0 ] unsigned char 
 21699 ;; Return value:  Size  Location     Type
 21700 ;;                  4   33[BANK0 ] struct _MIWI_TICK
 21701 ;; Registers used:
 21702 ;;		wreg, status,2, status,0
 21703 ;; Tracked objects:
 21704 ;;		On entry : 0/0
 21705 ;;		On exit  : 0/0
 21706 ;;		Unchanged: 0/0
 21707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21708 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21709 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21711 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21712 ;;Total ram usage:       10 bytes
 21713 ;; Hardware stack levels used:    1
 21714 ;; Hardware stack levels required when called:    7
 21715 ;; This function calls:
 21716 ;;		Nothing
 21717 ;; This function is called by:
 21718 ;;		_TxPacket
 21719 ;;		_MiMAC_ReceivedPacket
 21720 ;;		_MiWiTasks
 21721 ;;		_OpenSocket
 21722 ;;		_MiApp_SearchConnection
 21723 ;;		_MiApp_EstablishConnection
 21724 ;;		_MiApp_UnicastAddress
 21725 ;;		_BroadcastJitter
 21726 ;;		_MiApp_UnicastConnection
 21727 ;; This function uses a non-reentrant model
 21728 ;;
 21729                           
 21730                           	psect	text67
 21731  0163AA                     __ptext67:
 21732                           	opt stack 0
 21733  0163AA                     _MiWi_TickGet:
 21734                           	opt stack 20
 21735                           
 21736                           ;symbol.c: 106: MIWI_TICK currentTime;
 21737                           ;symbol.c: 109: uint8_t failureCounter;
 21738                           ;symbol.c: 112: PIE1bits.TMR1IE = 0;
 21739                           
 21740                           ; BSR set to: 0
 21741                           ;incstack = 0
 21742  0163AA  909D               	bcf	3997,0,c	;volatile
 21743                           
 21744                           ;symbol.c: 115: currentTime.byte.b2 = 0;
 21745  0163AC  0E00               	movlw	0
 21746  0163AE  0100               	movlb	0	; () banked
 21747  0163B0  6F89               	movwf	(MiWi_TickGet@currentTime+2)& (0+255),b
 21748                           
 21749                           ;symbol.c: 116: currentTime.byte.b3 = 0;
 21750  0163B2  0E00               	movlw	0
 21751  0163B4  0100               	movlb	0	; () banked
 21752  0163B6  6F8A               	movwf	(MiWi_TickGet@currentTime+3)& (0+255),b
 21753                           
 21754                           ;symbol.c: 118: failureCounter = 0;
 21755  0163B8  0E00               	movlw	0
 21756  0163BA  0100               	movlb	0	; () banked
 21757  0163BC  6F86               	movwf	MiWi_TickGet@failureCounter& (0+255),b
 21758  0163BE                     l10816:
 21759                           
 21760                           ; BSR set to: 0
 21761                           ;symbol.c: 121: {
 21762                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 21763  0163BE  CFCE F087          	movff	4046,MiWi_TickGet@currentTime	;volatile
 21764                           
 21765                           ; BSR set to: 0
 21766                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 21767  0163C2  CFCF F088          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 21768                           
 21769                           ; BSR set to: 0
 21770                           ;symbol.c: 124: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 21771  0163C6  0100               	movlb	0	; () banked
 21772  0163C8  2987               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 21773  0163CA  E10D               	bnz	l62
 21774  0163CC  0100               	movlb	0	; () banked
 21775  0163CE  2988               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 21776  0163D0  A4D8               	btfss	status,2,c
 21777  0163D2  D009               	goto	l62
 21778                           
 21779                           ; BSR set to: 0
 21780  0163D4  0100               	movlb	0	; () banked
 21781  0163D6  2B86               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 21782  0163D8  0586               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 21783  0163DA  0100               	movlb	0	; () banked
 21784  0163DC  6F85               	movwf	??_MiWi_TickGet& (0+255),b
 21785  0163DE  0E02               	movlw	2
 21786  0163E0  0100               	movlb	0	; () banked
 21787  0163E2  6585               	cpfsgt	??_MiWi_TickGet& (0+255),b
 21788  0163E4  D7EC               	goto	l10816
 21789  0163E6                     l62:
 21790                           
 21791                           ; BSR set to: 0
 21792                           ;symbol.c: 128: if(PIR1bits.TMR1IF)
 21793  0163E6  A09E               	btfss	3998,0,c	;volatile
 21794  0163E8  D008               	goto	l10830
 21795                           
 21796                           ; BSR set to: 0
 21797                           ;symbol.c: 129: {
 21798                           ;symbol.c: 131: {
 21799                           ;symbol.c: 134: currentTime.byte.b2++;
 21800  0163EA  0100               	movlb	0	; () banked
 21801  0163EC  2B89               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 21802                           
 21803                           ; BSR set to: 0
 21804                           ;symbol.c: 135: if(timerExtension1 == 0xFF)
 21805  0163EE  0100               	movlb	0	; () banked
 21806  0163F0  29DA               	incf	_timerExtension1& (0+255),w,b	;volatile
 21807  0163F2  A4D8               	btfss	status,2,c
 21808  0163F4  D002               	goto	l10830
 21809                           
 21810                           ; BSR set to: 0
 21811                           ;symbol.c: 136: {
 21812                           ;symbol.c: 137: currentTime.byte.b3++;
 21813  0163F6  0100               	movlb	0	; () banked
 21814  0163F8  2B8A               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 21815  0163FA                     l10830:
 21816                           
 21817                           ; BSR set to: 0
 21818                           ;symbol.c: 138: }
 21819                           ;symbol.c: 139: }
 21820                           ;symbol.c: 140: }
 21821                           ;symbol.c: 143: currentTime.byte.b2 += timerExtension1;
 21822  0163FA  0100               	movlb	0	; () banked
 21823  0163FC  51DA               	movf	_timerExtension1& (0+255),w,b	;volatile
 21824  0163FE  0100               	movlb	0	; () banked
 21825  016400  2789               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 21826                           
 21827                           ; BSR set to: 0
 21828                           ;symbol.c: 144: currentTime.byte.b3 += timerExtension2;
 21829  016402  5049               	movf	_timerExtension2,w,c	;volatile
 21830  016404  0100               	movlb	0	; () banked
 21831  016406  278A               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 21832                           
 21833                           ; BSR set to: 0
 21834                           ;symbol.c: 147: PIE1bits.TMR1IE = 1;
 21835  016408  809D               	bsf	3997,0,c	;volatile
 21836                           
 21837                           ; BSR set to: 0
 21838                           ;symbol.c: 149: return currentTime;
 21839  01640A  C087  F081         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 21840  01640E  C088  F082         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 21841  016412  C089  F083         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 21842  016416  C08A  F084         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 21843  01641A  0012               	return	
 21844  01641C                     __end_of_MiWi_TickGet:
 21845                           	opt stack 0
 21846                           tblptru	equ	0xFF8
 21847                           tblptrh	equ	0xFF7
 21848                           tblptrl	equ	0xFF6
 21849                           tablat	equ	0xFF5
 21850                           prodh	equ	0xFF4
 21851                           prodl	equ	0xFF3
 21852                           intcon	equ	0xFF2
 21853                           intcon2	equ	0xFF1
 21854                           intcon3	equ	0xFF0
 21855                           indf0	equ	0xFEF
 21856                           postinc0	equ	0xFEE
 21857                           plusw0	equ	0xFEB
 21858                           fsr0h	equ	0xFEA
 21859                           fsr0l	equ	0xFE9
 21860                           wreg	equ	0xFE8
 21861                           indf1	equ	0xFE7
 21862                           postinc1	equ	0xFE6
 21863                           postdec1	equ	0xFE5
 21864                           fsr1h	equ	0xFE2
 21865                           fsr1l	equ	0xFE1
 21866                           indf2	equ	0xFDF
 21867                           postinc2	equ	0xFDE
 21868                           postdec2	equ	0xFDD
 21869                           plusw2	equ	0xFDB
 21870                           fsr2h	equ	0xFDA
 21871                           fsr2l	equ	0xFD9
 21872                           status	equ	0xFD8
 21873                           
 21874 ;; *************** function _CCM_Dec *****************
 21875 ;; Defined at:
 21876 ;;		line 299 in file "src/miwi/drv_mrf_miwi_security.c"
 21877 ;; Parameters:    Size  Location     Type
 21878 ;;  text            2   69[BANK0 ] PTR unsigned char 
 21879 ;;		 -> RxPacket.Payload(64), RxPacket(132), 
 21880 ;;  headerLen       1   71[BANK0 ] unsigned char 
 21881 ;;  payloadLen      1   72[BANK0 ] unsigned char 
 21882 ;;  key             2   73[BANK0 ] PTR unsigned char 
 21883 ;;		 -> key(8), 
 21884 ;; Auto vars:     Size  Location     Type
 21885 ;;  i               1   83[BANK0 ] unsigned char 
 21886 ;; Return value:  Size  Location     Type
 21887 ;;                  1    wreg      unsigned char 
 21888 ;; Registers used:
 21889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21890 ;; Tracked objects:
 21891 ;;		On entry : 0/0
 21892 ;;		On exit  : 0/0
 21893 ;;		Unchanged: 0/0
 21894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21895 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21896 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21897 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21898 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21899 ;;Total ram usage:       15 bytes
 21900 ;; Hardware stack levels used:    1
 21901 ;; Hardware stack levels required when called:    9
 21902 ;; This function calls:
 21903 ;;		_CBC_MAC
 21904 ;;		_CTR
 21905 ;; This function is called by:
 21906 ;;		_MiMAC_ReceivedPacket
 21907 ;; This function uses a non-reentrant model
 21908 ;;
 21909                           
 21910                           	psect	text68
 21911  014580                     __ptext68:
 21912                           	opt stack 0
 21913  014580                     _CCM_Dec:
 21914                           	opt stack 15
 21915                           
 21916                           ;drv_mrf_miwi_security.c: 301: uint8_t i;
 21917                           ;drv_mrf_miwi_security.c: 308: for(i = 0; i < 4-1; i++)
 21918                           
 21919                           ; BSR set to: 0
 21920                           ;incstack = 0
 21921  014580  0E00               	movlw	0
 21922  014582  0100               	movlb	0	; () banked
 21923  014584  6FB3               	movwf	CCM_Dec@i& (0+255),b
 21924  014586                     l11100:
 21925                           
 21926                           ; BSR set to: 0
 21927  014586  0E02               	movlw	2
 21928  014588  0100               	movlb	0	; () banked
 21929  01458A  65B3               	cpfsgt	CCM_Dec@i& (0+255),b
 21930  01458C  D001               	goto	l11104
 21931  01458E  D02D               	goto	l11114
 21932  014590                     l11104:
 21933                           
 21934                           ; BSR set to: 0
 21935                           ;drv_mrf_miwi_security.c: 309: {
 21936                           ;drv_mrf_miwi_security.c: 310: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 21937  014590  0100               	movlb	0	; () banked
 21938  014592  51A7               	movf	CCM_Dec@headerLen& (0+255),w,b
 21939  014594  0100               	movlb	0	; () banked
 21940  014596  5DB3               	subwf	CCM_Dec@i& (0+255),w,b
 21941  014598  A0D8               	btfss	status,0,c
 21942  01459A  D006               	goto	l11108
 21943                           
 21944                           ; BSR set to: 0
 21945  01459C  0E00               	movlw	0
 21946  01459E  0100               	movlb	0	; () banked
 21947  0145A0  6FB2               	movwf	(_CCM_Dec$2093+1)& (0+255),b
 21948  0145A2  0E00               	movlw	0
 21949  0145A4  6FB1               	movwf	_CCM_Dec$2093& (0+255),b
 21950  0145A6  D013               	goto	l477
 21951  0145A8                     l11108:
 21952                           
 21953                           ; BSR set to: 0
 21954  0145A8  0100               	movlb	0	; () banked
 21955  0145AA  51B3               	movf	CCM_Dec@i& (0+255),w,b
 21956  0145AC  0D01               	mullw	1
 21957  0145AE  50F3               	movf	prodl,w,c
 21958  0145B0  0100               	movlb	0	; () banked
 21959  0145B2  25A5               	addwf	CCM_Dec@text& (0+255),w,b
 21960  0145B4  6ED9               	movwf	fsr2l,c
 21961  0145B6  50F4               	movf	prodh,w,c
 21962  0145B8  0100               	movlb	0	; () banked
 21963  0145BA  21A6               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 21964  0145BC  6EDA               	movwf	fsr2h,c
 21965  0145BE  50DF               	movf	indf2,w,c
 21966  0145C0  0100               	movlb	0	; () banked
 21967  0145C2  6FAB               	movwf	??_CCM_Dec& (0+255),b
 21968  0145C4  0100               	movlb	0	; () banked
 21969  0145C6  51AB               	movf	??_CCM_Dec& (0+255),w,b
 21970  0145C8  0100               	movlb	0	; () banked
 21971  0145CA  6FB1               	movwf	_CCM_Dec$2093& (0+255),b
 21972  0145CC  6BB2               	clrf	(_CCM_Dec$2093+1)& (0+255),b
 21973  0145CE                     l477:
 21974                           
 21975                           ; BSR set to: 0
 21976  0145CE  0100               	movlb	0	; () banked
 21977  0145D0  51B3               	movf	CCM_Dec@i& (0+255),w,b
 21978  0145D2  0D01               	mullw	1
 21979  0145D4  0ECC               	movlw	low _tmpBlock
 21980  0145D6  24F3               	addwf	prodl,w,c
 21981  0145D8  6ED9               	movwf	fsr2l,c
 21982  0145DA  0E01               	movlw	high _tmpBlock
 21983  0145DC  20F4               	addwfc	prodh,w,c
 21984  0145DE  6EDA               	movwf	fsr2h,c
 21985  0145E0  C0B1  FFDF         	movff	_CCM_Dec$2093,indf2
 21986                           
 21987                           ; BSR set to: 0
 21988  0145E4  0100               	movlb	0	; () banked
 21989  0145E6  2BB3               	incf	CCM_Dec@i& (0+255),f,b
 21990  0145E8  D7CE               	goto	l11100
 21991  0145EA                     l11114:
 21992                           
 21993                           ; BSR set to: 0
 21994                           ;drv_mrf_miwi_security.c: 311: }
 21995                           ;drv_mrf_miwi_security.c: 312: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
 21996  0145EA  0100               	movlb	0	; () banked
 21997  0145EC  51A7               	movf	CCM_Dec@headerLen& (0+255),w,b
 21998  0145EE  0D01               	mullw	1
 21999  0145F0  50F3               	movf	prodl,w,c
 22000  0145F2  0100               	movlb	0	; () banked
 22001  0145F4  25A5               	addwf	CCM_Dec@text& (0+255),w,b
 22002  0145F6  0100               	movlb	0	; () banked
 22003  0145F8  6F98               	movwf	CTR@text& (0+255),b
 22004  0145FA  50F4               	movf	prodh,w,c
 22005  0145FC  0100               	movlb	0	; () banked
 22006  0145FE  21A6               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 22007  014600  0100               	movlb	0	; () banked
 22008  014602  6F99               	movwf	(CTR@text+1)& (0+255),b
 22009  014604  C0A8  F09A         	movff	CCM_Dec@payloadLen,CTR@len
 22010  014608  C0A9  F09B         	movff	CCM_Dec@key,CTR@key
 22011  01460C  C0AA  F09C         	movff	CCM_Dec@key+1,CTR@key+1
 22012  014610  0ECC               	movlw	low _tmpBlock
 22013  014612  0100               	movlb	0	; () banked
 22014  014614  6F9D               	movwf	CTR@nounce& (0+255),b
 22015  014616  0E01               	movlw	high _tmpBlock
 22016  014618  0100               	movlb	0	; () banked
 22017  01461A  6F9E               	movwf	(CTR@nounce+1)& (0+255),b
 22018  01461C  EC28  F0A7         	call	_CTR	;wreg free
 22019                           
 22020                           ;drv_mrf_miwi_security.c: 314: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmpBlock
      +                          );
 22021  014620  C0A5  F098         	movff	CCM_Dec@text,CBC_MAC@text
 22022  014624  C0A6  F099         	movff	CCM_Dec@text+1,CBC_MAC@text+1
 22023  014628  0100               	movlb	0	; () banked
 22024  01462A  51A7               	movf	CCM_Dec@headerLen& (0+255),w,b
 22025  01462C  0100               	movlb	0	; () banked
 22026  01462E  25A8               	addwf	CCM_Dec@payloadLen& (0+255),w,b
 22027  014630  0FFE               	addlw	254
 22028  014632  0100               	movlb	0	; () banked
 22029  014634  6F9A               	movwf	CBC_MAC@len& (0+255),b
 22030  014636  C0A9  F09B         	movff	CCM_Dec@key,CBC_MAC@key
 22031  01463A  C0AA  F09C         	movff	CCM_Dec@key+1,CBC_MAC@key+1
 22032  01463E  0ECC               	movlw	low _tmpBlock
 22033  014640  0100               	movlb	0	; () banked
 22034  014642  6F9D               	movwf	CBC_MAC@MIC& (0+255),b
 22035  014644  0E01               	movlw	high _tmpBlock
 22036  014646  0100               	movlb	0	; () banked
 22037  014648  6F9E               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 22038  01464A  EC5B  F0A9         	call	_CBC_MAC	;wreg free
 22039                           
 22040                           ;drv_mrf_miwi_security.c: 315: for(i = 0; i < 2; i++)
 22041  01464E  0E00               	movlw	0
 22042  014650  0100               	movlb	0	; () banked
 22043  014652  6FB3               	movwf	CCM_Dec@i& (0+255),b
 22044  014654                     l11120:
 22045                           
 22046                           ; BSR set to: 0
 22047  014654  0E01               	movlw	1
 22048  014656  0100               	movlb	0	; () banked
 22049  014658  65B3               	cpfsgt	CCM_Dec@i& (0+255),b
 22050  01465A  D001               	goto	l11124
 22051  01465C  D03A               	goto	l11134
 22052  01465E                     l11124:
 22053                           
 22054                           ; BSR set to: 0
 22055                           ;drv_mrf_miwi_security.c: 316: {
 22056                           ;drv_mrf_miwi_security.c: 317: if( tmpBlock[i] != text[headerLen + payloadLen - 2 + i] )
 22057  01465E  0EFE               	movlw	254
 22058  014660  0100               	movlb	0	; () banked
 22059  014662  6FAB               	movwf	??_CCM_Dec& (0+255),b
 22060  014664  0EFF               	movlw	255
 22061  014666  0100               	movlb	0	; () banked
 22062  014668  6FAC               	movwf	(??_CCM_Dec+1)& (0+255),b
 22063  01466A  0100               	movlb	0	; () banked
 22064  01466C  51A8               	movf	CCM_Dec@payloadLen& (0+255),w,b
 22065  01466E  C0A7  F0AD         	movff	CCM_Dec@headerLen,??_CCM_Dec+2
 22066  014672  0100               	movlb	0	; () banked
 22067  014674  6BAE               	clrf	(??_CCM_Dec+3)& (0+255),b
 22068  014676  0100               	movlb	0	; () banked
 22069  014678  27AD               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22070  01467A  0E00               	movlw	0
 22071  01467C  23AE               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22072  01467E  0100               	movlb	0	; () banked
 22073  014680  51B3               	movf	CCM_Dec@i& (0+255),w,b
 22074  014682  0100               	movlb	0	; () banked
 22075  014684  27AD               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22076  014686  0E00               	movlw	0
 22077  014688  23AE               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22078  01468A  0100               	movlb	0	; () banked
 22079  01468C  51AB               	movf	??_CCM_Dec& (0+255),w,b
 22080  01468E  0100               	movlb	0	; () banked
 22081  014690  27AD               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22082  014692  0100               	movlb	0	; () banked
 22083  014694  51AC               	movf	(??_CCM_Dec+1)& (0+255),w,b
 22084  014696  0100               	movlb	0	; () banked
 22085  014698  23AE               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22086  01469A  0100               	movlb	0	; () banked
 22087  01469C  51AD               	movf	(??_CCM_Dec+2)& (0+255),w,b
 22088  01469E  0100               	movlb	0	; () banked
 22089  0146A0  25A5               	addwf	CCM_Dec@text& (0+255),w,b
 22090  0146A2  6ED9               	movwf	fsr2l,c
 22091  0146A4  0100               	movlb	0	; () banked
 22092  0146A6  51AE               	movf	(??_CCM_Dec+3)& (0+255),w,b
 22093  0146A8  0100               	movlb	0	; () banked
 22094  0146AA  21A6               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 22095  0146AC  6EDA               	movwf	fsr2h,c
 22096  0146AE  0100               	movlb	0	; () banked
 22097  0146B0  51B3               	movf	CCM_Dec@i& (0+255),w,b
 22098  0146B2  0D01               	mullw	1
 22099  0146B4  0ECC               	movlw	low _tmpBlock
 22100  0146B6  24F3               	addwf	prodl,w,c
 22101  0146B8  6EE1               	movwf	fsr1l,c
 22102  0146BA  0E01               	movlw	high _tmpBlock
 22103  0146BC  20F4               	addwfc	prodh,w,c
 22104  0146BE  6EE2               	movwf	fsr1h,c
 22105  0146C0  50DE               	movf	postinc2,w,c
 22106  0146C2  18E6               	xorwf	postinc1,w,c
 22107  0146C4  B4D8               	btfsc	status,2,c
 22108  0146C6  D002               	goto	l11130
 22109                           
 22110                           ; BSR set to: 0
 22111                           ;drv_mrf_miwi_security.c: 318: {
 22112                           ;drv_mrf_miwi_security.c: 322: return 0;
 22113  0146C8  0E00               	movlw	0
 22114                           
 22115                           ; BSR set to: 0
 22116  0146CA  0012               	return	
 22117  0146CC                     l11130:
 22118                           
 22119                           ; BSR set to: 0
 22120  0146CC  0100               	movlb	0	; () banked
 22121  0146CE  2BB3               	incf	CCM_Dec@i& (0+255),f,b
 22122  0146D0  D7C1               	goto	l11120
 22123  0146D2                     l11134:
 22124                           
 22125                           ; BSR set to: 0
 22126                           ;drv_mrf_miwi_security.c: 323: }
 22127                           ;drv_mrf_miwi_security.c: 324: }
 22128                           ;drv_mrf_miwi_security.c: 328: return 1;
 22129  0146D2  0E01               	movlw	1
 22130  0146D4  0012               	return	
 22131  0146D6                     __end_of_CCM_Dec:
 22132                           	opt stack 0
 22133                           tblptru	equ	0xFF8
 22134                           tblptrh	equ	0xFF7
 22135                           tblptrl	equ	0xFF6
 22136                           tablat	equ	0xFF5
 22137                           prodh	equ	0xFF4
 22138                           prodl	equ	0xFF3
 22139                           intcon	equ	0xFF2
 22140                           intcon2	equ	0xFF1
 22141                           intcon3	equ	0xFF0
 22142                           indf0	equ	0xFEF
 22143                           postinc0	equ	0xFEE
 22144                           plusw0	equ	0xFEB
 22145                           fsr0h	equ	0xFEA
 22146                           fsr0l	equ	0xFE9
 22147                           wreg	equ	0xFE8
 22148                           indf1	equ	0xFE7
 22149                           postinc1	equ	0xFE6
 22150                           postdec1	equ	0xFE5
 22151                           fsr1h	equ	0xFE2
 22152                           fsr1l	equ	0xFE1
 22153                           indf2	equ	0xFDF
 22154                           postinc2	equ	0xFDE
 22155                           postdec2	equ	0xFDD
 22156                           plusw2	equ	0xFDB
 22157                           fsr2h	equ	0xFDA
 22158                           fsr2l	equ	0xFD9
 22159                           status	equ	0xFD8
 22160                           
 22161 ;; *************** function _CTR *****************
 22162 ;; Defined at:
 22163 ;;		line 118 in file "src/miwi/drv_mrf_miwi_security.c"
 22164 ;; Parameters:    Size  Location     Type
 22165 ;;  text            2   56[BANK0 ] PTR unsigned char 
 22166 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 22167 ;;  len             1   58[BANK0 ] unsigned char 
 22168 ;;  key             2   59[BANK0 ] PTR unsigned char 
 22169 ;;		 -> key(8), 
 22170 ;;  nounce          2   61[BANK0 ] PTR unsigned char 
 22171 ;;		 -> tmpBlock(4), 
 22172 ;; Auto vars:     Size  Location     Type
 22173 ;;  j               1   68[BANK0 ] unsigned char 
 22174 ;;  i               1   67[BANK0 ] unsigned char 
 22175 ;;  block           1   66[BANK0 ] unsigned char 
 22176 ;; Return value:  Size  Location     Type
 22177 ;;		None               void
 22178 ;; Registers used:
 22179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22180 ;; Tracked objects:
 22181 ;;		On entry : 0/0
 22182 ;;		On exit  : 0/0
 22183 ;;		Unchanged: 0/0
 22184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22185 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22186 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22187 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22188 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22189 ;;Total ram usage:       13 bytes
 22190 ;; Hardware stack levels used:    1
 22191 ;; Hardware stack levels required when called:    8
 22192 ;; This function calls:
 22193 ;;		___awdiv
 22194 ;;		_encode
 22195 ;; This function is called by:
 22196 ;;		_CCM_Enc
 22197 ;;		_CCM_Dec
 22198 ;; This function uses a non-reentrant model
 22199 ;;
 22200                           
 22201                           	psect	text69
 22202  014E50                     __ptext69:
 22203                           	opt stack 0
 22204  014E50                     _CTR:
 22205                           	opt stack 17
 22206                           
 22207                           ;drv_mrf_miwi_security.c: 120: uint8_t block = len/4+1;
 22208                           
 22209                           ; BSR set to: 0
 22210                           ;incstack = 0
 22211  014E50  C09A  F081         	movff	CTR@len,___awdiv@dividend
 22212  014E54  0100               	movlb	0	; () banked
 22213  014E56  6B82               	clrf	(___awdiv@dividend+1)& (0+255),b
 22214  014E58  0E00               	movlw	0
 22215  014E5A  0100               	movlb	0	; () banked
 22216  014E5C  6F84               	movwf	(___awdiv@divisor+1)& (0+255),b
 22217  014E5E  0E04               	movlw	4
 22218  014E60  6F83               	movwf	___awdiv@divisor& (0+255),b
 22219  014E62  ECF4  F0AC         	call	___awdiv	;wreg free
 22220  014E66  0100               	movlb	0	; () banked
 22221  014E68  2981               	incf	?___awdiv& (0+255),w,b
 22222  014E6A  0100               	movlb	0	; () banked
 22223  014E6C  6FA2               	movwf	CTR@block& (0+255),b
 22224                           
 22225                           ; BSR set to: 0
 22226                           ;drv_mrf_miwi_security.c: 121: uint8_t i, j;
 22227                           ;drv_mrf_miwi_security.c: 128: for(i = 0; i < block; i++)
 22228  014E6E  0E00               	movlw	0
 22229  014E70  0100               	movlb	0	; () banked
 22230  014E72  6FA3               	movwf	CTR@i& (0+255),b
 22231  014E74  D076               	goto	l10930
 22232  014E76                     l10898:
 22233                           
 22234                           ; BSR set to: 0
 22235                           ;drv_mrf_miwi_security.c: 129: {
 22236                           ;drv_mrf_miwi_security.c: 130: for(j = 0; j < 4-1; j++)
 22237  014E76  0E00               	movlw	0
 22238  014E78  0100               	movlb	0	; () banked
 22239  014E7A  6FA4               	movwf	CTR@j& (0+255),b
 22240  014E7C                     l10900:
 22241                           
 22242                           ; BSR set to: 0
 22243  014E7C  0E02               	movlw	2
 22244  014E7E  0100               	movlb	0	; () banked
 22245  014E80  65A4               	cpfsgt	CTR@j& (0+255),b
 22246  014E82  D001               	goto	l10904
 22247  014E84  D019               	goto	l442
 22248  014E86                     l10904:
 22249                           
 22250                           ; BSR set to: 0
 22251                           ;drv_mrf_miwi_security.c: 131: {
 22252                           ;drv_mrf_miwi_security.c: 132: tmpBlock[j] = nounce[j];
 22253  014E86  0100               	movlb	0	; () banked
 22254  014E88  51A4               	movf	CTR@j& (0+255),w,b
 22255  014E8A  0D01               	mullw	1
 22256  014E8C  50F3               	movf	prodl,w,c
 22257  014E8E  0100               	movlb	0	; () banked
 22258  014E90  259D               	addwf	CTR@nounce& (0+255),w,b
 22259  014E92  6ED9               	movwf	fsr2l,c
 22260  014E94  50F4               	movf	prodh,w,c
 22261  014E96  0100               	movlb	0	; () banked
 22262  014E98  219E               	addwfc	(CTR@nounce+1)& (0+255),w,b
 22263  014E9A  6EDA               	movwf	fsr2h,c
 22264  014E9C  0100               	movlb	0	; () banked
 22265  014E9E  51A4               	movf	CTR@j& (0+255),w,b
 22266  014EA0  0D01               	mullw	1
 22267  014EA2  0ECC               	movlw	low _tmpBlock
 22268  014EA4  24F3               	addwf	prodl,w,c
 22269  014EA6  6EE1               	movwf	fsr1l,c
 22270  014EA8  0E01               	movlw	high _tmpBlock
 22271  014EAA  20F4               	addwfc	prodh,w,c
 22272  014EAC  6EE2               	movwf	fsr1h,c
 22273  014EAE  CFDF FFE7          	movff	indf2,indf1
 22274                           
 22275                           ; BSR set to: 0
 22276  014EB2  0100               	movlb	0	; () banked
 22277  014EB4  2BA4               	incf	CTR@j& (0+255),f,b
 22278  014EB6  D7E2               	goto	l10900
 22279  014EB8                     l442:
 22280                           
 22281                           ; BSR set to: 0
 22282                           ;drv_mrf_miwi_security.c: 133: }
 22283                           ;drv_mrf_miwi_security.c: 134: tmpBlock[4-1] = i;
 22284  014EB8  C0A3  F1CF         	movff	CTR@i,_tmpBlock+3
 22285                           
 22286                           ; BSR set to: 0
 22287                           ;drv_mrf_miwi_security.c: 135: encode((uint16_t *)tmpBlock, (uint16_t *)key);
 22288  014EBC  0ECC               	movlw	low _tmpBlock
 22289  014EBE  0100               	movlb	0	; () banked
 22290  014EC0  6F81               	movwf	encode@text& (0+255),b
 22291  014EC2  0E01               	movlw	high _tmpBlock
 22292  014EC4  0100               	movlb	0	; () banked
 22293  014EC6  6F82               	movwf	(encode@text+1)& (0+255),b
 22294  014EC8  C09B  F083         	movff	CTR@key,encode@key
 22295  014ECC  C09C  F084         	movff	CTR@key+1,encode@key+1
 22296  014ED0  EC12  F09C         	call	_encode	;wreg free
 22297                           
 22298                           ;drv_mrf_miwi_security.c: 136: for(j = 0; j < 4; j++)
 22299  014ED4  0E00               	movlw	0
 22300  014ED6  0100               	movlb	0	; () banked
 22301  014ED8  6FA4               	movwf	CTR@j& (0+255),b
 22302  014EDA                     l10914:
 22303                           
 22304                           ; BSR set to: 0
 22305  014EDA  0E03               	movlw	3
 22306  014EDC  0100               	movlb	0	; () banked
 22307  014EDE  65A4               	cpfsgt	CTR@j& (0+255),b
 22308  014EE0  D001               	goto	l10918
 22309  014EE2  D03D               	goto	l10928
 22310  014EE4                     l10918:
 22311                           
 22312                           ; BSR set to: 0
 22313                           ;drv_mrf_miwi_security.c: 137: {
 22314                           ;drv_mrf_miwi_security.c: 138: if( (i * 4 + j) >= len )
 22315  014EE4  0100               	movlb	0	; () banked
 22316  014EE6  519A               	movf	CTR@len& (0+255),w,b
 22317  014EE8  0100               	movlb	0	; () banked
 22318  014EEA  6F9F               	movwf	??_CTR& (0+255),b
 22319  014EEC  6BA0               	clrf	(??_CTR+1)& (0+255),b
 22320  014EEE  0100               	movlb	0	; () banked
 22321  014EF0  51A3               	movf	CTR@i& (0+255),w,b
 22322  014EF2  0D04               	mullw	4
 22323  014EF4  0100               	movlb	0	; () banked
 22324  014EF6  51A4               	movf	CTR@j& (0+255),w,b
 22325  014EF8  26F3               	addwf	prodl,f,c
 22326  014EFA  0E00               	movlw	0
 22327  014EFC  22F4               	addwfc	prodh,f,c
 22328  014EFE  0100               	movlb	0	; () banked
 22329  014F00  519F               	movf	??_CTR& (0+255),w,b
 22330  014F02  5CF3               	subwf	prodl,w,c
 22331  014F04  50F4               	movf	prodh,w,c
 22332  014F06  0A80               	xorlw	128
 22333  014F08  0100               	movlb	0	; () banked
 22334  014F0A  6FA1               	movwf	(??_CTR+2)& (0+255),b
 22335  014F0C  0100               	movlb	0	; () banked
 22336  014F0E  51A0               	movf	(??_CTR+1)& (0+255),w,b
 22337  014F10  0A80               	xorlw	128
 22338  014F12  0100               	movlb	0	; () banked
 22339  014F14  59A1               	subwfb	(??_CTR+2)& (0+255),w,b
 22340  014F16  B0D8               	btfsc	status,0,c
 22341  014F18  D022               	goto	l10928
 22342                           
 22343                           ; BSR set to: 0
 22344                           ;drv_mrf_miwi_security.c: 141: }
 22345                           ;drv_mrf_miwi_security.c: 142: text[i * 4 + j] ^= tmpBlock[j];
 22346                           
 22347                           ; BSR set to: 0
 22348                           
 22349                           ; BSR set to: 0
 22350                           ;drv_mrf_miwi_security.c: 139: {
 22351                           ;drv_mrf_miwi_security.c: 140: break;
 22352  014F1A  0100               	movlb	0	; () banked
 22353  014F1C  51A4               	movf	CTR@j& (0+255),w,b
 22354  014F1E  0D01               	mullw	1
 22355  014F20  0ECC               	movlw	low _tmpBlock
 22356  014F22  24F3               	addwf	prodl,w,c
 22357  014F24  6ED9               	movwf	fsr2l,c
 22358  014F26  0E01               	movlw	high _tmpBlock
 22359  014F28  20F4               	addwfc	prodh,w,c
 22360  014F2A  6EDA               	movwf	fsr2h,c
 22361  014F2C  50DF               	movf	indf2,w,c
 22362  014F2E  0100               	movlb	0	; () banked
 22363  014F30  6F9F               	movwf	??_CTR& (0+255),b
 22364  014F32  0100               	movlb	0	; () banked
 22365  014F34  51A3               	movf	CTR@i& (0+255),w,b
 22366  014F36  0D04               	mullw	4
 22367  014F38  0100               	movlb	0	; () banked
 22368  014F3A  51A4               	movf	CTR@j& (0+255),w,b
 22369  014F3C  26F3               	addwf	prodl,f,c
 22370  014F3E  0E00               	movlw	0
 22371  014F40  22F4               	addwfc	prodh,f,c
 22372  014F42  50F3               	movf	prodl,w,c
 22373  014F44  0100               	movlb	0	; () banked
 22374  014F46  2598               	addwf	CTR@text& (0+255),w,b
 22375  014F48  6ED9               	movwf	fsr2l,c
 22376  014F4A  50F4               	movf	prodh,w,c
 22377  014F4C  0100               	movlb	0	; () banked
 22378  014F4E  2199               	addwfc	(CTR@text+1)& (0+255),w,b
 22379  014F50  6EDA               	movwf	fsr2h,c
 22380  014F52  0100               	movlb	0	; () banked
 22381  014F54  519F               	movf	??_CTR& (0+255),w,b
 22382  014F56  1ADF               	xorwf	indf2,f,c
 22383                           
 22384                           ; BSR set to: 0
 22385  014F58  0100               	movlb	0	; () banked
 22386  014F5A  2BA4               	incf	CTR@j& (0+255),f,b
 22387  014F5C  D7BE               	goto	l10914
 22388  014F5E                     l10928:
 22389                           
 22390                           ; BSR set to: 0
 22391  014F5E  0100               	movlb	0	; () banked
 22392  014F60  2BA3               	incf	CTR@i& (0+255),f,b
 22393  014F62                     l10930:
 22394                           
 22395                           ; BSR set to: 0
 22396  014F62  0100               	movlb	0	; () banked
 22397  014F64  51A2               	movf	CTR@block& (0+255),w,b
 22398  014F66  0100               	movlb	0	; () banked
 22399  014F68  5DA3               	subwf	CTR@i& (0+255),w,b
 22400  014F6A  B0D8               	btfsc	status,0,c
 22401  014F6C  0012               	return	
 22402  014F6E  D783               	goto	l10898
 22403  014F70                     __end_of_CTR:
 22404                           	opt stack 0
 22405                           tblptru	equ	0xFF8
 22406                           tblptrh	equ	0xFF7
 22407                           tblptrl	equ	0xFF6
 22408                           tablat	equ	0xFF5
 22409                           prodh	equ	0xFF4
 22410                           prodl	equ	0xFF3
 22411                           intcon	equ	0xFF2
 22412                           intcon2	equ	0xFF1
 22413                           intcon3	equ	0xFF0
 22414                           indf0	equ	0xFEF
 22415                           postinc0	equ	0xFEE
 22416                           plusw0	equ	0xFEB
 22417                           fsr0h	equ	0xFEA
 22418                           fsr0l	equ	0xFE9
 22419                           wreg	equ	0xFE8
 22420                           indf1	equ	0xFE7
 22421                           postinc1	equ	0xFE6
 22422                           postdec1	equ	0xFE5
 22423                           fsr1h	equ	0xFE2
 22424                           fsr1l	equ	0xFE1
 22425                           indf2	equ	0xFDF
 22426                           postinc2	equ	0xFDE
 22427                           postdec2	equ	0xFDD
 22428                           plusw2	equ	0xFDB
 22429                           fsr2h	equ	0xFDA
 22430                           fsr2l	equ	0xFD9
 22431                           status	equ	0xFD8
 22432                           
 22433 ;; *************** function _CBC_MAC *****************
 22434 ;; Defined at:
 22435 ;;		line 175 in file "src/miwi/drv_mrf_miwi_security.c"
 22436 ;; Parameters:    Size  Location     Type
 22437 ;;  text            2   56[BANK0 ] PTR unsigned char 
 22438 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 22439 ;;  len             1   58[BANK0 ] unsigned char 
 22440 ;;  key             2   59[BANK0 ] PTR unsigned char 
 22441 ;;		 -> key(8), 
 22442 ;;  MIC             2   61[BANK0 ] PTR unsigned char 
 22443 ;;		 -> tmpBlock(4), 
 22444 ;; Auto vars:     Size  Location     Type
 22445 ;;  i               1   68[BANK0 ] unsigned char 
 22446 ;;  j               1   67[BANK0 ] unsigned char 
 22447 ;;  block           1   66[BANK0 ] unsigned char 
 22448 ;; Return value:  Size  Location     Type
 22449 ;;		None               void
 22450 ;; Registers used:
 22451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22452 ;; Tracked objects:
 22453 ;;		On entry : 0/0
 22454 ;;		On exit  : 0/0
 22455 ;;		Unchanged: 0/0
 22456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22457 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22458 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22459 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22460 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22461 ;;Total ram usage:       13 bytes
 22462 ;; Hardware stack levels used:    1
 22463 ;; Hardware stack levels required when called:    8
 22464 ;; This function calls:
 22465 ;;		___awdiv
 22466 ;;		_encode
 22467 ;; This function is called by:
 22468 ;;		_CCM_Enc
 22469 ;;		_CCM_Dec
 22470 ;; This function uses a non-reentrant model
 22471 ;;
 22472                           
 22473                           	psect	text70
 22474  0152B6                     __ptext70:
 22475                           	opt stack 0
 22476  0152B6                     _CBC_MAC:
 22477                           	opt stack 17
 22478                           
 22479                           ;drv_mrf_miwi_security.c: 180: uint8_t block = len / 4 + 1;
 22480                           
 22481                           ; BSR set to: 0
 22482                           ;incstack = 0
 22483  0152B6  C09A  F081         	movff	CBC_MAC@len,___awdiv@dividend
 22484  0152BA  0100               	movlb	0	; () banked
 22485  0152BC  6B82               	clrf	(___awdiv@dividend+1)& (0+255),b
 22486  0152BE  0E00               	movlw	0
 22487  0152C0  0100               	movlb	0	; () banked
 22488  0152C2  6F84               	movwf	(___awdiv@divisor+1)& (0+255),b
 22489  0152C4  0E04               	movlw	4
 22490  0152C6  6F83               	movwf	___awdiv@divisor& (0+255),b
 22491  0152C8  ECF4  F0AC         	call	___awdiv	;wreg free
 22492  0152CC  0100               	movlb	0	; () banked
 22493  0152CE  2981               	incf	?___awdiv& (0+255),w,b
 22494  0152D0  0100               	movlb	0	; () banked
 22495  0152D2  6FA2               	movwf	CBC_MAC@block& (0+255),b
 22496                           
 22497                           ; BSR set to: 0
 22498                           ;drv_mrf_miwi_security.c: 181: uint8_t i, j;
 22499                           ;drv_mrf_miwi_security.c: 188: for(i = 0; i < 4; i++)
 22500  0152D4  0E00               	movlw	0
 22501  0152D6  0100               	movlb	0	; () banked
 22502  0152D8  6FA4               	movwf	CBC_MAC@i& (0+255),b
 22503  0152DA                     l10936:
 22504                           
 22505                           ; BSR set to: 0
 22506  0152DA  0E03               	movlw	3
 22507  0152DC  0100               	movlb	0	; () banked
 22508  0152DE  65A4               	cpfsgt	CBC_MAC@i& (0+255),b
 22509  0152E0  D001               	goto	l10940
 22510  0152E2  D010               	goto	l10946
 22511  0152E4                     l10940:
 22512                           
 22513                           ; BSR set to: 0
 22514                           ;drv_mrf_miwi_security.c: 189: {
 22515                           ;drv_mrf_miwi_security.c: 190: MIC[i] = 0;
 22516  0152E4  0100               	movlb	0	; () banked
 22517  0152E6  51A4               	movf	CBC_MAC@i& (0+255),w,b
 22518  0152E8  0D01               	mullw	1
 22519  0152EA  50F3               	movf	prodl,w,c
 22520  0152EC  0100               	movlb	0	; () banked
 22521  0152EE  259D               	addwf	CBC_MAC@MIC& (0+255),w,b
 22522  0152F0  6ED9               	movwf	fsr2l,c
 22523  0152F2  50F4               	movf	prodh,w,c
 22524  0152F4  0100               	movlb	0	; () banked
 22525  0152F6  219E               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 22526  0152F8  6EDA               	movwf	fsr2h,c
 22527  0152FA  0E00               	movlw	0
 22528  0152FC  6EDF               	movwf	indf2,c
 22529                           
 22530                           ; BSR set to: 0
 22531  0152FE  0100               	movlb	0	; () banked
 22532  015300  2BA4               	incf	CBC_MAC@i& (0+255),f,b
 22533  015302  D7EB               	goto	l10936
 22534  015304                     l10946:
 22535                           
 22536                           ; BSR set to: 0
 22537                           ;drv_mrf_miwi_security.c: 191: }
 22538                           ;drv_mrf_miwi_security.c: 193: for(i = 0; i < block; i++)
 22539  015304  0E00               	movlw	0
 22540  015306  0100               	movlb	0	; () banked
 22541  015308  6FA4               	movwf	CBC_MAC@i& (0+255),b
 22542  01530A  D053               	goto	l10968
 22543  01530C                     l10948:
 22544                           
 22545                           ; BSR set to: 0
 22546                           ;drv_mrf_miwi_security.c: 194: {
 22547                           ;drv_mrf_miwi_security.c: 195: for(j = 0; j < 4; j++)
 22548  01530C  0E00               	movlw	0
 22549  01530E  0100               	movlb	0	; () banked
 22550  015310  6FA3               	movwf	CBC_MAC@j& (0+255),b
 22551  015312                     l10950:
 22552                           
 22553                           ; BSR set to: 0
 22554  015312  0E03               	movlw	3
 22555  015314  0100               	movlb	0	; () banked
 22556  015316  65A3               	cpfsgt	CBC_MAC@j& (0+255),b
 22557  015318  D001               	goto	l10954
 22558  01531A  D03F               	goto	l10964
 22559  01531C                     l10954:
 22560                           
 22561                           ; BSR set to: 0
 22562                           ;drv_mrf_miwi_security.c: 196: {
 22563                           ;drv_mrf_miwi_security.c: 197: if( (i * 4 + j) >= len )
 22564  01531C  0100               	movlb	0	; () banked
 22565  01531E  519A               	movf	CBC_MAC@len& (0+255),w,b
 22566  015320  0100               	movlb	0	; () banked
 22567  015322  6F9F               	movwf	??_CBC_MAC& (0+255),b
 22568  015324  6BA0               	clrf	(??_CBC_MAC+1)& (0+255),b
 22569  015326  0100               	movlb	0	; () banked
 22570  015328  51A4               	movf	CBC_MAC@i& (0+255),w,b
 22571  01532A  0D04               	mullw	4
 22572  01532C  0100               	movlb	0	; () banked
 22573  01532E  51A3               	movf	CBC_MAC@j& (0+255),w,b
 22574  015330  26F3               	addwf	prodl,f,c
 22575  015332  0E00               	movlw	0
 22576  015334  22F4               	addwfc	prodh,f,c
 22577  015336  0100               	movlb	0	; () banked
 22578  015338  519F               	movf	??_CBC_MAC& (0+255),w,b
 22579  01533A  5CF3               	subwf	prodl,w,c
 22580  01533C  50F4               	movf	prodh,w,c
 22581  01533E  0A80               	xorlw	128
 22582  015340  0100               	movlb	0	; () banked
 22583  015342  6FA1               	movwf	(??_CBC_MAC+2)& (0+255),b
 22584  015344  0100               	movlb	0	; () banked
 22585  015346  51A0               	movf	(??_CBC_MAC+1)& (0+255),w,b
 22586  015348  0A80               	xorlw	128
 22587  01534A  0100               	movlb	0	; () banked
 22588  01534C  59A1               	subwfb	(??_CBC_MAC+2)& (0+255),w,b
 22589  01534E  B0D8               	btfsc	status,0,c
 22590  015350  D024               	goto	l10964
 22591                           
 22592                           ; BSR set to: 0
 22593                           ;drv_mrf_miwi_security.c: 200: }
 22594                           ;drv_mrf_miwi_security.c: 201: MIC[j] ^= text[i * 4 + j];
 22595                           
 22596                           ; BSR set to: 0
 22597                           
 22598                           ; BSR set to: 0
 22599                           ;drv_mrf_miwi_security.c: 198: {
 22600                           ;drv_mrf_miwi_security.c: 199: break;
 22601  015352  0100               	movlb	0	; () banked
 22602  015354  51A4               	movf	CBC_MAC@i& (0+255),w,b
 22603  015356  0D04               	mullw	4
 22604  015358  0100               	movlb	0	; () banked
 22605  01535A  51A3               	movf	CBC_MAC@j& (0+255),w,b
 22606  01535C  26F3               	addwf	prodl,f,c
 22607  01535E  0E00               	movlw	0
 22608  015360  22F4               	addwfc	prodh,f,c
 22609  015362  50F3               	movf	prodl,w,c
 22610  015364  0100               	movlb	0	; () banked
 22611  015366  2598               	addwf	CBC_MAC@text& (0+255),w,b
 22612  015368  6ED9               	movwf	fsr2l,c
 22613  01536A  50F4               	movf	prodh,w,c
 22614  01536C  0100               	movlb	0	; () banked
 22615  01536E  2199               	addwfc	(CBC_MAC@text+1)& (0+255),w,b
 22616  015370  6EDA               	movwf	fsr2h,c
 22617  015372  50DF               	movf	indf2,w,c
 22618  015374  0100               	movlb	0	; () banked
 22619  015376  6F9F               	movwf	??_CBC_MAC& (0+255),b
 22620  015378  0100               	movlb	0	; () banked
 22621  01537A  51A3               	movf	CBC_MAC@j& (0+255),w,b
 22622  01537C  0D01               	mullw	1
 22623  01537E  50F3               	movf	prodl,w,c
 22624  015380  0100               	movlb	0	; () banked
 22625  015382  259D               	addwf	CBC_MAC@MIC& (0+255),w,b
 22626  015384  6ED9               	movwf	fsr2l,c
 22627  015386  50F4               	movf	prodh,w,c
 22628  015388  0100               	movlb	0	; () banked
 22629  01538A  219E               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 22630  01538C  6EDA               	movwf	fsr2h,c
 22631  01538E  0100               	movlb	0	; () banked
 22632  015390  519F               	movf	??_CBC_MAC& (0+255),w,b
 22633  015392  1ADF               	xorwf	indf2,f,c
 22634                           
 22635                           ; BSR set to: 0
 22636  015394  0100               	movlb	0	; () banked
 22637  015396  2BA3               	incf	CBC_MAC@j& (0+255),f,b
 22638  015398  D7BC               	goto	l10950
 22639  01539A                     l10964:
 22640                           
 22641                           ; BSR set to: 0
 22642                           ;drv_mrf_miwi_security.c: 202: }
 22643                           ;drv_mrf_miwi_security.c: 203: encode((uint16_t *)MIC, (uint16_t *)key);
 22644  01539A  C09D  F081         	movff	CBC_MAC@MIC,encode@text
 22645  01539E  C09E  F082         	movff	CBC_MAC@MIC+1,encode@text+1
 22646  0153A2  C09B  F083         	movff	CBC_MAC@key,encode@key
 22647  0153A6  C09C  F084         	movff	CBC_MAC@key+1,encode@key+1
 22648  0153AA  EC12  F09C         	call	_encode	;wreg free
 22649  0153AE  0100               	movlb	0	; () banked
 22650  0153B0  2BA4               	incf	CBC_MAC@i& (0+255),f,b
 22651  0153B2                     l10968:
 22652                           
 22653                           ; BSR set to: 0
 22654  0153B2  0100               	movlb	0	; () banked
 22655  0153B4  51A2               	movf	CBC_MAC@block& (0+255),w,b
 22656  0153B6  0100               	movlb	0	; () banked
 22657  0153B8  5DA4               	subwf	CBC_MAC@i& (0+255),w,b
 22658  0153BA  B0D8               	btfsc	status,0,c
 22659  0153BC  0012               	return	
 22660  0153BE  D7A6               	goto	l10948
 22661  0153C0                     __end_of_CBC_MAC:
 22662                           	opt stack 0
 22663                           tblptru	equ	0xFF8
 22664                           tblptrh	equ	0xFF7
 22665                           tblptrl	equ	0xFF6
 22666                           tablat	equ	0xFF5
 22667                           prodh	equ	0xFF4
 22668                           prodl	equ	0xFF3
 22669                           intcon	equ	0xFF2
 22670                           intcon2	equ	0xFF1
 22671                           intcon3	equ	0xFF0
 22672                           indf0	equ	0xFEF
 22673                           postinc0	equ	0xFEE
 22674                           plusw0	equ	0xFEB
 22675                           fsr0h	equ	0xFEA
 22676                           fsr0l	equ	0xFE9
 22677                           wreg	equ	0xFE8
 22678                           indf1	equ	0xFE7
 22679                           postinc1	equ	0xFE6
 22680                           postdec1	equ	0xFE5
 22681                           fsr1h	equ	0xFE2
 22682                           fsr1l	equ	0xFE1
 22683                           indf2	equ	0xFDF
 22684                           postinc2	equ	0xFDE
 22685                           postdec2	equ	0xFDD
 22686                           plusw2	equ	0xFDB
 22687                           fsr2h	equ	0xFDA
 22688                           fsr2l	equ	0xFD9
 22689                           status	equ	0xFD8
 22690                           
 22691 ;; *************** function _encode *****************
 22692 ;; Defined at:
 22693 ;;		line 77 in file "src/miwi/drv_mrf_miwi_security.c"
 22694 ;; Parameters:    Size  Location     Type
 22695 ;;  text            2   33[BANK0 ] PTR unsigned int 
 22696 ;;		 -> tmpBlock(4), 
 22697 ;;  key             2   35[BANK0 ] PTR unsigned int 
 22698 ;;		 -> key(8), 
 22699 ;; Auto vars:     Size  Location     Type
 22700 ;;  sum             2   54[BANK0 ] unsigned int 
 22701 ;;  part2           2   52[BANK0 ] unsigned int 
 22702 ;;  part1           2   50[BANK0 ] unsigned int 
 22703 ;;  delta           2   47[BANK0 ] unsigned int 
 22704 ;;  i               1   49[BANK0 ] unsigned char 
 22705 ;; Return value:  Size  Location     Type
 22706 ;;		None               void
 22707 ;; Registers used:
 22708 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22709 ;; Tracked objects:
 22710 ;;		On entry : 0/0
 22711 ;;		On exit  : 0/0
 22712 ;;		Unchanged: 0/0
 22713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22714 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22715 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22716 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22717 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22718 ;;Total ram usage:       23 bytes
 22719 ;; Hardware stack levels used:    1
 22720 ;; Hardware stack levels required when called:    7
 22721 ;; This function calls:
 22722 ;;		Nothing
 22723 ;; This function is called by:
 22724 ;;		_CTR
 22725 ;;		_CBC_MAC
 22726 ;; This function uses a non-reentrant model
 22727 ;;
 22728                           
 22729                           	psect	text71
 22730  013824                     __ptext71:
 22731                           	opt stack 0
 22732  013824                     _encode:
 22733                           	opt stack 17
 22734                           
 22735                           ;drv_mrf_miwi_security.c: 79: uint16_t part1=text[0], part2=text[1];
 22736                           
 22737                           ; BSR set to: 0
 22738                           ;incstack = 0
 22739  013824  C081  FFD9         	movff	encode@text,fsr2l
 22740  013828  C082  FFDA         	movff	encode@text+1,fsr2h
 22741  01382C  CFDE F092          	movff	postinc2,encode@part1
 22742  013830  CFDD F093          	movff	postdec2,encode@part1+1
 22743  013834  0100               	movlb	0	; () banked
 22744  013836  EE20 F002          	lfsr	2,2
 22745  01383A  5181               	movf	encode@text& (0+255),w,b
 22746  01383C  26D9               	addwf	fsr2l,f,c
 22747  01383E  5182               	movf	(encode@text+1)& (0+255),w,b
 22748  013840  22DA               	addwfc	fsr2h,f,c
 22749  013842  CFDE F094          	movff	postinc2,encode@part2
 22750  013846  CFDD F095          	movff	postdec2,encode@part2+1
 22751                           
 22752                           ; BSR set to: 0
 22753                           ;drv_mrf_miwi_security.c: 80: uint16_t sum=0, delta=0x9E37;
 22754  01384A  0E00               	movlw	0
 22755  01384C  0100               	movlb	0	; () banked
 22756  01384E  6F97               	movwf	(encode@sum+1)& (0+255),b
 22757  013850  0E00               	movlw	0
 22758  013852  6F96               	movwf	encode@sum& (0+255),b
 22759                           
 22760                           ; BSR set to: 0
 22761  013854  0E9E               	movlw	158
 22762  013856  0100               	movlb	0	; () banked
 22763  013858  6F90               	movwf	(encode@delta+1)& (0+255),b
 22764  01385A  0E37               	movlw	55
 22765  01385C  6F8F               	movwf	encode@delta& (0+255),b
 22766                           
 22767                           ; BSR set to: 0
 22768                           ;drv_mrf_miwi_security.c: 81: uint8_t i;
 22769                           ;drv_mrf_miwi_security.c: 83: for(i=0; i<32; i++)
 22770  01385E  0E00               	movlw	0
 22771  013860  0100               	movlb	0	; () banked
 22772  013862  6F91               	movwf	encode@i& (0+255),b
 22773  013864                     l10750:
 22774                           
 22775                           ; BSR set to: 0
 22776  013864  0E1F               	movlw	31
 22777  013866  0100               	movlb	0	; () banked
 22778  013868  6591               	cpfsgt	encode@i& (0+255),b
 22779  01386A  D001               	goto	l10754
 22780  01386C  D0D4               	goto	l10764
 22781  01386E                     l10754:
 22782                           
 22783                           ; BSR set to: 0
 22784                           ;drv_mrf_miwi_security.c: 84: {
 22785                           ;drv_mrf_miwi_security.c: 85: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (sum + 
      +                          key[sum & 3]);
 22786  01386E  0E03               	movlw	3
 22787  013870  0100               	movlb	0	; () banked
 22788  013872  1596               	andwf	encode@sum& (0+255),w,b
 22789  013874  0100               	movlb	0	; () banked
 22790  013876  6F85               	movwf	??_encode& (0+255),b
 22791  013878  0E00               	movlw	0
 22792  01387A  0100               	movlb	0	; () banked
 22793  01387C  1597               	andwf	(encode@sum+1)& (0+255),w,b
 22794  01387E  0100               	movlb	0	; () banked
 22795  013880  6F86               	movwf	(??_encode+1)& (0+255),b
 22796  013882  90D8               	bcf	status,0,c
 22797  013884  0100               	movlb	0	; () banked
 22798  013886  3785               	rlcf	??_encode& (0+255),f,b
 22799  013888  3786               	rlcf	(??_encode+1)& (0+255),f,b
 22800  01388A  0100               	movlb	0	; () banked
 22801  01388C  5185               	movf	??_encode& (0+255),w,b
 22802  01388E  0100               	movlb	0	; () banked
 22803  013890  2583               	addwf	encode@key& (0+255),w,b
 22804  013892  6ED9               	movwf	fsr2l,c
 22805  013894  0100               	movlb	0	; () banked
 22806  013896  5186               	movf	(??_encode+1)& (0+255),w,b
 22807  013898  0100               	movlb	0	; () banked
 22808  01389A  2184               	addwfc	(encode@key+1)& (0+255),w,b
 22809  01389C  6EDA               	movwf	fsr2h,c
 22810  01389E  CFDE F087          	movff	postinc2,??_encode+2
 22811  0138A2  CFDD F088          	movff	postdec2,??_encode+3
 22812  0138A6  0100               	movlb	0	; () banked
 22813  0138A8  5196               	movf	encode@sum& (0+255),w,b
 22814  0138AA  0100               	movlb	0	; () banked
 22815  0138AC  2787               	addwf	(??_encode+2)& (0+255),f,b
 22816  0138AE  0100               	movlb	0	; () banked
 22817  0138B0  5197               	movf	(encode@sum+1)& (0+255),w,b
 22818  0138B2  0100               	movlb	0	; () banked
 22819  0138B4  2388               	addwfc	(??_encode+3)& (0+255),f,b
 22820  0138B6  C094  F089         	movff	encode@part2,??_encode+4
 22821  0138BA  C095  F08A         	movff	encode@part2+1,??_encode+5
 22822  0138BE  0E05               	movlw	5
 22823  0138C0  0100               	movlb	0	; () banked
 22824  0138C2  6F8B               	movwf	(??_encode+6)& (0+255),b
 22825  0138C4                     u11805:
 22826  0138C4  0100               	movlb	0	; () banked
 22827  0138C6  90D8               	bcf	status,0,c
 22828  0138C8  338A               	rrcf	(??_encode+5)& (0+255),f,b
 22829  0138CA  3389               	rrcf	(??_encode+4)& (0+255),f,b
 22830  0138CC  0100               	movlb	0	; () banked
 22831  0138CE  2F8B               	decfsz	(??_encode+6)& (0+255),f,b
 22832  0138D0  D7F9               	goto	u11805
 22833  0138D2  C094  F08C         	movff	encode@part2,??_encode+7
 22834  0138D6  C095  F08D         	movff	encode@part2+1,??_encode+8
 22835  0138DA  0100               	movlb	0	; () banked
 22836  0138DC  3B8C               	swapf	(??_encode+7)& (0+255),f,b
 22837  0138DE  3B8D               	swapf	(??_encode+8)& (0+255),f,b
 22838  0138E0  0EF0               	movlw	240
 22839  0138E2  178D               	andwf	(??_encode+8)& (0+255),f,b
 22840  0138E4  518C               	movf	(??_encode+7)& (0+255),w,b
 22841  0138E6  0B0F               	andlw	15
 22842  0138E8  138D               	iorwf	(??_encode+8)& (0+255),f,b
 22843  0138EA  0EF0               	movlw	240
 22844  0138EC  178C               	andwf	(??_encode+7)& (0+255),f,b
 22845  0138EE  0100               	movlb	0	; () banked
 22846  0138F0  5189               	movf	(??_encode+4)& (0+255),w,b
 22847  0138F2  0100               	movlb	0	; () banked
 22848  0138F4  1B8C               	xorwf	(??_encode+7)& (0+255),f,b
 22849  0138F6  0100               	movlb	0	; () banked
 22850  0138F8  518A               	movf	(??_encode+5)& (0+255),w,b
 22851  0138FA  0100               	movlb	0	; () banked
 22852  0138FC  1B8D               	xorwf	(??_encode+8)& (0+255),f,b
 22853  0138FE  0100               	movlb	0	; () banked
 22854  013900  5194               	movf	encode@part2& (0+255),w,b
 22855  013902  0100               	movlb	0	; () banked
 22856  013904  278C               	addwf	(??_encode+7)& (0+255),f,b
 22857  013906  0100               	movlb	0	; () banked
 22858  013908  5195               	movf	(encode@part2+1)& (0+255),w,b
 22859  01390A  0100               	movlb	0	; () banked
 22860  01390C  238D               	addwfc	(??_encode+8)& (0+255),f,b
 22861  01390E  0100               	movlb	0	; () banked
 22862  013910  5187               	movf	(??_encode+2)& (0+255),w,b
 22863  013912  0100               	movlb	0	; () banked
 22864  013914  1B8C               	xorwf	(??_encode+7)& (0+255),f,b
 22865  013916  0100               	movlb	0	; () banked
 22866  013918  5188               	movf	(??_encode+3)& (0+255),w,b
 22867  01391A  0100               	movlb	0	; () banked
 22868  01391C  1B8D               	xorwf	(??_encode+8)& (0+255),f,b
 22869  01391E  0100               	movlb	0	; () banked
 22870  013920  518C               	movf	(??_encode+7)& (0+255),w,b
 22871  013922  0100               	movlb	0	; () banked
 22872  013924  2792               	addwf	encode@part1& (0+255),f,b
 22873  013926  0100               	movlb	0	; () banked
 22874  013928  518D               	movf	(??_encode+8)& (0+255),w,b
 22875  01392A  0100               	movlb	0	; () banked
 22876  01392C  2393               	addwfc	(encode@part1+1)& (0+255),f,b
 22877                           
 22878                           ; BSR set to: 0
 22879                           ;drv_mrf_miwi_security.c: 86: sum += delta;
 22880  01392E  0100               	movlb	0	; () banked
 22881  013930  518F               	movf	encode@delta& (0+255),w,b
 22882  013932  0100               	movlb	0	; () banked
 22883  013934  2796               	addwf	encode@sum& (0+255),f,b
 22884  013936  0100               	movlb	0	; () banked
 22885  013938  5190               	movf	(encode@delta+1)& (0+255),w,b
 22886  01393A  0100               	movlb	0	; () banked
 22887  01393C  2397               	addwfc	(encode@sum+1)& (0+255),f,b
 22888                           
 22889                           ; BSR set to: 0
 22890                           ;drv_mrf_miwi_security.c: 87: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (sum + 
      +                          key[(sum>>11) & 3]);
 22891  01393E  C096  F085         	movff	encode@sum,??_encode
 22892  013942  C097  F086         	movff	encode@sum+1,??_encode+1
 22893  013946  0E0B               	movlw	11
 22894  013948  0100               	movlb	0	; () banked
 22895  01394A  6F87               	movwf	(??_encode+2)& (0+255),b
 22896  01394C                     u11815:
 22897  01394C  0100               	movlb	0	; () banked
 22898  01394E  90D8               	bcf	status,0,c
 22899  013950  3386               	rrcf	(??_encode+1)& (0+255),f,b
 22900  013952  3385               	rrcf	??_encode& (0+255),f,b
 22901  013954  0100               	movlb	0	; () banked
 22902  013956  2F87               	decfsz	(??_encode+2)& (0+255),f,b
 22903  013958  D7F9               	goto	u11815
 22904  01395A  0E03               	movlw	3
 22905  01395C  0100               	movlb	0	; () banked
 22906  01395E  1785               	andwf	??_encode& (0+255),f,b
 22907  013960  0E00               	movlw	0
 22908  013962  1786               	andwf	(??_encode+1)& (0+255),f,b
 22909  013964  90D8               	bcf	status,0,c
 22910  013966  0100               	movlb	0	; () banked
 22911  013968  3785               	rlcf	??_encode& (0+255),f,b
 22912  01396A  3786               	rlcf	(??_encode+1)& (0+255),f,b
 22913  01396C  0100               	movlb	0	; () banked
 22914  01396E  5185               	movf	??_encode& (0+255),w,b
 22915  013970  0100               	movlb	0	; () banked
 22916  013972  2583               	addwf	encode@key& (0+255),w,b
 22917  013974  6ED9               	movwf	fsr2l,c
 22918  013976  0100               	movlb	0	; () banked
 22919  013978  5186               	movf	(??_encode+1)& (0+255),w,b
 22920  01397A  0100               	movlb	0	; () banked
 22921  01397C  2184               	addwfc	(encode@key+1)& (0+255),w,b
 22922  01397E  6EDA               	movwf	fsr2h,c
 22923  013980  CFDE F088          	movff	postinc2,??_encode+3
 22924  013984  CFDD F089          	movff	postdec2,??_encode+4
 22925  013988  0100               	movlb	0	; () banked
 22926  01398A  5196               	movf	encode@sum& (0+255),w,b
 22927  01398C  0100               	movlb	0	; () banked
 22928  01398E  2788               	addwf	(??_encode+3)& (0+255),f,b
 22929  013990  0100               	movlb	0	; () banked
 22930  013992  5197               	movf	(encode@sum+1)& (0+255),w,b
 22931  013994  0100               	movlb	0	; () banked
 22932  013996  2389               	addwfc	(??_encode+4)& (0+255),f,b
 22933  013998  C092  F08A         	movff	encode@part1,??_encode+5
 22934  01399C  C093  F08B         	movff	encode@part1+1,??_encode+6
 22935  0139A0  0E05               	movlw	5
 22936  0139A2  0100               	movlb	0	; () banked
 22937  0139A4  6F8C               	movwf	(??_encode+7)& (0+255),b
 22938  0139A6                     u11825:
 22939  0139A6  0100               	movlb	0	; () banked
 22940  0139A8  90D8               	bcf	status,0,c
 22941  0139AA  338B               	rrcf	(??_encode+6)& (0+255),f,b
 22942  0139AC  338A               	rrcf	(??_encode+5)& (0+255),f,b
 22943  0139AE  0100               	movlb	0	; () banked
 22944  0139B0  2F8C               	decfsz	(??_encode+7)& (0+255),f,b
 22945  0139B2  D7F9               	goto	u11825
 22946  0139B4  C092  F08D         	movff	encode@part1,??_encode+8
 22947  0139B8  C093  F08E         	movff	encode@part1+1,??_encode+9
 22948  0139BC  0100               	movlb	0	; () banked
 22949  0139BE  3B8D               	swapf	(??_encode+8)& (0+255),f,b
 22950  0139C0  3B8E               	swapf	(??_encode+9)& (0+255),f,b
 22951  0139C2  0EF0               	movlw	240
 22952  0139C4  178E               	andwf	(??_encode+9)& (0+255),f,b
 22953  0139C6  518D               	movf	(??_encode+8)& (0+255),w,b
 22954  0139C8  0B0F               	andlw	15
 22955  0139CA  138E               	iorwf	(??_encode+9)& (0+255),f,b
 22956  0139CC  0EF0               	movlw	240
 22957  0139CE  178D               	andwf	(??_encode+8)& (0+255),f,b
 22958  0139D0  0100               	movlb	0	; () banked
 22959  0139D2  518A               	movf	(??_encode+5)& (0+255),w,b
 22960  0139D4  0100               	movlb	0	; () banked
 22961  0139D6  1B8D               	xorwf	(??_encode+8)& (0+255),f,b
 22962  0139D8  0100               	movlb	0	; () banked
 22963  0139DA  518B               	movf	(??_encode+6)& (0+255),w,b
 22964  0139DC  0100               	movlb	0	; () banked
 22965  0139DE  1B8E               	xorwf	(??_encode+9)& (0+255),f,b
 22966  0139E0  0100               	movlb	0	; () banked
 22967  0139E2  5192               	movf	encode@part1& (0+255),w,b
 22968  0139E4  0100               	movlb	0	; () banked
 22969  0139E6  278D               	addwf	(??_encode+8)& (0+255),f,b
 22970  0139E8  0100               	movlb	0	; () banked
 22971  0139EA  5193               	movf	(encode@part1+1)& (0+255),w,b
 22972  0139EC  0100               	movlb	0	; () banked
 22973  0139EE  238E               	addwfc	(??_encode+9)& (0+255),f,b
 22974  0139F0  0100               	movlb	0	; () banked
 22975  0139F2  5188               	movf	(??_encode+3)& (0+255),w,b
 22976  0139F4  0100               	movlb	0	; () banked
 22977  0139F6  1B8D               	xorwf	(??_encode+8)& (0+255),f,b
 22978  0139F8  0100               	movlb	0	; () banked
 22979  0139FA  5189               	movf	(??_encode+4)& (0+255),w,b
 22980  0139FC  0100               	movlb	0	; () banked
 22981  0139FE  1B8E               	xorwf	(??_encode+9)& (0+255),f,b
 22982  013A00  0100               	movlb	0	; () banked
 22983  013A02  518D               	movf	(??_encode+8)& (0+255),w,b
 22984  013A04  0100               	movlb	0	; () banked
 22985  013A06  2794               	addwf	encode@part2& (0+255),f,b
 22986  013A08  0100               	movlb	0	; () banked
 22987  013A0A  518E               	movf	(??_encode+9)& (0+255),w,b
 22988  013A0C  0100               	movlb	0	; () banked
 22989  013A0E  2395               	addwfc	(encode@part2+1)& (0+255),f,b
 22990                           
 22991                           ; BSR set to: 0
 22992  013A10  0100               	movlb	0	; () banked
 22993  013A12  2B91               	incf	encode@i& (0+255),f,b
 22994  013A14  D727               	goto	l10750
 22995  013A16                     l10764:
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;drv_mrf_miwi_security.c: 88: }
 22999                           ;drv_mrf_miwi_security.c: 89: text[0]=part1; text[1]=part2;
 23000  013A16  C081  FFD9         	movff	encode@text,fsr2l
 23001  013A1A  C082  FFDA         	movff	encode@text+1,fsr2h
 23002  013A1E  C092  FFDE         	movff	encode@part1,postinc2
 23003  013A22  C093  FFDD         	movff	encode@part1+1,postdec2
 23004                           
 23005                           ; BSR set to: 0
 23006  013A26  0100               	movlb	0	; () banked
 23007  013A28  EE20 F002          	lfsr	2,2
 23008  013A2C  5181               	movf	encode@text& (0+255),w,b
 23009  013A2E  26D9               	addwf	fsr2l,f,c
 23010  013A30  5182               	movf	(encode@text+1)& (0+255),w,b
 23011  013A32  22DA               	addwfc	fsr2h,f,c
 23012  013A34  C094  FFDE         	movff	encode@part2,postinc2
 23013  013A38  C095  FFDD         	movff	encode@part2+1,postdec2
 23014                           
 23015                           ; BSR set to: 0
 23016  013A3C  0012               	return		;funcret
 23017  013A3E                     __end_of_encode:
 23018                           	opt stack 0
 23019                           tblptru	equ	0xFF8
 23020                           tblptrh	equ	0xFF7
 23021                           tblptrl	equ	0xFF6
 23022                           tablat	equ	0xFF5
 23023                           prodh	equ	0xFF4
 23024                           prodl	equ	0xFF3
 23025                           intcon	equ	0xFF2
 23026                           intcon2	equ	0xFF1
 23027                           intcon3	equ	0xFF0
 23028                           indf0	equ	0xFEF
 23029                           postinc0	equ	0xFEE
 23030                           plusw0	equ	0xFEB
 23031                           fsr0h	equ	0xFEA
 23032                           fsr0l	equ	0xFE9
 23033                           wreg	equ	0xFE8
 23034                           indf1	equ	0xFE7
 23035                           postinc1	equ	0xFE6
 23036                           postdec1	equ	0xFE5
 23037                           fsr1h	equ	0xFE2
 23038                           fsr1l	equ	0xFE1
 23039                           indf2	equ	0xFDF
 23040                           postinc2	equ	0xFDE
 23041                           postdec2	equ	0xFDD
 23042                           plusw2	equ	0xFDB
 23043                           fsr2h	equ	0xFDA
 23044                           fsr2l	equ	0xFD9
 23045                           status	equ	0xFD8
 23046                           
 23047 ;; *************** function ___awdiv *****************
 23048 ;; Defined at:
 23049 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/awdiv.c"
 23050 ;; Parameters:    Size  Location     Type
 23051 ;;  dividend        2   33[BANK0 ] int 
 23052 ;;  divisor         2   35[BANK0 ] int 
 23053 ;; Auto vars:     Size  Location     Type
 23054 ;;  quotient        2   39[BANK0 ] int 
 23055 ;;  sign            1   38[BANK0 ] unsigned char 
 23056 ;;  counter         1   37[BANK0 ] unsigned char 
 23057 ;; Return value:  Size  Location     Type
 23058 ;;                  2   33[BANK0 ] int 
 23059 ;; Registers used:
 23060 ;;		wreg, status,2, status,0
 23061 ;; Tracked objects:
 23062 ;;		On entry : 0/0
 23063 ;;		On exit  : 0/0
 23064 ;;		Unchanged: 0/0
 23065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23067 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23069 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23070 ;;Total ram usage:        8 bytes
 23071 ;; Hardware stack levels used:    1
 23072 ;; Hardware stack levels required when called:    7
 23073 ;; This function calls:
 23074 ;;		Nothing
 23075 ;; This function is called by:
 23076 ;;		_CTR
 23077 ;;		_CBC_MAC
 23078 ;; This function uses a non-reentrant model
 23079 ;;
 23080                           
 23081                           	psect	text72
 23082  0159E8                     __ptext72:
 23083                           	opt stack 0
 23084  0159E8                     ___awdiv:
 23085                           	opt stack 17
 23086                           
 23087                           ; BSR set to: 0
 23088                           ;incstack = 0
 23089  0159E8  0E00               	movlw	0
 23090  0159EA  0100               	movlb	0	; () banked
 23091  0159EC  6F86               	movwf	___awdiv@sign& (0+255),b
 23092                           
 23093                           ; BSR set to: 0
 23094  0159EE  0100               	movlb	0	; () banked
 23095  0159F0  AF84               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23096  0159F2  D008               	goto	l10776
 23097                           
 23098                           ; BSR set to: 0
 23099  0159F4  0100               	movlb	0	; () banked
 23100  0159F6  6D83               	negf	___awdiv@divisor& (0+255),b
 23101  0159F8  1F84               	comf	(___awdiv@divisor+1)& (0+255),f,b
 23102  0159FA  B0D8               	btfsc	status,0,c
 23103  0159FC  2B84               	incf	(___awdiv@divisor+1)& (0+255),f,b
 23104                           
 23105                           ; BSR set to: 0
 23106  0159FE  0E01               	movlw	1
 23107  015A00  0100               	movlb	0	; () banked
 23108  015A02  6F86               	movwf	___awdiv@sign& (0+255),b
 23109  015A04                     l10776:
 23110                           
 23111                           ; BSR set to: 0
 23112  015A04  0100               	movlb	0	; () banked
 23113  015A06  AF82               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 23114  015A08  D008               	goto	l10782
 23115                           
 23116                           ; BSR set to: 0
 23117  015A0A  0100               	movlb	0	; () banked
 23118  015A0C  6D81               	negf	___awdiv@dividend& (0+255),b
 23119  015A0E  1F82               	comf	(___awdiv@dividend+1)& (0+255),f,b
 23120  015A10  B0D8               	btfsc	status,0,c
 23121  015A12  2B82               	incf	(___awdiv@dividend+1)& (0+255),f,b
 23122                           
 23123                           ; BSR set to: 0
 23124  015A14  0E01               	movlw	1
 23125  015A16  0100               	movlb	0	; () banked
 23126  015A18  1B86               	xorwf	___awdiv@sign& (0+255),f,b
 23127  015A1A                     l10782:
 23128                           
 23129                           ; BSR set to: 0
 23130  015A1A  0E00               	movlw	0
 23131  015A1C  0100               	movlb	0	; () banked
 23132  015A1E  6F88               	movwf	(___awdiv@quotient+1)& (0+255),b
 23133  015A20  0E00               	movlw	0
 23134  015A22  6F87               	movwf	___awdiv@quotient& (0+255),b
 23135                           
 23136                           ; BSR set to: 0
 23137  015A24  0100               	movlb	0	; () banked
 23138  015A26  5183               	movf	___awdiv@divisor& (0+255),w,b
 23139  015A28  0100               	movlb	0	; () banked
 23140  015A2A  1184               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 23141  015A2C  B4D8               	btfsc	status,2,c
 23142  015A2E  D02C               	goto	l10804
 23143                           
 23144                           ; BSR set to: 0
 23145  015A30  0E01               	movlw	1
 23146  015A32  0100               	movlb	0	; () banked
 23147  015A34  6F85               	movwf	___awdiv@counter& (0+255),b
 23148  015A36  D006               	goto	l10790
 23149  015A38                     l10788:
 23150                           
 23151                           ; BSR set to: 0
 23152  015A38  0100               	movlb	0	; () banked
 23153  015A3A  90D8               	bcf	status,0,c
 23154  015A3C  3783               	rlcf	___awdiv@divisor& (0+255),f,b
 23155  015A3E  3784               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 23156  015A40  0100               	movlb	0	; () banked
 23157  015A42  2B85               	incf	___awdiv@counter& (0+255),f,b
 23158  015A44                     l10790:
 23159                           
 23160                           ; BSR set to: 0
 23161  015A44  0100               	movlb	0	; () banked
 23162  015A46  AF84               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23163  015A48  D7F7               	goto	l10788
 23164  015A4A                     l10792:
 23165                           
 23166                           ; BSR set to: 0
 23167  015A4A  0100               	movlb	0	; () banked
 23168  015A4C  90D8               	bcf	status,0,c
 23169  015A4E  3787               	rlcf	___awdiv@quotient& (0+255),f,b
 23170  015A50  3788               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 23171                           
 23172                           ; BSR set to: 0
 23173  015A52  0100               	movlb	0	; () banked
 23174  015A54  5183               	movf	___awdiv@divisor& (0+255),w,b
 23175  015A56  0100               	movlb	0	; () banked
 23176  015A58  5D81               	subwf	___awdiv@dividend& (0+255),w,b
 23177  015A5A  0100               	movlb	0	; () banked
 23178  015A5C  5184               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23179  015A5E  0100               	movlb	0	; () banked
 23180  015A60  5982               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 23181  015A62  A0D8               	btfss	status,0,c
 23182  015A64  D00A               	goto	l10800
 23183                           
 23184                           ; BSR set to: 0
 23185  015A66  0100               	movlb	0	; () banked
 23186  015A68  5183               	movf	___awdiv@divisor& (0+255),w,b
 23187  015A6A  0100               	movlb	0	; () banked
 23188  015A6C  5F81               	subwf	___awdiv@dividend& (0+255),f,b
 23189  015A6E  0100               	movlb	0	; () banked
 23190  015A70  5184               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23191  015A72  0100               	movlb	0	; () banked
 23192  015A74  5B82               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 23193                           
 23194                           ; BSR set to: 0
 23195  015A76  0100               	movlb	0	; () banked
 23196  015A78  8187               	bsf	___awdiv@quotient& (0+255),0,b
 23197  015A7A                     l10800:
 23198                           
 23199                           ; BSR set to: 0
 23200  015A7A  0100               	movlb	0	; () banked
 23201  015A7C  90D8               	bcf	status,0,c
 23202  015A7E  3384               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 23203  015A80  3383               	rrcf	___awdiv@divisor& (0+255),f,b
 23204                           
 23205                           ; BSR set to: 0
 23206  015A82  0100               	movlb	0	; () banked
 23207  015A84  2F85               	decfsz	___awdiv@counter& (0+255),f,b
 23208  015A86  D7E1               	goto	l10792
 23209  015A88                     l10804:
 23210                           
 23211                           ; BSR set to: 0
 23212  015A88  0100               	movlb	0	; () banked
 23213  015A8A  5186               	movf	___awdiv@sign& (0+255),w,b
 23214  015A8C  0100               	movlb	0	; () banked
 23215  015A8E  B4D8               	btfsc	status,2,c
 23216  015A90  D005               	goto	l10808
 23217                           
 23218                           ; BSR set to: 0
 23219  015A92  0100               	movlb	0	; () banked
 23220  015A94  6D87               	negf	___awdiv@quotient& (0+255),b
 23221  015A96  1F88               	comf	(___awdiv@quotient+1)& (0+255),f,b
 23222  015A98  B0D8               	btfsc	status,0,c
 23223  015A9A  2B88               	incf	(___awdiv@quotient+1)& (0+255),f,b
 23224  015A9C                     l10808:
 23225                           
 23226                           ; BSR set to: 0
 23227  015A9C  C087  F081         	movff	___awdiv@quotient,?___awdiv
 23228  015AA0  C088  F082         	movff	___awdiv@quotient+1,?___awdiv+1
 23229  015AA4  0012               	return	
 23230  015AA6                     __end_of___awdiv:
 23231                           	opt stack 0
 23232                           tblptru	equ	0xFF8
 23233                           tblptrh	equ	0xFF7
 23234                           tblptrl	equ	0xFF6
 23235                           tablat	equ	0xFF5
 23236                           prodh	equ	0xFF4
 23237                           prodl	equ	0xFF3
 23238                           intcon	equ	0xFF2
 23239                           intcon2	equ	0xFF1
 23240                           intcon3	equ	0xFF0
 23241                           indf0	equ	0xFEF
 23242                           postinc0	equ	0xFEE
 23243                           plusw0	equ	0xFEB
 23244                           fsr0h	equ	0xFEA
 23245                           fsr0l	equ	0xFE9
 23246                           wreg	equ	0xFE8
 23247                           indf1	equ	0xFE7
 23248                           postinc1	equ	0xFE6
 23249                           postdec1	equ	0xFE5
 23250                           fsr1h	equ	0xFE2
 23251                           fsr1l	equ	0xFE1
 23252                           indf2	equ	0xFDF
 23253                           postinc2	equ	0xFDE
 23254                           postdec2	equ	0xFDD
 23255                           plusw2	equ	0xFDB
 23256                           fsr2h	equ	0xFDA
 23257                           fsr2l	equ	0xFD9
 23258                           status	equ	0xFD8
 23259                           
 23260 ;; *************** function _AddNodeToNetworkTable *****************
 23261 ;; Defined at:
 23262 ;;		line 3372 in file "src/miwi/miwi_mesh.c"
 23263 ;; Parameters:    Size  Location     Type
 23264 ;;		None
 23265 ;; Auto vars:     Size  Location     Type
 23266 ;;  i               1   41[BANK0 ] unsigned char 
 23267 ;;  handle          1   42[BANK0 ] unsigned char 
 23268 ;; Return value:  Size  Location     Type
 23269 ;;                  1    wreg      unsigned char 
 23270 ;; Registers used:
 23271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23272 ;; Tracked objects:
 23273 ;;		On entry : 0/0
 23274 ;;		On exit  : 0/0
 23275 ;;		Unchanged: 0/0
 23276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23278 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23280 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23281 ;;Total ram usage:        4 bytes
 23282 ;; Hardware stack levels used:    1
 23283 ;; Hardware stack levels required when called:    8
 23284 ;; This function calls:
 23285 ;;		_SearchForLongAddress
 23286 ;;		_SearchForShortAddress
 23287 ;;		_findNextNetworkEntry
 23288 ;; This function is called by:
 23289 ;;		_MiWiTasks
 23290 ;; This function uses a non-reentrant model
 23291 ;;
 23292                           
 23293                           	psect	text73
 23294  01508E                     __ptext73:
 23295                           	opt stack 0
 23296  01508E                     _AddNodeToNetworkTable:
 23297                           	opt stack 17
 23298                           
 23299                           ;miwi_mesh.c: 3374: uint8_t handle = 0xFF;
 23300                           
 23301                           ; BSR set to: 0
 23302                           ;incstack = 0
 23303  01508E  0100               	movlb	0	; () banked
 23304  015090  698A               	setf	AddNodeToNetworkTable@handle& (0+255),b
 23305                           
 23306                           ;miwi_mesh.c: 3376: if(tempNodeStatus.bits.longAddressValid)
 23307  015092  A448               	btfss	_tempNodeStatus,2,c
 23308  015094  D003               	goto	l716
 23309                           
 23310                           ; BSR set to: 0
 23311                           ;miwi_mesh.c: 3377: {
 23312                           ;miwi_mesh.c: 3378: handle = SearchForLongAddress();
 23313  015096  ECCA  F0AB         	call	_SearchForLongAddress	;wreg free
 23314  01509A  D004               	goto	L13
 23315  01509C                     l716:
 23316                           
 23317                           ; BSR set to: 0
 23318                           ;miwi_mesh.c: 3380: else
 23319                           ;miwi_mesh.c: 3381: {
 23320                           ;miwi_mesh.c: 3382: if(tempNodeStatus.bits.shortAddressValid)
 23321  01509C  A648               	btfss	_tempNodeStatus,3,c
 23322  01509E  D004               	goto	l11452
 23323                           
 23324                           ; BSR set to: 0
 23325                           ;miwi_mesh.c: 3383: {
 23326                           ;miwi_mesh.c: 3384: handle = SearchForShortAddress();
 23327  0150A0  ECDD  F0AF         	call	_SearchForShortAddress	;wreg free
 23328  0150A4                     L13:
 23329  0150A4  0100               	movlb	0	; () banked
 23330  0150A6  6F8A               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 23331  0150A8                     l11452:
 23332                           
 23333                           ; BSR set to: 0
 23334                           ;miwi_mesh.c: 3385: }
 23335                           ;miwi_mesh.c: 3386: }
 23336                           ;miwi_mesh.c: 3388: if(handle==0xFF)
 23337  0150A8  0100               	movlb	0	; () banked
 23338  0150AA  298A               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 23339  0150AC  A4D8               	btfss	status,2,c
 23340  0150AE  D004               	goto	l11456
 23341                           
 23342                           ; BSR set to: 0
 23343                           ;miwi_mesh.c: 3389: {
 23344                           ;miwi_mesh.c: 3390: handle = findNextNetworkEntry();
 23345  0150B0  EC1C  F0B4         	call	_findNextNetworkEntry	;wreg free
 23346  0150B4  0100               	movlb	0	; () banked
 23347  0150B6  6F8A               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 23348  0150B8                     l11456:
 23349                           
 23350                           ; BSR set to: 0
 23351                           ;miwi_mesh.c: 3391: }
 23352                           ;miwi_mesh.c: 3393: if(handle != 0xFF)
 23353  0150B8  0100               	movlb	0	; () banked
 23354  0150BA  298A               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 23355  0150BC  B4D8               	btfsc	status,2,c
 23356  0150BE  D072               	goto	l11476
 23357                           
 23358                           ; BSR set to: 0
 23359                           ;miwi_mesh.c: 3394: {
 23360                           ;miwi_mesh.c: 3400: ConnectionTable[handle].status.Val = tempNodeStatus.Val;
 23361  0150C0  0100               	movlb	0	; () banked
 23362  0150C2  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23363  0150C4  0D09               	mullw	9
 23364  0150C6  0E08               	movlw	8
 23365  0150C8  26F3               	addwf	prodl,f,c
 23366  0150CA  0E00               	movlw	0
 23367  0150CC  22F4               	addwfc	prodh,f,c
 23368  0150CE  0E46               	movlw	low _ConnectionTable
 23369  0150D0  24F3               	addwf	prodl,w,c
 23370  0150D2  6ED9               	movwf	fsr2l,c
 23371  0150D4  0E02               	movlw	high _ConnectionTable
 23372  0150D6  20F4               	addwfc	prodh,w,c
 23373  0150D8  6EDA               	movwf	fsr2h,c
 23374  0150DA  C048  FFDF         	movff	_tempNodeStatus,indf2
 23375                           
 23376                           ; BSR set to: 0
 23377                           ;miwi_mesh.c: 3401: if(tempNodeStatus.bits.longAddressValid)
 23378  0150DE  A448               	btfss	_tempNodeStatus,2,c
 23379  0150E0  D034               	goto	l721
 23380                           
 23381                           ; BSR set to: 0
 23382                           ;miwi_mesh.c: 3402: {
 23383                           ;miwi_mesh.c: 3403: uint8_t i;
 23384                           ;miwi_mesh.c: 3404: for(i = 0; i < 4; i++)
 23385  0150E2  0E00               	movlw	0
 23386  0150E4  0100               	movlb	0	; () banked
 23387  0150E6  6F89               	movwf	AddNodeToNetworkTable@i& (0+255),b
 23388  0150E8                     l11464:
 23389                           
 23390                           ; BSR set to: 0
 23391  0150E8  0E03               	movlw	3
 23392  0150EA  0100               	movlb	0	; () banked
 23393  0150EC  6589               	cpfsgt	AddNodeToNetworkTable@i& (0+255),b
 23394  0150EE  D001               	goto	l11468
 23395  0150F0  D02C               	goto	l721
 23396  0150F2                     l11468:
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;miwi_mesh.c: 3405: {
 23400                           ;miwi_mesh.c: 3406: ConnectionTable[handle].Address[i] = tempLongAddress[i];
 23401  0150F2  0100               	movlb	0	; () banked
 23402  0150F4  5189               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 23403  0150F6  0D01               	mullw	1
 23404  0150F8  0E4E               	movlw	low _tempLongAddress
 23405  0150FA  24F3               	addwf	prodl,w,c
 23406  0150FC  6ED9               	movwf	fsr2l,c
 23407  0150FE  0E01               	movlw	high _tempLongAddress
 23408  015100  20F4               	addwfc	prodh,w,c
 23409  015102  6EDA               	movwf	fsr2h,c
 23410  015104  0100               	movlb	0	; () banked
 23411  015106  5189               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 23412  015108  0D01               	mullw	1
 23413  01510A  0E04               	movlw	4
 23414  01510C  26F3               	addwf	prodl,f,c
 23415  01510E  0E00               	movlw	0
 23416  015110  22F4               	addwfc	prodh,f,c
 23417  015112  0E46               	movlw	low _ConnectionTable
 23418  015114  0100               	movlb	0	; () banked
 23419  015116  6F87               	movwf	??_AddNodeToNetworkTable& (0+255),b
 23420  015118  0E02               	movlw	high _ConnectionTable
 23421  01511A  0100               	movlb	0	; () banked
 23422  01511C  6F88               	movwf	(??_AddNodeToNetworkTable+1)& (0+255),b
 23423  01511E  50F3               	movf	prodl,w,c
 23424  015120  0100               	movlb	0	; () banked
 23425  015122  2787               	addwf	??_AddNodeToNetworkTable& (0+255),f,b
 23426  015124  50F4               	movf	prodh,w,c
 23427  015126  0100               	movlb	0	; () banked
 23428  015128  2388               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23429  01512A  0100               	movlb	0	; () banked
 23430  01512C  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23431  01512E  0D09               	mullw	9
 23432  015130  50F3               	movf	prodl,w,c
 23433  015132  0100               	movlb	0	; () banked
 23434  015134  2587               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23435  015136  6EE1               	movwf	fsr1l,c
 23436  015138  50F4               	movf	prodh,w,c
 23437  01513A  0100               	movlb	0	; () banked
 23438  01513C  2188               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23439  01513E  6EE2               	movwf	fsr1h,c
 23440  015140  CFDF FFE7          	movff	indf2,indf1
 23441                           
 23442                           ; BSR set to: 0
 23443  015144  0100               	movlb	0	; () banked
 23444  015146  2B89               	incf	AddNodeToNetworkTable@i& (0+255),f,b
 23445  015148  D7CF               	goto	l11464
 23446  01514A                     l721:
 23447                           
 23448                           ; BSR set to: 0
 23449                           ;miwi_mesh.c: 3407: }
 23450                           ;miwi_mesh.c: 3408: }
 23451                           ;miwi_mesh.c: 3410: if(tempNodeStatus.bits.shortAddressValid)
 23452  01514A  A648               	btfss	_tempNodeStatus,3,c
 23453  01514C  D011               	goto	l724
 23454                           
 23455                           ; BSR set to: 0
 23456                           ;miwi_mesh.c: 3411: {
 23457                           ;miwi_mesh.c: 3412: ConnectionTable[handle].AltAddress.Val = tempShortAddress.Val;
 23458  01514E  0100               	movlb	0	; () banked
 23459  015150  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23460  015152  0D09               	mullw	9
 23461  015154  0E02               	movlw	2
 23462  015156  26F3               	addwf	prodl,f,c
 23463  015158  0E00               	movlw	0
 23464  01515A  22F4               	addwfc	prodh,f,c
 23465  01515C  0E46               	movlw	low _ConnectionTable
 23466  01515E  24F3               	addwf	prodl,w,c
 23467  015160  6ED9               	movwf	fsr2l,c
 23468  015162  0E02               	movlw	high _ConnectionTable
 23469  015164  20F4               	addwfc	prodh,w,c
 23470  015166  6EDA               	movwf	fsr2h,c
 23471  015168  C1D0  FFDE         	movff	_tempShortAddress,postinc2
 23472  01516C  C1D1  FFDD         	movff	_tempShortAddress+1,postdec2
 23473  015170                     l724:
 23474                           
 23475                           ; BSR set to: 0
 23476                           ;miwi_mesh.c: 3413: }
 23477                           ;miwi_mesh.c: 3415: ConnectionTable[handle].PANID.Val = tempPANID.Val;
 23478  015170  0100               	movlb	0	; () banked
 23479  015172  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23480  015174  0D09               	mullw	9
 23481  015176  0E46               	movlw	low _ConnectionTable
 23482  015178  24F3               	addwf	prodl,w,c
 23483  01517A  6ED9               	movwf	fsr2l,c
 23484  01517C  0E02               	movlw	high _ConnectionTable
 23485  01517E  20F4               	addwfc	prodh,w,c
 23486  015180  6EDA               	movwf	fsr2h,c
 23487  015182  C15E  FFDE         	movff	_tempPANID,postinc2
 23488  015186  C15F  FFDD         	movff	_tempPANID+1,postdec2
 23489                           
 23490                           ;miwi_mesh.c: 3417: IncomingFrameCounter[handle].Val = 0;
 23491  01518A  0100               	movlb	0	; () banked
 23492  01518C  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23493  01518E  0D04               	mullw	4
 23494  015190  0E00               	movlw	low _IncomingFrameCounter
 23495  015192  24F3               	addwf	prodl,w,c
 23496  015194  6ED9               	movwf	fsr2l,c
 23497  015196  0E02               	movlw	high _IncomingFrameCounter
 23498  015198  20F4               	addwfc	prodh,w,c
 23499  01519A  6EDA               	movwf	fsr2h,c
 23500  01519C  6ADE               	clrf	postinc2,c
 23501  01519E  6ADE               	clrf	postinc2,c
 23502  0151A0  6ADE               	clrf	postinc2,c
 23503  0151A2  6ADD               	clrf	postdec2,c
 23504  0151A4                     l11476:
 23505                           
 23506                           ; BSR set to: 0
 23507                           ;miwi_mesh.c: 3419: }
 23508                           ;miwi_mesh.c: 3421: return handle;
 23509  0151A4  0100               	movlb	0	; () banked
 23510  0151A6  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23511  0151A8  0012               	return	
 23512  0151AA                     __end_of_AddNodeToNetworkTable:
 23513                           	opt stack 0
 23514                           tblptru	equ	0xFF8
 23515                           tblptrh	equ	0xFF7
 23516                           tblptrl	equ	0xFF6
 23517                           tablat	equ	0xFF5
 23518                           prodh	equ	0xFF4
 23519                           prodl	equ	0xFF3
 23520                           intcon	equ	0xFF2
 23521                           intcon2	equ	0xFF1
 23522                           intcon3	equ	0xFF0
 23523                           indf0	equ	0xFEF
 23524                           postinc0	equ	0xFEE
 23525                           plusw0	equ	0xFEB
 23526                           fsr0h	equ	0xFEA
 23527                           fsr0l	equ	0xFE9
 23528                           wreg	equ	0xFE8
 23529                           indf1	equ	0xFE7
 23530                           postinc1	equ	0xFE6
 23531                           postdec1	equ	0xFE5
 23532                           fsr1h	equ	0xFE2
 23533                           fsr1l	equ	0xFE1
 23534                           indf2	equ	0xFDF
 23535                           postinc2	equ	0xFDE
 23536                           postdec2	equ	0xFDD
 23537                           plusw2	equ	0xFDB
 23538                           fsr2h	equ	0xFDA
 23539                           fsr2l	equ	0xFD9
 23540                           status	equ	0xFD8
 23541                           
 23542 ;; *************** function _findNextNetworkEntry *****************
 23543 ;; Defined at:
 23544 ;;		line 2583 in file "src/miwi/miwi_mesh.c"
 23545 ;; Parameters:    Size  Location     Type
 23546 ;;		None
 23547 ;; Auto vars:     Size  Location     Type
 23548 ;;  i               1   33[BANK0 ] unsigned char 
 23549 ;; Return value:  Size  Location     Type
 23550 ;;                  1    wreg      unsigned char 
 23551 ;; Registers used:
 23552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23553 ;; Tracked objects:
 23554 ;;		On entry : 0/0
 23555 ;;		On exit  : 0/0
 23556 ;;		Unchanged: 0/0
 23557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23561 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23562 ;;Total ram usage:        1 bytes
 23563 ;; Hardware stack levels used:    1
 23564 ;; Hardware stack levels required when called:    7
 23565 ;; This function calls:
 23566 ;;		Nothing
 23567 ;; This function is called by:
 23568 ;;		_AddNodeToNetworkTable
 23569 ;;		_MiApp_EstablishConnection
 23570 ;; This function uses a non-reentrant model
 23571 ;;
 23572                           
 23573                           	psect	text74
 23574  016838                     __ptext74:
 23575                           	opt stack 0
 23576  016838                     _findNextNetworkEntry:
 23577                           	opt stack 17
 23578                           
 23579                           ;miwi_mesh.c: 2585: uint8_t i;
 23580                           ;miwi_mesh.c: 2587: for(i=0;i<10;i++)
 23581                           
 23582                           ; BSR set to: 0
 23583                           ;incstack = 0
 23584  016838  0E00               	movlw	0
 23585  01683A  0100               	movlb	0	; () banked
 23586  01683C  6F81               	movwf	findNextNetworkEntry@i& (0+255),b
 23587  01683E                     l11200:
 23588                           
 23589                           ; BSR set to: 0
 23590  01683E  0E09               	movlw	9
 23591  016840  0100               	movlb	0	; () banked
 23592  016842  6581               	cpfsgt	findNextNetworkEntry@i& (0+255),b
 23593  016844  D001               	goto	l11204
 23594  016846  D016               	goto	l11214
 23595  016848                     l11204:
 23596                           
 23597                           ; BSR set to: 0
 23598                           ;miwi_mesh.c: 2588: {
 23599                           ;miwi_mesh.c: 2589: if(ConnectionTable[i].status.bits.isValid == 0)
 23600  016848  0100               	movlb	0	; () banked
 23601  01684A  5181               	movf	findNextNetworkEntry@i& (0+255),w,b
 23602  01684C  0D09               	mullw	9
 23603  01684E  0E08               	movlw	8
 23604  016850  26F3               	addwf	prodl,f,c
 23605  016852  0E00               	movlw	0
 23606  016854  22F4               	addwfc	prodh,f,c
 23607  016856  0E46               	movlw	low _ConnectionTable
 23608  016858  24F3               	addwf	prodl,w,c
 23609  01685A  6ED9               	movwf	fsr2l,c
 23610  01685C  0E02               	movlw	high _ConnectionTable
 23611  01685E  20F4               	addwfc	prodh,w,c
 23612  016860  6EDA               	movwf	fsr2h,c
 23613  016862  0102               	movlb	2	; () banked
 23614  016864  BEDF               	btfsc	indf2,7,c
 23615  016866  D003               	goto	l11210
 23616                           
 23617                           ; BSR set to: 2
 23618                           ;miwi_mesh.c: 2590: {
 23619                           ;miwi_mesh.c: 2591: return i;
 23620  016868  0100               	movlb	0	; () banked
 23621  01686A  5181               	movf	findNextNetworkEntry@i& (0+255),w,b
 23622                           
 23623                           ; BSR set to: 0
 23624  01686C  0012               	return	
 23625  01686E                     l11210:
 23626  01686E  0100               	movlb	0	; () banked
 23627  016870  2B81               	incf	findNextNetworkEntry@i& (0+255),f,b
 23628  016872  D7E5               	goto	l11200
 23629  016874                     l11214:
 23630                           
 23631                           ; BSR set to: 0
 23632                           ;miwi_mesh.c: 2592: }
 23633                           ;miwi_mesh.c: 2593: }
 23634                           ;miwi_mesh.c: 2594: return 0xFF;
 23635  016874  0EFF               	movlw	255
 23636  016876  0012               	return	
 23637  016878                     __end_of_findNextNetworkEntry:
 23638                           	opt stack 0
 23639                           tblptru	equ	0xFF8
 23640                           tblptrh	equ	0xFF7
 23641                           tblptrl	equ	0xFF6
 23642                           tablat	equ	0xFF5
 23643                           prodh	equ	0xFF4
 23644                           prodl	equ	0xFF3
 23645                           intcon	equ	0xFF2
 23646                           intcon2	equ	0xFF1
 23647                           intcon3	equ	0xFF0
 23648                           indf0	equ	0xFEF
 23649                           postinc0	equ	0xFEE
 23650                           plusw0	equ	0xFEB
 23651                           fsr0h	equ	0xFEA
 23652                           fsr0l	equ	0xFE9
 23653                           wreg	equ	0xFE8
 23654                           indf1	equ	0xFE7
 23655                           postinc1	equ	0xFE6
 23656                           postdec1	equ	0xFE5
 23657                           fsr1h	equ	0xFE2
 23658                           fsr1l	equ	0xFE1
 23659                           indf2	equ	0xFDF
 23660                           postinc2	equ	0xFDE
 23661                           postdec2	equ	0xFDD
 23662                           plusw2	equ	0xFDB
 23663                           fsr2h	equ	0xFDA
 23664                           fsr2l	equ	0xFD9
 23665                           status	equ	0xFD8
 23666                           
 23667 ;; *************** function _SearchForShortAddress *****************
 23668 ;; Defined at:
 23669 ;;		line 3245 in file "src/miwi/miwi_mesh.c"
 23670 ;; Parameters:    Size  Location     Type
 23671 ;;		None
 23672 ;; Auto vars:     Size  Location     Type
 23673 ;;  i               1   35[BANK0 ] unsigned char 
 23674 ;; Return value:  Size  Location     Type
 23675 ;;                  1    wreg      unsigned char 
 23676 ;; Registers used:
 23677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23678 ;; Tracked objects:
 23679 ;;		On entry : 0/0
 23680 ;;		On exit  : 0/0
 23681 ;;		Unchanged: 0/0
 23682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23686 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23687 ;;Total ram usage:        3 bytes
 23688 ;; Hardware stack levels used:    1
 23689 ;; Hardware stack levels required when called:    7
 23690 ;; This function calls:
 23691 ;;		Nothing
 23692 ;; This function is called by:
 23693 ;;		_MiWiTasks
 23694 ;;		_AddNodeToNetworkTable
 23695 ;; This function uses a non-reentrant model
 23696 ;;
 23697                           
 23698                           	psect	text75
 23699  015FBA                     __ptext75:
 23700                           	opt stack 0
 23701  015FBA                     _SearchForShortAddress:
 23702                           	opt stack 18
 23703                           
 23704                           ;miwi_mesh.c: 3247: uint8_t i;
 23705                           ;miwi_mesh.c: 3249: for(i=0;i<10;i++)
 23706                           
 23707                           ; BSR set to: 0
 23708                           ;incstack = 0
 23709  015FBA  0E00               	movlw	0
 23710  015FBC  0100               	movlb	0	; () banked
 23711  015FBE  6F83               	movwf	SearchForShortAddress@i& (0+255),b
 23712  015FC0                     l11140:
 23713                           
 23714                           ; BSR set to: 0
 23715  015FC0  0E09               	movlw	9
 23716  015FC2  0100               	movlb	0	; () banked
 23717  015FC4  6583               	cpfsgt	SearchForShortAddress@i& (0+255),b
 23718  015FC6  D001               	goto	l11144
 23719  015FC8  D03C               	goto	l11158
 23720  015FCA                     l11144:
 23721                           
 23722                           ; BSR set to: 0
 23723                           ;miwi_mesh.c: 3250: {
 23724                           ;miwi_mesh.c: 3251: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.shortAddressValid)
 23725  015FCA  0100               	movlb	0	; () banked
 23726  015FCC  5183               	movf	SearchForShortAddress@i& (0+255),w,b
 23727  015FCE  0D09               	mullw	9
 23728  015FD0  0E08               	movlw	8
 23729  015FD2  26F3               	addwf	prodl,f,c
 23730  015FD4  0E00               	movlw	0
 23731  015FD6  22F4               	addwfc	prodh,f,c
 23732  015FD8  0E46               	movlw	low _ConnectionTable
 23733  015FDA  24F3               	addwf	prodl,w,c
 23734  015FDC  6ED9               	movwf	fsr2l,c
 23735  015FDE  0E02               	movlw	high _ConnectionTable
 23736  015FE0  20F4               	addwfc	prodh,w,c
 23737  015FE2  6EDA               	movwf	fsr2h,c
 23738  015FE4  0102               	movlb	2	; () banked
 23739  015FE6  AEDF               	btfss	indf2,7,c
 23740  015FE8  D029               	goto	l11154
 23741                           
 23742                           ; BSR set to: 2
 23743  015FEA  0100               	movlb	0	; () banked
 23744  015FEC  5183               	movf	SearchForShortAddress@i& (0+255),w,b
 23745  015FEE  0D09               	mullw	9
 23746  015FF0  0E08               	movlw	8
 23747  015FF2  26F3               	addwf	prodl,f,c
 23748  015FF4  0E00               	movlw	0
 23749  015FF6  22F4               	addwfc	prodh,f,c
 23750  015FF8  0E46               	movlw	low _ConnectionTable
 23751  015FFA  24F3               	addwf	prodl,w,c
 23752  015FFC  6ED9               	movwf	fsr2l,c
 23753  015FFE  0E02               	movlw	high _ConnectionTable
 23754  016000  20F4               	addwfc	prodh,w,c
 23755  016002  6EDA               	movwf	fsr2h,c
 23756  016004  0102               	movlb	2	; () banked
 23757  016006  A6DF               	btfss	indf2,3,c
 23758  016008  D019               	goto	l11154
 23759                           
 23760                           ; BSR set to: 2
 23761                           ;miwi_mesh.c: 3252: {
 23762                           ;miwi_mesh.c: 3253: if(ConnectionTable[i].AltAddress.Val == tempShortAddress.Val)
 23763  01600A  0100               	movlb	0	; () banked
 23764  01600C  5183               	movf	SearchForShortAddress@i& (0+255),w,b
 23765  01600E  0D09               	mullw	9
 23766  016010  0E02               	movlw	2
 23767  016012  26F3               	addwf	prodl,f,c
 23768  016014  0E00               	movlw	0
 23769  016016  22F4               	addwfc	prodh,f,c
 23770  016018  0E46               	movlw	low _ConnectionTable
 23771  01601A  24F3               	addwf	prodl,w,c
 23772  01601C  6ED9               	movwf	fsr2l,c
 23773  01601E  0E02               	movlw	high _ConnectionTable
 23774  016020  20F4               	addwfc	prodh,w,c
 23775  016022  6EDA               	movwf	fsr2h,c
 23776  016024  0101               	movlb	1	; () banked
 23777  016026  51D0               	movf	_tempShortAddress& (0+255),w,b
 23778  016028  18DE               	xorwf	postinc2,w,c
 23779  01602A  E108               	bnz	l11154
 23780  01602C  0101               	movlb	1	; () banked
 23781  01602E  51D1               	movf	(_tempShortAddress+1)& (0+255),w,b
 23782  016030  18DE               	xorwf	postinc2,w,c
 23783  016032  A4D8               	btfss	status,2,c
 23784  016034  D003               	goto	l11154
 23785                           
 23786                           ; BSR set to: 1
 23787                           ;miwi_mesh.c: 3254: {
 23788                           ;miwi_mesh.c: 3255: return i;
 23789  016036  0100               	movlb	0	; () banked
 23790  016038  5183               	movf	SearchForShortAddress@i& (0+255),w,b
 23791                           
 23792                           ; BSR set to: 0
 23793  01603A  0012               	return	
 23794  01603C                     l11154:
 23795  01603C  0100               	movlb	0	; () banked
 23796  01603E  2B83               	incf	SearchForShortAddress@i& (0+255),f,b
 23797  016040  D7BF               	goto	l11140
 23798  016042                     l11158:
 23799                           
 23800                           ; BSR set to: 0
 23801                           ;miwi_mesh.c: 3256: }
 23802                           ;miwi_mesh.c: 3257: }
 23803                           ;miwi_mesh.c: 3258: }
 23804                           ;miwi_mesh.c: 3259: return 0xFF;
 23805  016042  0EFF               	movlw	255
 23806  016044  0012               	return	
 23807  016046                     __end_of_SearchForShortAddress:
 23808                           	opt stack 0
 23809                           tblptru	equ	0xFF8
 23810                           tblptrh	equ	0xFF7
 23811                           tblptrl	equ	0xFF6
 23812                           tablat	equ	0xFF5
 23813                           prodh	equ	0xFF4
 23814                           prodl	equ	0xFF3
 23815                           intcon	equ	0xFF2
 23816                           intcon2	equ	0xFF1
 23817                           intcon3	equ	0xFF0
 23818                           indf0	equ	0xFEF
 23819                           postinc0	equ	0xFEE
 23820                           plusw0	equ	0xFEB
 23821                           fsr0h	equ	0xFEA
 23822                           fsr0l	equ	0xFE9
 23823                           wreg	equ	0xFE8
 23824                           indf1	equ	0xFE7
 23825                           postinc1	equ	0xFE6
 23826                           postdec1	equ	0xFE5
 23827                           fsr1h	equ	0xFE2
 23828                           fsr1l	equ	0xFE1
 23829                           indf2	equ	0xFDF
 23830                           postinc2	equ	0xFDE
 23831                           postdec2	equ	0xFDD
 23832                           plusw2	equ	0xFDB
 23833                           fsr2h	equ	0xFDA
 23834                           fsr2l	equ	0xFD9
 23835                           status	equ	0xFD8
 23836                           
 23837 ;; *************** function _SearchForLongAddress *****************
 23838 ;; Defined at:
 23839 ;;		line 3326 in file "src/miwi/miwi_mesh.c"
 23840 ;; Parameters:    Size  Location     Type
 23841 ;;		None
 23842 ;; Auto vars:     Size  Location     Type
 23843 ;;  i               1   38[BANK0 ] unsigned char 
 23844 ;;  j               1   37[BANK0 ] unsigned char 
 23845 ;; Return value:  Size  Location     Type
 23846 ;;                  1    wreg      unsigned char 
 23847 ;; Registers used:
 23848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23849 ;; Tracked objects:
 23850 ;;		On entry : 0/0
 23851 ;;		On exit  : 0/0
 23852 ;;		Unchanged: 0/0
 23853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23855 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23856 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23857 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23858 ;;Total ram usage:        6 bytes
 23859 ;; Hardware stack levels used:    1
 23860 ;; Hardware stack levels required when called:    7
 23861 ;; This function calls:
 23862 ;;		Nothing
 23863 ;; This function is called by:
 23864 ;;		_MiWiTasks
 23865 ;;		_AddNodeToNetworkTable
 23866 ;;		_MiApp_EstablishConnection
 23867 ;;		_MiApp_UnicastAddress
 23868 ;; This function uses a non-reentrant model
 23869 ;;
 23870                           
 23871                           	psect	text76
 23872  015794                     __ptext76:
 23873                           	opt stack 0
 23874  015794                     _SearchForLongAddress:
 23875                           	opt stack 20
 23876                           
 23877                           ;miwi_mesh.c: 3328: uint8_t i,j;
 23878                           ;miwi_mesh.c: 3330: for(i=0;i<10;i++)
 23879                           
 23880                           ; BSR set to: 0
 23881                           ;incstack = 0
 23882  015794  0E00               	movlw	0
 23883  015796  0100               	movlb	0	; () banked
 23884  015798  6F86               	movwf	SearchForLongAddress@i& (0+255),b
 23885  01579A                     l11164:
 23886                           
 23887                           ; BSR set to: 0
 23888  01579A  0E09               	movlw	9
 23889  01579C  0100               	movlb	0	; () banked
 23890  01579E  6586               	cpfsgt	SearchForLongAddress@i& (0+255),b
 23891  0157A0  D001               	goto	l11168
 23892  0157A2  D05C               	goto	l11194
 23893  0157A4                     l11168:
 23894                           
 23895                           ; BSR set to: 0
 23896                           ;miwi_mesh.c: 3331: {
 23897                           ;miwi_mesh.c: 3332: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.longAddressValid)
 23898  0157A4  0100               	movlb	0	; () banked
 23899  0157A6  5186               	movf	SearchForLongAddress@i& (0+255),w,b
 23900  0157A8  0D09               	mullw	9
 23901  0157AA  0E08               	movlw	8
 23902  0157AC  26F3               	addwf	prodl,f,c
 23903  0157AE  0E00               	movlw	0
 23904  0157B0  22F4               	addwfc	prodh,f,c
 23905  0157B2  0E46               	movlw	low _ConnectionTable
 23906  0157B4  24F3               	addwf	prodl,w,c
 23907  0157B6  6ED9               	movwf	fsr2l,c
 23908  0157B8  0E02               	movlw	high _ConnectionTable
 23909  0157BA  20F4               	addwfc	prodh,w,c
 23910  0157BC  6EDA               	movwf	fsr2h,c
 23911  0157BE  0102               	movlb	2	; () banked
 23912  0157C0  AEDF               	btfss	indf2,7,c
 23913  0157C2  D049               	goto	l11190
 23914                           
 23915                           ; BSR set to: 2
 23916  0157C4  0100               	movlb	0	; () banked
 23917  0157C6  5186               	movf	SearchForLongAddress@i& (0+255),w,b
 23918  0157C8  0D09               	mullw	9
 23919  0157CA  0E08               	movlw	8
 23920  0157CC  26F3               	addwf	prodl,f,c
 23921  0157CE  0E00               	movlw	0
 23922  0157D0  22F4               	addwfc	prodh,f,c
 23923  0157D2  0E46               	movlw	low _ConnectionTable
 23924  0157D4  24F3               	addwf	prodl,w,c
 23925  0157D6  6ED9               	movwf	fsr2l,c
 23926  0157D8  0E02               	movlw	high _ConnectionTable
 23927  0157DA  20F4               	addwfc	prodh,w,c
 23928  0157DC  6EDA               	movwf	fsr2h,c
 23929  0157DE  0102               	movlb	2	; () banked
 23930  0157E0  A4DF               	btfss	indf2,2,c
 23931  0157E2  D039               	goto	l11190
 23932                           
 23933                           ; BSR set to: 2
 23934                           ;miwi_mesh.c: 3333: {
 23935                           ;miwi_mesh.c: 3334: for(j=0;j<4;j++)
 23936  0157E4  0E00               	movlw	0
 23937  0157E6  0100               	movlb	0	; () banked
 23938  0157E8  6F85               	movwf	SearchForLongAddress@j& (0+255),b
 23939  0157EA                     l11174:
 23940                           
 23941                           ; BSR set to: 0
 23942  0157EA  0E03               	movlw	3
 23943  0157EC  0100               	movlb	0	; () banked
 23944  0157EE  6585               	cpfsgt	SearchForLongAddress@j& (0+255),b
 23945  0157F0  D001               	goto	l11178
 23946  0157F2  D02E               	goto	l11186
 23947  0157F4                     l11178:
 23948                           
 23949                           ; BSR set to: 0
 23950                           ;miwi_mesh.c: 3335: {
 23951                           ;miwi_mesh.c: 3336: if(ConnectionTable[i].Address[j] != tempLongAddress[j])
 23952  0157F4  0100               	movlb	0	; () banked
 23953  0157F6  5185               	movf	SearchForLongAddress@j& (0+255),w,b
 23954  0157F8  0D01               	mullw	1
 23955  0157FA  0E4E               	movlw	low _tempLongAddress
 23956  0157FC  24F3               	addwf	prodl,w,c
 23957  0157FE  6ED9               	movwf	fsr2l,c
 23958  015800  0E01               	movlw	high _tempLongAddress
 23959  015802  20F4               	addwfc	prodh,w,c
 23960  015804  6EDA               	movwf	fsr2h,c
 23961  015806  0100               	movlb	0	; () banked
 23962  015808  5185               	movf	SearchForLongAddress@j& (0+255),w,b
 23963  01580A  0D01               	mullw	1
 23964  01580C  0E04               	movlw	4
 23965  01580E  26F3               	addwf	prodl,f,c
 23966  015810  0E00               	movlw	0
 23967  015812  22F4               	addwfc	prodh,f,c
 23968  015814  0E46               	movlw	low _ConnectionTable
 23969  015816  0100               	movlb	0	; () banked
 23970  015818  6F82               	movwf	(??_SearchForLongAddress+1)& (0+255),b
 23971  01581A  0E02               	movlw	high _ConnectionTable
 23972  01581C  0100               	movlb	0	; () banked
 23973  01581E  6F83               	movwf	(??_SearchForLongAddress+2)& (0+255),b
 23974  015820  50F3               	movf	prodl,w,c
 23975  015822  0100               	movlb	0	; () banked
 23976  015824  2782               	addwf	(??_SearchForLongAddress+1)& (0+255),f,b
 23977  015826  50F4               	movf	prodh,w,c
 23978  015828  0100               	movlb	0	; () banked
 23979  01582A  2383               	addwfc	(??_SearchForLongAddress+2)& (0+255),f,b
 23980  01582C  0100               	movlb	0	; () banked
 23981  01582E  5186               	movf	SearchForLongAddress@i& (0+255),w,b
 23982  015830  0D09               	mullw	9
 23983  015832  50F3               	movf	prodl,w,c
 23984  015834  0100               	movlb	0	; () banked
 23985  015836  2582               	addwf	(??_SearchForLongAddress+1)& (0+255),w,b
 23986  015838  6EE1               	movwf	fsr1l,c
 23987  01583A  50F4               	movf	prodh,w,c
 23988  01583C  0100               	movlb	0	; () banked
 23989  01583E  2183               	addwfc	(??_SearchForLongAddress+2)& (0+255),w,b
 23990  015840  6EE2               	movwf	fsr1h,c
 23991  015842  50DE               	movf	postinc2,w,c
 23992  015844  18E6               	xorwf	postinc1,w,c
 23993  015846  A4D8               	btfss	status,2,c
 23994  015848  D006               	goto	l11190
 23995                           
 23996                           ; BSR set to: 0
 23997                           
 23998                           ; BSR set to: 0
 23999                           
 24000                           ; BSR set to: 0
 24001                           ;miwi_mesh.c: 3337: {
 24002                           ;miwi_mesh.c: 3338: goto EndOfSearchLoop;
 24003  01584A  0100               	movlb	0	; () banked
 24004  01584C  2B85               	incf	SearchForLongAddress@j& (0+255),f,b
 24005  01584E  D7CD               	goto	l11174
 24006  015850                     l11186:
 24007                           
 24008                           ; BSR set to: 0
 24009                           ;miwi_mesh.c: 3339: }
 24010                           ;miwi_mesh.c: 3340: }
 24011                           ;miwi_mesh.c: 3341: return i;
 24012  015850  0100               	movlb	0	; () banked
 24013  015852  5186               	movf	SearchForLongAddress@i& (0+255),w,b
 24014                           
 24015                           ; BSR set to: 0
 24016  015854  0012               	return	
 24017  015856                     l11190:
 24018                           
 24019                           ;miwi_mesh.c: 3344: ;
 24020  015856  0100               	movlb	0	; () banked
 24021  015858  2B86               	incf	SearchForLongAddress@i& (0+255),f,b
 24022  01585A  D79F               	goto	l11164
 24023  01585C                     l11194:
 24024                           
 24025                           ; BSR set to: 0
 24026                           ;miwi_mesh.c: 3345: }
 24027                           ;miwi_mesh.c: 3346: return 0xFF;
 24028  01585C  0EFF               	movlw	255
 24029  01585E  0012               	return	
 24030  015860                     __end_of_SearchForLongAddress:
 24031                           	opt stack 0
 24032                           tblptru	equ	0xFF8
 24033                           tblptrh	equ	0xFF7
 24034                           tblptrl	equ	0xFF6
 24035                           tablat	equ	0xFF5
 24036                           prodh	equ	0xFF4
 24037                           prodl	equ	0xFF3
 24038                           intcon	equ	0xFF2
 24039                           intcon2	equ	0xFF1
 24040                           intcon3	equ	0xFF0
 24041                           indf0	equ	0xFEF
 24042                           postinc0	equ	0xFEE
 24043                           plusw0	equ	0xFEB
 24044                           fsr0h	equ	0xFEA
 24045                           fsr0l	equ	0xFE9
 24046                           wreg	equ	0xFE8
 24047                           indf1	equ	0xFE7
 24048                           postinc1	equ	0xFE6
 24049                           postdec1	equ	0xFE5
 24050                           fsr1h	equ	0xFE2
 24051                           fsr1l	equ	0xFE1
 24052                           indf2	equ	0xFDF
 24053                           postinc2	equ	0xFDE
 24054                           postdec2	equ	0xFDD
 24055                           plusw2	equ	0xFDB
 24056                           fsr2h	equ	0xFDA
 24057                           fsr2l	equ	0xFD9
 24058                           status	equ	0xFD8
 24059                           
 24060 ;; *************** function _MiApp_DiscardMessage *****************
 24061 ;; Defined at:
 24062 ;;		line 4242 in file "src/miwi/miwi_mesh.c"
 24063 ;; Parameters:    Size  Location     Type
 24064 ;;		None
 24065 ;; Auto vars:     Size  Location     Type
 24066 ;;		None
 24067 ;; Return value:  Size  Location     Type
 24068 ;;		None               void
 24069 ;; Registers used:
 24070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24071 ;; Tracked objects:
 24072 ;;		On entry : 0/0
 24073 ;;		On exit  : 0/0
 24074 ;;		Unchanged: 0/0
 24075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24080 ;;Total ram usage:        0 bytes
 24081 ;; Hardware stack levels used:    1
 24082 ;; Hardware stack levels required when called:    8
 24083 ;; This function calls:
 24084 ;;		_MiMAC_DiscardPacket
 24085 ;; This function is called by:
 24086 ;;		_MiApp_SearchConnection
 24087 ;;		_MiApp_EstablishConnection
 24088 ;;		_MiApp_UnicastAddress
 24089 ;;		_main
 24090 ;;		_process_update_answer
 24091 ;;		_do_NETWORK_REGISTER
 24092 ;;		_do_POWER_TEST
 24093 ;;		_do_UPDATE
 24094 ;;		_MiApp_UnicastConnection
 24095 ;;		_do_PING
 24096 ;; This function uses a non-reentrant model
 24097 ;;
 24098                           
 24099                           	psect	text77
 24100  016B26                     __ptext77:
 24101                           	opt stack 0
 24102  016B26                     _MiApp_DiscardMessage:
 24103                           	opt stack 19
 24104                           
 24105                           ;miwi_mesh.c: 4244: MiWiStateMachine.bits.RxHasUserData = 0;
 24106                           
 24107                           ; BSR set to: 0
 24108                           ;incstack = 0
 24109  016B26  0100               	movlb	0	; () banked
 24110  016B28  95D4               	bcf	_MiWiStateMachine& (0+255),2,b
 24111                           
 24112                           ; BSR set to: 0
 24113                           ;miwi_mesh.c: 4245: MiMAC_DiscardPacket();
 24114  016B2A  EC2C  F0B5         	call	_MiMAC_DiscardPacket	;wreg free
 24115  016B2E  0012               	return		;funcret
 24116  016B30                     __end_of_MiApp_DiscardMessage:
 24117                           	opt stack 0
 24118                           tblptru	equ	0xFF8
 24119                           tblptrh	equ	0xFF7
 24120                           tblptrl	equ	0xFF6
 24121                           tablat	equ	0xFF5
 24122                           prodh	equ	0xFF4
 24123                           prodl	equ	0xFF3
 24124                           intcon	equ	0xFF2
 24125                           intcon2	equ	0xFF1
 24126                           intcon3	equ	0xFF0
 24127                           indf0	equ	0xFEF
 24128                           postinc0	equ	0xFEE
 24129                           plusw0	equ	0xFEB
 24130                           fsr0h	equ	0xFEA
 24131                           fsr0l	equ	0xFE9
 24132                           wreg	equ	0xFE8
 24133                           indf1	equ	0xFE7
 24134                           postinc1	equ	0xFE6
 24135                           postdec1	equ	0xFE5
 24136                           fsr1h	equ	0xFE2
 24137                           fsr1l	equ	0xFE1
 24138                           indf2	equ	0xFDF
 24139                           postinc2	equ	0xFDE
 24140                           postdec2	equ	0xFDD
 24141                           plusw2	equ	0xFDB
 24142                           fsr2h	equ	0xFDA
 24143                           fsr2l	equ	0xFD9
 24144                           status	equ	0xFD8
 24145                           
 24146 ;; *************** function _MiMAC_DiscardPacket *****************
 24147 ;; Defined at:
 24148 ;;		line 1057 in file "src/miwi/drv_mrf_miwi_89xa.c"
 24149 ;; Parameters:    Size  Location     Type
 24150 ;;		None
 24151 ;; Auto vars:     Size  Location     Type
 24152 ;;		None
 24153 ;; Return value:  Size  Location     Type
 24154 ;;		None               void
 24155 ;; Registers used:
 24156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24157 ;; Tracked objects:
 24158 ;;		On entry : 0/0
 24159 ;;		On exit  : 0/0
 24160 ;;		Unchanged: 0/0
 24161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24166 ;;Total ram usage:        0 bytes
 24167 ;; Hardware stack levels used:    1
 24168 ;; Hardware stack levels required when called:    7
 24169 ;; This function calls:
 24170 ;;		Nothing
 24171 ;; This function is called by:
 24172 ;;		_MiWiTasks
 24173 ;;		_MiApp_DiscardMessage
 24174 ;; This function uses a non-reentrant model
 24175 ;;
 24176                           
 24177                           	psect	text78
 24178  016A58                     __ptext78:
 24179                           	opt stack 0
 24180  016A58                     _MiMAC_DiscardPacket:
 24181                           	opt stack 18
 24182                           
 24183                           ;drv_mrf_miwi_89xa.c: 1059: if( ReceivedBankIndex < 2 )
 24184                           
 24185                           ;incstack = 0
 24186  016A58  0E02               	movlw	2
 24187  016A5A  6045               	cpfslt	_ReceivedBankIndex,c
 24188  016A5C  0012               	return	
 24189                           
 24190                           ;drv_mrf_miwi_89xa.c: 1060: {
 24191                           ;drv_mrf_miwi_89xa.c: 1061: RxPacket[ReceivedBankIndex].flags.Val = 0;
 24192  016A5E  5045               	movf	_ReceivedBankIndex,w,c
 24193  016A60  0D42               	mullw	66
 24194  016A62  0E50               	movlw	low _RxPacket
 24195  016A64  24F3               	addwf	prodl,w,c
 24196  016A66  6ED9               	movwf	fsr2l,c
 24197  016A68  0E03               	movlw	high _RxPacket
 24198  016A6A  20F4               	addwfc	prodh,w,c
 24199  016A6C  6EDA               	movwf	fsr2h,c
 24200  016A6E  0E00               	movlw	0
 24201  016A70  6EDF               	movwf	indf2,c
 24202                           
 24203                           ;drv_mrf_miwi_89xa.c: 1062: ReceivedBankIndex = 0xFF;
 24204  016A72  6845               	setf	_ReceivedBankIndex,c
 24205  016A74  0012               	return	
 24206  016A76                     __end_of_MiMAC_DiscardPacket:
 24207                           	opt stack 0
 24208                           tblptru	equ	0xFF8
 24209                           tblptrh	equ	0xFF7
 24210                           tblptrl	equ	0xFF6
 24211                           tablat	equ	0xFF5
 24212                           prodh	equ	0xFF4
 24213                           prodl	equ	0xFF3
 24214                           intcon	equ	0xFF2
 24215                           intcon2	equ	0xFF1
 24216                           intcon3	equ	0xFF0
 24217                           indf0	equ	0xFEF
 24218                           postinc0	equ	0xFEE
 24219                           plusw0	equ	0xFEB
 24220                           fsr0h	equ	0xFEA
 24221                           fsr0l	equ	0xFE9
 24222                           wreg	equ	0xFE8
 24223                           indf1	equ	0xFE7
 24224                           postinc1	equ	0xFE6
 24225                           postdec1	equ	0xFE5
 24226                           fsr1h	equ	0xFE2
 24227                           fsr1l	equ	0xFE1
 24228                           indf2	equ	0xFDF
 24229                           postinc2	equ	0xFDE
 24230                           postdec2	equ	0xFDD
 24231                           plusw2	equ	0xFDB
 24232                           fsr2h	equ	0xFDA
 24233                           fsr2l	equ	0xFD9
 24234                           status	equ	0xFD8
 24235                           
 24236 ;; *************** function _MiApp_ConnectionMode *****************
 24237 ;; Defined at:
 24238 ;;		line 3921 in file "src/miwi/miwi_mesh.c"
 24239 ;; Parameters:    Size  Location     Type
 24240 ;;  Mode            1    wreg     unsigned char 
 24241 ;; Auto vars:     Size  Location     Type
 24242 ;;  Mode            1   34[BANK0 ] unsigned char 
 24243 ;; Return value:  Size  Location     Type
 24244 ;;		None               void
 24245 ;; Registers used:
 24246 ;;		wreg, status,2, status,0
 24247 ;; Tracked objects:
 24248 ;;		On entry : 0/0
 24249 ;;		On exit  : 0/0
 24250 ;;		Unchanged: 0/0
 24251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24254 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24255 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24256 ;;Total ram usage:        2 bytes
 24257 ;; Hardware stack levels used:    1
 24258 ;; Hardware stack levels required when called:    7
 24259 ;; This function calls:
 24260 ;;		Nothing
 24261 ;; This function is called by:
 24262 ;;		_main
 24263 ;; This function uses a non-reentrant model
 24264 ;;
 24265                           
 24266                           	psect	text79
 24267  0169C4                     __ptext79:
 24268                           	opt stack 0
 24269  0169C4                     _MiApp_ConnectionMode:
 24270                           	opt stack 23
 24271                           
 24272                           ;incstack = 0
 24273                           ;MiApp_ConnectionMode@Mode stored from wreg
 24274  0169C4  0100               	movlb	0	; () banked
 24275  0169C6  6F82               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 24276                           
 24277                           ;miwi_mesh.c: 3923: if( Mode > 3 )
 24278  0169C8  0E03               	movlw	3
 24279  0169CA  0100               	movlb	0	; () banked
 24280  0169CC  6582               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 24281  0169CE  D001               	goto	l755
 24282  0169D0  0012               	return	
 24283  0169D2                     l755:
 24284                           
 24285                           ; BSR set to: 0
 24286                           ;miwi_mesh.c: 3926: }
 24287                           ;miwi_mesh.c: 3927: ConnMode = Mode;
 24288  0169D2  C082  F03F         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 24289                           
 24290                           ; BSR set to: 0
 24291                           ;miwi_mesh.c: 3928: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 24292  0169D6  C03F  F081         	movff	_ConnMode,??_MiApp_ConnectionMode
 24293  0169DA  0100               	movlb	0	; () banked
 24294  0169DC  3B81               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 24295  0169DE  0101               	movlb	1	; () banked
 24296  0169E0  5164               	movf	_MiWiCapacityInfo& (0+255),w,b
 24297  0169E2  0100               	movlb	0	; () banked
 24298  0169E4  1981               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 24299  0169E6  0BCF               	andlw	-49
 24300  0169E8  1981               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 24301  0169EA  0101               	movlb	1	; () banked
 24302  0169EC  6F64               	movwf	_MiWiCapacityInfo& (0+255),b
 24303  0169EE  0012               	return		;funcret
 24304  0169F0                     __end_of_MiApp_ConnectionMode:
 24305                           	opt stack 0
 24306                           tblptru	equ	0xFF8
 24307                           tblptrh	equ	0xFF7
 24308                           tblptrl	equ	0xFF6
 24309                           tablat	equ	0xFF5
 24310                           prodh	equ	0xFF4
 24311                           prodl	equ	0xFF3
 24312                           intcon	equ	0xFF2
 24313                           intcon2	equ	0xFF1
 24314                           intcon3	equ	0xFF0
 24315                           indf0	equ	0xFEF
 24316                           postinc0	equ	0xFEE
 24317                           plusw0	equ	0xFEB
 24318                           fsr0h	equ	0xFEA
 24319                           fsr0l	equ	0xFE9
 24320                           wreg	equ	0xFE8
 24321                           indf1	equ	0xFE7
 24322                           postinc1	equ	0xFE6
 24323                           postdec1	equ	0xFE5
 24324                           fsr1h	equ	0xFE2
 24325                           fsr1l	equ	0xFE1
 24326                           indf2	equ	0xFDF
 24327                           postinc2	equ	0xFDE
 24328                           postdec2	equ	0xFDD
 24329                           plusw2	equ	0xFDB
 24330                           fsr2h	equ	0xFDA
 24331                           fsr2l	equ	0xFD9
 24332                           status	equ	0xFD8
 24333                           
 24334 ;; *************** function _SYS_InterruptLow *****************
 24335 ;; Defined at:
 24336 ;;		line 735 in file "src/main.c"
 24337 ;; Parameters:    Size  Location     Type
 24338 ;;		None
 24339 ;; Auto vars:     Size  Location     Type
 24340 ;;		None
 24341 ;; Return value:  Size  Location     Type
 24342 ;;		None               void
 24343 ;; Registers used:
 24344 ;;		wreg, status,2, status,0
 24345 ;; Tracked objects:
 24346 ;;		On entry : 0/0
 24347 ;;		On exit  : 0/0
 24348 ;;		Unchanged: 0/0
 24349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24352 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24353 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24354 ;;Total ram usage:       17 bytes
 24355 ;; Hardware stack levels used:    1
 24356 ;; Hardware stack levels required when called:    6
 24357 ;; This function calls:
 24358 ;;		Nothing
 24359 ;; This function is called by:
 24360 ;;		Interrupt level 1
 24361 ;; This function uses a non-reentrant model
 24362 ;;
 24363                           
 24364                           	psect	intcodelo
 24365  000018                     __pintcodelo:
 24366                           	opt stack 0
 24367  000018                     _SYS_InterruptLow:
 24368                           	opt stack 13
 24369                           
 24370                           ;incstack = 0
 24371  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 24372  00001A  CFD8 F001          	movff	status,??_SYS_InterruptLow
 24373  00001E  CFE8 F002          	movff	wreg,??_SYS_InterruptLow+1
 24374  000022  CFE0 F003          	movff	bsr,??_SYS_InterruptLow+2
 24375  000026  CFFA F004          	movff	pclath,??_SYS_InterruptLow+3
 24376  00002A  CFFB F005          	movff	pclatu,??_SYS_InterruptLow+4
 24377  00002E  CFE9 F006          	movff	fsr0l,??_SYS_InterruptLow+5
 24378  000032  CFEA F007          	movff	fsr0h,??_SYS_InterruptLow+6
 24379  000036  CFE1 F008          	movff	fsr1l,??_SYS_InterruptLow+7
 24380  00003A  CFE2 F009          	movff	fsr1h,??_SYS_InterruptLow+8
 24381  00003E  CFD9 F00A          	movff	fsr2l,??_SYS_InterruptLow+9
 24382  000042  CFDA F00B          	movff	fsr2h,??_SYS_InterruptLow+10
 24383  000046  CFF3 F00C          	movff	prodl,??_SYS_InterruptLow+11
 24384  00004A  CFF4 F00D          	movff	prodh,??_SYS_InterruptLow+12
 24385  00004E  CFF6 F00E          	movff	tblptrl,??_SYS_InterruptLow+13
 24386  000052  CFF7 F00F          	movff	tblptrh,??_SYS_InterruptLow+14
 24387  000056  CFF8 F010          	movff	tblptru,??_SYS_InterruptLow+15
 24388  00005A  CFF5 F011          	movff	tablat,??_SYS_InterruptLow+16
 24389                           
 24390                           ;main.c: 738: if(PIR3bits.RTCCIF)
 24391  00005E  A0A4               	btfss	4004,0,c	;volatile
 24392  000060  D026               	goto	i1l1222
 24393                           
 24394                           ;main.c: 739: {
 24395                           ;main.c: 740: m_uptime_seconds = m_uptime_seconds + 60;
 24396  000062  0E3C               	movlw	60
 24397  000064  0101               	movlb	1	; () banked
 24398  000066  254A               	addwf	_m_uptime_seconds& (0+255),w,b	;volatile
 24399  000068  0101               	movlb	1	; () banked
 24400  00006A  6F4A               	movwf	_m_uptime_seconds& (0+255),b	;volatile
 24401  00006C  0E00               	movlw	0
 24402  00006E  0101               	movlb	1	; () banked
 24403  000070  214B               	addwfc	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
 24404  000072  0101               	movlb	1	; () banked
 24405  000074  6F4B               	movwf	(_m_uptime_seconds+1)& (0+255),b	;volatile
 24406  000076  0E00               	movlw	0
 24407  000078  0101               	movlb	1	; () banked
 24408  00007A  214C               	addwfc	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
 24409  00007C  0101               	movlb	1	; () banked
 24410  00007E  6F4C               	movwf	(_m_uptime_seconds+2)& (0+255),b	;volatile
 24411  000080  0E00               	movlw	0
 24412  000082  0101               	movlb	1	; () banked
 24413  000084  214D               	addwfc	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
 24414  000086  0101               	movlb	1	; () banked
 24415  000088  6F4D               	movwf	(_m_uptime_seconds+3)& (0+255),b	;volatile
 24416                           
 24417                           ;main.c: 741: timer_count = timer_count - 1;
 24418  00008A  044B               	decf	_timer_count,w,c	;volatile
 24419  00008C  6E4B               	movwf	_timer_count,c	;volatile
 24420                           
 24421                           ; BSR set to: 1
 24422                           ;main.c: 742: if (timer_count == 0)
 24423  00008E  504B               	movf	_timer_count,w,c	;volatile
 24424  000090  A4D8               	btfss	status,2,c
 24425  000092  D00C               	goto	i1l1219
 24426                           
 24427                           ; BSR set to: 1
 24428                           ;main.c: 743: {
 24429                           ;main.c: 744: timer_flag = 1;
 24430  000094  0E01               	movlw	1
 24431  000096  0101               	movlb	1	; () banked
 24432  000098  6F6B               	movwf	_timer_flag& (0+255),b	;volatile
 24433                           
 24434                           ;main.c: 745: if (m_update_frequency == 0)
 24435  00009A  0101               	movlb	1	; () banked
 24436  00009C  51FF               	movf	_m_update_frequency& (0+255),w,b	;volatile
 24437  00009E  A4D8               	btfss	status,2,c
 24438  0000A0  D003               	goto	i1l1220
 24439                           
 24440                           ; BSR set to: 1
 24441                           ;main.c: 746: timer_count = 1;
 24442  0000A2  0E01               	movlw	1
 24443  0000A4  6E4B               	movwf	_timer_count,c	;volatile
 24444  0000A6  D002               	goto	i1l1219
 24445  0000A8                     i1l1220:
 24446                           
 24447                           ; BSR set to: 1
 24448                           ;main.c: 747: else
 24449                           ;main.c: 748: timer_count = m_update_frequency;
 24450  0000A8  C1FF  F04B         	movff	_m_update_frequency,_timer_count	;volatile
 24451  0000AC                     i1l1219:
 24452                           
 24453                           ; BSR set to: 1
 24454                           ;main.c: 749: }
 24455                           ;main.c: 750: PIR3bits.RTCCIF = 0;
 24456  0000AC  90A4               	bcf	4004,0,c	;volatile
 24457  0000AE                     i1l1222:
 24458  0000AE  C011  FFF5         	movff	??_SYS_InterruptLow+16,tablat
 24459  0000B2  C010  FFF8         	movff	??_SYS_InterruptLow+15,tblptru
 24460  0000B6  C00F  FFF7         	movff	??_SYS_InterruptLow+14,tblptrh
 24461  0000BA  C00E  FFF6         	movff	??_SYS_InterruptLow+13,tblptrl
 24462  0000BE  C00D  FFF4         	movff	??_SYS_InterruptLow+12,prodh
 24463  0000C2  C00C  FFF3         	movff	??_SYS_InterruptLow+11,prodl
 24464  0000C6  C00B  FFDA         	movff	??_SYS_InterruptLow+10,fsr2h
 24465  0000CA  C00A  FFD9         	movff	??_SYS_InterruptLow+9,fsr2l
 24466  0000CE  C009  FFE2         	movff	??_SYS_InterruptLow+8,fsr1h
 24467  0000D2  C008  FFE1         	movff	??_SYS_InterruptLow+7,fsr1l
 24468  0000D6  C007  FFEA         	movff	??_SYS_InterruptLow+6,fsr0h
 24469  0000DA  C006  FFE9         	movff	??_SYS_InterruptLow+5,fsr0l
 24470  0000DE  C005  FFFB         	movff	??_SYS_InterruptLow+4,pclatu
 24471  0000E2  C004  FFFA         	movff	??_SYS_InterruptLow+3,pclath
 24472  0000E6  C003  FFE0         	movff	??_SYS_InterruptLow+2,bsr
 24473  0000EA  C002  FFE8         	movff	??_SYS_InterruptLow+1,wreg
 24474  0000EE  C001  FFD8         	movff	??_SYS_InterruptLow,status
 24475  0000F2  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 24476  0000F4  0010               	retfie	
 24477  0000F6                     __end_of_SYS_InterruptLow:
 24478                           	opt stack 0
 24479                           pclatu	equ	0xFFB
 24480                           pclath	equ	0xFFA
 24481                           tblptru	equ	0xFF8
 24482                           tblptrh	equ	0xFF7
 24483                           tblptrl	equ	0xFF6
 24484                           tablat	equ	0xFF5
 24485                           prodh	equ	0xFF4
 24486                           prodl	equ	0xFF3
 24487                           intcon	equ	0xFF2
 24488                           intcon2	equ	0xFF1
 24489                           intcon3	equ	0xFF0
 24490                           indf0	equ	0xFEF
 24491                           postinc0	equ	0xFEE
 24492                           plusw0	equ	0xFEB
 24493                           fsr0h	equ	0xFEA
 24494                           fsr0l	equ	0xFE9
 24495                           wreg	equ	0xFE8
 24496                           indf1	equ	0xFE7
 24497                           postinc1	equ	0xFE6
 24498                           postdec1	equ	0xFE5
 24499                           fsr1h	equ	0xFE2
 24500                           fsr1l	equ	0xFE1
 24501                           bsr	equ	0xFE0
 24502                           indf2	equ	0xFDF
 24503                           postinc2	equ	0xFDE
 24504                           postdec2	equ	0xFDD
 24505                           plusw2	equ	0xFDB
 24506                           fsr2h	equ	0xFDA
 24507                           fsr2l	equ	0xFD9
 24508                           status	equ	0xFD8
 24509                           
 24510 ;; *************** function _SYS_InterruptHigh *****************
 24511 ;; Defined at:
 24512 ;;		line 727 in file "src/main.c"
 24513 ;; Parameters:    Size  Location     Type
 24514 ;;		None
 24515 ;; Auto vars:     Size  Location     Type
 24516 ;;		None
 24517 ;; Return value:  Size  Location     Type
 24518 ;;		None               void
 24519 ;; Registers used:
 24520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24521 ;; Tracked objects:
 24522 ;;		On entry : 0/0
 24523 ;;		On exit  : 0/0
 24524 ;;		Unchanged: 0/0
 24525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24528 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24529 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24530 ;;Total ram usage:       14 bytes
 24531 ;; Hardware stack levels used:    1
 24532 ;; Hardware stack levels required when called:    5
 24533 ;; This function calls:
 24534 ;;		_MIWIInterruptHandler
 24535 ;; This function is called by:
 24536 ;;		Interrupt level 2
 24537 ;; This function uses a non-reentrant model
 24538 ;;
 24539                           
 24540                           	psect	intcode
 24541  000008                     __pintcode:
 24542                           	opt stack 0
 24543  000008                     _SYS_InterruptHigh:
 24544                           	opt stack 13
 24545                           
 24546                           ;incstack = 0
 24547  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24548  00000A  CFFA F073          	movff	pclath,??_SYS_InterruptHigh
 24549  00000E  CFFB F074          	movff	pclatu,??_SYS_InterruptHigh+1
 24550  000012  EF0E  F0B2         	goto	int_func
 24551                           pclatu	equ	0xFFB
 24552                           pclath	equ	0xFFA
 24553                           tblptru	equ	0xFF8
 24554                           tblptrh	equ	0xFF7
 24555                           tblptrl	equ	0xFF6
 24556                           tablat	equ	0xFF5
 24557                           prodh	equ	0xFF4
 24558                           prodl	equ	0xFF3
 24559                           intcon	equ	0xFF2
 24560                           intcon2	equ	0xFF1
 24561                           intcon3	equ	0xFF0
 24562                           indf0	equ	0xFEF
 24563                           postinc0	equ	0xFEE
 24564                           plusw0	equ	0xFEB
 24565                           fsr0h	equ	0xFEA
 24566                           fsr0l	equ	0xFE9
 24567                           wreg	equ	0xFE8
 24568                           indf1	equ	0xFE7
 24569                           postinc1	equ	0xFE6
 24570                           postdec1	equ	0xFE5
 24571                           fsr1h	equ	0xFE2
 24572                           fsr1l	equ	0xFE1
 24573                           bsr	equ	0xFE0
 24574                           indf2	equ	0xFDF
 24575                           postinc2	equ	0xFDE
 24576                           postdec2	equ	0xFDD
 24577                           plusw2	equ	0xFDB
 24578                           fsr2h	equ	0xFDA
 24579                           fsr2l	equ	0xFD9
 24580                           status	equ	0xFD8
 24581                           
 24582                           	psect	intcode_body
 24583  01641C                     __pintcode_body:
 24584                           	opt stack 13
 24585  01641C                     int_func:
 24586                           	opt stack 13
 24587  01641C  CFE9 F075          	movff	fsr0l,??_SYS_InterruptHigh+2
 24588  016420  CFEA F076          	movff	fsr0h,??_SYS_InterruptHigh+3
 24589  016424  CFE1 F077          	movff	fsr1l,??_SYS_InterruptHigh+4
 24590  016428  CFE2 F078          	movff	fsr1h,??_SYS_InterruptHigh+5
 24591  01642C  CFD9 F079          	movff	fsr2l,??_SYS_InterruptHigh+6
 24592  016430  CFDA F07A          	movff	fsr2h,??_SYS_InterruptHigh+7
 24593  016434  CFF3 F07B          	movff	prodl,??_SYS_InterruptHigh+8
 24594  016438  CFF4 F07C          	movff	prodh,??_SYS_InterruptHigh+9
 24595  01643C  CFF6 F07D          	movff	tblptrl,??_SYS_InterruptHigh+10
 24596  016440  CFF7 F07E          	movff	tblptrh,??_SYS_InterruptHigh+11
 24597  016444  CFF8 F07F          	movff	tblptru,??_SYS_InterruptHigh+12
 24598  016448  CFF5 F080          	movff	tablat,??_SYS_InterruptHigh+13
 24599                           
 24600                           ;main.c: 729: MIWIInterruptHandler();
 24601  01644C  EC91  F08D         	call	_MIWIInterruptHandler	;wreg free
 24602  016450  C080  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 24603  016454  C07F  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 24604  016458  C07E  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 24605  01645C  C07D  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 24606  016460  C07C  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 24607  016464  C07B  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 24608  016468  C07A  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 24609  01646C  C079  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 24610  016470  C078  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 24611  016474  C077  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 24612  016478  C076  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 24613  01647C  C075  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 24614  016480  C074  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 24615  016484  C073  FFFA         	movff	??_SYS_InterruptHigh,pclath
 24616  016488  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24617  01648A  0011               	retfie		f
 24618  01648C                     __end_of_SYS_InterruptHigh:
 24619                           	opt stack 0
 24620                           pclatu	equ	0xFFB
 24621                           pclath	equ	0xFFA
 24622                           tblptru	equ	0xFF8
 24623                           tblptrh	equ	0xFF7
 24624                           tblptrl	equ	0xFF6
 24625                           tablat	equ	0xFF5
 24626                           prodh	equ	0xFF4
 24627                           prodl	equ	0xFF3
 24628                           intcon	equ	0xFF2
 24629                           intcon2	equ	0xFF1
 24630                           intcon3	equ	0xFF0
 24631                           indf0	equ	0xFEF
 24632                           postinc0	equ	0xFEE
 24633                           plusw0	equ	0xFEB
 24634                           fsr0h	equ	0xFEA
 24635                           fsr0l	equ	0xFE9
 24636                           wreg	equ	0xFE8
 24637                           indf1	equ	0xFE7
 24638                           postinc1	equ	0xFE6
 24639                           postdec1	equ	0xFE5
 24640                           fsr1h	equ	0xFE2
 24641                           fsr1l	equ	0xFE1
 24642                           bsr	equ	0xFE0
 24643                           indf2	equ	0xFDF
 24644                           postinc2	equ	0xFDE
 24645                           postdec2	equ	0xFDD
 24646                           plusw2	equ	0xFDB
 24647                           fsr2h	equ	0xFDA
 24648                           fsr2l	equ	0xFD9
 24649                           status	equ	0xFD8
 24650                           
 24651 ;; *************** function _MIWIInterruptHandler *****************
 24652 ;; Defined at:
 24653 ;;		line 1258 in file "src/miwi/drv_mrf_miwi_89xa.c"
 24654 ;; Parameters:    Size  Location     Type
 24655 ;;		None
 24656 ;; Auto vars:     Size  Location     Type
 24657 ;;  ackInfoIndex    1   15[BANK0 ] unsigned char 
 24658 ;;  i               1   18[BANK0 ] unsigned char 
 24659 ;;  fifo_stat       1    8[BANK0 ] unsigned char 
 24660 ;;  ackPacket       4    9[BANK0 ] unsigned char [4]
 24661 ;;  counter         2    6[BANK0 ] unsigned int 
 24662 ;;  BankIndex       1   17[BANK0 ] unsigned char 
 24663 ;;  PacketLen       1   16[BANK0 ] unsigned char 
 24664 ;;  RxPacketPtr     1   14[BANK0 ] unsigned char 
 24665 ;;  bAck            1   13[BANK0 ] unsigned char 
 24666 ;; Return value:  Size  Location     Type
 24667 ;;		None               void
 24668 ;; Registers used:
 24669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24670 ;; Tracked objects:
 24671 ;;		On entry : 0/0
 24672 ;;		On exit  : 0/0
 24673 ;;		Unchanged: 0/0
 24674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24676 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24677 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24678 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24679 ;;Total ram usage:       19 bytes
 24680 ;; Hardware stack levels used:    1
 24681 ;; Hardware stack levels required when called:    4
 24682 ;; This function calls:
 24683 ;;		i2_MiWi_TickGet
 24684 ;;		i2_RegisterRead
 24685 ;;		i2_SPIGet
 24686 ;;		i2_TxPacket
 24687 ;; This function is called by:
 24688 ;;		_SYS_InterruptHigh
 24689 ;; This function uses a non-reentrant model
 24690 ;;
 24691                           
 24692                           	psect	text82
 24693  011B22                     __ptext82:
 24694                           	opt stack 0
 24695  011B22                     _MIWIInterruptHandler:
 24696                           	opt stack 13
 24697                           
 24698                           ;drv_mrf_miwi_89xa.c: 1260: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE)
 24699                           
 24700                           ;incstack = 0
 24701  011B22  B0F0               	btfsc	intcon3,0,c	;volatile
 24702  011B24  A6F0               	btfss	intcon3,3,c	;volatile
 24703  011B26  D270               	goto	i2l13714
 24704                           
 24705                           ;drv_mrf_miwi_89xa.c: 1261: {
 24706                           ;drv_mrf_miwi_89xa.c: 1262: INTCON3bits.INT1IF = 0;
 24707  011B28  90F0               	bcf	intcon3,0,c	;volatile
 24708                           
 24709                           ;drv_mrf_miwi_89xa.c: 1268: if(RF_Mode == 0x60)
 24710  011B2A  0E60               	movlw	96
 24711  011B2C  1843               	xorwf	_RF_Mode,w,c
 24712  011B2E  A4D8               	btfss	status,2,c
 24713  011B30  D267               	goto	i2l13708
 24714                           
 24715                           ;drv_mrf_miwi_89xa.c: 1269: {
 24716                           ;drv_mrf_miwi_89xa.c: 1270: uint8_t RxPacketPtr;
 24717                           ;drv_mrf_miwi_89xa.c: 1271: uint8_t PacketLen;
 24718                           ;drv_mrf_miwi_89xa.c: 1272: uint8_t BankIndex;
 24719                           ;drv_mrf_miwi_89xa.c: 1273: uint16_t counter;
 24720                           ;drv_mrf_miwi_89xa.c: 1274: bool bAck;
 24721                           ;drv_mrf_miwi_89xa.c: 1275: uint8_t ackPacket[4];
 24722                           ;drv_mrf_miwi_89xa.c: 1281: RSSILock = RSSIVal;
 24723  011B32  C044  F165         	movff	_RSSIVal,_RSSILock
 24724                           
 24725                           ;drv_mrf_miwi_89xa.c: 1283: LATCbits.LATC6 = 0;
 24726  011B36  9C8B               	bcf	3979,6,c	;volatile
 24727                           
 24728                           ;drv_mrf_miwi_89xa.c: 1284: PacketLen = SPIGet();
 24729  011B38  EC98  F0B5         	call	i2_SPIGet	;wreg free
 24730  011B3C  0100               	movlb	0	; () banked
 24731  011B3E  6F70               	movwf	MIWIInterruptHandler@PacketLen& (0+255),b
 24732                           
 24733                           ; BSR set to: 0
 24734                           ;drv_mrf_miwi_89xa.c: 1285: LATCbits.LATC6 = 1;
 24735  011B40  8C8B               	bsf	3979,6,c	;volatile
 24736                           
 24737                           ; BSR set to: 0
 24738                           ;drv_mrf_miwi_89xa.c: 1288: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 24739  011B42  0E00               	movlw	0
 24740  011B44  0100               	movlb	0	; () banked
 24741  011B46  6F71               	movwf	MIWIInterruptHandler@BankIndex& (0+255),b
 24742  011B48                     i2l13548:
 24743                           
 24744                           ; BSR set to: 0
 24745  011B48  0E01               	movlw	1
 24746  011B4A  0100               	movlb	0	; () banked
 24747  011B4C  6571               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 24748  011B4E  D001               	goto	i2l13552
 24749  011B50  D00F               	goto	i2l13560
 24750  011B52                     i2l13552:
 24751                           
 24752                           ; BSR set to: 0
 24753                           ;drv_mrf_miwi_89xa.c: 1289: {
 24754                           ;drv_mrf_miwi_89xa.c: 1290: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 24755  011B52  0100               	movlb	0	; () banked
 24756  011B54  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 24757  011B56  0D42               	mullw	66
 24758  011B58  0E50               	movlw	low _RxPacket
 24759  011B5A  24F3               	addwf	prodl,w,c
 24760  011B5C  6ED9               	movwf	fsr2l,c
 24761  011B5E  0E03               	movlw	high _RxPacket
 24762  011B60  20F4               	addwfc	prodh,w,c
 24763  011B62  6EDA               	movwf	fsr2h,c
 24764  011B64  0103               	movlb	3	; () banked
 24765  011B66  A0DF               	btfss	indf2,0,c
 24766  011B68  D003               	goto	i2l13560
 24767                           
 24768                           ; BSR set to: 3
 24769                           
 24770                           ; BSR set to: 3
 24771                           
 24772                           ; BSR set to: 3
 24773                           ;drv_mrf_miwi_89xa.c: 1291: {
 24774                           ;drv_mrf_miwi_89xa.c: 1292: break;
 24775  011B6A  0100               	movlb	0	; () banked
 24776  011B6C  2B71               	incf	MIWIInterruptHandler@BankIndex& (0+255),f,b
 24777  011B6E  D7EC               	goto	i2l13548
 24778  011B70                     i2l13560:
 24779                           
 24780                           ;drv_mrf_miwi_89xa.c: 1293: }
 24781                           ;drv_mrf_miwi_89xa.c: 1294: }
 24782                           ;drv_mrf_miwi_89xa.c: 1297: if( PacketLen == 2 )
 24783  011B70  0E02               	movlw	2
 24784  011B72  0100               	movlb	0	; () banked
 24785  011B74  1970               	xorwf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 24786  011B76  A4D8               	btfss	status,2,c
 24787  011B78  D002               	goto	i2l13564
 24788                           
 24789                           ; BSR set to: 0
 24790                           ;drv_mrf_miwi_89xa.c: 1298: {
 24791                           ;drv_mrf_miwi_89xa.c: 1299: bAck = 1;
 24792  011B7A  0E01               	movlw	1
 24793  011B7C  D001               	goto	L14
 24794  011B7E                     i2l13564:
 24795                           
 24796                           ; BSR set to: 0
 24797                           ;drv_mrf_miwi_89xa.c: 1301: else
 24798                           ;drv_mrf_miwi_89xa.c: 1302: {
 24799                           ;drv_mrf_miwi_89xa.c: 1303: bAck = 0;
 24800  011B7E  0E00               	movlw	0
 24801  011B80                     L14:
 24802  011B80  0100               	movlb	0	; () banked
 24803  011B82  6F6D               	movwf	MIWIInterruptHandler@bAck& (0+255),b
 24804                           
 24805                           ; BSR set to: 0
 24806                           ;drv_mrf_miwi_89xa.c: 1304: }
 24807                           ;drv_mrf_miwi_89xa.c: 1307: if( PacketLen >= (32+11+4+4+4+9) || PacketLen == 0 || (BankI
      +                          ndex >= 2 && (bAck==0)) )
 24808                           
 24809                           ; BSR set to: 0
 24810  011B84  0E40               	movlw	64
 24811  011B86  0100               	movlb	0	; () banked
 24812  011B88  6170               	cpfslt	MIWIInterruptHandler@PacketLen& (0+255),b
 24813  011B8A  D00E               	goto	i2l13574
 24814                           
 24815                           ; BSR set to: 0
 24816  011B8C  0100               	movlb	0	; () banked
 24817  011B8E  5170               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 24818  011B90  0100               	movlb	0	; () banked
 24819  011B92  B4D8               	btfsc	status,2,c
 24820  011B94  D009               	goto	i2l13574
 24821                           
 24822                           ; BSR set to: 0
 24823  011B96  0E01               	movlw	1
 24824  011B98  0100               	movlb	0	; () banked
 24825  011B9A  6571               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 24826  011B9C  D016               	goto	i2l13584
 24827                           
 24828                           ; BSR set to: 0
 24829  011B9E  0100               	movlb	0	; () banked
 24830  011BA0  516D               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 24831  011BA2  0100               	movlb	0	; () banked
 24832  011BA4  A4D8               	btfss	status,2,c
 24833  011BA6  D011               	goto	i2l13584
 24834  011BA8                     i2l13574:
 24835                           
 24836                           ; BSR set to: 0
 24837                           ;drv_mrf_miwi_89xa.c: 1310: {
 24838                           ;drv_mrf_miwi_89xa.c: 1311: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 24839  011BA8  0E1A               	movlw	26
 24840  011BAA  ECD9  F0B3         	call	i2_RegisterRead
 24841  011BAE  D007               	goto	L15
 24842  011BB0                     i2l392:
 24843                           
 24844                           ; BSR set to: 0
 24845                           ;drv_mrf_miwi_89xa.c: 1313: {
 24846                           ;drv_mrf_miwi_89xa.c: 1314: LATCbits.LATC6 = 0;
 24847  011BB0  9C8B               	bcf	3979,6,c	;volatile
 24848                           
 24849                           ; BSR set to: 0
 24850                           ;drv_mrf_miwi_89xa.c: 1315: SPIGet();
 24851  011BB2  EC98  F0B5         	call	i2_SPIGet	;wreg free
 24852                           
 24853                           ;drv_mrf_miwi_89xa.c: 1316: LATCbits.LATC6 = 1;
 24854  011BB6  8C8B               	bsf	3979,6,c	;volatile
 24855                           
 24856                           ;drv_mrf_miwi_89xa.c: 1317: fifo_stat = RegisterRead(0x1A00>>8);
 24857  011BB8  0E1A               	movlw	26
 24858  011BBA  ECD9  F0B3         	call	i2_RegisterRead
 24859  011BBE                     L15:
 24860  011BBE  0100               	movlb	0	; () banked
 24861  011BC0  6F68               	movwf	MIWIInterruptHandler@fifo_stat& (0+255),b
 24862                           
 24863                           ; BSR set to: 0
 24864                           
 24865                           ; BSR set to: 0
 24866  011BC2  0100               	movlb	0	; () banked
 24867  011BC4  A368               	btfss	MIWIInterruptHandler@fifo_stat& (0+255),1,b
 24868  011BC6  D21E               	goto	i2l13710
 24869  011BC8  D7F3               	goto	i2l392
 24870  011BCA                     i2l13584:
 24871                           
 24872                           ; BSR set to: 0
 24873                           ;drv_mrf_miwi_89xa.c: 1321: }
 24874                           ;drv_mrf_miwi_89xa.c: 1323: RxPacketPtr = 0;
 24875  011BCA  0E00               	movlw	0
 24876  011BCC  0100               	movlb	0	; () banked
 24877  011BCE  6F6E               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 24878                           
 24879                           ; BSR set to: 0
 24880                           ;drv_mrf_miwi_89xa.c: 1324: counter = PacketLen;
 24881  011BD0  C070  F066         	movff	MIWIInterruptHandler@PacketLen,MIWIInterruptHandler@counter
 24882  011BD4  0100               	movlb	0	; () banked
 24883  011BD6  6B67               	clrf	(MIWIInterruptHandler@counter+1)& (0+255),b
 24884                           
 24885                           ;drv_mrf_miwi_89xa.c: 1326: while(counter >= 1)
 24886  011BD8  D20C               	goto	i2l13706
 24887  011BDA                     i2l13588:
 24888                           
 24889                           ; BSR set to: 0
 24890                           ;drv_mrf_miwi_89xa.c: 1329: if(1)
 24891  011BDA  0100               	movlb	0	; () banked
 24892  011BDC  0766               	decf	MIWIInterruptHandler@counter& (0+255),f,b
 24893  011BDE  A0D8               	btfss	status,0,c
 24894  011BE0  0767               	decf	(MIWIInterruptHandler@counter+1)& (0+255),f,b
 24895                           
 24896                           ; BSR set to: 0
 24897                           ;drv_mrf_miwi_89xa.c: 1330: {
 24898                           ;drv_mrf_miwi_89xa.c: 1332: if( bAck )
 24899  011BE2  0100               	movlb	0	; () banked
 24900  011BE4  516D               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 24901  011BE6  0100               	movlb	0	; () banked
 24902  011BE8  B4D8               	btfsc	status,2,c
 24903  011BEA  D010               	goto	i2l398
 24904                           
 24905                           ; BSR set to: 0
 24906                           ;drv_mrf_miwi_89xa.c: 1333: {
 24907                           ;drv_mrf_miwi_89xa.c: 1334: LATCbits.LATC6 = 0;
 24908  011BEC  9C8B               	bcf	3979,6,c	;volatile
 24909                           
 24910                           ; BSR set to: 0
 24911                           ;drv_mrf_miwi_89xa.c: 1335: ackPacket[RxPacketPtr++] = SPIGet();
 24912  011BEE  0100               	movlb	0	; () banked
 24913  011BF0  516E               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 24914  011BF2  0D01               	mullw	1
 24915  011BF4  0E69               	movlw	low MIWIInterruptHandler@ackPacket
 24916  011BF6  24F3               	addwf	prodl,w,c
 24917  011BF8  6ED9               	movwf	fsr2l,c
 24918  011BFA  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 24919  011BFC  20F4               	addwfc	prodh,w,c
 24920  011BFE  6EDA               	movwf	fsr2h,c
 24921  011C00  EC98  F0B5         	call	i2_SPIGet	;wreg free
 24922  011C04  D024               	goto	L16
 24923  011C06                     i2l13596:
 24924  011C06  0100               	movlb	0	; () banked
 24925  011C08  2B6E               	incf	MIWIInterruptHandler@RxPacketPtr& (0+255),f,b
 24926  011C0A  D023               	goto	i2l13604
 24927  011C0C                     i2l398:
 24928                           
 24929                           ; BSR set to: 0
 24930                           ;drv_mrf_miwi_89xa.c: 1339: else
 24931                           ;drv_mrf_miwi_89xa.c: 1340: {
 24932                           ;drv_mrf_miwi_89xa.c: 1341: LATCbits.LATC6 = 0;
 24933  011C0C  9C8B               	bcf	3979,6,c	;volatile
 24934                           
 24935                           ; BSR set to: 0
 24936                           ;drv_mrf_miwi_89xa.c: 1342: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 24937  011C0E  0100               	movlb	0	; () banked
 24938  011C10  516E               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 24939  011C12  0D01               	mullw	1
 24940  011C14  0E01               	movlw	1
 24941  011C16  26F3               	addwf	prodl,f,c
 24942  011C18  0E00               	movlw	0
 24943  011C1A  22F4               	addwfc	prodh,f,c
 24944  011C1C  0E50               	movlw	low _RxPacket
 24945  011C1E  0100               	movlb	0	; () banked
 24946  011C20  6F60               	movwf	??_MIWIInterruptHandler& (0+255),b
 24947  011C22  0E03               	movlw	high _RxPacket
 24948  011C24  0100               	movlb	0	; () banked
 24949  011C26  6F61               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 24950  011C28  50F3               	movf	prodl,w,c
 24951  011C2A  0100               	movlb	0	; () banked
 24952  011C2C  2760               	addwf	??_MIWIInterruptHandler& (0+255),f,b
 24953  011C2E  50F4               	movf	prodh,w,c
 24954  011C30  0100               	movlb	0	; () banked
 24955  011C32  2361               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),f,b
 24956  011C34  0100               	movlb	0	; () banked
 24957  011C36  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 24958  011C38  0D42               	mullw	66
 24959  011C3A  50F3               	movf	prodl,w,c
 24960  011C3C  0100               	movlb	0	; () banked
 24961  011C3E  2560               	addwf	??_MIWIInterruptHandler& (0+255),w,b
 24962  011C40  6ED9               	movwf	fsr2l,c
 24963  011C42  50F4               	movf	prodh,w,c
 24964  011C44  0100               	movlb	0	; () banked
 24965  011C46  2161               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),w,b
 24966  011C48  6EDA               	movwf	fsr2h,c
 24967  011C4A  EC98  F0B5         	call	i2_SPIGet	;wreg free
 24968  011C4E                     L16:
 24969  011C4E  6EDF               	movwf	indf2,c
 24970  011C50  D7DA               	goto	i2l13596
 24971  011C52                     i2l13604:
 24972                           
 24973                           ; BSR set to: 0
 24974                           ;drv_mrf_miwi_89xa.c: 1343: LATCbits.LATC6 = 1;
 24975  011C52  8C8B               	bsf	3979,6,c	;volatile
 24976                           
 24977                           ; BSR set to: 0
 24978                           ;drv_mrf_miwi_89xa.c: 1344: }
 24979                           ;drv_mrf_miwi_89xa.c: 1347: if( RxPacketPtr >= PacketLen )
 24980                           
 24981                           ; BSR set to: 0
 24982  011C54  0100               	movlb	0	; () banked
 24983  011C56  5170               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 24984  011C58  0100               	movlb	0	; () banked
 24985  011C5A  5D6E               	subwf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 24986  011C5C  A0D8               	btfss	status,0,c
 24987  011C5E  D1C9               	goto	i2l13706
 24988                           
 24989                           ; BSR set to: 0
 24990                           ;drv_mrf_miwi_89xa.c: 1348: {
 24991                           ;drv_mrf_miwi_89xa.c: 1349: uint8_t i;
 24992                           ;drv_mrf_miwi_89xa.c: 1351: if( bAck )
 24993  011C60  0100               	movlb	0	; () banked
 24994  011C62  516D               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 24995  011C64  0100               	movlb	0	; () banked
 24996  011C66  B4D8               	btfsc	status,2,c
 24997  011C68  D037               	goto	i2l401
 24998                           
 24999                           ; BSR set to: 0
 25000                           ;drv_mrf_miwi_89xa.c: 1352: {
 25001                           ;drv_mrf_miwi_89xa.c: 1354: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 25002  011C6A  0100               	movlb	0	; () banked
 25003  011C6C  5169               	movf	MIWIInterruptHandler@ackPacket& (0+255),w,b
 25004  011C6E  0B03               	andlw	3
 25005  011C70  0A02               	xorlw	2
 25006  011C72  A4D8               	btfss	status,2,c
 25007  011C74  D00B               	goto	i2l13618
 25008                           
 25009                           ; BSR set to: 0
 25010                           ;drv_mrf_miwi_89xa.c: 1355: {
 25011                           ;drv_mrf_miwi_89xa.c: 1356: if( ackPacket[1] == TxMACSeq )
 25012  011C76  5046               	movf	_TxMACSeq,w,c
 25013  011C78  0100               	movlb	0	; () banked
 25014  011C7A  196A               	xorwf	(MIWIInterruptHandler@ackPacket+1)& (0+255),w,b
 25015  011C7C  A4D8               	btfss	status,2,c
 25016  011C7E  D002               	goto	i2l403
 25017                           
 25018                           ; BSR set to: 0
 25019                           ;drv_mrf_miwi_89xa.c: 1357: {
 25020                           ;drv_mrf_miwi_89xa.c: 1358: hasAck = 1;
 25021  011C80  0E01               	movlw	1
 25022  011C82  6E47               	movwf	_hasAck,c	;volatile
 25023  011C84                     i2l403:
 25024                           
 25025                           ; BSR set to: 0
 25026                           ;drv_mrf_miwi_89xa.c: 1359: }
 25027                           ;drv_mrf_miwi_89xa.c: 1360: RxPacketPtr = 0;
 25028  011C84  0E00               	movlw	0
 25029  011C86  0100               	movlb	0	; () banked
 25030  011C88  6F6E               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 25031                           
 25032                           ;drv_mrf_miwi_89xa.c: 1361: goto RETURN_HERE;
 25033  011C8A  D1BC               	goto	i2l13710
 25034  011C8C                     i2l13618:
 25035                           
 25036                           ; BSR set to: 0
 25037                           ;drv_mrf_miwi_89xa.c: 1363: else
 25038                           ;drv_mrf_miwi_89xa.c: 1365: if( BankIndex >= 2 )
 25039  011C8C  0E01               	movlw	1
 25040  011C8E  0100               	movlb	0	; () banked
 25041  011C90  6571               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 25042  011C92  D004               	goto	i2l13622
 25043                           
 25044                           ; BSR set to: 0
 25045                           ;drv_mrf_miwi_89xa.c: 1366: {
 25046                           ;drv_mrf_miwi_89xa.c: 1367: RxPacketPtr = 0;
 25047  011C94  0E00               	movlw	0
 25048  011C96  0100               	movlb	0	; () banked
 25049  011C98  6F6E               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 25050                           
 25051                           ;drv_mrf_miwi_89xa.c: 1368: goto IGNORE_HERE;
 25052  011C9A  D786               	goto	i2l13574
 25053  011C9C                     i2l13622:
 25054                           
 25055                           ; BSR set to: 0
 25056                           ;drv_mrf_miwi_89xa.c: 1369: }
 25057                           ;drv_mrf_miwi_89xa.c: 1370: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 25058  011C9C  0100               	movlb	0	; () banked
 25059  011C9E  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25060  011CA0  0D42               	mullw	66
 25061  011CA2  0E01               	movlw	1
 25062  011CA4  26F3               	addwf	prodl,f,c
 25063  011CA6  0E00               	movlw	0
 25064  011CA8  22F4               	addwfc	prodh,f,c
 25065  011CAA  0E50               	movlw	low _RxPacket
 25066  011CAC  24F3               	addwf	prodl,w,c
 25067  011CAE  6ED9               	movwf	fsr2l,c
 25068  011CB0  0E03               	movlw	high _RxPacket
 25069  011CB2  20F4               	addwfc	prodh,w,c
 25070  011CB4  6EDA               	movwf	fsr2h,c
 25071  011CB6  C069  FFDF         	movff	MIWIInterruptHandler@ackPacket,indf2
 25072                           
 25073                           ;drv_mrf_miwi_89xa.c: 1371: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 25074  011CBA  0100               	movlb	0	; () banked
 25075  011CBC  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25076  011CBE  0D42               	mullw	66
 25077  011CC0  0E02               	movlw	2
 25078  011CC2  26F3               	addwf	prodl,f,c
 25079  011CC4  0E00               	movlw	0
 25080  011CC6  22F4               	addwfc	prodh,f,c
 25081  011CC8  0E50               	movlw	low _RxPacket
 25082  011CCA  24F3               	addwf	prodl,w,c
 25083  011CCC  6ED9               	movwf	fsr2l,c
 25084  011CCE  0E03               	movlw	high _RxPacket
 25085  011CD0  20F4               	addwfc	prodh,w,c
 25086  011CD2  6EDA               	movwf	fsr2h,c
 25087  011CD4  C06A  FFDF         	movff	MIWIInterruptHandler@ackPacket+1,indf2
 25088  011CD8                     i2l401:
 25089                           
 25090                           ; BSR set to: 0
 25091                           ;drv_mrf_miwi_89xa.c: 1373: }
 25092                           ;drv_mrf_miwi_89xa.c: 1375: RxPacket[BankIndex].PayloadLen = PacketLen;
 25093  011CD8  0100               	movlb	0	; () banked
 25094  011CDA  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25095  011CDC  0D42               	mullw	66
 25096  011CDE  0E41               	movlw	65
 25097  011CE0  26F3               	addwf	prodl,f,c
 25098  011CE2  0E00               	movlw	0
 25099  011CE4  22F4               	addwfc	prodh,f,c
 25100  011CE6  0E50               	movlw	low _RxPacket
 25101  011CE8  24F3               	addwf	prodl,w,c
 25102  011CEA  6ED9               	movwf	fsr2l,c
 25103  011CEC  0E03               	movlw	high _RxPacket
 25104  011CEE  20F4               	addwfc	prodh,w,c
 25105  011CF0  6EDA               	movwf	fsr2h,c
 25106  011CF2  C070  FFDF         	movff	MIWIInterruptHandler@PacketLen,indf2
 25107                           
 25108                           ; BSR set to: 0
 25109                           ;drv_mrf_miwi_89xa.c: 1392: {
 25110                           ;drv_mrf_miwi_89xa.c: 1393: uint8_t ackInfoIndex = 0xFF;
 25111  011CF6  0100               	movlb	0	; () banked
 25112  011CF8  696F               	setf	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 25113                           
 25114                           ;drv_mrf_miwi_89xa.c: 1395: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 25115  011CFA  0100               	movlb	0	; () banked
 25116  011CFC  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25117  011CFE  0D42               	mullw	66
 25118  011D00  0E01               	movlw	1
 25119  011D02  26F3               	addwf	prodl,f,c
 25120  011D04  0E00               	movlw	0
 25121  011D06  22F4               	addwfc	prodh,f,c
 25122  011D08  0E50               	movlw	low _RxPacket
 25123  011D0A  24F3               	addwf	prodl,w,c
 25124  011D0C  6ED9               	movwf	fsr2l,c
 25125  011D0E  0E03               	movlw	high _RxPacket
 25126  011D10  20F4               	addwfc	prodh,w,c
 25127  011D12  6EDA               	movwf	fsr2h,c
 25128  011D14  0103               	movlb	3	; () banked
 25129  011D16  ACDF               	btfss	indf2,6,c
 25130  011D18  D055               	goto	i2l13638
 25131                           
 25132                           ; BSR set to: 3
 25133                           ;drv_mrf_miwi_89xa.c: 1396: {
 25134                           ;drv_mrf_miwi_89xa.c: 1397: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 25135  011D1A  0E00               	movlw	0
 25136  011D1C  0100               	movlb	0	; () banked
 25137  011D1E  6F72               	movwf	MIWIInterruptHandler@i& (0+255),b
 25138  011D20  D045               	goto	i2l13636
 25139  011D22                     i2l13628:
 25140                           
 25141                           ; BSR set to: 0
 25142                           ;drv_mrf_miwi_89xa.c: 1398: {
 25143                           ;drv_mrf_miwi_89xa.c: 1399: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 25144  011D22  0100               	movlb	0	; () banked
 25145  011D24  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25146  011D26  0D01               	mullw	1
 25147  011D28  50F3               	movf	prodl,w,c
 25148  011D2A  243D               	addwf	_MACInitParams+1,w,c
 25149  011D2C  6ED9               	movwf	fsr2l,c
 25150  011D2E  50F4               	movf	prodh,w,c
 25151  011D30  203E               	addwfc	_MACInitParams+2,w,c
 25152  011D32  6EDA               	movwf	fsr2h,c
 25153  011D34  0100               	movlb	0	; () banked
 25154  011D36  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25155  011D38  0D42               	mullw	66
 25156  011D3A  0100               	movlb	0	; () banked
 25157  011D3C  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25158  011D3E  0100               	movlb	0	; () banked
 25159  011D40  6F61               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 25160  011D42  6B62               	clrf	(??_MIWIInterruptHandler+2)& (0+255),b
 25161  011D44  0E03               	movlw	3
 25162  011D46  0100               	movlb	0	; () banked
 25163  011D48  2761               	addwf	(??_MIWIInterruptHandler+1)& (0+255),f,b
 25164  011D4A  0E00               	movlw	0
 25165  011D4C  2362               	addwfc	(??_MIWIInterruptHandler+2)& (0+255),f,b
 25166  011D4E  0E50               	movlw	low _RxPacket
 25167  011D50  0100               	movlb	0	; () banked
 25168  011D52  6F63               	movwf	(??_MIWIInterruptHandler+3)& (0+255),b
 25169  011D54  0E03               	movlw	high _RxPacket
 25170  011D56  0100               	movlb	0	; () banked
 25171  011D58  6F64               	movwf	(??_MIWIInterruptHandler+4)& (0+255),b
 25172  011D5A  0100               	movlb	0	; () banked
 25173  011D5C  5161               	movf	(??_MIWIInterruptHandler+1)& (0+255),w,b
 25174  011D5E  0100               	movlb	0	; () banked
 25175  011D60  2763               	addwf	(??_MIWIInterruptHandler+3)& (0+255),f,b
 25176  011D62  0100               	movlb	0	; () banked
 25177  011D64  5162               	movf	(??_MIWIInterruptHandler+2)& (0+255),w,b
 25178  011D66  0100               	movlb	0	; () banked
 25179  011D68  2364               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),f,b
 25180  011D6A  50F3               	movf	prodl,w,c
 25181  011D6C  0100               	movlb	0	; () banked
 25182  011D6E  2563               	addwf	(??_MIWIInterruptHandler+3)& (0+255),w,b
 25183  011D70  6EE1               	movwf	fsr1l,c
 25184  011D72  50F4               	movf	prodh,w,c
 25185  011D74  0100               	movlb	0	; () banked
 25186  011D76  2164               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),w,b
 25187  011D78  6EE2               	movwf	fsr1h,c
 25188  011D7A  50DE               	movf	postinc2,w,c
 25189  011D7C  18E6               	xorwf	postinc1,w,c
 25190  011D7E  B4D8               	btfsc	status,2,c
 25191  011D80  D013               	goto	i2l13634
 25192                           
 25193                           ; BSR set to: 0
 25194                           ;drv_mrf_miwi_89xa.c: 1400: {
 25195                           ;drv_mrf_miwi_89xa.c: 1401: RxPacketPtr = 0;
 25196  011D82  0E00               	movlw	0
 25197  011D84  0100               	movlb	0	; () banked
 25198  011D86  6F6E               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 25199                           
 25200                           ; BSR set to: 0
 25201                           ;drv_mrf_miwi_89xa.c: 1402: RxPacket[BankIndex].PayloadLen = 0;
 25202  011D88  0100               	movlb	0	; () banked
 25203  011D8A  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25204  011D8C  0D42               	mullw	66
 25205  011D8E  0E41               	movlw	65
 25206  011D90  26F3               	addwf	prodl,f,c
 25207  011D92  0E00               	movlw	0
 25208  011D94  22F4               	addwfc	prodh,f,c
 25209  011D96  0E50               	movlw	low _RxPacket
 25210  011D98  24F3               	addwf	prodl,w,c
 25211  011D9A  6ED9               	movwf	fsr2l,c
 25212  011D9C  0E03               	movlw	high _RxPacket
 25213  011D9E  20F4               	addwfc	prodh,w,c
 25214  011DA0  6EDA               	movwf	fsr2h,c
 25215  011DA2  0E00               	movlw	0
 25216  011DA4  6EDF               	movwf	indf2,c
 25217                           
 25218                           ;drv_mrf_miwi_89xa.c: 1403: goto IGNORE_HERE;
 25219  011DA6  D700               	goto	i2l13574
 25220  011DA8                     i2l13634:
 25221                           
 25222                           ; BSR set to: 0
 25223  011DA8  0100               	movlb	0	; () banked
 25224  011DAA  2B72               	incf	MIWIInterruptHandler@i& (0+255),f,b
 25225  011DAC                     i2l13636:
 25226                           
 25227                           ; BSR set to: 0
 25228  011DAC  303C               	rrcf	_MACInitParams,w,c
 25229  011DAE  32E8               	rrcf	wreg,f,c
 25230  011DB0  32E8               	rrcf	wreg,f,c
 25231  011DB2  0B0F               	andlw	15
 25232  011DB4  0100               	movlb	0	; () banked
 25233  011DB6  6F60               	movwf	??_MIWIInterruptHandler& (0+255),b
 25234  011DB8  0100               	movlb	0	; () banked
 25235  011DBA  5160               	movf	??_MIWIInterruptHandler& (0+255),w,b
 25236  011DBC  0100               	movlb	0	; () banked
 25237  011DBE  5D72               	subwf	MIWIInterruptHandler@i& (0+255),w,b
 25238  011DC0  A0D8               	btfss	status,0,c
 25239  011DC2  D7AF               	goto	i2l13628
 25240  011DC4                     i2l13638:
 25241                           
 25242                           ;drv_mrf_miwi_89xa.c: 1404: }
 25243                           ;drv_mrf_miwi_89xa.c: 1405: }
 25244                           ;drv_mrf_miwi_89xa.c: 1406: }
 25245                           ;drv_mrf_miwi_89xa.c: 1409: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 25246  011DC4  0100               	movlb	0	; () banked
 25247  011DC6  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25248  011DC8  0D42               	mullw	66
 25249  011DCA  0E01               	movlw	1
 25250  011DCC  26F3               	addwf	prodl,f,c
 25251  011DCE  0E00               	movlw	0
 25252  011DD0  22F4               	addwfc	prodh,f,c
 25253  011DD2  0E50               	movlw	low _RxPacket
 25254  011DD4  24F3               	addwf	prodl,w,c
 25255  011DD6  6ED9               	movwf	fsr2l,c
 25256  011DD8  0E03               	movlw	high _RxPacket
 25257  011DDA  20F4               	addwfc	prodh,w,c
 25258  011DDC  6EDA               	movwf	fsr2h,c
 25259  011DDE  0103               	movlb	3	; () banked
 25260  011DE0  AADF               	btfss	indf2,5,c
 25261  011DE2  D057               	goto	i2l13672
 25262                           
 25263                           ; BSR set to: 3
 25264                           ;drv_mrf_miwi_89xa.c: 1410: {
 25265                           ;drv_mrf_miwi_89xa.c: 1412: for(i = 0; i < 2; i++)
 25266  011DE4  0E00               	movlw	0
 25267  011DE6  0100               	movlb	0	; () banked
 25268  011DE8  6F72               	movwf	MIWIInterruptHandler@i& (0+255),b
 25269  011DEA                     i2l13642:
 25270                           
 25271                           ; BSR set to: 0
 25272  011DEA  0E01               	movlw	1
 25273  011DEC  0100               	movlb	0	; () banked
 25274  011DEE  6572               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 25275  011DF0  D001               	goto	i2l13646
 25276  011DF2  D017               	goto	i2l13652
 25277  011DF4                     i2l13646:
 25278                           
 25279                           ; BSR set to: 0
 25280                           ;drv_mrf_miwi_89xa.c: 1413: {
 25281                           ;drv_mrf_miwi_89xa.c: 1414: ackPacket[i] = MACTxBuffer[i];
 25282  011DF4  0100               	movlb	0	; () banked
 25283  011DF6  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25284  011DF8  0D01               	mullw	1
 25285  011DFA  0EA0               	movlw	low _MACTxBuffer
 25286  011DFC  24F3               	addwf	prodl,w,c
 25287  011DFE  6ED9               	movwf	fsr2l,c
 25288  011E00  0E02               	movlw	high _MACTxBuffer
 25289  011E02  20F4               	addwfc	prodh,w,c
 25290  011E04  6EDA               	movwf	fsr2h,c
 25291  011E06  0100               	movlb	0	; () banked
 25292  011E08  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25293  011E0A  0D01               	mullw	1
 25294  011E0C  0E69               	movlw	low MIWIInterruptHandler@ackPacket
 25295  011E0E  24F3               	addwf	prodl,w,c
 25296  011E10  6EE1               	movwf	fsr1l,c
 25297  011E12  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 25298  011E14  20F4               	addwfc	prodh,w,c
 25299  011E16  6EE2               	movwf	fsr1h,c
 25300  011E18  CFDF FFE7          	movff	indf2,indf1
 25301                           
 25302                           ; BSR set to: 0
 25303  011E1C  0100               	movlb	0	; () banked
 25304  011E1E  2B72               	incf	MIWIInterruptHandler@i& (0+255),f,b
 25305  011E20  D7E4               	goto	i2l13642
 25306  011E22                     i2l13652:
 25307                           
 25308                           ; BSR set to: 0
 25309                           ;drv_mrf_miwi_89xa.c: 1415: }
 25310                           ;drv_mrf_miwi_89xa.c: 1416: MACTxBuffer[0] = 0x02 | 0x04;
 25311  011E22  0E06               	movlw	6
 25312  011E24  0102               	movlb	2	; () banked
 25313  011E26  6FA0               	movwf	_MACTxBuffer& (0+255),b	;volatile
 25314                           
 25315                           ; BSR set to: 2
 25316                           ;drv_mrf_miwi_89xa.c: 1417: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 25317  011E28  0100               	movlb	0	; () banked
 25318  011E2A  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25319  011E2C  0D42               	mullw	66
 25320  011E2E  0E02               	movlw	2
 25321  011E30  26F3               	addwf	prodl,f,c
 25322  011E32  0E00               	movlw	0
 25323  011E34  22F4               	addwfc	prodh,f,c
 25324  011E36  0E50               	movlw	low _RxPacket
 25325  011E38  24F3               	addwf	prodl,w,c
 25326  011E3A  6ED9               	movwf	fsr2l,c
 25327  011E3C  0E03               	movlw	high _RxPacket
 25328  011E3E  20F4               	addwfc	prodh,w,c
 25329  011E40  6EDA               	movwf	fsr2h,c
 25330  011E42  50DF               	movf	indf2,w,c
 25331  011E44  0102               	movlb	2	; () banked
 25332  011E46  6FA1               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 25333                           
 25334                           ; BSR set to: 2
 25335                           ;drv_mrf_miwi_89xa.c: 1418: INTCON3bits.INT1IF = 0;
 25336  011E48  90F0               	bcf	intcon3,0,c	;volatile
 25337                           
 25338                           ; BSR set to: 2
 25339                           ;drv_mrf_miwi_89xa.c: 1419: TxPacket(2, 0);
 25340  011E4A  0E00               	movlw	0
 25341  011E4C  6E1C               	movwf	i2TxPacket@CCA,c
 25342  011E4E  0E02               	movlw	2
 25343  011E50  EC6B  F0A3         	call	i2_TxPacket
 25344                           
 25345                           ;drv_mrf_miwi_89xa.c: 1422: for(i = 0; i < 2; i++)
 25346  011E54  0E00               	movlw	0
 25347  011E56  0100               	movlb	0	; () banked
 25348  011E58  6F72               	movwf	MIWIInterruptHandler@i& (0+255),b
 25349  011E5A                     i2l13662:
 25350                           
 25351                           ; BSR set to: 0
 25352  011E5A  0E01               	movlw	1
 25353  011E5C  0100               	movlb	0	; () banked
 25354  011E5E  6572               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 25355  011E60  D001               	goto	i2l13666
 25356  011E62  D017               	goto	i2l13672
 25357  011E64                     i2l13666:
 25358                           
 25359                           ; BSR set to: 0
 25360                           ;drv_mrf_miwi_89xa.c: 1423: {
 25361                           ;drv_mrf_miwi_89xa.c: 1424: MACTxBuffer[i] = ackPacket[i];
 25362  011E64  0100               	movlb	0	; () banked
 25363  011E66  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25364  011E68  0D01               	mullw	1
 25365  011E6A  0E69               	movlw	low MIWIInterruptHandler@ackPacket
 25366  011E6C  24F3               	addwf	prodl,w,c
 25367  011E6E  6ED9               	movwf	fsr2l,c
 25368  011E70  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 25369  011E72  20F4               	addwfc	prodh,w,c
 25370  011E74  6EDA               	movwf	fsr2h,c
 25371  011E76  0100               	movlb	0	; () banked
 25372  011E78  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25373  011E7A  0D01               	mullw	1
 25374  011E7C  0EA0               	movlw	low _MACTxBuffer
 25375  011E7E  24F3               	addwf	prodl,w,c
 25376  011E80  6EE1               	movwf	fsr1l,c
 25377  011E82  0E02               	movlw	high _MACTxBuffer
 25378  011E84  20F4               	addwfc	prodh,w,c
 25379  011E86  6EE2               	movwf	fsr1h,c
 25380  011E88  CFDF FFE7          	movff	indf2,indf1
 25381                           
 25382                           ; BSR set to: 0
 25383  011E8C  0100               	movlb	0	; () banked
 25384  011E8E  2B72               	incf	MIWIInterruptHandler@i& (0+255),f,b
 25385  011E90  D7E4               	goto	i2l13662
 25386  011E92                     i2l13672:
 25387                           
 25388                           ;drv_mrf_miwi_89xa.c: 1425: }
 25389                           ;drv_mrf_miwi_89xa.c: 1426: }
 25390                           ;drv_mrf_miwi_89xa.c: 1430: for(i = 0; i < 5; i++)
 25391  011E92  0E00               	movlw	0
 25392  011E94  0100               	movlb	0	; () banked
 25393  011E96  6F72               	movwf	MIWIInterruptHandler@i& (0+255),b
 25394  011E98                     i2l13674:
 25395                           
 25396                           ; BSR set to: 0
 25397  011E98  0E04               	movlw	4
 25398  011E9A  0100               	movlb	0	; () banked
 25399  011E9C  6572               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 25400  011E9E  D001               	goto	i2l13678
 25401  011EA0  D056               	goto	i2l13694
 25402  011EA2                     i2l13678:
 25403                           
 25404                           ; BSR set to: 0
 25405                           ;drv_mrf_miwi_89xa.c: 1431: {
 25406                           ;drv_mrf_miwi_89xa.c: 1432: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 25407  011EA2  0100               	movlb	0	; () banked
 25408  011EA4  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25409  011EA6  0D06               	mullw	6
 25410  011EA8  0E28               	movlw	low _AckInfo
 25411  011EAA  24F3               	addwf	prodl,w,c
 25412  011EAC  6ED9               	movwf	fsr2l,c
 25413  011EAE  0E02               	movlw	high _AckInfo
 25414  011EB0  20F4               	addwfc	prodh,w,c
 25415  011EB2  6EDA               	movwf	fsr2h,c
 25416  011EB4  50DF               	movf	indf2,w,c
 25417  011EB6  B4D8               	btfsc	status,2,c
 25418  011EB8  D036               	goto	i2l13684
 25419                           
 25420                           ; BSR set to: 0
 25421  011EBA  0100               	movlb	0	; () banked
 25422  011EBC  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25423  011EBE  0D42               	mullw	66
 25424  011EC0  0E02               	movlw	2
 25425  011EC2  26F3               	addwf	prodl,f,c
 25426  011EC4  0E00               	movlw	0
 25427  011EC6  22F4               	addwfc	prodh,f,c
 25428  011EC8  0E50               	movlw	low _RxPacket
 25429  011ECA  24F3               	addwf	prodl,w,c
 25430  011ECC  6ED9               	movwf	fsr2l,c
 25431  011ECE  0E03               	movlw	high _RxPacket
 25432  011ED0  20F4               	addwfc	prodh,w,c
 25433  011ED2  6EDA               	movwf	fsr2h,c
 25434  011ED4  0100               	movlb	0	; () banked
 25435  011ED6  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25436  011ED8  0D06               	mullw	6
 25437  011EDA  0E01               	movlw	1
 25438  011EDC  26F3               	addwf	prodl,f,c
 25439  011EDE  0E00               	movlw	0
 25440  011EE0  22F4               	addwfc	prodh,f,c
 25441  011EE2  0E28               	movlw	low _AckInfo
 25442  011EE4  24F3               	addwf	prodl,w,c
 25443  011EE6  6EE1               	movwf	fsr1l,c
 25444  011EE8  0E02               	movlw	high _AckInfo
 25445  011EEA  20F4               	addwfc	prodh,w,c
 25446  011EEC  6EE2               	movwf	fsr1h,c
 25447  011EEE  50DE               	movf	postinc2,w,c
 25448  011EF0  18E6               	xorwf	postinc1,w,c
 25449  011EF2  A4D8               	btfss	status,2,c
 25450  011EF4  D018               	goto	i2l13684
 25451                           
 25452                           ; BSR set to: 0
 25453                           ;drv_mrf_miwi_89xa.c: 1433: {
 25454                           ;drv_mrf_miwi_89xa.c: 1434: AckInfo[i].startTick = MiWi_TickGet();
 25455  011EF6  EC3A  F0B3         	call	i2_MiWi_TickGet	;wreg free
 25456  011EFA  0100               	movlb	0	; () banked
 25457  011EFC  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25458  011EFE  0D06               	mullw	6
 25459  011F00  0E02               	movlw	2
 25460  011F02  26F3               	addwf	prodl,f,c
 25461  011F04  0E00               	movlw	0
 25462  011F06  22F4               	addwfc	prodh,f,c
 25463  011F08  0E28               	movlw	low _AckInfo
 25464  011F0A  24F3               	addwf	prodl,w,c
 25465  011F0C  6ED9               	movwf	fsr2l,c
 25466  011F0E  0E02               	movlw	high _AckInfo
 25467  011F10  20F4               	addwfc	prodh,w,c
 25468  011F12  6EDA               	movwf	fsr2h,c
 25469  011F14  C012  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 25470  011F18  C013  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 25471  011F1C  C014  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 25472  011F20  C015  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 25473                           
 25474                           ;drv_mrf_miwi_89xa.c: 1435: break;
 25475  011F24  D014               	goto	i2l13694
 25476  011F26                     i2l13684:
 25477                           
 25478                           ; BSR set to: 0
 25479                           ;drv_mrf_miwi_89xa.c: 1436: }
 25480                           ;drv_mrf_miwi_89xa.c: 1437: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 25481  011F26  0100               	movlb	0	; () banked
 25482  011F28  296F               	incf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 25483  011F2A  A4D8               	btfss	status,2,c
 25484  011F2C  D00D               	goto	i2l13690
 25485                           
 25486                           ; BSR set to: 0
 25487  011F2E  0100               	movlb	0	; () banked
 25488  011F30  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25489  011F32  0D06               	mullw	6
 25490  011F34  0E28               	movlw	low _AckInfo
 25491  011F36  24F3               	addwf	prodl,w,c
 25492  011F38  6ED9               	movwf	fsr2l,c
 25493  011F3A  0E02               	movlw	high _AckInfo
 25494  011F3C  20F4               	addwfc	prodh,w,c
 25495  011F3E  6EDA               	movwf	fsr2h,c
 25496  011F40  50DF               	movf	indf2,w,c
 25497  011F42  B4D8               	btfsc	status,2,c
 25498                           
 25499                           ; BSR set to: 0
 25500                           ;drv_mrf_miwi_89xa.c: 1438: {
 25501                           ;drv_mrf_miwi_89xa.c: 1439: ackInfoIndex = i;
 25502  011F44  C072  F06F         	movff	MIWIInterruptHandler@i,MIWIInterruptHandler@ackInfoIndex
 25503  011F48                     i2l13690:
 25504                           
 25505                           ; BSR set to: 0
 25506  011F48  0100               	movlb	0	; () banked
 25507  011F4A  2B72               	incf	MIWIInterruptHandler@i& (0+255),f,b
 25508  011F4C  D7A5               	goto	i2l13674
 25509  011F4E                     i2l13694:
 25510                           
 25511                           ; BSR set to: 0
 25512                           ;drv_mrf_miwi_89xa.c: 1440: }
 25513                           ;drv_mrf_miwi_89xa.c: 1441: }
 25514                           ;drv_mrf_miwi_89xa.c: 1443: if( i >= 5 )
 25515  011F4E  0E04               	movlw	4
 25516  011F50  0100               	movlb	0	; () banked
 25517  011F52  6572               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 25518  011F54  D057               	goto	i2l13710
 25519                           
 25520                           ; BSR set to: 0
 25521                           ;drv_mrf_miwi_89xa.c: 1444: {
 25522                           ;drv_mrf_miwi_89xa.c: 1445: if( ackInfoIndex < 5 )
 25523  011F56  0E05               	movlw	5
 25524  011F58  0100               	movlb	0	; () banked
 25525  011F5A  616F               	cpfslt	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 25526  011F5C  D03E               	goto	i2l13704
 25527                           
 25528                           ; BSR set to: 0
 25529                           ;drv_mrf_miwi_89xa.c: 1446: {
 25530                           ;drv_mrf_miwi_89xa.c: 1447: AckInfo[ackInfoIndex].Valid = 1;
 25531  011F5E  0100               	movlb	0	; () banked
 25532  011F60  516F               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 25533  011F62  0D06               	mullw	6
 25534  011F64  0E28               	movlw	low _AckInfo
 25535  011F66  24F3               	addwf	prodl,w,c
 25536  011F68  6ED9               	movwf	fsr2l,c
 25537  011F6A  0E02               	movlw	high _AckInfo
 25538  011F6C  20F4               	addwfc	prodh,w,c
 25539  011F6E  6EDA               	movwf	fsr2h,c
 25540  011F70  0E01               	movlw	1
 25541  011F72  6EDF               	movwf	indf2,c
 25542                           
 25543                           ; BSR set to: 0
 25544                           ;drv_mrf_miwi_89xa.c: 1448: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 25545  011F74  0100               	movlb	0	; () banked
 25546  011F76  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25547  011F78  0D42               	mullw	66
 25548  011F7A  0E02               	movlw	2
 25549  011F7C  26F3               	addwf	prodl,f,c
 25550  011F7E  0E00               	movlw	0
 25551  011F80  22F4               	addwfc	prodh,f,c
 25552  011F82  0E50               	movlw	low _RxPacket
 25553  011F84  24F3               	addwf	prodl,w,c
 25554  011F86  6ED9               	movwf	fsr2l,c
 25555  011F88  0E03               	movlw	high _RxPacket
 25556  011F8A  20F4               	addwfc	prodh,w,c
 25557  011F8C  6EDA               	movwf	fsr2h,c
 25558  011F8E  0100               	movlb	0	; () banked
 25559  011F90  516F               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 25560  011F92  0D06               	mullw	6
 25561  011F94  0E01               	movlw	1
 25562  011F96  26F3               	addwf	prodl,f,c
 25563  011F98  0E00               	movlw	0
 25564  011F9A  22F4               	addwfc	prodh,f,c
 25565  011F9C  0E28               	movlw	low _AckInfo
 25566  011F9E  24F3               	addwf	prodl,w,c
 25567  011FA0  6EE1               	movwf	fsr1l,c
 25568  011FA2  0E02               	movlw	high _AckInfo
 25569  011FA4  20F4               	addwfc	prodh,w,c
 25570  011FA6  6EE2               	movwf	fsr1h,c
 25571  011FA8  CFDF FFE7          	movff	indf2,indf1
 25572                           
 25573                           ; BSR set to: 0
 25574                           ;drv_mrf_miwi_89xa.c: 1449: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 25575  011FAC  EC3A  F0B3         	call	i2_MiWi_TickGet	;wreg free
 25576  011FB0  0100               	movlb	0	; () banked
 25577  011FB2  516F               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 25578  011FB4  0D06               	mullw	6
 25579  011FB6  0E02               	movlw	2
 25580  011FB8  26F3               	addwf	prodl,f,c
 25581  011FBA  0E00               	movlw	0
 25582  011FBC  22F4               	addwfc	prodh,f,c
 25583  011FBE  0E28               	movlw	low _AckInfo
 25584  011FC0  24F3               	addwf	prodl,w,c
 25585  011FC2  6ED9               	movwf	fsr2l,c
 25586  011FC4  0E02               	movlw	high _AckInfo
 25587  011FC6  20F4               	addwfc	prodh,w,c
 25588  011FC8  6EDA               	movwf	fsr2h,c
 25589  011FCA  C012  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 25590  011FCE  C013  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 25591  011FD2  C014  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 25592  011FD6  C015  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 25593  011FDA                     i2l13704:
 25594                           
 25595                           ; BSR set to: 0
 25596                           ;drv_mrf_miwi_89xa.c: 1450: }
 25597                           ;drv_mrf_miwi_89xa.c: 1453: RxPacket[BankIndex].flags.bits.Valid = 1;
 25598  011FDA  0100               	movlb	0	; () banked
 25599  011FDC  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25600  011FDE  0D42               	mullw	66
 25601  011FE0  0E50               	movlw	low _RxPacket
 25602  011FE2  24F3               	addwf	prodl,w,c
 25603  011FE4  6ED9               	movwf	fsr2l,c
 25604  011FE6  0E03               	movlw	high _RxPacket
 25605  011FE8  20F4               	addwfc	prodh,w,c
 25606  011FEA  6EDA               	movwf	fsr2h,c
 25607  011FEC  0103               	movlb	3	; () banked
 25608  011FEE  80DF               	bsf	indf2,0,c
 25609                           
 25610                           ; BSR set to: 3
 25611                           ;drv_mrf_miwi_89xa.c: 1454: }
 25612                           ;drv_mrf_miwi_89xa.c: 1461: }
 25613                           ;drv_mrf_miwi_89xa.c: 1462: goto RETURN_HERE;
 25614  011FF0  D009               	goto	i2l13710
 25615  011FF2                     i2l13706:
 25616  011FF2  0100               	movlb	0	; () banked
 25617  011FF4  5166               	movf	MIWIInterruptHandler@counter& (0+255),w,b
 25618  011FF6  0100               	movlb	0	; () banked
 25619  011FF8  1167               	iorwf	(MIWIInterruptHandler@counter+1)& (0+255),w,b
 25620  011FFA  B4D8               	btfsc	status,2,c
 25621  011FFC  D003               	goto	i2l13710
 25622  011FFE  D5ED               	goto	i2l13588
 25623  012000                     i2l13708:
 25624                           
 25625                           ;drv_mrf_miwi_89xa.c: 1468: else
 25626                           ;drv_mrf_miwi_89xa.c: 1469: {
 25627                           ;drv_mrf_miwi_89xa.c: 1471: IRQ1_Received = 1;
 25628  012000  0E01               	movlw	1
 25629  012002  6E40               	movwf	_IRQ1_Received,c	;volatile
 25630  012004                     i2l13710:
 25631                           
 25632                           ;drv_mrf_miwi_89xa.c: 1475: INTCON3bits.INT1IF = 0;
 25633  012004  90F0               	bcf	intcon3,0,c	;volatile
 25634                           
 25635                           ;drv_mrf_miwi_89xa.c: 1477: __nop();
 25636  012006  F000               	nop	
 25637  012008                     i2l13714:
 25638                           
 25639                           ;drv_mrf_miwi_89xa.c: 1478: }
 25640                           ;drv_mrf_miwi_89xa.c: 1482: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 25641  012008  B2F2               	btfsc	intcon,1,c	;volatile
 25642  01200A  A8F2               	btfss	intcon,4,c	;volatile
 25643  01200C  D00E               	goto	i2l13724
 25644                           
 25645                           ;drv_mrf_miwi_89xa.c: 1483: {
 25646                           ;drv_mrf_miwi_89xa.c: 1492: INTCONbits.INT0IF = 0;
 25647  01200E  92F2               	bcf	intcon,1,c	;volatile
 25648                           
 25649                           ;drv_mrf_miwi_89xa.c: 1495: if(RF_Mode == 0x60)
 25650  012010  0E60               	movlw	96
 25651  012012  1843               	xorwf	_RF_Mode,w,c
 25652  012014  A4D8               	btfss	status,2,c
 25653  012016  D009               	goto	i2l13724
 25654                           
 25655                           ;drv_mrf_miwi_89xa.c: 1496: {
 25656                           ;drv_mrf_miwi_89xa.c: 1497: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 25657  012018  0E28               	movlw	40
 25658  01201A  ECD9  F0B3         	call	i2_RegisterRead
 25659  01201E  0100               	movlb	0	; () banked
 25660  012020  6F60               	movwf	??_MIWIInterruptHandler& (0+255),b
 25661  012022  0100               	movlb	0	; () banked
 25662  012024  90D8               	bcf	status,0,c
 25663  012026  3160               	rrcf	??_MIWIInterruptHandler& (0+255),w,b
 25664  012028  6E44               	movwf	_RSSIVal,c
 25665  01202A                     i2l13724:
 25666                           
 25667                           ;drv_mrf_miwi_89xa.c: 1498: }
 25668                           ;drv_mrf_miwi_89xa.c: 1502: }
 25669                           ;drv_mrf_miwi_89xa.c: 1506: if(PIR1bits.TMR1IF)
 25670  01202A  A09E               	btfss	3998,0,c	;volatile
 25671  01202C  0012               	return	
 25672                           
 25673                           ;drv_mrf_miwi_89xa.c: 1507: {
 25674                           ;drv_mrf_miwi_89xa.c: 1508: if(PIE1bits.TMR1IE)
 25675  01202E  A09D               	btfss	3997,0,c	;volatile
 25676  012030  0012               	return	
 25677                           
 25678                           ;drv_mrf_miwi_89xa.c: 1509: {
 25679                           ;drv_mrf_miwi_89xa.c: 1511: PIR1bits.TMR1IF = 0;
 25680  012032  909E               	bcf	3998,0,c	;volatile
 25681                           
 25682                           ;drv_mrf_miwi_89xa.c: 1512: timerExtension1++;
 25683  012034  0100               	movlb	0	; () banked
 25684  012036  2BDA               	incf	_timerExtension1& (0+255),f,b	;volatile
 25685                           
 25686                           ; BSR set to: 0
 25687                           ;drv_mrf_miwi_89xa.c: 1513: if(timerExtension1 == 0)
 25688  012038  0100               	movlb	0	; () banked
 25689  01203A  51DA               	movf	_timerExtension1& (0+255),w,b	;volatile
 25690  01203C  A4D8               	btfss	status,2,c
 25691  01203E  0012               	return	
 25692                           
 25693                           ; BSR set to: 0
 25694                           ;drv_mrf_miwi_89xa.c: 1514: {
 25695                           ;drv_mrf_miwi_89xa.c: 1515: timerExtension2++;
 25696  012040  2A49               	incf	_timerExtension2,f,c	;volatile
 25697                           
 25698                           ; BSR set to: 0
 25699                           
 25700                           ; BSR set to: 0
 25701                           
 25702                           ; BSR set to: 0
 25703  012042  0012               	return	
 25704  012044                     __end_of_MIWIInterruptHandler:
 25705                           	opt stack 0
 25706                           pclatu	equ	0xFFB
 25707                           pclath	equ	0xFFA
 25708                           tblptru	equ	0xFF8
 25709                           tblptrh	equ	0xFF7
 25710                           tblptrl	equ	0xFF6
 25711                           tablat	equ	0xFF5
 25712                           prodh	equ	0xFF4
 25713                           prodl	equ	0xFF3
 25714                           intcon	equ	0xFF2
 25715                           intcon2	equ	0xFF1
 25716                           intcon3	equ	0xFF0
 25717                           indf0	equ	0xFEF
 25718                           postinc0	equ	0xFEE
 25719                           plusw0	equ	0xFEB
 25720                           fsr0h	equ	0xFEA
 25721                           fsr0l	equ	0xFE9
 25722                           wreg	equ	0xFE8
 25723                           indf1	equ	0xFE7
 25724                           postinc1	equ	0xFE6
 25725                           postdec1	equ	0xFE5
 25726                           fsr1h	equ	0xFE2
 25727                           fsr1l	equ	0xFE1
 25728                           bsr	equ	0xFE0
 25729                           indf2	equ	0xFDF
 25730                           postinc2	equ	0xFDE
 25731                           postdec2	equ	0xFDD
 25732                           plusw2	equ	0xFDB
 25733                           fsr2h	equ	0xFDA
 25734                           fsr2l	equ	0xFD9
 25735                           status	equ	0xFD8
 25736                           
 25737 ;; *************** function i2_TxPacket *****************
 25738 ;; Defined at:
 25739 ;;		line 295 in file "src/miwi/drv_mrf_miwi_89xa.c"
 25740 ;; Parameters:    Size  Location     Type
 25741 ;;  TxPacketLen     1    wreg     unsigned char 
 25742 ;;  CCA             1   27[COMRAM] unsigned char 
 25743 ;; Auto vars:     Size  Location     Type
 25744 ;;  TxPacketLen     1   48[COMRAM] unsigned char 
 25745 ;;  TxPacket        4   40[COMRAM] struct _MIWI_TICK
 25746 ;;  TxPacket        4   36[COMRAM] struct _MIWI_TICK
 25747 ;;  TxPacket        1   50[COMRAM] unsigned char 
 25748 ;;  TxPacket        1   49[COMRAM] unsigned char 
 25749 ;;  TxPacket        1   47[COMRAM] unsigned char 
 25750 ;;  TxPacket        1   46[COMRAM] unsigned char 
 25751 ;;  TxPacket        1   45[COMRAM] unsigned char 
 25752 ;;  TxPacket        1   44[COMRAM] unsigned char 
 25753 ;; Return value:  Size  Location     Type
 25754 ;;                  1    wreg      unsigned char 
 25755 ;; Registers used:
 25756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25757 ;; Tracked objects:
 25758 ;;		On entry : 0/0
 25759 ;;		On exit  : 0/0
 25760 ;;		Unchanged: 0/0
 25761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25762 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25763 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25764 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25765 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25766 ;;Total ram usage:       24 bytes
 25767 ;; Hardware stack levels used:    1
 25768 ;; Hardware stack levels required when called:    3
 25769 ;; This function calls:
 25770 ;;		i2_MiWi_TickGet
 25771 ;;		i2_RegisterRead
 25772 ;;		i2_RegisterSet
 25773 ;;		i2_SetRFMode
 25774 ;;		i2_WriteFIFO
 25775 ;; This function is called by:
 25776 ;;		_MIWIInterruptHandler
 25777 ;; This function uses a non-reentrant model
 25778 ;;
 25779                           
 25780                           	psect	text83
 25781  0146D6                     __ptext83:
 25782                           	opt stack 0
 25783  0146D6                     i2_TxPacket:
 25784                           	opt stack 13
 25785                           
 25786                           ;incstack = 0
 25787                           ;i2TxPacket@TxPacketLen stored from wreg
 25788  0146D6  6E31               	movwf	i2TxPacket@TxPacketLen,c
 25789                           
 25790                           ;drv_mrf_miwi_89xa.c: 297: bool status;
 25791                           ;drv_mrf_miwi_89xa.c: 298: uint8_t i;
 25792                           ;drv_mrf_miwi_89xa.c: 299: MIWI_TICK t1, t2;
 25793                           ;drv_mrf_miwi_89xa.c: 301: uint8_t CCARetries;
 25794                           ;drv_mrf_miwi_89xa.c: 302: uint8_t rssival;
 25795                           ;drv_mrf_miwi_89xa.c: 306: uint8_t reTry = 3;
 25796  0146D8  0E03               	movlw	3
 25797  0146DA  6E2F               	movwf	i2TxPacket@reTry,c
 25798                           
 25799                           ;drv_mrf_miwi_89xa.c: 310: while( reTry-- )
 25800  0146DC  D09C               	goto	i2l13372
 25801  0146DE                     i2l13306:
 25802                           
 25803                           ;drv_mrf_miwi_89xa.c: 312: {
 25804                           ;drv_mrf_miwi_89xa.c: 313: uint8_t allowedTxFailure;
 25805                           ;drv_mrf_miwi_89xa.c: 314: allowedTxFailure = 0;
 25806  0146DE  0E00               	movlw	0
 25807  0146E0  6E30               	movwf	i2TxPacket@allowedTxFailure,c
 25808  0146E2                     i2l258:
 25809                           
 25810                           ;drv_mrf_miwi_89xa.c: 319: hasAck = 0;
 25811  0146E2  0E00               	movlw	0
 25812  0146E4  6E47               	movwf	_hasAck,c	;volatile
 25813                           
 25814                           ;drv_mrf_miwi_89xa.c: 323: CCARetries = 0;
 25815  0146E6  0E00               	movlw	0
 25816  0146E8  6E2E               	movwf	i2TxPacket@CCARetries,c
 25817                           
 25818                           ;drv_mrf_miwi_89xa.c: 325: if( CCA )
 25819  0146EA  501C               	movf	i2TxPacket@CCA,w,c
 25820  0146EC  B4D8               	btfsc	status,2,c
 25821  0146EE  D011               	goto	i2l259
 25822  0146F0                     i2l13310:
 25823                           
 25824                           ;drv_mrf_miwi_89xa.c: 329: rssival = RegisterRead(0x2800>>8);
 25825  0146F0  0E28               	movlw	40
 25826  0146F2  ECD9  F0B3         	call	i2_RegisterRead
 25827  0146F6  6E33               	movwf	i2TxPacket@rssival,c
 25828                           
 25829                           ;drv_mrf_miwi_89xa.c: 330: rssival = (rssival>>1);
 25830  0146F8  90D8               	bcf	status,0,c
 25831  0146FA  3033               	rrcf	i2TxPacket@rssival,w,c
 25832  0146FC  6E33               	movwf	i2TxPacket@rssival,c
 25833                           
 25834                           ;drv_mrf_miwi_89xa.c: 332: if( rssival > 65 )
 25835  0146FE  0E41               	movlw	65
 25836  014700  6433               	cpfsgt	i2TxPacket@rssival,c
 25837  014702  D007               	goto	i2l259
 25838                           
 25839                           ;drv_mrf_miwi_89xa.c: 333: {
 25840                           ;drv_mrf_miwi_89xa.c: 334: if(CCARetries++ > 4 )
 25841  014704  2A2E               	incf	i2TxPacket@CCARetries,f,c
 25842  014706  042E               	decf	i2TxPacket@CCARetries,w,c
 25843  014708  6E1D               	movwf	??i2_TxPacket& (0+255),c
 25844  01470A  0E04               	movlw	4
 25845  01470C  641D               	cpfsgt	??i2_TxPacket,c
 25846  01470E  D7F0               	goto	i2l13310
 25847  014710  0012               	return	
 25848  014712                     i2l259:
 25849                           
 25850                           ;drv_mrf_miwi_89xa.c: 340: }
 25851                           ;drv_mrf_miwi_89xa.c: 341: }
 25852                           ;drv_mrf_miwi_89xa.c: 346: INTCONbits.INT0IE = 0;
 25853  014712  98F2               	bcf	intcon,4,c	;volatile
 25854                           
 25855                           ;drv_mrf_miwi_89xa.c: 348: INTCON3bits.INT1IE = 0;
 25856  014714  96F0               	bcf	intcon3,3,c	;volatile
 25857                           
 25858                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x20);
 25859  014716  0E20               	movlw	32
 25860  014718  EC68  F0B0         	call	i2_SetRFMode
 25861                           
 25862                           ;drv_mrf_miwi_89xa.c: 350: RegisterSet(0x1A00 | (0xC8) | 0x01);
 25863  01471C  0E1A               	movlw	26
 25864  01471E  6E15               	movwf	i2RegisterSet@setting+1,c
 25865  014720  0EC9               	movlw	201
 25866  014722  6E14               	movwf	i2RegisterSet@setting,c
 25867  014724  EC77  F0B4         	call	i2_RegisterSet	;wreg free
 25868                           
 25869                           ;drv_mrf_miwi_89xa.c: 351: WriteFIFO(TxPacketLen);
 25870  014728  5031               	movf	i2TxPacket@TxPacketLen,w,c
 25871  01472A  ECAF  F0B4         	call	i2_WriteFIFO
 25872                           
 25873                           ;drv_mrf_miwi_89xa.c: 352: for(i=0; i< TxPacketLen; i++)
 25874  01472E  0E00               	movlw	0
 25875  014730  6E32               	movwf	i2TxPacket@i,c
 25876  014732  D00C               	goto	i2l13332
 25877  014734                     i2l13328:
 25878                           
 25879                           ;drv_mrf_miwi_89xa.c: 353: {
 25880                           ;drv_mrf_miwi_89xa.c: 354: WriteFIFO(MACTxBuffer[i]);
 25881  014734  5032               	movf	i2TxPacket@i,w,c
 25882  014736  0D01               	mullw	1
 25883  014738  0EA0               	movlw	low _MACTxBuffer
 25884  01473A  24F3               	addwf	prodl,w,c
 25885  01473C  6ED9               	movwf	fsr2l,c
 25886  01473E  0E02               	movlw	high _MACTxBuffer
 25887  014740  20F4               	addwfc	prodh,w,c
 25888  014742  6EDA               	movwf	fsr2h,c
 25889  014744  50DF               	movf	indf2,w,c
 25890  014746  ECAF  F0B4         	call	i2_WriteFIFO
 25891  01474A  2A32               	incf	i2TxPacket@i,f,c
 25892  01474C                     i2l13332:
 25893  01474C  5031               	movf	i2TxPacket@TxPacketLen,w,c
 25894  01474E  5C32               	subwf	i2TxPacket@i,w,c
 25895  014750  A0D8               	btfss	status,0,c
 25896  014752  D7F0               	goto	i2l13328
 25897                           
 25898                           ;drv_mrf_miwi_89xa.c: 355: }
 25899                           ;drv_mrf_miwi_89xa.c: 356: SetRFMode(0x80);
 25900  014754  0E80               	movlw	128
 25901  014756  EC68  F0B0         	call	i2_SetRFMode
 25902                           
 25903                           ;drv_mrf_miwi_89xa.c: 358: INTCONbits.INT0IE = 1;
 25904  01475A  88F2               	bsf	intcon,4,c	;volatile
 25905                           
 25906                           ;drv_mrf_miwi_89xa.c: 360: INTCON3bits.INT1IE = 1;
 25907  01475C  86F0               	bsf	intcon3,3,c	;volatile
 25908  01475E                     i2l13340:
 25909  01475E  5040               	movf	_IRQ1_Received,w,c	;volatile
 25910  014760  B4D8               	btfsc	status,2,c
 25911  014762  B0F0               	btfsc	intcon3,0,c	;volatile
 25912  014764  D001               	goto	i2l13344
 25913  014766  D7FB               	goto	i2l13340
 25914  014768                     i2l13344:
 25915                           
 25916                           ;drv_mrf_miwi_89xa.c: 364: };
 25917                           ;drv_mrf_miwi_89xa.c: 368: IRQ1_Received = 0;
 25918  014768  0E00               	movlw	0
 25919  01476A  6E40               	movwf	_IRQ1_Received,c	;volatile
 25920                           
 25921                           ;drv_mrf_miwi_89xa.c: 369: SetRFMode(0x20);
 25922  01476C  0E20               	movlw	32
 25923  01476E  EC68  F0B0         	call	i2_SetRFMode
 25924                           
 25925                           ;drv_mrf_miwi_89xa.c: 370: SetRFMode(0x60);
 25926  014772  0E60               	movlw	96
 25927  014774  EC68  F0B0         	call	i2_SetRFMode
 25928                           
 25929                           ;drv_mrf_miwi_89xa.c: 373: if( (MACTxBuffer[0] & 0x20) > 0 )
 25930  014778  0102               	movlb	2	; () banked
 25931  01477A  ABA0               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 25932  01477C  D049               	goto	i2l13370
 25933                           
 25934                           ; BSR set to: 2
 25935                           ;drv_mrf_miwi_89xa.c: 374: {
 25936                           ;drv_mrf_miwi_89xa.c: 375: TxMACSeq = MACTxBuffer[1];
 25937  01477E  C2A1  F046         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 25938                           
 25939                           ; BSR set to: 2
 25940                           ;drv_mrf_miwi_89xa.c: 376: t1 = MiWi_TickGet();
 25941  014782  EC3A  F0B3         	call	i2_MiWi_TickGet	;wreg free
 25942  014786  C012  F025         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 25943  01478A  C013  F026         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 25944  01478E  C014  F027         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 25945  014792  C015  F028         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 25946  014796                     i2l13356:
 25947                           
 25948                           ;drv_mrf_miwi_89xa.c: 378: {
 25949                           ;drv_mrf_miwi_89xa.c: 379: if( hasAck )
 25950  014796  5047               	movf	_hasAck,w,c	;volatile
 25951  014798  B4D8               	btfsc	status,2,c
 25952  01479A  D003               	goto	i2l13360
 25953                           
 25954                           ;drv_mrf_miwi_89xa.c: 380: {
 25955                           ;drv_mrf_miwi_89xa.c: 381: status = 1;
 25956  01479C  0E01               	movlw	1
 25957  01479E  6E2D               	movwf	i2TxPacket@status,c
 25958                           
 25959                           ;drv_mrf_miwi_89xa.c: 382: goto TX_END_HERE;
 25960  0147A0  0012               	return	
 25961  0147A2                     i2l13360:
 25962                           
 25963                           ;drv_mrf_miwi_89xa.c: 383: }
 25964                           ;drv_mrf_miwi_89xa.c: 384: t2 = MiWi_TickGet();
 25965  0147A2  EC3A  F0B3         	call	i2_MiWi_TickGet	;wreg free
 25966  0147A6  C012  F029         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 25967  0147AA  C013  F02A         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 25968  0147AE  C014  F02B         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 25969  0147B2  C015  F02C         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 25970                           
 25971                           ;drv_mrf_miwi_89xa.c: 385: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 25972  0147B6  C025  F01D         	movff	i2TxPacket@t1,??i2_TxPacket
 25973  0147BA  C026  F01E         	movff	i2TxPacket@t1+1,??i2_TxPacket+1
 25974  0147BE  C027  F01F         	movff	i2TxPacket@t1+2,??i2_TxPacket+2
 25975  0147C2  C028  F020         	movff	i2TxPacket@t1+3,??i2_TxPacket+3
 25976  0147C6  1E1D               	comf	??i2_TxPacket,f,c
 25977  0147C8  1E1E               	comf	??i2_TxPacket+1,f,c
 25978  0147CA  1E1F               	comf	??i2_TxPacket+2,f,c
 25979  0147CC  1E20               	comf	??i2_TxPacket+3,f,c
 25980  0147CE  2A1D               	incf	??i2_TxPacket,f,c
 25981  0147D0  0E00               	movlw	0
 25982  0147D2  221E               	addwfc	??i2_TxPacket+1,f,c
 25983  0147D4  221F               	addwfc	??i2_TxPacket+2,f,c
 25984  0147D6  2220               	addwfc	??i2_TxPacket+3,f,c
 25985  0147D8  5029               	movf	i2TxPacket@t2,w,c
 25986  0147DA  241D               	addwf	??i2_TxPacket,w,c
 25987  0147DC  6E21               	movwf	(??i2_TxPacket+4)& (0+255),c
 25988  0147DE  502A               	movf	i2TxPacket@t2+1,w,c
 25989  0147E0  201E               	addwfc	??i2_TxPacket+1,w,c
 25990  0147E2  6E22               	movwf	(??i2_TxPacket+5)& (0+255),c
 25991  0147E4  502B               	movf	i2TxPacket@t2+2,w,c
 25992  0147E6  201F               	addwfc	??i2_TxPacket+2,w,c
 25993  0147E8  6E23               	movwf	(??i2_TxPacket+6)& (0+255),c
 25994  0147EA  502C               	movf	i2TxPacket@t2+3,w,c
 25995  0147EC  2020               	addwfc	??i2_TxPacket+3,w,c
 25996  0147EE  6E24               	movwf	(??i2_TxPacket+7)& (0+255),c
 25997  0147F0  5024               	movf	??i2_TxPacket+7,w,c
 25998  0147F2  1023               	iorwf	??i2_TxPacket+6,w,c
 25999  0147F4  E106               	bnz	i2l13366
 26000  0147F6  0EA9               	movlw	169
 26001  0147F8  5C21               	subwf	??i2_TxPacket+4,w,c
 26002  0147FA  0E61               	movlw	97
 26003  0147FC  5822               	subwfb	??i2_TxPacket+5,w,c
 26004  0147FE  A0D8               	btfss	status,0,c
 26005  014800  D7CA               	goto	i2l13356
 26006  014802                     i2l13366:
 26007                           
 26008                           ;drv_mrf_miwi_89xa.c: 388: }
 26009                           ;drv_mrf_miwi_89xa.c: 389: }
 26010                           ;drv_mrf_miwi_89xa.c: 391: if(allowedTxFailure++ <= 3)
 26011  014802  2A30               	incf	i2TxPacket@allowedTxFailure,f,c
 26012  014804  0430               	decf	i2TxPacket@allowedTxFailure,w,c
 26013  014806  6E1D               	movwf	??i2_TxPacket& (0+255),c
 26014  014808  0E04               	movlw	4
 26015  01480A  601D               	cpfslt	??i2_TxPacket,c
 26016  01480C  D004               	goto	i2l13372
 26017  01480E  D769               	goto	i2l258
 26018  014810                     i2l13370:
 26019                           
 26020                           ;drv_mrf_miwi_89xa.c: 395: else
 26021                           ;drv_mrf_miwi_89xa.c: 397: {
 26022                           ;drv_mrf_miwi_89xa.c: 398: status = 1;
 26023  014810  0E01               	movlw	1
 26024  014812  6E2D               	movwf	i2TxPacket@status,c
 26025                           
 26026                           ;drv_mrf_miwi_89xa.c: 399: goto TX_END_HERE;
 26027  014814  0012               	return	
 26028  014816                     i2l13372:
 26029  014816  062F               	decf	i2TxPacket@reTry,f,c
 26030  014818  282F               	incf	i2TxPacket@reTry,w,c
 26031  01481A  A4D8               	btfss	status,2,c
 26032  01481C  D760               	goto	i2l13306
 26033                           
 26034                           ;drv_mrf_miwi_89xa.c: 400: }
 26035                           ;drv_mrf_miwi_89xa.c: 401: }
 26036                           ;drv_mrf_miwi_89xa.c: 403: status = 0;
 26037  01481E  0E00               	movlw	0
 26038  014820  6E2D               	movwf	i2TxPacket@status,c
 26039                           
 26040                           ;drv_mrf_miwi_89xa.c: 404: TX_END_HERE:
 26041  014822  0012               	return	
 26042  014824                     __end_ofi2_TxPacket:
 26043                           	opt stack 0
 26044                           pclatu	equ	0xFFB
 26045                           pclath	equ	0xFFA
 26046                           tblptru	equ	0xFF8
 26047                           tblptrh	equ	0xFF7
 26048                           tblptrl	equ	0xFF6
 26049                           tablat	equ	0xFF5
 26050                           prodh	equ	0xFF4
 26051                           prodl	equ	0xFF3
 26052                           intcon	equ	0xFF2
 26053                           intcon2	equ	0xFF1
 26054                           intcon3	equ	0xFF0
 26055                           indf0	equ	0xFEF
 26056                           postinc0	equ	0xFEE
 26057                           plusw0	equ	0xFEB
 26058                           fsr0h	equ	0xFEA
 26059                           fsr0l	equ	0xFE9
 26060                           wreg	equ	0xFE8
 26061                           indf1	equ	0xFE7
 26062                           postinc1	equ	0xFE6
 26063                           postdec1	equ	0xFE5
 26064                           fsr1h	equ	0xFE2
 26065                           fsr1l	equ	0xFE1
 26066                           bsr	equ	0xFE0
 26067                           indf2	equ	0xFDF
 26068                           postinc2	equ	0xFDE
 26069                           postdec2	equ	0xFDD
 26070                           plusw2	equ	0xFDB
 26071                           fsr2h	equ	0xFDA
 26072                           fsr2l	equ	0xFD9
 26073                           status	equ	0xFD8
 26074                           
 26075 ;; *************** function i2_WriteFIFO *****************
 26076 ;; Defined at:
 26077 ;;		line 251 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26078 ;; Parameters:    Size  Location     Type
 26079 ;;  Data            1    wreg     unsigned char 
 26080 ;; Auto vars:     Size  Location     Type
 26081 ;;  Data            1   19[COMRAM] unsigned char 
 26082 ;;  WriteFIFO       1   21[COMRAM] unsigned char 
 26083 ;;  WriteFIFO       1   20[COMRAM] unsigned char 
 26084 ;; Return value:  Size  Location     Type
 26085 ;;		None               void
 26086 ;; Registers used:
 26087 ;;		wreg, status,2, cstack
 26088 ;; Tracked objects:
 26089 ;;		On entry : 0/0
 26090 ;;		On exit  : 0/0
 26091 ;;		Unchanged: 0/0
 26092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26094 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26096 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26097 ;;Total ram usage:        3 bytes
 26098 ;; Hardware stack levels used:    1
 26099 ;; Hardware stack levels required when called:    1
 26100 ;; This function calls:
 26101 ;;		i2_SPIPut
 26102 ;; This function is called by:
 26103 ;;		i2_TxPacket
 26104 ;; This function uses a non-reentrant model
 26105 ;;
 26106                           
 26107                           	psect	text84
 26108  01695E                     __ptext84:
 26109                           	opt stack 0
 26110  01695E                     i2_WriteFIFO:
 26111                           	opt stack 14
 26112                           
 26113                           ;incstack = 0
 26114                           ;i2WriteFIFO@Data stored from wreg
 26115  01695E  6E14               	movwf	i2WriteFIFO@Data,c
 26116                           
 26117                           ;drv_mrf_miwi_89xa.c: 253: uint8_t IRQ1select = INTCON3bits.INT1IE;
 26118  016960  0E00               	movlw	0
 26119  016962  B6F0               	btfsc	intcon3,3,c	;volatile
 26120  016964  0E01               	movlw	1
 26121  016966  6E15               	movwf	i2WriteFIFO@IRQ1select,c
 26122                           
 26123                           ;drv_mrf_miwi_89xa.c: 255: bool IRQ0select = INTCONbits.INT0IE;
 26124  016968  0E00               	movlw	0
 26125  01696A  B8F2               	btfsc	intcon,4,c	;volatile
 26126  01696C  0E01               	movlw	1
 26127  01696E  6E16               	movwf	i2WriteFIFO@IRQ0select,c
 26128                           
 26129                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.INT0IE = 0;
 26130  016970  98F2               	bcf	intcon,4,c	;volatile
 26131                           
 26132                           ;drv_mrf_miwi_89xa.c: 260: INTCON3bits.INT1IE = 0;
 26133  016972  96F0               	bcf	intcon3,3,c	;volatile
 26134                           
 26135                           ;drv_mrf_miwi_89xa.c: 261: LATCbits.LATC6 = 0;
 26136  016974  9C8B               	bcf	3979,6,c	;volatile
 26137                           
 26138                           ;drv_mrf_miwi_89xa.c: 262: SPIPut(Data);
 26139  016976  5014               	movf	i2WriteFIFO@Data,w,c
 26140  016978  EC64  F0B5         	call	i2_SPIPut
 26141                           
 26142                           ;drv_mrf_miwi_89xa.c: 263: LATCbits.LATC6 = 1;
 26143  01697C  8C8B               	bsf	3979,6,c	;volatile
 26144                           
 26145                           ;drv_mrf_miwi_89xa.c: 264: INTCON3bits.INT1IE = IRQ1select;
 26146  01697E  B015               	btfsc	i2WriteFIFO@IRQ1select,0,c
 26147  016980  D002               	bra	i2u1465_45
 26148  016982  96F0               	bcf	intcon3,3,c	;volatile
 26149  016984  D001               	bra	i2u1465_46
 26150  016986                     i2u1465_45:
 26151  016986  86F0               	bsf	intcon3,3,c	;volatile
 26152  016988                     i2u1465_46:
 26153                           
 26154                           ;drv_mrf_miwi_89xa.c: 267: INTCONbits.INT0IE = IRQ0select;
 26155  016988  B016               	btfsc	i2WriteFIFO@IRQ0select,0,c
 26156  01698A  D002               	bra	i2u1466_45
 26157  01698C  98F2               	bcf	intcon,4,c	;volatile
 26158  01698E  D001               	bra	i2u1466_46
 26159  016990                     i2u1466_45:
 26160  016990  88F2               	bsf	intcon,4,c	;volatile
 26161  016992                     i2u1466_46:
 26162  016992  0012               	return		;funcret
 26163  016994                     __end_ofi2_WriteFIFO:
 26164                           	opt stack 0
 26165                           pclatu	equ	0xFFB
 26166                           pclath	equ	0xFFA
 26167                           tblptru	equ	0xFF8
 26168                           tblptrh	equ	0xFF7
 26169                           tblptrl	equ	0xFF6
 26170                           tablat	equ	0xFF5
 26171                           prodh	equ	0xFF4
 26172                           prodl	equ	0xFF3
 26173                           intcon	equ	0xFF2
 26174                           intcon2	equ	0xFF1
 26175                           intcon3	equ	0xFF0
 26176                           indf0	equ	0xFEF
 26177                           postinc0	equ	0xFEE
 26178                           plusw0	equ	0xFEB
 26179                           fsr0h	equ	0xFEA
 26180                           fsr0l	equ	0xFE9
 26181                           wreg	equ	0xFE8
 26182                           indf1	equ	0xFE7
 26183                           postinc1	equ	0xFE6
 26184                           postdec1	equ	0xFE5
 26185                           fsr1h	equ	0xFE2
 26186                           fsr1l	equ	0xFE1
 26187                           bsr	equ	0xFE0
 26188                           indf2	equ	0xFDF
 26189                           postinc2	equ	0xFDE
 26190                           postdec2	equ	0xFDD
 26191                           plusw2	equ	0xFDB
 26192                           fsr2h	equ	0xFDA
 26193                           fsr2l	equ	0xFD9
 26194                           status	equ	0xFD8
 26195                           
 26196 ;; *************** function i2_SetRFMode *****************
 26197 ;; Defined at:
 26198 ;;		line 674 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26199 ;; Parameters:    Size  Location     Type
 26200 ;;  mode            1    wreg     unsigned char 
 26201 ;; Auto vars:     Size  Location     Type
 26202 ;;  mode            1   23[COMRAM] unsigned char 
 26203 ;; Return value:  Size  Location     Type
 26204 ;;		None               void
 26205 ;; Registers used:
 26206 ;;		wreg, status,2, status,0, cstack
 26207 ;; Tracked objects:
 26208 ;;		On entry : 0/0
 26209 ;;		On exit  : 0/0
 26210 ;;		Unchanged: 0/0
 26211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26215 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26216 ;;Total ram usage:        1 bytes
 26217 ;; Hardware stack levels used:    1
 26218 ;; Hardware stack levels required when called:    2
 26219 ;; This function calls:
 26220 ;;		i2_RegisterSet
 26221 ;; This function is called by:
 26222 ;;		i2_TxPacket
 26223 ;; This function uses a non-reentrant model
 26224 ;;
 26225                           
 26226                           	psect	text85
 26227  0160D0                     __ptext85:
 26228                           	opt stack 0
 26229  0160D0                     i2_SetRFMode:
 26230                           	opt stack 13
 26231                           
 26232                           ;incstack = 0
 26233                           ;i2SetRFMode@mode stored from wreg
 26234  0160D0  6E18               	movwf	i2SetRFMode@mode,c
 26235                           
 26236                           ;drv_mrf_miwi_89xa.c: 676: switch (mode) {
 26237  0160D2  D02D               	goto	i2l12638
 26238  0160D4                     i2l12616:
 26239                           
 26240                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 26241  0160D4  0E00               	movlw	0
 26242  0160D6  6E15               	movwf	i2RegisterSet@setting+1,c
 26243  0160D8  0E96               	movlw	150
 26244  0160DA  6E14               	movwf	i2RegisterSet@setting,c
 26245  0160DC  EC77  F0B4         	call	i2_RegisterSet	;wreg free
 26246                           
 26247                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x80;
 26248  0160E0  0E80               	movlw	128
 26249  0160E2  6E43               	movwf	_RF_Mode,c
 26250                           
 26251                           ;drv_mrf_miwi_89xa.c: 680: break;
 26252  0160E4  0012               	return	
 26253  0160E6                     i2l12620:
 26254                           
 26255                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 26256  0160E6  0E00               	movlw	0
 26257  0160E8  6E15               	movwf	i2RegisterSet@setting+1,c
 26258  0160EA  0E76               	movlw	118
 26259  0160EC  6E14               	movwf	i2RegisterSet@setting,c
 26260  0160EE  EC77  F0B4         	call	i2_RegisterSet	;wreg free
 26261                           
 26262                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x60;
 26263  0160F2  0E60               	movlw	96
 26264  0160F4  6E43               	movwf	_RF_Mode,c
 26265                           
 26266                           ;drv_mrf_miwi_89xa.c: 684: break;
 26267  0160F6  0012               	return	
 26268  0160F8                     i2l12624:
 26269                           
 26270                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 26271  0160F8  0E00               	movlw	0
 26272  0160FA  6E15               	movwf	i2RegisterSet@setting+1,c
 26273  0160FC  0E56               	movlw	86
 26274  0160FE  6E14               	movwf	i2RegisterSet@setting,c
 26275  016100  EC77  F0B4         	call	i2_RegisterSet	;wreg free
 26276                           
 26277                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x40;
 26278  016104  0E40               	movlw	64
 26279  016106  6E43               	movwf	_RF_Mode,c
 26280                           
 26281                           ;drv_mrf_miwi_89xa.c: 688: break;
 26282  016108  0012               	return	
 26283  01610A                     i2l12628:
 26284                           
 26285                           ;drv_mrf_miwi_89xa.c: 690: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 26286  01610A  0E00               	movlw	0
 26287  01610C  6E15               	movwf	i2RegisterSet@setting+1,c
 26288  01610E  0E36               	movlw	54
 26289  016110  6E14               	movwf	i2RegisterSet@setting,c
 26290  016112  EC77  F0B4         	call	i2_RegisterSet	;wreg free
 26291                           
 26292                           ;drv_mrf_miwi_89xa.c: 691: RF_Mode = 0x20;
 26293  016116  0E20               	movlw	32
 26294  016118  6E43               	movwf	_RF_Mode,c
 26295                           
 26296                           ;drv_mrf_miwi_89xa.c: 692: break;
 26297  01611A  0012               	return	
 26298  01611C                     i2l12632:
 26299                           
 26300                           ;drv_mrf_miwi_89xa.c: 694: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 26301  01611C  0E00               	movlw	0
 26302  01611E  6E15               	movwf	i2RegisterSet@setting+1,c
 26303  016120  0E16               	movlw	22
 26304  016122  6E14               	movwf	i2RegisterSet@setting,c
 26305  016124  EC77  F0B4         	call	i2_RegisterSet	;wreg free
 26306                           
 26307                           ;drv_mrf_miwi_89xa.c: 695: RF_Mode = 0x00;
 26308  016128  0E00               	movlw	0
 26309  01612A  6E43               	movwf	_RF_Mode,c
 26310                           
 26311                           ;drv_mrf_miwi_89xa.c: 697: }
 26312                           
 26313                           ;drv_mrf_miwi_89xa.c: 696: break;
 26314  01612C  0012               	return	
 26315  01612E                     i2l12638:
 26316  01612E  5018               	movf	i2SetRFMode@mode,w,c
 26317                           
 26318                           ; Switch size 1, requested type "space"
 26319                           ; Number of cases is 5, Range of values is 0 to 128
 26320                           ; switch strategies available:
 26321                           ; Name         Instructions Cycles
 26322                           ; simple_byte           16     9 (average)
 26323                           ;	Chosen strategy is simple_byte
 26324  016130  0A00               	xorlw	0	; case 0
 26325  016132  B4D8               	btfsc	status,2,c
 26326  016134  D7F3               	goto	i2l12632
 26327  016136  0A20               	xorlw	32	; case 32
 26328  016138  B4D8               	btfsc	status,2,c
 26329  01613A  D7E7               	goto	i2l12628
 26330  01613C  0A60               	xorlw	96	; case 64
 26331  01613E  B4D8               	btfsc	status,2,c
 26332  016140  D7DB               	goto	i2l12624
 26333  016142  0A20               	xorlw	32	; case 96
 26334  016144  B4D8               	btfsc	status,2,c
 26335  016146  D7CF               	goto	i2l12620
 26336  016148  0AE0               	xorlw	224	; case 128
 26337  01614A  A4D8               	btfss	status,2,c
 26338  01614C  0012               	return	
 26339  01614E  D7C2               	goto	i2l12616
 26340  016150                     __end_ofi2_SetRFMode:
 26341                           	opt stack 0
 26342                           pclatu	equ	0xFFB
 26343                           pclath	equ	0xFFA
 26344                           tblptru	equ	0xFF8
 26345                           tblptrh	equ	0xFF7
 26346                           tblptrl	equ	0xFF6
 26347                           tablat	equ	0xFF5
 26348                           prodh	equ	0xFF4
 26349                           prodl	equ	0xFF3
 26350                           intcon	equ	0xFF2
 26351                           intcon2	equ	0xFF1
 26352                           intcon3	equ	0xFF0
 26353                           indf0	equ	0xFEF
 26354                           postinc0	equ	0xFEE
 26355                           plusw0	equ	0xFEB
 26356                           fsr0h	equ	0xFEA
 26357                           fsr0l	equ	0xFE9
 26358                           wreg	equ	0xFE8
 26359                           indf1	equ	0xFE7
 26360                           postinc1	equ	0xFE6
 26361                           postdec1	equ	0xFE5
 26362                           fsr1h	equ	0xFE2
 26363                           fsr1l	equ	0xFE1
 26364                           bsr	equ	0xFE0
 26365                           indf2	equ	0xFDF
 26366                           postinc2	equ	0xFDE
 26367                           postdec2	equ	0xFDD
 26368                           plusw2	equ	0xFDB
 26369                           fsr2h	equ	0xFDA
 26370                           fsr2l	equ	0xFD9
 26371                           status	equ	0xFD8
 26372                           
 26373 ;; *************** function i2_RegisterSet *****************
 26374 ;; Defined at:
 26375 ;;		line 171 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26376 ;; Parameters:    Size  Location     Type
 26377 ;;  setting         2   19[COMRAM] unsigned int 
 26378 ;; Auto vars:     Size  Location     Type
 26379 ;;  RegisterSet     1   22[COMRAM] unsigned char 
 26380 ;;  RegisterSet     1   21[COMRAM] unsigned char 
 26381 ;; Return value:  Size  Location     Type
 26382 ;;		None               void
 26383 ;; Registers used:
 26384 ;;		wreg, status,2, cstack
 26385 ;; Tracked objects:
 26386 ;;		On entry : 0/0
 26387 ;;		On exit  : 0/0
 26388 ;;		Unchanged: 0/0
 26389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26394 ;;Total ram usage:        4 bytes
 26395 ;; Hardware stack levels used:    1
 26396 ;; Hardware stack levels required when called:    1
 26397 ;; This function calls:
 26398 ;;		i2_SPIPut
 26399 ;; This function is called by:
 26400 ;;		i2_TxPacket
 26401 ;;		i2_SetRFMode
 26402 ;; This function uses a non-reentrant model
 26403 ;;
 26404                           
 26405                           	psect	text86
 26406  0168EE                     __ptext86:
 26407                           	opt stack 0
 26408  0168EE                     i2_RegisterSet:
 26409                           	opt stack 13
 26410                           
 26411                           ;drv_mrf_miwi_89xa.c: 173: uint8_t IRQ1select = INTCON3bits.INT1IE;
 26412                           
 26413                           ;incstack = 0
 26414  0168EE  0E00               	movlw	0
 26415  0168F0  B6F0               	btfsc	intcon3,3,c	;volatile
 26416  0168F2  0E01               	movlw	1
 26417  0168F4  6E16               	movwf	i2RegisterSet@IRQ1select,c
 26418                           
 26419                           ;drv_mrf_miwi_89xa.c: 175: bool IRQ0select = INTCONbits.INT0IE;
 26420  0168F6  0E00               	movlw	0
 26421  0168F8  B8F2               	btfsc	intcon,4,c	;volatile
 26422  0168FA  0E01               	movlw	1
 26423  0168FC  6E17               	movwf	i2RegisterSet@IRQ0select,c
 26424                           
 26425                           ;drv_mrf_miwi_89xa.c: 176: INTCONbits.INT0IE = 0;
 26426  0168FE  98F2               	bcf	intcon,4,c	;volatile
 26427                           
 26428                           ;drv_mrf_miwi_89xa.c: 179: INTCON3bits.INT1IE = 0;
 26429  016900  96F0               	bcf	intcon3,3,c	;volatile
 26430                           
 26431                           ;drv_mrf_miwi_89xa.c: 180: LATBbits.LATB3 = 0;
 26432  016902  968A               	bcf	3978,3,c	;volatile
 26433                           
 26434                           ;drv_mrf_miwi_89xa.c: 181: SPIPut((uint8_t)(setting >> 8));
 26435  016904  5015               	movf	i2RegisterSet@setting+1,w,c
 26436  016906  EC64  F0B5         	call	i2_SPIPut
 26437                           
 26438                           ;drv_mrf_miwi_89xa.c: 182: SPIPut((uint8_t)setting);
 26439  01690A  5014               	movf	i2RegisterSet@setting,w,c
 26440  01690C  EC64  F0B5         	call	i2_SPIPut
 26441                           
 26442                           ;drv_mrf_miwi_89xa.c: 183: LATBbits.LATB3 = 1;
 26443  016910  868A               	bsf	3978,3,c	;volatile
 26444                           
 26445                           ;drv_mrf_miwi_89xa.c: 184: INTCON3bits.INT1IE = IRQ1select;
 26446  016912  B016               	btfsc	i2RegisterSet@IRQ1select,0,c
 26447  016914  D002               	bra	i2u1403_45
 26448  016916  96F0               	bcf	intcon3,3,c	;volatile
 26449  016918  D001               	bra	i2u1403_46
 26450  01691A                     i2u1403_45:
 26451  01691A  86F0               	bsf	intcon3,3,c	;volatile
 26452  01691C                     i2u1403_46:
 26453                           
 26454                           ;drv_mrf_miwi_89xa.c: 187: INTCONbits.INT0IE = IRQ0select;
 26455  01691C  B017               	btfsc	i2RegisterSet@IRQ0select,0,c
 26456  01691E  D002               	bra	i2u1404_45
 26457  016920  98F2               	bcf	intcon,4,c	;volatile
 26458  016922  D001               	bra	i2u1404_46
 26459  016924                     i2u1404_45:
 26460  016924  88F2               	bsf	intcon,4,c	;volatile
 26461  016926                     i2u1404_46:
 26462  016926  0012               	return		;funcret
 26463  016928                     __end_ofi2_RegisterSet:
 26464                           	opt stack 0
 26465                           pclatu	equ	0xFFB
 26466                           pclath	equ	0xFFA
 26467                           tblptru	equ	0xFF8
 26468                           tblptrh	equ	0xFF7
 26469                           tblptrl	equ	0xFF6
 26470                           tablat	equ	0xFF5
 26471                           prodh	equ	0xFF4
 26472                           prodl	equ	0xFF3
 26473                           intcon	equ	0xFF2
 26474                           intcon2	equ	0xFF1
 26475                           intcon3	equ	0xFF0
 26476                           indf0	equ	0xFEF
 26477                           postinc0	equ	0xFEE
 26478                           plusw0	equ	0xFEB
 26479                           fsr0h	equ	0xFEA
 26480                           fsr0l	equ	0xFE9
 26481                           wreg	equ	0xFE8
 26482                           indf1	equ	0xFE7
 26483                           postinc1	equ	0xFE6
 26484                           postdec1	equ	0xFE5
 26485                           fsr1h	equ	0xFE2
 26486                           fsr1l	equ	0xFE1
 26487                           bsr	equ	0xFE0
 26488                           indf2	equ	0xFDF
 26489                           postinc2	equ	0xFDE
 26490                           postdec2	equ	0xFDD
 26491                           plusw2	equ	0xFDB
 26492                           fsr2h	equ	0xFDA
 26493                           fsr2l	equ	0xFD9
 26494                           status	equ	0xFD8
 26495                           
 26496 ;; *************** function i2_RegisterRead *****************
 26497 ;; Defined at:
 26498 ;;		line 207 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26499 ;; Parameters:    Size  Location     Type
 26500 ;;  address         1    wreg     unsigned char 
 26501 ;; Auto vars:     Size  Location     Type
 26502 ;;  address         1   22[COMRAM] unsigned char 
 26503 ;;  RegisterRead    1   21[COMRAM] unsigned char 
 26504 ;;  RegisterRead    1   20[COMRAM] unsigned char 
 26505 ;;  RegisterRead    1   19[COMRAM] unsigned char 
 26506 ;; Return value:  Size  Location     Type
 26507 ;;                  1    wreg      unsigned char 
 26508 ;; Registers used:
 26509 ;;		wreg, status,2, status,0, cstack
 26510 ;; Tracked objects:
 26511 ;;		On entry : 0/0
 26512 ;;		On exit  : 0/0
 26513 ;;		Unchanged: 0/0
 26514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26516 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26518 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26519 ;;Total ram usage:        4 bytes
 26520 ;; Hardware stack levels used:    1
 26521 ;; Hardware stack levels required when called:    2
 26522 ;; This function calls:
 26523 ;;		i2_SPIGet
 26524 ;;		i2_SPIPut
 26525 ;; This function is called by:
 26526 ;;		_MIWIInterruptHandler
 26527 ;;		i2_TxPacket
 26528 ;; This function uses a non-reentrant model
 26529 ;;
 26530                           
 26531                           	psect	text87
 26532  0167B2                     __ptext87:
 26533                           	opt stack 0
 26534  0167B2                     i2_RegisterRead:
 26535                           	opt stack 13
 26536                           
 26537                           ;incstack = 0
 26538                           ;i2RegisterRead@address stored from wreg
 26539  0167B2  6E17               	movwf	i2RegisterRead@address,c
 26540                           
 26541                           ;drv_mrf_miwi_89xa.c: 209: uint8_t value;
 26542                           ;drv_mrf_miwi_89xa.c: 210: uint8_t IRQ1select = INTCON3bits.INT1IE;
 26543  0167B4  0E00               	movlw	0
 26544  0167B6  B6F0               	btfsc	intcon3,3,c	;volatile
 26545  0167B8  0E01               	movlw	1
 26546  0167BA  6E15               	movwf	i2RegisterRead@IRQ1select,c
 26547                           
 26548                           ;drv_mrf_miwi_89xa.c: 212: bool IRQ0select = INTCONbits.INT0IE;
 26549  0167BC  0E00               	movlw	0
 26550  0167BE  B8F2               	btfsc	intcon,4,c	;volatile
 26551  0167C0  0E01               	movlw	1
 26552  0167C2  6E16               	movwf	i2RegisterRead@IRQ0select,c
 26553                           
 26554                           ;drv_mrf_miwi_89xa.c: 214: INTCONbits.INT0IE = 0;
 26555  0167C4  98F2               	bcf	intcon,4,c	;volatile
 26556                           
 26557                           ;drv_mrf_miwi_89xa.c: 217: INTCON3bits.INT1IE = 0;
 26558  0167C6  96F0               	bcf	intcon3,3,c	;volatile
 26559                           
 26560                           ;drv_mrf_miwi_89xa.c: 218: LATBbits.LATB3 = 0;
 26561  0167C8  968A               	bcf	3978,3,c	;volatile
 26562                           
 26563                           ;drv_mrf_miwi_89xa.c: 219: address = (address|0x40);
 26564  0167CA  5017               	movf	i2RegisterRead@address,w,c
 26565  0167CC  0940               	iorlw	64
 26566  0167CE  6E17               	movwf	i2RegisterRead@address,c
 26567                           
 26568                           ;drv_mrf_miwi_89xa.c: 220: SPIPut(address);
 26569  0167D0  5017               	movf	i2RegisterRead@address,w,c
 26570  0167D2  EC64  F0B5         	call	i2_SPIPut
 26571                           
 26572                           ;drv_mrf_miwi_89xa.c: 221: value = SPIGet();
 26573  0167D6  EC98  F0B5         	call	i2_SPIGet	;wreg free
 26574  0167DA  6E14               	movwf	i2RegisterRead@value,c
 26575                           
 26576                           ;drv_mrf_miwi_89xa.c: 222: LATBbits.LATB3 = 1;
 26577  0167DC  868A               	bsf	3978,3,c	;volatile
 26578                           
 26579                           ;drv_mrf_miwi_89xa.c: 223: INTCON3bits.INT1IE = IRQ1select;
 26580  0167DE  B015               	btfsc	i2RegisterRead@IRQ1select,0,c
 26581  0167E0  D002               	bra	i2u1463_45
 26582  0167E2  96F0               	bcf	intcon3,3,c	;volatile
 26583  0167E4  D001               	bra	i2u1463_46
 26584  0167E6                     i2u1463_45:
 26585  0167E6  86F0               	bsf	intcon3,3,c	;volatile
 26586  0167E8                     i2u1463_46:
 26587                           
 26588                           ;drv_mrf_miwi_89xa.c: 226: INTCONbits.INT0IE = IRQ0select;
 26589  0167E8  B016               	btfsc	i2RegisterRead@IRQ0select,0,c
 26590  0167EA  D002               	bra	i2u1464_45
 26591  0167EC  98F2               	bcf	intcon,4,c	;volatile
 26592  0167EE  D001               	bra	i2u1464_46
 26593  0167F0                     i2u1464_45:
 26594  0167F0  88F2               	bsf	intcon,4,c	;volatile
 26595  0167F2                     i2u1464_46:
 26596                           
 26597                           ;drv_mrf_miwi_89xa.c: 229: return value;
 26598  0167F2  5014               	movf	i2RegisterRead@value,w,c
 26599  0167F4  0012               	return	
 26600  0167F6                     __end_ofi2_RegisterRead:
 26601                           	opt stack 0
 26602                           pclatu	equ	0xFFB
 26603                           pclath	equ	0xFFA
 26604                           tblptru	equ	0xFF8
 26605                           tblptrh	equ	0xFF7
 26606                           tblptrl	equ	0xFF6
 26607                           tablat	equ	0xFF5
 26608                           prodh	equ	0xFF4
 26609                           prodl	equ	0xFF3
 26610                           intcon	equ	0xFF2
 26611                           intcon2	equ	0xFF1
 26612                           intcon3	equ	0xFF0
 26613                           indf0	equ	0xFEF
 26614                           postinc0	equ	0xFEE
 26615                           plusw0	equ	0xFEB
 26616                           fsr0h	equ	0xFEA
 26617                           fsr0l	equ	0xFE9
 26618                           wreg	equ	0xFE8
 26619                           indf1	equ	0xFE7
 26620                           postinc1	equ	0xFE6
 26621                           postdec1	equ	0xFE5
 26622                           fsr1h	equ	0xFE2
 26623                           fsr1l	equ	0xFE1
 26624                           bsr	equ	0xFE0
 26625                           indf2	equ	0xFDF
 26626                           postinc2	equ	0xFDE
 26627                           postdec2	equ	0xFDD
 26628                           plusw2	equ	0xFDB
 26629                           fsr2h	equ	0xFDA
 26630                           fsr2l	equ	0xFD9
 26631                           status	equ	0xFD8
 26632                           
 26633 ;; *************** function i2_SPIGet *****************
 26634 ;; Defined at:
 26635 ;;		line 104 in file "src/18F27J53/spi.c"
 26636 ;; Parameters:    Size  Location     Type
 26637 ;;		None
 26638 ;; Auto vars:     Size  Location     Type
 26639 ;;		None
 26640 ;; Return value:  Size  Location     Type
 26641 ;;                  1    wreg      unsigned char 
 26642 ;; Registers used:
 26643 ;;		wreg, status,2, cstack
 26644 ;; Tracked objects:
 26645 ;;		On entry : 0/0
 26646 ;;		On exit  : 0/0
 26647 ;;		Unchanged: 0/0
 26648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26653 ;;Total ram usage:        0 bytes
 26654 ;; Hardware stack levels used:    1
 26655 ;; Hardware stack levels required when called:    1
 26656 ;; This function calls:
 26657 ;;		i2_SPIPut
 26658 ;; This function is called by:
 26659 ;;		_MIWIInterruptHandler
 26660 ;;		i2_RegisterRead
 26661 ;; This function uses a non-reentrant model
 26662 ;;
 26663                           
 26664                           	psect	text88
 26665  016B30                     __ptext88:
 26666                           	opt stack 0
 26667  016B30                     i2_SPIGet:
 26668                           	opt stack 13
 26669                           
 26670                           ;spi.c: 128: SPIPut(0x00);
 26671                           
 26672                           ;incstack = 0
 26673  016B30  0E00               	movlw	0
 26674  016B32  EC64  F0B5         	call	i2_SPIPut
 26675                           
 26676                           ;spi.c: 129: return SSP2BUF;
 26677  016B36  5075               	movf	3957,w,c	;volatile
 26678  016B38  0012               	return	
 26679  016B3A                     __end_ofi2_SPIGet:
 26680                           	opt stack 0
 26681                           pclatu	equ	0xFFB
 26682                           pclath	equ	0xFFA
 26683                           tblptru	equ	0xFF8
 26684                           tblptrh	equ	0xFF7
 26685                           tblptrl	equ	0xFF6
 26686                           tablat	equ	0xFF5
 26687                           prodh	equ	0xFF4
 26688                           prodl	equ	0xFF3
 26689                           intcon	equ	0xFF2
 26690                           intcon2	equ	0xFF1
 26691                           intcon3	equ	0xFF0
 26692                           indf0	equ	0xFEF
 26693                           postinc0	equ	0xFEE
 26694                           plusw0	equ	0xFEB
 26695                           fsr0h	equ	0xFEA
 26696                           fsr0l	equ	0xFE9
 26697                           wreg	equ	0xFE8
 26698                           indf1	equ	0xFE7
 26699                           postinc1	equ	0xFE6
 26700                           postdec1	equ	0xFE5
 26701                           fsr1h	equ	0xFE2
 26702                           fsr1l	equ	0xFE1
 26703                           bsr	equ	0xFE0
 26704                           indf2	equ	0xFDF
 26705                           postinc2	equ	0xFDE
 26706                           postdec2	equ	0xFDD
 26707                           plusw2	equ	0xFDB
 26708                           fsr2h	equ	0xFDA
 26709                           fsr2l	equ	0xFD9
 26710                           status	equ	0xFD8
 26711                           
 26712 ;; *************** function i2_SPIPut *****************
 26713 ;; Defined at:
 26714 ;;		line 45 in file "src/18F27J53/spi.c"
 26715 ;; Parameters:    Size  Location     Type
 26716 ;;  v               1    wreg     unsigned char 
 26717 ;; Auto vars:     Size  Location     Type
 26718 ;;  v               1   18[COMRAM] unsigned char 
 26719 ;;  SPIPut          1   17[COMRAM] unsigned char 
 26720 ;; Return value:  Size  Location     Type
 26721 ;;		None               void
 26722 ;; Registers used:
 26723 ;;		wreg
 26724 ;; Tracked objects:
 26725 ;;		On entry : 0/0
 26726 ;;		On exit  : 0/0
 26727 ;;		Unchanged: 0/0
 26728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26730 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26733 ;;Total ram usage:        2 bytes
 26734 ;; Hardware stack levels used:    1
 26735 ;; This function calls:
 26736 ;;		Nothing
 26737 ;; This function is called by:
 26738 ;;		i2_SPIGet
 26739 ;;		i2_RegisterSet
 26740 ;;		i2_RegisterRead
 26741 ;;		i2_WriteFIFO
 26742 ;; This function uses a non-reentrant model
 26743 ;;
 26744                           
 26745                           	psect	text89
 26746  016AC8                     __ptext89:
 26747                           	opt stack 0
 26748  016AC8                     i2_SPIPut:
 26749                           	opt stack 14
 26750                           
 26751                           ;incstack = 0
 26752                           ;i2SPIPut@v stored from wreg
 26753  016AC8  6E13               	movwf	i2SPIPut@v,c
 26754                           
 26755                           ;spi.c: 66: {
 26756                           ;spi.c: 68: uint8_t i;
 26757                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 26758  016ACA  9EA4               	bcf	4004,7,c	;volatile
 26759                           
 26760                           ;spi.c: 72: i = SSP2BUF;
 26761  016ACC  CF75 F012          	movff	3957,i2SPIPut@i	;volatile
 26762  016AD0                     i2l29:
 26763                           
 26764                           ;spi.c: 75: {
 26765                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 26766  016AD0  9E72               	bcf	3954,7,c	;volatile
 26767                           
 26768                           ;spi.c: 77: SSP2BUF = v;
 26769  016AD2  C013  FF75         	movff	i2SPIPut@v,3957	;volatile
 26770                           
 26771                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 26772  016AD6  BE72               	btfsc	3954,7,c	;volatile
 26773  016AD8  D7FB               	goto	i2l29
 26774  016ADA                     i2l31:
 26775  016ADA  AEA4               	btfss	4004,7,c	;volatile
 26776  016ADC  D7FE               	goto	i2l31
 26777                           
 26778                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 26779  016ADE  9EA4               	bcf	4004,7,c	;volatile
 26780  016AE0  0012               	return		;funcret
 26781  016AE2                     __end_ofi2_SPIPut:
 26782                           	opt stack 0
 26783                           pclatu	equ	0xFFB
 26784                           pclath	equ	0xFFA
 26785                           tblptru	equ	0xFF8
 26786                           tblptrh	equ	0xFF7
 26787                           tblptrl	equ	0xFF6
 26788                           tablat	equ	0xFF5
 26789                           prodh	equ	0xFF4
 26790                           prodl	equ	0xFF3
 26791                           intcon	equ	0xFF2
 26792                           intcon2	equ	0xFF1
 26793                           intcon3	equ	0xFF0
 26794                           indf0	equ	0xFEF
 26795                           postinc0	equ	0xFEE
 26796                           plusw0	equ	0xFEB
 26797                           fsr0h	equ	0xFEA
 26798                           fsr0l	equ	0xFE9
 26799                           wreg	equ	0xFE8
 26800                           indf1	equ	0xFE7
 26801                           postinc1	equ	0xFE6
 26802                           postdec1	equ	0xFE5
 26803                           fsr1h	equ	0xFE2
 26804                           fsr1l	equ	0xFE1
 26805                           bsr	equ	0xFE0
 26806                           indf2	equ	0xFDF
 26807                           postinc2	equ	0xFDE
 26808                           postdec2	equ	0xFDD
 26809                           plusw2	equ	0xFDB
 26810                           fsr2h	equ	0xFDA
 26811                           fsr2l	equ	0xFD9
 26812                           status	equ	0xFD8
 26813                           
 26814 ;; *************** function i2_MiWi_TickGet *****************
 26815 ;; Defined at:
 26816 ;;		line 104 in file "src/18F27J53/symbol.c"
 26817 ;; Parameters:    Size  Location     Type
 26818 ;;		None
 26819 ;; Auto vars:     Size  Location     Type
 26820 ;;  MiWi_TickGet    4   23[COMRAM] struct _MIWI_TICK
 26821 ;;  MiWi_TickGet    1   22[COMRAM] unsigned char 
 26822 ;; Return value:  Size  Location     Type
 26823 ;;                  4   17[COMRAM] struct _MIWI_TICK
 26824 ;; Registers used:
 26825 ;;		wreg, status,2, status,0
 26826 ;; Tracked objects:
 26827 ;;		On entry : 0/0
 26828 ;;		On exit  : 0/0
 26829 ;;		Unchanged: 0/0
 26830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26831 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26832 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26834 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26835 ;;Total ram usage:       10 bytes
 26836 ;; Hardware stack levels used:    1
 26837 ;; This function calls:
 26838 ;;		Nothing
 26839 ;; This function is called by:
 26840 ;;		_MIWIInterruptHandler
 26841 ;;		i2_TxPacket
 26842 ;; This function uses a non-reentrant model
 26843 ;;
 26844                           
 26845                           	psect	text90
 26846  016674                     __ptext90:
 26847                           	opt stack 0
 26848  016674                     i2_MiWi_TickGet:
 26849                           	opt stack 15
 26850                           
 26851                           ;symbol.c: 106: MIWI_TICK currentTime;
 26852                           ;symbol.c: 109: uint8_t failureCounter;
 26853                           ;symbol.c: 112: PIE1bits.TMR1IE = 0;
 26854                           
 26855                           ;incstack = 0
 26856  016674  909D               	bcf	3997,0,c	;volatile
 26857                           
 26858                           ;symbol.c: 115: currentTime.byte.b2 = 0;
 26859  016676  0E00               	movlw	0
 26860  016678  6E1A               	movwf	i2MiWi_TickGet@currentTime+2,c
 26861                           
 26862                           ;symbol.c: 116: currentTime.byte.b3 = 0;
 26863  01667A  0E00               	movlw	0
 26864  01667C  6E1B               	movwf	i2MiWi_TickGet@currentTime+3,c
 26865                           
 26866                           ;symbol.c: 118: failureCounter = 0;
 26867  01667E  0E00               	movlw	0
 26868  016680  6E17               	movwf	i2MiWi_TickGet@failureCounter,c
 26869  016682                     i2l12562:
 26870                           
 26871                           ;symbol.c: 121: {
 26872                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 26873  016682  CFCE F018          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 26874                           
 26875                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 26876  016686  CFCF F019          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 26877                           
 26878                           ;symbol.c: 124: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 26879  01668A  2818               	incf	i2MiWi_TickGet@currentTime,w,c
 26880  01668C  E109               	bnz	i2l62
 26881  01668E  2819               	incf	i2MiWi_TickGet@currentTime+1,w,c
 26882  016690  A4D8               	btfss	status,2,c
 26883  016692  D006               	goto	i2l62
 26884  016694  2A17               	incf	i2MiWi_TickGet@failureCounter,f,c
 26885  016696  0417               	decf	i2MiWi_TickGet@failureCounter,w,c
 26886  016698  6E16               	movwf	??i2_MiWi_TickGet& (0+255),c
 26887  01669A  0E02               	movlw	2
 26888  01669C  6416               	cpfsgt	??i2_MiWi_TickGet,c
 26889  01669E  D7F1               	goto	i2l12562
 26890  0166A0                     i2l62:
 26891                           
 26892                           ;symbol.c: 128: if(PIR1bits.TMR1IF)
 26893  0166A0  A09E               	btfss	3998,0,c	;volatile
 26894  0166A2  D005               	goto	i2l12576
 26895                           
 26896                           ;symbol.c: 129: {
 26897                           ;symbol.c: 131: {
 26898                           ;symbol.c: 134: currentTime.byte.b2++;
 26899  0166A4  2A1A               	incf	i2MiWi_TickGet@currentTime+2,f,c
 26900                           
 26901                           ;symbol.c: 135: if(timerExtension1 == 0xFF)
 26902  0166A6  0100               	movlb	0	; () banked
 26903  0166A8  29DA               	incf	_timerExtension1& (0+255),w,b	;volatile
 26904  0166AA  B4D8               	btfsc	status,2,c
 26905                           
 26906                           ; BSR set to: 0
 26907                           ;symbol.c: 136: {
 26908                           ;symbol.c: 137: currentTime.byte.b3++;
 26909  0166AC  2A1B               	incf	i2MiWi_TickGet@currentTime+3,f,c
 26910  0166AE                     i2l12576:
 26911                           
 26912                           ;symbol.c: 138: }
 26913                           ;symbol.c: 139: }
 26914                           ;symbol.c: 140: }
 26915                           ;symbol.c: 143: currentTime.byte.b2 += timerExtension1;
 26916  0166AE  0100               	movlb	0	; () banked
 26917  0166B0  51DA               	movf	_timerExtension1& (0+255),w,b	;volatile
 26918  0166B2  261A               	addwf	i2MiWi_TickGet@currentTime+2,f,c
 26919                           
 26920                           ; BSR set to: 0
 26921                           ;symbol.c: 144: currentTime.byte.b3 += timerExtension2;
 26922  0166B4  5049               	movf	_timerExtension2,w,c	;volatile
 26923  0166B6  261B               	addwf	i2MiWi_TickGet@currentTime+3,f,c
 26924                           
 26925                           ; BSR set to: 0
 26926                           ;symbol.c: 147: PIE1bits.TMR1IE = 1;
 26927  0166B8  809D               	bsf	3997,0,c	;volatile
 26928                           
 26929                           ; BSR set to: 0
 26930                           ;symbol.c: 149: return currentTime;
 26931  0166BA  C018  F012         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 26932  0166BE  C019  F013         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 26933  0166C2  C01A  F014         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 26934  0166C6  C01B  F015         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 26935  0166CA  0012               	return	
 26936  0166CC                     __end_ofi2_MiWi_TickGet:
 26937                           	opt stack 0
 26938                           pclatu	equ	0xFFB
 26939                           pclath	equ	0xFFA
 26940                           tblptru	equ	0xFF8
 26941                           tblptrh	equ	0xFF7
 26942                           tblptrl	equ	0xFF6
 26943                           tablat	equ	0xFF5
 26944                           prodh	equ	0xFF4
 26945                           prodl	equ	0xFF3
 26946                           intcon	equ	0xFF2
 26947                           intcon2	equ	0xFF1
 26948                           intcon3	equ	0xFF0
 26949                           indf0	equ	0xFEF
 26950                           postinc0	equ	0xFEE
 26951                           plusw0	equ	0xFEB
 26952                           fsr0h	equ	0xFEA
 26953                           fsr0l	equ	0xFE9
 26954                           wreg	equ	0xFE8
 26955                           indf1	equ	0xFE7
 26956                           postinc1	equ	0xFE6
 26957                           postdec1	equ	0xFE5
 26958                           fsr1h	equ	0xFE2
 26959                           fsr1l	equ	0xFE1
 26960                           bsr	equ	0xFE0
 26961                           indf2	equ	0xFDF
 26962                           postinc2	equ	0xFDE
 26963                           postdec2	equ	0xFDD
 26964                           plusw2	equ	0xFDB
 26965                           fsr2h	equ	0xFDA
 26966                           fsr2l	equ	0xFD9
 26967                           status	equ	0xFD8
 26968                           pclatu	equ	0xFFB
 26969                           pclath	equ	0xFFA
 26970                           tblptru	equ	0xFF8
 26971                           tblptrh	equ	0xFF7
 26972                           tblptrl	equ	0xFF6
 26973                           tablat	equ	0xFF5
 26974                           prodh	equ	0xFF4
 26975                           prodl	equ	0xFF3
 26976                           intcon	equ	0xFF2
 26977                           intcon2	equ	0xFF1
 26978                           intcon3	equ	0xFF0
 26979                           indf0	equ	0xFEF
 26980                           postinc0	equ	0xFEE
 26981                           plusw0	equ	0xFEB
 26982                           fsr0h	equ	0xFEA
 26983                           fsr0l	equ	0xFE9
 26984                           wreg	equ	0xFE8
 26985                           indf1	equ	0xFE7
 26986                           postinc1	equ	0xFE6
 26987                           postdec1	equ	0xFE5
 26988                           fsr1h	equ	0xFE2
 26989                           fsr1l	equ	0xFE1
 26990                           bsr	equ	0xFE0
 26991                           indf2	equ	0xFDF
 26992                           postinc2	equ	0xFDE
 26993                           postdec2	equ	0xFDD
 26994                           plusw2	equ	0xFDB
 26995                           fsr2h	equ	0xFDA
 26996                           fsr2l	equ	0xFD9
 26997                           status	equ	0xFD8
 26998                           
 26999                           	psect	rparam
 27000  0000                     pclatu	equ	0xFFB
 27001                           pclath	equ	0xFFA
 27002                           tblptru	equ	0xFF8
 27003                           tblptrh	equ	0xFF7
 27004                           tblptrl	equ	0xFF6
 27005                           tablat	equ	0xFF5
 27006                           prodh	equ	0xFF4
 27007                           prodl	equ	0xFF3
 27008                           intcon	equ	0xFF2
 27009                           intcon2	equ	0xFF1
 27010                           intcon3	equ	0xFF0
 27011                           indf0	equ	0xFEF
 27012                           postinc0	equ	0xFEE
 27013                           plusw0	equ	0xFEB
 27014                           fsr0h	equ	0xFEA
 27015                           fsr0l	equ	0xFE9
 27016                           wreg	equ	0xFE8
 27017                           indf1	equ	0xFE7
 27018                           postinc1	equ	0xFE6
 27019                           postdec1	equ	0xFE5
 27020                           fsr1h	equ	0xFE2
 27021                           fsr1l	equ	0xFE1
 27022                           bsr	equ	0xFE0
 27023                           indf2	equ	0xFDF
 27024                           postinc2	equ	0xFDE
 27025                           postdec2	equ	0xFDD
 27026                           plusw2	equ	0xFDB
 27027                           fsr2h	equ	0xFDA
 27028                           fsr2l	equ	0xFD9
 27029                           status	equ	0xFD8
 27030                           
 27031                           	psect	temp
 27032  00004C                     btemp:
 27033                           	opt stack 0
 27034  00004C                     	ds	1
 27035  0000                     int$flags	set	btemp
 27036                           pclatu	equ	0xFFB
 27037                           pclath	equ	0xFFA
 27038                           tblptru	equ	0xFF8
 27039                           tblptrh	equ	0xFF7
 27040                           tblptrl	equ	0xFF6
 27041                           tablat	equ	0xFF5
 27042                           prodh	equ	0xFF4
 27043                           prodl	equ	0xFF3
 27044                           intcon	equ	0xFF2
 27045                           intcon2	equ	0xFF1
 27046                           intcon3	equ	0xFF0
 27047                           indf0	equ	0xFEF
 27048                           postinc0	equ	0xFEE
 27049                           plusw0	equ	0xFEB
 27050                           fsr0h	equ	0xFEA
 27051                           fsr0l	equ	0xFE9
 27052                           wreg	equ	0xFE8
 27053                           indf1	equ	0xFE7
 27054                           postinc1	equ	0xFE6
 27055                           postdec1	equ	0xFE5
 27056                           fsr1h	equ	0xFE2
 27057                           fsr1l	equ	0xFE1
 27058                           bsr	equ	0xFE0
 27059                           indf2	equ	0xFDF
 27060                           postinc2	equ	0xFDE
 27061                           postdec2	equ	0xFDD
 27062                           plusw2	equ	0xFDB
 27063                           fsr2h	equ	0xFDA
 27064                           fsr2l	equ	0xFD9
 27065                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    270
    Data        4
    BSS         683
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      75
    BANK0           160    113     127
    BANK1           256     43     256
    BANK2           256     32     256
    BANK3           256     27     239
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(2) Largest target is 2
		 -> myPANID(BANK0[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(2) Largest target is 2
		 -> tempShortAddress(BANK1[2]), myShortAddress(BANK0[2]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> m_var.label(BANK1[3]), m_var(BANK1[9]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 4
		 -> UPDATE_FREQUENCY_LABEL(CODE[4]), POWER_LABEL(CODE[4]), 

    memcpy@d1	PTR void  size(2) Largest target is 43
		 -> decode_variable@var(BANK0[9]), m_var(BANK1[9]), TxBuffer(BANK1[43]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 43
		 -> decode_variable@var(BANK0[9]), m_var(BANK1[9]), TxBuffer(BANK1[43]), 

    memcpy@s1	PTR const void  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), FAILEDMSG_LABEL(CODE[4]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), 
		 -> POWER_LABEL(CODE[4]), TEMPERATURE_LABEL(CODE[4]), LIGHT_LEVEL_LABEL(CODE[4]), BATTERY_VOLTAGE_LABEL(CODE[4]), 
		 -> m_buffer(BANK1[32]), myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), 
		 -> RxPacket(BANK3[132]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), FAILEDMSG_LABEL(CODE[4]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), 
		 -> POWER_LABEL(CODE[4]), TEMPERATURE_LABEL(CODE[4]), LIGHT_LEVEL_LABEL(CODE[4]), BATTERY_VOLTAGE_LABEL(CODE[4]), 
		 -> m_buffer(BANK1[32]), myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), 
		 -> RxPacket(BANK3[132]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    do_UPDATE@p_buff	PTR unsigned char  size(2) Largest target is 32
		 -> m_buffer(BANK1[32]), 

    do_NETWORK_REGISTER@p_uid	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    decode_variable@p_buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK1[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    encode_ufixed16_variable@buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK1[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    encode_uint16_variable@buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK1[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    encode_uint8_variable@buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK1[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    sp__dBm_to_mW	PTR const unsigned char  size(2) Largest target is 9
		 -> TX_POWER_INVALID(CODE[9]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), TX_POWER_N_2_DB_MW(CODE[6]), 
		 -> TX_POWER_1_DB_MW(CODE[6]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), TX_POWER_10_DB_MW(CODE[5]), 
		 -> TX_POWER_13_DB_MW(CODE[5]), 

    sp__memcpy	PTR void  size(2) Largest target is 43
		 -> decode_variable@var(BANK0[9]), m_var(BANK1[9]), TxBuffer(BANK1[43]), 

    p_buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK1[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    MiApp_UnicastAddress@DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> do_UPDATE@shortaddress(BANK1[2]), do_POWER_TEST@shortaddress(BANK1[2]), do_NETWORK_REGISTER@shortaddress(BANK1[2]), tempShortAddress(BANK1[2]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 90
		 -> ConnectionTable(BANK2[90]), 

    SendMACPacket@Address	PTR unsigned char  size(2) Largest target is 90
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK1[2]), do_POWER_TEST@shortaddress(BANK1[2]), do_NETWORK_REGISTER@shortaddress(BANK1[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable.Address(BANK2[4]), ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    S2117$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S2117$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Dec@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK1[8]), 

    CCM_Dec@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Enc@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK1[8]), 

    CCM_Enc@text	PTR unsigned char  size(2) Largest target is 64
		 -> MACTxBuffer(BANK2[64]), 

    CBC_MAC@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK1[8]), 

    CBC_MAC@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CBC_MAC@MIC	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    CTR@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CTR@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK1[8]), 

    CTR@nounce	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    encode@key	PTR unsigned int  size(2) Largest target is 8
		 -> key(BANK1[8]), 

    encode@text	PTR unsigned int  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 43
		 -> TxBuffer(BANK1[43]), 

    S1714$DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK1[2]), do_POWER_TEST@shortaddress(BANK1[2]), do_NETWORK_REGISTER@shortaddress(BANK1[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK1[2]), do_POWER_TEST@shortaddress(BANK1[2]), do_NETWORK_REGISTER@shortaddress(BANK1[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1512$PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1736$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S1736$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _MIWIInterruptHandler->i2_TxPacket
    i2_TxPacket->i2_MiWi_TickGet
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _SYS_InterruptLow in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_do_NETWORK_REGISTER
    _send_periodical_update->_do_UPDATE
    _send_initial_update->_do_UPDATE
    _floor->___altoft
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___lltoft->___lmul
    ___ftneg->_floor
    _read_sensors->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___ftneg
    ___ftdiv->___lltoft
    _update_variable->_MiMAC_SetPower
    _send_writables_update->_do_UPDATE
    _decode_variable->_memcpy
    _MiApp_TransceiverPowerState->_MiMAC_PowerState
    _MiMAC_PowerState->_DELAY_ms
    _adapt_power_level->_do_POWER_TEST
    _MiMAC_SetPower->_RegisterSet
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_DELAY_ms
    _DELAY_ms->___lmul
    _MiApp_EstablishConnection->_OpenSocket
    _SendMACPacket->_MiMAC_SendPacket
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _MiApp_MessageAvailable->_MiWiTasks
    _MiWiTasks->_MiMAC_ReceivedPacket
    _MiMAC_SendPacket->_CCM_Enc
    _TxPacket->_MiWi_TickGet
    _WriteFIFO->_SPIPut
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _CCM_Enc->_CBC_MAC
    _CCM_Enc->_CTR
    _MiMAC_ReceivedPacket->_CCM_Dec
    _CCM_Dec->_CBC_MAC
    _CCM_Dec->_CTR
    _CTR->_encode
    _CBC_MAC->_encode
    _AddNodeToNetworkTable->_SearchForLongAddress

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_MIWIInterruptHandler

Critical Paths under _SYS_InterruptLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MiApp_EstablishConnection
    _main->_send_initial_update
    _main->_send_periodical_update
    _send_periodical_update->_do_UPDATE
    _send_initial_update->_do_UPDATE
    _read_sensors->___ftmul
    _process_update_answer->_send_writables_update
    _send_writables_update->_do_UPDATE
    _do_UPDATE->_MiApp_UnicastAddress
    _do_NETWORK_REGISTER->_MiApp_UnicastAddress
    _adapt_power_level->_do_POWER_TEST
    _do_POWER_TEST->_MiApp_UnicastAddress
    _MiApp_EstablishConnection->_MiApp_SearchConnection
    _OpenSocket->_MiApp_UnicastAddress
    _MiApp_MessageAvailable->_MiWiTasks

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _SYS_InterruptLow in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_process_update_answer
    _do_UPDATE->_MiApp_UnicastAddress
    _do_NETWORK_REGISTER->_MiApp_UnicastAddress
    _do_POWER_TEST->_MiApp_UnicastAddress
    _OpenSocket->_MiApp_UnicastAddress

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _SYS_InterruptLow in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_send_initial_update
    _main->_send_periodical_update

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _SYS_InterruptLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _SYS_InterruptLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _SYS_InterruptLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _SYS_InterruptLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _SYS_InterruptLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _SYS_InterruptLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _SYS_InterruptLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _SYS_InterruptLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _SYS_InterruptLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _SYS_InterruptLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SYS_InterruptHigh in BANK13

    None.

Critical Paths under _SYS_InterruptLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Critical Paths under _SYS_InterruptLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  946647
                                             17 BANK3     10    10      0
               _MiApp_ConnectionMode
               _MiApp_DiscardMessage
          _MiApp_EstablishConnection
             _MiApp_MessageAvailable
                 _MiApp_ProtocolInit
             _MiApp_SearchConnection
        _MiApp_TransceiverPowerState
                     _MiMAC_SetPower
                          _MiWiTasks
                  _SYSTEM_Initialize
                  _adapt_power_level
                _do_NETWORK_REGISTER
              _process_update_answer
                       _read_sensors
          _security_force_key_update
                _send_initial_update
             _send_periodical_update
                        _timer_reset
                     _wait_for_1_sec
 ---------------------------------------------------------------------------------
 (1) _send_periodical_update                              42    42      0  149087
                                             42 BANK1      1     1      0
                                              0 BANK3     17    17      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                           ___lltoft
                             ___lmul
                          _do_UPDATE
           _encode_ufixed16_variable
             _encode_uint16_variable
              _encode_uint8_variable
                              _floor
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _send_initial_update                                 42    42      0  149087
                                             42 BANK1      1     1      0
                                              0 BANK3     17    17      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                           ___lltoft
                             ___lmul
                          _do_UPDATE
           _encode_ufixed16_variable
             _encode_uint16_variable
              _encode_uint8_variable
                              _floor
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _floor                                                8     5      3   15254
                                             94 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     506
                                             33 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     406
                                             33 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    6492
                                             41 BANK0     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3783
                                             84 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _encode_uint16_variable                              11     0     11    1555
                                             33 BANK0     11     0     11
 ---------------------------------------------------------------------------------
 (2) _encode_ufixed16_variable                            11     0     11    1971
                                             33 BANK0     11     0     11
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3993
                                             45 BANK0      9     5      4
                           ___ftpack
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1489
                                             33 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     689
                                            102 BANK0      3     0      3
                            ___ftadd (ARG)
                            ___fttol (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (1) _security_force_key_update                            2     2      0     130
                                             33 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _read_sensors                                         9     9      0   16944
                                              9 BANK1      9     9      0
                           _OpenI2C1
                           _ReadI2C1
                          _WriteI2C1
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    3818
                                             41 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4    1827
                                             69 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    6003
                                            105 BANK0      6     0      6
                                              0 BANK1      9     9      0
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4895
                                             54 BANK0     15     9      6
                           ___ftpack
                           ___lltoft (ARG)
                             ___lmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3475
                                             33 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _WriteI2C1                                            2     2      0      31
                                             33 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenI2C1                                             2     1      1     166
                                             33 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _process_update_answer                               13    13      0  147810
                                             19 BANK2     13    13      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
        _MiApp_TransceiverPowerState
                    _decode_variable
              _send_writables_update
                        _timer_reset
                    _update_variable
                     _wait_for_1_sec
 ---------------------------------------------------------------------------------
 (1) _wait_for_1_sec                                       3     3      0      68
                                             33 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _update_variable                                      0     0      0    2335
                     _MiMAC_SetPower
                           _RtccWrOn
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4     549
                                             33 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _timer_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _send_writables_update                                3     3      0  102333
                                             42 BANK1      1     1      0
                          _do_UPDATE
              _encode_uint8_variable
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _encode_uint8_variable                               11     0     11    2735
                                             33 BANK0     11     0     11
 ---------------------------------------------------------------------------------
 (2) _do_UPDATE                                           10     6      4   93808
                                            112 BANK0      1     1      0
                                             33 BANK1      9     5      4
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _decode_variable                                     20    11      9    6524
                                             43 BANK0     20    11      9
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _MiApp_TransceiverPowerState                          2     2      0    3365
                                             53 BANK0      1     1      0
                   _MiMAC_PowerState
 ---------------------------------------------------------------------------------
 (3) _MiMAC_PowerState                                     2     2      0    3334
                                             51 BANK0      2     2      0
                           _DELAY_ms
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (1) _do_NETWORK_REGISTER                                  9     6      3   92051
                                            112 BANK0      1     1      0
                                             33 BANK1      8     5      3
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6    5790
                                             33 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _adapt_power_level                                    6     5      1   88379
                                             40 BANK1      2     1      1
                                             19 BANK2      3     3      0
                     _MiMAC_SetPower
                      _do_POWER_TEST
 ---------------------------------------------------------------------------------
 (2) _do_POWER_TEST                                        8     8      0   86130
                                            112 BANK0      1     1      0
                                             33 BANK1      7     7      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetPower                                       3     3      0    1786
                                             39 BANK0      3     3      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   6     6      0   10993
                                             55 BANK0      6     6      0
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           4     1      3    5490
                                             51 BANK0      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (4) _DELAY_ms                                             6     4      2    1449
                                             45 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1136
                                             33 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_EstablishConnection                           20    19      1  165678
                                             34 BANK1      9     8      1
                                             19 BANK2     11    11      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
             _MiApp_SearchConnection
                   _MiApp_SetChannel
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                         _OpenSocket
               _SearchForLongAddress
                      _SendMACPacket
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _OpenSocket                                           1     1      0   53461
                                            112 BANK0      1     1      0
               _MiApp_UnicastAddress
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastAddress                                31    27      4   52962
                                             21 BANK1     12     8      4
                                              0 BANK2     19    19      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiMAC_SendPacket
                       _MiWi_TickGet
               _SearchForLongAddress
 ---------------------------------------------------------------------------------
 (1) _MiApp_SearchConnection                              28    24      4   55098
                                             21 BANK1     13     9      4
                                              0 BANK2     15    15      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiApp_SetChannel
                       _MiWi_TickGet
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (2) _SendMACPacket                                        4     1      3   17549
                                             90 BANK0      4     1      3
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0    3738
                                             43 BANK0      1     1      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3676
                                             40 BANK0      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0   32807
                          _MiWiTasks
 ---------------------------------------------------------------------------------
 (5) _MiWiTasks                                           29    29      0   32807
                                            104 BANK0      8     8      0
                                              0 BANK1     21    21      0
              _AddNodeToNetworkTable
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                   _MiMAC_SendPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
               _SearchForLongAddress
              _SearchForShortAddress
 ---------------------------------------------------------------------------------
 (6) _MiMAC_SetAltAddress                                  4     0      4    1456
                                             33 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _MiMAC_SendPacket                                    10     4      6   17040
                                             80 BANK0     10     4      6
                            _CCM_Enc
                           _TxPacket
 ---------------------------------------------------------------------------------
 (5) _TxPacket                                            24    23      1    4859
                                             43 BANK0     24    23      1
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (6) _WriteFIFO                                            3     3      0     133
                                             35 BANK0      3     3      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _SetRFMode                                            1     1      0    1755
                                             39 BANK0      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (7) _RegisterSet                                          4     2      2    1724
                                             35 BANK0      4     2      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _RegisterRead                                         4     4      0     235
                                             35 BANK0      4     4      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _SPIGet                                               0     0      0      34
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _SPIPut                                               2     2      0      34
                                             33 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _CCM_Enc                                             11     5      6    7941
                                             69 BANK0     11     5      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                20    20      0   10181
                                             84 BANK0     20    20      0
                            _CCM_Dec
                       _MiWi_TickGet
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (7) _isSameAddress                                        7     3      4     400
                                             33 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _MiWi_TickGet                                        10     6      4     400
                                             33 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (7) _CCM_Dec                                             15     9      6    7941
                                             69 BANK0     15     9      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (6) _CTR                                                 13     6      7    3397
                                             56 BANK0     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (6) _CBC_MAC                                             13     6      7    3397
                                             56 BANK0     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (7) _encode                                              23    19      4    1094
                                             33 BANK0     23    19      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     861
                                             33 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _AddNodeToNetworkTable                                4     4      0    1034
                                             39 BANK0      4     4      0
               _SearchForLongAddress
              _SearchForShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (7) _findNextNetworkEntry                                 1     1      0     130
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _SearchForShortAddress                                3     3      0     192
                                             33 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SearchForLongAddress                                 6     6      0     322
                                             33 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ConnectionMode                                 2     2      0      62
                                             33 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _SYS_InterruptLow                                   17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0    4516
                                             19 BANK0     14    14      0
               _MIWIInterruptHandler
 ---------------------------------------------------------------------------------
 (14) _MIWIInterruptHandler                               19    19      0    4516
                                              0 BANK0     19    19      0
                     i2_MiWi_TickGet
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (15) i2_TxPacket                                         24    23      1    1913
                                             27 COMRAM    24    23      1
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (16) i2_WriteFIFO                                         3     3      0     133
                                             19 COMRAM     3     3      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_SetRFMode                                         1     1      0     405
                                             23 COMRAM     1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (17) i2_RegisterSet                                       4     2      2     374
                                             19 COMRAM     4     2      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_RegisterRead                                      4     4      0     235
                                             19 COMRAM     4     4      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (17) i2_SPIGet                                            0     0      0      34
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (17) i2_SPIPut                                            2     2      0      34
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) i2_MiWi_TickGet                                     10     6      4     316
                                             17 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MiApp_ConnectionMode
   _MiApp_DiscardMessage
     _MiMAC_DiscardPacket
   _MiApp_EstablishConnection
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_SearchConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
       _MiWi_TickGet
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _OpenSocket
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _MiWi_TickGet
     _SearchForLongAddress
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
     _findNextNetworkEntry
   _MiApp_MessageAvailable
     _MiWiTasks
       _AddNodeToNetworkTable
         _SearchForLongAddress
         _SearchForShortAddress
         _findNextNetworkEntry
       _MiMAC_DiscardPacket
       _MiMAC_ReceivedPacket
         _CCM_Dec
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _MiWi_TickGet
         _isSameAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiMAC_SetAltAddress
       _MiWi_TickGet
       _SearchForLongAddress
       _SearchForShortAddress
   _MiApp_ProtocolInit
     _InitSymbolTimer
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_Init
       _DELAY_ms
         ___lmul
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_SearchConnection
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiWi_TickGet
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
   _MiApp_TransceiverPowerState
     _MiMAC_PowerState
       _DELAY_ms
         ___lmul
       _SetRFMode
         _RegisterSet
           _SPIPut
   _MiMAC_SetPower
     _RegisterSet
       _SPIPut
   _MiWiTasks
     _AddNodeToNetworkTable
       _SearchForLongAddress
       _SearchForShortAddress
       _findNextNetworkEntry
     _MiMAC_DiscardPacket
     _MiMAC_ReceivedPacket
       _CCM_Dec
         _CBC_MAC
           ___awdiv
           _encode
         _CTR
           ___awdiv
           _encode
       _MiWi_TickGet
       _isSameAddress
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
           _encode
         _CTR
           ___awdiv
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _SearchForLongAddress
     _SearchForShortAddress
   _SYSTEM_Initialize
     _RtccWrOn
   _adapt_power_level
     _MiMAC_SetPower
       _RegisterSet
         _SPIPut
     _do_POWER_TEST
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
   _do_NETWORK_REGISTER
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_UnicastAddress
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiWi_TickGet
       _SearchForLongAddress
     _memcpy
   _process_update_answer
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_TransceiverPowerState
       _MiMAC_PowerState
         _DELAY_ms
           ___lmul
         _SetRFMode
           _RegisterSet
             _SPIPut
     _decode_variable
       _memcpy
     _send_writables_update
       _do_UPDATE
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiApp_UnicastAddress
           _MiApp_DiscardMessage
             _MiMAC_DiscardPacket
           _MiApp_MessageAvailable
             _MiWiTasks
               _AddNodeToNetworkTable
                 _SearchForLongAddress
                 _SearchForShortAddress
                 _findNextNetworkEntry
               _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                 _CCM_Dec
                   _CBC_MAC
                     ___awdiv
                     _encode
                   _CTR
                     ___awdiv
                     _encode
                 _MiWi_TickGet
                 _isSameAddress
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                     _encode
                   _CTR
                     ___awdiv
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
               _MiMAC_SetAltAddress
               _MiWi_TickGet
               _SearchForLongAddress
               _SearchForShortAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiWi_TickGet
           _SearchForLongAddress
         _memcpy
       _encode_uint8_variable
       _memcpy
     _timer_reset
     _update_variable
       _MiMAC_SetPower
         _RegisterSet
           _SPIPut
       _RtccWrOn
       _strcmp
     _wait_for_1_sec
   _read_sensors
     _OpenI2C1
     _ReadI2C1
     _WriteI2C1
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _security_force_key_update
   _send_initial_update
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lldiv
     ___lltoft
       ___ftpack
       ___lmul (ARG)
     ___lmul
     _do_UPDATE
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _memcpy
     _encode_ufixed16_variable
     _encode_uint16_variable
     _encode_uint8_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _frexp
     _memcpy
   _send_periodical_update
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lldiv
     ___lltoft
       ___ftpack
       ___lmul (ARG)
     ___lmul
     _do_UPDATE
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _memcpy
     _encode_ufixed16_variable
     _encode_uint16_variable
     _encode_uint8_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _frexp
     _memcpy
   _timer_reset
   _wait_for_1_sec

 _SYS_InterruptLow (ROOT)

 _SYS_InterruptHigh (ROOT)
   _MIWIInterruptHandler
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_SPIGet
       i2_SPIPut
     i2_TxPacket
       i2_MiWi_TickGet
       i2_RegisterRead
         i2_SPIGet
           i2_SPIPut
         i2_SPIPut
       i2_RegisterSet
         i2_SPIPut
       i2_SetRFMode
         i2_RegisterSet
           i2_SPIPut
       i2_WriteFIFO
         i2_SPIPut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     1B      EF      12       93.4%
BITBANK2           100      0       0       9        0.0%
BANK2              100     20     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     2B     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      4B       1       79.8%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3B9       6        0.0%
DATA                 0      0     3B9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Aug 14 10:41:29 2016

                              i2_TxPacket 46D6                              ___altoft@exp 00BC  
                  send_initial_update@tmp 03E3                      ?_MiMAC_DiscardPacket 0001  
                            _UPTIME_LABEL FFFB                            ?_isSameAddress 0081  
                           ___altoft@sign 00BD                                        l31 6AA6  
                                      l18 5CA8                                        l19 5C94  
                                      l29 6A9C                                        l62 63E6  
        MiApp_SearchConnection@ChannelMap 01E8                              ___awdiv@sign 0086  
                                      bsr 000FE0                   send_initial_update@tmp2 03D4  
                     MiApp_ProtocolInit@i 009C                         _ActiveScanResults 0300  
                            __CFG_CP0$OFF 000000                              ___ftadd@exp1 0094  
                            ___ftadd@exp2 0093                                _MiMAC_Init 4AB4  
                            ___ftadd@sign 0092                                       l323 368A  
                                     l324 36E0                                       l237 676A  
                                     l318 3620                                       l352 273A  
                                     l601 0A76                                       l442 4EB8  
                                     l258 3E1C                                       l259 3E62  
                                     l721 514A                                       l641 0614  
                                     l634 0590                                       l627 04EE  
                                     l724 5170                                       l716 509C  
                                     l468 4CD0                                       l628 04F2  
                                     l477 45CE                            ?i2_RegisterSet 0014  
                                     l654 0944                                       l672 0B70  
                                     l657 090E                                       l834 20C8  
                                     l755 69D2                                       l667 0A14  
                                     l829 206C                                       l839 228A  
                                     l848 241E                                       l784 29C6  
                                     _CTR 4E50                                       _MTP 00D1  
                                     _key 01C0                           __end_of_CBC_MAC 53C0  
             __end_of_MiMAC_SetAltAddress 6B40                                       prod 000FF3  
                                     wreg 000FE8                           __end_of_CCM_Dec 46D6  
                         __end_of_CCM_Enc 4D2A            __end_of_UPDATE_FREQUENCY_LABEL FFFB  
                             i2_WriteFIFO 695E         __end_of_MiApp_EstablishConnection 2DAE  
                                    ?_CTR 0098                                      CTR@i 00A3  
                                    CTR@j 00A4                              ___ftdiv@cntr 009F  
                            ___ftdiv@sign 00A4                                      l1100 3C46  
                                    l1210 6ABC                                      l1131 2E5C  
                                    l1205 5682                                      l1125 2DC6  
                                    l1150 2F9C                                      l1119 3DEC  
                                    l1128 2DD6                                      l1410 6A8A  
                                    l1138 2F30                                      l1227 695C  
                                    l1171 3028                                      l1156 2FC0  
                                    l1165 3012                                      l1350 6546  
                                    l1168 3022                                      l1088 3310  
                                    l1409 6A88                                      l1290 6092  
                                    l1434 64AE                                      l1443 64CE  
                                    l1294 5DB0                                      l1298 5E4C  
                                    l1732 33DA                                      l1736 3414  
                                    l1834 5B50                                      l1738 343C  
                                    l1747 3512                                      l1684 5282  
                                    l1756 353C                                      l1767 493A  
                                    l1695 55B4                                      l1789 69B6  
                         ?i2_RegisterRead 0001                                      i2l31 6ADA  
                                    i2l29 6AD0                                      i2l62 66A0  
                  _encode_uint16_variable 5D64                     _BATTERY_VOLTAGE_LABEL FFDF  
              MiMAC_SetChannel@offsetFreq 0088                                      _main 30B4  
                            ___ftpack@arg 0081                              ___ftpack@exp 0084  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                                      btemp 004C  
                                    pclat 000FFA                           _update_variable 55C2  
              MiApp_UnicastAddress@handle 02F2                     MiApp_ProtocolInit@MIP 0099  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00F6                             __CFG_IESO$OFF 000000  
             _send_periodical_update$5080 03D7               _send_periodical_update$5081 03DA  
             _send_periodical_update$5082 03DD               _send_periodical_update$5083 03E0  
                        __end_of_DELAY_ms 5CC6                 do_NETWORK_REGISTER@F10202 0160  
                           _m_light_level 0168                            _InitConfigRegs FEF1  
                            ___ftmul@cntr 01DA                              ___param_bank 000010  
                            ___ftmul@sign 01DB                     ??_MiMAC_DiscardPacket 0081  
                                   ??_CTR 009F             adapt_power_level@minimal_rssi 01FB  
                 decode_variable@p_buffer 008B                          CCM_Enc@headerLen 00A7  
                            ___fttol@exp1 00B3                              ___fttol@lval 00AF  
            __end_of_MiApp_DiscardMessage 6B30                MiMAC_PowerState@PowerState 0093  
                                   l11000 3EA6                                     l11100 4586  
                                   l11012 3EC6                                     l11200 683E  
                                   l11120 4654                                     l11104 4590  
                                   l11024 3EF4                                     l11008 3EBC  
                                   l11040 3F94                                     l11210 686E  
                                   l11130 46CC                                     l11114 45EA  
                                   l11050 4C28                                     l11034 3F7C  
                                   l11140 5FC0                                     l11204 6848  
                                   l11124 465E                                     l11108 45A8  
                                   l11060 4C82                                     l11300 3804  
                                   l11214 6874                                     l11134 46D2  
                                   l11070 4CAA                                     l11062 4C88  
                                   l11054 4C32                                     l11038 3F90  
                                   l11302 3810                                     l12110 2438  
                                   l11144 5FCA                                     l11080 66D2  
                                   l11312 24EE                                     l12120 244E  
                                   l11154 603C                                     l11090 6714  
                                   l11322 25F0                                     l11066 4C92  
                                   l11226 35E6                                     l12130 24DA  
                                   l11164 579A                                     l11084 66DC  
                                   l11420 2920                                     l11332 2600  
                                   l11308 24E4                                     l11076 4CEC  
                                   l11244 3672                                     l13020 5500  
                                   l11174 57EA                                     l11190 5856  
                                   l11158 6042                                     l11094 671A  
                                   l11406 2870                                     l11334 2606  
                                   l11326 25F6                                     l11270 3728  
                                   l11262 36F6                                     l11254 36C8  
                                   l11238 363E                                     l11502 0090  
                                   l12038 22A4                                     l12062 234A  
                                   l12142 6604                                     l12222 62C4  
                                   l11168 57A4                                     l10800 5A7A  
                                   l11408 2892                                     l11432 296E  
                                   l11280 375C                                     l11248 3698  
                                   l11512 00AA                                     l12048 22BA  
                                   l12216 68C2                                     l12136 65CC  
                                   l12240 62FE                                     l12320 4186  
                                   l12160 5236                                     l12152 51D8  
                                   l12400 5CF2                                     l13024 5514  
                                   l11186 5850                                     l11178 57F4  
                                   l11194 585C                                     l11418 2918  
                                   l11354 26C8                                     l11338 2610  
                                   l11258 36EC                                     l11530 019C  
                                   l11522 0168                                     l12058 2346  
                                   l13122 432A                                     l12170 528C  
                                   l12162 5266                                     l12154 51E6  
                                   l13202 48F8                                     l12402 5D02  
                                   l11452 50A8                                     l10804 5A88  
                                   l10900 4E7C                                     l11372 274E  
                                   l11356 26D0                                     l11348 267A  
                                   l11436 2974                                     l11292 37C8  
                                   l11620 03E2                                     l11508 00A0  
                                   l13116 4312                                     l12236 62F4  
                                   l12228 62D0                                     l12252 631E  
                                   l12324 419E                                     l12164 5274  
                                   l12156 5216                                     l12148 51C4  
                                   l13028 5532                                     l10750 3864  
                                   l10830 63FA                                     l11390 27BC  
                                   l11382 27A4                                     l11294 37D0  
                                   l11286 3790                                     l11702 05B6  
                                   l11550 022A                                     l11542 0218  
                                   l11534 01A6                                     l13150 43CC  
                                   l13134 4366                                     l13118 4320  
                                   l12246 631A                                     l12254 6330  
                                   l12342 422A                                     l12318 4180  
                                   l13222 445C                                     l12422 3422  
                                   l12502 58E0                                     l11464 50E8  
                                   l11456 50B8                                     l10808 5A9C  
                                   l10904 4E86                                     l10816 63BE  
                                   l11368 2744                                     l11632 041A  
                                   l11552 0230                                     l11528 0196  
                                   l13152 43D2                                     l13160 43F4  
                                   l13136 4376                                     l12176 52A8  
                                   l12416 33E8                                     l10754 386E  
                                   l10914 4EDA                                     l10930 4F62  
                                   l11386 27B2                                     l11378 279E  
                                   l11810 09F0                                     l11626 040A  
                                   l11546 021E                                     l12266 61F2  
                                   l13402 4FC8                                     l12362 4280  
                                   l12338 4210                                     l13242 44E4  
                                   l14042 2EF2                                     l12450 34CA  
                                   l11468 50F2                                     l11476 51A4  
                                   l10764 3A16                                     l10940 52E4  
                                   l11396 2828                                     l11732 07C2  
                                   l11628 0410                                     l11564 0260  
                                   l11556 023A                                     l13164 440E  
                                   l13156 43EC                                     l12356 4270  
                                   l13252 4522                                     l13228 4496  
                                   l12540 4A50                                     l14060 2FC4  
                                   l14052 2F58                                     l12444 34A2  
                                   l12428 3432                                     l12508 5924  
                                   l14220 1206                                     l10790 5A44  
                                   l10782 5A1A                                     l10950 5312  
                                   l10918 4EE4                                     l10870 5F32  
                                   l11806 09E6                                     l11750 0864  
                                   l11822 0A46                                     l11742 0802  
                                   l11638 045A                                     l11574 0300  
                                   l11830 0A7E                                     l11902 5B72  
                                   l12702 4B90                                     l13166 441C  
                                   l12366 429A                                     l12358 4278  
                                   l12374 42AE                                     l12382 655A  
                                   l13182 4898                                     l13246 4502  
                                   l12550 4A86                                     l12518 49AA  
                                   l14046 2F10                                     l12446 34B0  
                                   l12438 3474                                     l10792 5A4A  
                                   l10776 5A04                                     l10936 52DA  
                                   l10928 4F5E                                     l11736 07F2  
                                   l11664 04D8                                     l11672 04F8  
                                   l11680 0540                                     l11576 030C  
                                   l12368 42A8                                     l12384 6566  
                                   l14312 3DD2                                     l14320 3DE8  
                                   l13176 485E                                     l13256 4540  
                                   l12536 4A3C                                     l14064 2FE8  
                                   l14056 2F7C                                     l14048 2F34  
                                   l12464 3566                                     l12456 34F8  
                                   l12448 34BE                                     l10954 531C  
                                   l10946 5304                                     l10882 5F6E  
                                   l10874 5F46                                     l11834 0A98  
                                   l11762 08C4                                     l11738 07F8  
                                   l11658 04CE                                     l11674 050E  
                                   l11826 0A5E                                     l12810 3B72  
                                   l11930 2062                                     l14314 3DD6  
                                   l14322 3DF2                                     l14250 3C4C  
                                   l12554 4AA2                                     l12546 4A6C  
                                   l14058 2FA0                                     l13522 6728  
                                   l13274 5AD4                                     l12474 35B4  
                                   l12458 3506                                     l14146 0F1C  
                                   l10788 5A38                                     l10964 539A  
                                   l10948 530C                                     l10892 5F96  
                                   l10972 3E16                                     l11844 0B6A  
                                   l11772 08FC                                     l11748 085E  
                                   l12820 3C22                                     l11940 2086  
                                   l12708 4BBE                                     l12388 65AA  
                                   l14324 3E04                                     l12548 4A7C  
                                   l13276 5AE4                                     l13292 6158  
                                   l12484 5EBE                                     l10886 5F82  
                                   l10878 5F5A                                     l11838 0AA2  
                                   l11766 08CE                                     l12822 3C26  
                                   l12662 4ADE                                     l14254 3C56  
                                   l13526 673E                                     l13286 5B3E  
                                   l13278 5AEA                                     l13294 6168  
                                   l14422 18AA                                     l10968 53B2  
                                   l10976 3E30                                     l11792 0982  
                                   l11696 05A4                                     l11936 207C  
                                   l12744 598A                                     l11872 636C  
                                   l12672 4B04                                     l12840 6932  
                                   l14264 3C9A                                     l14192 10F6  
                                   l14168 1000                                     l14408 1828  
                                   l10898 4E76                                     l11786 0972  
                                   l11946 20B8                                     l13810 2990  
                                   l12690 4B52                                     l12674 4B0A  
                                   l12666 4AE8                                     l12762 687E  
                                   l14290 3D2A                                     l14274 3CB6  
                                   l12498 58A0                                     l14178 1074  
                                   l10996 3E8A                                     l11788 0978  
                                   l12756 59C6                                     l12748 5994  
                                   l13820 29AE                                     l11868 6346  
                                   l12684 4B30                                     l12772 68A2  
                                   l12836 6AC0                                     l14284 3CFA  
                                   l11798 09B0                                     l12782 3A68  
                                   l13814 299C                                     l12686 4B48  
                                   l12678 4B14                                     l13742 4D44  
                                   l12766 6890                                     l12870 5762  
                                   l12792 3A96                                     l13904 2CF0  
                                   l13840 2A1A                                     l12696 4B80  
                                   l13760 4D98                                     l13752 4D72  
                                   l12778 3A5E                                     l11994 218A  
                                   l11986 2142                                     l13922 2DAA  
                                   l13826 29B2                                     l12698 4B86  
                                   l13770 4DC2                                     l13746 4D4E  
                                   l12858 5706                                     l14298 3DAE  
                                   l14386 173A                                     l14810 3298  
                                   l12788 3A84                                     l13916 2D84  
                                   l13844 2A42                                     l13836 29D0  
                                   l13764 4DA2                                     l12876 577A  
                                   l12892 5608                                     l14820 32CA  
                                   l13870 2B20                                     l13854 2AA4  
                                   l14398 17B4                                     l14750 3126  
                                   l13880 2BAC                                     l13864 2AC8  
                                   l13848 2A4C                                     l12992 64BA  
                                   l14840 32FE                                     l14808 328E  
                                   l14760 3164                                     l13874 2B2A  
                                   l13970 40B6                                     l13954 4060  
                                   l14834 32EE                                     l14770 319A  
                                   l14746 3110                                     l13956 4070  
                                   l12996 64D2                                     l14860 3338  
                                   l14836 32F2                                     l14780 3218  
                                   l14772 31A8                                     l14756 3158  
                                   l13982 4124                                     l13974 4102  
                                   l14782 321C                                     l13992 64FE  
                                   l13984 4132                                     l14848 3312  
                                   l14768 3190                                     l13978 410A  
                                   l14874 335C                                     l14794 324E  
                                   l14876 3360                                     l14796 3258  
                                   l14878 336A                                     ?_main 0001  
                         __end_of___awdiv 5AA6                           __end_of___ftadd 35DA  
           MiApp_EstablishConnection@Mode 01F5                           __end_of___ftdiv 4970  
                         __end_of___ftneg 69C4                           __end_of___lldiv 5B62  
                         __end_of___ftmul 4580                           ___awdiv@divisor 0083  
                                   u13015 007C                                     u13008 005C  
                                   _T1CON 000FCD                                     u13201 0336  
                                   u13017 0080                                     u13061 0166  
                                   u13045 014A                           __end_of___fttol 4AB4  
                                   u12510 35F4                                     u13311 0538  
                                   u13047 014E                                     u15011 5414  
                                   u14108 6204                                     u11805 38C4  
                                   u15021 547E                                     u15110 64DE  
                                   u11815 394C                                     u13191 0320  
                                   u12528 35F8                                     u11825 39A6  
                                   u14090 6200                                     u14251 3388  
                                   u12660 25DA                                     u14261 33A6  
                                   u13630 0BEC                                     u15118 64E2  
                                   u11775 67A2                                     u15311 483A  
                                   u14511 4986                                     u11776 67A4  
                                   u13640 6B18                                     u11945 6660  
                                   u11785 67AE                                     u17001 1902  
                                   u11946 6662                                     u11786 67B0  
                                   u14530 49D0                                     u11955 666C  
                                   u15331 4874                                     u17011 1ADC  
                                   u11956 666E                                     u16300 40CE  
                                   u15180 5524                                     u11965 6828  
                                   u11966 682A                                     u13590 0B4C  
                                   u16150 29F2                                     u16310 40D0  
                                   u14470 5EF0                                     u11975 6834  
                                   u13815 223A                                     u14535 49C6  
                                   u11976 6836                                     u13920 24D2  
                                   u13816 223E                                     u16240 2D80  
                                   u16400 2F1C                                     u15361 4438  
                                   u12970 0024                                     u14810 3ABC  
                                   u13930 65F6                                     u16155 29E6  
                                   u16075 4DE2                                     u13860 233E  
                                   u16076 4DE6                                     u16500 2FAC  
                                   u15381 4472                                     u12990 0058  
                                   u16430 2F40                                     u14478 5EF4  
                                   u14815 3AB0                                     u16408 2F20  
                                   u12985 0042                                     u13785 2110  
                                   u13937 65EC                                     u14905 5720  
                                   u12978 0028                                     u13786 2114  
                                   u16530 2FD0                                     u16450 2F64  
                                   u12987 0046                                     u13875 23CE  
                                   u14931 578A                                     u16611 0D20  
                                   u13876 23D2                                     u16508 2FB0  
                                   u16605 305C                                     u16621 0D8A  
                                   u16550 2FF4                                     u16470 2F88  
                                   u16438 2F44                                     u16711 10E8  
                                   u16631 0ECE                                     u16721 114E  
                                   u16538 2FD4                                     u16458 2F68  
                                   u16731 11B8                                     u16651 0F70  
                                   u16901 153E                                     u16558 2FF8  
                                   u16478 2F8C                                     u17607 3C5E  
                                   u16751 13CA                                     u16671 0FF2  
                                   u16911 15A8                                     u17617 694A  
                                   u16841 3D0C                                     u16921 16EC  
                                   u17627 4242                                     u16691 1066  
                                   u17637 4088                                     u17647 650E  
                                   u16951 17A6                                     u17657 438E  
                                   u17587 2DBA                                     u16971 181A  
                                   u17597 2EFA                                     u16991 189C  
                                   i2l401 1CD8                                     i2l403 1C84  
                                   i2l258 46E2                                     i2l259 4712  
                                   i2l392 1BB0                                     i2l398 1C0C  
                         ___awdiv@counter 0085                                     _PLLEN 007CDE  
                __size_of_InitSymbolTimer 0016                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _RPOR4 000EC4  
                                   _RPOR5 000EC5                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _UPUEN 0079CC                          __end_ofi2_SPIGet 6B3A  
                     ___lmul@multiplicand 0085                                _MiWiSeqNum 00D7  
                            ___lltoft@exp 0095                          __end_ofi2_SPIPut 6AE2  
                          _myShortAddress 00DD                           _decode_variable 56B8  
                          __CFG_FCMEN$OFF 000000             __size_of_MIWIInterruptHandler 0522  
                         __end_of_myMODEL FFF6             __size_of_MiApp_ConnectionMode 002C  
                                   _myUID FFF6                                     _floor 54C4  
                                   _m_var 01B7                                     _frexp 5E9C  
           __size_of_MiApp_UnicastAddress 049A                                     _errno 015A  
                           ___ftpack@sign 0085                                     main@j 03ED  
                                   main@x 03EB                                     tablat 000FF5  
                __end_of_SYS_InterruptLow 00F6                 do_NETWORK_REGISTER@result 01FB  
                                   plusw0 000FEB                                     plusw2 000FDB  
                                   status 000FD8         __size_of_encode_ufixed16_variable 009C  
            encode_uint16_variable@buffer 0081       __end_of_MiApp_TransceiverPowerState 68B4  
             _MiApp_TransceiverPowerState 6878                 ?_encode_ufixed16_variable 0081  
                  __end_of_InitConfigRegs FF31                   MiApp_SearchConnection@i 02EE  
               __size_of_MiMAC_SetChannel 00BA                           __initialization 6248  
                         ??_isSameAddress 0085                               ?i2_TxPacket 001C  
                   _AddNodeToNetworkTable 508E                 __size_of_MiMAC_SendPacket 024A  
                            __end_of_main 3372                          __end_of_ReadI2C1 6A92  
                 __size_of_MiMAC_SetPower 003A           do_NETWORK_REGISTER@shortaddress 01F7  
                  __size_of_SendMACPacket 007C                            TxPacket@status 009F  
                  read_sensors@adc_result 01E1                           _FAILEDMSG_LABEL FFE3  
                           main@best_RSSI 03EA                                 ??_CBC_MAC 009F  
                        __end_of_ScanTime FF6D                           ??i2_RegisterSet 0016  
                        __end_of_OpenI2C1 6A3A                         _LIGHT_LEVEL_LABEL FFE7  
                               ??_CCM_Dec 00AB                                 ??_CCM_Enc 00AB  
                           ??_RegisterSet 0085                                    ??_main 03E5  
                           ___fttol@sign1 00AE                               ?_MiMAC_Init 0093  
                           __activetblptr 000003         MiApp_SearchConnection@channelMask 02E0  
                ??_MiApp_SearchConnection 01EC                      __end_of_MiWi_TickGet 641C  
                                  CTR@len 009A                                    CTR@key 009B  
                           _IRQ1_Received 0040                      _SearchForLongAddress 5794  
                 MiApp_SetChannel@channel 008B                          __end_of_TxPacket 3FAC  
                        __end_of_RtccWrOn 6B0A        __size_of_security_force_key_update 004E  
       MiApp_ProtocolInit@bNetworkFreezer 0098                      _MiMAC_ReceivedPacket 24DE  
                      __size_of_MiWiTasks 0BF2                           i2SetRFMode@mode 0018  
                 ??_encode_uint8_variable 008C                                    ?_floor 00BE  
                                  ?_frexp 0081                          __end_of___altoft 5D64  
                                  _EECON2 000FA7                   __end_of_update_variable 56B8  
             __end_of_do_NETWORK_REGISTER 4138                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 0081  
                        __end_of___ftpack 52B6                      _IncomingFrameCounter 0200  
                        __end_of___lltoft 61CC                                    i1l1220 00A8  
                                  i1l1222 00AE                                    i1l1219 00AC  
                                  _MACSeq 0041                            __CFG_WDTEN$OFF 000000  
                              _OpenSocket 5928                          __end_of___lwtoft 6A1A  
                                  _RTCCAL 000F3E                                    _RTCCFG 000F3F  
                                  _PVALUE FF6D                                    _RPINR1 000EE1  
                                  _SVALUE FF8D                                    _SPIGet 6B1C  
                                  _SPIPut 6A92                   i2RegisterSet@IRQ0select 0017  
               __size_of_MiMAC_PowerState 0076                  ??_send_periodical_update 01FD  
                 i2RegisterSet@IRQ1select 0016                  __end_of_TX_POWER_1_DB_MW FFC3  
                __end_of_TX_POWER_4_DB_MW FFC9                                TxPacket@t1 0094  
                              TxPacket@t2 0098                         _StaticSecurityKey FFEC  
                      __size_of_SetRFMode 008E                  __end_of_TX_POWER_7_DB_MW FFF7  
                          __CFG_XINST$OFF 000000                        _myUID_absconstaddr 01FFF6  
                                  _TxData 00D8                             _m_temperature 0155  
                                  ___ftge 5860                                    ___lmul 6334  
                               ??___awdiv 0085                      MiWiTasks@sourcePANID 01E3  
                               ??___ftadd 008F                                    _hasAck 0047  
                               ??___ftdiv 009C                                 ??___ftneg 00C9  
                               ??___lldiv 0089                                 ??___ftmul 01D3  
                               ??___fttol 00A9                 __size_of_MiApp_SetChannel 001E  
               __end_of_LIGHT_LEVEL_LABEL FFEB                                    _encode 3824  
                __end_of_TX_POWER_INVALID FFB6                             ?_read_sensors 0001  
                adapt_power_level@m_power 02F5                                    _memcpy 65BA  
                                  clear_0 624E                                    clear_1 625A  
                                  clear_2 6266                                    clear_3 6272  
                                  clear_4 627E                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0087                              _CCM_Dec$2093 00B1  
                 __end_of_decode_variable 5794                __p_StaticSecurityKey_const FFEC  
          __size_of_SearchForShortAddress 008C             __end_of_SearchForShortAddress 6046  
                                  _strcmp 6558                        decode_variable@var 0096  
                                  floor@i 00C1                                    floor@x 00BE  
                   ___ftmul@f3_as_product 01D7                     ?_SearchForLongAddress 0001  
                            __pdataCOMRAM 004A                              _CCM_Enc$2085 00AD  
                  process_update_answer@i 02FC                            _openSocketInfo 0120  
                            __mediumconst FEF0                     ?_MiMAC_ReceivedPacket 0001  
                  do_POWER_TEST@power_lvl 01F5                                    tblptrh 000FF7  
                                  tblptrl 000FF6                      _myMODEL_absconstaddr 01FFF4  
                                  tblptru 000FF8               ??_MiApp_EstablishConnection 01F6  
                               ?_DELAY_ms 008D                       __end_of_RegisterSet 67B2  
                   _process_update_answer 3C40                              ?_timer_reset 0001  
                           ?_RegisterRead 0001         __end_of_security_force_key_update 676C  
                     __size_ofi2_TxPacket 014E                         _ReceivedBankIndex 0045  
                           _SendMACPacket 61CC                         ??_InitSymbolTimer 0081  
                            ?i2_SetRFMode 0001      MiApp_UnicastAddress@MiWiFrameControl 02F0  
                       _SYSTEM_Initialize 4F70                        __size_of_WriteI2C1 0068  
                    _MiApp_DiscardMessage 6B26                                __accesstop 0060  
                      __size_of_WriteFIFO 0042                   __end_of__initialization 62B4  
                              ___altoft@c 00B4                  MiApp_SearchConnection@t1 02E4  
                MiApp_SearchConnection@t2 02E8                                ___ftadd@f1 0089  
                              ___ftadd@f2 008C                                ___ftge@ff1 0081  
                              ___ftge@ff2 0084                 __end_of_StaticSecurityKey FFF4  
         MiMAC_ReceivedPacket@currentTick 00BC                        ?_SYSTEM_Initialize 0001  
                     __size_of_MiMAC_Init 0142                             ___rparam_used 000001  
                              ___ftdiv@f1 0096                                ___ftdiv@f2 0099  
                              ___ftdiv@f3 00A0                  MIWIInterruptHandler@bAck 006D  
                       CCM_Enc@payloadLen 00A8                                ___ftneg@f1 00C6  
                  __size_of_do_POWER_TEST 0162                   __end_of_FAILEDMSG_LABEL FFE7  
                  ?_AddNodeToNetworkTable 0001                                ___ftmul@f1 00C9  
                              ___ftmul@f2 00CC            __size_of_send_writables_update 0104  
                      __size_of_do_UPDATE 0188              __end_of_findNextNetworkEntry 6878  
           __end_of_send_writables_update 54C4                                ___fttol@f1 00A5  
                   _ActiveScanResultIndex 00D6                            __pcstackCOMRAM 0001  
                       __end_of_MiWiTasks 0BF2                                 ?i2_SPIGet 0001  
                               ?i2_SPIPut 0001                              __pidataBANK1 6B3C  
                     ??_SYSTEM_Initialize 0081                                ___lltoft@c 008D  
                          ??_read_sensors 01DC                     i2RegisterRead@address 0017  
                           __end_of_myUID FFF8                             __end_of_floor 55C2  
                           __end_of_frexp 5F2C          MiMAC_ReceivedPacket@FrameCounter 00C0  
                               CTR@nounce 009D           MiApp_UnicastAddress@DestAddress 01E8  
                              ___lwtoft@c 0089                           TxPacket@rssival 00A2  
                             OpenSocket@i 00D0           __size_of_MiApp_SearchConnection 0202  
                         _ConnectionTable 0246                           __CFG_OSC$INTOSC 000000  
                        ??i2_RegisterRead 0014                         __end_of_SetRFMode 5FBA  
                            ?i2_WriteFIFO 0001                                ??_DELAY_ms 008F  
                          ??_RegisterRead 0083                   ?_encode_uint16_variable 0081  
                          ?_SendMACPacket 00BA                                   ??_floor 00C1  
                                 ??_frexp 0086                 __end_of_SYSTEM_Initialize 508E  
         MiApp_TransceiverPowerState@Mode 0095                 MiWiTasks@destShortAddress 01DE  
                        ?_update_variable 0001                     isSameAddress@Address1 0081  
                   isSameAddress@Address2 0083                                 ?_ReadI2C1 0001  
            __size_of_send_initial_update 081E                                __pbssBANK0 00D1  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                     ?_MiApp_DiscardMessage 0001  
                             ?_OpenSocket 0001               __size_of_MiApp_ProtocolInit 0126  
                                 ?_SPIGet 0001          adapt_power_level@last_good_power 02F4  
                                 CTR@text 0098                                 ?_OpenI2C1 0081  
                                 ?_SPIPut 0001                        RegisterSet@setting 0083  
                          isSameAddress@i 0087                       i2RegisterRead@value 0014  
         __size_of_send_periodical_update 0712                         _m_failed_messages 0142  
                        _MiMAC_SetChannel 5B62                                CBC_MAC@MIC 009D  
               _MiApp_EstablishConnection 2978                  MiMAC_SetAltAddress@PANID 0083  
                            CBC_MAC@block 00A2                                CBC_MAC@len 009A  
                              CBC_MAC@key 009B                                 ?_TxPacket 008B  
                               ?_RtccWrOn 0001                          _MiMAC_SendPacket 35DA  
                              ??i2_SPIGet 0014                                   ?___ftge 0081  
                          _MiMAC_SetPower 68B4                                ??i2_SPIPut 0012  
                                 ?___lmul 0081                              OpenI2C1@slew 0081  
                                 ?_encode 0081                     __size_of_MiWi_TickGet 0072  
                               ?___altoft 00B4                                   ?_memcpy 0081  
                                 _CBC_MAC 52B6                            ___lmul@product 0089  
                                 SPIPut@i 0081                                   SPIPut@v 0082  
                               ?___ftpack 0081                         __end_of_WriteI2C1 64F4  
                        ?_decode_variable 008B                                   _CCM_Dec 4580  
                                 _CCM_Enc 4BF6                                 ?___lltoft 008D  
                  ??_SearchForLongAddress 0081                         __end_of_WriteFIFO 6838  
                                 ?_strcmp 0081                               _RegisterSet 676C  
     MiApp_SearchConnection@backupChannel 02ED                                 ?___lwtoft 0089  
                                 i2l13310 46F0                    ??_MiMAC_ReceivedPacket 00B4  
                                 i2l13306 46DE                                   i2l12620 60E6  
                                 i2l13340 475E                                   i2l13332 474C  
                                 i2l12632 611C                                   i2l12624 60F8  
                                 i2l12616 60D4                                   i2l13360 47A2  
                                 i2l13344 4768                                   i2l13328 4734  
                                 i2l12562 6682                                   i2l13370 4810  
                                 i2l12628 610A                                   i2l13356 4796  
                                 i2l13372 4816                                   i2l13604 1C52  
                                 i2l12638 612E                                   i2l13366 4802  
                                 i2l13622 1C9C                                   i2l13710 2004  
                                 i2l12576 66AE                                   i2l13704 1FDA  
                                 i2l13560 1B70                                   i2l13552 1B52  
                                 i2l13642 1DEA                                   i2l13634 1DA8  
                                 i2l13618 1C8C                                   i2l13706 1FF2  
                                 i2l13714 2008                                   i2l13724 202A  
                                 i2l13652 1E22                                   i2l13628 1D22  
                                 i2l13636 1DAC                                   i2l13564 1B7E  
                                 i2l13548 1B48                                   i2l13708 2000  
                                 i2l13662 1E5A                                   i2l13646 1DF4  
                                 i2l13638 1DC4                                   i2l13574 1BA8  
                                 i2l13672 1E92                                   i2l13584 1BCA  
                                 i2l13690 1F48                                   i2l13674 1E98  
                                 i2l13666 1E64                                   i2l13684 1F26  
                                 i2l13596 1C06                                   i2l13588 1BDA  
                                 i2l13694 1F4E                                   i2l13678 1EA2  
                           _do_POWER_TEST 42C0                           MiWiTasks@cIndex 01D7  
          __end_of_encode_uint16_variable 5E00                    ?_process_update_answer 0001  
                   i2WriteFIFO@IRQ0select 0016                     i2WriteFIFO@IRQ1select 0015  
                       __end_of_do_UPDATE 42C0                                   _RPINR21 000EFC  
                                 _RPINR22 000EFD                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                                   _SSP2BUF 000F75  
        MIWIInterruptHandler@ackInfoIndex 006F                                do_UPDATE@i 01FA  
                                 _RF_Mode 0043                                   _AckInfo 0228  
                                 _RSSIVal 0044                                ??_ReadI2C1 0081  
            __size_of_MiMAC_SetAltAddress 0002               AddNodeToNetworkTable@handle 008A  
                       _adapt_power_level 64F4                         ?_SYS_InterruptLow 0001  
                         _timerExtension1 00DA                           _timerExtension2 0049  
                             TxPacket@CCA 008B                                ??_OpenI2C1 0082  
                MiApp_ConnectionMode@Mode 0082                           __size_of_SPIGet 000A  
                        _MiMAC_PowerState 62BE                           __size_of_SPIPut 001C  
             __end_of_MiMAC_DiscardPacket 6A76                    _MiApp_SearchConnection 3A3E  
                      ?_adapt_power_level 01FB                        ??_SYS_InterruptLow 0001  
                              DELAY_ms@ms 008D                       _AcknowledgementAddr 0158  
                            _MiWi_TickGet 63AA              __end_of_MIWIInterruptHandler 2044  
                  __end_of_MiMAC_SetPower 68EE                                   __Hparam 0000  
                                 __Lparam 0000              __end_of_MiApp_ConnectionMode 69F0  
                            ??i2_TxPacket 001D                                ??_TxPacket 008C  
                              ??_RtccWrOn 0081                                CCM_Dec@key 00A9  
            __end_of_MiApp_UnicastAddress 24DE                       do_POWER_TEST@result 01F4  
                   adapt_power_level@rssi 02F3                            main@scanresult 03EE  
                         __size_of___ftge 00C8                   __size_ofi2_MiWi_TickGet 0058  
                                 ___awdiv 59E8                           __size_of___lmul 0076  
                                 ___ftadd 3372                       ??_adapt_power_level 01FC  
                                 ___ftdiv 4824                     MIWIInterruptHandler@i 0072  
                              CCM_Enc@key 00A9                                   ___ftneg 6994  
                                 ___lldiv 5AA6                                   ___ftmul 4422  
                              _myAppState 016A                          _MiApp_SetChannel 6A3A  
                                 ___fttol 4970                           __size_of_encode 021A  
                              ??___altoft 00B8                           __CFG_STVREN$OFF 000000  
                   __CFG_RTCOSC$INTOSCREF 000000                            _tempNodeStatus 0048  
                 __size_of_wait_for_1_sec 0036                                   __pcinit 6248  
                         __size_of_memcpy 0062                                ??___ftpack 0086  
                                 __ramtop 0F00      __size_of_MiApp_TransceiverPowerState 003C  
               do_POWER_TEST@shortaddress 01F9                                ??___lltoft 0091  
                     __size_of_OpenSocket 00C0                      SendMACPacket@Address 00BA  
                                 __ptext0 30B4                                   __ptext1 1410  
                            ??_MiMAC_Init 0096                                   __ptext2 0BF2  
                                 __ptext3 54C4                                   __ptext4 5E9C  
                                 __ptext5 5860                                   __ptext6 3372  
                                 __ptext7 5CC6                                   __ptext8 5D64  
                                 __ptext9 5E00                                   _myPANID 00DB  
                                 _myMODEL FFF4                                ??___lwtoft 008C  
                            __size_of_CTR 0120                           __size_of_strcmp 0062  
                  _send_periodical_update 1410                            ?_do_POWER_TEST 0001  
                               _T1CONbits 000FCD                 process_update_answer@size 02FF  
                                 _m_power 0169                  ??_MiApp_MessageAvailable 00D0  
                           _myLongAddress 01C8                  _send_initial_update$5076 03D7  
                _send_initial_update$5077 03DA                  _send_initial_update$5078 03DD  
                _send_initial_update$5079 03E0                           ??_SendMACPacket 00BD  
                  RegisterRead@IRQ0select 0085                     MiApp_UnicastAddress@i 02F1  
                  RegisterRead@IRQ1select 0084                                   encode@i 0091  
                    _findNextNetworkEntry 6838                __size_of_SYSTEM_Initialize 011E  
                  ??_MiApp_DiscardMessage 0081                 __end_of_adapt_power_level 6558  
                          __pintcode_body 641C                        __end_ofi2_TxPacket 4824  
                    end_of_initialization 62B4                          _MiWiStateMachine 00D4  
          __size_of_encode_uint8_variable 008A                      __end_of_read_sensors 30B4  
           __end_of_encode_uint8_variable 60D0                      __size_of_timer_reset 001A  
                               i2SPIPut@i 0012                                 i2SPIPut@v 0013  
                                 memcpy@d 0087                                   memcpy@n 0085  
                                 memcpy@s 0089             MiMAC_SendPacket@MACPayloadLen 00B5  
           MIWIInterruptHandler@BankIndex 0071                                   int_func 641C  
                    __size_ofi2_SetRFMode 0080                   SendMACPacket@PacketType 00BC  
                               i2u1403_45 691A                                 i2u1403_46 691C  
                               i2u1404_45 6924                                 i2u1404_46 6926  
                               i2u1463_45 67E6                                 i2u1463_46 67E8  
                               i2u1464_45 67F0                                 i2u1464_46 67F2  
                               i2u1465_45 6986                                 i2u1465_46 6988  
                               i2u1466_45 6990                                 i2u1466_46 6992  
                         ___lldiv@divisor 0085                        __end_of_MiMAC_Init 4BF6  
                         ___lldiv@counter 008D                           ?_MiMAC_SetPower 0001  
             MIWIInterruptHandler@counter 0066               encode_uint8_variable@buffer 0081  
                 MiMAC_SetChannel@channel 008A                                   postdec1 000FE5  
                                 postdec2 000FDD                      __end_of_RegisterRead 6674  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                         _m_battery_voltage 0152  
                   __end_of_isSameAddress 671E      DELAY_ms@cyclesRequiredForEntireDelay 008F  
                     RegisterRead@address 0086                     MiWiTasks@CapacityByte 01E1  
                           WriteFIFO@Data 0083                                   strcmp@r 0086  
                              _timer_flag 016B                           _InitSymbolTimer 6AE2  
                   __end_ofi2_RegisterSet 6928            encode_ufixed16_variable@buffer 0081  
                               _TRISAbits 000F92                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                encode@text 0081  
                   ?_findNextNetworkEntry 0001                             _mySecurityKey 0136  
                 MiMAC_SendPacket@TxIndex 00B8             MIWIInterruptHandler@PacketLen 0070  
                    __size_ofi2_WriteFIFO 0036                  _encode_ufixed16_variable 5E00  
                       __size_of_DELAY_ms 00AA                                main@Status 03E9  
                       CCM_Dec@payloadLen 00A8                MiMAC_SendPacket@transParam 00B0  
                 ??_AddNodeToNetworkTable 0087                MiMAC_SetAltAddress@Address 0081  
                             ___ftdiv@exp 00A3                 MiApp_UnicastAddress@SecEn 01EB  
                          __end_of_PVALUE FF8D                            __end_of_SVALUE FFAD  
            __size_of_do_NETWORK_REGISTER 018C                            __end_of_SPIGet 6B26  
                              main@result 03E7                            __end_of_SPIPut 6AAE  
                         wait_for_1_sec@i 0082                    SearchForShortAddress@i 0083  
                             ___ftmul@exp 01D6         process_update_answer@shortaddress 02FD  
                          __end_of___ftge 5928                            __end_of___lmul 63AA  
                     _send_initial_update 0BF2                         __size_ofi2_SPIGet 000A  
                       __size_ofi2_SPIPut 001A                             __pidataCOMRAM 6B3A  
                               _MiWiTasks 0000                           ??_do_POWER_TEST 00D0  
                          __end_of_encode 3A3E        __size_of_MiApp_EstablishConnection 0436  
                          __end_of_memcpy 661C                                floor@expon 00C4  
                          __end_of_strcmp 65BA           __size_of_MiApp_MessageAvailable 0012  
        MiMAC_ReceivedPacket@PayloadIndex 00C6                  __end_of_MiMAC_SetChannel 5C1C  
                     start_initialization 6248                     _SearchForShortAddress 5FBA  
                             __end_of_CTR 4F70                      _MIWIInterruptHandler 1B22  
                     WriteFIFO@IRQ0select 0085                             TxPacket@reTry 009D  
                     WriteFIFO@IRQ1select 0084                  __end_of_MiMAC_SendPacket 3824  
                    _MiApp_ConnectionMode 69C4                        TxPacket@CCARetries 009C  
              i2TxPacket@allowedTxFailure 0030                      _MiApp_UnicastAddress 2044  
              __size_of_adapt_power_level 0064             MIWIInterruptHandler@ackPacket 0069  
                    ?_send_initial_update 0001                                 _SetRFMode 5F2C  
              ?_security_force_key_update 0001                              ??_OpenSocket 00D0  
                                CBC_MAC@i 00A4                                  CBC_MAC@j 00A3  
                              frexp@value 0081                                  ??_SPIGet 0083  
                       __size_of_ReadI2C1 001C                                  ??_SPIPut 0081  
                          _currentChannel 01D2                 encode_uint16_variable@var 0083  
                       __size_of_OpenI2C1 0020                                 TxPacket@i 00A1  
                                CCM_Dec@i 00B3                                  CCM_Enc@i 00AF  
                                ??___ftge 0087                   __end_of_InitSymbolTimer 6AF8  
                          i2_MiWi_TickGet 6674                                  ??___lmul 0089  
       MiApp_UnicastAddress@PermanentAddr 01EA                          _m_uptime_seconds 014A  
                   _send_writables_update 53C0                      do_NETWORK_REGISTER@i 01F9  
                                ??_encode 0085                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK1 01FE                         __size_of_TxPacket 01A2  
                       __size_of_RtccWrOn 0012                            _wait_for_1_sec 6928  
               send_periodical_update@tmp 03E3                       _MiMAC_SetAltAddress 6B3E  
                                ??_memcpy 0087                                  ?_CBC_MAC 0098  
                              ?_MiWiTasks 0001                                  ?_CCM_Dec 00A5  
                                ?_CCM_Enc 00A5                              ?_RegisterSet 0083  
                 ??_process_update_answer 02F3                                  ??_strcmp 0085  
                      __end_of_OpenSocket 59E8                         __size_of___altoft 009E  
           MIWIInterruptHandler@fifo_stat 0068                  __end_of_MiMAC_PowerState 6334  
                             _ALRMCFGbits 000F47                         RegisterRead@value 0083  
                       __size_of___ftpack 010C        MiApp_SearchConnection@ScanDuration 02EC  
                 MiWi_TickGet@currentTime 0087                         __size_of___lltoft 007C  
                             __pbssCOMRAM 0034                    ??_findNextNetworkEntry 0081  
                               _WriteI2C1 648C                     ?_MIWIInterruptHandler 0001  
                       __size_of___lwtoft 002A                     __size_of_read_sensors 0306  
                               _WriteFIFO 67F6                             __pcstackBANK0 0060  
                           __pcstackBANK1 01D3                             __pcstackBANK2 02E0  
                           __pcstackBANK3 03D4                     ?_MiApp_ConnectionMode 0001  
                                CTR@block 00A2                               _defaultHops 004A  
                   ?_MiApp_UnicastAddress 01E8                __end_of_MiApp_ProtocolInit 4E50  
                   ??_send_initial_update 01FD                MiApp_EstablishConnection@i 02FD  
                       _consecutive_fails 0166                  __end_of_MiApp_SetChannel 6A58  
                              ?_SetRFMode 0001                __end_of_TX_POWER_N_2_DB_MW FFCF  
                    ?_MiMAC_SetAltAddress 0081                   ?_MiApp_SearchConnection 01E8  
                        __p_myMODEL_const FFF4                                 _do_UPDATE 4138  
              __end_of_TX_POWER_N_5_DB_MW FFD5                               MiMAC_Init@i 0096  
              __end_of_TX_POWER_N_8_DB_MW FFBD                     __size_of_RegisterRead 0058  
                  _MiApp_MessageAvailable 6B0A              ?_MiApp_TransceiverPowerState 0001  
                __size_of_update_variable 00F6                    __end_ofi2_MiWi_TickGet 66CC  
                       MiMAC_SendPacket@i 00B9                          _MiWiCapacityInfo 0164  
                             CBC_MAC@text 0098                                 __pintcode 0008  
                  __end_of_wait_for_1_sec 695E                             __pmediumconst FEF0  
                                ?___awdiv 0081                                  ?___ftadd 0089  
               MiMAC_SendPacket@headerLen 00B7                                  ?___ftdiv 0096  
                                ?___ftneg 00C6                                  ?___lldiv 0081  
                                ?___ftmul 00C9                                  ?___fttol 00A5  
             MiApp_UnicastAddress@t1_2763 02E8               MiApp_UnicastAddress@t2_2774 02EC  
                 ?_send_periodical_update 0001                               __pintcodelo 0018  
                            _read_sensors 2DAE                 __size_of_SYS_InterruptLow 00DE  
              security_force_key_update@i 0081                    ?_SearchForShortAddress 0001  
           __size_of_SearchForLongAddress 00CC                                ?_WriteI2C1 0001  
                              ?_WriteFIFO 0001                        _AcknowledgementSeq 01FE  
           __size_of_MiMAC_ReceivedPacket 049A                                  _DELAY_ms 5C1C  
                        CCM_Dec@headerLen 00A7                     do_UPDATE@shortaddress 01F8  
             MiWiTasks@sourceShortAddress 01E5                  __size_of_decode_variable 00DC  
                               _last_rssi 0167            __end_of_MiApp_SearchConnection 3C40  
                          __size_of_floor 00FE                            __size_of_frexp 0090  
                            _RegisterRead 661C             __end_of_BATTERY_VOLTAGE_LABEL FFE3  
                   ??_MiMAC_SetAltAddress 0085                                ?_do_UPDATE 01F4  
               MiMAC_SetPower@outputPower 0089                          ??_MiMAC_SetPower 0087  
             encode_ufixed16_variable@var 0083                    _UPDATE_FREQUENCY_LABEL FFF7  
                 __size_ofi2_RegisterRead 0044                                  _LATAbits 000F89  
                                _LATBbits 000F8A                      i2RegisterSet@setting 0014  
                                _LATCbits 000F8B                                 _tempPANID 015E  
                                _PIE1bits 000F9D                                  _IPR3bits 000FA5  
                                _PIE3bits 000FA3                           ?i2_MiWi_TickGet 0012  
                                _PIR1bits 000F9E                                  _PIR3bits 000FA4  
           ??_MiApp_TransceiverPowerState 0095                                 _rxMessage 012C  
                                _RCONbits 000FD0                                  i2_SPIGet 6B30  
                  ?_send_writables_update 0001                                  i2_SPIPut 6AC8  
                         ?_wait_for_1_sec 0001                          ?_InitSymbolTimer 0001  
          __end_of_send_periodical_update 1B22                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                                  _SSP2CON1 000F72  
                encode_uint8_variable@var 0083                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
            __size_of_MiMAC_DiscardPacket 001E           MIWIInterruptHandler@RxPacketPtr 006E  
       process_update_answer@ack_required 02FB  MiApp_EstablishConnection@ActiveScanIndex 02FC  
                             ??_MiWiTasks 00C8                               _MACRxPacket 0034  
                               encode@key 0083                                 encode@sum 0096  
                                _RSSILock 0165                               _MACTxBuffer 02A0  
                           SetRFMode@mode 0087                          __size_of_CBC_MAC 010A  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                         _m_sent_messages 0146                          MiWiTasks@rxIndex 01E0  
                        __size_of_CCM_Dec 0156                          __size_of_CCM_Enc 0134  
              ??_encode_ufixed16_variable 008C                    ??_MIWIInterruptHandler 0060  
                       _SYS_InterruptHigh 0008                       _do_NETWORK_REGISTER 3FAC  
                do_NETWORK_REGISTER@p_uid 01F4                     i2TxPacket@TxPacketLen 0031  
                  ??_MiApp_ConnectionMode 0081                         __CFG_CFGPLLEN$OFF 000000  
                    _OutgoingFrameCounter 013E                    ??_MiApp_UnicastAddress 01EC  
                      ?_SYS_InterruptHigh 0001                           _MiWiAckRequired 0042  
                           ??_timer_reset 0081                     __end_of_SendMACPacket 6248  
                                _ConnMode 003F                      __end_of_UPTIME_LABEL FFFF  
                       ___lmul@multiplier 0081                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0            MiApp_EstablishConnection@retry 02FB  
                           ??i2_SetRFMode 0018        do_NETWORK_REGISTER@sleeping_device 01F6  
                             ??_SetRFMode 0087                                  _ReadI2C1 6A76  
                   SearchForLongAddress@i 0086                     SearchForLongAddress@j 0085  
           __size_of_MiApp_DiscardMessage 000A                                _ADRESHbits 000FC4  
                     ??_SYS_InterruptHigh 0073                                _ADRESLbits 000FC3  
                                _TxMACSeq 0046                                  _ScanTime FF31  
                                _OpenI2C1 6A1A                     _encode_uint8_variable 6046  
                               frexp@eptr 0084                      ?_do_NETWORK_REGISTER 01F4  
          __size_of_AddNodeToNetworkTable 011C             __end_of_AddNodeToNetworkTable 51AA  
                              _ANCON0bits 000F48                                _ANCON1bits 000F49  
                                __Hrparam 0000                                  _RxPacket 0350  
                                _TxBuffer 016C                                  __Lrparam 0000  
                                _TxPacket 3E0A                                  _RtccWrOn 6AF8  
                             CCM_Dec@text 00A5                    adapt_power_level@power 0001  
                   MiMAC_ReceivedPacket@i 00C7                     MiMAC_ReceivedPacket@j 00C5  
                   MiMAC_ReceivedPacket@k 00C4                       __end_of_POWER_LABEL FFEF  
                      main@best_candidate 03E8                          __size_of___awdiv 00BE  
                        __size_of___ftadd 0268                          __size_of___ftdiv 014C  
                        __size_of___ftneg 0030                          __size_of___lldiv 00BC  
                                ___altoft 5CC6                          __size_of___ftmul 015E  
                       ??_update_variable 008A                          __size_of___fttol 0144  
                         _tempLongAddress 014E                  ??_encode_uint16_variable 008C  
              send_periodical_update@tmp2 03D4                                  ___ftpack 51AA  
                             CCM_Enc@text 00A5                 __end_of_SYS_InterruptHigh 648C  
                                ___lltoft 6150                  i2RegisterRead@IRQ0select 0016  
                                ___lwtoft 69F0                  i2RegisterRead@IRQ1select 0015  
                  AddNodeToNetworkTable@i 0089                               ??_WriteI2C1 0081  
                    __size_of_RegisterSet 0046                             ??i2_WriteFIFO 0014  
                             ??_WriteFIFO 0083                         ?_MiMAC_SetChannel 0088  
                                __ptext10 6150                                  __ptext11 5AA6  
                                __ptext20 648C                                  __ptext12 6994  
                                __ptext21 6A76                                  __ptext13 671E  
                                __ptext30 4138                                  __ptext22 6A1A  
                                __ptext14 2DAE                                  __ptext31 56B8  
                                __ptext23 3C40                                  __ptext15 69F0  
                                __ptext40 6AF8                                  __ptext32 6878  
                                __ptext24 6928                                  __ptext16 4970  
                                __ptext41 4D2A                                  __ptext33 62BE  
                                __ptext25 55C2                                  __ptext17 4422  
                                __ptext50 61CC                                  __ptext42 4AB4  
                                __ptext34 3FAC                                  __ptext26 6558  
                                __ptext18 4824                                  __ptext51 6A3A  
                                __ptext43 5C1C                                  __ptext35 65BA  
                                __ptext27 6AAE                                  __ptext19 51AA  
                                __ptext60 676C                                  __ptext52 5B62  
                                __ptext44 6334                                  __ptext36 64F4  
                                __ptext28 53C0                                  __ptext61 661C  
                                __ptext53 6B0A                                  __ptext45 6AE2  
                                __ptext37 42C0                                  __ptext29 6046  
                                __ptext70 52B6                                  __ptext62 6B1C  
                                __ptext54 0000                                  __ptext46 2978  
                                __ptext38 68B4                                  __ptext71 3824  
                                __ptext63 6A92                                  __ptext55 6B3E  
                                __ptext47 5928                                  __ptext39 4F70  
                                __ptext72 59E8                                  __ptext64 4BF6  
                                __ptext56 35DA                                  __ptext48 2044  
                                __ptext73 508E                                  __ptext65 24DE  
                                __ptext57 3E0A                                  __ptext49 3A3E  
                                __ptext90 6674                                  __ptext82 1B22  
                                __ptext74 6838                                  __ptext66 66CC  
                                __ptext58 67F6                                  __ptext83 46D6  
                                __ptext75 5FBA                                  __ptext67 63AA  
                                __ptext59 5F2C                                  __ptext84 695E  
                                __ptext76 5794                                  __ptext68 4580  
                                __ptext85 60D0                                  __ptext77 6B26  
                                __ptext69 4E50                                  __ptext86 68EE  
                                __ptext78 6A58                                  __ptext87 67B2  
                                __ptext79 69C4                                  __ptext88 6B30  
                                __ptext89 6AC8                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                  TxPacket@allowedTxFailure 009E  
                      ??_MiMAC_SetChannel 0089                         ?_MiMAC_SendPacket 00B0  
                            _SSP2CON1bits 000F72                                  _m_buffer 0197  
                             ??_do_UPDATE 00D0               ??_security_force_key_update 0081  
                  __size_of_isSameAddress 0052                        ??_MiMAC_SendPacket 00B6  
                                _p_buffer 015C                         do_POWER_TEST@rssi 01F8  
                           __size_of_main 02BE                       __end_of_timer_reset 6AC8  
                       ??_decode_variable 0094                     ??_do_NETWORK_REGISTER 00D0  
                                _myParent 00D9                    __size_ofi2_RegisterSet 003A  
                       _TEMPERATURE_LABEL FFEF                       __end_ofi2_SetRFMode 6150  
                       WriteI2C1@data_out 0082                    MiApp_UnicastAddress@t1 02E0  
                  MiApp_UnicastAddress@t2 02E4                                  _tmpBlock 01CC  
                        _tempShortAddress 01D0                                  int$flags 004C  
             MiApp_EstablishConnection@t1 02F3               MiApp_EstablishConnection@t2 02F7  
                       _TX_POWER_10_DB_MW FFD5              i2MiWi_TickGet@failureCounter 0017  
             process_update_answer@result 02FA                         MiMAC_PowerState@i 0094  
                       _TX_POWER_13_DB_MW FFDA                          _SYS_InterruptLow 0018  
                            _SSP1STATbits 000FC7                         read_sensors@value 01E3  
              MiMAC_SendPacket@MACPayload 00B3                         OpenI2C1@sync_mode 0082  
                   __end_of_do_POWER_TEST 4422                     findNextNetworkEntry@i 0081  
                       ?_MiMAC_PowerState 0001            __size_of_process_update_answer 01CA  
                              _INTCONbits 000FF2                           do_UPDATE@F10230 0162  
           __end_of_process_update_answer 3E0A                                  memcpy@d1 0081  
                         i2WriteFIFO@Data 0014                                  memcpy@s1 0083  
                      ??_MiMAC_PowerState 0093                     do_UPDATE@ack_required 01F7  
                                intlevel1 0000                                  intlevel2 0000  
                       ?_MiApp_SetChannel 0001                   ?_MiApp_MessageAvailable 0001  
                     __end_ofi2_WriteFIFO 6994                    ?_encode_uint8_variable 0081  
                          i2_RegisterRead 67B2                 __end_of_TEMPERATURE_LABEL FFF3  
                        ___lldiv@dividend 0081                        ??_MiApp_SetChannel 008B  
                           ?_MiWi_TickGet 0081                               _POWER_LABEL FFEB  
                              _OSCCONbits 000FD3                        _m_update_frequency 01FF  
                      _MiApp_ProtocolInit 4D2A                 __end_of_TX_POWER_10_DB_MW FFDA  
                             _RTCVALHbits 000F3B                               _RTCVALLbits 000F3A  
               __end_of_TX_POWER_13_DB_MW FFDF                        _TX_POWER_N_2_DB_MW FFC9  
                           _MACInitParams 003C                       MiMAC_Init@initValue 0093  
                      _TX_POWER_N_5_DB_MW FFCF                           do_UPDATE@p_buff 01F4  
                      _TX_POWER_N_8_DB_MW FFB6                 _security_force_key_update 671E  
                           _isSameAddress 66CC                   ??_SearchForShortAddress 0081  
                         do_UPDATE@result 01FC                       ?_MiApp_ProtocolInit 0001  
              MiWi_TickGet@failureCounter 0086           __size_of_encode_uint16_variable 009C  
              __size_of_SYS_InterruptHigh 6484                                _RTCCFGbits 000F3F  
        __end_of_encode_ufixed16_variable 5E9C                            __p_myUID_const FFF6  
                        _BroadcastRecords 0100                        MiWiTasks@destPANID 01DC  
                        _TX_POWER_1_DB_MW FFBD                             i2_RegisterSet 68EE  
                                strcmp@s1 0081                                  strcmp@s2 0083  
                              _PPSCONbits 000EBF                          _TX_POWER_4_DB_MW FFC3  
             __end_of_send_initial_update 1410                          ___lldiv@quotient 0089  
                             MiWiTasks@t1 01D8                               MiWiTasks@t2 01D3  
                       i2TxPacket@rssival 0033                       TxPacket@TxPacketLen 00A0  
                        _TX_POWER_7_DB_MW FFF3                ?_MiApp_EstablishConnection 01F5  
                             _timer_count 004B                      i2TxPacket@CCARetries 002E  
           __size_of_findNextNetworkEntry 0040                               _timer_reset 6AAE  
          __end_of_MiApp_MessageAvailable 6B1C                    __end_ofi2_RegisterRead 67F6  
                        _TX_POWER_INVALID FFAD                       _MiMAC_DiscardPacket 6A58  
                             i2_SetRFMode 60D0                                MiWiTasks@i 01E7  
                              MiWiTasks@j 01E2                      ??_MiApp_ProtocolInit 0097  
                        i2TxPacket@status 002D                            do_POWER_TEST@i 01F6  
                        ??i2_MiWi_TickGet 0016                            read_sensors@t0 01DF  
                          read_sensors@t1 01E0                           i2TxPacket@reTry 002F  
                           do_UPDATE@size 01F6                            ??_MiWi_TickGet 0085  
            __end_of_SearchForLongAddress 5860                          ??_wait_for_1_sec 0081  
                           i2TxPacket@CCA 001C            _StaticSecurityKey_absconstaddr 01FFEC  
               i2MiWi_TickGet@currentTime 0018                   ??_send_writables_update 01FD  
                             encode@delta 008F                     RegisterSet@IRQ0select 0086  
                   RegisterSet@IRQ1select 0085              __end_of_MiMAC_ReceivedPacket 2978  
                            i2TxPacket@t1 0025                              i2TxPacket@t2 0029  
                             encode@part1 0092                               encode@part2 0094  
                             i2TxPacket@i 0032  
