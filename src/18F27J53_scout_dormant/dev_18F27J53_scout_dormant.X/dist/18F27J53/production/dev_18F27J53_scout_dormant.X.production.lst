

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Aug  4 13:19:34 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	_StaticSecurityKey_const,global,ovrld,reloc=2,class=CODE,delta=1
     9                           	psect	_myMODEL_const,global,ovrld,reloc=2,class=CODE,delta=1
    10                           	psect	_myUID_const,global,ovrld,reloc=2,class=CODE,delta=1
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   117                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   118                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   119  0000                     
   120                           	psect	idataCOMRAM
   121  008C3E                     __pidataCOMRAM:
   122                           	opt stack 0
   123                           
   124                           ;initializer for _defaultHops
   125  008C3E  04                 	db	4
   126                           
   127                           ;initializer for _timer_count
   128  008C3F  01                 	db	1
   129                           
   130                           	psect	idataBANK1
   131  008C40                     __pidataBANK1:
   132                           	opt stack 0
   133                           
   134                           ;initializer for _AcknowledgementSeq
   135  008C40  FF                 	db	255
   136                           
   137                           ;initializer for _m_update_frequency
   138  008C41  01                 	db	1
   139                           
   140                           	psect	mediumconst
   141  001FF4                     __pmediumconst:
   142                           	opt stack 0
   143  001FF4  00                 	db	0
   144  001FF5                     _InitConfigRegs:
   145                           	opt stack 0
   146  001FF5  0036               	dw	54
   147  001FF7  0284               	dw	644
   148  001FF9  0409               	dw	1033
   149  001FFB  0609               	dw	1545
   150  001FFD  080C               	dw	2060
   151  001FFF  0AC1               	dw	2753
   152  002001  0C7D               	dw	3197
   153  002003  0E64               	dw	3684
   154  002005  1014               	dw	4116
   155  002007  1200               	dw	4608
   156  002009  1400               	dw	5120
   157  00200B  1600               	dw	5632
   158  00200D  1838               	dw	6200
   159  00200F  1AC8               	dw	6856
   160  002011  1C0D               	dw	7181
   161  002013  1E00               	dw	7680
   162  002015  2072               	dw	8306
   163  002017  2238               	dw	8760
   164  002019  2438               	dw	9272
   165  00201B  2607               	dw	9735
   166  00201D  2800               	dw	10240
   167  00201F  2A00               	dw	10752
   168  002021  2C69               	dw	11369
   169  002023  2E81               	dw	11905
   170  002025  307E               	dw	12414
   171  002027  3296               	dw	12950
   172  002029  34F8               	dw	13560
   173  00202B  3688               	dw	13960
   174  00202D  3840               	dw	14400
   175  00202F  3A00               	dw	14848
   176  002031  3CE8               	dw	15592
   177  002033  3E00               	dw	15872
   178  002035                     __end_of_InitConfigRegs:
   179                           	opt stack 0
   180  002035                     _ScanTime:
   181                           	opt stack 0
   182  002035  03C0               	dw	960
   183  002037  0000               	dw	0
   184  002039  05A0               	dw	1440
   185  00203B  0000               	dw	0
   186  00203D  0960               	dw	2400
   187  00203F  0000               	dw	0
   188  002041  10E0               	dw	4320
   189  002043  0000               	dw	0
   190  002045  1FE0               	dw	8160
   191  002047  0000               	dw	0
   192  002049  3DE0               	dw	15840
   193  00204B  0000               	dw	0
   194  00204D  79E0               	dw	31200
   195  00204F  0000               	dw	0
   196  002051  F1E0               	dw	61920
   197  002053  0000               	dw	0
   198  002055  E1E0               	dw	57824
   199  002057  0001               	dw	1
   200  002059  C1E0               	dw	49632
   201  00205B  0003               	dw	3
   202  00205D  81E0               	dw	33248
   203  00205F  0007               	dw	7
   204  002061  01E0               	dw	480
   205  002063  000F               	dw	15
   206  002065  01E0               	dw	480
   207  002067  001E               	dw	30
   208  002069  3D44               	dw	15684
   209  00206B  001B               	dw	27
   210  00206D  B40D               	dw	46093
   211  00206F  0015               	dw	21
   212  002071                     __end_of_ScanTime:
   213                           	opt stack 0
   214  002071                     _PVALUE:
   215                           	opt stack 0
   216  002071  4F                 	db	79
   217  002072  4F                 	db	79
   218  002073  4F                 	db	79
   219  002074  4F                 	db	79
   220  002075  4F                 	db	79
   221  002076  4F                 	db	79
   222  002077  4F                 	db	79
   223  002078  4F                 	db	79
   224  002079  4F                 	db	79
   225  00207A  4F                 	db	79
   226  00207B  4F                 	db	79
   227  00207C  4F                 	db	79
   228  00207D  4F                 	db	79
   229  00207E  4F                 	db	79
   230  00207F  4F                 	db	79
   231  002080  4F                 	db	79
   232  002081  4F                 	db	79
   233  002082  4F                 	db	79
   234  002083  4F                 	db	79
   235  002084  4F                 	db	79
   236  002085  4F                 	db	79
   237  002086  4F                 	db	79
   238  002087  50                 	db	80
   239  002088  50                 	db	80
   240  002089  50                 	db	80
   241  00208A  50                 	db	80
   242  00208B  50                 	db	80
   243  00208C  50                 	db	80
   244  00208D  50                 	db	80
   245  00208E  50                 	db	80
   246  00208F  50                 	db	80
   247  002090  50                 	db	80
   248  002091                     __end_of_PVALUE:
   249                           	opt stack 0
   250  002091                     _SVALUE:
   251                           	opt stack 0
   252  002091  22                 	db	34
   253  002092  24                 	db	36
   254  002093  26                 	db	38
   255  002094  28                 	db	40
   256  002095  2A                 	db	42
   257  002096  2C                 	db	44
   258  002097  2E                 	db	46
   259  002098  30                 	db	48
   260  002099  32                 	db	50
   261  00209A  34                 	db	52
   262  00209B  37                 	db	55
   263  00209C  39                 	db	57
   264  00209D  3B                 	db	59
   265  00209E  3D                 	db	61
   266  00209F  3F                 	db	63
   267  0020A0  41                 	db	65
   268  0020A1  43                 	db	67
   269  0020A2  45                 	db	69
   270  0020A3  47                 	db	71
   271  0020A4  4A                 	db	74
   272  0020A5  4C                 	db	76
   273  0020A6  4E                 	db	78
   274  0020A7  05                 	db	5
   275  0020A8  07                 	db	7
   276  0020A9  09                 	db	9
   277  0020AA  0B                 	db	11
   278  0020AB  0D                 	db	13
   279  0020AC  0F                 	db	15
   280  0020AD  11                 	db	17
   281  0020AE  14                 	db	20
   282  0020AF  16                 	db	22
   283  0020B0  18                 	db	24
   284  0020B1                     __end_of_SVALUE:
   285                           	opt stack 0
   286  0000                     _StaticSecurityKey_absconstaddr	set	8172
   287  0000                     _myMODEL_absconstaddr	set	131060
   288  0000                     _myUID_absconstaddr	set	131062
   289  0020B1  69                 	db	105
   290  0020B2  6E                 	db	110
   291  0020B3  76                 	db	118
   292  0020B4  61                 	db	97
   293  0020B5  6C                 	db	108
   294  0020B6  69                 	db	105
   295  0020B7  64                 	db	100
   296  0020B8  21                 	db	33
   297  0020B9  00                 	db	0
   298  0020BA                     __end_of_TX_POWER_INVALID:
   299                           	opt stack 0
   300  0020BA  30                 	db	48
   301  0020BB  2E                 	db	46
   302  0020BC  31                 	db	49
   303  0020BD  35                 	db	53
   304  0020BE  6D                 	db	109
   305  0020BF  57                 	db	87
   306  0020C0  00                 	db	0
   307  0020C1                     __end_of_TX_POWER_N_8_DB_MW:
   308                           	opt stack 0
   309  0020C1  31                 	db	49
   310  0020C2  2E                 	db	46
   311  0020C3  32                 	db	50
   312  0020C4  6D                 	db	109
   313  0020C5  57                 	db	87
   314  0020C6  00                 	db	0
   315  0020C7                     __end_of_TX_POWER_1_DB_MW:
   316                           	opt stack 0
   317  0020C7  32                 	db	50
   318  0020C8  2E                 	db	46
   319  0020C9  35                 	db	53
   320  0020CA  6D                 	db	109
   321  0020CB  57                 	db	87
   322  0020CC  00                 	db	0
   323  0020CD                     __end_of_TX_POWER_4_DB_MW:
   324                           	opt stack 0
   325  0020CD  30                 	db	48
   326  0020CE  2E                 	db	46
   327  0020CF  36                 	db	54
   328  0020D0  6D                 	db	109
   329  0020D1  57                 	db	87
   330  0020D2  00                 	db	0
   331  0020D3                     __end_of_TX_POWER_N_2_DB_MW:
   332                           	opt stack 0
   333  0020D3  30                 	db	48
   334  0020D4  2E                 	db	46
   335  0020D5  33                 	db	51
   336  0020D6  6D                 	db	109
   337  0020D7  57                 	db	87
   338  0020D8  00                 	db	0
   339  0020D9                     __end_of_TX_POWER_N_5_DB_MW:
   340                           	opt stack 0
   341  0020D9  31                 	db	49
   342  0020DA  30                 	db	48
   343  0020DB  6D                 	db	109
   344  0020DC  57                 	db	87
   345  0020DD  00                 	db	0
   346  0020DE                     __end_of_TX_POWER_10_DB_MW:
   347                           	opt stack 0
   348  0020DE  32                 	db	50
   349  0020DF  30                 	db	48
   350  0020E0  6D                 	db	109
   351  0020E1  57                 	db	87
   352  0020E2  00                 	db	0
   353  0020E3                     __end_of_TX_POWER_13_DB_MW:
   354                           	opt stack 0
   355  0020E3                     _BATTERY_VOLTAGE_LABEL:
   356                           	opt stack 0
   357  0020E3  56                 	db	86
   358  0020E4  42                 	db	66
   359  0020E5  61                 	db	97
   360  0020E6  00                 	db	0
   361  0020E7                     __end_of_BATTERY_VOLTAGE_LABEL:
   362                           	opt stack 0
   363  0020E7                     _FAILEDMSG_LABEL:
   364                           	opt stack 0
   365  0020E7  46                 	db	70
   366  0020E8  6C                 	db	108
   367  0020E9  4D                 	db	77
   368  0020EA  00                 	db	0
   369  0020EB                     __end_of_FAILEDMSG_LABEL:
   370                           	opt stack 0
   371  0020EB                     _LIGHT_LEVEL_LABEL:
   372                           	opt stack 0
   373  0020EB  4C                 	db	76
   374  0020EC  69                 	db	105
   375  0020ED  74                 	db	116
   376  0020EE  00                 	db	0
   377  0020EF                     __end_of_LIGHT_LEVEL_LABEL:
   378                           	opt stack 0
   379  0020EF                     _POWER_LABEL:
   380                           	opt stack 0
   381  0020EF  50                 	db	80
   382  0020F0  77                 	db	119
   383  0020F1  72                 	db	114
   384  0020F2  00                 	db	0
   385  0020F3                     __end_of_POWER_LABEL:
   386                           	opt stack 0
   387  0020F3                     _TEMPERATURE_LABEL:
   388                           	opt stack 0
   389  0020F3  54                 	db	84
   390  0020F4  6D                 	db	109
   391  0020F5  70                 	db	112
   392  0020F6  00                 	db	0
   393  0020F7                     __end_of_TEMPERATURE_LABEL:
   394                           	opt stack 0
   395  0020F7  35                 	db	53
   396  0020F8  6D                 	db	109
   397  0020F9  57                 	db	87
   398  0020FA  00                 	db	0
   399  0020FB                     __end_of_TX_POWER_7_DB_MW:
   400                           	opt stack 0
   401  0020FB                     _UPDATE_FREQUENCY_LABEL:
   402                           	opt stack 0
   403  0020FB  55                 	db	85
   404  0020FC  70                 	db	112
   405  0020FD  46                 	db	70
   406  0020FE  00                 	db	0
   407  0020FF                     __end_of_UPDATE_FREQUENCY_LABEL:
   408                           	opt stack 0
   409  0020FF                     _UPTIME_LABEL:
   410                           	opt stack 0
   411  0020FF  55                 	db	85
   412  002100  70                 	db	112
   413  002101  74                 	db	116
   414  002102  00                 	db	0
   415  002103                     __end_of_UPTIME_LABEL:
   416                           	opt stack 0
   417  0000                     _StaticSecurityKey_absconstaddr	set	8172
   418  002103  00                 	db	0	; dummy byte at the end
   419  0000                     
   420                           	psect	_StaticSecurityKey_const
   421  001FEC                     __p_StaticSecurityKey_const:
   422                           	opt stack 0
   423  001FEC                     _StaticSecurityKey:
   424                           	opt stack 0
   425  001FEC  00                 	db	0
   426  001FED  01                 	db	1
   427  001FEE  02                 	db	2
   428  001FEF  03                 	db	3
   429  001FF0  04                 	db	4
   430  001FF1  05                 	db	5
   431  001FF2  06                 	db	6
   432  001FF3  07                 	db	7
   433  001FF4                     __end_of_StaticSecurityKey:
   434                           	opt stack 0
   435  0000                     _myMODEL_absconstaddr	set	131060
   436                           
   437                           	psect	_myMODEL_const
   438  01FFF4                     __p_myMODEL_const:
   439                           	opt stack 0
   440  01FFF4                     _myMODEL:
   441                           	opt stack 0
   442  01FFF4  01                 	db	1
   443  01FFF5  02                 	db	2
   444  01FFF6                     __end_of_myMODEL:
   445                           	opt stack 0
   446  0000                     _myUID_absconstaddr	set	131062
   447                           
   448                           	psect	_myUID_const
   449  01FFF6                     __p_myUID_const:
   450                           	opt stack 0
   451  01FFF6                     _myUID:
   452                           	opt stack 0
   453  01FFF6  FF                 	db	255
   454  01FFF7  04                 	db	4
   455  01FFF8                     __end_of_myUID:
   456                           	opt stack 0
   457  0000                     _PPSCONbits	set	3775
   458  0000                     _RPINR1	set	3809
   459  0000                     _RPINR21	set	3836
   460  0000                     _RPINR22	set	3837
   461  0000                     _RPOR4	set	3780
   462  0000                     _RPOR5	set	3781
   463  0000                     _ALRMCFGbits	set	3911
   464  0000                     _ANCON0	set	3912
   465  0000                     _ANCON0bits	set	3912
   466  0000                     _ANCON1	set	3913
   467  0000                     _ANCON1bits	set	3913
   468  0000                     _RTCCAL	set	3902
   469  0000                     _RTCCFG	set	3903
   470  0000                     _RTCCFGbits	set	3903
   471  0000                     _RTCVALHbits	set	3899
   472  0000                     _RTCVALLbits	set	3898
   473  0000                     _UPUEN	set	31180
   474  0000                     _ADCON0bits	set	4034
   475  0000                     _ADCON1bits	set	4033
   476  0000                     _ADRESHbits	set	4036
   477  0000                     _ADRESLbits	set	4035
   478  0000                     _EECON2	set	4007
   479  0000                     _INTCON2bits	set	4081
   480  0000                     _INTCON3bits	set	4080
   481  0000                     _INTCONbits	set	4082
   482  0000                     _IPR3bits	set	4005
   483  0000                     _LATAbits	set	3977
   484  0000                     _LATBbits	set	3978
   485  0000                     _LATCbits	set	3979
   486  0000                     _OSCCONbits	set	4051
   487  0000                     _PIE1bits	set	3997
   488  0000                     _PIE3bits	set	4003
   489  0000                     _PIR1bits	set	3998
   490  0000                     _PIR3bits	set	4004
   491  0000                     _RCONbits	set	4048
   492  0000                     _SSP1ADD	set	4040
   493  0000                     _SSP1BUF	set	4041
   494  0000                     _SSP1CON1	set	4038
   495  0000                     _SSP1CON1bits	set	4038
   496  0000                     _SSP1CON2	set	4037
   497  0000                     _SSP1CON2bits	set	4037
   498  0000                     _SSP1STAT	set	4039
   499  0000                     _SSP1STATbits	set	4039
   500  0000                     _SSP2BUF	set	3957
   501  0000                     _SSP2CON1	set	3954
   502  0000                     _SSP2CON1bits	set	3954
   503  0000                     _SSP2STAT	set	3955
   504  0000                     _T1CON	set	4045
   505  0000                     _T1CONbits	set	4045
   506  0000                     _TMR1H	set	4047
   507  0000                     _TMR1L	set	4046
   508  0000                     _TRISA	set	3986
   509  0000                     _TRISAbits	set	3986
   510  0000                     _TRISB	set	3987
   511  0000                     _TRISBbits	set	3987
   512  0000                     _TRISC	set	3988
   513  0000                     _TRISCbits	set	3988
   514  0000                     _UCONbits	set	3941
   515  0000                     _PLLEN	set	31966
   516                           
   517                           ; #config settings
   518  0000                     
   519                           	psect	cinit
   520  00834C                     __pcinit:
   521                           	opt stack 0
   522  00834C                     start_initialization:
   523                           	opt stack 0
   524  00834C                     __initialization:
   525                           	opt stack 0
   526                           
   527                           ; Clear objects allocated to BANK3 (212 bytes)
   528  00834C  EE03  F000         	lfsr	0,__pbssBANK3
   529  008350  0ED4               	movlw	212
   530  008352                     clear_0:
   531  008352  6AEE               	clrf	postinc0,c
   532  008354  06E8               	decf	wreg,f,c
   533  008356  E1FD               	bnz	clear_0
   534                           
   535                           ; Clear objects allocated to BANK2 (224 bytes)
   536  008358  EE02  F000         	lfsr	0,__pbssBANK2
   537  00835C  0EE0               	movlw	224
   538  00835E                     clear_1:
   539  00835E  6AEE               	clrf	postinc0,c
   540  008360  06E8               	decf	wreg,f,c
   541  008362  E1FD               	bnz	clear_1
   542                           
   543                           ; Clear objects allocated to BANK1 (211 bytes)
   544  008364  EE01  F000         	lfsr	0,__pbssBANK1
   545  008368  0ED3               	movlw	211
   546  00836A                     clear_2:
   547  00836A  6AEE               	clrf	postinc0,c
   548  00836C  06E8               	decf	wreg,f,c
   549  00836E  E1FD               	bnz	clear_2
   550                           
   551                           ; Clear objects allocated to BANK0 (14 bytes)
   552  008370  EE00  F0D1         	lfsr	0,__pbssBANK0
   553  008374  0E0E               	movlw	14
   554  008376                     clear_3:
   555  008376  6AEE               	clrf	postinc0,c
   556  008378  06E8               	decf	wreg,f,c
   557  00837A  E1FD               	bnz	clear_3
   558                           
   559                           ; Clear objects allocated to COMRAM (22 bytes)
   560  00837C  EE00  F034         	lfsr	0,__pbssCOMRAM
   561  008380  0E16               	movlw	22
   562  008382                     clear_4:
   563  008382  6AEE               	clrf	postinc0,c
   564  008384  06E8               	decf	wreg,f,c
   565  008386  E1FD               	bnz	clear_4
   566                           
   567                           ; Initialize objects allocated to BANK1 (2 bytes)
   568                           ; load TBLPTR registers with __pidataBANK1
   569  008388  0E40               	movlw	low __pidataBANK1
   570  00838A  6EF6               	movwf	tblptrl,c
   571  00838C  0E8C               	movlw	high __pidataBANK1
   572  00838E  6EF7               	movwf	tblptrh,c
   573  008390  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   574  008392  6EF8               	movwf	tblptru,c
   575  008394  0009               	tblrd		*+	;fetch initializer
   576  008396  CFF5 F1FE          	movff	tablat,__pdataBANK1
   577  00839A  0009               	tblrd		*+	;fetch initializer
   578  00839C  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
   579                           
   580                           ; Initialize objects allocated to COMRAM (2 bytes)
   581                           ; load TBLPTR registers with __pidataCOMRAM
   582  0083A0  0E3E               	movlw	low __pidataCOMRAM
   583  0083A2  6EF6               	movwf	tblptrl,c
   584  0083A4  0E8C               	movlw	high __pidataCOMRAM
   585  0083A6  6EF7               	movwf	tblptrh,c
   586  0083A8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   587  0083AA  6EF8               	movwf	tblptru,c
   588  0083AC  0009               	tblrd		*+	;fetch initializer
   589  0083AE  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   590  0083B2  0009               	tblrd		*+	;fetch initializer
   591  0083B4  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
   592  0083B8                     end_of_initialization:
   593                           	opt stack 0
   594  0083B8                     __end_of__initialization:
   595                           	opt stack 0
   596  0083B8  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   597  0083BA  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   598  0083BC  0100               	movlb	0
   599  0083BE  EFDC  F028         	goto	_main	;jump to C main() function
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           postinc0	equ	0xFEE
   605                           wreg	equ	0xFE8
   606                           
   607                           	psect	bssCOMRAM
   608  000034                     __pbssCOMRAM:
   609                           	opt stack 0
   610  000034                     _MACRxPacket:
   611                           	opt stack 0
   612  000034                     	ds	8
   613  00003C                     _MACInitParams:
   614                           	opt stack 0
   615  00003C                     	ds	3
   616  00003F                     _ConnMode:
   617                           	opt stack 0
   618  00003F                     	ds	1
   619  000040                     _IRQ1_Received:
   620                           	opt stack 0
   621  000040                     	ds	1
   622  000041                     _MACSeq:
   623                           	opt stack 0
   624  000041                     	ds	1
   625  000042                     _MiWiAckRequired:
   626                           	opt stack 0
   627  000042                     	ds	1
   628  000043                     _RF_Mode:
   629                           	opt stack 0
   630  000043                     	ds	1
   631  000044                     _RSSIVal:
   632                           	opt stack 0
   633  000044                     	ds	1
   634  000045                     _ReceivedBankIndex:
   635                           	opt stack 0
   636  000045                     	ds	1
   637  000046                     _TxMACSeq:
   638                           	opt stack 0
   639  000046                     	ds	1
   640  000047                     _hasAck:
   641                           	opt stack 0
   642  000047                     	ds	1
   643  000048                     _tempNodeStatus:
   644                           	opt stack 0
   645  000048                     	ds	1
   646  000049                     _timerExtension2:
   647                           	opt stack 0
   648  000049                     	ds	1
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           
   656                           	psect	dataCOMRAM
   657  00004A                     __pdataCOMRAM:
   658                           	opt stack 0
   659  00004A                     _defaultHops:
   660                           	opt stack 0
   661  00004A                     	ds	1
   662  00004B                     _timer_count:
   663                           	opt stack 0
   664  00004B                     	ds	1
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           
   672                           	psect	bssBANK0
   673  0000D1                     __pbssBANK0:
   674                           	opt stack 0
   675  0000D1                     _MTP:
   676                           	opt stack 0
   677  0000D1                     	ds	3
   678  0000D4                     _MiWiStateMachine:
   679                           	opt stack 0
   680  0000D4                     	ds	2
   681  0000D6                     _ActiveScanResultIndex:
   682                           	opt stack 0
   683  0000D6                     	ds	1
   684  0000D7                     _MiWiSeqNum:
   685                           	opt stack 0
   686  0000D7                     	ds	1
   687  0000D8                     _TxData:
   688                           	opt stack 0
   689  0000D8                     	ds	1
   690  0000D9                     _myParent:
   691                           	opt stack 0
   692  0000D9                     	ds	1
   693  0000DA                     _timerExtension1:
   694                           	opt stack 0
   695  0000DA                     	ds	1
   696  0000DB                     _myPANID:
   697                           	opt stack 0
   698  0000DB                     	ds	2
   699  0000DD                     _myShortAddress:
   700                           	opt stack 0
   701  0000DD                     	ds	2
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           
   709                           	psect	bssBANK1
   710  000100                     __pbssBANK1:
   711                           	opt stack 0
   712  000100                     _BroadcastRecords:
   713                           	opt stack 0
   714  000100                     	ds	32
   715  000120                     _openSocketInfo:
   716                           	opt stack 0
   717  000120                     	ds	12
   718  00012C                     _rxMessage:
   719                           	opt stack 0
   720  00012C                     	ds	10
   721  000136                     _mySecurityKey:
   722                           	opt stack 0
   723  000136                     	ds	8
   724  00013E                     _OutgoingFrameCounter:
   725                           	opt stack 0
   726  00013E                     	ds	4
   727  000142                     _m_failed_messages:
   728                           	opt stack 0
   729  000142                     	ds	4
   730  000146                     _m_sent_messages:
   731                           	opt stack 0
   732  000146                     	ds	4
   733  00014A                     _m_uptime_seconds:
   734                           	opt stack 0
   735  00014A                     	ds	4
   736  00014E                     _tempLongAddress:
   737                           	opt stack 0
   738  00014E                     	ds	4
   739  000152                     _m_battery_voltage:
   740                           	opt stack 0
   741  000152                     	ds	3
   742  000155                     _m_temperature:
   743                           	opt stack 0
   744  000155                     	ds	3
   745  000158                     _AcknowledgementAddr:
   746                           	opt stack 0
   747  000158                     	ds	2
   748  00015A                     _errno:
   749                           	opt stack 0
   750  00015A                     	ds	2
   751  00015C                     _p_buffer:
   752                           	opt stack 0
   753  00015C                     	ds	2
   754  00015E                     _tempPANID:
   755                           	opt stack 0
   756  00015E                     	ds	2
   757  000160                     do_NETWORK_REGISTER@F10202:
   758                           	opt stack 0
   759  000160                     	ds	2
   760  000162                     do_UPDATE@F10230:
   761                           	opt stack 0
   762  000162                     	ds	2
   763  000164                     _MiWiCapacityInfo:
   764                           	opt stack 0
   765  000164                     	ds	1
   766  000165                     _RSSILock:
   767                           	opt stack 0
   768  000165                     	ds	1
   769  000166                     _consecutive_fails:
   770                           	opt stack 0
   771  000166                     	ds	1
   772  000167                     _last_rssi:
   773                           	opt stack 0
   774  000167                     	ds	1
   775  000168                     _m_light_level:
   776                           	opt stack 0
   777  000168                     	ds	1
   778  000169                     _m_power:
   779                           	opt stack 0
   780  000169                     	ds	1
   781  00016A                     _myAppState:
   782                           	opt stack 0
   783  00016A                     	ds	1
   784  00016B                     _timer_flag:
   785                           	opt stack 0
   786  00016B                     	ds	1
   787  00016C                     _TxBuffer:
   788                           	opt stack 0
   789  00016C                     	ds	43
   790  000197                     _m_buffer:
   791                           	opt stack 0
   792  000197                     	ds	32
   793  0001B7                     _m_var:
   794                           	opt stack 0
   795  0001B7                     	ds	9
   796  0001C0                     _key:
   797                           	opt stack 0
   798  0001C0                     	ds	8
   799  0001C8                     _myLongAddress:
   800                           	opt stack 0
   801  0001C8                     	ds	4
   802  0001CC                     _tmpBlock:
   803                           	opt stack 0
   804  0001CC                     	ds	4
   805  0001D0                     _tempShortAddress:
   806                           	opt stack 0
   807  0001D0                     	ds	2
   808  0001D2                     _currentChannel:
   809                           	opt stack 0
   810  0001D2                     	ds	1
   811                           tblptru	equ	0xFF8
   812                           tblptrh	equ	0xFF7
   813                           tblptrl	equ	0xFF6
   814                           tablat	equ	0xFF5
   815                           postinc0	equ	0xFEE
   816                           wreg	equ	0xFE8
   817                           
   818                           	psect	dataBANK1
   819  0001FE                     __pdataBANK1:
   820                           	opt stack 0
   821  0001FE                     _AcknowledgementSeq:
   822                           	opt stack 0
   823  0001FE                     	ds	1
   824  0001FF                     _m_update_frequency:
   825                           	opt stack 0
   826  0001FF                     	ds	1
   827                           tblptru	equ	0xFF8
   828                           tblptrh	equ	0xFF7
   829                           tblptrl	equ	0xFF6
   830                           tablat	equ	0xFF5
   831                           postinc0	equ	0xFEE
   832                           wreg	equ	0xFE8
   833                           
   834                           	psect	bssBANK2
   835  000200                     __pbssBANK2:
   836                           	opt stack 0
   837  000200                     _IncomingFrameCounter:
   838                           	opt stack 0
   839  000200                     	ds	40
   840  000228                     _AckInfo:
   841                           	opt stack 0
   842  000228                     	ds	30
   843  000246                     _ConnectionTable:
   844                           	opt stack 0
   845  000246                     	ds	90
   846  0002A0                     _MACTxBuffer:
   847                           	opt stack 0
   848  0002A0                     	ds	64
   849                           tblptru	equ	0xFF8
   850                           tblptrh	equ	0xFF7
   851                           tblptrl	equ	0xFF6
   852                           tablat	equ	0xFF5
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           
   856                           	psect	bssBANK3
   857  000300                     __pbssBANK3:
   858                           	opt stack 0
   859  000300                     _ActiveScanResults:
   860                           	opt stack 0
   861  000300                     	ds	80
   862  000350                     _RxPacket:
   863                           	opt stack 0
   864  000350                     	ds	132
   865                           tblptru	equ	0xFF8
   866                           tblptrh	equ	0xFF7
   867                           tblptrl	equ	0xFF6
   868                           tablat	equ	0xFF5
   869                           postinc0	equ	0xFEE
   870                           wreg	equ	0xFE8
   871                           
   872                           	psect	cstackBANK3
   873  0003D4                     __pcstackBANK3:
   874                           	opt stack 0
   875  0003D4                     send_initial_update@tmp2:
   876                           	opt stack 0
   877  0003D4                     send_periodical_update@tmp2:
   878                           	opt stack 0
   879                           
   880                           ; 3 bytes @ 0x0
   881  0003D4                     	ds	3
   882  0003D7                     _send_initial_update$5076:
   883                           	opt stack 0
   884  0003D7                     _send_periodical_update$5080:
   885                           	opt stack 0
   886                           
   887                           ; 3 bytes @ 0x3
   888  0003D7                     	ds	3
   889  0003DA                     _send_initial_update$5077:
   890                           	opt stack 0
   891  0003DA                     _send_periodical_update$5081:
   892                           	opt stack 0
   893                           
   894                           ; 3 bytes @ 0x6
   895  0003DA                     	ds	3
   896  0003DD                     _send_initial_update$5078:
   897                           	opt stack 0
   898  0003DD                     _send_periodical_update$5082:
   899                           	opt stack 0
   900                           
   901                           ; 3 bytes @ 0x9
   902  0003DD                     	ds	3
   903  0003E0                     _send_initial_update$5079:
   904                           	opt stack 0
   905  0003E0                     _send_periodical_update$5083:
   906                           	opt stack 0
   907                           
   908                           ; 3 bytes @ 0xC
   909  0003E0                     	ds	3
   910  0003E3                     send_initial_update@tmp:
   911                           	opt stack 0
   912  0003E3                     send_periodical_update@tmp:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0xF
   916  0003E3                     	ds	2
   917  0003E5                     
   918                           ; 0 bytes @ 0x11
   919  0003E5                     	ds	2
   920  0003E7                     main@result:
   921                           	opt stack 0
   922                           
   923                           ; 1 bytes @ 0x13
   924  0003E7                     	ds	1
   925  0003E8                     main@best_candidate:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x14
   929  0003E8                     	ds	1
   930  0003E9                     main@Status:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x15
   934  0003E9                     	ds	1
   935  0003EA                     main@best_RSSI:
   936                           	opt stack 0
   937                           
   938                           ; 1 bytes @ 0x16
   939  0003EA                     	ds	1
   940  0003EB                     main@x:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x17
   944  0003EB                     	ds	2
   945  0003ED                     main@j:
   946                           	opt stack 0
   947                           
   948                           ; 1 bytes @ 0x19
   949  0003ED                     	ds	1
   950  0003EE                     main@scanresult:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x1A
   954  0003EE                     	ds	1
   955                           tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           
   962                           	psect	cstackBANK2
   963  0002E0                     __pcstackBANK2:
   964                           	opt stack 0
   965  0002E0                     MiApp_SearchConnection@channelMask:
   966                           	opt stack 0
   967  0002E0                     MiApp_UnicastAddress@t1:
   968                           	opt stack 0
   969                           
   970                           ; 4 bytes @ 0x0
   971  0002E0                     	ds	4
   972  0002E4                     MiApp_SearchConnection@t1:
   973                           	opt stack 0
   974  0002E4                     MiApp_UnicastAddress@t2:
   975                           	opt stack 0
   976                           
   977                           ; 4 bytes @ 0x4
   978  0002E4                     	ds	4
   979  0002E8                     MiApp_SearchConnection@t2:
   980                           	opt stack 0
   981  0002E8                     MiApp_UnicastAddress@t1_2763:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x8
   985  0002E8                     	ds	4
   986  0002EC                     MiApp_SearchConnection@ScanDuration:
   987                           	opt stack 0
   988  0002EC                     MiApp_UnicastAddress@t2_2774:
   989                           	opt stack 0
   990                           
   991                           ; 4 bytes @ 0xC
   992  0002EC                     	ds	1
   993  0002ED                     MiApp_SearchConnection@backupChannel:
   994                           	opt stack 0
   995                           
   996                           ; 1 bytes @ 0xD
   997  0002ED                     	ds	1
   998  0002EE                     MiApp_SearchConnection@i:
   999                           	opt stack 0
  1000                           
  1001                           ; 1 bytes @ 0xE
  1002  0002EE                     	ds	2
  1003  0002F0                     MiApp_UnicastAddress@MiWiFrameControl:
  1004                           	opt stack 0
  1005                           
  1006                           ; 1 bytes @ 0x10
  1007  0002F0                     	ds	1
  1008  0002F1                     MiApp_UnicastAddress@i:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x11
  1012  0002F1                     	ds	1
  1013  0002F2                     MiApp_UnicastAddress@handle:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x12
  1017  0002F2                     	ds	1
  1018  0002F3                     ??_process_update_answer:
  1019  0002F3                     adapt_power_level@rssi:
  1020                           	opt stack 0
  1021  0002F3                     MiApp_EstablishConnection@t1:
  1022                           	opt stack 0
  1023                           
  1024                           ; 4 bytes @ 0x13
  1025  0002F3                     	ds	1
  1026  0002F4                     adapt_power_level@last_good_power:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x14
  1030  0002F4                     	ds	1
  1031  0002F5                     adapt_power_level@m_power:
  1032                           	opt stack 0
  1033                           
  1034                           ; 1 bytes @ 0x15
  1035  0002F5                     	ds	2
  1036  0002F7                     MiApp_EstablishConnection@t2:
  1037                           	opt stack 0
  1038                           
  1039                           ; 4 bytes @ 0x17
  1040  0002F7                     	ds	3
  1041  0002FA                     process_update_answer@result:
  1042                           	opt stack 0
  1043                           
  1044                           ; 1 bytes @ 0x1A
  1045  0002FA                     	ds	1
  1046  0002FB                     MiApp_EstablishConnection@retry:
  1047                           	opt stack 0
  1048  0002FB                     process_update_answer@ack_required:
  1049                           	opt stack 0
  1050                           
  1051                           ; 1 bytes @ 0x1B
  1052  0002FB                     	ds	1
  1053  0002FC                     MiApp_EstablishConnection@ActiveScanIndex:
  1054                           	opt stack 0
  1055  0002FC                     process_update_answer@i:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x1C
  1059  0002FC                     	ds	1
  1060  0002FD                     MiApp_EstablishConnection@i:
  1061                           	opt stack 0
  1062  0002FD                     process_update_answer@shortaddress:
  1063                           	opt stack 0
  1064                           
  1065                           ; 2 bytes @ 0x1D
  1066  0002FD                     	ds	2
  1067  0002FF                     process_update_answer@size:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x1F
  1071  0002FF                     	ds	1
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           postinc0	equ	0xFEE
  1077                           wreg	equ	0xFE8
  1078                           
  1079                           	psect	cstackBANK1
  1080  0001D3                     __pcstackBANK1:
  1081                           	opt stack 0
  1082  0001D3                     ??___ftmul:
  1083  0001D3                     MiWiTasks@t2:
  1084                           	opt stack 0
  1085                           
  1086                           ; 4 bytes @ 0x0
  1087  0001D3                     	ds	3
  1088  0001D6                     ___ftmul@exp:
  1089                           	opt stack 0
  1090                           
  1091                           ; 1 bytes @ 0x3
  1092  0001D6                     	ds	1
  1093  0001D7                     MiWiTasks@cIndex:
  1094                           	opt stack 0
  1095  0001D7                     ___ftmul@f3_as_product:
  1096                           	opt stack 0
  1097                           
  1098                           ; 3 bytes @ 0x4
  1099  0001D7                     	ds	1
  1100  0001D8                     MiWiTasks@t1:
  1101                           	opt stack 0
  1102                           
  1103                           ; 4 bytes @ 0x5
  1104  0001D8                     	ds	2
  1105  0001DA                     ___ftmul@cntr:
  1106                           	opt stack 0
  1107                           
  1108                           ; 1 bytes @ 0x7
  1109  0001DA                     	ds	1
  1110  0001DB                     ___ftmul@sign:
  1111                           	opt stack 0
  1112                           
  1113                           ; 1 bytes @ 0x8
  1114  0001DB                     	ds	1
  1115  0001DC                     ??_read_sensors:
  1116  0001DC                     MiWiTasks@destPANID:
  1117                           	opt stack 0
  1118                           
  1119                           ; 2 bytes @ 0x9
  1120  0001DC                     	ds	2
  1121  0001DE                     MiWiTasks@destShortAddress:
  1122                           	opt stack 0
  1123                           
  1124                           ; 2 bytes @ 0xB
  1125  0001DE                     	ds	1
  1126  0001DF                     read_sensors@t0:
  1127                           	opt stack 0
  1128                           
  1129                           ; 1 bytes @ 0xC
  1130  0001DF                     	ds	1
  1131  0001E0                     MiWiTasks@rxIndex:
  1132                           	opt stack 0
  1133  0001E0                     read_sensors@t1:
  1134                           	opt stack 0
  1135                           
  1136                           ; 1 bytes @ 0xD
  1137  0001E0                     	ds	1
  1138  0001E1                     MiWiTasks@CapacityByte:
  1139                           	opt stack 0
  1140  0001E1                     read_sensors@adc_result:
  1141                           	opt stack 0
  1142                           
  1143                           ; 2 bytes @ 0xE
  1144  0001E1                     	ds	1
  1145  0001E2                     MiWiTasks@j:
  1146                           	opt stack 0
  1147                           
  1148                           ; 1 bytes @ 0xF
  1149  0001E2                     	ds	1
  1150  0001E3                     MiWiTasks@sourcePANID:
  1151                           	opt stack 0
  1152  0001E3                     read_sensors@value:
  1153                           	opt stack 0
  1154                           
  1155                           ; 2 bytes @ 0x10
  1156  0001E3                     	ds	2
  1157  0001E5                     MiWiTasks@sourceShortAddress:
  1158                           	opt stack 0
  1159                           
  1160                           ; 2 bytes @ 0x12
  1161  0001E5                     	ds	2
  1162  0001E7                     MiWiTasks@i:
  1163                           	opt stack 0
  1164                           
  1165                           ; 1 bytes @ 0x14
  1166  0001E7                     	ds	1
  1167  0001E8                     MiApp_UnicastAddress@DestAddress:
  1168                           	opt stack 0
  1169  0001E8                     MiApp_SearchConnection@ChannelMap:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0x15
  1173  0001E8                     	ds	2
  1174  0001EA                     MiApp_UnicastAddress@PermanentAddr:
  1175                           	opt stack 0
  1176                           
  1177                           ; 1 bytes @ 0x17
  1178  0001EA                     	ds	1
  1179  0001EB                     MiApp_UnicastAddress@SecEn:
  1180                           	opt stack 0
  1181                           
  1182                           ; 1 bytes @ 0x18
  1183  0001EB                     	ds	1
  1184  0001EC                     ??_MiApp_UnicastAddress:
  1185  0001EC                     ??_MiApp_SearchConnection:
  1186                           
  1187                           ; 0 bytes @ 0x19
  1188  0001EC                     	ds	8
  1189  0001F4                     do_POWER_TEST@result:
  1190                           	opt stack 0
  1191  0001F4                     do_NETWORK_REGISTER@p_uid:
  1192                           	opt stack 0
  1193  0001F4                     do_UPDATE@p_buff:
  1194                           	opt stack 0
  1195                           
  1196                           ; 2 bytes @ 0x21
  1197  0001F4                     	ds	1
  1198  0001F5                     MiApp_EstablishConnection@Mode:
  1199                           	opt stack 0
  1200  0001F5                     do_POWER_TEST@power_lvl:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x22
  1204  0001F5                     	ds	1
  1205  0001F6                     ??_MiApp_EstablishConnection:
  1206  0001F6                     do_NETWORK_REGISTER@sleeping_device:
  1207                           	opt stack 0
  1208  0001F6                     do_UPDATE@size:
  1209                           	opt stack 0
  1210  0001F6                     do_POWER_TEST@i:
  1211                           	opt stack 0
  1212                           
  1213                           ; 2 bytes @ 0x23
  1214  0001F6                     	ds	1
  1215  0001F7                     do_UPDATE@ack_required:
  1216                           	opt stack 0
  1217  0001F7                     do_NETWORK_REGISTER@shortaddress:
  1218                           	opt stack 0
  1219                           
  1220                           ; 2 bytes @ 0x24
  1221  0001F7                     	ds	1
  1222  0001F8                     do_POWER_TEST@rssi:
  1223                           	opt stack 0
  1224  0001F8                     do_UPDATE@shortaddress:
  1225                           	opt stack 0
  1226                           
  1227                           ; 2 bytes @ 0x25
  1228  0001F8                     	ds	1
  1229  0001F9                     do_NETWORK_REGISTER@i:
  1230                           	opt stack 0
  1231  0001F9                     do_POWER_TEST@shortaddress:
  1232                           	opt stack 0
  1233                           
  1234                           ; 2 bytes @ 0x26
  1235  0001F9                     	ds	1
  1236  0001FA                     do_UPDATE@i:
  1237                           	opt stack 0
  1238                           
  1239                           ; 2 bytes @ 0x27
  1240  0001FA                     	ds	1
  1241  0001FB                     do_NETWORK_REGISTER@result:
  1242                           	opt stack 0
  1243  0001FB                     adapt_power_level@minimal_rssi:
  1244                           	opt stack 0
  1245                           
  1246                           ; 1 bytes @ 0x28
  1247  0001FB                     	ds	1
  1248  0001FC                     ??_adapt_power_level:
  1249  0001FC                     do_UPDATE@result:
  1250                           	opt stack 0
  1251                           
  1252                           ; 1 bytes @ 0x29
  1253  0001FC                     	ds	1
  1254  0001FD                     ??_send_initial_update:
  1255  0001FD                     ??_send_periodical_update:
  1256  0001FD                     ??_send_writables_update:
  1257                           
  1258                           ; 0 bytes @ 0x2A
  1259  0001FD                     	ds	1
  1260                           tblptru	equ	0xFF8
  1261                           tblptrh	equ	0xFF7
  1262                           tblptrl	equ	0xFF6
  1263                           tablat	equ	0xFF5
  1264                           postinc0	equ	0xFEE
  1265                           wreg	equ	0xFE8
  1266                           
  1267                           	psect	cstackBANK0
  1268  000060                     __pcstackBANK0:
  1269                           	opt stack 0
  1270  000060                     ??_MIWIInterruptHandler:
  1271                           
  1272                           ; 0 bytes @ 0x0
  1273  000060                     	ds	6
  1274  000066                     MIWIInterruptHandler@counter:
  1275                           	opt stack 0
  1276                           
  1277                           ; 2 bytes @ 0x6
  1278  000066                     	ds	2
  1279  000068                     MIWIInterruptHandler@fifo_stat:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x8
  1283  000068                     	ds	1
  1284  000069                     MIWIInterruptHandler@ackPacket:
  1285                           	opt stack 0
  1286                           
  1287                           ; 4 bytes @ 0x9
  1288  000069                     	ds	4
  1289  00006D                     MIWIInterruptHandler@bAck:
  1290                           	opt stack 0
  1291                           
  1292                           ; 1 bytes @ 0xD
  1293  00006D                     	ds	1
  1294  00006E                     MIWIInterruptHandler@RxPacketPtr:
  1295                           	opt stack 0
  1296                           
  1297                           ; 1 bytes @ 0xE
  1298  00006E                     	ds	1
  1299  00006F                     MIWIInterruptHandler@ackInfoIndex:
  1300                           	opt stack 0
  1301                           
  1302                           ; 1 bytes @ 0xF
  1303  00006F                     	ds	1
  1304  000070                     MIWIInterruptHandler@PacketLen:
  1305                           	opt stack 0
  1306                           
  1307                           ; 1 bytes @ 0x10
  1308  000070                     	ds	1
  1309  000071                     MIWIInterruptHandler@BankIndex:
  1310                           	opt stack 0
  1311                           
  1312                           ; 1 bytes @ 0x11
  1313  000071                     	ds	1
  1314  000072                     MIWIInterruptHandler@i:
  1315                           	opt stack 0
  1316                           
  1317                           ; 1 bytes @ 0x12
  1318  000072                     	ds	1
  1319  000073                     ??_SYS_InterruptHigh:
  1320                           
  1321                           ; 0 bytes @ 0x13
  1322  000073                     	ds	14
  1323  000081                     ??_SearchForLongAddress:
  1324  000081                     ??_wait_for_1_sec:
  1325  000081                     ??_WriteI2C1:
  1326  000081                     ??_MiApp_ConnectionMode:
  1327  000081                     ?_strcmp:
  1328                           	opt stack 0
  1329  000081                     ?___awdiv:
  1330                           	opt stack 0
  1331  000081                     ?___ftpack:
  1332                           	opt stack 0
  1333  000081                     ?_MiWi_TickGet:
  1334                           	opt stack 0
  1335  000081                     ?___lmul:
  1336                           	opt stack 0
  1337  000081                     ?___lldiv:
  1338                           	opt stack 0
  1339  000081                     SPIPut@i:
  1340                           	opt stack 0
  1341  000081                     findNextNetworkEntry@i:
  1342                           	opt stack 0
  1343  000081                     OpenI2C1@slew:
  1344                           	opt stack 0
  1345  000081                     security_force_key_update@i:
  1346                           	opt stack 0
  1347  000081                     MiMAC_SetAltAddress@Address:
  1348                           	opt stack 0
  1349  000081                     encode@text:
  1350                           	opt stack 0
  1351  000081                     isSameAddress@Address1:
  1352                           	opt stack 0
  1353  000081                     encode_uint8_variable@buffer:
  1354                           	opt stack 0
  1355  000081                     encode_uint16_variable@buffer:
  1356                           	opt stack 0
  1357  000081                     encode_ufixed16_variable@buffer:
  1358                           	opt stack 0
  1359  000081                     ___awdiv@dividend:
  1360                           	opt stack 0
  1361  000081                     memcpy@d1:
  1362                           	opt stack 0
  1363  000081                     strcmp@s1:
  1364                           	opt stack 0
  1365  000081                     ___ftpack@arg:
  1366                           	opt stack 0
  1367  000081                     frexp@value:
  1368                           	opt stack 0
  1369  000081                     ___ftge@ff1:
  1370                           	opt stack 0
  1371  000081                     ___lmul@multiplier:
  1372                           	opt stack 0
  1373  000081                     ___lldiv@dividend:
  1374                           	opt stack 0
  1375                           
  1376                           ; 4 bytes @ 0x21
  1377  000081                     	ds	1
  1378  000082                     SPIPut@v:
  1379                           	opt stack 0
  1380  000082                     MiApp_ConnectionMode@Mode:
  1381                           	opt stack 0
  1382  000082                     OpenI2C1@sync_mode:
  1383                           	opt stack 0
  1384  000082                     WriteI2C1@data_out:
  1385                           	opt stack 0
  1386  000082                     wait_for_1_sec@i:
  1387                           	opt stack 0
  1388                           
  1389                           ; 2 bytes @ 0x22
  1390  000082                     	ds	1
  1391  000083                     RegisterRead@value:
  1392                           	opt stack 0
  1393  000083                     WriteFIFO@Data:
  1394                           	opt stack 0
  1395  000083                     SearchForShortAddress@i:
  1396                           	opt stack 0
  1397  000083                     RegisterSet@setting:
  1398                           	opt stack 0
  1399  000083                     MiMAC_SetAltAddress@PANID:
  1400                           	opt stack 0
  1401  000083                     encode@key:
  1402                           	opt stack 0
  1403  000083                     isSameAddress@Address2:
  1404                           	opt stack 0
  1405  000083                     ___awdiv@divisor:
  1406                           	opt stack 0
  1407  000083                     memcpy@s1:
  1408                           	opt stack 0
  1409  000083                     strcmp@s2:
  1410                           	opt stack 0
  1411  000083                     encode_uint8_variable@var:
  1412                           	opt stack 0
  1413  000083                     encode_uint16_variable@var:
  1414                           	opt stack 0
  1415  000083                     encode_ufixed16_variable@var:
  1416                           	opt stack 0
  1417                           
  1418                           ; 9 bytes @ 0x23
  1419  000083                     	ds	1
  1420  000084                     RegisterRead@IRQ1select:
  1421                           	opt stack 0
  1422  000084                     WriteFIFO@IRQ1select:
  1423                           	opt stack 0
  1424  000084                     ___ftpack@exp:
  1425                           	opt stack 0
  1426  000084                     frexp@eptr:
  1427                           	opt stack 0
  1428  000084                     ___ftge@ff2:
  1429                           	opt stack 0
  1430                           
  1431                           ; 3 bytes @ 0x24
  1432  000084                     	ds	1
  1433  000085                     ??_strcmp:
  1434  000085                     ??_MiWi_TickGet:
  1435  000085                     ??_encode:
  1436  000085                     RegisterSet@IRQ1select:
  1437                           	opt stack 0
  1438  000085                     RegisterRead@IRQ0select:
  1439                           	opt stack 0
  1440  000085                     WriteFIFO@IRQ0select:
  1441                           	opt stack 0
  1442  000085                     SearchForLongAddress@j:
  1443                           	opt stack 0
  1444  000085                     ___awdiv@counter:
  1445                           	opt stack 0
  1446  000085                     ___ftpack@sign:
  1447                           	opt stack 0
  1448  000085                     memcpy@n:
  1449                           	opt stack 0
  1450  000085                     ___lmul@multiplicand:
  1451                           	opt stack 0
  1452  000085                     ___lldiv@divisor:
  1453                           	opt stack 0
  1454                           
  1455                           ; 4 bytes @ 0x25
  1456  000085                     	ds	1
  1457  000086                     ??___ftpack:
  1458  000086                     ??_frexp:
  1459  000086                     MiWi_TickGet@failureCounter:
  1460                           	opt stack 0
  1461  000086                     RegisterSet@IRQ0select:
  1462                           	opt stack 0
  1463  000086                     RegisterRead@address:
  1464                           	opt stack 0
  1465  000086                     SearchForLongAddress@i:
  1466                           	opt stack 0
  1467  000086                     ___awdiv@sign:
  1468                           	opt stack 0
  1469  000086                     strcmp@r:
  1470                           	opt stack 0
  1471                           
  1472                           ; 1 bytes @ 0x26
  1473  000086                     	ds	1
  1474  000087                     ??_AddNodeToNetworkTable:
  1475  000087                     ??_MiMAC_SetPower:
  1476  000087                     ??___ftge:
  1477  000087                     SetRFMode@mode:
  1478                           	opt stack 0
  1479  000087                     isSameAddress@i:
  1480                           	opt stack 0
  1481  000087                     ___awdiv@quotient:
  1482                           	opt stack 0
  1483  000087                     memcpy@d:
  1484                           	opt stack 0
  1485  000087                     MiWi_TickGet@currentTime:
  1486                           	opt stack 0
  1487                           
  1488                           ; 4 bytes @ 0x27
  1489  000087                     	ds	1
  1490  000088                     MiMAC_SetChannel@offsetFreq:
  1491                           	opt stack 0
  1492                           
  1493                           ; 1 bytes @ 0x28
  1494  000088                     	ds	1
  1495  000089                     ??_MiMAC_SetChannel:
  1496  000089                     ?___ftadd:
  1497                           	opt stack 0
  1498  000089                     ?___lwtoft:
  1499                           	opt stack 0
  1500  000089                     MiMAC_SetPower@outputPower:
  1501                           	opt stack 0
  1502  000089                     AddNodeToNetworkTable@i:
  1503                           	opt stack 0
  1504  000089                     ___lwtoft@c:
  1505                           	opt stack 0
  1506  000089                     memcpy@s:
  1507                           	opt stack 0
  1508  000089                     ___ftadd@f1:
  1509                           	opt stack 0
  1510  000089                     ___lmul@product:
  1511                           	opt stack 0
  1512  000089                     ___lldiv@quotient:
  1513                           	opt stack 0
  1514                           
  1515                           ; 4 bytes @ 0x29
  1516  000089                     	ds	1
  1517  00008A                     MiMAC_SetChannel@channel:
  1518                           	opt stack 0
  1519  00008A                     AddNodeToNetworkTable@handle:
  1520                           	opt stack 0
  1521                           
  1522                           ; 1 bytes @ 0x2A
  1523  00008A                     	ds	1
  1524  00008B                     ?_decode_variable:
  1525                           	opt stack 0
  1526  00008B                     TxPacket@CCA:
  1527                           	opt stack 0
  1528  00008B                     MiApp_SetChannel@channel:
  1529                           	opt stack 0
  1530  00008B                     decode_variable@p_buffer:
  1531                           	opt stack 0
  1532                           
  1533                           ; 2 bytes @ 0x2B
  1534  00008B                     	ds	1
  1535  00008C                     ??_TxPacket:
  1536  00008C                     ___ftadd@f2:
  1537                           	opt stack 0
  1538                           
  1539                           ; 3 bytes @ 0x2C
  1540  00008C                     	ds	1
  1541  00008D                     ?___lltoft:
  1542                           	opt stack 0
  1543  00008D                     ___lldiv@counter:
  1544                           	opt stack 0
  1545  00008D                     DELAY_ms@ms:
  1546                           	opt stack 0
  1547  00008D                     ___lltoft@c:
  1548                           	opt stack 0
  1549                           
  1550                           ; 4 bytes @ 0x2D
  1551  00008D                     	ds	2
  1552  00008F                     ??___ftadd:
  1553  00008F                     encode@delta:
  1554                           	opt stack 0
  1555  00008F                     DELAY_ms@cyclesRequiredForEntireDelay:
  1556                           	opt stack 0
  1557                           
  1558                           ; 4 bytes @ 0x2F
  1559  00008F                     	ds	2
  1560  000091                     ??___lltoft:
  1561  000091                     encode@i:
  1562                           	opt stack 0
  1563                           
  1564                           ; 1 bytes @ 0x31
  1565  000091                     	ds	1
  1566  000092                     ___ftadd@sign:
  1567                           	opt stack 0
  1568  000092                     encode@part1:
  1569                           	opt stack 0
  1570                           
  1571                           ; 2 bytes @ 0x32
  1572  000092                     	ds	1
  1573  000093                     MiMAC_PowerState@PowerState:
  1574                           	opt stack 0
  1575  000093                     ___ftadd@exp2:
  1576                           	opt stack 0
  1577  000093                     MiMAC_Init@initValue:
  1578                           	opt stack 0
  1579                           
  1580                           ; 3 bytes @ 0x33
  1581  000093                     	ds	1
  1582  000094                     ??_decode_variable:
  1583  000094                     MiMAC_PowerState@i:
  1584                           	opt stack 0
  1585  000094                     ___ftadd@exp1:
  1586                           	opt stack 0
  1587  000094                     encode@part2:
  1588                           	opt stack 0
  1589  000094                     TxPacket@t1:
  1590                           	opt stack 0
  1591                           
  1592                           ; 4 bytes @ 0x34
  1593  000094                     	ds	1
  1594  000095                     MiApp_TransceiverPowerState@Mode:
  1595                           	opt stack 0
  1596  000095                     ___lltoft@exp:
  1597                           	opt stack 0
  1598                           
  1599                           ; 1 bytes @ 0x35
  1600  000095                     	ds	1
  1601  000096                     ?___ftdiv:
  1602                           	opt stack 0
  1603  000096                     MiMAC_Init@i:
  1604                           	opt stack 0
  1605  000096                     encode@sum:
  1606                           	opt stack 0
  1607  000096                     ___ftdiv@f1:
  1608                           	opt stack 0
  1609  000096                     decode_variable@var:
  1610                           	opt stack 0
  1611                           
  1612                           ; 9 bytes @ 0x36
  1613  000096                     	ds	1
  1614  000097                     ??_MiApp_ProtocolInit:
  1615                           
  1616                           ; 0 bytes @ 0x37
  1617  000097                     	ds	1
  1618  000098                     MiApp_ProtocolInit@bNetworkFreezer:
  1619                           	opt stack 0
  1620  000098                     CTR@text:
  1621                           	opt stack 0
  1622  000098                     CBC_MAC@text:
  1623                           	opt stack 0
  1624  000098                     TxPacket@t2:
  1625                           	opt stack 0
  1626                           
  1627                           ; 4 bytes @ 0x38
  1628  000098                     	ds	1
  1629  000099                     MiApp_ProtocolInit@MIP:
  1630                           	opt stack 0
  1631  000099                     ___ftdiv@f2:
  1632                           	opt stack 0
  1633                           
  1634                           ; 3 bytes @ 0x39
  1635  000099                     	ds	1
  1636  00009A                     CTR@len:
  1637                           	opt stack 0
  1638  00009A                     CBC_MAC@len:
  1639                           	opt stack 0
  1640                           
  1641                           ; 1 bytes @ 0x3A
  1642  00009A                     	ds	1
  1643  00009B                     CTR@key:
  1644                           	opt stack 0
  1645  00009B                     CBC_MAC@key:
  1646                           	opt stack 0
  1647                           
  1648                           ; 2 bytes @ 0x3B
  1649  00009B                     	ds	1
  1650  00009C                     ??___ftdiv:
  1651  00009C                     TxPacket@CCARetries:
  1652                           	opt stack 0
  1653  00009C                     MiApp_ProtocolInit@i:
  1654                           	opt stack 0
  1655                           
  1656                           ; 1 bytes @ 0x3C
  1657  00009C                     	ds	1
  1658  00009D                     TxPacket@reTry:
  1659                           	opt stack 0
  1660  00009D                     CTR@nounce:
  1661                           	opt stack 0
  1662  00009D                     CBC_MAC@MIC:
  1663                           	opt stack 0
  1664                           
  1665                           ; 2 bytes @ 0x3D
  1666  00009D                     	ds	1
  1667  00009E                     TxPacket@allowedTxFailure:
  1668                           	opt stack 0
  1669                           
  1670                           ; 1 bytes @ 0x3E
  1671  00009E                     	ds	1
  1672  00009F                     ??_CTR:
  1673  00009F                     ??_CBC_MAC:
  1674  00009F                     TxPacket@status:
  1675                           	opt stack 0
  1676  00009F                     ___ftdiv@cntr:
  1677                           	opt stack 0
  1678                           
  1679                           ; 1 bytes @ 0x3F
  1680  00009F                     	ds	1
  1681  0000A0                     TxPacket@TxPacketLen:
  1682                           	opt stack 0
  1683  0000A0                     ___ftdiv@f3:
  1684                           	opt stack 0
  1685                           
  1686                           ; 3 bytes @ 0x40
  1687  0000A0                     	ds	1
  1688  0000A1                     TxPacket@i:
  1689                           	opt stack 0
  1690                           
  1691                           ; 1 bytes @ 0x41
  1692  0000A1                     	ds	1
  1693  0000A2                     TxPacket@rssival:
  1694                           	opt stack 0
  1695  0000A2                     CTR@block:
  1696                           	opt stack 0
  1697  0000A2                     CBC_MAC@block:
  1698                           	opt stack 0
  1699                           
  1700                           ; 1 bytes @ 0x42
  1701  0000A2                     	ds	1
  1702  0000A3                     CTR@i:
  1703                           	opt stack 0
  1704  0000A3                     CBC_MAC@j:
  1705                           	opt stack 0
  1706  0000A3                     ___ftdiv@exp:
  1707                           	opt stack 0
  1708                           
  1709                           ; 1 bytes @ 0x43
  1710  0000A3                     	ds	1
  1711  0000A4                     CTR@j:
  1712                           	opt stack 0
  1713  0000A4                     CBC_MAC@i:
  1714                           	opt stack 0
  1715  0000A4                     ___ftdiv@sign:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0x44
  1719  0000A4                     	ds	1
  1720  0000A5                     ?___fttol:
  1721                           	opt stack 0
  1722  0000A5                     CCM_Enc@text:
  1723                           	opt stack 0
  1724  0000A5                     CCM_Dec@text:
  1725                           	opt stack 0
  1726  0000A5                     ___fttol@f1:
  1727                           	opt stack 0
  1728                           
  1729                           ; 3 bytes @ 0x45
  1730  0000A5                     	ds	2
  1731  0000A7                     CCM_Enc@headerLen:
  1732                           	opt stack 0
  1733  0000A7                     CCM_Dec@headerLen:
  1734                           	opt stack 0
  1735                           
  1736                           ; 1 bytes @ 0x47
  1737  0000A7                     	ds	1
  1738  0000A8                     CCM_Enc@payloadLen:
  1739                           	opt stack 0
  1740  0000A8                     CCM_Dec@payloadLen:
  1741                           	opt stack 0
  1742                           
  1743                           ; 1 bytes @ 0x48
  1744  0000A8                     	ds	1
  1745  0000A9                     ??___fttol:
  1746  0000A9                     CCM_Enc@key:
  1747                           	opt stack 0
  1748  0000A9                     CCM_Dec@key:
  1749                           	opt stack 0
  1750                           
  1751                           ; 2 bytes @ 0x49
  1752  0000A9                     	ds	2
  1753  0000AB                     ??_CCM_Enc:
  1754  0000AB                     ??_CCM_Dec:
  1755                           
  1756                           ; 0 bytes @ 0x4B
  1757  0000AB                     	ds	2
  1758  0000AD                     _CCM_Enc$2085:
  1759                           	opt stack 0
  1760                           
  1761                           ; 2 bytes @ 0x4D
  1762  0000AD                     	ds	1
  1763  0000AE                     ___fttol@sign1:
  1764                           	opt stack 0
  1765                           
  1766                           ; 1 bytes @ 0x4E
  1767  0000AE                     	ds	1
  1768  0000AF                     CCM_Enc@i:
  1769                           	opt stack 0
  1770  0000AF                     ___fttol@lval:
  1771                           	opt stack 0
  1772                           
  1773                           ; 4 bytes @ 0x4F
  1774  0000AF                     	ds	1
  1775  0000B0                     MiMAC_SendPacket@transParam:
  1776                           	opt stack 0
  1777                           
  1778                           ; 3 bytes @ 0x50
  1779  0000B0                     	ds	1
  1780  0000B1                     _CCM_Dec$2093:
  1781                           	opt stack 0
  1782                           
  1783                           ; 2 bytes @ 0x51
  1784  0000B1                     	ds	2
  1785  0000B3                     CCM_Dec@i:
  1786                           	opt stack 0
  1787  0000B3                     ___fttol@exp1:
  1788                           	opt stack 0
  1789  0000B3                     MiMAC_SendPacket@MACPayload:
  1790                           	opt stack 0
  1791                           
  1792                           ; 2 bytes @ 0x53
  1793  0000B3                     	ds	1
  1794  0000B4                     ??_MiMAC_ReceivedPacket:
  1795  0000B4                     ?___altoft:
  1796                           	opt stack 0
  1797  0000B4                     ___altoft@c:
  1798                           	opt stack 0
  1799                           
  1800                           ; 4 bytes @ 0x54
  1801  0000B4                     	ds	1
  1802  0000B5                     MiMAC_SendPacket@MACPayloadLen:
  1803                           	opt stack 0
  1804                           
  1805                           ; 1 bytes @ 0x55
  1806  0000B5                     	ds	1
  1807  0000B6                     ??_MiMAC_SendPacket:
  1808                           
  1809                           ; 0 bytes @ 0x56
  1810  0000B6                     	ds	1
  1811  0000B7                     MiMAC_SendPacket@headerLen:
  1812                           	opt stack 0
  1813                           
  1814                           ; 1 bytes @ 0x57
  1815  0000B7                     	ds	1
  1816  0000B8                     ??___altoft:
  1817  0000B8                     MiMAC_SendPacket@TxIndex:
  1818                           	opt stack 0
  1819                           
  1820                           ; 1 bytes @ 0x58
  1821  0000B8                     	ds	1
  1822  0000B9                     MiMAC_SendPacket@i:
  1823                           	opt stack 0
  1824                           
  1825                           ; 1 bytes @ 0x59
  1826  0000B9                     	ds	1
  1827  0000BA                     SendMACPacket@Address:
  1828                           	opt stack 0
  1829                           
  1830                           ; 2 bytes @ 0x5A
  1831  0000BA                     	ds	2
  1832  0000BC                     SendMACPacket@PacketType:
  1833                           	opt stack 0
  1834  0000BC                     ___altoft@exp:
  1835                           	opt stack 0
  1836  0000BC                     MiMAC_ReceivedPacket@currentTick:
  1837                           	opt stack 0
  1838                           
  1839                           ; 4 bytes @ 0x5C
  1840  0000BC                     	ds	1
  1841  0000BD                     ??_SendMACPacket:
  1842  0000BD                     ___altoft@sign:
  1843                           	opt stack 0
  1844                           
  1845                           ; 1 bytes @ 0x5D
  1846  0000BD                     	ds	1
  1847  0000BE                     ?_floor:
  1848                           	opt stack 0
  1849  0000BE                     floor@x:
  1850                           	opt stack 0
  1851                           
  1852                           ; 3 bytes @ 0x5E
  1853  0000BE                     	ds	2
  1854  0000C0                     MiMAC_ReceivedPacket@FrameCounter:
  1855                           	opt stack 0
  1856                           
  1857                           ; 4 bytes @ 0x60
  1858  0000C0                     	ds	1
  1859  0000C1                     floor@i:
  1860                           	opt stack 0
  1861                           
  1862                           ; 3 bytes @ 0x61
  1863  0000C1                     	ds	3
  1864  0000C4                     MiMAC_ReceivedPacket@k:
  1865                           	opt stack 0
  1866  0000C4                     floor@expon:
  1867                           	opt stack 0
  1868                           
  1869                           ; 2 bytes @ 0x64
  1870  0000C4                     	ds	1
  1871  0000C5                     MiMAC_ReceivedPacket@j:
  1872                           	opt stack 0
  1873                           
  1874                           ; 1 bytes @ 0x65
  1875  0000C5                     	ds	1
  1876  0000C6                     ?___ftneg:
  1877                           	opt stack 0
  1878  0000C6                     MiMAC_ReceivedPacket@PayloadIndex:
  1879                           	opt stack 0
  1880  0000C6                     ___ftneg@f1:
  1881                           	opt stack 0
  1882                           
  1883                           ; 3 bytes @ 0x66
  1884  0000C6                     	ds	1
  1885  0000C7                     MiMAC_ReceivedPacket@i:
  1886                           	opt stack 0
  1887                           
  1888                           ; 1 bytes @ 0x67
  1889  0000C7                     	ds	1
  1890  0000C8                     ??_MiWiTasks:
  1891                           
  1892                           ; 0 bytes @ 0x68
  1893  0000C8                     	ds	1
  1894  0000C9                     ?___ftmul:
  1895                           	opt stack 0
  1896  0000C9                     ___ftmul@f1:
  1897                           	opt stack 0
  1898                           
  1899                           ; 3 bytes @ 0x69
  1900  0000C9                     	ds	3
  1901  0000CC                     ___ftmul@f2:
  1902                           	opt stack 0
  1903                           
  1904                           ; 3 bytes @ 0x6C
  1905  0000CC                     	ds	4
  1906  0000D0                     ??_do_NETWORK_REGISTER:
  1907  0000D0                     ??_do_UPDATE:
  1908  0000D0                     ??_do_POWER_TEST:
  1909  0000D0                     OpenSocket@i:
  1910                           	opt stack 0
  1911                           
  1912                           ; 1 bytes @ 0x70
  1913  0000D0                     	ds	1
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           
  1921                           	psect	cstackCOMRAM
  1922  000001                     __pcstackCOMRAM:
  1923                           	opt stack 0
  1924  000001                     ??_SYS_InterruptLow:
  1925  000001                     
  1926                           ; 1 bytes @ 0x0
  1927  000001                     	ds	17
  1928  000012                     ?i2_MiWi_TickGet:
  1929                           	opt stack 0
  1930  000012                     i2SPIPut@i:
  1931                           	opt stack 0
  1932                           
  1933                           ; 1 bytes @ 0x11
  1934  000012                     	ds	1
  1935  000013                     i2SPIPut@v:
  1936                           	opt stack 0
  1937                           
  1938                           ; 1 bytes @ 0x12
  1939  000013                     	ds	1
  1940  000014                     i2RegisterRead@value:
  1941                           	opt stack 0
  1942  000014                     i2WriteFIFO@Data:
  1943                           	opt stack 0
  1944  000014                     i2RegisterSet@setting:
  1945                           	opt stack 0
  1946                           
  1947                           ; 2 bytes @ 0x13
  1948  000014                     	ds	1
  1949  000015                     i2RegisterRead@IRQ1select:
  1950                           	opt stack 0
  1951  000015                     i2WriteFIFO@IRQ1select:
  1952                           	opt stack 0
  1953                           
  1954                           ; 1 bytes @ 0x14
  1955  000015                     	ds	1
  1956  000016                     ??i2_MiWi_TickGet:
  1957  000016                     i2RegisterSet@IRQ1select:
  1958                           	opt stack 0
  1959  000016                     i2RegisterRead@IRQ0select:
  1960                           	opt stack 0
  1961  000016                     i2WriteFIFO@IRQ0select:
  1962                           	opt stack 0
  1963                           
  1964                           ; 1 bytes @ 0x15
  1965  000016                     	ds	1
  1966  000017                     i2MiWi_TickGet@failureCounter:
  1967                           	opt stack 0
  1968  000017                     i2RegisterSet@IRQ0select:
  1969                           	opt stack 0
  1970  000017                     i2RegisterRead@address:
  1971                           	opt stack 0
  1972                           
  1973                           ; 1 bytes @ 0x16
  1974  000017                     	ds	1
  1975  000018                     i2SetRFMode@mode:
  1976                           	opt stack 0
  1977  000018                     i2MiWi_TickGet@currentTime:
  1978                           	opt stack 0
  1979                           
  1980                           ; 4 bytes @ 0x17
  1981  000018                     	ds	4
  1982  00001C                     i2TxPacket@CCA:
  1983                           	opt stack 0
  1984                           
  1985                           ; 1 bytes @ 0x1B
  1986  00001C                     	ds	1
  1987  00001D                     ??i2_TxPacket:
  1988                           
  1989                           ; 0 bytes @ 0x1C
  1990  00001D                     	ds	8
  1991  000025                     i2TxPacket@t1:
  1992                           	opt stack 0
  1993                           
  1994                           ; 4 bytes @ 0x24
  1995  000025                     	ds	4
  1996  000029                     i2TxPacket@t2:
  1997                           	opt stack 0
  1998                           
  1999                           ; 4 bytes @ 0x28
  2000  000029                     	ds	4
  2001  00002D                     i2TxPacket@status:
  2002                           	opt stack 0
  2003                           
  2004                           ; 1 bytes @ 0x2C
  2005  00002D                     	ds	1
  2006  00002E                     i2TxPacket@CCARetries:
  2007                           	opt stack 0
  2008                           
  2009                           ; 1 bytes @ 0x2D
  2010  00002E                     	ds	1
  2011  00002F                     i2TxPacket@reTry:
  2012                           	opt stack 0
  2013                           
  2014                           ; 1 bytes @ 0x2E
  2015  00002F                     	ds	1
  2016  000030                     i2TxPacket@allowedTxFailure:
  2017                           	opt stack 0
  2018                           
  2019                           ; 1 bytes @ 0x2F
  2020  000030                     	ds	1
  2021  000031                     i2TxPacket@TxPacketLen:
  2022                           	opt stack 0
  2023                           
  2024                           ; 1 bytes @ 0x30
  2025  000031                     	ds	1
  2026  000032                     i2TxPacket@i:
  2027                           	opt stack 0
  2028                           
  2029                           ; 1 bytes @ 0x31
  2030  000032                     	ds	1
  2031  000033                     i2TxPacket@rssival:
  2032                           	opt stack 0
  2033                           
  2034                           ; 1 bytes @ 0x32
  2035  000033                     	ds	1
  2036                           tblptru	equ	0xFF8
  2037                           tblptrh	equ	0xFF7
  2038                           tblptrl	equ	0xFF6
  2039                           tablat	equ	0xFF5
  2040                           postinc0	equ	0xFEE
  2041                           wreg	equ	0xFE8
  2042                           
  2043 ;;
  2044 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2045 ;;
  2046 ;; *************** function _main *****************
  2047 ;; Defined at:
  2048 ;;		line 128 in file "src/main.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  j               1   25[BANK3 ] unsigned char 
  2053 ;;  x               2   23[BANK3 ] int 
  2054 ;;  scanresult      1   26[BANK3 ] volatile unsigned char 
  2055 ;;  best_RSSI       1   22[BANK3 ] unsigned char 
  2056 ;;  Status          1   21[BANK3 ] unsigned char 
  2057 ;;  best_candida    1   20[BANK3 ] unsigned char 
  2058 ;;  result          1   19[BANK3 ] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;		None               void
  2061 ;; Registers used:
  2062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Locals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;      Totals:         0       0       0       0      10       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;Total ram usage:       10 bytes
  2073 ;; Hardware stack levels required when called:   18
  2074 ;; This function calls:
  2075 ;;		_MiApp_ConnectionMode
  2076 ;;		_MiApp_DiscardMessage
  2077 ;;		_MiApp_EstablishConnection
  2078 ;;		_MiApp_MessageAvailable
  2079 ;;		_MiApp_ProtocolInit
  2080 ;;		_MiApp_SearchConnection
  2081 ;;		_MiApp_TransceiverPowerState
  2082 ;;		_MiMAC_SetPower
  2083 ;;		_MiWiTasks
  2084 ;;		_SYSTEM_Initialize
  2085 ;;		_adapt_power_level
  2086 ;;		_do_NETWORK_REGISTER
  2087 ;;		_process_update_answer
  2088 ;;		_read_sensors
  2089 ;;		_security_force_key_update
  2090 ;;		_send_initial_update
  2091 ;;		_send_periodical_update
  2092 ;;		_timer_reset
  2093 ;;		_wait_for_1_sec
  2094 ;; This function is called by:
  2095 ;;		Startup code after reset
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text0
  2100  0051B8                     __ptext0:
  2101                           	opt stack 0
  2102  0051B8                     _main:
  2103                           	opt stack 13
  2104                           
  2105                           ;main.c: 130: SYSTEM_Initialize();
  2106                           
  2107                           ;incstack = 0
  2108  0051B8  EC3A  F038         	call	_SYSTEM_Initialize	;wreg free
  2109                           
  2110                           ;main.c: 139: myAppState = STATE_INIT;
  2111  0051BC  0E00               	movlw	0
  2112  0051BE  0101               	movlb	1	; () banked
  2113  0051C0  6F6A               	movwf	_myAppState& (0+255),b
  2114                           
  2115                           ; BSR set to: 1
  2116                           ;main.c: 141: bool result;
  2117                           ;main.c: 143: myLongAddress[0] = myMODEL[0];
  2118  0051C2  0EF4               	movlw	244
  2119  0051C4  6EF6               	movwf	tblptrl,c
  2120  0051C6                     	if	1	;There is more than 1 active tblptr byte
  2121  0051C6  0EFF               	movlw	255
  2122  0051C8  6EF7               	movwf	tblptrh,c
  2123  0051CA                     	endif
  2124  0051CA                     	if	1	;There are 3 active tblptr bytes
  2125  0051CA  0E01               	movlw	1
  2126  0051CC  6EF8               	movwf	tblptru,c
  2127  0051CE                     	endif
  2128  0051CE  0008               	tblrd		*
  2129  0051D0  CFF5 F1C8          	movff	tablat,_myLongAddress
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;main.c: 144: myLongAddress[1] = myMODEL[1];
  2133  0051D4  0EF5               	movlw	245
  2134  0051D6  6EF6               	movwf	tblptrl,c
  2135  0051D8  0EFF               	movlw	255
  2136  0051DA  6EF7               	movwf	tblptrh,c
  2137  0051DC  0E01               	movlw	1
  2138  0051DE  6EF8               	movwf	tblptru,c
  2139  0051E0  0008               	tblrd		*
  2140  0051E2  CFF5 F1C9          	movff	tablat,_myLongAddress+1
  2141                           
  2142                           ; BSR set to: 1
  2143                           ;main.c: 145: myLongAddress[2] = myUID[0];
  2144  0051E6  0EF6               	movlw	246
  2145  0051E8  6EF6               	movwf	tblptrl,c
  2146  0051EA                     	if	1	;There is more than 1 active tblptr byte
  2147  0051EA  0EFF               	movlw	255
  2148  0051EC  6EF7               	movwf	tblptrh,c
  2149  0051EE                     	endif
  2150  0051EE                     	if	1	;There are 3 active tblptr bytes
  2151  0051EE  0E01               	movlw	1
  2152  0051F0  6EF8               	movwf	tblptru,c
  2153  0051F2                     	endif
  2154  0051F2  0008               	tblrd		*
  2155  0051F4  CFF5 F1CA          	movff	tablat,_myLongAddress+2
  2156                           
  2157                           ; BSR set to: 1
  2158                           ;main.c: 146: myLongAddress[3] = myUID[1];
  2159  0051F8  0EF7               	movlw	247
  2160  0051FA  6EF6               	movwf	tblptrl,c
  2161  0051FC  0EFF               	movlw	255
  2162  0051FE  6EF7               	movwf	tblptrh,c
  2163  005200  0E01               	movlw	1
  2164  005202  6EF8               	movwf	tblptru,c
  2165  005204  0008               	tblrd		*
  2166  005206  CFF5 F1CB          	movff	tablat,_myLongAddress+3
  2167                           
  2168                           ; BSR set to: 1
  2169                           ;main.c: 149: for (int x=0; x<8; x++)
  2170  00520A  0E00               	movlw	0
  2171  00520C  0103               	movlb	3	; () banked
  2172  00520E  6FEC               	movwf	(main@x+1)& (0+255),b
  2173  005210  0E00               	movlw	0
  2174  005212  6FEB               	movwf	main@x& (0+255),b
  2175  005214                     l14746:
  2176                           
  2177                           ; BSR set to: 3
  2178  005214  0103               	movlb	3	; () banked
  2179  005216  BFEC               	btfsc	(main@x+1)& (0+255),7,b
  2180  005218  D008               	goto	l14750
  2181  00521A  0103               	movlb	3	; () banked
  2182  00521C  51EC               	movf	(main@x+1)& (0+255),w,b
  2183  00521E  E11E               	bnz	l14756
  2184  005220  0E08               	movlw	8
  2185  005222  0103               	movlb	3	; () banked
  2186  005224  5DEB               	subwf	main@x& (0+255),w,b
  2187  005226  B0D8               	btfsc	status,0,c
  2188  005228  D019               	goto	l14756
  2189  00522A                     l14750:
  2190                           
  2191                           ; BSR set to: 3
  2192                           ;main.c: 150: mySecurityKey[x] = StaticSecurityKey[x];
  2193  00522A  0EEC               	movlw	236
  2194  00522C  0103               	movlb	3	; () banked
  2195  00522E  25EB               	addwf	main@x& (0+255),w,b
  2196  005230  6EF6               	movwf	tblptrl,c
  2197  005232  0E1F               	movlw	31
  2198  005234  21EC               	addwfc	(main@x+1)& (0+255),w,b
  2199  005236  6EF7               	movwf	tblptrh,c
  2200  005238  6AF8               	clrf	tblptru,c
  2201  00523A  0E00               	movlw	0
  2202  00523C  22F8               	addwfc	tblptru,f,c
  2203  00523E  0E36               	movlw	low _mySecurityKey
  2204  005240  0103               	movlb	3	; () banked
  2205  005242  25EB               	addwf	main@x& (0+255),w,b
  2206  005244  6ED9               	movwf	fsr2l,c
  2207  005246  0E01               	movlw	high _mySecurityKey
  2208  005248  0103               	movlb	3	; () banked
  2209  00524A  21EC               	addwfc	(main@x+1)& (0+255),w,b
  2210  00524C  6EDA               	movwf	fsr2h,c
  2211  00524E  0008               	tblrd		*
  2212  005250  CFF5 FFDF          	movff	tablat,indf2
  2213                           
  2214                           ; BSR set to: 3
  2215  005254  0103               	movlb	3	; () banked
  2216  005256  4BEB               	infsnz	main@x& (0+255),f,b
  2217  005258  2BEC               	incf	(main@x+1)& (0+255),f,b
  2218  00525A  D7DC               	goto	l14746
  2219  00525C                     l14756:
  2220                           
  2221                           ; BSR set to: 3
  2222                           ;main.c: 152: MiApp_ProtocolInit(0);
  2223  00525C  0E00               	movlw	0
  2224  00525E  EC17  F037         	call	_MiApp_ProtocolInit
  2225                           
  2226                           ;main.c: 153: MiMAC_SetPower(0x04);
  2227  005262  0E04               	movlw	4
  2228  005264  ECDC  F044         	call	_MiMAC_SetPower
  2229  005268                     l14760:
  2230                           
  2231                           ;main.c: 159: {
  2232                           ;main.c: 160: scanresult = MiApp_SearchConnection(14, 0x00000001);
  2233  005268  0E01               	movlw	1
  2234  00526A  0101               	movlb	1	; () banked
  2235  00526C  6FE8               	movwf	MiApp_SearchConnection@ChannelMap& (0+255),b
  2236  00526E  0E00               	movlw	0
  2237  005270  6FE9               	movwf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),b
  2238  005272  0E00               	movlw	0
  2239  005274  6FEA               	movwf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),b
  2240  005276  0E00               	movlw	0
  2241  005278  6FEB               	movwf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),b
  2242  00527A  0E0E               	movlw	14
  2243  00527C  ECA1  F02D         	call	_MiApp_SearchConnection
  2244  005280  0103               	movlb	3	; () banked
  2245  005282  6FEE               	movwf	main@scanresult& (0+255),b	;volatile
  2246                           
  2247                           ; BSR set to: 3
  2248                           ;main.c: 161: if (scanresult == 0)
  2249  005284  0103               	movlb	3	; () banked
  2250  005286  51EE               	movf	main@scanresult& (0+255),w,b	;volatile
  2251  005288  0103               	movlb	3	; () banked
  2252  00528A  A4D8               	btfss	status,2,c
  2253  00528C  D008               	goto	l14770
  2254                           
  2255                           ; BSR set to: 3
  2256                           ;main.c: 162: {
  2257                           ;main.c: 165: LATCbits.LATC0 = 0;
  2258  00528E  908B               	bcf	3979,0,c	;volatile
  2259                           
  2260                           ; BSR set to: 3
  2261                           ;main.c: 166: timer_reset();
  2262  005290  ECD9  F045         	call	_timer_reset	;wreg free
  2263  005294                     l14768:
  2264  005294  0101               	movlb	1	; () banked
  2265  005296  516B               	movf	_timer_flag& (0+255),w,b	;volatile
  2266  005298  A4D8               	btfss	status,2,c
  2267  00529A  D7E6               	goto	l14760
  2268  00529C  D7FB               	goto	l14768
  2269  00529E                     l14770:
  2270                           
  2271                           ;main.c: 173: }
  2272                           ;main.c: 174: }
  2273                           ;main.c: 175: uint8_t best_RSSI = 0;
  2274  00529E  0E00               	movlw	0
  2275  0052A0  0103               	movlb	3	; () banked
  2276  0052A2  6FEA               	movwf	main@best_RSSI& (0+255),b
  2277                           
  2278                           ;main.c: 176: uint8_t best_candidate;
  2279                           ;main.c: 177: for(uint8_t j = 0; j < scanresult; j++)
  2280  0052A4  0E00               	movlw	0
  2281  0052A6  0103               	movlb	3	; () banked
  2282  0052A8  6FED               	movwf	main@j& (0+255),b
  2283  0052AA  D03A               	goto	l14782
  2284  0052AC                     l14772:
  2285                           
  2286                           ; BSR set to: 3
  2287                           ;main.c: 178: {
  2288                           ;main.c: 179: if (ActiveScanResults[j].RSSIValue >= best_RSSI && ActiveScanResults[j].PA
      +                          NID.Val == 0x1337)
  2289  0052AC  0103               	movlb	3	; () banked
  2290  0052AE  51ED               	movf	main@j& (0+255),w,b
  2291  0052B0  0D0A               	mullw	10
  2292  0052B2  0E07               	movlw	7
  2293  0052B4  26F3               	addwf	prodl,f,c
  2294  0052B6  0E00               	movlw	0
  2295  0052B8  22F4               	addwfc	prodh,f,c
  2296  0052BA  0E00               	movlw	low _ActiveScanResults
  2297  0052BC  24F3               	addwf	prodl,w,c
  2298  0052BE  6ED9               	movwf	fsr2l,c
  2299  0052C0  0E03               	movlw	high _ActiveScanResults
  2300  0052C2  20F4               	addwfc	prodh,w,c
  2301  0052C4  6EDA               	movwf	fsr2h,c
  2302  0052C6  0103               	movlb	3	; () banked
  2303  0052C8  51EA               	movf	main@best_RSSI& (0+255),w,b
  2304  0052CA  5CDE               	subwf	postinc2,w,c
  2305  0052CC  A0D8               	btfss	status,0,c
  2306  0052CE  D026               	goto	l14780
  2307                           
  2308                           ; BSR set to: 3
  2309  0052D0  0103               	movlb	3	; () banked
  2310  0052D2  51ED               	movf	main@j& (0+255),w,b
  2311  0052D4  0D0A               	mullw	10
  2312  0052D6  0E05               	movlw	5
  2313  0052D8  26F3               	addwf	prodl,f,c
  2314  0052DA  0E00               	movlw	0
  2315  0052DC  22F4               	addwfc	prodh,f,c
  2316  0052DE  0E00               	movlw	low _ActiveScanResults
  2317  0052E0  24F3               	addwf	prodl,w,c
  2318  0052E2  6ED9               	movwf	fsr2l,c
  2319  0052E4  0E03               	movlw	high _ActiveScanResults
  2320  0052E6  20F4               	addwfc	prodh,w,c
  2321  0052E8  6EDA               	movwf	fsr2h,c
  2322  0052EA  0E37               	movlw	55
  2323  0052EC  18DE               	xorwf	postinc2,w,c
  2324  0052EE  E116               	bnz	l14780
  2325  0052F0  0E13               	movlw	19
  2326  0052F2  18DE               	xorwf	postinc2,w,c
  2327  0052F4  A4D8               	btfss	status,2,c
  2328  0052F6  D012               	goto	l14780
  2329                           
  2330                           ; BSR set to: 3
  2331                           ;main.c: 180: {
  2332                           ;main.c: 181: best_RSSI = ActiveScanResults[j].RSSIValue;
  2333  0052F8  0103               	movlb	3	; () banked
  2334  0052FA  51ED               	movf	main@j& (0+255),w,b
  2335  0052FC  0D0A               	mullw	10
  2336  0052FE  0E07               	movlw	7
  2337  005300  26F3               	addwf	prodl,f,c
  2338  005302  0E00               	movlw	0
  2339  005304  22F4               	addwfc	prodh,f,c
  2340  005306  0E00               	movlw	low _ActiveScanResults
  2341  005308  24F3               	addwf	prodl,w,c
  2342  00530A  6ED9               	movwf	fsr2l,c
  2343  00530C  0E03               	movlw	high _ActiveScanResults
  2344  00530E  20F4               	addwfc	prodh,w,c
  2345  005310  6EDA               	movwf	fsr2h,c
  2346  005312  50DF               	movf	indf2,w,c
  2347  005314  0103               	movlb	3	; () banked
  2348  005316  6FEA               	movwf	main@best_RSSI& (0+255),b
  2349                           
  2350                           ; BSR set to: 3
  2351                           ;main.c: 182: best_candidate = j;
  2352  005318  C3ED  F3E8         	movff	main@j,main@best_candidate
  2353  00531C                     l14780:
  2354                           
  2355                           ; BSR set to: 3
  2356  00531C  0103               	movlb	3	; () banked
  2357  00531E  2BED               	incf	main@j& (0+255),f,b
  2358  005320                     l14782:
  2359                           
  2360                           ; BSR set to: 3
  2361  005320  0103               	movlb	3	; () banked
  2362  005322  51EE               	movf	main@scanresult& (0+255),w,b	;volatile
  2363  005324  0103               	movlb	3	; () banked
  2364  005326  5DED               	subwf	main@j& (0+255),w,b
  2365  005328  A0D8               	btfss	status,0,c
  2366  00532A  D7C0               	goto	l14772
  2367                           
  2368                           ; BSR set to: 3
  2369                           ;main.c: 183: }
  2370                           ;main.c: 184: }
  2371                           ;main.c: 188: uint8_t Status = MiApp_EstablishConnection(best_candidate, 0x00);
  2372                           
  2373                           ; BSR set to: 3
  2374  00532C  0E00               	movlw	0
  2375  00532E  0101               	movlb	1	; () banked
  2376  005330  6FF5               	movwf	MiApp_EstablishConnection@Mode& (0+255),b
  2377  005332  0103               	movlb	3	; () banked
  2378  005334  51E8               	movf	main@best_candidate& (0+255),w,b
  2379  005336  EC3E  F025         	call	_MiApp_EstablishConnection
  2380  00533A  0103               	movlb	3	; () banked
  2381  00533C  6FE9               	movwf	main@Status& (0+255),b
  2382                           
  2383                           ; BSR set to: 3
  2384                           ;main.c: 189: if(Status == 0xFF)
  2385  00533E  0103               	movlb	3	; () banked
  2386  005340  29E9               	incf	main@Status& (0+255),w,b
  2387  005342  A4D8               	btfss	status,2,c
  2388  005344  D00B               	goto	l14796
  2389                           
  2390                           ; BSR set to: 3
  2391                           ;main.c: 190: {
  2392                           ;main.c: 193: myAppState = STATE_PROBLEM;
  2393  005346  0E02               	movlw	2
  2394  005348  0101               	movlb	1	; () banked
  2395  00534A  6F6A               	movwf	_myAppState& (0+255),b
  2396                           
  2397                           ; BSR set to: 1
  2398                           ;main.c: 194: LATCbits.LATC0 = 0;
  2399  00534C  908B               	bcf	3979,0,c	;volatile
  2400                           
  2401                           ; BSR set to: 1
  2402                           ;main.c: 195: timer_reset();
  2403  00534E  ECD9  F045         	call	_timer_reset	;wreg free
  2404  005352                     l14794:
  2405  005352  0101               	movlb	1	; () banked
  2406  005354  516B               	movf	_timer_flag& (0+255),w,b	;volatile
  2407  005356  B4D8               	btfsc	status,2,c
  2408  005358  D7FC               	goto	l14794
  2409                           
  2410                           ; BSR set to: 1
  2411  00535A  00FF               	reset		;# 
  2412  00535C                     l14796:
  2413                           
  2414                           ;main.c: 199: }
  2415                           ;main.c: 200: MiApp_ConnectionMode(0x03);
  2416  00535C  0E03               	movlw	3
  2417  00535E  EC64  F045         	call	_MiApp_ConnectionMode
  2418                           
  2419                           ;main.c: 207: result = do_NETWORK_REGISTER(&myLongAddress[0],0xff);
  2420  005362  0EC8               	movlw	low _myLongAddress
  2421  005364  0101               	movlb	1	; () banked
  2422  005366  6FF4               	movwf	do_NETWORK_REGISTER@p_uid& (0+255),b
  2423  005368  0E01               	movlw	high _myLongAddress
  2424  00536A  0101               	movlb	1	; () banked
  2425  00536C  6FF5               	movwf	(do_NETWORK_REGISTER@p_uid+1)& (0+255),b
  2426  00536E  0EFF               	movlw	255
  2427  005370  0101               	movlb	1	; () banked
  2428  005372  6FF6               	movwf	do_NETWORK_REGISTER@sleeping_device& (0+255),b
  2429  005374  EC58  F030         	call	_do_NETWORK_REGISTER	;wreg free
  2430  005378  0103               	movlb	3	; () banked
  2431  00537A  6FE7               	movwf	main@result& (0+255),b
  2432                           
  2433                           ; BSR set to: 3
  2434                           ;main.c: 211: if (!result)
  2435  00537C  0103               	movlb	3	; () banked
  2436  00537E  51E7               	movf	main@result& (0+255),w,b
  2437  005380  0103               	movlb	3	; () banked
  2438  005382  A4D8               	btfss	status,2,c
  2439  005384  D00B               	goto	l14810
  2440                           
  2441                           ; BSR set to: 3
  2442                           ;main.c: 212: {
  2443                           ;main.c: 215: myAppState = STATE_PROBLEM;
  2444  005386  0E02               	movlw	2
  2445  005388  0101               	movlb	1	; () banked
  2446  00538A  6F6A               	movwf	_myAppState& (0+255),b
  2447                           
  2448                           ; BSR set to: 1
  2449                           ;main.c: 216: LATCbits.LATC0 = 0;
  2450  00538C  908B               	bcf	3979,0,c	;volatile
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;main.c: 217: timer_reset();
  2454  00538E  ECD9  F045         	call	_timer_reset	;wreg free
  2455  005392                     l14808:
  2456  005392  0101               	movlb	1	; () banked
  2457  005394  516B               	movf	_timer_flag& (0+255),w,b	;volatile
  2458  005396  B4D8               	btfsc	status,2,c
  2459  005398  D7FC               	goto	l14808
  2460                           
  2461                           ; BSR set to: 1
  2462  00539A  00FF               	reset		;# 
  2463  00539C                     l14810:
  2464                           
  2465                           ;main.c: 221: }
  2466                           ;main.c: 224: security_force_key_update();
  2467  00539C  EC11  F044         	call	_security_force_key_update	;wreg free
  2468                           
  2469                           ;main.c: 226: myAppState = STATE_READY;
  2470  0053A0  0E01               	movlw	1
  2471  0053A2  0101               	movlb	1	; () banked
  2472  0053A4  6F6A               	movwf	_myAppState& (0+255),b
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;main.c: 230: m_power = adapt_power_level(0x04, 33);
  2476  0053A6  0E21               	movlw	33
  2477  0053A8  0101               	movlb	1	; () banked
  2478  0053AA  6FFB               	movwf	adapt_power_level@minimal_rssi& (0+255),b
  2479  0053AC  0E04               	movlw	4
  2480  0053AE  ECFC  F042         	call	_adapt_power_level
  2481  0053B2  0101               	movlb	1	; () banked
  2482  0053B4  6F69               	movwf	_m_power& (0+255),b
  2483                           
  2484                           ; BSR set to: 1
  2485                           ;main.c: 234: m_uptime_seconds = 0;
  2486  0053B6  0E00               	movlw	0
  2487  0053B8  0101               	movlb	1	; () banked
  2488  0053BA  6F4A               	movwf	_m_uptime_seconds& (0+255),b	;volatile
  2489  0053BC  0E00               	movlw	0
  2490  0053BE  6F4B               	movwf	(_m_uptime_seconds+1)& (0+255),b	;volatile
  2491  0053C0  0E00               	movlw	0
  2492  0053C2  6F4C               	movwf	(_m_uptime_seconds+2)& (0+255),b	;volatile
  2493  0053C4  0E00               	movlw	0
  2494  0053C6  6F4D               	movwf	(_m_uptime_seconds+3)& (0+255),b	;volatile
  2495                           
  2496                           ; BSR set to: 1
  2497                           ;main.c: 236: read_sensors();
  2498  0053C8  EC59  F027         	call	_read_sensors	;wreg free
  2499                           
  2500                           ;main.c: 237: while (!send_initial_update())
  2501  0053CC  D014               	goto	l14836
  2502  0053CE                     l14820:
  2503                           
  2504                           ;main.c: 238: {
  2505                           ;main.c: 240: consecutive_fails++;
  2506  0053CE  0101               	movlb	1	; () banked
  2507  0053D0  2B66               	incf	_consecutive_fails& (0+255),f,b
  2508                           
  2509                           ; BSR set to: 1
  2510                           ;main.c: 241: if (consecutive_fails >= 3)
  2511  0053D2  0E02               	movlw	2
  2512  0053D4  0101               	movlb	1	; () banked
  2513  0053D6  6566               	cpfsgt	_consecutive_fails& (0+255),b
  2514  0053D8  D00C               	goto	l14834
  2515                           
  2516                           ; BSR set to: 1
  2517                           ;main.c: 242: {
  2518                           ;main.c: 244: myAppState = STATE_PROBLEM;
  2519  0053DA  0E02               	movlw	2
  2520  0053DC  0101               	movlb	1	; () banked
  2521  0053DE  6F6A               	movwf	_myAppState& (0+255),b
  2522                           
  2523                           ; BSR set to: 1
  2524                           ;main.c: 245: LATCbits.LATC0 = 0;
  2525  0053E0  908B               	bcf	3979,0,c	;volatile
  2526                           
  2527                           ; BSR set to: 1
  2528                           ;main.c: 246: MiApp_TransceiverPowerState(0x00);
  2529  0053E2  0E00               	movlw	0
  2530  0053E4  ECBE  F044         	call	_MiApp_TransceiverPowerState
  2531                           
  2532                           ;main.c: 247: timer_reset();
  2533  0053E8  ECD9  F045         	call	_timer_reset	;wreg free
  2534                           
  2535                           ;main.c: 248: PIR3bits.RTCCIF = 0;
  2536  0053EC  90A4               	bcf	4004,0,c	;volatile
  2537  0053EE  0003               	sleep		;# 
  2538  0053F0  00FF               	reset		;# 
  2539  0053F2                     l14834:
  2540                           
  2541                           ;main.c: 252: }
  2542                           ;main.c: 253: wait_for_1_sec();
  2543  0053F2  EC16  F045         	call	_wait_for_1_sec	;wreg free
  2544  0053F6                     l14836:
  2545  0053F6  EC7B  F016         	call	_send_initial_update	;wreg free
  2546  0053FA  0900               	iorlw	0
  2547  0053FC  A4D8               	btfss	status,2,c
  2548  0053FE  D037               	goto	l14878
  2549  005400  D7E6               	goto	l14820
  2550  005402                     l14840:
  2551                           
  2552                           ; BSR set to: 1
  2553                           ;main.c: 260: {
  2554                           ;main.c: 263: process_update_answer();
  2555  005402  ECA2  F02E         	call	_process_update_answer	;wreg free
  2556                           
  2557                           ;main.c: 267: LATCbits.LATC0 = 0;
  2558  005406  908B               	bcf	3979,0,c	;volatile
  2559                           
  2560                           ;main.c: 268: MiApp_TransceiverPowerState(0x00);
  2561  005408  0E00               	movlw	0
  2562  00540A  ECBE  F044         	call	_MiApp_TransceiverPowerState
  2563                           
  2564                           ;main.c: 269: timer_reset();
  2565  00540E  ECD9  F045         	call	_timer_reset	;wreg free
  2566                           
  2567                           ;main.c: 270: while (!timer_flag)
  2568  005412  D001               	goto	l14848
  2569  005414                     l1088:
  2570                           
  2571                           ; BSR set to: 1
  2572  005414  0003               	sleep		;# 
  2573  005416                     l14848:
  2574  005416  0101               	movlb	1	; () banked
  2575  005418  516B               	movf	_timer_flag& (0+255),w,b	;volatile
  2576  00541A  B4D8               	btfsc	status,2,c
  2577  00541C  D7FB               	goto	l1088
  2578                           
  2579                           ; BSR set to: 1
  2580                           ;main.c: 274: }
  2581                           ;main.c: 275: LATCbits.LATC0 = 1;
  2582  00541E  808B               	bsf	3979,0,c	;volatile
  2583                           
  2584                           ; BSR set to: 1
  2585                           ;main.c: 276: read_sensors();
  2586  005420  EC59  F027         	call	_read_sensors	;wreg free
  2587                           
  2588                           ;main.c: 277: MiApp_TransceiverPowerState(0x01);
  2589  005424  0E01               	movlw	1
  2590  005426  ECBE  F044         	call	_MiApp_TransceiverPowerState
  2591                           
  2592                           ;main.c: 278: if(MiApp_MessageAvailable())
  2593  00542A  EC07  F046         	call	_MiApp_MessageAvailable	;wreg free
  2594  00542E  0900               	iorlw	0
  2595  005430  A4D8               	btfss	status,2,c
  2596                           
  2597                           ;main.c: 279: MiApp_DiscardMessage();
  2598  005432  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
  2599                           
  2600                           ;main.c: 280: MiWiTasks();
  2601  005436  EC82  F010         	call	_MiWiTasks	;wreg free
  2602                           
  2603                           ;main.c: 281: while (!send_periodical_update())
  2604  00543A  D014               	goto	l14876
  2605  00543C                     l14860:
  2606                           
  2607                           ;main.c: 282: {
  2608                           ;main.c: 284: consecutive_fails++;
  2609  00543C  0101               	movlb	1	; () banked
  2610  00543E  2B66               	incf	_consecutive_fails& (0+255),f,b
  2611                           
  2612                           ; BSR set to: 1
  2613                           ;main.c: 285: if (consecutive_fails >= 3)
  2614  005440  0E02               	movlw	2
  2615  005442  0101               	movlb	1	; () banked
  2616  005444  6566               	cpfsgt	_consecutive_fails& (0+255),b
  2617  005446  D00C               	goto	l14874
  2618                           
  2619                           ; BSR set to: 1
  2620                           ;main.c: 286: {
  2621                           ;main.c: 288: myAppState = STATE_PROBLEM;
  2622  005448  0E02               	movlw	2
  2623  00544A  0101               	movlb	1	; () banked
  2624  00544C  6F6A               	movwf	_myAppState& (0+255),b
  2625                           
  2626                           ; BSR set to: 1
  2627                           ;main.c: 289: LATCbits.LATC0 = 0;
  2628  00544E  908B               	bcf	3979,0,c	;volatile
  2629                           
  2630                           ; BSR set to: 1
  2631                           ;main.c: 290: MiApp_TransceiverPowerState(0x00);
  2632  005450  0E00               	movlw	0
  2633  005452  ECBE  F044         	call	_MiApp_TransceiverPowerState
  2634                           
  2635                           ;main.c: 291: timer_reset();
  2636  005456  ECD9  F045         	call	_timer_reset	;wreg free
  2637                           
  2638                           ;main.c: 292: PIR3bits.RTCCIF = 0;
  2639  00545A  90A4               	bcf	4004,0,c	;volatile
  2640  00545C  0003               	sleep		;# 
  2641  00545E  00FF               	reset		;# 
  2642  005460                     l14874:
  2643                           
  2644                           ;main.c: 296: }
  2645                           ;main.c: 297: wait_for_1_sec();
  2646  005460  EC16  F045         	call	_wait_for_1_sec	;wreg free
  2647  005464                     l14876:
  2648  005464  EC8A  F01A         	call	_send_periodical_update	;wreg free
  2649  005468  0900               	iorlw	0
  2650  00546A  B4D8               	btfsc	status,2,c
  2651  00546C  D7E7               	goto	l14860
  2652  00546E                     l14878:
  2653                           
  2654                           ;main.c: 298: }
  2655                           ;main.c: 299: consecutive_fails = 0;
  2656  00546E  0E00               	movlw	0
  2657  005470  0101               	movlb	1	; () banked
  2658  005472  6F66               	movwf	_consecutive_fails& (0+255),b
  2659                           
  2660                           ; BSR set to: 1
  2661  005474  D7C6               	goto	l14840
  2662  005476                     __end_of_main:
  2663                           	opt stack 0
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           prodh	equ	0xFF4
  2669                           prodl	equ	0xFF3
  2670                           postinc0	equ	0xFEE
  2671                           wreg	equ	0xFE8
  2672                           indf2	equ	0xFDF
  2673                           postinc2	equ	0xFDE
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _send_periodical_update *****************
  2679 ;; Defined at:
  2680 ;;		line 587 in file "src/main.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  tmp2            3    0[BANK3 ] float 
  2685 ;;  tmp             2   15[BANK3 ] unsigned int 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      unsigned char 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;      Locals:         0       0       0       0      17       0       0       0       0       0       0       0       
      +0       0       0       0
  2697 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;      Totals:         0       0       1       0      17       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;Total ram usage:       18 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:   16
  2702 ;; This function calls:
  2703 ;;		___ftadd
  2704 ;;		___ftdiv
  2705 ;;		___ftmul
  2706 ;;		___ftneg
  2707 ;;		___fttol
  2708 ;;		___lldiv
  2709 ;;		___lltoft
  2710 ;;		___lmul
  2711 ;;		_do_UPDATE
  2712 ;;		_encode_ufixed16_variable
  2713 ;;		_encode_uint16_variable
  2714 ;;		_encode_uint8_variable
  2715 ;;		_floor
  2716 ;;		_memcpy
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text1
  2723  003514                     __ptext1:
  2724                           	opt stack 0
  2725  003514                     _send_periodical_update:
  2726                           	opt stack 14
  2727                           
  2728                           ;main.c: 589: uint16_t tmp;
  2729                           ;main.c: 591: p_buffer = m_buffer;
  2730                           
  2731                           ; BSR set to: 1
  2732                           ;incstack = 0
  2733  003514  0E97               	movlw	low _m_buffer
  2734  003516  0101               	movlb	1	; () banked
  2735  003518  6F5C               	movwf	_p_buffer& (0+255),b
  2736  00351A  0E01               	movlw	high _m_buffer
  2737  00351C  0101               	movlb	1	; () banked
  2738  00351E  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  2739                           
  2740                           ; BSR set to: 1
  2741                           ;main.c: 594: memcpy(m_var.label, BATTERY_VOLTAGE_LABEL, 3);
  2742  003520  0EB7               	movlw	low _m_var
  2743  003522  0100               	movlb	0	; () banked
  2744  003524  6F81               	movwf	memcpy@d1& (0+255),b
  2745  003526  0E01               	movlw	high _m_var
  2746  003528  0100               	movlb	0	; () banked
  2747  00352A  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  2748  00352C  0EE3               	movlw	low _BATTERY_VOLTAGE_LABEL
  2749  00352E  0100               	movlb	0	; () banked
  2750  003530  6F83               	movwf	memcpy@s1& (0+255),b
  2751  003532  0E20               	movlw	high _BATTERY_VOLTAGE_LABEL
  2752  003534  0100               	movlb	0	; () banked
  2753  003536  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  2754  003538  0E00               	movlw	0
  2755  00353A  0100               	movlb	0	; () banked
  2756  00353C  6F86               	movwf	(memcpy@n+1)& (0+255),b
  2757  00353E  0E03               	movlw	3
  2758  003540  6F85               	movwf	memcpy@n& (0+255),b
  2759  003542  EC5F  F043         	call	_memcpy	;wreg free
  2760                           
  2761                           ;main.c: 595: m_var.unit = 2;
  2762  003546  0E02               	movlw	2
  2763  003548  0101               	movlb	1	; () banked
  2764  00354A  6FBD               	movwf	(_m_var+6)& (0+255),b
  2765                           
  2766                           ; BSR set to: 1
  2767                           ;main.c: 596: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  2768  00354C  C152  F0BE         	movff	_m_battery_voltage,floor@x
  2769  003550  C153  F0BF         	movff	_m_battery_voltage+1,floor@x+1
  2770  003554  C154  F0C0         	movff	_m_battery_voltage+2,floor@x+2
  2771  003558  ECE4  F03A         	call	_floor	;wreg free
  2772  00355C  C0BE  F3D7         	movff	?_floor,_send_periodical_update$5080
  2773  003560  C0BF  F3D8         	movff	?_floor+1,_send_periodical_update$5080+1
  2774  003564  C0C0  F3D9         	movff	?_floor+2,_send_periodical_update$5080+2
  2775                           
  2776                           ;main.c: 596: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  2777  003568  C3D7  F0A5         	movff	_send_periodical_update$5080,___fttol@f1
  2778  00356C  C3D8  F0A6         	movff	_send_periodical_update$5080+1,___fttol@f1+1
  2779  003570  C3D9  F0A7         	movff	_send_periodical_update$5080+2,___fttol@f1+2
  2780  003574  EC3A  F035         	call	___fttol	;wreg free
  2781  003578  0100               	movlb	0	; () banked
  2782  00357A  51A5               	movf	?___fttol& (0+255),w,b
  2783  00357C  0101               	movlb	1	; () banked
  2784  00357E  6FBB               	movwf	(_m_var+4)& (0+255),b
  2785                           
  2786                           ; BSR set to: 1
  2787                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  2788  003580  C152  F0BE         	movff	_m_battery_voltage,floor@x
  2789  003584  C153  F0BF         	movff	_m_battery_voltage+1,floor@x+1
  2790  003588  C154  F0C0         	movff	_m_battery_voltage+2,floor@x+2
  2791  00358C  ECE4  F03A         	call	_floor	;wreg free
  2792  003590  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  2793  003594  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  2794  003598  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  2795  00359C  EC4C  F045         	call	___ftneg	;wreg free
  2796  0035A0  C0C6  F3DA         	movff	?___ftneg,_send_periodical_update$5081
  2797  0035A4  C0C7  F3DB         	movff	?___ftneg+1,_send_periodical_update$5081+1
  2798  0035A8  C0C8  F3DC         	movff	?___ftneg+2,_send_periodical_update$5081+2
  2799                           
  2800                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  2801  0035AC  0E00               	movlw	0
  2802  0035AE  0100               	movlb	0	; () banked
  2803  0035B0  6FCC               	movwf	___ftmul@f2& (0+255),b
  2804  0035B2  0EC8               	movlw	200
  2805  0035B4  0100               	movlb	0	; () banked
  2806  0035B6  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  2807  0035B8  0E42               	movlw	66
  2808  0035BA  0100               	movlb	0	; () banked
  2809  0035BC  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  2810  0035BE  C152  F08C         	movff	_m_battery_voltage,___ftadd@f2
  2811  0035C2  C153  F08D         	movff	_m_battery_voltage+1,___ftadd@f2+1
  2812  0035C6  C154  F08E         	movff	_m_battery_voltage+2,___ftadd@f2+2
  2813  0035CA  C3DA  F089         	movff	_send_periodical_update$5081,___ftadd@f1
  2814  0035CE  C3DB  F08A         	movff	_send_periodical_update$5081+1,___ftadd@f1+1
  2815  0035D2  C3DC  F08B         	movff	_send_periodical_update$5081+2,___ftadd@f1+2
  2816  0035D6  EC3B  F02A         	call	___ftadd	;wreg free
  2817  0035DA  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  2818  0035DE  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  2819  0035E2  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  2820  0035E6  EC93  F032         	call	___ftmul	;wreg free
  2821  0035EA  C0C9  F3DD         	movff	?___ftmul,_send_periodical_update$5082
  2822  0035EE  C0CA  F3DE         	movff	?___ftmul+1,_send_periodical_update$5082+1
  2823  0035F2  C0CB  F3DF         	movff	?___ftmul+2,_send_periodical_update$5082+2
  2824                           
  2825                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  2826  0035F6  C3DD  F0BE         	movff	_send_periodical_update$5082,floor@x
  2827  0035FA  C3DE  F0BF         	movff	_send_periodical_update$5082+1,floor@x+1
  2828  0035FE  C3DF  F0C0         	movff	_send_periodical_update$5082+2,floor@x+2
  2829  003602  ECE4  F03A         	call	_floor	;wreg free
  2830  003606  C0BE  F3E0         	movff	?_floor,_send_periodical_update$5083
  2831  00360A  C0BF  F3E1         	movff	?_floor+1,_send_periodical_update$5083+1
  2832  00360E  C0C0  F3E2         	movff	?_floor+2,_send_periodical_update$5083+2
  2833                           
  2834                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  2835  003612  C3E0  F0A5         	movff	_send_periodical_update$5083,___fttol@f1
  2836  003616  C3E1  F0A6         	movff	_send_periodical_update$5083+1,___fttol@f1+1
  2837  00361A  C3E2  F0A7         	movff	_send_periodical_update$5083+2,___fttol@f1+2
  2838  00361E  EC3A  F035         	call	___fttol	;wreg free
  2839  003622  0100               	movlb	0	; () banked
  2840  003624  51A5               	movf	?___fttol& (0+255),w,b
  2841  003626  0101               	movlb	1	; () banked
  2842  003628  6FBC               	movwf	(_m_var+5)& (0+255),b
  2843                           
  2844                           ; BSR set to: 1
  2845                           ;main.c: 598: m_var.writable = 0;
  2846  00362A  0E00               	movlw	0
  2847  00362C  0101               	movlb	1	; () banked
  2848  00362E  6FBE               	movwf	(_m_var+7)& (0+255),b
  2849                           
  2850                           ; BSR set to: 1
  2851                           ;main.c: 599: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  2852  003630  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  2853  003634  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  2854  003638  EE21  F0B7         	lfsr	2,_m_var
  2855  00363C  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  2856  003640  0E08               	movlw	8
  2857  003642                     u16901:
  2858  003642  CFDB FFEB          	movff	plusw2,plusw0
  2859  003646  06E8               	decf	wreg,f,c
  2860  003648  E2FC               	bc	u16901
  2861  00364A  EC82  F03F         	call	_encode_ufixed16_variable	;wreg free
  2862  00364E  0101               	movlb	1	; () banked
  2863  003650  6FFD               	movwf	??_send_periodical_update& (0+255),b
  2864  003652  0101               	movlb	1	; () banked
  2865  003654  51FD               	movf	??_send_periodical_update& (0+255),w,b
  2866  003656  0D01               	mullw	1
  2867  003658  50F3               	movf	prodl,w,c
  2868  00365A  0101               	movlb	1	; () banked
  2869  00365C  275C               	addwf	_p_buffer& (0+255),f,b
  2870  00365E  50F4               	movf	prodh,w,c
  2871  003660  0101               	movlb	1	; () banked
  2872  003662  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  2873                           
  2874                           ; BSR set to: 1
  2875                           ;main.c: 601: memcpy(m_var.label, LIGHT_LEVEL_LABEL, 3);
  2876  003664  0EB7               	movlw	low _m_var
  2877  003666  0100               	movlb	0	; () banked
  2878  003668  6F81               	movwf	memcpy@d1& (0+255),b
  2879  00366A  0E01               	movlw	high _m_var
  2880  00366C  0100               	movlb	0	; () banked
  2881  00366E  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  2882  003670  0EEB               	movlw	low _LIGHT_LEVEL_LABEL
  2883  003672  0100               	movlb	0	; () banked
  2884  003674  6F83               	movwf	memcpy@s1& (0+255),b
  2885  003676  0E20               	movlw	high _LIGHT_LEVEL_LABEL
  2886  003678  0100               	movlb	0	; () banked
  2887  00367A  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  2888  00367C  0E00               	movlw	0
  2889  00367E  0100               	movlb	0	; () banked
  2890  003680  6F86               	movwf	(memcpy@n+1)& (0+255),b
  2891  003682  0E03               	movlw	3
  2892  003684  6F85               	movwf	memcpy@n& (0+255),b
  2893  003686  EC5F  F043         	call	_memcpy	;wreg free
  2894                           
  2895                           ;main.c: 602: m_var.unit = 3;
  2896  00368A  0E03               	movlw	3
  2897  00368C  0101               	movlb	1	; () banked
  2898  00368E  6FBD               	movwf	(_m_var+6)& (0+255),b
  2899                           
  2900                           ; BSR set to: 1
  2901                           ;main.c: 603: m_var.value_byte1 = m_light_level;
  2902  003690  C168  F1BB         	movff	_m_light_level,_m_var+4
  2903                           
  2904                           ; BSR set to: 1
  2905                           ;main.c: 604: m_var.writable = 0;
  2906  003694  0E00               	movlw	0
  2907  003696  0101               	movlb	1	; () banked
  2908  003698  6FBE               	movwf	(_m_var+7)& (0+255),b
  2909                           
  2910                           ; BSR set to: 1
  2911                           ;main.c: 605: p_buffer += encode_uint8_variable(p_buffer, m_var);
  2912  00369A  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  2913  00369E  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  2914  0036A2  EE21  F0B7         	lfsr	2,_m_var
  2915  0036A6  EE00  F083         	lfsr	0,encode_uint8_variable@var
  2916  0036AA  0E08               	movlw	8
  2917  0036AC                     u16911:
  2918  0036AC  CFDB FFEB          	movff	plusw2,plusw0
  2919  0036B0  06E8               	decf	wreg,f,c
  2920  0036B2  E2FC               	bc	u16911
  2921  0036B4  ECA5  F040         	call	_encode_uint8_variable	;wreg free
  2922  0036B8  0101               	movlb	1	; () banked
  2923  0036BA  6FFD               	movwf	??_send_periodical_update& (0+255),b
  2924  0036BC  0101               	movlb	1	; () banked
  2925  0036BE  51FD               	movf	??_send_periodical_update& (0+255),w,b
  2926  0036C0  0D01               	mullw	1
  2927  0036C2  50F3               	movf	prodl,w,c
  2928  0036C4  0101               	movlb	1	; () banked
  2929  0036C6  275C               	addwf	_p_buffer& (0+255),f,b
  2930  0036C8  50F4               	movf	prodh,w,c
  2931  0036CA  0101               	movlb	1	; () banked
  2932  0036CC  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  2933                           
  2934                           ; BSR set to: 1
  2935                           ;main.c: 607: memcpy(m_var.label, TEMPERATURE_LABEL, 3);
  2936  0036CE  0EB7               	movlw	low _m_var
  2937  0036D0  0100               	movlb	0	; () banked
  2938  0036D2  6F81               	movwf	memcpy@d1& (0+255),b
  2939  0036D4  0E01               	movlw	high _m_var
  2940  0036D6  0100               	movlb	0	; () banked
  2941  0036D8  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  2942  0036DA  0EF3               	movlw	low _TEMPERATURE_LABEL
  2943  0036DC  0100               	movlb	0	; () banked
  2944  0036DE  6F83               	movwf	memcpy@s1& (0+255),b
  2945  0036E0  0E20               	movlw	high _TEMPERATURE_LABEL
  2946  0036E2  0100               	movlb	0	; () banked
  2947  0036E4  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  2948  0036E6  0E00               	movlw	0
  2949  0036E8  0100               	movlb	0	; () banked
  2950  0036EA  6F86               	movwf	(memcpy@n+1)& (0+255),b
  2951  0036EC  0E03               	movlw	3
  2952  0036EE  6F85               	movwf	memcpy@n& (0+255),b
  2953  0036F0  EC5F  F043         	call	_memcpy	;wreg free
  2954                           
  2955                           ;main.c: 608: m_var.unit = 1;
  2956  0036F4  0E01               	movlw	1
  2957  0036F6  0101               	movlb	1	; () banked
  2958  0036F8  6FBD               	movwf	(_m_var+6)& (0+255),b
  2959                           
  2960                           ; BSR set to: 1
  2961                           ;main.c: 609: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  2962  0036FA  C155  F0BE         	movff	_m_temperature,floor@x
  2963  0036FE  C156  F0BF         	movff	_m_temperature+1,floor@x+1
  2964  003702  C157  F0C0         	movff	_m_temperature+2,floor@x+2
  2965  003706  ECE4  F03A         	call	_floor	;wreg free
  2966  00370A  C0BE  F3D7         	movff	?_floor,_send_periodical_update$5080
  2967  00370E  C0BF  F3D8         	movff	?_floor+1,_send_periodical_update$5080+1
  2968  003712  C0C0  F3D9         	movff	?_floor+2,_send_periodical_update$5080+2
  2969                           
  2970                           ;main.c: 609: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  2971  003716  C3D7  F0A5         	movff	_send_periodical_update$5080,___fttol@f1
  2972  00371A  C3D8  F0A6         	movff	_send_periodical_update$5080+1,___fttol@f1+1
  2973  00371E  C3D9  F0A7         	movff	_send_periodical_update$5080+2,___fttol@f1+2
  2974  003722  EC3A  F035         	call	___fttol	;wreg free
  2975  003726  0100               	movlb	0	; () banked
  2976  003728  51A5               	movf	?___fttol& (0+255),w,b
  2977  00372A  0101               	movlb	1	; () banked
  2978  00372C  6FBB               	movwf	(_m_var+4)& (0+255),b
  2979                           
  2980                           ; BSR set to: 1
  2981                           ;main.c: 610: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  2982  00372E  C155  F0BE         	movff	_m_temperature,floor@x
  2983  003732  C156  F0BF         	movff	_m_temperature+1,floor@x+1
  2984  003736  C157  F0C0         	movff	_m_temperature+2,floor@x+2
  2985  00373A  ECE4  F03A         	call	_floor	;wreg free
  2986  00373E  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  2987  003742  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  2988  003746  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  2989  00374A  EC4C  F045         	call	___ftneg	;wreg free
  2990  00374E  C0C6  F3DA         	movff	?___ftneg,_send_periodical_update$5081
  2991  003752  C0C7  F3DB         	movff	?___ftneg+1,_send_periodical_update$5081+1
  2992  003756  C0C8  F3DC         	movff	?___ftneg+2,_send_periodical_update$5081+2
  2993                           
  2994                           ;main.c: 610: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  2995  00375A  0E00               	movlw	0
  2996  00375C  0100               	movlb	0	; () banked
  2997  00375E  6FCC               	movwf	___ftmul@f2& (0+255),b
  2998  003760  0EC8               	movlw	200
  2999  003762  0100               	movlb	0	; () banked
  3000  003764  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  3001  003766  0E42               	movlw	66
  3002  003768  0100               	movlb	0	; () banked
  3003  00376A  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  3004  00376C  C155  F08C         	movff	_m_temperature,___ftadd@f2
  3005  003770  C156  F08D         	movff	_m_temperature+1,___ftadd@f2+1
  3006  003774  C157  F08E         	movff	_m_temperature+2,___ftadd@f2+2
  3007  003778  C3DA  F089         	movff	_send_periodical_update$5081,___ftadd@f1
  3008  00377C  C3DB  F08A         	movff	_send_periodical_update$5081+1,___ftadd@f1+1
  3009  003780  C3DC  F08B         	movff	_send_periodical_update$5081+2,___ftadd@f1+2
  3010  003784  EC3B  F02A         	call	___ftadd	;wreg free
  3011  003788  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  3012  00378C  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  3013  003790  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  3014  003794  EC93  F032         	call	___ftmul	;wreg free
  3015  003798  C0C9  F3DD         	movff	?___ftmul,_send_periodical_update$5082
  3016  00379C  C0CA  F3DE         	movff	?___ftmul+1,_send_periodical_update$5082+1
  3017  0037A0  C0CB  F3DF         	movff	?___ftmul+2,_send_periodical_update$5082+2
  3018                           
  3019                           ;main.c: 610: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3020  0037A4  C3DD  F0BE         	movff	_send_periodical_update$5082,floor@x
  3021  0037A8  C3DE  F0BF         	movff	_send_periodical_update$5082+1,floor@x+1
  3022  0037AC  C3DF  F0C0         	movff	_send_periodical_update$5082+2,floor@x+2
  3023  0037B0  ECE4  F03A         	call	_floor	;wreg free
  3024  0037B4  C0BE  F3E0         	movff	?_floor,_send_periodical_update$5083
  3025  0037B8  C0BF  F3E1         	movff	?_floor+1,_send_periodical_update$5083+1
  3026  0037BC  C0C0  F3E2         	movff	?_floor+2,_send_periodical_update$5083+2
  3027                           
  3028                           ;main.c: 610: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3029  0037C0  C3E0  F0A5         	movff	_send_periodical_update$5083,___fttol@f1
  3030  0037C4  C3E1  F0A6         	movff	_send_periodical_update$5083+1,___fttol@f1+1
  3031  0037C8  C3E2  F0A7         	movff	_send_periodical_update$5083+2,___fttol@f1+2
  3032  0037CC  EC3A  F035         	call	___fttol	;wreg free
  3033  0037D0  0100               	movlb	0	; () banked
  3034  0037D2  51A5               	movf	?___fttol& (0+255),w,b
  3035  0037D4  0101               	movlb	1	; () banked
  3036  0037D6  6FBC               	movwf	(_m_var+5)& (0+255),b
  3037                           
  3038                           ; BSR set to: 1
  3039                           ;main.c: 611: m_var.writable = 0;
  3040  0037D8  0E00               	movlw	0
  3041  0037DA  0101               	movlb	1	; () banked
  3042  0037DC  6FBE               	movwf	(_m_var+7)& (0+255),b
  3043                           
  3044                           ; BSR set to: 1
  3045                           ;main.c: 612: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3046  0037DE  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3047  0037E2  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3048  0037E6  EE21  F0B7         	lfsr	2,_m_var
  3049  0037EA  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  3050  0037EE  0E08               	movlw	8
  3051  0037F0                     u16921:
  3052  0037F0  CFDB FFEB          	movff	plusw2,plusw0
  3053  0037F4  06E8               	decf	wreg,f,c
  3054  0037F6  E2FC               	bc	u16921
  3055  0037F8  EC82  F03F         	call	_encode_ufixed16_variable	;wreg free
  3056  0037FC  0101               	movlb	1	; () banked
  3057  0037FE  6FFD               	movwf	??_send_periodical_update& (0+255),b
  3058  003800  0101               	movlb	1	; () banked
  3059  003802  51FD               	movf	??_send_periodical_update& (0+255),w,b
  3060  003804  0D01               	mullw	1
  3061  003806  50F3               	movf	prodl,w,c
  3062  003808  0101               	movlb	1	; () banked
  3063  00380A  275C               	addwf	_p_buffer& (0+255),f,b
  3064  00380C  50F4               	movf	prodh,w,c
  3065  00380E  0101               	movlb	1	; () banked
  3066  003810  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3067                           
  3068                           ; BSR set to: 1
  3069                           ;main.c: 614: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  3070  003812  0E97               	movlw	low _m_buffer
  3071  003814  0101               	movlb	1	; () banked
  3072  003816  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  3073  003818  0E01               	movlw	high _m_buffer
  3074  00381A  0101               	movlb	1	; () banked
  3075  00381C  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  3076  00381E  0E97               	movlw	_m_buffer& (0+255)
  3077  003820  0800               	sublw	0
  3078  003822  0101               	movlb	1	; () banked
  3079  003824  255C               	addwf	_p_buffer& (0+255),w,b
  3080  003826  0101               	movlb	1	; () banked
  3081  003828  6FF6               	movwf	do_UPDATE@size& (0+255),b
  3082  00382A  0E00               	movlw	0
  3083  00382C  0101               	movlb	1	; () banked
  3084  00382E  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  3085  003830  EC1E  F031         	call	_do_UPDATE	;wreg free
  3086  003834  0900               	iorlw	0
  3087  003836  A4D8               	btfss	status,2,c
  3088  003838  D002               	goto	l14386
  3089                           
  3090                           ;main.c: 615: return 0;
  3091  00383A  0E00               	movlw	0
  3092  00383C  0012               	return	
  3093  00383E                     l14386:
  3094                           
  3095                           ;main.c: 618: p_buffer = m_buffer;
  3096  00383E  0E97               	movlw	low _m_buffer
  3097  003840  0101               	movlb	1	; () banked
  3098  003842  6F5C               	movwf	_p_buffer& (0+255),b
  3099  003844  0E01               	movlw	high _m_buffer
  3100  003846  0101               	movlb	1	; () banked
  3101  003848  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  3102                           
  3103                           ; BSR set to: 1
  3104                           ;main.c: 620: memcpy(m_var.label, UPTIME_LABEL, 3);
  3105  00384A  0EB7               	movlw	low _m_var
  3106  00384C  0100               	movlb	0	; () banked
  3107  00384E  6F81               	movwf	memcpy@d1& (0+255),b
  3108  003850  0E01               	movlw	high _m_var
  3109  003852  0100               	movlb	0	; () banked
  3110  003854  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  3111  003856  0EFF               	movlw	low _UPTIME_LABEL
  3112  003858  0100               	movlb	0	; () banked
  3113  00385A  6F83               	movwf	memcpy@s1& (0+255),b
  3114  00385C  0E20               	movlw	high _UPTIME_LABEL
  3115  00385E  0100               	movlb	0	; () banked
  3116  003860  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  3117  003862  0E00               	movlw	0
  3118  003864  0100               	movlb	0	; () banked
  3119  003866  6F86               	movwf	(memcpy@n+1)& (0+255),b
  3120  003868  0E03               	movlw	3
  3121  00386A  6F85               	movwf	memcpy@n& (0+255),b
  3122  00386C  EC5F  F043         	call	_memcpy	;wreg free
  3123                           
  3124                           ;main.c: 621: if (m_uptime_seconds < 60)
  3125  003870  0101               	movlb	1	; () banked
  3126  003872  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  3127  003874  0101               	movlb	1	; () banked
  3128  003876  114C               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  3129  003878  0101               	movlb	1	; () banked
  3130  00387A  114B               	iorwf	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  3131  00387C  E11D               	bnz	l14398
  3132  00387E  0E3C               	movlw	60
  3133  003880  0101               	movlb	1	; () banked
  3134  003882  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  3135  003884  B0D8               	btfsc	status,0,c
  3136  003886  D018               	goto	l14398
  3137                           
  3138                           ; BSR set to: 1
  3139                           ;main.c: 622: {
  3140                           ;main.c: 623: m_var.unit = 5;
  3141  003888  0E05               	movlw	5
  3142  00388A  0101               	movlb	1	; () banked
  3143  00388C  6FBD               	movwf	(_m_var+6)& (0+255),b
  3144                           
  3145                           ; BSR set to: 1
  3146                           ;main.c: 624: m_var.value_byte1 = m_uptime_seconds;
  3147  00388E  C14A  F1BB         	movff	_m_uptime_seconds,_m_var+4	;volatile
  3148                           
  3149                           ;main.c: 625: m_var.writable = 0;
  3150  003892  0E00               	movlw	0
  3151  003894  0101               	movlb	1	; () banked
  3152  003896  6FBE               	movwf	(_m_var+7)& (0+255),b
  3153                           
  3154                           ; BSR set to: 1
  3155                           ;main.c: 626: p_buffer += encode_uint8_variable(p_buffer, m_var);
  3156  003898  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  3157  00389C  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  3158  0038A0  EE21  F0B7         	lfsr	2,_m_var
  3159  0038A4  EE00  F083         	lfsr	0,encode_uint8_variable@var
  3160  0038A8  0E08               	movlw	8
  3161  0038AA                     u16951:
  3162  0038AA  CFDB FFEB          	movff	plusw2,plusw0
  3163  0038AE  06E8               	decf	wreg,f,c
  3164  0038B0  E2FC               	bc	u16951
  3165  0038B2  ECA5  F040         	call	_encode_uint8_variable	;wreg free
  3166  0038B6  D0AD               	goto	L3
  3167  0038B8                     l14398:
  3168                           
  3169                           ; BSR set to: 1
  3170                           ;main.c: 628: else if (m_uptime_seconds < 3600)
  3171  0038B8  0101               	movlb	1	; () banked
  3172  0038BA  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  3173  0038BC  0101               	movlb	1	; () banked
  3174  0038BE  114C               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  3175  0038C0  E135               	bnz	l14408
  3176  0038C2  0E10               	movlw	16
  3177  0038C4  0101               	movlb	1	; () banked
  3178  0038C6  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  3179  0038C8  0E0E               	movlw	14
  3180  0038CA  0101               	movlb	1	; () banked
  3181  0038CC  594B               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  3182  0038CE  B0D8               	btfsc	status,0,c
  3183  0038D0  D02D               	goto	l14408
  3184                           
  3185                           ; BSR set to: 1
  3186                           ;main.c: 629: {
  3187                           ;main.c: 630: m_var.unit = 4;
  3188  0038D2  0E04               	movlw	4
  3189  0038D4  0101               	movlb	1	; () banked
  3190  0038D6  6FBD               	movwf	(_m_var+6)& (0+255),b
  3191                           
  3192                           ; BSR set to: 1
  3193                           ;main.c: 631: m_var.value_byte1 = m_uptime_seconds / 60;
  3194  0038D8  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  3195  0038DC  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  3196  0038E0  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  3197  0038E4  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  3198  0038E8  0E3C               	movlw	60
  3199  0038EA  0100               	movlb	0	; () banked
  3200  0038EC  6F85               	movwf	___lldiv@divisor& (0+255),b
  3201  0038EE  0E00               	movlw	0
  3202  0038F0  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  3203  0038F2  0E00               	movlw	0
  3204  0038F4  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  3205  0038F6  0E00               	movlw	0
  3206  0038F8  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  3207  0038FA  ECD5  F03D         	call	___lldiv	;wreg free
  3208  0038FE  0100               	movlb	0	; () banked
  3209  003900  5181               	movf	?___lldiv& (0+255),w,b
  3210  003902  0101               	movlb	1	; () banked
  3211  003904  6FBB               	movwf	(_m_var+4)& (0+255),b
  3212                           
  3213                           ; BSR set to: 1
  3214                           ;main.c: 632: m_var.writable = 0;
  3215  003906  0E00               	movlw	0
  3216  003908  0101               	movlb	1	; () banked
  3217  00390A  6FBE               	movwf	(_m_var+7)& (0+255),b
  3218                           
  3219                           ; BSR set to: 1
  3220                           ;main.c: 633: p_buffer += encode_uint8_variable(p_buffer, m_var);
  3221  00390C  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  3222  003910  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  3223  003914  EE21  F0B7         	lfsr	2,_m_var
  3224  003918  EE00  F083         	lfsr	0,encode_uint8_variable@var
  3225  00391C  0E08               	movlw	8
  3226  00391E                     u16971:
  3227  00391E  CFDB FFEB          	movff	plusw2,plusw0
  3228  003922  06E8               	decf	wreg,f,c
  3229  003924  E2FC               	bc	u16971
  3230  003926  ECA5  F040         	call	_encode_uint8_variable	;wreg free
  3231  00392A  D073               	goto	L3
  3232  00392C                     l14408:
  3233                           
  3234                           ; BSR set to: 1
  3235                           ;main.c: 635: else if (m_uptime_seconds < (86400))
  3236  00392C  0101               	movlb	1	; () banked
  3237  00392E  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  3238  003930  E13E               	bnz	l14422
  3239  003932  0E80               	movlw	128
  3240  003934  0101               	movlb	1	; () banked
  3241  003936  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  3242  003938  0E51               	movlw	81
  3243  00393A  0101               	movlb	1	; () banked
  3244  00393C  594B               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  3245  00393E  0E01               	movlw	1
  3246  003940  0101               	movlb	1	; () banked
  3247  003942  594C               	subwfb	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  3248  003944  B0D8               	btfsc	status,0,c
  3249  003946  D033               	goto	l14422
  3250                           
  3251                           ; BSR set to: 1
  3252                           ;main.c: 636: {
  3253                           ;main.c: 637: m_var.unit = 6;
  3254  003948  0E06               	movlw	6
  3255  00394A  0101               	movlb	1	; () banked
  3256  00394C  6FBD               	movwf	(_m_var+6)& (0+255),b
  3257                           
  3258                           ; BSR set to: 1
  3259                           ;main.c: 638: tmp = m_uptime_seconds / 3600;
  3260  00394E  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  3261  003952  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  3262  003956  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  3263  00395A  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  3264  00395E  0E10               	movlw	16
  3265  003960  0100               	movlb	0	; () banked
  3266  003962  6F85               	movwf	___lldiv@divisor& (0+255),b
  3267  003964  0E0E               	movlw	14
  3268  003966  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  3269  003968  0E00               	movlw	0
  3270  00396A  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  3271  00396C  0E00               	movlw	0
  3272  00396E  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  3273  003970  ECD5  F03D         	call	___lldiv	;wreg free
  3274  003974  C081  F3E3         	movff	?___lldiv,send_periodical_update@tmp
  3275  003978  C082  F3E4         	movff	?___lldiv+1,send_periodical_update@tmp+1
  3276                           
  3277                           ;main.c: 639: m_var.value_byte1 = tmp / 256;
  3278  00397C  0103               	movlb	3	; () banked
  3279  00397E  51E4               	movf	(send_periodical_update@tmp+1)& (0+255),w,b
  3280  003980  0101               	movlb	1	; () banked
  3281  003982  6FBB               	movwf	(_m_var+4)& (0+255),b
  3282                           
  3283                           ; BSR set to: 1
  3284                           ;main.c: 640: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  3285  003984  C3E3  F1BC         	movff	send_periodical_update@tmp,_m_var+5
  3286                           
  3287                           ; BSR set to: 1
  3288                           ;main.c: 641: m_var.writable = 0;
  3289  003988  0E00               	movlw	0
  3290  00398A  0101               	movlb	1	; () banked
  3291  00398C  6FBE               	movwf	(_m_var+7)& (0+255),b
  3292                           
  3293                           ; BSR set to: 1
  3294                           ;main.c: 642: p_buffer += encode_uint16_variable(p_buffer, m_var);
  3295  00398E  C15C  F081         	movff	_p_buffer,encode_uint16_variable@buffer
  3296  003992  C15D  F082         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  3297  003996  EE21  F0B7         	lfsr	2,_m_var
  3298  00399A  EE00  F083         	lfsr	0,encode_uint16_variable@var
  3299  00399E  0E08               	movlw	8
  3300  0039A0                     u16991:
  3301  0039A0  CFDB FFEB          	movff	plusw2,plusw0
  3302  0039A4  06E8               	decf	wreg,f,c
  3303  0039A6  E2FC               	bc	u16991
  3304  0039A8  EC34  F03F         	call	_encode_uint16_variable	;wreg free
  3305  0039AC  D032               	goto	L3
  3306  0039AE                     l14422:
  3307                           
  3308                           ; BSR set to: 1
  3309                           ;main.c: 644: else
  3310                           ;main.c: 645: {
  3311                           ;main.c: 646: m_var.unit = 0;
  3312  0039AE  0E00               	movlw	0
  3313  0039B0  0101               	movlb	1	; () banked
  3314  0039B2  6FBD               	movwf	(_m_var+6)& (0+255),b
  3315                           
  3316                           ; BSR set to: 1
  3317                           ;main.c: 647: tmp = m_uptime_seconds / 86400;
  3318  0039B4  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  3319  0039B8  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  3320  0039BC  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  3321  0039C0  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  3322  0039C4  0E80               	movlw	128
  3323  0039C6  0100               	movlb	0	; () banked
  3324  0039C8  6F85               	movwf	___lldiv@divisor& (0+255),b
  3325  0039CA  0E51               	movlw	81
  3326  0039CC  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  3327  0039CE  0E01               	movlw	1
  3328  0039D0  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  3329  0039D2  0E00               	movlw	0
  3330  0039D4  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  3331  0039D6  ECD5  F03D         	call	___lldiv	;wreg free
  3332  0039DA  C081  F3E3         	movff	?___lldiv,send_periodical_update@tmp
  3333  0039DE  C082  F3E4         	movff	?___lldiv+1,send_periodical_update@tmp+1
  3334                           
  3335                           ;main.c: 648: m_var.value_byte1 = tmp / 256;
  3336  0039E2  0103               	movlb	3	; () banked
  3337  0039E4  51E4               	movf	(send_periodical_update@tmp+1)& (0+255),w,b
  3338  0039E6  0101               	movlb	1	; () banked
  3339  0039E8  6FBB               	movwf	(_m_var+4)& (0+255),b
  3340                           
  3341                           ; BSR set to: 1
  3342                           ;main.c: 649: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  3343  0039EA  C3E3  F1BC         	movff	send_periodical_update@tmp,_m_var+5
  3344                           
  3345                           ; BSR set to: 1
  3346                           ;main.c: 650: m_var.writable = 0;
  3347  0039EE  0E00               	movlw	0
  3348  0039F0  0101               	movlb	1	; () banked
  3349  0039F2  6FBE               	movwf	(_m_var+7)& (0+255),b
  3350                           
  3351                           ; BSR set to: 1
  3352                           ;main.c: 651: p_buffer += encode_uint16_variable(p_buffer, m_var);
  3353  0039F4  C15C  F081         	movff	_p_buffer,encode_uint16_variable@buffer
  3354  0039F8  C15D  F082         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  3355  0039FC  EE21  F0B7         	lfsr	2,_m_var
  3356  003A00  EE00  F083         	lfsr	0,encode_uint16_variable@var
  3357  003A04  0E08               	movlw	8
  3358  003A06                     u17001:
  3359  003A06  CFDB FFEB          	movff	plusw2,plusw0
  3360  003A0A  06E8               	decf	wreg,f,c
  3361  003A0C  E2FC               	bc	u17001
  3362  003A0E  EC34  F03F         	call	_encode_uint16_variable	;wreg free
  3363  003A12                     L3:
  3364  003A12  0101               	movlb	1	; () banked
  3365  003A14  6FFD               	movwf	??_send_periodical_update& (0+255),b
  3366  003A16  0101               	movlb	1	; () banked
  3367  003A18  51FD               	movf	??_send_periodical_update& (0+255),w,b
  3368  003A1A  0D01               	mullw	1
  3369  003A1C  50F3               	movf	prodl,w,c
  3370  003A1E  0101               	movlb	1	; () banked
  3371  003A20  275C               	addwf	_p_buffer& (0+255),f,b
  3372  003A22  50F4               	movf	prodh,w,c
  3373  003A24  0101               	movlb	1	; () banked
  3374  003A26  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3375                           
  3376                           ; BSR set to: 1
  3377                           ;main.c: 652: }
  3378                           ;main.c: 654: memcpy(m_var.label, FAILEDMSG_LABEL, 3);
  3379                           
  3380                           ; BSR set to: 1
  3381                           
  3382                           ; BSR set to: 1
  3383                           
  3384                           ; BSR set to: 1
  3385  003A28  0EB7               	movlw	low _m_var
  3386  003A2A  0100               	movlb	0	; () banked
  3387  003A2C  6F81               	movwf	memcpy@d1& (0+255),b
  3388  003A2E  0E01               	movlw	high _m_var
  3389  003A30  0100               	movlb	0	; () banked
  3390  003A32  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  3391  003A34  0EE7               	movlw	low _FAILEDMSG_LABEL
  3392  003A36  0100               	movlb	0	; () banked
  3393  003A38  6F83               	movwf	memcpy@s1& (0+255),b
  3394  003A3A  0E20               	movlw	high _FAILEDMSG_LABEL
  3395  003A3C  0100               	movlb	0	; () banked
  3396  003A3E  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  3397  003A40  0E00               	movlw	0
  3398  003A42  0100               	movlb	0	; () banked
  3399  003A44  6F86               	movwf	(memcpy@n+1)& (0+255),b
  3400  003A46  0E03               	movlw	3
  3401  003A48  6F85               	movwf	memcpy@n& (0+255),b
  3402  003A4A  EC5F  F043         	call	_memcpy	;wreg free
  3403                           
  3404                           ;main.c: 655: m_var.unit = 3;
  3405  003A4E  0E03               	movlw	3
  3406  003A50  0101               	movlb	1	; () banked
  3407  003A52  6FBD               	movwf	(_m_var+6)& (0+255),b
  3408                           
  3409                           ; BSR set to: 1
  3410                           ;main.c: 656: float tmp2 = (float)(m_failed_messages*100)/(float)(m_failed_messages + m_
      +                          sent_messages);
  3411  003A54  C142  F081         	movff	_m_failed_messages,___lmul@multiplier
  3412  003A58  C143  F082         	movff	_m_failed_messages+1,___lmul@multiplier+1
  3413  003A5C  C144  F083         	movff	_m_failed_messages+2,___lmul@multiplier+2
  3414  003A60  C145  F084         	movff	_m_failed_messages+3,___lmul@multiplier+3
  3415  003A64  0E64               	movlw	100
  3416  003A66  0100               	movlb	0	; () banked
  3417  003A68  6F85               	movwf	___lmul@multiplicand& (0+255),b
  3418  003A6A  0E00               	movlw	0
  3419  003A6C  6F86               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3420  003A6E  0E00               	movlw	0
  3421  003A70  6F87               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3422  003A72  0E00               	movlw	0
  3423  003A74  6F88               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3424  003A76  EC1C  F042         	call	___lmul	;wreg free
  3425  003A7A  C081  F08D         	movff	?___lmul,___lltoft@c
  3426  003A7E  C082  F08E         	movff	?___lmul+1,___lltoft@c+1
  3427  003A82  C083  F08F         	movff	?___lmul+2,___lltoft@c+2
  3428  003A86  C084  F090         	movff	?___lmul+3,___lltoft@c+3
  3429  003A8A  EC2A  F041         	call	___lltoft	;wreg free
  3430  003A8E  C08D  F096         	movff	?___lltoft,___ftdiv@f1
  3431  003A92  C08E  F097         	movff	?___lltoft+1,___ftdiv@f1+1
  3432  003A96  C08F  F098         	movff	?___lltoft+2,___ftdiv@f1+2
  3433  003A9A  0101               	movlb	1	; () banked
  3434  003A9C  5146               	movf	_m_sent_messages& (0+255),w,b
  3435  003A9E  0101               	movlb	1	; () banked
  3436  003AA0  2542               	addwf	_m_failed_messages& (0+255),w,b
  3437  003AA2  0100               	movlb	0	; () banked
  3438  003AA4  6F8D               	movwf	___lltoft@c& (0+255),b
  3439  003AA6  0101               	movlb	1	; () banked
  3440  003AA8  5147               	movf	(_m_sent_messages+1)& (0+255),w,b
  3441  003AAA  0101               	movlb	1	; () banked
  3442  003AAC  2143               	addwfc	(_m_failed_messages+1)& (0+255),w,b
  3443  003AAE  0100               	movlb	0	; () banked
  3444  003AB0  6F8E               	movwf	(___lltoft@c+1)& (0+255),b
  3445  003AB2  0101               	movlb	1	; () banked
  3446  003AB4  5148               	movf	(_m_sent_messages+2)& (0+255),w,b
  3447  003AB6  0101               	movlb	1	; () banked
  3448  003AB8  2144               	addwfc	(_m_failed_messages+2)& (0+255),w,b
  3449  003ABA  0100               	movlb	0	; () banked
  3450  003ABC  6F8F               	movwf	(___lltoft@c+2)& (0+255),b
  3451  003ABE  0101               	movlb	1	; () banked
  3452  003AC0  5149               	movf	(_m_sent_messages+3)& (0+255),w,b
  3453  003AC2  0101               	movlb	1	; () banked
  3454  003AC4  2145               	addwfc	(_m_failed_messages+3)& (0+255),w,b
  3455  003AC6  0100               	movlb	0	; () banked
  3456  003AC8  6F90               	movwf	(___lltoft@c+3)& (0+255),b
  3457  003ACA  EC2A  F041         	call	___lltoft	;wreg free
  3458  003ACE  C08D  F099         	movff	?___lltoft,___ftdiv@f2
  3459  003AD2  C08E  F09A         	movff	?___lltoft+1,___ftdiv@f2+1
  3460  003AD6  C08F  F09B         	movff	?___lltoft+2,___ftdiv@f2+2
  3461  003ADA  EC94  F034         	call	___ftdiv	;wreg free
  3462  003ADE  C096  F3D4         	movff	?___ftdiv,send_periodical_update@tmp2
  3463  003AE2  C097  F3D5         	movff	?___ftdiv+1,send_periodical_update@tmp2+1
  3464  003AE6  C098  F3D6         	movff	?___ftdiv+2,send_periodical_update@tmp2+2
  3465                           
  3466                           ;main.c: 657: m_var.value_byte1 = (uint8_t)floor(tmp2);
  3467  003AEA  C3D4  F0BE         	movff	send_periodical_update@tmp2,floor@x
  3468  003AEE  C3D5  F0BF         	movff	send_periodical_update@tmp2+1,floor@x+1
  3469  003AF2  C3D6  F0C0         	movff	send_periodical_update@tmp2+2,floor@x+2
  3470  003AF6  ECE4  F03A         	call	_floor	;wreg free
  3471  003AFA  C0BE  F3D7         	movff	?_floor,_send_periodical_update$5080
  3472  003AFE  C0BF  F3D8         	movff	?_floor+1,_send_periodical_update$5080+1
  3473  003B02  C0C0  F3D9         	movff	?_floor+2,_send_periodical_update$5080+2
  3474                           
  3475                           ;main.c: 657: m_var.value_byte1 = (uint8_t)floor(tmp2);
  3476  003B06  C3D7  F0A5         	movff	_send_periodical_update$5080,___fttol@f1
  3477  003B0A  C3D8  F0A6         	movff	_send_periodical_update$5080+1,___fttol@f1+1
  3478  003B0E  C3D9  F0A7         	movff	_send_periodical_update$5080+2,___fttol@f1+2
  3479  003B12  EC3A  F035         	call	___fttol	;wreg free
  3480  003B16  0100               	movlb	0	; () banked
  3481  003B18  51A5               	movf	?___fttol& (0+255),w,b
  3482  003B1A  0101               	movlb	1	; () banked
  3483  003B1C  6FBB               	movwf	(_m_var+4)& (0+255),b
  3484                           
  3485                           ; BSR set to: 1
  3486                           ;main.c: 658: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3487  003B1E  C3D4  F0BE         	movff	send_periodical_update@tmp2,floor@x
  3488  003B22  C3D5  F0BF         	movff	send_periodical_update@tmp2+1,floor@x+1
  3489  003B26  C3D6  F0C0         	movff	send_periodical_update@tmp2+2,floor@x+2
  3490  003B2A  ECE4  F03A         	call	_floor	;wreg free
  3491  003B2E  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  3492  003B32  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  3493  003B36  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  3494  003B3A  EC4C  F045         	call	___ftneg	;wreg free
  3495  003B3E  C0C6  F3DA         	movff	?___ftneg,_send_periodical_update$5081
  3496  003B42  C0C7  F3DB         	movff	?___ftneg+1,_send_periodical_update$5081+1
  3497  003B46  C0C8  F3DC         	movff	?___ftneg+2,_send_periodical_update$5081+2
  3498                           
  3499                           ;main.c: 658: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3500  003B4A  0E00               	movlw	0
  3501  003B4C  0100               	movlb	0	; () banked
  3502  003B4E  6FCC               	movwf	___ftmul@f2& (0+255),b
  3503  003B50  0EC8               	movlw	200
  3504  003B52  0100               	movlb	0	; () banked
  3505  003B54  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  3506  003B56  0E42               	movlw	66
  3507  003B58  0100               	movlb	0	; () banked
  3508  003B5A  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  3509  003B5C  C3D4  F08C         	movff	send_periodical_update@tmp2,___ftadd@f2
  3510  003B60  C3D5  F08D         	movff	send_periodical_update@tmp2+1,___ftadd@f2+1
  3511  003B64  C3D6  F08E         	movff	send_periodical_update@tmp2+2,___ftadd@f2+2
  3512  003B68  C3DA  F089         	movff	_send_periodical_update$5081,___ftadd@f1
  3513  003B6C  C3DB  F08A         	movff	_send_periodical_update$5081+1,___ftadd@f1+1
  3514  003B70  C3DC  F08B         	movff	_send_periodical_update$5081+2,___ftadd@f1+2
  3515  003B74  EC3B  F02A         	call	___ftadd	;wreg free
  3516  003B78  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  3517  003B7C  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  3518  003B80  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  3519  003B84  EC93  F032         	call	___ftmul	;wreg free
  3520  003B88  C0C9  F3DD         	movff	?___ftmul,_send_periodical_update$5082
  3521  003B8C  C0CA  F3DE         	movff	?___ftmul+1,_send_periodical_update$5082+1
  3522  003B90  C0CB  F3DF         	movff	?___ftmul+2,_send_periodical_update$5082+2
  3523                           
  3524                           ;main.c: 658: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3525  003B94  C3DD  F0BE         	movff	_send_periodical_update$5082,floor@x
  3526  003B98  C3DE  F0BF         	movff	_send_periodical_update$5082+1,floor@x+1
  3527  003B9C  C3DF  F0C0         	movff	_send_periodical_update$5082+2,floor@x+2
  3528  003BA0  ECE4  F03A         	call	_floor	;wreg free
  3529  003BA4  C0BE  F3E0         	movff	?_floor,_send_periodical_update$5083
  3530  003BA8  C0BF  F3E1         	movff	?_floor+1,_send_periodical_update$5083+1
  3531  003BAC  C0C0  F3E2         	movff	?_floor+2,_send_periodical_update$5083+2
  3532                           
  3533                           ;main.c: 658: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3534  003BB0  C3E0  F0A5         	movff	_send_periodical_update$5083,___fttol@f1
  3535  003BB4  C3E1  F0A6         	movff	_send_periodical_update$5083+1,___fttol@f1+1
  3536  003BB8  C3E2  F0A7         	movff	_send_periodical_update$5083+2,___fttol@f1+2
  3537  003BBC  EC3A  F035         	call	___fttol	;wreg free
  3538  003BC0  0100               	movlb	0	; () banked
  3539  003BC2  51A5               	movf	?___fttol& (0+255),w,b
  3540  003BC4  0101               	movlb	1	; () banked
  3541  003BC6  6FBC               	movwf	(_m_var+5)& (0+255),b
  3542                           
  3543                           ; BSR set to: 1
  3544                           ;main.c: 659: m_var.writable = 0;
  3545  003BC8  0E00               	movlw	0
  3546  003BCA  0101               	movlb	1	; () banked
  3547  003BCC  6FBE               	movwf	(_m_var+7)& (0+255),b
  3548                           
  3549                           ; BSR set to: 1
  3550                           ;main.c: 660: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3551  003BCE  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3552  003BD2  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3553  003BD6  EE21  F0B7         	lfsr	2,_m_var
  3554  003BDA  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  3555  003BDE  0E08               	movlw	8
  3556  003BE0                     u17011:
  3557  003BE0  CFDB FFEB          	movff	plusw2,plusw0
  3558  003BE4  06E8               	decf	wreg,f,c
  3559  003BE6  E2FC               	bc	u17011
  3560  003BE8  EC82  F03F         	call	_encode_ufixed16_variable	;wreg free
  3561  003BEC  0101               	movlb	1	; () banked
  3562  003BEE  6FFD               	movwf	??_send_periodical_update& (0+255),b
  3563  003BF0  0101               	movlb	1	; () banked
  3564  003BF2  51FD               	movf	??_send_periodical_update& (0+255),w,b
  3565  003BF4  0D01               	mullw	1
  3566  003BF6  50F3               	movf	prodl,w,c
  3567  003BF8  0101               	movlb	1	; () banked
  3568  003BFA  275C               	addwf	_p_buffer& (0+255),f,b
  3569  003BFC  50F4               	movf	prodh,w,c
  3570  003BFE  0101               	movlb	1	; () banked
  3571  003C00  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3572                           
  3573                           ; BSR set to: 1
  3574                           ;main.c: 662: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  3575  003C02  0E97               	movlw	low _m_buffer
  3576  003C04  0101               	movlb	1	; () banked
  3577  003C06  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  3578  003C08  0E01               	movlw	high _m_buffer
  3579  003C0A  0101               	movlb	1	; () banked
  3580  003C0C  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  3581  003C0E  0E97               	movlw	_m_buffer& (0+255)
  3582  003C10  0800               	sublw	0
  3583  003C12  0101               	movlb	1	; () banked
  3584  003C14  255C               	addwf	_p_buffer& (0+255),w,b
  3585  003C16  0101               	movlb	1	; () banked
  3586  003C18  6FF6               	movwf	do_UPDATE@size& (0+255),b
  3587  003C1A  0E01               	movlw	1
  3588  003C1C  0101               	movlb	1	; () banked
  3589  003C1E  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  3590  003C20  EC1E  F031         	call	_do_UPDATE	;wreg free
  3591  003C24  0012               	return	
  3592  003C26                     __end_of_send_periodical_update:
  3593                           	opt stack 0
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           prodh	equ	0xFF4
  3599                           prodl	equ	0xFF3
  3600                           postinc0	equ	0xFEE
  3601                           plusw0	equ	0xFEB
  3602                           wreg	equ	0xFE8
  3603                           indf2	equ	0xFDF
  3604                           postinc2	equ	0xFDE
  3605                           plusw2	equ	0xFDB
  3606                           fsr2h	equ	0xFDA
  3607                           fsr2l	equ	0xFD9
  3608                           status	equ	0xFD8
  3609                           
  3610 ;; *************** function _send_initial_update *****************
  3611 ;; Defined at:
  3612 ;;		line 466 in file "src/main.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  tmp2            3    0[BANK3 ] float 
  3617 ;;  tmp             2   15[BANK3 ] unsigned int 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      unsigned char 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3628 ;;      Locals:         0       0       0       0      17       0       0       0       0       0       0       0       
      +0       0       0       0
  3629 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3630 ;;      Totals:         0       0       1       0      17       0       0       0       0       0       0       0       
      +0       0       0       0
  3631 ;;Total ram usage:       18 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:   16
  3634 ;; This function calls:
  3635 ;;		___ftadd
  3636 ;;		___ftdiv
  3637 ;;		___ftmul
  3638 ;;		___ftneg
  3639 ;;		___fttol
  3640 ;;		___lldiv
  3641 ;;		___lltoft
  3642 ;;		___lmul
  3643 ;;		_do_UPDATE
  3644 ;;		_encode_ufixed16_variable
  3645 ;;		_encode_uint16_variable
  3646 ;;		_encode_uint8_variable
  3647 ;;		_floor
  3648 ;;		_memcpy
  3649 ;; This function is called by:
  3650 ;;		_main
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text2
  3655  002CF6                     __ptext2:
  3656                           	opt stack 0
  3657  002CF6                     _send_initial_update:
  3658                           	opt stack 14
  3659                           
  3660                           ;main.c: 468: uint16_t tmp;
  3661                           ;main.c: 470: p_buffer = m_buffer;
  3662                           
  3663                           ;incstack = 0
  3664  002CF6  0E97               	movlw	low _m_buffer
  3665  002CF8  0101               	movlb	1	; () banked
  3666  002CFA  6F5C               	movwf	_p_buffer& (0+255),b
  3667  002CFC  0E01               	movlw	high _m_buffer
  3668  002CFE  0101               	movlb	1	; () banked
  3669  002D00  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  3670                           
  3671                           ; BSR set to: 1
  3672                           ;main.c: 473: memcpy(m_var.label, BATTERY_VOLTAGE_LABEL, 3);
  3673  002D02  0EB7               	movlw	low _m_var
  3674  002D04  0100               	movlb	0	; () banked
  3675  002D06  6F81               	movwf	memcpy@d1& (0+255),b
  3676  002D08  0E01               	movlw	high _m_var
  3677  002D0A  0100               	movlb	0	; () banked
  3678  002D0C  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  3679  002D0E  0EE3               	movlw	low _BATTERY_VOLTAGE_LABEL
  3680  002D10  0100               	movlb	0	; () banked
  3681  002D12  6F83               	movwf	memcpy@s1& (0+255),b
  3682  002D14  0E20               	movlw	high _BATTERY_VOLTAGE_LABEL
  3683  002D16  0100               	movlb	0	; () banked
  3684  002D18  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  3685  002D1A  0E00               	movlw	0
  3686  002D1C  0100               	movlb	0	; () banked
  3687  002D1E  6F86               	movwf	(memcpy@n+1)& (0+255),b
  3688  002D20  0E03               	movlw	3
  3689  002D22  6F85               	movwf	memcpy@n& (0+255),b
  3690  002D24  EC5F  F043         	call	_memcpy	;wreg free
  3691                           
  3692                           ;main.c: 474: m_var.unit = 2;
  3693  002D28  0E02               	movlw	2
  3694  002D2A  0101               	movlb	1	; () banked
  3695  002D2C  6FBD               	movwf	(_m_var+6)& (0+255),b
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;main.c: 475: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  3699  002D2E  C152  F0BE         	movff	_m_battery_voltage,floor@x
  3700  002D32  C153  F0BF         	movff	_m_battery_voltage+1,floor@x+1
  3701  002D36  C154  F0C0         	movff	_m_battery_voltage+2,floor@x+2
  3702  002D3A  ECE4  F03A         	call	_floor	;wreg free
  3703  002D3E  C0BE  F3D7         	movff	?_floor,_send_initial_update$5076
  3704  002D42  C0BF  F3D8         	movff	?_floor+1,_send_initial_update$5076+1
  3705  002D46  C0C0  F3D9         	movff	?_floor+2,_send_initial_update$5076+2
  3706                           
  3707                           ;main.c: 475: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  3708  002D4A  C3D7  F0A5         	movff	_send_initial_update$5076,___fttol@f1
  3709  002D4E  C3D8  F0A6         	movff	_send_initial_update$5076+1,___fttol@f1+1
  3710  002D52  C3D9  F0A7         	movff	_send_initial_update$5076+2,___fttol@f1+2
  3711  002D56  EC3A  F035         	call	___fttol	;wreg free
  3712  002D5A  0100               	movlb	0	; () banked
  3713  002D5C  51A5               	movf	?___fttol& (0+255),w,b
  3714  002D5E  0101               	movlb	1	; () banked
  3715  002D60  6FBB               	movwf	(_m_var+4)& (0+255),b
  3716                           
  3717                           ; BSR set to: 1
  3718                           ;main.c: 476: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3719  002D62  C152  F0BE         	movff	_m_battery_voltage,floor@x
  3720  002D66  C153  F0BF         	movff	_m_battery_voltage+1,floor@x+1
  3721  002D6A  C154  F0C0         	movff	_m_battery_voltage+2,floor@x+2
  3722  002D6E  ECE4  F03A         	call	_floor	;wreg free
  3723  002D72  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  3724  002D76  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  3725  002D7A  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  3726  002D7E  EC4C  F045         	call	___ftneg	;wreg free
  3727  002D82  C0C6  F3DA         	movff	?___ftneg,_send_initial_update$5077
  3728  002D86  C0C7  F3DB         	movff	?___ftneg+1,_send_initial_update$5077+1
  3729  002D8A  C0C8  F3DC         	movff	?___ftneg+2,_send_initial_update$5077+2
  3730                           
  3731                           ;main.c: 476: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3732  002D8E  0E00               	movlw	0
  3733  002D90  0100               	movlb	0	; () banked
  3734  002D92  6FCC               	movwf	___ftmul@f2& (0+255),b
  3735  002D94  0EC8               	movlw	200
  3736  002D96  0100               	movlb	0	; () banked
  3737  002D98  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  3738  002D9A  0E42               	movlw	66
  3739  002D9C  0100               	movlb	0	; () banked
  3740  002D9E  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  3741  002DA0  C152  F08C         	movff	_m_battery_voltage,___ftadd@f2
  3742  002DA4  C153  F08D         	movff	_m_battery_voltage+1,___ftadd@f2+1
  3743  002DA8  C154  F08E         	movff	_m_battery_voltage+2,___ftadd@f2+2
  3744  002DAC  C3DA  F089         	movff	_send_initial_update$5077,___ftadd@f1
  3745  002DB0  C3DB  F08A         	movff	_send_initial_update$5077+1,___ftadd@f1+1
  3746  002DB4  C3DC  F08B         	movff	_send_initial_update$5077+2,___ftadd@f1+2
  3747  002DB8  EC3B  F02A         	call	___ftadd	;wreg free
  3748  002DBC  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  3749  002DC0  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  3750  002DC4  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  3751  002DC8  EC93  F032         	call	___ftmul	;wreg free
  3752  002DCC  C0C9  F3DD         	movff	?___ftmul,_send_initial_update$5078
  3753  002DD0  C0CA  F3DE         	movff	?___ftmul+1,_send_initial_update$5078+1
  3754  002DD4  C0CB  F3DF         	movff	?___ftmul+2,_send_initial_update$5078+2
  3755                           
  3756                           ;main.c: 476: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3757  002DD8  C3DD  F0BE         	movff	_send_initial_update$5078,floor@x
  3758  002DDC  C3DE  F0BF         	movff	_send_initial_update$5078+1,floor@x+1
  3759  002DE0  C3DF  F0C0         	movff	_send_initial_update$5078+2,floor@x+2
  3760  002DE4  ECE4  F03A         	call	_floor	;wreg free
  3761  002DE8  C0BE  F3E0         	movff	?_floor,_send_initial_update$5079
  3762  002DEC  C0BF  F3E1         	movff	?_floor+1,_send_initial_update$5079+1
  3763  002DF0  C0C0  F3E2         	movff	?_floor+2,_send_initial_update$5079+2
  3764                           
  3765                           ;main.c: 476: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3766  002DF4  C3E0  F0A5         	movff	_send_initial_update$5079,___fttol@f1
  3767  002DF8  C3E1  F0A6         	movff	_send_initial_update$5079+1,___fttol@f1+1
  3768  002DFC  C3E2  F0A7         	movff	_send_initial_update$5079+2,___fttol@f1+2
  3769  002E00  EC3A  F035         	call	___fttol	;wreg free
  3770  002E04  0100               	movlb	0	; () banked
  3771  002E06  51A5               	movf	?___fttol& (0+255),w,b
  3772  002E08  0101               	movlb	1	; () banked
  3773  002E0A  6FBC               	movwf	(_m_var+5)& (0+255),b
  3774                           
  3775                           ; BSR set to: 1
  3776                           ;main.c: 477: m_var.writable = 0;
  3777  002E0C  0E00               	movlw	0
  3778  002E0E  0101               	movlb	1	; () banked
  3779  002E10  6FBE               	movwf	(_m_var+7)& (0+255),b
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;main.c: 478: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3783  002E12  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3784  002E16  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3785  002E1A  EE21  F0B7         	lfsr	2,_m_var
  3786  002E1E  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  3787  002E22  0E08               	movlw	8
  3788  002E24                     u16611:
  3789  002E24  CFDB FFEB          	movff	plusw2,plusw0
  3790  002E28  06E8               	decf	wreg,f,c
  3791  002E2A  E2FC               	bc	u16611
  3792  002E2C  EC82  F03F         	call	_encode_ufixed16_variable	;wreg free
  3793  002E30  0101               	movlb	1	; () banked
  3794  002E32  6FFD               	movwf	??_send_initial_update& (0+255),b
  3795  002E34  0101               	movlb	1	; () banked
  3796  002E36  51FD               	movf	??_send_initial_update& (0+255),w,b
  3797  002E38  0D01               	mullw	1
  3798  002E3A  50F3               	movf	prodl,w,c
  3799  002E3C  0101               	movlb	1	; () banked
  3800  002E3E  275C               	addwf	_p_buffer& (0+255),f,b
  3801  002E40  50F4               	movf	prodh,w,c
  3802  002E42  0101               	movlb	1	; () banked
  3803  002E44  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3804                           
  3805                           ; BSR set to: 1
  3806                           ;main.c: 480: memcpy(m_var.label, LIGHT_LEVEL_LABEL, 3);
  3807  002E46  0EB7               	movlw	low _m_var
  3808  002E48  0100               	movlb	0	; () banked
  3809  002E4A  6F81               	movwf	memcpy@d1& (0+255),b
  3810  002E4C  0E01               	movlw	high _m_var
  3811  002E4E  0100               	movlb	0	; () banked
  3812  002E50  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  3813  002E52  0EEB               	movlw	low _LIGHT_LEVEL_LABEL
  3814  002E54  0100               	movlb	0	; () banked
  3815  002E56  6F83               	movwf	memcpy@s1& (0+255),b
  3816  002E58  0E20               	movlw	high _LIGHT_LEVEL_LABEL
  3817  002E5A  0100               	movlb	0	; () banked
  3818  002E5C  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  3819  002E5E  0E00               	movlw	0
  3820  002E60  0100               	movlb	0	; () banked
  3821  002E62  6F86               	movwf	(memcpy@n+1)& (0+255),b
  3822  002E64  0E03               	movlw	3
  3823  002E66  6F85               	movwf	memcpy@n& (0+255),b
  3824  002E68  EC5F  F043         	call	_memcpy	;wreg free
  3825                           
  3826                           ;main.c: 481: m_var.unit = 3;
  3827  002E6C  0E03               	movlw	3
  3828  002E6E  0101               	movlb	1	; () banked
  3829  002E70  6FBD               	movwf	(_m_var+6)& (0+255),b
  3830                           
  3831                           ; BSR set to: 1
  3832                           ;main.c: 482: m_var.value_byte1 = m_light_level;
  3833  002E72  C168  F1BB         	movff	_m_light_level,_m_var+4
  3834                           
  3835                           ; BSR set to: 1
  3836                           ;main.c: 483: m_var.writable = 0;
  3837  002E76  0E00               	movlw	0
  3838  002E78  0101               	movlb	1	; () banked
  3839  002E7A  6FBE               	movwf	(_m_var+7)& (0+255),b
  3840                           
  3841                           ; BSR set to: 1
  3842                           ;main.c: 484: p_buffer += encode_uint8_variable(p_buffer, m_var);
  3843  002E7C  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  3844  002E80  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  3845  002E84  EE21  F0B7         	lfsr	2,_m_var
  3846  002E88  EE00  F083         	lfsr	0,encode_uint8_variable@var
  3847  002E8C  0E08               	movlw	8
  3848  002E8E                     u16621:
  3849  002E8E  CFDB FFEB          	movff	plusw2,plusw0
  3850  002E92  06E8               	decf	wreg,f,c
  3851  002E94  E2FC               	bc	u16621
  3852  002E96  ECA5  F040         	call	_encode_uint8_variable	;wreg free
  3853  002E9A  0101               	movlb	1	; () banked
  3854  002E9C  6FFD               	movwf	??_send_initial_update& (0+255),b
  3855  002E9E  0101               	movlb	1	; () banked
  3856  002EA0  51FD               	movf	??_send_initial_update& (0+255),w,b
  3857  002EA2  0D01               	mullw	1
  3858  002EA4  50F3               	movf	prodl,w,c
  3859  002EA6  0101               	movlb	1	; () banked
  3860  002EA8  275C               	addwf	_p_buffer& (0+255),f,b
  3861  002EAA  50F4               	movf	prodh,w,c
  3862  002EAC  0101               	movlb	1	; () banked
  3863  002EAE  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3864                           
  3865                           ; BSR set to: 1
  3866                           ;main.c: 486: memcpy(m_var.label, TEMPERATURE_LABEL, 3);
  3867  002EB0  0EB7               	movlw	low _m_var
  3868  002EB2  0100               	movlb	0	; () banked
  3869  002EB4  6F81               	movwf	memcpy@d1& (0+255),b
  3870  002EB6  0E01               	movlw	high _m_var
  3871  002EB8  0100               	movlb	0	; () banked
  3872  002EBA  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  3873  002EBC  0EF3               	movlw	low _TEMPERATURE_LABEL
  3874  002EBE  0100               	movlb	0	; () banked
  3875  002EC0  6F83               	movwf	memcpy@s1& (0+255),b
  3876  002EC2  0E20               	movlw	high _TEMPERATURE_LABEL
  3877  002EC4  0100               	movlb	0	; () banked
  3878  002EC6  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  3879  002EC8  0E00               	movlw	0
  3880  002ECA  0100               	movlb	0	; () banked
  3881  002ECC  6F86               	movwf	(memcpy@n+1)& (0+255),b
  3882  002ECE  0E03               	movlw	3
  3883  002ED0  6F85               	movwf	memcpy@n& (0+255),b
  3884  002ED2  EC5F  F043         	call	_memcpy	;wreg free
  3885                           
  3886                           ;main.c: 487: m_var.unit = 1;
  3887  002ED6  0E01               	movlw	1
  3888  002ED8  0101               	movlb	1	; () banked
  3889  002EDA  6FBD               	movwf	(_m_var+6)& (0+255),b
  3890                           
  3891                           ; BSR set to: 1
  3892                           ;main.c: 488: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3893  002EDC  C155  F0BE         	movff	_m_temperature,floor@x
  3894  002EE0  C156  F0BF         	movff	_m_temperature+1,floor@x+1
  3895  002EE4  C157  F0C0         	movff	_m_temperature+2,floor@x+2
  3896  002EE8  ECE4  F03A         	call	_floor	;wreg free
  3897  002EEC  C0BE  F3D7         	movff	?_floor,_send_initial_update$5076
  3898  002EF0  C0BF  F3D8         	movff	?_floor+1,_send_initial_update$5076+1
  3899  002EF4  C0C0  F3D9         	movff	?_floor+2,_send_initial_update$5076+2
  3900                           
  3901                           ;main.c: 488: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3902  002EF8  C3D7  F0A5         	movff	_send_initial_update$5076,___fttol@f1
  3903  002EFC  C3D8  F0A6         	movff	_send_initial_update$5076+1,___fttol@f1+1
  3904  002F00  C3D9  F0A7         	movff	_send_initial_update$5076+2,___fttol@f1+2
  3905  002F04  EC3A  F035         	call	___fttol	;wreg free
  3906  002F08  0100               	movlb	0	; () banked
  3907  002F0A  51A5               	movf	?___fttol& (0+255),w,b
  3908  002F0C  0101               	movlb	1	; () banked
  3909  002F0E  6FBB               	movwf	(_m_var+4)& (0+255),b
  3910                           
  3911                           ; BSR set to: 1
  3912                           ;main.c: 489: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3913  002F10  C155  F0BE         	movff	_m_temperature,floor@x
  3914  002F14  C156  F0BF         	movff	_m_temperature+1,floor@x+1
  3915  002F18  C157  F0C0         	movff	_m_temperature+2,floor@x+2
  3916  002F1C  ECE4  F03A         	call	_floor	;wreg free
  3917  002F20  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  3918  002F24  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  3919  002F28  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  3920  002F2C  EC4C  F045         	call	___ftneg	;wreg free
  3921  002F30  C0C6  F3DA         	movff	?___ftneg,_send_initial_update$5077
  3922  002F34  C0C7  F3DB         	movff	?___ftneg+1,_send_initial_update$5077+1
  3923  002F38  C0C8  F3DC         	movff	?___ftneg+2,_send_initial_update$5077+2
  3924                           
  3925                           ;main.c: 489: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3926  002F3C  0E00               	movlw	0
  3927  002F3E  0100               	movlb	0	; () banked
  3928  002F40  6FCC               	movwf	___ftmul@f2& (0+255),b
  3929  002F42  0EC8               	movlw	200
  3930  002F44  0100               	movlb	0	; () banked
  3931  002F46  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  3932  002F48  0E42               	movlw	66
  3933  002F4A  0100               	movlb	0	; () banked
  3934  002F4C  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  3935  002F4E  C155  F08C         	movff	_m_temperature,___ftadd@f2
  3936  002F52  C156  F08D         	movff	_m_temperature+1,___ftadd@f2+1
  3937  002F56  C157  F08E         	movff	_m_temperature+2,___ftadd@f2+2
  3938  002F5A  C3DA  F089         	movff	_send_initial_update$5077,___ftadd@f1
  3939  002F5E  C3DB  F08A         	movff	_send_initial_update$5077+1,___ftadd@f1+1
  3940  002F62  C3DC  F08B         	movff	_send_initial_update$5077+2,___ftadd@f1+2
  3941  002F66  EC3B  F02A         	call	___ftadd	;wreg free
  3942  002F6A  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  3943  002F6E  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  3944  002F72  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  3945  002F76  EC93  F032         	call	___ftmul	;wreg free
  3946  002F7A  C0C9  F3DD         	movff	?___ftmul,_send_initial_update$5078
  3947  002F7E  C0CA  F3DE         	movff	?___ftmul+1,_send_initial_update$5078+1
  3948  002F82  C0CB  F3DF         	movff	?___ftmul+2,_send_initial_update$5078+2
  3949                           
  3950                           ;main.c: 489: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3951  002F86  C3DD  F0BE         	movff	_send_initial_update$5078,floor@x
  3952  002F8A  C3DE  F0BF         	movff	_send_initial_update$5078+1,floor@x+1
  3953  002F8E  C3DF  F0C0         	movff	_send_initial_update$5078+2,floor@x+2
  3954  002F92  ECE4  F03A         	call	_floor	;wreg free
  3955  002F96  C0BE  F3E0         	movff	?_floor,_send_initial_update$5079
  3956  002F9A  C0BF  F3E1         	movff	?_floor+1,_send_initial_update$5079+1
  3957  002F9E  C0C0  F3E2         	movff	?_floor+2,_send_initial_update$5079+2
  3958                           
  3959                           ;main.c: 489: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3960  002FA2  C3E0  F0A5         	movff	_send_initial_update$5079,___fttol@f1
  3961  002FA6  C3E1  F0A6         	movff	_send_initial_update$5079+1,___fttol@f1+1
  3962  002FAA  C3E2  F0A7         	movff	_send_initial_update$5079+2,___fttol@f1+2
  3963  002FAE  EC3A  F035         	call	___fttol	;wreg free
  3964  002FB2  0100               	movlb	0	; () banked
  3965  002FB4  51A5               	movf	?___fttol& (0+255),w,b
  3966  002FB6  0101               	movlb	1	; () banked
  3967  002FB8  6FBC               	movwf	(_m_var+5)& (0+255),b
  3968                           
  3969                           ; BSR set to: 1
  3970                           ;main.c: 490: m_var.writable = 0;
  3971  002FBA  0E00               	movlw	0
  3972  002FBC  0101               	movlb	1	; () banked
  3973  002FBE  6FBE               	movwf	(_m_var+7)& (0+255),b
  3974                           
  3975                           ; BSR set to: 1
  3976                           ;main.c: 491: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3977  002FC0  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3978  002FC4  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3979  002FC8  EE21  F0B7         	lfsr	2,_m_var
  3980  002FCC  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  3981  002FD0  0E08               	movlw	8
  3982  002FD2                     u16631:
  3983  002FD2  CFDB FFEB          	movff	plusw2,plusw0
  3984  002FD6  06E8               	decf	wreg,f,c
  3985  002FD8  E2FC               	bc	u16631
  3986  002FDA  EC82  F03F         	call	_encode_ufixed16_variable	;wreg free
  3987  002FDE  0101               	movlb	1	; () banked
  3988  002FE0  6FFD               	movwf	??_send_initial_update& (0+255),b
  3989  002FE2  0101               	movlb	1	; () banked
  3990  002FE4  51FD               	movf	??_send_initial_update& (0+255),w,b
  3991  002FE6  0D01               	mullw	1
  3992  002FE8  50F3               	movf	prodl,w,c
  3993  002FEA  0101               	movlb	1	; () banked
  3994  002FEC  275C               	addwf	_p_buffer& (0+255),f,b
  3995  002FEE  50F4               	movf	prodh,w,c
  3996  002FF0  0101               	movlb	1	; () banked
  3997  002FF2  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;main.c: 493: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  4001  002FF4  0E97               	movlw	low _m_buffer
  4002  002FF6  0101               	movlb	1	; () banked
  4003  002FF8  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  4004  002FFA  0E01               	movlw	high _m_buffer
  4005  002FFC  0101               	movlb	1	; () banked
  4006  002FFE  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4007  003000  0E97               	movlw	_m_buffer& (0+255)
  4008  003002  0800               	sublw	0
  4009  003004  0101               	movlb	1	; () banked
  4010  003006  255C               	addwf	_p_buffer& (0+255),w,b
  4011  003008  0101               	movlb	1	; () banked
  4012  00300A  6FF6               	movwf	do_UPDATE@size& (0+255),b
  4013  00300C  0E00               	movlw	0
  4014  00300E  0101               	movlb	1	; () banked
  4015  003010  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  4016  003012  EC1E  F031         	call	_do_UPDATE	;wreg free
  4017  003016  0900               	iorlw	0
  4018  003018  A4D8               	btfss	status,2,c
  4019  00301A  D002               	goto	l14146
  4020                           
  4021                           ;main.c: 494: return 0;
  4022  00301C  0E00               	movlw	0
  4023  00301E  0012               	return	
  4024  003020                     l14146:
  4025                           
  4026                           ;main.c: 497: p_buffer = m_buffer;
  4027  003020  0E97               	movlw	low _m_buffer
  4028  003022  0101               	movlb	1	; () banked
  4029  003024  6F5C               	movwf	_p_buffer& (0+255),b
  4030  003026  0E01               	movlw	high _m_buffer
  4031  003028  0101               	movlb	1	; () banked
  4032  00302A  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  4033                           
  4034                           ; BSR set to: 1
  4035                           ;main.c: 499: memcpy(m_var.label, POWER_LABEL, 3);
  4036  00302C  0EB7               	movlw	low _m_var
  4037  00302E  0100               	movlb	0	; () banked
  4038  003030  6F81               	movwf	memcpy@d1& (0+255),b
  4039  003032  0E01               	movlw	high _m_var
  4040  003034  0100               	movlb	0	; () banked
  4041  003036  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  4042  003038  0EEF               	movlw	low _POWER_LABEL
  4043  00303A  0100               	movlb	0	; () banked
  4044  00303C  6F83               	movwf	memcpy@s1& (0+255),b
  4045  00303E  0E20               	movlw	high _POWER_LABEL
  4046  003040  0100               	movlb	0	; () banked
  4047  003042  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  4048  003044  0E00               	movlw	0
  4049  003046  0100               	movlb	0	; () banked
  4050  003048  6F86               	movwf	(memcpy@n+1)& (0+255),b
  4051  00304A  0E03               	movlw	3
  4052  00304C  6F85               	movwf	memcpy@n& (0+255),b
  4053  00304E  EC5F  F043         	call	_memcpy	;wreg free
  4054                           
  4055                           ;main.c: 500: m_var.unit = 0;
  4056  003052  0E00               	movlw	0
  4057  003054  0101               	movlb	1	; () banked
  4058  003056  6FBD               	movwf	(_m_var+6)& (0+255),b
  4059                           
  4060                           ; BSR set to: 1
  4061                           ;main.c: 501: m_var.value_byte1 = m_power;
  4062  003058  C169  F1BB         	movff	_m_power,_m_var+4
  4063                           
  4064                           ; BSR set to: 1
  4065                           ;main.c: 502: m_var.writable = 1;
  4066  00305C  0E01               	movlw	1
  4067  00305E  0101               	movlb	1	; () banked
  4068  003060  6FBE               	movwf	(_m_var+7)& (0+255),b
  4069                           
  4070                           ; BSR set to: 1
  4071                           ;main.c: 503: p_buffer += encode_uint8_variable(p_buffer, m_var);
  4072  003062  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  4073  003066  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  4074  00306A  EE21  F0B7         	lfsr	2,_m_var
  4075  00306E  EE00  F083         	lfsr	0,encode_uint8_variable@var
  4076  003072  0E08               	movlw	8
  4077  003074                     u16651:
  4078  003074  CFDB FFEB          	movff	plusw2,plusw0
  4079  003078  06E8               	decf	wreg,f,c
  4080  00307A  E2FC               	bc	u16651
  4081  00307C  ECA5  F040         	call	_encode_uint8_variable	;wreg free
  4082  003080  0101               	movlb	1	; () banked
  4083  003082  6FFD               	movwf	??_send_initial_update& (0+255),b
  4084  003084  0101               	movlb	1	; () banked
  4085  003086  51FD               	movf	??_send_initial_update& (0+255),w,b
  4086  003088  0D01               	mullw	1
  4087  00308A  50F3               	movf	prodl,w,c
  4088  00308C  0101               	movlb	1	; () banked
  4089  00308E  275C               	addwf	_p_buffer& (0+255),f,b
  4090  003090  50F4               	movf	prodh,w,c
  4091  003092  0101               	movlb	1	; () banked
  4092  003094  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  4093                           
  4094                           ; BSR set to: 1
  4095                           ;main.c: 505: memcpy(m_var.label, UPTIME_LABEL, 3);
  4096  003096  0EB7               	movlw	low _m_var
  4097  003098  0100               	movlb	0	; () banked
  4098  00309A  6F81               	movwf	memcpy@d1& (0+255),b
  4099  00309C  0E01               	movlw	high _m_var
  4100  00309E  0100               	movlb	0	; () banked
  4101  0030A0  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  4102  0030A2  0EFF               	movlw	low _UPTIME_LABEL
  4103  0030A4  0100               	movlb	0	; () banked
  4104  0030A6  6F83               	movwf	memcpy@s1& (0+255),b
  4105  0030A8  0E20               	movlw	high _UPTIME_LABEL
  4106  0030AA  0100               	movlb	0	; () banked
  4107  0030AC  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  4108  0030AE  0E00               	movlw	0
  4109  0030B0  0100               	movlb	0	; () banked
  4110  0030B2  6F86               	movwf	(memcpy@n+1)& (0+255),b
  4111  0030B4  0E03               	movlw	3
  4112  0030B6  6F85               	movwf	memcpy@n& (0+255),b
  4113  0030B8  EC5F  F043         	call	_memcpy	;wreg free
  4114                           
  4115                           ;main.c: 506: if (m_uptime_seconds < 60)
  4116  0030BC  0101               	movlb	1	; () banked
  4117  0030BE  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  4118  0030C0  0101               	movlb	1	; () banked
  4119  0030C2  114C               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  4120  0030C4  0101               	movlb	1	; () banked
  4121  0030C6  114B               	iorwf	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  4122  0030C8  E11D               	bnz	l14168
  4123  0030CA  0E3C               	movlw	60
  4124  0030CC  0101               	movlb	1	; () banked
  4125  0030CE  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  4126  0030D0  B0D8               	btfsc	status,0,c
  4127  0030D2  D018               	goto	l14168
  4128                           
  4129                           ; BSR set to: 1
  4130                           ;main.c: 507: {
  4131                           ;main.c: 508: m_var.unit = 5;
  4132  0030D4  0E05               	movlw	5
  4133  0030D6  0101               	movlb	1	; () banked
  4134  0030D8  6FBD               	movwf	(_m_var+6)& (0+255),b
  4135                           
  4136                           ; BSR set to: 1
  4137                           ;main.c: 509: m_var.value_byte1 = m_uptime_seconds;
  4138  0030DA  C14A  F1BB         	movff	_m_uptime_seconds,_m_var+4	;volatile
  4139                           
  4140                           ;main.c: 510: m_var.writable = 0;
  4141  0030DE  0E00               	movlw	0
  4142  0030E0  0101               	movlb	1	; () banked
  4143  0030E2  6FBE               	movwf	(_m_var+7)& (0+255),b
  4144                           
  4145                           ; BSR set to: 1
  4146                           ;main.c: 511: p_buffer += encode_uint8_variable(p_buffer, m_var);
  4147  0030E4  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  4148  0030E8  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  4149  0030EC  EE21  F0B7         	lfsr	2,_m_var
  4150  0030F0  EE00  F083         	lfsr	0,encode_uint8_variable@var
  4151  0030F4  0E08               	movlw	8
  4152  0030F6                     u16671:
  4153  0030F6  CFDB FFEB          	movff	plusw2,plusw0
  4154  0030FA  06E8               	decf	wreg,f,c
  4155  0030FC  E2FC               	bc	u16671
  4156  0030FE  ECA5  F040         	call	_encode_uint8_variable	;wreg free
  4157  003102  D0AD               	goto	L6
  4158  003104                     l14168:
  4159                           
  4160                           ; BSR set to: 1
  4161                           ;main.c: 513: else if (m_uptime_seconds < 3600)
  4162  003104  0101               	movlb	1	; () banked
  4163  003106  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  4164  003108  0101               	movlb	1	; () banked
  4165  00310A  114C               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  4166  00310C  E135               	bnz	l14178
  4167  00310E  0E10               	movlw	16
  4168  003110  0101               	movlb	1	; () banked
  4169  003112  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  4170  003114  0E0E               	movlw	14
  4171  003116  0101               	movlb	1	; () banked
  4172  003118  594B               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  4173  00311A  B0D8               	btfsc	status,0,c
  4174  00311C  D02D               	goto	l14178
  4175                           
  4176                           ; BSR set to: 1
  4177                           ;main.c: 514: {
  4178                           ;main.c: 515: m_var.unit = 4;
  4179  00311E  0E04               	movlw	4
  4180  003120  0101               	movlb	1	; () banked
  4181  003122  6FBD               	movwf	(_m_var+6)& (0+255),b
  4182                           
  4183                           ; BSR set to: 1
  4184                           ;main.c: 516: m_var.value_byte1 = m_uptime_seconds / 60;
  4185  003124  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  4186  003128  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  4187  00312C  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  4188  003130  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  4189  003134  0E3C               	movlw	60
  4190  003136  0100               	movlb	0	; () banked
  4191  003138  6F85               	movwf	___lldiv@divisor& (0+255),b
  4192  00313A  0E00               	movlw	0
  4193  00313C  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  4194  00313E  0E00               	movlw	0
  4195  003140  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  4196  003142  0E00               	movlw	0
  4197  003144  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  4198  003146  ECD5  F03D         	call	___lldiv	;wreg free
  4199  00314A  0100               	movlb	0	; () banked
  4200  00314C  5181               	movf	?___lldiv& (0+255),w,b
  4201  00314E  0101               	movlb	1	; () banked
  4202  003150  6FBB               	movwf	(_m_var+4)& (0+255),b
  4203                           
  4204                           ; BSR set to: 1
  4205                           ;main.c: 517: m_var.writable = 0;
  4206  003152  0E00               	movlw	0
  4207  003154  0101               	movlb	1	; () banked
  4208  003156  6FBE               	movwf	(_m_var+7)& (0+255),b
  4209                           
  4210                           ; BSR set to: 1
  4211                           ;main.c: 518: p_buffer += encode_uint8_variable(p_buffer, m_var);
  4212  003158  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  4213  00315C  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  4214  003160  EE21  F0B7         	lfsr	2,_m_var
  4215  003164  EE00  F083         	lfsr	0,encode_uint8_variable@var
  4216  003168  0E08               	movlw	8
  4217  00316A                     u16691:
  4218  00316A  CFDB FFEB          	movff	plusw2,plusw0
  4219  00316E  06E8               	decf	wreg,f,c
  4220  003170  E2FC               	bc	u16691
  4221  003172  ECA5  F040         	call	_encode_uint8_variable	;wreg free
  4222  003176  D073               	goto	L6
  4223  003178                     l14178:
  4224                           
  4225                           ; BSR set to: 1
  4226                           ;main.c: 520: else if (m_uptime_seconds < (86400))
  4227  003178  0101               	movlb	1	; () banked
  4228  00317A  514D               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  4229  00317C  E13E               	bnz	l14192
  4230  00317E  0E80               	movlw	128
  4231  003180  0101               	movlb	1	; () banked
  4232  003182  5D4A               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  4233  003184  0E51               	movlw	81
  4234  003186  0101               	movlb	1	; () banked
  4235  003188  594B               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  4236  00318A  0E01               	movlw	1
  4237  00318C  0101               	movlb	1	; () banked
  4238  00318E  594C               	subwfb	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  4239  003190  B0D8               	btfsc	status,0,c
  4240  003192  D033               	goto	l14192
  4241                           
  4242                           ; BSR set to: 1
  4243                           ;main.c: 521: {
  4244                           ;main.c: 522: m_var.unit = 6;
  4245  003194  0E06               	movlw	6
  4246  003196  0101               	movlb	1	; () banked
  4247  003198  6FBD               	movwf	(_m_var+6)& (0+255),b
  4248                           
  4249                           ; BSR set to: 1
  4250                           ;main.c: 523: tmp = m_uptime_seconds / 3600;
  4251  00319A  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  4252  00319E  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  4253  0031A2  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  4254  0031A6  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  4255  0031AA  0E10               	movlw	16
  4256  0031AC  0100               	movlb	0	; () banked
  4257  0031AE  6F85               	movwf	___lldiv@divisor& (0+255),b
  4258  0031B0  0E0E               	movlw	14
  4259  0031B2  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  4260  0031B4  0E00               	movlw	0
  4261  0031B6  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  4262  0031B8  0E00               	movlw	0
  4263  0031BA  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  4264  0031BC  ECD5  F03D         	call	___lldiv	;wreg free
  4265  0031C0  C081  F3E3         	movff	?___lldiv,send_initial_update@tmp
  4266  0031C4  C082  F3E4         	movff	?___lldiv+1,send_initial_update@tmp+1
  4267                           
  4268                           ;main.c: 524: m_var.value_byte1 = tmp / 256;
  4269  0031C8  0103               	movlb	3	; () banked
  4270  0031CA  51E4               	movf	(send_initial_update@tmp+1)& (0+255),w,b
  4271  0031CC  0101               	movlb	1	; () banked
  4272  0031CE  6FBB               	movwf	(_m_var+4)& (0+255),b
  4273                           
  4274                           ; BSR set to: 1
  4275                           ;main.c: 525: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  4276  0031D0  C3E3  F1BC         	movff	send_initial_update@tmp,_m_var+5
  4277                           
  4278                           ; BSR set to: 1
  4279                           ;main.c: 526: m_var.writable = 0;
  4280  0031D4  0E00               	movlw	0
  4281  0031D6  0101               	movlb	1	; () banked
  4282  0031D8  6FBE               	movwf	(_m_var+7)& (0+255),b
  4283                           
  4284                           ; BSR set to: 1
  4285                           ;main.c: 527: p_buffer += encode_uint16_variable(p_buffer, m_var);
  4286  0031DA  C15C  F081         	movff	_p_buffer,encode_uint16_variable@buffer
  4287  0031DE  C15D  F082         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  4288  0031E2  EE21  F0B7         	lfsr	2,_m_var
  4289  0031E6  EE00  F083         	lfsr	0,encode_uint16_variable@var
  4290  0031EA  0E08               	movlw	8
  4291  0031EC                     u16711:
  4292  0031EC  CFDB FFEB          	movff	plusw2,plusw0
  4293  0031F0  06E8               	decf	wreg,f,c
  4294  0031F2  E2FC               	bc	u16711
  4295  0031F4  EC34  F03F         	call	_encode_uint16_variable	;wreg free
  4296  0031F8  D032               	goto	L6
  4297  0031FA                     l14192:
  4298                           
  4299                           ; BSR set to: 1
  4300                           ;main.c: 529: else
  4301                           ;main.c: 530: {
  4302                           ;main.c: 531: m_var.unit = 0;
  4303  0031FA  0E00               	movlw	0
  4304  0031FC  0101               	movlb	1	; () banked
  4305  0031FE  6FBD               	movwf	(_m_var+6)& (0+255),b
  4306                           
  4307                           ; BSR set to: 1
  4308                           ;main.c: 532: tmp = m_uptime_seconds / 86400;
  4309  003200  C14A  F081         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  4310  003204  C14B  F082         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  4311  003208  C14C  F083         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  4312  00320C  C14D  F084         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  4313  003210  0E80               	movlw	128
  4314  003212  0100               	movlb	0	; () banked
  4315  003214  6F85               	movwf	___lldiv@divisor& (0+255),b
  4316  003216  0E51               	movlw	81
  4317  003218  6F86               	movwf	(___lldiv@divisor+1)& (0+255),b
  4318  00321A  0E01               	movlw	1
  4319  00321C  6F87               	movwf	(___lldiv@divisor+2)& (0+255),b
  4320  00321E  0E00               	movlw	0
  4321  003220  6F88               	movwf	(___lldiv@divisor+3)& (0+255),b
  4322  003222  ECD5  F03D         	call	___lldiv	;wreg free
  4323  003226  C081  F3E3         	movff	?___lldiv,send_initial_update@tmp
  4324  00322A  C082  F3E4         	movff	?___lldiv+1,send_initial_update@tmp+1
  4325                           
  4326                           ;main.c: 533: m_var.value_byte1 = tmp / 256;
  4327  00322E  0103               	movlb	3	; () banked
  4328  003230  51E4               	movf	(send_initial_update@tmp+1)& (0+255),w,b
  4329  003232  0101               	movlb	1	; () banked
  4330  003234  6FBB               	movwf	(_m_var+4)& (0+255),b
  4331                           
  4332                           ; BSR set to: 1
  4333                           ;main.c: 534: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  4334  003236  C3E3  F1BC         	movff	send_initial_update@tmp,_m_var+5
  4335                           
  4336                           ; BSR set to: 1
  4337                           ;main.c: 535: m_var.writable = 0;
  4338  00323A  0E00               	movlw	0
  4339  00323C  0101               	movlb	1	; () banked
  4340  00323E  6FBE               	movwf	(_m_var+7)& (0+255),b
  4341                           
  4342                           ; BSR set to: 1
  4343                           ;main.c: 536: p_buffer += encode_uint16_variable(p_buffer, m_var);
  4344  003240  C15C  F081         	movff	_p_buffer,encode_uint16_variable@buffer
  4345  003244  C15D  F082         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  4346  003248  EE21  F0B7         	lfsr	2,_m_var
  4347  00324C  EE00  F083         	lfsr	0,encode_uint16_variable@var
  4348  003250  0E08               	movlw	8
  4349  003252                     u16721:
  4350  003252  CFDB FFEB          	movff	plusw2,plusw0
  4351  003256  06E8               	decf	wreg,f,c
  4352  003258  E2FC               	bc	u16721
  4353  00325A  EC34  F03F         	call	_encode_uint16_variable	;wreg free
  4354  00325E                     L6:
  4355  00325E  0101               	movlb	1	; () banked
  4356  003260  6FFD               	movwf	??_send_initial_update& (0+255),b
  4357  003262  0101               	movlb	1	; () banked
  4358  003264  51FD               	movf	??_send_initial_update& (0+255),w,b
  4359  003266  0D01               	mullw	1
  4360  003268  50F3               	movf	prodl,w,c
  4361  00326A  0101               	movlb	1	; () banked
  4362  00326C  275C               	addwf	_p_buffer& (0+255),f,b
  4363  00326E  50F4               	movf	prodh,w,c
  4364  003270  0101               	movlb	1	; () banked
  4365  003272  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  4366                           
  4367                           ; BSR set to: 1
  4368                           ;main.c: 537: }
  4369                           ;main.c: 539: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  4370                           
  4371                           ; BSR set to: 1
  4372                           
  4373                           ; BSR set to: 1
  4374                           
  4375                           ; BSR set to: 1
  4376  003274  0EB7               	movlw	low _m_var
  4377  003276  0100               	movlb	0	; () banked
  4378  003278  6F81               	movwf	memcpy@d1& (0+255),b
  4379  00327A  0E01               	movlw	high _m_var
  4380  00327C  0100               	movlb	0	; () banked
  4381  00327E  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  4382  003280  0EFB               	movlw	low _UPDATE_FREQUENCY_LABEL
  4383  003282  0100               	movlb	0	; () banked
  4384  003284  6F83               	movwf	memcpy@s1& (0+255),b
  4385  003286  0E20               	movlw	high _UPDATE_FREQUENCY_LABEL
  4386  003288  0100               	movlb	0	; () banked
  4387  00328A  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  4388  00328C  0E00               	movlw	0
  4389  00328E  0100               	movlb	0	; () banked
  4390  003290  6F86               	movwf	(memcpy@n+1)& (0+255),b
  4391  003292  0E03               	movlw	3
  4392  003294  6F85               	movwf	memcpy@n& (0+255),b
  4393  003296  EC5F  F043         	call	_memcpy	;wreg free
  4394                           
  4395                           ;main.c: 540: m_var.unit = 4;
  4396  00329A  0E04               	movlw	4
  4397  00329C  0101               	movlb	1	; () banked
  4398  00329E  6FBD               	movwf	(_m_var+6)& (0+255),b
  4399                           
  4400                           ; BSR set to: 1
  4401                           ;main.c: 541: m_var.value_byte1 = m_update_frequency;
  4402  0032A0  C1FF  F1BB         	movff	_m_update_frequency,_m_var+4	;volatile
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;main.c: 542: m_var.writable = 1;
  4406  0032A4  0E01               	movlw	1
  4407  0032A6  0101               	movlb	1	; () banked
  4408  0032A8  6FBE               	movwf	(_m_var+7)& (0+255),b
  4409                           
  4410                           ; BSR set to: 1
  4411                           ;main.c: 543: p_buffer += encode_uint8_variable(p_buffer, m_var);
  4412  0032AA  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  4413  0032AE  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  4414  0032B2  EE21  F0B7         	lfsr	2,_m_var
  4415  0032B6  EE00  F083         	lfsr	0,encode_uint8_variable@var
  4416  0032BA  0E08               	movlw	8
  4417  0032BC                     u16731:
  4418  0032BC  CFDB FFEB          	movff	plusw2,plusw0
  4419  0032C0  06E8               	decf	wreg,f,c
  4420  0032C2  E2FC               	bc	u16731
  4421  0032C4  ECA5  F040         	call	_encode_uint8_variable	;wreg free
  4422  0032C8  0101               	movlb	1	; () banked
  4423  0032CA  6FFD               	movwf	??_send_initial_update& (0+255),b
  4424  0032CC  0101               	movlb	1	; () banked
  4425  0032CE  51FD               	movf	??_send_initial_update& (0+255),w,b
  4426  0032D0  0D01               	mullw	1
  4427  0032D2  50F3               	movf	prodl,w,c
  4428  0032D4  0101               	movlb	1	; () banked
  4429  0032D6  275C               	addwf	_p_buffer& (0+255),f,b
  4430  0032D8  50F4               	movf	prodh,w,c
  4431  0032DA  0101               	movlb	1	; () banked
  4432  0032DC  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  4433                           
  4434                           ; BSR set to: 1
  4435                           ;main.c: 545: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  4436  0032DE  0E97               	movlw	low _m_buffer
  4437  0032E0  0101               	movlb	1	; () banked
  4438  0032E2  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  4439  0032E4  0E01               	movlw	high _m_buffer
  4440  0032E6  0101               	movlb	1	; () banked
  4441  0032E8  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4442  0032EA  0E97               	movlw	_m_buffer& (0+255)
  4443  0032EC  0800               	sublw	0
  4444  0032EE  0101               	movlb	1	; () banked
  4445  0032F0  255C               	addwf	_p_buffer& (0+255),w,b
  4446  0032F2  0101               	movlb	1	; () banked
  4447  0032F4  6FF6               	movwf	do_UPDATE@size& (0+255),b
  4448  0032F6  0E00               	movlw	0
  4449  0032F8  0101               	movlb	1	; () banked
  4450  0032FA  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  4451  0032FC  EC1E  F031         	call	_do_UPDATE	;wreg free
  4452  003300  0900               	iorlw	0
  4453  003302  A4D8               	btfss	status,2,c
  4454  003304  D002               	goto	l14220
  4455                           
  4456                           ;main.c: 546: return 0;
  4457  003306  0E00               	movlw	0
  4458  003308  0012               	return	
  4459  00330A                     l14220:
  4460                           
  4461                           ;main.c: 550: p_buffer = m_buffer;
  4462  00330A  0E97               	movlw	low _m_buffer
  4463  00330C  0101               	movlb	1	; () banked
  4464  00330E  6F5C               	movwf	_p_buffer& (0+255),b
  4465  003310  0E01               	movlw	high _m_buffer
  4466  003312  0101               	movlb	1	; () banked
  4467  003314  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  4468                           
  4469                           ; BSR set to: 1
  4470                           ;main.c: 551: memcpy(m_var.label, FAILEDMSG_LABEL, 3);
  4471  003316  0EB7               	movlw	low _m_var
  4472  003318  0100               	movlb	0	; () banked
  4473  00331A  6F81               	movwf	memcpy@d1& (0+255),b
  4474  00331C  0E01               	movlw	high _m_var
  4475  00331E  0100               	movlb	0	; () banked
  4476  003320  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  4477  003322  0EE7               	movlw	low _FAILEDMSG_LABEL
  4478  003324  0100               	movlb	0	; () banked
  4479  003326  6F83               	movwf	memcpy@s1& (0+255),b
  4480  003328  0E20               	movlw	high _FAILEDMSG_LABEL
  4481  00332A  0100               	movlb	0	; () banked
  4482  00332C  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  4483  00332E  0E00               	movlw	0
  4484  003330  0100               	movlb	0	; () banked
  4485  003332  6F86               	movwf	(memcpy@n+1)& (0+255),b
  4486  003334  0E03               	movlw	3
  4487  003336  6F85               	movwf	memcpy@n& (0+255),b
  4488  003338  EC5F  F043         	call	_memcpy	;wreg free
  4489                           
  4490                           ;main.c: 552: m_var.unit = 3;
  4491  00333C  0E03               	movlw	3
  4492  00333E  0101               	movlb	1	; () banked
  4493  003340  6FBD               	movwf	(_m_var+6)& (0+255),b
  4494                           
  4495                           ; BSR set to: 1
  4496                           ;main.c: 553: float tmp2 = (float)(m_failed_messages*100)/(float)(m_failed_messages + m_
      +                          sent_messages);
  4497  003342  C142  F081         	movff	_m_failed_messages,___lmul@multiplier
  4498  003346  C143  F082         	movff	_m_failed_messages+1,___lmul@multiplier+1
  4499  00334A  C144  F083         	movff	_m_failed_messages+2,___lmul@multiplier+2
  4500  00334E  C145  F084         	movff	_m_failed_messages+3,___lmul@multiplier+3
  4501  003352  0E64               	movlw	100
  4502  003354  0100               	movlb	0	; () banked
  4503  003356  6F85               	movwf	___lmul@multiplicand& (0+255),b
  4504  003358  0E00               	movlw	0
  4505  00335A  6F86               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4506  00335C  0E00               	movlw	0
  4507  00335E  6F87               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4508  003360  0E00               	movlw	0
  4509  003362  6F88               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4510  003364  EC1C  F042         	call	___lmul	;wreg free
  4511  003368  C081  F08D         	movff	?___lmul,___lltoft@c
  4512  00336C  C082  F08E         	movff	?___lmul+1,___lltoft@c+1
  4513  003370  C083  F08F         	movff	?___lmul+2,___lltoft@c+2
  4514  003374  C084  F090         	movff	?___lmul+3,___lltoft@c+3
  4515  003378  EC2A  F041         	call	___lltoft	;wreg free
  4516  00337C  C08D  F096         	movff	?___lltoft,___ftdiv@f1
  4517  003380  C08E  F097         	movff	?___lltoft+1,___ftdiv@f1+1
  4518  003384  C08F  F098         	movff	?___lltoft+2,___ftdiv@f1+2
  4519  003388  0101               	movlb	1	; () banked
  4520  00338A  5146               	movf	_m_sent_messages& (0+255),w,b
  4521  00338C  0101               	movlb	1	; () banked
  4522  00338E  2542               	addwf	_m_failed_messages& (0+255),w,b
  4523  003390  0100               	movlb	0	; () banked
  4524  003392  6F8D               	movwf	___lltoft@c& (0+255),b
  4525  003394  0101               	movlb	1	; () banked
  4526  003396  5147               	movf	(_m_sent_messages+1)& (0+255),w,b
  4527  003398  0101               	movlb	1	; () banked
  4528  00339A  2143               	addwfc	(_m_failed_messages+1)& (0+255),w,b
  4529  00339C  0100               	movlb	0	; () banked
  4530  00339E  6F8E               	movwf	(___lltoft@c+1)& (0+255),b
  4531  0033A0  0101               	movlb	1	; () banked
  4532  0033A2  5148               	movf	(_m_sent_messages+2)& (0+255),w,b
  4533  0033A4  0101               	movlb	1	; () banked
  4534  0033A6  2144               	addwfc	(_m_failed_messages+2)& (0+255),w,b
  4535  0033A8  0100               	movlb	0	; () banked
  4536  0033AA  6F8F               	movwf	(___lltoft@c+2)& (0+255),b
  4537  0033AC  0101               	movlb	1	; () banked
  4538  0033AE  5149               	movf	(_m_sent_messages+3)& (0+255),w,b
  4539  0033B0  0101               	movlb	1	; () banked
  4540  0033B2  2145               	addwfc	(_m_failed_messages+3)& (0+255),w,b
  4541  0033B4  0100               	movlb	0	; () banked
  4542  0033B6  6F90               	movwf	(___lltoft@c+3)& (0+255),b
  4543  0033B8  EC2A  F041         	call	___lltoft	;wreg free
  4544  0033BC  C08D  F099         	movff	?___lltoft,___ftdiv@f2
  4545  0033C0  C08E  F09A         	movff	?___lltoft+1,___ftdiv@f2+1
  4546  0033C4  C08F  F09B         	movff	?___lltoft+2,___ftdiv@f2+2
  4547  0033C8  EC94  F034         	call	___ftdiv	;wreg free
  4548  0033CC  C096  F3D4         	movff	?___ftdiv,send_initial_update@tmp2
  4549  0033D0  C097  F3D5         	movff	?___ftdiv+1,send_initial_update@tmp2+1
  4550  0033D4  C098  F3D6         	movff	?___ftdiv+2,send_initial_update@tmp2+2
  4551                           
  4552                           ;main.c: 554: m_var.value_byte1 = (uint8_t)floor(tmp2);
  4553  0033D8  C3D4  F0BE         	movff	send_initial_update@tmp2,floor@x
  4554  0033DC  C3D5  F0BF         	movff	send_initial_update@tmp2+1,floor@x+1
  4555  0033E0  C3D6  F0C0         	movff	send_initial_update@tmp2+2,floor@x+2
  4556  0033E4  ECE4  F03A         	call	_floor	;wreg free
  4557  0033E8  C0BE  F3D7         	movff	?_floor,_send_initial_update$5076
  4558  0033EC  C0BF  F3D8         	movff	?_floor+1,_send_initial_update$5076+1
  4559  0033F0  C0C0  F3D9         	movff	?_floor+2,_send_initial_update$5076+2
  4560                           
  4561                           ;main.c: 554: m_var.value_byte1 = (uint8_t)floor(tmp2);
  4562  0033F4  C3D7  F0A5         	movff	_send_initial_update$5076,___fttol@f1
  4563  0033F8  C3D8  F0A6         	movff	_send_initial_update$5076+1,___fttol@f1+1
  4564  0033FC  C3D9  F0A7         	movff	_send_initial_update$5076+2,___fttol@f1+2
  4565  003400  EC3A  F035         	call	___fttol	;wreg free
  4566  003404  0100               	movlb	0	; () banked
  4567  003406  51A5               	movf	?___fttol& (0+255),w,b
  4568  003408  0101               	movlb	1	; () banked
  4569  00340A  6FBB               	movwf	(_m_var+4)& (0+255),b
  4570                           
  4571                           ; BSR set to: 1
  4572                           ;main.c: 555: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4573  00340C  C3D4  F0BE         	movff	send_initial_update@tmp2,floor@x
  4574  003410  C3D5  F0BF         	movff	send_initial_update@tmp2+1,floor@x+1
  4575  003414  C3D6  F0C0         	movff	send_initial_update@tmp2+2,floor@x+2
  4576  003418  ECE4  F03A         	call	_floor	;wreg free
  4577  00341C  C0BE  F0C6         	movff	?_floor,___ftneg@f1
  4578  003420  C0BF  F0C7         	movff	?_floor+1,___ftneg@f1+1
  4579  003424  C0C0  F0C8         	movff	?_floor+2,___ftneg@f1+2
  4580  003428  EC4C  F045         	call	___ftneg	;wreg free
  4581  00342C  C0C6  F3DA         	movff	?___ftneg,_send_initial_update$5077
  4582  003430  C0C7  F3DB         	movff	?___ftneg+1,_send_initial_update$5077+1
  4583  003434  C0C8  F3DC         	movff	?___ftneg+2,_send_initial_update$5077+2
  4584                           
  4585                           ;main.c: 555: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4586  003438  0E00               	movlw	0
  4587  00343A  0100               	movlb	0	; () banked
  4588  00343C  6FCC               	movwf	___ftmul@f2& (0+255),b
  4589  00343E  0EC8               	movlw	200
  4590  003440  0100               	movlb	0	; () banked
  4591  003442  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  4592  003444  0E42               	movlw	66
  4593  003446  0100               	movlb	0	; () banked
  4594  003448  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  4595  00344A  C3D4  F08C         	movff	send_initial_update@tmp2,___ftadd@f2
  4596  00344E  C3D5  F08D         	movff	send_initial_update@tmp2+1,___ftadd@f2+1
  4597  003452  C3D6  F08E         	movff	send_initial_update@tmp2+2,___ftadd@f2+2
  4598  003456  C3DA  F089         	movff	_send_initial_update$5077,___ftadd@f1
  4599  00345A  C3DB  F08A         	movff	_send_initial_update$5077+1,___ftadd@f1+1
  4600  00345E  C3DC  F08B         	movff	_send_initial_update$5077+2,___ftadd@f1+2
  4601  003462  EC3B  F02A         	call	___ftadd	;wreg free
  4602  003466  C089  F0C9         	movff	?___ftadd,___ftmul@f1
  4603  00346A  C08A  F0CA         	movff	?___ftadd+1,___ftmul@f1+1
  4604  00346E  C08B  F0CB         	movff	?___ftadd+2,___ftmul@f1+2
  4605  003472  EC93  F032         	call	___ftmul	;wreg free
  4606  003476  C0C9  F3DD         	movff	?___ftmul,_send_initial_update$5078
  4607  00347A  C0CA  F3DE         	movff	?___ftmul+1,_send_initial_update$5078+1
  4608  00347E  C0CB  F3DF         	movff	?___ftmul+2,_send_initial_update$5078+2
  4609                           
  4610                           ;main.c: 555: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4611  003482  C3DD  F0BE         	movff	_send_initial_update$5078,floor@x
  4612  003486  C3DE  F0BF         	movff	_send_initial_update$5078+1,floor@x+1
  4613  00348A  C3DF  F0C0         	movff	_send_initial_update$5078+2,floor@x+2
  4614  00348E  ECE4  F03A         	call	_floor	;wreg free
  4615  003492  C0BE  F3E0         	movff	?_floor,_send_initial_update$5079
  4616  003496  C0BF  F3E1         	movff	?_floor+1,_send_initial_update$5079+1
  4617  00349A  C0C0  F3E2         	movff	?_floor+2,_send_initial_update$5079+2
  4618                           
  4619                           ;main.c: 555: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4620  00349E  C3E0  F0A5         	movff	_send_initial_update$5079,___fttol@f1
  4621  0034A2  C3E1  F0A6         	movff	_send_initial_update$5079+1,___fttol@f1+1
  4622  0034A6  C3E2  F0A7         	movff	_send_initial_update$5079+2,___fttol@f1+2
  4623  0034AA  EC3A  F035         	call	___fttol	;wreg free
  4624  0034AE  0100               	movlb	0	; () banked
  4625  0034B0  51A5               	movf	?___fttol& (0+255),w,b
  4626  0034B2  0101               	movlb	1	; () banked
  4627  0034B4  6FBC               	movwf	(_m_var+5)& (0+255),b
  4628                           
  4629                           ; BSR set to: 1
  4630                           ;main.c: 556: m_var.writable = 0;
  4631  0034B6  0E00               	movlw	0
  4632  0034B8  0101               	movlb	1	; () banked
  4633  0034BA  6FBE               	movwf	(_m_var+7)& (0+255),b
  4634                           
  4635                           ; BSR set to: 1
  4636                           ;main.c: 557: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  4637  0034BC  C15C  F081         	movff	_p_buffer,encode_ufixed16_variable@buffer
  4638  0034C0  C15D  F082         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  4639  0034C4  EE21  F0B7         	lfsr	2,_m_var
  4640  0034C8  EE00  F083         	lfsr	0,encode_ufixed16_variable@var
  4641  0034CC  0E08               	movlw	8
  4642  0034CE                     u16751:
  4643  0034CE  CFDB FFEB          	movff	plusw2,plusw0
  4644  0034D2  06E8               	decf	wreg,f,c
  4645  0034D4  E2FC               	bc	u16751
  4646  0034D6  EC82  F03F         	call	_encode_ufixed16_variable	;wreg free
  4647  0034DA  0101               	movlb	1	; () banked
  4648  0034DC  6FFD               	movwf	??_send_initial_update& (0+255),b
  4649  0034DE  0101               	movlb	1	; () banked
  4650  0034E0  51FD               	movf	??_send_initial_update& (0+255),w,b
  4651  0034E2  0D01               	mullw	1
  4652  0034E4  50F3               	movf	prodl,w,c
  4653  0034E6  0101               	movlb	1	; () banked
  4654  0034E8  275C               	addwf	_p_buffer& (0+255),f,b
  4655  0034EA  50F4               	movf	prodh,w,c
  4656  0034EC  0101               	movlb	1	; () banked
  4657  0034EE  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  4658                           
  4659                           ; BSR set to: 1
  4660                           ;main.c: 559: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  4661  0034F0  0E97               	movlw	low _m_buffer
  4662  0034F2  0101               	movlb	1	; () banked
  4663  0034F4  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  4664  0034F6  0E01               	movlw	high _m_buffer
  4665  0034F8  0101               	movlb	1	; () banked
  4666  0034FA  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4667  0034FC  0E97               	movlw	_m_buffer& (0+255)
  4668  0034FE  0800               	sublw	0
  4669  003500  0101               	movlb	1	; () banked
  4670  003502  255C               	addwf	_p_buffer& (0+255),w,b
  4671  003504  0101               	movlb	1	; () banked
  4672  003506  6FF6               	movwf	do_UPDATE@size& (0+255),b
  4673  003508  0E01               	movlw	1
  4674  00350A  0101               	movlb	1	; () banked
  4675  00350C  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  4676  00350E  EC1E  F031         	call	_do_UPDATE	;wreg free
  4677  003512  0012               	return	
  4678  003514                     __end_of_send_initial_update:
  4679                           	opt stack 0
  4680                           tblptru	equ	0xFF8
  4681                           tblptrh	equ	0xFF7
  4682                           tblptrl	equ	0xFF6
  4683                           tablat	equ	0xFF5
  4684                           prodh	equ	0xFF4
  4685                           prodl	equ	0xFF3
  4686                           postinc0	equ	0xFEE
  4687                           plusw0	equ	0xFEB
  4688                           wreg	equ	0xFE8
  4689                           indf2	equ	0xFDF
  4690                           postinc2	equ	0xFDE
  4691                           plusw2	equ	0xFDB
  4692                           fsr2h	equ	0xFDA
  4693                           fsr2l	equ	0xFD9
  4694                           status	equ	0xFD8
  4695                           
  4696 ;; *************** function _floor *****************
  4697 ;; Defined at:
  4698 ;;		line 13 in file "/opt/microchip/xc8/v1.35/sources/common/floor.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  x               3   94[BANK0 ] unsigned char 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  i               3   97[BANK0 ] unsigned char 
  4703 ;;  expon           2  100[BANK0 ] int 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  3   94[BANK0 ] int 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4713 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4714 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4716 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4717 ;;Total ram usage:        8 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    9
  4720 ;; This function calls:
  4721 ;;		___altoft
  4722 ;;		___ftadd
  4723 ;;		___ftge
  4724 ;;		___fttol
  4725 ;;		_frexp
  4726 ;; This function is called by:
  4727 ;;		_send_initial_update
  4728 ;;		_send_periodical_update
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text3
  4733  0075C8                     __ptext3:
  4734                           	opt stack 0
  4735  0075C8                     _floor:
  4736                           	opt stack 20
  4737                           
  4738                           ;incstack = 0
  4739  0075C8  C0BE  F081         	movff	floor@x,frexp@value
  4740  0075CC  C0BF  F082         	movff	floor@x+1,frexp@value+1
  4741  0075D0  C0C0  F083         	movff	floor@x+2,frexp@value+2
  4742  0075D4  0EC4               	movlw	low floor@expon
  4743  0075D6  0100               	movlb	0	; () banked
  4744  0075D8  6F84               	movwf	frexp@eptr& (0+255),b
  4745  0075DA  0E00               	movlw	high floor@expon
  4746  0075DC  0100               	movlb	0	; () banked
  4747  0075DE  6F85               	movwf	(frexp@eptr+1)& (0+255),b
  4748  0075E0  ECD0  F03F         	call	_frexp	;wreg free
  4749  0075E4  0100               	movlb	0	; () banked
  4750  0075E6  AFC5               	btfss	(floor@expon+1)& (0+255),7,b
  4751  0075E8  D017               	goto	l13024
  4752                           
  4753                           ; BSR set to: 0
  4754  0075EA  0100               	movlb	0	; () banked
  4755  0075EC  AFC0               	btfss	(floor@x+2)& (0+255),7,b
  4756  0075EE  D00A               	goto	l13020
  4757                           
  4758                           ; BSR set to: 0
  4759  0075F0  0E00               	movlw	0
  4760  0075F2  0100               	movlb	0	; () banked
  4761  0075F4  6FBE               	movwf	?_floor& (0+255),b
  4762  0075F6  0E80               	movlw	128
  4763  0075F8  0100               	movlb	0	; () banked
  4764  0075FA  6FBF               	movwf	(?_floor+1)& (0+255),b
  4765  0075FC  0EBF               	movlw	191
  4766  0075FE  0100               	movlb	0	; () banked
  4767  007600  6FC0               	movwf	(?_floor+2)& (0+255),b
  4768                           
  4769                           ; BSR set to: 0
  4770  007602  0012               	return	
  4771  007604                     l13020:
  4772                           
  4773                           ; BSR set to: 0
  4774  007604  0E00               	movlw	0
  4775  007606  0100               	movlb	0	; () banked
  4776  007608  6FBE               	movwf	?_floor& (0+255),b
  4777  00760A  0E00               	movlw	0
  4778  00760C  0100               	movlb	0	; () banked
  4779  00760E  6FBF               	movwf	(?_floor+1)& (0+255),b
  4780  007610  0E00               	movlw	0
  4781  007612  0100               	movlb	0	; () banked
  4782  007614  6FC0               	movwf	(?_floor+2)& (0+255),b
  4783                           
  4784                           ; BSR set to: 0
  4785  007616  0012               	return	
  4786  007618                     l13024:
  4787                           
  4788                           ; BSR set to: 0
  4789  007618  0100               	movlb	0	; () banked
  4790  00761A  51C5               	movf	(floor@expon+1)& (0+255),w,b
  4791  00761C  E105               	bnz	u15180
  4792  00761E  0E15               	movlw	21
  4793  007620  0100               	movlb	0	; () banked
  4794  007622  5DC4               	subwf	floor@expon& (0+255),w,b
  4795  007624  A0D8               	btfss	status,0,c
  4796  007626  D007               	goto	l13028
  4797  007628                     u15180:
  4798                           
  4799                           ; BSR set to: 0
  4800  007628  C0BE  F0BE         	movff	floor@x,?_floor
  4801  00762C  C0BF  F0BF         	movff	floor@x+1,?_floor+1
  4802  007630  C0C0  F0C0         	movff	floor@x+2,?_floor+2
  4803  007634  0012               	return	
  4804  007636                     l13028:
  4805                           
  4806                           ; BSR set to: 0
  4807  007636  C0BE  F0A5         	movff	floor@x,___fttol@f1
  4808  00763A  C0BF  F0A6         	movff	floor@x+1,___fttol@f1+1
  4809  00763E  C0C0  F0A7         	movff	floor@x+2,___fttol@f1+2
  4810  007642  EC3A  F035         	call	___fttol	;wreg free
  4811  007646  C0A5  F0B4         	movff	?___fttol,___altoft@c
  4812  00764A  C0A6  F0B5         	movff	?___fttol+1,___altoft@c+1
  4813  00764E  C0A7  F0B6         	movff	?___fttol+2,___altoft@c+2
  4814  007652  C0A8  F0B7         	movff	?___fttol+3,___altoft@c+3
  4815  007656  ECE5  F03E         	call	___altoft	;wreg free
  4816  00765A  C0B4  F0C1         	movff	?___altoft,floor@i
  4817  00765E  C0B5  F0C2         	movff	?___altoft+1,floor@i+1
  4818  007662  C0B6  F0C3         	movff	?___altoft+2,floor@i+2
  4819  007666  C0BE  F081         	movff	floor@x,___ftge@ff1
  4820  00766A  C0BF  F082         	movff	floor@x+1,___ftge@ff1+1
  4821  00766E  C0C0  F083         	movff	floor@x+2,___ftge@ff1+2
  4822  007672  C0C1  F084         	movff	floor@i,___ftge@ff2
  4823  007676  C0C2  F085         	movff	floor@i+1,___ftge@ff2+1
  4824  00767A  C0C3  F086         	movff	floor@i+2,___ftge@ff2+2
  4825  00767E  ECB2  F03C         	call	___ftge	;wreg free
  4826  007682  0100               	movlb	0	; () banked
  4827  007684  B0D8               	btfsc	status,0,c
  4828  007686  D018               	goto	l1695
  4829                           
  4830                           ; BSR set to: 0
  4831  007688  C0C1  F089         	movff	floor@i,___ftadd@f1
  4832  00768C  C0C2  F08A         	movff	floor@i+1,___ftadd@f1+1
  4833  007690  C0C3  F08B         	movff	floor@i+2,___ftadd@f1+2
  4834  007694  0E00               	movlw	0
  4835  007696  0100               	movlb	0	; () banked
  4836  007698  6F8C               	movwf	___ftadd@f2& (0+255),b
  4837  00769A  0E80               	movlw	128
  4838  00769C  0100               	movlb	0	; () banked
  4839  00769E  6F8D               	movwf	(___ftadd@f2+1)& (0+255),b
  4840  0076A0  0EBF               	movlw	191
  4841  0076A2  0100               	movlb	0	; () banked
  4842  0076A4  6F8E               	movwf	(___ftadd@f2+2)& (0+255),b
  4843  0076A6  EC3B  F02A         	call	___ftadd	;wreg free
  4844  0076AA  C089  F0BE         	movff	?___ftadd,?_floor
  4845  0076AE  C08A  F0BF         	movff	?___ftadd+1,?_floor+1
  4846  0076B2  C08B  F0C0         	movff	?___ftadd+2,?_floor+2
  4847  0076B6  0012               	return	
  4848  0076B8                     l1695:
  4849                           
  4850                           ; BSR set to: 0
  4851  0076B8  C0C1  F0BE         	movff	floor@i,?_floor
  4852  0076BC  C0C2  F0BF         	movff	floor@i+1,?_floor+1
  4853  0076C0  C0C3  F0C0         	movff	floor@i+2,?_floor+2
  4854  0076C4  0012               	return		;funcret
  4855  0076C6                     __end_of_floor:
  4856                           	opt stack 0
  4857                           tblptru	equ	0xFF8
  4858                           tblptrh	equ	0xFF7
  4859                           tblptrl	equ	0xFF6
  4860                           tablat	equ	0xFF5
  4861                           prodh	equ	0xFF4
  4862                           prodl	equ	0xFF3
  4863                           postinc0	equ	0xFEE
  4864                           plusw0	equ	0xFEB
  4865                           wreg	equ	0xFE8
  4866                           indf2	equ	0xFDF
  4867                           postinc2	equ	0xFDE
  4868                           plusw2	equ	0xFDB
  4869                           fsr2h	equ	0xFDA
  4870                           fsr2l	equ	0xFD9
  4871                           status	equ	0xFD8
  4872                           
  4873 ;; *************** function _frexp *****************
  4874 ;; Defined at:
  4875 ;;		line 254 in file "/opt/microchip/xc8/v1.35/sources/common/frexp.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  value           3   33[BANK0 ] int 
  4878 ;;  eptr            2   36[BANK0 ] PTR int 
  4879 ;;		 -> floor@expon(2), 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;		None
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  3   33[BANK0 ] PTR int 
  4884 ;; Registers used:
  4885 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4891 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4893 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4894 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4895 ;;Total ram usage:        7 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    7
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_floor
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text4
  4906  007FA0                     __ptext4:
  4907                           	opt stack 0
  4908  007FA0                     _frexp:
  4909                           	opt stack 21
  4910                           
  4911                           ;incstack = 0
  4912  007FA0  0100               	movlb	0	; () banked
  4913  007FA2  5181               	movf	frexp@value& (0+255),w,b
  4914  007FA4  0100               	movlb	0	; () banked
  4915  007FA6  1182               	iorwf	(frexp@value+1)& (0+255),w,b
  4916  007FA8  0100               	movlb	0	; () banked
  4917  007FAA  1183               	iorwf	(frexp@value+2)& (0+255),w,b
  4918  007FAC  A4D8               	btfss	status,2,c
  4919  007FAE  D009               	goto	l12484
  4920                           
  4921                           ; BSR set to: 0
  4922  007FB0  C084  FFD9         	movff	frexp@eptr,fsr2l
  4923  007FB4  C085  FFDA         	movff	frexp@eptr+1,fsr2h
  4924  007FB8  0E00               	movlw	0
  4925  007FBA  6EDE               	movwf	postinc2,c
  4926  007FBC  0E00               	movlw	0
  4927  007FBE  6EDD               	movwf	postdec2,c
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;	Return value of _frexp is never used
  4931  007FC0  0012               	return	
  4932  007FC2                     l12484:
  4933                           
  4934                           ; BSR set to: 0
  4935  007FC2  0100               	movlb	0	; () banked
  4936  007FC4  5183               	movf	(frexp@value+2)& (0+255),w,b
  4937  007FC6  0B7F               	andlw	127
  4938  007FC8  0100               	movlb	0	; () banked
  4939  007FCA  6F86               	movwf	??_frexp& (0+255),b
  4940  007FCC  6B87               	clrf	(??_frexp+1)& (0+255),b
  4941  007FCE  90D8               	bcf	status,0,c
  4942  007FD0  0100               	movlb	0	; () banked
  4943  007FD2  3786               	rlcf	??_frexp& (0+255),f,b
  4944  007FD4  3787               	rlcf	(??_frexp+1)& (0+255),f,b
  4945  007FD6  C084  FFD9         	movff	frexp@eptr,fsr2l
  4946  007FDA  C085  FFDA         	movff	frexp@eptr+1,fsr2h
  4947  007FDE  C086  FFDE         	movff	??_frexp,postinc2
  4948  007FE2  C087  FFDD         	movff	??_frexp+1,postdec2
  4949  007FE6  0100               	movlb	0	; () banked
  4950  007FE8  AF82               	btfss	(frexp@value+1)& (0+255),7,b
  4951  007FEA  D004               	goto	u14470
  4952  007FEC  0100               	movlb	0	; () banked
  4953  007FEE  6B86               	clrf	??_frexp& (0+255),b
  4954  007FF0  2B86               	incf	??_frexp& (0+255),f,b
  4955  007FF2  D002               	goto	u14478
  4956  007FF4                     u14470:
  4957  007FF4  0100               	movlb	0	; () banked
  4958  007FF6  6B86               	clrf	??_frexp& (0+255),b
  4959  007FF8                     u14478:
  4960  007FF8  0100               	movlb	0	; () banked
  4961  007FFA  5186               	movf	??_frexp& (0+255),w,b
  4962  007FFC  C084  FFD9         	movff	frexp@eptr,fsr2l
  4963  008000  C085  FFDA         	movff	frexp@eptr+1,fsr2h
  4964  008004  12DE               	iorwf	postinc2,f,c
  4965  008006  0E00               	movlw	0
  4966  008008  12DD               	iorwf	postdec2,f,c
  4967                           
  4968                           ; BSR set to: 0
  4969  00800A  C084  FFD9         	movff	frexp@eptr,fsr2l
  4970  00800E  C085  FFDA         	movff	frexp@eptr+1,fsr2h
  4971  008012  0E82               	movlw	130
  4972  008014  26DE               	addwf	postinc2,f,c
  4973  008016  0EFF               	movlw	255
  4974  008018  22DD               	addwfc	postdec2,f,c
  4975                           
  4976                           ; BSR set to: 0
  4977  00801A  0100               	movlb	0	; () banked
  4978  00801C  8183               	bsf	(frexp@value+2)& (0+255),0,b
  4979  00801E  8383               	bsf	(frexp@value+2)& (0+255),1,b
  4980  008020  8583               	bsf	(frexp@value+2)& (0+255),2,b
  4981  008022  8783               	bsf	(frexp@value+2)& (0+255),3,b
  4982  008024  8983               	bsf	(frexp@value+2)& (0+255),4,b
  4983  008026  8B83               	bsf	(frexp@value+2)& (0+255),5,b
  4984  008028  9D83               	bcf	(frexp@value+2)& (0+255),6,b
  4985                           
  4986                           ; BSR set to: 0
  4987  00802A  0100               	movlb	0	; () banked
  4988  00802C  9F82               	bcf	(frexp@value+1)& (0+255),7,b
  4989  00802E  0012               	return	
  4990  008030                     __end_of_frexp:
  4991                           	opt stack 0
  4992                           tblptru	equ	0xFF8
  4993                           tblptrh	equ	0xFF7
  4994                           tblptrl	equ	0xFF6
  4995                           tablat	equ	0xFF5
  4996                           prodh	equ	0xFF4
  4997                           prodl	equ	0xFF3
  4998                           postinc0	equ	0xFEE
  4999                           plusw0	equ	0xFEB
  5000                           wreg	equ	0xFE8
  5001                           indf2	equ	0xFDF
  5002                           postinc2	equ	0xFDE
  5003                           postdec2	equ	0xFDD
  5004                           plusw2	equ	0xFDB
  5005                           fsr2h	equ	0xFDA
  5006                           fsr2l	equ	0xFD9
  5007                           status	equ	0xFD8
  5008                           
  5009 ;; *************** function ___ftge *****************
  5010 ;; Defined at:
  5011 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/ftge.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  ff1             3   33[BANK0 ] float 
  5014 ;;  ff2             3   36[BANK0 ] float 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;		None               void
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5026 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5028 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5029 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5030 ;;Total ram usage:        9 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    7
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_floor
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text5
  5041  007964                     __ptext5:
  5042                           	opt stack 0
  5043  007964                     ___ftge:
  5044                           	opt stack 21
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;incstack = 0
  5048  007964  0100               	movlb	0	; () banked
  5049  007966  AF83               	btfss	(___ftge@ff1+2)& (0+255),7,b
  5050  007968  D01D               	goto	l12498
  5051                           
  5052                           ; BSR set to: 0
  5053  00796A  C081  F087         	movff	___ftge@ff1,??___ftge
  5054  00796E  C082  F088         	movff	___ftge@ff1+1,??___ftge+1
  5055  007972  C083  F089         	movff	___ftge@ff1+2,??___ftge+2
  5056  007976  0100               	movlb	0	; () banked
  5057  007978  1F87               	comf	??___ftge& (0+255),f,b
  5058  00797A  1F88               	comf	(??___ftge+1)& (0+255),f,b
  5059  00797C  1F89               	comf	(??___ftge+2)& (0+255),f,b
  5060  00797E  2B87               	incf	??___ftge& (0+255),f,b
  5061  007980  0E00               	movlw	0
  5062  007982  2388               	addwfc	(??___ftge+1)& (0+255),f,b
  5063  007984  2389               	addwfc	(??___ftge+2)& (0+255),f,b
  5064  007986  0E00               	movlw	0
  5065  007988  0100               	movlb	0	; () banked
  5066  00798A  2587               	addwf	??___ftge& (0+255),w,b
  5067  00798C  0100               	movlb	0	; () banked
  5068  00798E  6F81               	movwf	___ftge@ff1& (0+255),b
  5069  007990  0E00               	movlw	0
  5070  007992  0100               	movlb	0	; () banked
  5071  007994  2188               	addwfc	(??___ftge+1)& (0+255),w,b
  5072  007996  0100               	movlb	0	; () banked
  5073  007998  6F82               	movwf	(___ftge@ff1+1)& (0+255),b
  5074  00799A  0E80               	movlw	128
  5075  00799C  0100               	movlb	0	; () banked
  5076  00799E  2189               	addwfc	(??___ftge+2)& (0+255),w,b
  5077  0079A0  0100               	movlb	0	; () banked
  5078  0079A2  6F83               	movwf	(___ftge@ff1+2)& (0+255),b
  5079  0079A4                     l12498:
  5080                           
  5081                           ; BSR set to: 0
  5082  0079A4  0100               	movlb	0	; () banked
  5083  0079A6  AF86               	btfss	(___ftge@ff2+2)& (0+255),7,b
  5084  0079A8  D01D               	goto	l12502
  5085                           
  5086                           ; BSR set to: 0
  5087  0079AA  C084  F087         	movff	___ftge@ff2,??___ftge
  5088  0079AE  C085  F088         	movff	___ftge@ff2+1,??___ftge+1
  5089  0079B2  C086  F089         	movff	___ftge@ff2+2,??___ftge+2
  5090  0079B6  0100               	movlb	0	; () banked
  5091  0079B8  1F87               	comf	??___ftge& (0+255),f,b
  5092  0079BA  1F88               	comf	(??___ftge+1)& (0+255),f,b
  5093  0079BC  1F89               	comf	(??___ftge+2)& (0+255),f,b
  5094  0079BE  2B87               	incf	??___ftge& (0+255),f,b
  5095  0079C0  0E00               	movlw	0
  5096  0079C2  2388               	addwfc	(??___ftge+1)& (0+255),f,b
  5097  0079C4  2389               	addwfc	(??___ftge+2)& (0+255),f,b
  5098  0079C6  0E00               	movlw	0
  5099  0079C8  0100               	movlb	0	; () banked
  5100  0079CA  2587               	addwf	??___ftge& (0+255),w,b
  5101  0079CC  0100               	movlb	0	; () banked
  5102  0079CE  6F84               	movwf	___ftge@ff2& (0+255),b
  5103  0079D0  0E00               	movlw	0
  5104  0079D2  0100               	movlb	0	; () banked
  5105  0079D4  2188               	addwfc	(??___ftge+1)& (0+255),w,b
  5106  0079D6  0100               	movlb	0	; () banked
  5107  0079D8  6F85               	movwf	(___ftge@ff2+1)& (0+255),b
  5108  0079DA  0E80               	movlw	128
  5109  0079DC  0100               	movlb	0	; () banked
  5110  0079DE  2189               	addwfc	(??___ftge+2)& (0+255),w,b
  5111  0079E0  0100               	movlb	0	; () banked
  5112  0079E2  6F86               	movwf	(___ftge@ff2+2)& (0+255),b
  5113  0079E4                     l12502:
  5114                           
  5115                           ; BSR set to: 0
  5116  0079E4  0E00               	movlw	0
  5117  0079E6  0100               	movlb	0	; () banked
  5118  0079E8  1B81               	xorwf	___ftge@ff1& (0+255),f,b
  5119  0079EA  0E00               	movlw	0
  5120  0079EC  0100               	movlb	0	; () banked
  5121  0079EE  1B82               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5122  0079F0  0E80               	movlw	128
  5123  0079F2  0100               	movlb	0	; () banked
  5124  0079F4  1B83               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5125                           
  5126                           ; BSR set to: 0
  5127  0079F6  0E00               	movlw	0
  5128  0079F8  0100               	movlb	0	; () banked
  5129  0079FA  1B84               	xorwf	___ftge@ff2& (0+255),f,b
  5130  0079FC  0E00               	movlw	0
  5131  0079FE  0100               	movlb	0	; () banked
  5132  007A00  1B85               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5133  007A02  0E80               	movlw	128
  5134  007A04  0100               	movlb	0	; () banked
  5135  007A06  1B86               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5136  007A08  0100               	movlb	0	; () banked
  5137  007A0A  5184               	movf	___ftge@ff2& (0+255),w,b
  5138  007A0C  0100               	movlb	0	; () banked
  5139  007A0E  5D81               	subwf	___ftge@ff1& (0+255),w,b
  5140  007A10  0100               	movlb	0	; () banked
  5141  007A12  5185               	movf	(___ftge@ff2+1)& (0+255),w,b
  5142  007A14  0100               	movlb	0	; () banked
  5143  007A16  5982               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5144  007A18  0100               	movlb	0	; () banked
  5145  007A1A  5186               	movf	(___ftge@ff2+2)& (0+255),w,b
  5146  007A1C  0100               	movlb	0	; () banked
  5147  007A1E  5983               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5148  007A20  B0D8               	btfsc	status,0,c
  5149  007A22  D002               	goto	l12508
  5150                           
  5151                           ; BSR set to: 0
  5152  007A24  90D8               	bcf	status,0,c
  5153  007A26  0012               	return	
  5154  007A28                     l12508:
  5155                           
  5156                           ; BSR set to: 0
  5157  007A28  80D8               	bsf	status,0,c
  5158                           
  5159                           ; BSR set to: 0
  5160  007A2A  0012               	return	
  5161  007A2C                     __end_of___ftge:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           postinc0	equ	0xFEE
  5170                           plusw0	equ	0xFEB
  5171                           wreg	equ	0xFE8
  5172                           indf2	equ	0xFDF
  5173                           postinc2	equ	0xFDE
  5174                           postdec2	equ	0xFDD
  5175                           plusw2	equ	0xFDB
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function ___ftadd *****************
  5181 ;; Defined at:
  5182 ;;		line 86 in file "/opt/microchip/xc8/v1.35/sources/common/ftadd.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  f1              3   41[BANK0 ] float 
  5185 ;;  f2              3   44[BANK0 ] float 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  exp1            1   52[BANK0 ] unsigned char 
  5188 ;;  exp2            1   51[BANK0 ] unsigned char 
  5189 ;;  sign            1   50[BANK0 ] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  3   41[BANK0 ] float 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5199 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5202 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5203 ;;Total ram usage:       12 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    8
  5206 ;; This function calls:
  5207 ;;		___ftpack
  5208 ;; This function is called by:
  5209 ;;		_send_initial_update
  5210 ;;		_send_periodical_update
  5211 ;;		_floor
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text6
  5216  005476                     __ptext6:
  5217                           	opt stack 0
  5218  005476                     ___ftadd:
  5219                           	opt stack 20
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;incstack = 0
  5223  005476  C08B  F08F         	movff	___ftadd@f1+2,??___ftadd
  5224  00547A  0100               	movlb	0	; () banked
  5225  00547C  6B90               	clrf	(??___ftadd+1)& (0+255),b
  5226  00547E  6B91               	clrf	(??___ftadd+2)& (0+255),b
  5227  005480  0100               	movlb	0	; () banked
  5228  005482  358A               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  5229  005484  0100               	movlb	0	; () banked
  5230  005486  378F               	rlcf	??___ftadd& (0+255),f,b
  5231  005488  E301               	bnc	u14251
  5232  00548A  8190               	bsf	(??___ftadd+1)& (0+255),0,b
  5233  00548C                     u14251:
  5234  00548C  0100               	movlb	0	; () banked
  5235  00548E  518F               	movf	??___ftadd& (0+255),w,b
  5236  005490  0100               	movlb	0	; () banked
  5237  005492  6F94               	movwf	___ftadd@exp1& (0+255),b
  5238  005494  C08E  F08F         	movff	___ftadd@f2+2,??___ftadd
  5239  005498  0100               	movlb	0	; () banked
  5240  00549A  6B90               	clrf	(??___ftadd+1)& (0+255),b
  5241  00549C  6B91               	clrf	(??___ftadd+2)& (0+255),b
  5242  00549E  0100               	movlb	0	; () banked
  5243  0054A0  358D               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  5244  0054A2  0100               	movlb	0	; () banked
  5245  0054A4  378F               	rlcf	??___ftadd& (0+255),f,b
  5246  0054A6  E301               	bnc	u14261
  5247  0054A8  8190               	bsf	(??___ftadd+1)& (0+255),0,b
  5248  0054AA                     u14261:
  5249  0054AA  0100               	movlb	0	; () banked
  5250  0054AC  518F               	movf	??___ftadd& (0+255),w,b
  5251  0054AE  0100               	movlb	0	; () banked
  5252  0054B0  6F93               	movwf	___ftadd@exp2& (0+255),b
  5253                           
  5254                           ; BSR set to: 0
  5255  0054B2  0100               	movlb	0	; () banked
  5256  0054B4  5194               	movf	___ftadd@exp1& (0+255),w,b
  5257  0054B6  0100               	movlb	0	; () banked
  5258  0054B8  B4D8               	btfsc	status,2,c
  5259  0054BA  D011               	goto	l1732
  5260                           
  5261                           ; BSR set to: 0
  5262  0054BC  0100               	movlb	0	; () banked
  5263  0054BE  5193               	movf	___ftadd@exp2& (0+255),w,b
  5264  0054C0  0100               	movlb	0	; () banked
  5265  0054C2  5D94               	subwf	___ftadd@exp1& (0+255),w,b
  5266  0054C4  B0D8               	btfsc	status,0,c
  5267  0054C6  D012               	goto	l12416
  5268                           
  5269                           ; BSR set to: 0
  5270  0054C8  0100               	movlb	0	; () banked
  5271  0054CA  5194               	movf	___ftadd@exp1& (0+255),w,b
  5272  0054CC  0800               	sublw	0
  5273  0054CE  0100               	movlb	0	; () banked
  5274  0054D0  2593               	addwf	___ftadd@exp2& (0+255),w,b
  5275  0054D2  0100               	movlb	0	; () banked
  5276  0054D4  6F8F               	movwf	??___ftadd& (0+255),b
  5277  0054D6  0E18               	movlw	24
  5278  0054D8  0100               	movlb	0	; () banked
  5279  0054DA  658F               	cpfsgt	??___ftadd& (0+255),b
  5280  0054DC  D007               	goto	l12416
  5281  0054DE                     l1732:
  5282                           
  5283                           ; BSR set to: 0
  5284  0054DE  C08C  F089         	movff	___ftadd@f2,?___ftadd
  5285  0054E2  C08D  F08A         	movff	___ftadd@f2+1,?___ftadd+1
  5286  0054E6  C08E  F08B         	movff	___ftadd@f2+2,?___ftadd+2
  5287  0054EA  0012               	return	
  5288  0054EC                     l12416:
  5289                           
  5290                           ; BSR set to: 0
  5291  0054EC  0100               	movlb	0	; () banked
  5292  0054EE  5193               	movf	___ftadd@exp2& (0+255),w,b
  5293  0054F0  0100               	movlb	0	; () banked
  5294  0054F2  B4D8               	btfsc	status,2,c
  5295  0054F4  D011               	goto	l1736
  5296                           
  5297                           ; BSR set to: 0
  5298  0054F6  0100               	movlb	0	; () banked
  5299  0054F8  5194               	movf	___ftadd@exp1& (0+255),w,b
  5300  0054FA  0100               	movlb	0	; () banked
  5301  0054FC  5D93               	subwf	___ftadd@exp2& (0+255),w,b
  5302  0054FE  B0D8               	btfsc	status,0,c
  5303  005500  D012               	goto	l12422
  5304                           
  5305                           ; BSR set to: 0
  5306  005502  0100               	movlb	0	; () banked
  5307  005504  5193               	movf	___ftadd@exp2& (0+255),w,b
  5308  005506  0800               	sublw	0
  5309  005508  0100               	movlb	0	; () banked
  5310  00550A  2594               	addwf	___ftadd@exp1& (0+255),w,b
  5311  00550C  0100               	movlb	0	; () banked
  5312  00550E  6F8F               	movwf	??___ftadd& (0+255),b
  5313  005510  0E18               	movlw	24
  5314  005512  0100               	movlb	0	; () banked
  5315  005514  658F               	cpfsgt	??___ftadd& (0+255),b
  5316  005516  D007               	goto	l12422
  5317  005518                     l1736:
  5318                           
  5319                           ; BSR set to: 0
  5320  005518  C089  F089         	movff	___ftadd@f1,?___ftadd
  5321  00551C  C08A  F08A         	movff	___ftadd@f1+1,?___ftadd+1
  5322  005520  C08B  F08B         	movff	___ftadd@f1+2,?___ftadd+2
  5323  005524  0012               	return	
  5324  005526                     l12422:
  5325                           
  5326                           ; BSR set to: 0
  5327  005526  0E06               	movlw	6
  5328  005528  0100               	movlb	0	; () banked
  5329  00552A  6F92               	movwf	___ftadd@sign& (0+255),b
  5330                           
  5331                           ; BSR set to: 0
  5332  00552C  0100               	movlb	0	; () banked
  5333  00552E  AF8B               	btfss	(___ftadd@f1+2)& (0+255),7,b
  5334  005530  D002               	goto	l12428
  5335                           
  5336                           ; BSR set to: 0
  5337  005532  0100               	movlb	0	; () banked
  5338  005534  8F92               	bsf	___ftadd@sign& (0+255),7,b
  5339  005536                     l12428:
  5340                           
  5341                           ; BSR set to: 0
  5342  005536  0100               	movlb	0	; () banked
  5343  005538  AF8E               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5344  00553A  D002               	goto	l1738
  5345                           
  5346                           ; BSR set to: 0
  5347  00553C  0100               	movlb	0	; () banked
  5348  00553E  8D92               	bsf	___ftadd@sign& (0+255),6,b
  5349  005540                     l1738:
  5350                           
  5351                           ; BSR set to: 0
  5352  005540  0100               	movlb	0	; () banked
  5353  005542  8F8A               	bsf	(___ftadd@f1+1)& (0+255),7,b
  5354                           
  5355                           ; BSR set to: 0
  5356  005544  0EFF               	movlw	255
  5357  005546  0100               	movlb	0	; () banked
  5358  005548  1789               	andwf	___ftadd@f1& (0+255),f,b
  5359  00554A  0EFF               	movlw	255
  5360  00554C  0100               	movlb	0	; () banked
  5361  00554E  178A               	andwf	(___ftadd@f1+1)& (0+255),f,b
  5362  005550  0E00               	movlw	0
  5363  005552  0100               	movlb	0	; () banked
  5364  005554  178B               	andwf	(___ftadd@f1+2)& (0+255),f,b
  5365  005556  0100               	movlb	0	; () banked
  5366  005558  8F8D               	bsf	(___ftadd@f2+1)& (0+255),7,b
  5367                           
  5368                           ; BSR set to: 0
  5369  00555A  0EFF               	movlw	255
  5370  00555C  0100               	movlb	0	; () banked
  5371  00555E  178C               	andwf	___ftadd@f2& (0+255),f,b
  5372  005560  0EFF               	movlw	255
  5373  005562  0100               	movlb	0	; () banked
  5374  005564  178D               	andwf	(___ftadd@f2+1)& (0+255),f,b
  5375  005566  0E00               	movlw	0
  5376  005568  0100               	movlb	0	; () banked
  5377  00556A  178E               	andwf	(___ftadd@f2+2)& (0+255),f,b
  5378                           
  5379                           ; BSR set to: 0
  5380  00556C  0100               	movlb	0	; () banked
  5381  00556E  5193               	movf	___ftadd@exp2& (0+255),w,b
  5382  005570  0100               	movlb	0	; () banked
  5383  005572  5D94               	subwf	___ftadd@exp1& (0+255),w,b
  5384  005574  B0D8               	btfsc	status,0,c
  5385  005576  D025               	goto	l12448
  5386  005578                     l12438:
  5387                           
  5388                           ; BSR set to: 0
  5389  005578  0100               	movlb	0	; () banked
  5390  00557A  90D8               	bcf	status,0,c
  5391  00557C  378C               	rlcf	___ftadd@f2& (0+255),f,b
  5392  00557E  378D               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  5393  005580  378E               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  5394  005582  0100               	movlb	0	; () banked
  5395  005584  0793               	decf	___ftadd@exp2& (0+255),f,b
  5396                           
  5397                           ; BSR set to: 0
  5398  005586  0100               	movlb	0	; () banked
  5399  005588  5194               	movf	___ftadd@exp1& (0+255),w,b
  5400  00558A  0100               	movlb	0	; () banked
  5401  00558C  1993               	xorwf	___ftadd@exp2& (0+255),w,b
  5402  00558E  B4D8               	btfsc	status,2,c
  5403  005590  D011               	goto	l12446
  5404                           
  5405                           ; BSR set to: 0
  5406  005592  0100               	movlb	0	; () banked
  5407  005594  0792               	decf	___ftadd@sign& (0+255),f,b
  5408  005596  C092  F08F         	movff	___ftadd@sign,??___ftadd
  5409  00559A  0E07               	movlw	7
  5410  00559C  0100               	movlb	0	; () banked
  5411  00559E  178F               	andwf	??___ftadd& (0+255),f,b
  5412  0055A0  B4D8               	btfsc	status,2,c
  5413  0055A2  D008               	goto	l12446
  5414  0055A4  D7E9               	goto	l12438
  5415  0055A6                     l12444:
  5416                           
  5417                           ; BSR set to: 0
  5418  0055A6  0100               	movlb	0	; () banked
  5419  0055A8  90D8               	bcf	status,0,c
  5420  0055AA  338B               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  5421  0055AC  338A               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  5422  0055AE  3389               	rrcf	___ftadd@f1& (0+255),f,b
  5423  0055B0  0100               	movlb	0	; () banked
  5424  0055B2  2B94               	incf	___ftadd@exp1& (0+255),f,b
  5425  0055B4                     l12446:
  5426                           
  5427                           ; BSR set to: 0
  5428  0055B4  0100               	movlb	0	; () banked
  5429  0055B6  5193               	movf	___ftadd@exp2& (0+255),w,b
  5430  0055B8  0100               	movlb	0	; () banked
  5431  0055BA  1994               	xorwf	___ftadd@exp1& (0+255),w,b
  5432  0055BC  B4D8               	btfsc	status,2,c
  5433  0055BE  D02B               	goto	l1747
  5434  0055C0  D7F2               	goto	l12444
  5435  0055C2                     l12448:
  5436                           
  5437                           ; BSR set to: 0
  5438  0055C2  0100               	movlb	0	; () banked
  5439  0055C4  5194               	movf	___ftadd@exp1& (0+255),w,b
  5440  0055C6  0100               	movlb	0	; () banked
  5441  0055C8  5D93               	subwf	___ftadd@exp2& (0+255),w,b
  5442  0055CA  B0D8               	btfsc	status,0,c
  5443  0055CC  D024               	goto	l1747
  5444  0055CE                     l12450:
  5445                           
  5446                           ; BSR set to: 0
  5447  0055CE  0100               	movlb	0	; () banked
  5448  0055D0  90D8               	bcf	status,0,c
  5449  0055D2  3789               	rlcf	___ftadd@f1& (0+255),f,b
  5450  0055D4  378A               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  5451  0055D6  378B               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  5452  0055D8  0100               	movlb	0	; () banked
  5453  0055DA  0794               	decf	___ftadd@exp1& (0+255),f,b
  5454                           
  5455                           ; BSR set to: 0
  5456  0055DC  0100               	movlb	0	; () banked
  5457  0055DE  5194               	movf	___ftadd@exp1& (0+255),w,b
  5458  0055E0  0100               	movlb	0	; () banked
  5459  0055E2  1993               	xorwf	___ftadd@exp2& (0+255),w,b
  5460  0055E4  B4D8               	btfsc	status,2,c
  5461  0055E6  D011               	goto	l12458
  5462                           
  5463                           ; BSR set to: 0
  5464  0055E8  0100               	movlb	0	; () banked
  5465  0055EA  0792               	decf	___ftadd@sign& (0+255),f,b
  5466  0055EC  C092  F08F         	movff	___ftadd@sign,??___ftadd
  5467  0055F0  0E07               	movlw	7
  5468  0055F2  0100               	movlb	0	; () banked
  5469  0055F4  178F               	andwf	??___ftadd& (0+255),f,b
  5470  0055F6  B4D8               	btfsc	status,2,c
  5471  0055F8  D008               	goto	l12458
  5472  0055FA  D7E9               	goto	l12450
  5473  0055FC                     l12456:
  5474                           
  5475                           ; BSR set to: 0
  5476  0055FC  0100               	movlb	0	; () banked
  5477  0055FE  90D8               	bcf	status,0,c
  5478  005600  338E               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  5479  005602  338D               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  5480  005604  338C               	rrcf	___ftadd@f2& (0+255),f,b
  5481  005606  0100               	movlb	0	; () banked
  5482  005608  2B93               	incf	___ftadd@exp2& (0+255),f,b
  5483  00560A                     l12458:
  5484                           
  5485                           ; BSR set to: 0
  5486  00560A  0100               	movlb	0	; () banked
  5487  00560C  5193               	movf	___ftadd@exp2& (0+255),w,b
  5488  00560E  0100               	movlb	0	; () banked
  5489  005610  1994               	xorwf	___ftadd@exp1& (0+255),w,b
  5490  005612  A4D8               	btfss	status,2,c
  5491  005614  D7F3               	goto	l12456
  5492  005616                     l1747:
  5493                           
  5494                           ; BSR set to: 0
  5495  005616  0100               	movlb	0	; () banked
  5496  005618  AF92               	btfss	___ftadd@sign& (0+255),7,b
  5497  00561A  D012               	goto	l1756
  5498                           
  5499                           ; BSR set to: 0
  5500  00561C  0EFF               	movlw	255
  5501  00561E  0100               	movlb	0	; () banked
  5502  005620  1B89               	xorwf	___ftadd@f1& (0+255),f,b
  5503  005622  0EFF               	movlw	255
  5504  005624  0100               	movlb	0	; () banked
  5505  005626  1B8A               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  5506  005628  0EFF               	movlw	255
  5507  00562A  0100               	movlb	0	; () banked
  5508  00562C  1B8B               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  5509  00562E  0E01               	movlw	1
  5510  005630  0100               	movlb	0	; () banked
  5511  005632  2789               	addwf	___ftadd@f1& (0+255),f,b
  5512  005634  0E00               	movlw	0
  5513  005636  0100               	movlb	0	; () banked
  5514  005638  238A               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  5515  00563A  0E00               	movlw	0
  5516  00563C  0100               	movlb	0	; () banked
  5517  00563E  238B               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  5518  005640                     l1756:
  5519                           
  5520                           ; BSR set to: 0
  5521  005640  0100               	movlb	0	; () banked
  5522  005642  AD92               	btfss	___ftadd@sign& (0+255),6,b
  5523  005644  D012               	goto	l12464
  5524                           
  5525                           ; BSR set to: 0
  5526  005646  0EFF               	movlw	255
  5527  005648  0100               	movlb	0	; () banked
  5528  00564A  1B8C               	xorwf	___ftadd@f2& (0+255),f,b
  5529  00564C  0EFF               	movlw	255
  5530  00564E  0100               	movlb	0	; () banked
  5531  005650  1B8D               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5532  005652  0EFF               	movlw	255
  5533  005654  0100               	movlb	0	; () banked
  5534  005656  1B8E               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5535  005658  0E01               	movlw	1
  5536  00565A  0100               	movlb	0	; () banked
  5537  00565C  278C               	addwf	___ftadd@f2& (0+255),f,b
  5538  00565E  0E00               	movlw	0
  5539  005660  0100               	movlb	0	; () banked
  5540  005662  238D               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5541  005664  0E00               	movlw	0
  5542  005666  0100               	movlb	0	; () banked
  5543  005668  238E               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5544  00566A                     l12464:
  5545                           
  5546                           ; BSR set to: 0
  5547  00566A  0E00               	movlw	0
  5548  00566C  0100               	movlb	0	; () banked
  5549  00566E  6F92               	movwf	___ftadd@sign& (0+255),b
  5550                           
  5551                           ; BSR set to: 0
  5552  005670  0100               	movlb	0	; () banked
  5553  005672  5189               	movf	___ftadd@f1& (0+255),w,b
  5554  005674  0100               	movlb	0	; () banked
  5555  005676  278C               	addwf	___ftadd@f2& (0+255),f,b
  5556  005678  0100               	movlb	0	; () banked
  5557  00567A  518A               	movf	(___ftadd@f1+1)& (0+255),w,b
  5558  00567C  0100               	movlb	0	; () banked
  5559  00567E  238D               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5560  005680  0100               	movlb	0	; () banked
  5561  005682  518B               	movf	(___ftadd@f1+2)& (0+255),w,b
  5562  005684  0100               	movlb	0	; () banked
  5563  005686  238E               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5564                           
  5565                           ; BSR set to: 0
  5566  005688  0100               	movlb	0	; () banked
  5567  00568A  AF8E               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5568  00568C  D015               	goto	l12474
  5569                           
  5570                           ; BSR set to: 0
  5571  00568E  0EFF               	movlw	255
  5572  005690  0100               	movlb	0	; () banked
  5573  005692  1B8C               	xorwf	___ftadd@f2& (0+255),f,b
  5574  005694  0EFF               	movlw	255
  5575  005696  0100               	movlb	0	; () banked
  5576  005698  1B8D               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5577  00569A  0EFF               	movlw	255
  5578  00569C  0100               	movlb	0	; () banked
  5579  00569E  1B8E               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5580  0056A0  0E01               	movlw	1
  5581  0056A2  0100               	movlb	0	; () banked
  5582  0056A4  278C               	addwf	___ftadd@f2& (0+255),f,b
  5583  0056A6  0E00               	movlw	0
  5584  0056A8  0100               	movlb	0	; () banked
  5585  0056AA  238D               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5586  0056AC  0E00               	movlw	0
  5587  0056AE  0100               	movlb	0	; () banked
  5588  0056B0  238E               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5589                           
  5590                           ; BSR set to: 0
  5591  0056B2  0E01               	movlw	1
  5592  0056B4  0100               	movlb	0	; () banked
  5593  0056B6  6F92               	movwf	___ftadd@sign& (0+255),b
  5594  0056B8                     l12474:
  5595                           
  5596                           ; BSR set to: 0
  5597  0056B8  C08C  F081         	movff	___ftadd@f2,___ftpack@arg
  5598  0056BC  C08D  F082         	movff	___ftadd@f2+1,___ftpack@arg+1
  5599  0056C0  C08E  F083         	movff	___ftadd@f2+2,___ftpack@arg+2
  5600  0056C4  C094  F084         	movff	___ftadd@exp1,___ftpack@exp
  5601  0056C8  C092  F085         	movff	___ftadd@sign,___ftpack@sign
  5602  0056CC  EC57  F039         	call	___ftpack	;wreg free
  5603  0056D0  C081  F089         	movff	?___ftpack,?___ftadd
  5604  0056D4  C082  F08A         	movff	?___ftpack+1,?___ftadd+1
  5605  0056D8  C083  F08B         	movff	?___ftpack+2,?___ftadd+2
  5606  0056DC  0012               	return	
  5607  0056DE                     __end_of___ftadd:
  5608                           	opt stack 0
  5609                           tblptru	equ	0xFF8
  5610                           tblptrh	equ	0xFF7
  5611                           tblptrl	equ	0xFF6
  5612                           tablat	equ	0xFF5
  5613                           prodh	equ	0xFF4
  5614                           prodl	equ	0xFF3
  5615                           postinc0	equ	0xFEE
  5616                           plusw0	equ	0xFEB
  5617                           wreg	equ	0xFE8
  5618                           indf2	equ	0xFDF
  5619                           postinc2	equ	0xFDE
  5620                           postdec2	equ	0xFDD
  5621                           plusw2	equ	0xFDB
  5622                           fsr2h	equ	0xFDA
  5623                           fsr2l	equ	0xFD9
  5624                           status	equ	0xFD8
  5625                           
  5626 ;; *************** function ___altoft *****************
  5627 ;; Defined at:
  5628 ;;		line 42 in file "/opt/microchip/xc8/v1.35/sources/common/altoft.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  c               4   84[BANK0 ] long 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  sign            1   93[BANK0 ] unsigned char 
  5633 ;;  exp             1   92[BANK0 ] unsigned char 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  3   84[BANK0 ] float 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5643 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5645 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5646 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5647 ;;Total ram usage:       10 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    8
  5650 ;; This function calls:
  5651 ;;		___ftpack
  5652 ;; This function is called by:
  5653 ;;		_floor
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text7
  5658  007DCA                     __ptext7:
  5659                           	opt stack 0
  5660  007DCA                     ___altoft:
  5661                           	opt stack 20
  5662                           
  5663                           ;incstack = 0
  5664  007DCA  0E00               	movlw	0
  5665  007DCC  0100               	movlb	0	; () banked
  5666  007DCE  6FBD               	movwf	___altoft@sign& (0+255),b
  5667  007DD0  0E8E               	movlw	142
  5668  007DD2  0100               	movlb	0	; () banked
  5669  007DD4  6FBC               	movwf	___altoft@exp& (0+255),b
  5670                           
  5671                           ; BSR set to: 0
  5672  007DD6  0100               	movlb	0	; () banked
  5673  007DD8  AFB7               	btfss	(___altoft@c+3)& (0+255),7,b
  5674  007DDA  D015               	goto	l12402
  5675                           
  5676                           ; BSR set to: 0
  5677  007DDC  0100               	movlb	0	; () banked
  5678  007DDE  1FB7               	comf	(___altoft@c+3)& (0+255),f,b
  5679  007DE0  1FB6               	comf	(___altoft@c+2)& (0+255),f,b
  5680  007DE2  1FB5               	comf	(___altoft@c+1)& (0+255),f,b
  5681  007DE4  6DB4               	negf	___altoft@c& (0+255),b
  5682  007DE6  0E00               	movlw	0
  5683  007DE8  23B5               	addwfc	(___altoft@c+1)& (0+255),f,b
  5684  007DEA  23B6               	addwfc	(___altoft@c+2)& (0+255),f,b
  5685  007DEC  23B7               	addwfc	(___altoft@c+3)& (0+255),f,b
  5686                           
  5687                           ; BSR set to: 0
  5688  007DEE  0E01               	movlw	1
  5689  007DF0  0100               	movlb	0	; () banked
  5690  007DF2  6FBD               	movwf	___altoft@sign& (0+255),b
  5691                           
  5692                           ; BSR set to: 0
  5693  007DF4  D008               	goto	l12402
  5694  007DF6                     l12400:
  5695                           
  5696                           ; BSR set to: 0
  5697  007DF6  0100               	movlb	0	; () banked
  5698  007DF8  90D8               	bcf	status,0,c
  5699  007DFA  33B7               	rrcf	(___altoft@c+3)& (0+255),f,b
  5700  007DFC  33B6               	rrcf	(___altoft@c+2)& (0+255),f,b
  5701  007DFE  33B5               	rrcf	(___altoft@c+1)& (0+255),f,b
  5702  007E00  33B4               	rrcf	___altoft@c& (0+255),f,b
  5703  007E02  0100               	movlb	0	; () banked
  5704  007E04  2BBC               	incf	___altoft@exp& (0+255),f,b
  5705  007E06                     l12402:
  5706                           
  5707                           ; BSR set to: 0
  5708  007E06  0E00               	movlw	0
  5709  007E08  0100               	movlb	0	; () banked
  5710  007E0A  15B4               	andwf	___altoft@c& (0+255),w,b
  5711  007E0C  0100               	movlb	0	; () banked
  5712  007E0E  6FB8               	movwf	??___altoft& (0+255),b
  5713  007E10  0E00               	movlw	0
  5714  007E12  0100               	movlb	0	; () banked
  5715  007E14  15B5               	andwf	(___altoft@c+1)& (0+255),w,b
  5716  007E16  0100               	movlb	0	; () banked
  5717  007E18  6FB9               	movwf	(??___altoft+1)& (0+255),b
  5718  007E1A  0E00               	movlw	0
  5719  007E1C  0100               	movlb	0	; () banked
  5720  007E1E  15B6               	andwf	(___altoft@c+2)& (0+255),w,b
  5721  007E20  0100               	movlb	0	; () banked
  5722  007E22  6FBA               	movwf	(??___altoft+2)& (0+255),b
  5723  007E24  0EFF               	movlw	255
  5724  007E26  0100               	movlb	0	; () banked
  5725  007E28  15B7               	andwf	(___altoft@c+3)& (0+255),w,b
  5726  007E2A  0100               	movlb	0	; () banked
  5727  007E2C  6FBB               	movwf	(??___altoft+3)& (0+255),b
  5728  007E2E  0100               	movlb	0	; () banked
  5729  007E30  51B8               	movf	??___altoft& (0+255),w,b
  5730  007E32  0100               	movlb	0	; () banked
  5731  007E34  11B9               	iorwf	(??___altoft+1)& (0+255),w,b
  5732  007E36  0100               	movlb	0	; () banked
  5733  007E38  11BA               	iorwf	(??___altoft+2)& (0+255),w,b
  5734  007E3A  0100               	movlb	0	; () banked
  5735  007E3C  11BB               	iorwf	(??___altoft+3)& (0+255),w,b
  5736  007E3E  A4D8               	btfss	status,2,c
  5737  007E40  D7DA               	goto	l12400
  5738                           
  5739                           ; BSR set to: 0
  5740                           
  5741                           ; BSR set to: 0
  5742  007E42  C0B4  F081         	movff	___altoft@c,___ftpack@arg
  5743  007E46  C0B5  F082         	movff	___altoft@c+1,___ftpack@arg+1
  5744  007E4A  C0B6  F083         	movff	___altoft@c+2,___ftpack@arg+2
  5745  007E4E  C0BC  F084         	movff	___altoft@exp,___ftpack@exp
  5746  007E52  C0BD  F085         	movff	___altoft@sign,___ftpack@sign
  5747  007E56  EC57  F039         	call	___ftpack	;wreg free
  5748  007E5A  C081  F0B4         	movff	?___ftpack,?___altoft
  5749  007E5E  C082  F0B5         	movff	?___ftpack+1,?___altoft+1
  5750  007E62  C083  F0B6         	movff	?___ftpack+2,?___altoft+2
  5751  007E66  0012               	return	
  5752  007E68                     __end_of___altoft:
  5753                           	opt stack 0
  5754                           tblptru	equ	0xFF8
  5755                           tblptrh	equ	0xFF7
  5756                           tblptrl	equ	0xFF6
  5757                           tablat	equ	0xFF5
  5758                           prodh	equ	0xFF4
  5759                           prodl	equ	0xFF3
  5760                           postinc0	equ	0xFEE
  5761                           plusw0	equ	0xFEB
  5762                           wreg	equ	0xFE8
  5763                           indf2	equ	0xFDF
  5764                           postinc2	equ	0xFDE
  5765                           postdec2	equ	0xFDD
  5766                           plusw2	equ	0xFDB
  5767                           fsr2h	equ	0xFDA
  5768                           fsr2l	equ	0xFD9
  5769                           status	equ	0xFD8
  5770                           
  5771 ;; *************** function _encode_uint16_variable *****************
  5772 ;; Defined at:
  5773 ;;		line 60 in file "../../muta/muta_messages.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
  5776 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
  5777 ;;  var             9   35[BANK0 ] struct .
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      unsigned char 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5789 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5792 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5793 ;;Total ram usage:       11 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    7
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_send_initial_update
  5800 ;;		_send_periodical_update
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text8
  5805  007E68                     __ptext8:
  5806                           	opt stack 0
  5807  007E68                     _encode_uint16_variable:
  5808                           	opt stack 22
  5809                           
  5810                           ;muta_messages.c: 62: *(buffer++) = var.label[0];
  5811                           
  5812                           ;incstack = 0
  5813  007E68  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5814  007E6C  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5815  007E70  C083  FFDF         	movff	encode_uint16_variable@var,indf2
  5816  007E74  0100               	movlb	0	; () banked
  5817  007E76  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5818  007E78  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;muta_messages.c: 63: *(buffer++) = var.label[1];
  5822  007E7A  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5823  007E7E  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5824  007E82  C084  FFDF         	movff	encode_uint16_variable@var+1,indf2
  5825  007E86  0100               	movlb	0	; () banked
  5826  007E88  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5827  007E8A  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;muta_messages.c: 64: *(buffer++) = var.label[2];
  5831  007E8C  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5832  007E90  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5833  007E94  C085  FFDF         	movff	encode_uint16_variable@var+2,indf2
  5834                           
  5835                           ; BSR set to: 0
  5836  007E98  0100               	movlb	0	; () banked
  5837  007E9A  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5838  007E9C  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;muta_messages.c: 65: var.type = 1 << 1;
  5842  007E9E  0E02               	movlw	2
  5843  007EA0  0100               	movlb	0	; () banked
  5844  007EA2  6F86               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;muta_messages.c: 66: if (var.writable)
  5848  007EA4  0100               	movlb	0	; () banked
  5849  007EA6  518A               	movf	(encode_uint16_variable@var+7)& (0+255),w,b
  5850  007EA8  B4D8               	btfsc	status,2,c
  5851  007EAA  D004               	goto	l1294
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;muta_messages.c: 67: {
  5855                           ;muta_messages.c: 68: var.type = var.type + 1;
  5856  007EAC  0100               	movlb	0	; () banked
  5857  007EAE  2986               	incf	(encode_uint16_variable@var+3)& (0+255),w,b
  5858  007EB0  0100               	movlb	0	; () banked
  5859  007EB2  6F86               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  5860  007EB4                     l1294:
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;muta_messages.c: 69: }
  5864                           ;muta_messages.c: 70: var.type = var.type << 4;
  5865  007EB4  0100               	movlb	0	; () banked
  5866  007EB6  3986               	swapf	(encode_uint16_variable@var+3)& (0+255),w,b
  5867  007EB8  0BF0               	andlw	240
  5868  007EBA  0100               	movlb	0	; () banked
  5869  007EBC  6F86               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  5870                           
  5871                           ;muta_messages.c: 71: var.type = var.type + var.unit;
  5872  007EBE  0100               	movlb	0	; () banked
  5873  007EC0  5186               	movf	(encode_uint16_variable@var+3)& (0+255),w,b
  5874  007EC2  0100               	movlb	0	; () banked
  5875  007EC4  2589               	addwf	(encode_uint16_variable@var+6)& (0+255),w,b
  5876  007EC6  0100               	movlb	0	; () banked
  5877  007EC8  6F86               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;muta_messages.c: 72: *(buffer++) = var.type;
  5881  007ECA  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5882  007ECE  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5883  007ED2  C086  FFDF         	movff	encode_uint16_variable@var+3,indf2
  5884                           
  5885                           ; BSR set to: 0
  5886  007ED6  0100               	movlb	0	; () banked
  5887  007ED8  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5888  007EDA  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;muta_messages.c: 73: *(buffer++) = var.value_byte2;
  5892  007EDC  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5893  007EE0  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5894  007EE4  C088  FFDF         	movff	encode_uint16_variable@var+5,indf2
  5895                           
  5896                           ; BSR set to: 0
  5897  007EE8  0100               	movlb	0	; () banked
  5898  007EEA  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5899  007EEC  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;muta_messages.c: 74: *(buffer++) = var.value_byte1;
  5903  007EEE  C081  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  5904  007EF2  C082  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  5905  007EF6  C087  FFDF         	movff	encode_uint16_variable@var+4,indf2
  5906                           
  5907                           ; BSR set to: 0
  5908  007EFA  0100               	movlb	0	; () banked
  5909  007EFC  4B81               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  5910  007EFE  2B82               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;muta_messages.c: 75: return 6;
  5914  007F00  0E06               	movlw	6
  5915  007F02  0012               	return	
  5916  007F04                     __end_of_encode_uint16_variable:
  5917                           	opt stack 0
  5918                           tblptru	equ	0xFF8
  5919                           tblptrh	equ	0xFF7
  5920                           tblptrl	equ	0xFF6
  5921                           tablat	equ	0xFF5
  5922                           prodh	equ	0xFF4
  5923                           prodl	equ	0xFF3
  5924                           postinc0	equ	0xFEE
  5925                           plusw0	equ	0xFEB
  5926                           wreg	equ	0xFE8
  5927                           indf2	equ	0xFDF
  5928                           postinc2	equ	0xFDE
  5929                           postdec2	equ	0xFDD
  5930                           plusw2	equ	0xFDB
  5931                           fsr2h	equ	0xFDA
  5932                           fsr2l	equ	0xFD9
  5933                           status	equ	0xFD8
  5934                           
  5935 ;; *************** function _encode_ufixed16_variable *****************
  5936 ;; Defined at:
  5937 ;;		line 78 in file "../../muta/muta_messages.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
  5940 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
  5941 ;;  var             9   35[BANK0 ] struct .
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;		None
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      unsigned char 
  5946 ;; Registers used:
  5947 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5953 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5956 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5957 ;;Total ram usage:       11 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; Hardware stack levels required when called:    7
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_send_initial_update
  5964 ;;		_send_periodical_update
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           	psect	text9
  5969  007F04                     __ptext9:
  5970                           	opt stack 0
  5971  007F04                     _encode_ufixed16_variable:
  5972                           	opt stack 22
  5973                           
  5974                           ;muta_messages.c: 80: *(buffer++) = var.label[0];
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;incstack = 0
  5978  007F04  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  5979  007F08  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  5980  007F0C  C083  FFDF         	movff	encode_ufixed16_variable@var,indf2
  5981  007F10  0100               	movlb	0	; () banked
  5982  007F12  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  5983  007F14  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;muta_messages.c: 81: *(buffer++) = var.label[1];
  5987  007F16  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  5988  007F1A  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  5989  007F1E  C084  FFDF         	movff	encode_ufixed16_variable@var+1,indf2
  5990  007F22  0100               	movlb	0	; () banked
  5991  007F24  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  5992  007F26  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;muta_messages.c: 82: *(buffer++) = var.label[2];
  5996  007F28  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  5997  007F2C  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  5998  007F30  C085  FFDF         	movff	encode_ufixed16_variable@var+2,indf2
  5999                           
  6000                           ; BSR set to: 0
  6001  007F34  0100               	movlb	0	; () banked
  6002  007F36  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  6003  007F38  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;muta_messages.c: 83: var.type = 2 << 1;
  6007  007F3A  0E04               	movlw	4
  6008  007F3C  0100               	movlb	0	; () banked
  6009  007F3E  6F86               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;muta_messages.c: 84: if (var.writable)
  6013  007F40  0100               	movlb	0	; () banked
  6014  007F42  518A               	movf	(encode_ufixed16_variable@var+7)& (0+255),w,b
  6015  007F44  B4D8               	btfsc	status,2,c
  6016  007F46  D004               	goto	l1298
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;muta_messages.c: 85: {
  6020                           ;muta_messages.c: 86: var.type = var.type + 1;
  6021  007F48  0100               	movlb	0	; () banked
  6022  007F4A  2986               	incf	(encode_ufixed16_variable@var+3)& (0+255),w,b
  6023  007F4C  0100               	movlb	0	; () banked
  6024  007F4E  6F86               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
  6025  007F50                     l1298:
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;muta_messages.c: 87: }
  6029                           ;muta_messages.c: 88: var.type = var.type << 4;
  6030  007F50  0100               	movlb	0	; () banked
  6031  007F52  3986               	swapf	(encode_ufixed16_variable@var+3)& (0+255),w,b
  6032  007F54  0BF0               	andlw	240
  6033  007F56  0100               	movlb	0	; () banked
  6034  007F58  6F86               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
  6035                           
  6036                           ;muta_messages.c: 89: var.type = var.type + var.unit;
  6037  007F5A  0100               	movlb	0	; () banked
  6038  007F5C  5186               	movf	(encode_ufixed16_variable@var+3)& (0+255),w,b
  6039  007F5E  0100               	movlb	0	; () banked
  6040  007F60  2589               	addwf	(encode_ufixed16_variable@var+6)& (0+255),w,b
  6041  007F62  0100               	movlb	0	; () banked
  6042  007F64  6F86               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;muta_messages.c: 90: *(buffer++) = var.type;
  6046  007F66  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  6047  007F6A  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  6048  007F6E  C086  FFDF         	movff	encode_ufixed16_variable@var+3,indf2
  6049                           
  6050                           ; BSR set to: 0
  6051  007F72  0100               	movlb	0	; () banked
  6052  007F74  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  6053  007F76  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;muta_messages.c: 91: *(buffer++) = var.value_byte2;
  6057  007F78  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  6058  007F7C  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  6059  007F80  C088  FFDF         	movff	encode_ufixed16_variable@var+5,indf2
  6060                           
  6061                           ; BSR set to: 0
  6062  007F84  0100               	movlb	0	; () banked
  6063  007F86  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  6064  007F88  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;muta_messages.c: 92: *(buffer++) = var.value_byte1;
  6068  007F8A  C081  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  6069  007F8E  C082  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  6070  007F92  C087  FFDF         	movff	encode_ufixed16_variable@var+4,indf2
  6071                           
  6072                           ; BSR set to: 0
  6073  007F96  0100               	movlb	0	; () banked
  6074  007F98  4B81               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  6075  007F9A  2B82               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;muta_messages.c: 93: return 6;
  6079  007F9C  0E06               	movlw	6
  6080  007F9E  0012               	return	
  6081  007FA0                     __end_of_encode_ufixed16_variable:
  6082                           	opt stack 0
  6083                           tblptru	equ	0xFF8
  6084                           tblptrh	equ	0xFF7
  6085                           tblptrl	equ	0xFF6
  6086                           tablat	equ	0xFF5
  6087                           prodh	equ	0xFF4
  6088                           prodl	equ	0xFF3
  6089                           postinc0	equ	0xFEE
  6090                           plusw0	equ	0xFEB
  6091                           wreg	equ	0xFE8
  6092                           indf2	equ	0xFDF
  6093                           postinc2	equ	0xFDE
  6094                           postdec2	equ	0xFDD
  6095                           plusw2	equ	0xFDB
  6096                           fsr2h	equ	0xFDA
  6097                           fsr2l	equ	0xFD9
  6098                           status	equ	0xFD8
  6099                           
  6100 ;; *************** function ___lltoft *****************
  6101 ;; Defined at:
  6102 ;;		line 35 in file "/opt/microchip/xc8/v1.35/sources/common/lltoft.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  c               4   45[BANK0 ] unsigned long 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  exp             1   53[BANK0 ] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  3   45[BANK0 ] float 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6116 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6120 ;;Total ram usage:        9 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    8
  6123 ;; This function calls:
  6124 ;;		___ftpack
  6125 ;; This function is called by:
  6126 ;;		_send_initial_update
  6127 ;;		_send_periodical_update
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text10
  6132  008254                     __ptext10:
  6133                           	opt stack 0
  6134  008254                     ___lltoft:
  6135                           	opt stack 21
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;incstack = 0
  6139  008254  0E8E               	movlw	142
  6140  008256  0100               	movlb	0	; () banked
  6141  008258  6F95               	movwf	___lltoft@exp& (0+255),b
  6142  00825A  D008               	goto	l13294
  6143  00825C                     l13292:
  6144                           
  6145                           ; BSR set to: 0
  6146  00825C  0100               	movlb	0	; () banked
  6147  00825E  90D8               	bcf	status,0,c
  6148  008260  3390               	rrcf	(___lltoft@c+3)& (0+255),f,b
  6149  008262  338F               	rrcf	(___lltoft@c+2)& (0+255),f,b
  6150  008264  338E               	rrcf	(___lltoft@c+1)& (0+255),f,b
  6151  008266  338D               	rrcf	___lltoft@c& (0+255),f,b
  6152  008268  0100               	movlb	0	; () banked
  6153  00826A  2B95               	incf	___lltoft@exp& (0+255),f,b
  6154  00826C                     l13294:
  6155                           
  6156                           ; BSR set to: 0
  6157  00826C  0E00               	movlw	0
  6158  00826E  0100               	movlb	0	; () banked
  6159  008270  158D               	andwf	___lltoft@c& (0+255),w,b
  6160  008272  0100               	movlb	0	; () banked
  6161  008274  6F91               	movwf	??___lltoft& (0+255),b
  6162  008276  0E00               	movlw	0
  6163  008278  0100               	movlb	0	; () banked
  6164  00827A  158E               	andwf	(___lltoft@c+1)& (0+255),w,b
  6165  00827C  0100               	movlb	0	; () banked
  6166  00827E  6F92               	movwf	(??___lltoft+1)& (0+255),b
  6167  008280  0E00               	movlw	0
  6168  008282  0100               	movlb	0	; () banked
  6169  008284  158F               	andwf	(___lltoft@c+2)& (0+255),w,b
  6170  008286  0100               	movlb	0	; () banked
  6171  008288  6F93               	movwf	(??___lltoft+2)& (0+255),b
  6172  00828A  0EFF               	movlw	255
  6173  00828C  0100               	movlb	0	; () banked
  6174  00828E  1590               	andwf	(___lltoft@c+3)& (0+255),w,b
  6175  008290  0100               	movlb	0	; () banked
  6176  008292  6F94               	movwf	(??___lltoft+3)& (0+255),b
  6177  008294  0100               	movlb	0	; () banked
  6178  008296  5191               	movf	??___lltoft& (0+255),w,b
  6179  008298  0100               	movlb	0	; () banked
  6180  00829A  1192               	iorwf	(??___lltoft+1)& (0+255),w,b
  6181  00829C  0100               	movlb	0	; () banked
  6182  00829E  1193               	iorwf	(??___lltoft+2)& (0+255),w,b
  6183  0082A0  0100               	movlb	0	; () banked
  6184  0082A2  1194               	iorwf	(??___lltoft+3)& (0+255),w,b
  6185  0082A4  A4D8               	btfss	status,2,c
  6186  0082A6  D7DA               	goto	l13292
  6187                           
  6188                           ; BSR set to: 0
  6189                           
  6190                           ; BSR set to: 0
  6191  0082A8  C08D  F081         	movff	___lltoft@c,___ftpack@arg
  6192  0082AC  C08E  F082         	movff	___lltoft@c+1,___ftpack@arg+1
  6193  0082B0  C08F  F083         	movff	___lltoft@c+2,___ftpack@arg+2
  6194  0082B4  C095  F084         	movff	___lltoft@exp,___ftpack@exp
  6195  0082B8  0E00               	movlw	0
  6196  0082BA  0100               	movlb	0	; () banked
  6197  0082BC  6F85               	movwf	___ftpack@sign& (0+255),b
  6198  0082BE  EC57  F039         	call	___ftpack	;wreg free
  6199  0082C2  C081  F08D         	movff	?___ftpack,?___lltoft
  6200  0082C6  C082  F08E         	movff	?___ftpack+1,?___lltoft+1
  6201  0082CA  C083  F08F         	movff	?___ftpack+2,?___lltoft+2
  6202  0082CE  0012               	return	
  6203  0082D0                     __end_of___lltoft:
  6204                           	opt stack 0
  6205                           tblptru	equ	0xFF8
  6206                           tblptrh	equ	0xFF7
  6207                           tblptrl	equ	0xFF6
  6208                           tablat	equ	0xFF5
  6209                           prodh	equ	0xFF4
  6210                           prodl	equ	0xFF3
  6211                           postinc0	equ	0xFEE
  6212                           plusw0	equ	0xFEB
  6213                           wreg	equ	0xFE8
  6214                           indf2	equ	0xFDF
  6215                           postinc2	equ	0xFDE
  6216                           postdec2	equ	0xFDD
  6217                           plusw2	equ	0xFDB
  6218                           fsr2h	equ	0xFDA
  6219                           fsr2l	equ	0xFD9
  6220                           status	equ	0xFD8
  6221                           
  6222 ;; *************** function ___lldiv *****************
  6223 ;; Defined at:
  6224 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/lldiv.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  dividend        4   33[BANK0 ] unsigned long 
  6227 ;;  divisor         4   37[BANK0 ] unsigned long 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;  quotient        4   41[BANK0 ] unsigned long 
  6230 ;;  counter         1   45[BANK0 ] unsigned char 
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  4   33[BANK0 ] unsigned long 
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6240 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6241 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6243 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6244 ;;Total ram usage:       13 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    7
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_send_initial_update
  6251 ;;		_send_periodical_update
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text11
  6256  007BAA                     __ptext11:
  6257                           	opt stack 0
  6258  007BAA                     ___lldiv:
  6259                           	opt stack 22
  6260                           
  6261                           ;incstack = 0
  6262  007BAA  0E00               	movlw	0
  6263  007BAC  0100               	movlb	0	; () banked
  6264  007BAE  6F89               	movwf	___lldiv@quotient& (0+255),b
  6265  007BB0  0E00               	movlw	0
  6266  007BB2  6F8A               	movwf	(___lldiv@quotient+1)& (0+255),b
  6267  007BB4  0E00               	movlw	0
  6268  007BB6  6F8B               	movwf	(___lldiv@quotient+2)& (0+255),b
  6269  007BB8  0E00               	movlw	0
  6270  007BBA  6F8C               	movwf	(___lldiv@quotient+3)& (0+255),b
  6271                           
  6272                           ; BSR set to: 0
  6273  007BBC  0100               	movlb	0	; () banked
  6274  007BBE  5185               	movf	___lldiv@divisor& (0+255),w,b
  6275  007BC0  0100               	movlb	0	; () banked
  6276  007BC2  1186               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6277  007BC4  0100               	movlb	0	; () banked
  6278  007BC6  1187               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6279  007BC8  0100               	movlb	0	; () banked
  6280  007BCA  1188               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6281  007BCC  B4D8               	btfsc	status,2,c
  6282  007BCE  D042               	goto	l1834
  6283                           
  6284                           ; BSR set to: 0
  6285  007BD0  0E01               	movlw	1
  6286  007BD2  0100               	movlb	0	; () banked
  6287  007BD4  6F8D               	movwf	___lldiv@counter& (0+255),b
  6288  007BD6  D008               	goto	l13276
  6289  007BD8                     l13274:
  6290                           
  6291                           ; BSR set to: 0
  6292  007BD8  0100               	movlb	0	; () banked
  6293  007BDA  90D8               	bcf	status,0,c
  6294  007BDC  3785               	rlcf	___lldiv@divisor& (0+255),f,b
  6295  007BDE  3786               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6296  007BE0  3787               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6297  007BE2  3788               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6298  007BE4  0100               	movlb	0	; () banked
  6299  007BE6  2B8D               	incf	___lldiv@counter& (0+255),f,b
  6300  007BE8                     l13276:
  6301                           
  6302                           ; BSR set to: 0
  6303  007BE8  0100               	movlb	0	; () banked
  6304  007BEA  AF88               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6305  007BEC  D7F5               	goto	l13274
  6306  007BEE                     l13278:
  6307                           
  6308                           ; BSR set to: 0
  6309  007BEE  0100               	movlb	0	; () banked
  6310  007BF0  90D8               	bcf	status,0,c
  6311  007BF2  3789               	rlcf	___lldiv@quotient& (0+255),f,b
  6312  007BF4  378A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6313  007BF6  378B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6314  007BF8  378C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6315                           
  6316                           ; BSR set to: 0
  6317  007BFA  0100               	movlb	0	; () banked
  6318  007BFC  5185               	movf	___lldiv@divisor& (0+255),w,b
  6319  007BFE  0100               	movlb	0	; () banked
  6320  007C00  5D81               	subwf	___lldiv@dividend& (0+255),w,b
  6321  007C02  0100               	movlb	0	; () banked
  6322  007C04  5186               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6323  007C06  0100               	movlb	0	; () banked
  6324  007C08  5982               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6325  007C0A  0100               	movlb	0	; () banked
  6326  007C0C  5187               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6327  007C0E  0100               	movlb	0	; () banked
  6328  007C10  5983               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6329  007C12  0100               	movlb	0	; () banked
  6330  007C14  5188               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6331  007C16  0100               	movlb	0	; () banked
  6332  007C18  5984               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6333  007C1A  A0D8               	btfss	status,0,c
  6334  007C1C  D012               	goto	l13286
  6335                           
  6336                           ; BSR set to: 0
  6337  007C1E  0100               	movlb	0	; () banked
  6338  007C20  5185               	movf	___lldiv@divisor& (0+255),w,b
  6339  007C22  0100               	movlb	0	; () banked
  6340  007C24  5F81               	subwf	___lldiv@dividend& (0+255),f,b
  6341  007C26  0100               	movlb	0	; () banked
  6342  007C28  5186               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6343  007C2A  0100               	movlb	0	; () banked
  6344  007C2C  5B82               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6345  007C2E  0100               	movlb	0	; () banked
  6346  007C30  5187               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6347  007C32  0100               	movlb	0	; () banked
  6348  007C34  5B83               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6349  007C36  0100               	movlb	0	; () banked
  6350  007C38  5188               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6351  007C3A  0100               	movlb	0	; () banked
  6352  007C3C  5B84               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6353                           
  6354                           ; BSR set to: 0
  6355  007C3E  0100               	movlb	0	; () banked
  6356  007C40  8189               	bsf	___lldiv@quotient& (0+255),0,b
  6357  007C42                     l13286:
  6358                           
  6359                           ; BSR set to: 0
  6360  007C42  0100               	movlb	0	; () banked
  6361  007C44  90D8               	bcf	status,0,c
  6362  007C46  3388               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6363  007C48  3387               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6364  007C4A  3386               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6365  007C4C  3385               	rrcf	___lldiv@divisor& (0+255),f,b
  6366                           
  6367                           ; BSR set to: 0
  6368  007C4E  0100               	movlb	0	; () banked
  6369  007C50  2F8D               	decfsz	___lldiv@counter& (0+255),f,b
  6370  007C52  D7CD               	goto	l13278
  6371  007C54                     l1834:
  6372                           
  6373                           ; BSR set to: 0
  6374  007C54  C089  F081         	movff	___lldiv@quotient,?___lldiv
  6375  007C58  C08A  F082         	movff	___lldiv@quotient+1,?___lldiv+1
  6376  007C5C  C08B  F083         	movff	___lldiv@quotient+2,?___lldiv+2
  6377  007C60  C08C  F084         	movff	___lldiv@quotient+3,?___lldiv+3
  6378                           
  6379                           ; BSR set to: 0
  6380  007C64  0012               	return		;funcret
  6381  007C66                     __end_of___lldiv:
  6382                           	opt stack 0
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           prodh	equ	0xFF4
  6388                           prodl	equ	0xFF3
  6389                           postinc0	equ	0xFEE
  6390                           plusw0	equ	0xFEB
  6391                           wreg	equ	0xFE8
  6392                           indf2	equ	0xFDF
  6393                           postinc2	equ	0xFDE
  6394                           postdec2	equ	0xFDD
  6395                           plusw2	equ	0xFDB
  6396                           fsr2h	equ	0xFDA
  6397                           fsr2l	equ	0xFD9
  6398                           status	equ	0xFD8
  6399                           
  6400 ;; *************** function ___ftneg *****************
  6401 ;; Defined at:
  6402 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/ftneg.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  f1              3  102[BANK0 ] float 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  3  102[BANK0 ] float 
  6409 ;; Registers used:
  6410 ;;		wreg, status,2, status,0
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6416 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6419 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6420 ;;Total ram usage:        3 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    7
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_send_initial_update
  6427 ;;		_send_periodical_update
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           	psect	text12
  6432  008A98                     __ptext12:
  6433                           	opt stack 0
  6434  008A98                     ___ftneg:
  6435                           	opt stack 22
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;incstack = 0
  6439  008A98  0100               	movlb	0	; () banked
  6440  008A9A  51C6               	movf	___ftneg@f1& (0+255),w,b
  6441  008A9C  0100               	movlb	0	; () banked
  6442  008A9E  11C7               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  6443  008AA0  0100               	movlb	0	; () banked
  6444  008AA2  11C8               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  6445  008AA4  B4D8               	btfsc	status,2,c
  6446  008AA6  D009               	goto	l1789
  6447                           
  6448                           ; BSR set to: 0
  6449  008AA8  0E00               	movlw	0
  6450  008AAA  0100               	movlb	0	; () banked
  6451  008AAC  1BC6               	xorwf	___ftneg@f1& (0+255),f,b
  6452  008AAE  0E00               	movlw	0
  6453  008AB0  0100               	movlb	0	; () banked
  6454  008AB2  1BC7               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  6455  008AB4  0E80               	movlw	128
  6456  008AB6  0100               	movlb	0	; () banked
  6457  008AB8  1BC8               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  6458  008ABA                     l1789:
  6459                           
  6460                           ; BSR set to: 0
  6461  008ABA  C0C6  F0C6         	movff	___ftneg@f1,?___ftneg
  6462  008ABE  C0C7  F0C7         	movff	___ftneg@f1+1,?___ftneg+1
  6463  008AC2  C0C8  F0C8         	movff	___ftneg@f1+2,?___ftneg+2
  6464                           
  6465                           ; BSR set to: 0
  6466  008AC6  0012               	return		;funcret
  6467  008AC8                     __end_of___ftneg:
  6468                           	opt stack 0
  6469                           tblptru	equ	0xFF8
  6470                           tblptrh	equ	0xFF7
  6471                           tblptrl	equ	0xFF6
  6472                           tablat	equ	0xFF5
  6473                           prodh	equ	0xFF4
  6474                           prodl	equ	0xFF3
  6475                           postinc0	equ	0xFEE
  6476                           plusw0	equ	0xFEB
  6477                           wreg	equ	0xFE8
  6478                           indf2	equ	0xFDF
  6479                           postinc2	equ	0xFDE
  6480                           postdec2	equ	0xFDD
  6481                           plusw2	equ	0xFDB
  6482                           fsr2h	equ	0xFDA
  6483                           fsr2l	equ	0xFD9
  6484                           status	equ	0xFD8
  6485                           
  6486 ;; *************** function _security_force_key_update *****************
  6487 ;; Defined at:
  6488 ;;		line 71 in file "src/miwi/drv_mrf_miwi_89xa.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;		None
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  i               2   33[BANK0 ] int 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;		None               void
  6495 ;; Registers used:
  6496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6505 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6506 ;;Total ram usage:        2 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    7
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_main
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text13
  6517  008822                     __ptext13:
  6518                           	opt stack 0
  6519  008822                     _security_force_key_update:
  6520                           	opt stack 23
  6521                           
  6522                           ;drv_mrf_miwi_89xa.c: 73: for(int i = 0; i < 8; i++)
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;incstack = 0
  6526  008822  0E00               	movlw	0
  6527  008824  0100               	movlb	0	; () banked
  6528  008826  6F82               	movwf	(security_force_key_update@i+1)& (0+255),b
  6529  008828  0E00               	movlw	0
  6530  00882A  6F81               	movwf	security_force_key_update@i& (0+255),b
  6531  00882C                     l13522:
  6532                           
  6533                           ; BSR set to: 0
  6534  00882C  0100               	movlb	0	; () banked
  6535  00882E  BF82               	btfsc	(security_force_key_update@i+1)& (0+255),7,b
  6536  008830  D008               	goto	l13526
  6537  008832  0100               	movlb	0	; () banked
  6538  008834  5182               	movf	(security_force_key_update@i+1)& (0+255),w,b
  6539  008836  E11B               	bnz	l237
  6540  008838  0E08               	movlw	8
  6541  00883A  0100               	movlb	0	; () banked
  6542  00883C  5D81               	subwf	security_force_key_update@i& (0+255),w,b
  6543  00883E  B0D8               	btfsc	status,0,c
  6544  008840  0012               	return	
  6545  008842                     l13526:
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;drv_mrf_miwi_89xa.c: 74: {
  6549                           ;drv_mrf_miwi_89xa.c: 75: key[i] = mySecurityKey[i];
  6550  008842  0E36               	movlw	low _mySecurityKey
  6551  008844  0100               	movlb	0	; () banked
  6552  008846  2581               	addwf	security_force_key_update@i& (0+255),w,b
  6553  008848  6ED9               	movwf	fsr2l,c
  6554  00884A  0E01               	movlw	high _mySecurityKey
  6555  00884C  0100               	movlb	0	; () banked
  6556  00884E  2182               	addwfc	(security_force_key_update@i+1)& (0+255),w,b
  6557  008850  6EDA               	movwf	fsr2h,c
  6558  008852  0EC0               	movlw	low _key
  6559  008854  0100               	movlb	0	; () banked
  6560  008856  2581               	addwf	security_force_key_update@i& (0+255),w,b
  6561  008858  6EE1               	movwf	fsr1l,c
  6562  00885A  0E01               	movlw	high _key
  6563  00885C  0100               	movlb	0	; () banked
  6564  00885E  2182               	addwfc	(security_force_key_update@i+1)& (0+255),w,b
  6565  008860  6EE2               	movwf	fsr1h,c
  6566  008862  CFDF FFE7          	movff	indf2,indf1
  6567                           
  6568                           ; BSR set to: 0
  6569  008866  0100               	movlb	0	; () banked
  6570  008868  4B81               	infsnz	security_force_key_update@i& (0+255),f,b
  6571  00886A  2B82               	incf	(security_force_key_update@i+1)& (0+255),f,b
  6572  00886C  D7DF               	goto	l13522
  6573  00886E                     l237:
  6574                           
  6575                           ; BSR set to: 0
  6576  00886E  0012               	return		;funcret
  6577  008870                     __end_of_security_force_key_update:
  6578                           	opt stack 0
  6579                           tblptru	equ	0xFF8
  6580                           tblptrh	equ	0xFF7
  6581                           tblptrl	equ	0xFF6
  6582                           tablat	equ	0xFF5
  6583                           prodh	equ	0xFF4
  6584                           prodl	equ	0xFF3
  6585                           postinc0	equ	0xFEE
  6586                           plusw0	equ	0xFEB
  6587                           wreg	equ	0xFE8
  6588                           indf1	equ	0xFE7
  6589                           fsr1h	equ	0xFE2
  6590                           fsr1l	equ	0xFE1
  6591                           indf2	equ	0xFDF
  6592                           postinc2	equ	0xFDE
  6593                           postdec2	equ	0xFDD
  6594                           plusw2	equ	0xFDB
  6595                           fsr2h	equ	0xFDA
  6596                           fsr2l	equ	0xFD9
  6597                           status	equ	0xFD8
  6598                           
  6599 ;; *************** function _read_sensors *****************
  6600 ;; Defined at:
  6601 ;;		line 391 in file "src/main.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  value           2   16[BANK1 ] unsigned int 
  6606 ;;  adc_result      2   14[BANK1 ] unsigned int 
  6607 ;;  t1              1   13[BANK1 ] unsigned char 
  6608 ;;  t0              1   12[BANK1 ] unsigned char 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;		None               void
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6619 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6620 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6621 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;Total ram usage:        9 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:    9
  6625 ;; This function calls:
  6626 ;;		_OpenI2C1
  6627 ;;		_ReadI2C1
  6628 ;;		_WriteI2C1
  6629 ;;		___ftdiv
  6630 ;;		___ftmul
  6631 ;;		___fttol
  6632 ;;		___lwtoft
  6633 ;; This function is called by:
  6634 ;;		_main
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text14
  6639  004EB2                     __ptext14:
  6640                           	opt stack 0
  6641  004EB2                     _read_sensors:
  6642                           	opt stack 21
  6643                           
  6644                           ;main.c: 394: ADCON0bits.ADON = 1;
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;incstack = 0
  6648  004EB2  80C2               	bsf	4034,0,c	;volatile
  6649                           
  6650                           ;main.c: 395: LATAbits.LATA6 = 1;
  6651  004EB4  8C89               	bsf	3977,6,c	;volatile
  6652                           
  6653                           ;main.c: 396: _delay((unsigned long)((20)*(8000000/4000.0)));
  6654  004EB6  0E34               	movlw	52
  6655  004EB8  0101               	movlb	1	; () banked
  6656  004EBA  6FDC               	movwf	??_read_sensors& (0+255),b
  6657  004EBC  0EF2               	movlw	242
  6658  004EBE                     u17587:
  6659  004EBE  2EE8               	decfsz	wreg,f,c
  6660  004EC0  D7FE               	goto	u17587
  6661  004EC2  2FDC               	decfsz	??_read_sensors& (0+255),f,b
  6662  004EC4  D7FC               	goto	u17587
  6663                           
  6664                           ;main.c: 399: ADCON1bits.ADCAL = 1;
  6665  004EC6  8CC1               	bsf	4033,6,c	;volatile
  6666                           
  6667                           ;main.c: 400: ADCON0bits.GO = 1;
  6668  004EC8  82C2               	bsf	4034,1,c	;volatile
  6669  004ECA                     l1125:
  6670  004ECA  B2C2               	btfsc	4034,1,c	;volatile
  6671  004ECC  D7FE               	goto	l1125
  6672                           
  6673                           ;main.c: 402: ADCON1bits.ADCAL = 0;
  6674  004ECE  9CC1               	bcf	4033,6,c	;volatile
  6675                           
  6676                           ;main.c: 405: ADCON0bits.CHS = 0;
  6677  004ED0  94C2               	bcf	4034,2,c	;volatile
  6678  004ED2  96C2               	bcf	4034,3,c	;volatile
  6679  004ED4  98C2               	bcf	4034,4,c	;volatile
  6680  004ED6  9AC2               	bcf	4034,5,c	;volatile
  6681                           
  6682                           ;main.c: 406: ADCON0bits.GO = 1;
  6683  004ED8  82C2               	bsf	4034,1,c	;volatile
  6684  004EDA                     l1128:
  6685  004EDA  B2C2               	btfsc	4034,1,c	;volatile
  6686  004EDC  D7FE               	goto	l1128
  6687                           
  6688                           ;main.c: 409: uint16_t adc_result = (ADRESHbits.ADRESH << 8) + ADRESLbits.ADRESL;
  6689  004EDE  50C4               	movf	4036,w,c	;volatile
  6690  004EE0  0101               	movlb	1	; () banked
  6691  004EE2  6FDD               	movwf	(??_read_sensors+1)& (0+255),b
  6692  004EE4  6BDC               	clrf	??_read_sensors& (0+255),b
  6693  004EE6  50C3               	movf	4035,w,c	;volatile
  6694  004EE8  0101               	movlb	1	; () banked
  6695  004EEA  25DC               	addwf	??_read_sensors& (0+255),w,b
  6696  004EEC  0101               	movlb	1	; () banked
  6697  004EEE  6FE1               	movwf	read_sensors@adc_result& (0+255),b
  6698  004EF0  0E00               	movlw	0
  6699  004EF2  0101               	movlb	1	; () banked
  6700  004EF4  21DD               	addwfc	(??_read_sensors+1)& (0+255),w,b
  6701  004EF6  0101               	movlb	1	; () banked
  6702  004EF8  6FE2               	movwf	(read_sensors@adc_result+1)& (0+255),b
  6703                           
  6704                           ; BSR set to: 1
  6705                           ;main.c: 410: m_battery_voltage = (4096F / adc_result) * 1.24F;
  6706  004EFA  C1E1  F089         	movff	read_sensors@adc_result,___lwtoft@c
  6707  004EFE  C1E2  F08A         	movff	read_sensors@adc_result+1,___lwtoft@c+1
  6708  004F02  EC7A  F045         	call	___lwtoft	;wreg free
  6709  004F06  C089  F099         	movff	?___lwtoft,___ftdiv@f2
  6710  004F0A  C08A  F09A         	movff	?___lwtoft+1,___ftdiv@f2+1
  6711  004F0E  C08B  F09B         	movff	?___lwtoft+2,___ftdiv@f2+2
  6712  004F12  0E00               	movlw	0
  6713  004F14  0100               	movlb	0	; () banked
  6714  004F16  6F96               	movwf	___ftdiv@f1& (0+255),b
  6715  004F18  0E80               	movlw	128
  6716  004F1A  0100               	movlb	0	; () banked
  6717  004F1C  6F97               	movwf	(___ftdiv@f1+1)& (0+255),b
  6718  004F1E  0E45               	movlw	69
  6719  004F20  0100               	movlb	0	; () banked
  6720  004F22  6F98               	movwf	(___ftdiv@f1+2)& (0+255),b
  6721  004F24  EC94  F034         	call	___ftdiv	;wreg free
  6722  004F28  C096  F0C9         	movff	?___ftdiv,___ftmul@f1
  6723  004F2C  C097  F0CA         	movff	?___ftdiv+1,___ftmul@f1+1
  6724  004F30  C098  F0CB         	movff	?___ftdiv+2,___ftmul@f1+2
  6725  004F34  0EB8               	movlw	184
  6726  004F36  0100               	movlb	0	; () banked
  6727  004F38  6FCC               	movwf	___ftmul@f2& (0+255),b
  6728  004F3A  0E9E               	movlw	158
  6729  004F3C  0100               	movlb	0	; () banked
  6730  004F3E  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  6731  004F40  0E3F               	movlw	63
  6732  004F42  0100               	movlb	0	; () banked
  6733  004F44  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  6734  004F46  EC93  F032         	call	___ftmul	;wreg free
  6735  004F4A  C0C9  F152         	movff	?___ftmul,_m_battery_voltage
  6736  004F4E  C0CA  F153         	movff	?___ftmul+1,_m_battery_voltage+1
  6737  004F52  C0CB  F154         	movff	?___ftmul+2,_m_battery_voltage+2
  6738                           
  6739                           ;main.c: 413: ADCON0bits.CHS = 1;
  6740  004F56  50C2               	movf	4034,w,c	;volatile
  6741  004F58  0BC3               	andlw	-61
  6742  004F5A  0904               	iorlw	4
  6743  004F5C  6EC2               	movwf	4034,c	;volatile
  6744                           
  6745                           ;main.c: 415: ADCON0bits.GO = 1;
  6746  004F5E  82C2               	bsf	4034,1,c	;volatile
  6747  004F60                     l1131:
  6748  004F60  B2C2               	btfsc	4034,1,c	;volatile
  6749  004F62  D7FE               	goto	l1131
  6750                           
  6751                           ;main.c: 418: adc_result = (ADRESHbits.ADRESH << 8) + ADRESLbits.ADRESL;
  6752  004F64  50C4               	movf	4036,w,c	;volatile
  6753  004F66  0101               	movlb	1	; () banked
  6754  004F68  6FDD               	movwf	(??_read_sensors+1)& (0+255),b
  6755  004F6A  6BDC               	clrf	??_read_sensors& (0+255),b
  6756  004F6C  50C3               	movf	4035,w,c	;volatile
  6757  004F6E  0101               	movlb	1	; () banked
  6758  004F70  25DC               	addwf	??_read_sensors& (0+255),w,b
  6759  004F72  0101               	movlb	1	; () banked
  6760  004F74  6FE1               	movwf	read_sensors@adc_result& (0+255),b
  6761  004F76  0E00               	movlw	0
  6762  004F78  0101               	movlb	1	; () banked
  6763  004F7A  21DD               	addwfc	(??_read_sensors+1)& (0+255),w,b
  6764  004F7C  0101               	movlb	1	; () banked
  6765  004F7E  6FE2               	movwf	(read_sensors@adc_result+1)& (0+255),b
  6766                           
  6767                           ; BSR set to: 1
  6768                           ;main.c: 419: m_light_level = (uint8_t)((adc_result / 74F) * 100F);
  6769  004F80  0E00               	movlw	0
  6770  004F82  0100               	movlb	0	; () banked
  6771  004F84  6FCC               	movwf	___ftmul@f2& (0+255),b
  6772  004F86  0EC8               	movlw	200
  6773  004F88  0100               	movlb	0	; () banked
  6774  004F8A  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  6775  004F8C  0E42               	movlw	66
  6776  004F8E  0100               	movlb	0	; () banked
  6777  004F90  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  6778  004F92  0E00               	movlw	0
  6779  004F94  0100               	movlb	0	; () banked
  6780  004F96  6F99               	movwf	___ftdiv@f2& (0+255),b
  6781  004F98  0E94               	movlw	148
  6782  004F9A  0100               	movlb	0	; () banked
  6783  004F9C  6F9A               	movwf	(___ftdiv@f2+1)& (0+255),b
  6784  004F9E  0E42               	movlw	66
  6785  004FA0  0100               	movlb	0	; () banked
  6786  004FA2  6F9B               	movwf	(___ftdiv@f2+2)& (0+255),b
  6787  004FA4  C1E1  F089         	movff	read_sensors@adc_result,___lwtoft@c
  6788  004FA8  C1E2  F08A         	movff	read_sensors@adc_result+1,___lwtoft@c+1
  6789  004FAC  EC7A  F045         	call	___lwtoft	;wreg free
  6790  004FB0  C089  F096         	movff	?___lwtoft,___ftdiv@f1
  6791  004FB4  C08A  F097         	movff	?___lwtoft+1,___ftdiv@f1+1
  6792  004FB8  C08B  F098         	movff	?___lwtoft+2,___ftdiv@f1+2
  6793  004FBC  EC94  F034         	call	___ftdiv	;wreg free
  6794  004FC0  C096  F0C9         	movff	?___ftdiv,___ftmul@f1
  6795  004FC4  C097  F0CA         	movff	?___ftdiv+1,___ftmul@f1+1
  6796  004FC8  C098  F0CB         	movff	?___ftdiv+2,___ftmul@f1+2
  6797  004FCC  EC93  F032         	call	___ftmul	;wreg free
  6798  004FD0  C0C9  F0A5         	movff	?___ftmul,___fttol@f1
  6799  004FD4  C0CA  F0A6         	movff	?___ftmul+1,___fttol@f1+1
  6800  004FD8  C0CB  F0A7         	movff	?___ftmul+2,___fttol@f1+2
  6801  004FDC  EC3A  F035         	call	___fttol	;wreg free
  6802  004FE0  0100               	movlb	0	; () banked
  6803  004FE2  51A5               	movf	?___fttol& (0+255),w,b
  6804  004FE4  0101               	movlb	1	; () banked
  6805  004FE6  6F68               	movwf	_m_light_level& (0+255),b
  6806                           
  6807                           ; BSR set to: 1
  6808                           ;main.c: 420: if (m_light_level > 100)
  6809  004FE8  0E64               	movlw	100
  6810  004FEA  0101               	movlb	1	; () banked
  6811  004FEC  6568               	cpfsgt	_m_light_level& (0+255),b
  6812  004FEE  D003               	goto	l14042
  6813                           
  6814                           ; BSR set to: 1
  6815                           ;main.c: 421: {
  6816                           ;main.c: 422: m_light_level = 100;
  6817  004FF0  0E64               	movlw	100
  6818  004FF2  0101               	movlb	1	; () banked
  6819  004FF4  6F68               	movwf	_m_light_level& (0+255),b
  6820  004FF6                     l14042:
  6821                           
  6822                           ; BSR set to: 1
  6823                           ;main.c: 423: }
  6824                           ;main.c: 428: _delay((unsigned long)((90)*(8000000/4000.0)));
  6825  004FF6  0EEA               	movlw	234
  6826  004FF8  0101               	movlb	1	; () banked
  6827  004FFA  6FDC               	movwf	??_read_sensors& (0+255),b
  6828  004FFC  0EC3               	movlw	195
  6829  004FFE                     u17597:
  6830  004FFE  2EE8               	decfsz	wreg,f,c
  6831  005000  D7FE               	goto	u17597
  6832  005002  2FDC               	decfsz	??_read_sensors& (0+255),f,b
  6833  005004  D7FC               	goto	u17597
  6834  005006  F000               	nop	
  6835                           
  6836                           ;main.c: 429: OpenI2C1(0b00001000, 0b10000000);
  6837  005008  0E80               	movlw	128
  6838  00500A  0100               	movlb	0	; () banked
  6839  00500C  6F81               	movwf	OpenI2C1@slew& (0+255),b
  6840  00500E  0E08               	movlw	8
  6841  005010  EC8F  F045         	call	_OpenI2C1
  6842  005014                     l14046:
  6843  005014  A4C7               	btfss	4039,2,c	;volatile
  6844  005016  D004               	goto	u16400
  6845  005018  0101               	movlb	1	; () banked
  6846  00501A  6BDC               	clrf	??_read_sensors& (0+255),b
  6847  00501C  2BDC               	incf	??_read_sensors& (0+255),f,b
  6848  00501E  D002               	goto	u16408
  6849  005020                     u16400:
  6850  005020  0101               	movlb	1	; () banked
  6851  005022  6BDC               	clrf	??_read_sensors& (0+255),b
  6852  005024                     u16408:
  6853  005024  50C5               	movf	4037,w,c	;volatile
  6854  005026  0B1F               	andlw	31
  6855  005028  0101               	movlb	1	; () banked
  6856  00502A  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6857  00502C  0900               	iorlw	0
  6858  00502E  A4D8               	btfss	status,2,c
  6859  005030  D7F1               	goto	l14046
  6860                           
  6861                           ; BSR set to: 1
  6862                           ;main.c: 435: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  6863  005032  80C5               	bsf	4037,0,c	;volatile
  6864  005034                     l1138:
  6865  005034  B0C5               	btfsc	4037,0,c	;volatile
  6866  005036  D7FE               	goto	l1138
  6867  005038                     l14048:
  6868  005038  A4C7               	btfss	4039,2,c	;volatile
  6869  00503A  D004               	goto	u16430
  6870  00503C  0101               	movlb	1	; () banked
  6871  00503E  6BDC               	clrf	??_read_sensors& (0+255),b
  6872  005040  2BDC               	incf	??_read_sensors& (0+255),f,b
  6873  005042  D002               	goto	u16438
  6874  005044                     u16430:
  6875  005044  0101               	movlb	1	; () banked
  6876  005046  6BDC               	clrf	??_read_sensors& (0+255),b
  6877  005048                     u16438:
  6878  005048  50C5               	movf	4037,w,c	;volatile
  6879  00504A  0B1F               	andlw	31
  6880  00504C  0101               	movlb	1	; () banked
  6881  00504E  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6882  005050  0900               	iorlw	0
  6883  005052  A4D8               	btfss	status,2,c
  6884  005054  D7F1               	goto	l14048
  6885                           
  6886                           ; BSR set to: 1
  6887                           ;main.c: 437: WriteI2C1( 0b10010000 & 0xfe );
  6888                           
  6889                           ; BSR set to: 1
  6890  005056  0E90               	movlw	144
  6891  005058  ECC8  F042         	call	_WriteI2C1
  6892  00505C                     l14052:
  6893  00505C  A4C7               	btfss	4039,2,c	;volatile
  6894  00505E  D004               	goto	u16450
  6895  005060  0101               	movlb	1	; () banked
  6896  005062  6BDC               	clrf	??_read_sensors& (0+255),b
  6897  005064  2BDC               	incf	??_read_sensors& (0+255),f,b
  6898  005066  D002               	goto	u16458
  6899  005068                     u16450:
  6900  005068  0101               	movlb	1	; () banked
  6901  00506A  6BDC               	clrf	??_read_sensors& (0+255),b
  6902  00506C                     u16458:
  6903  00506C  50C5               	movf	4037,w,c	;volatile
  6904  00506E  0B1F               	andlw	31
  6905  005070  0101               	movlb	1	; () banked
  6906  005072  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6907  005074  0900               	iorlw	0
  6908  005076  A4D8               	btfss	status,2,c
  6909  005078  D7F1               	goto	l14052
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;main.c: 439: WriteI2C1( 0x00 );
  6913                           
  6914                           ; BSR set to: 1
  6915  00507A  0E00               	movlw	0
  6916  00507C  ECC8  F042         	call	_WriteI2C1
  6917  005080                     l14056:
  6918  005080  A4C7               	btfss	4039,2,c	;volatile
  6919  005082  D004               	goto	u16470
  6920  005084  0101               	movlb	1	; () banked
  6921  005086  6BDC               	clrf	??_read_sensors& (0+255),b
  6922  005088  2BDC               	incf	??_read_sensors& (0+255),f,b
  6923  00508A  D002               	goto	u16478
  6924  00508C                     u16470:
  6925  00508C  0101               	movlb	1	; () banked
  6926  00508E  6BDC               	clrf	??_read_sensors& (0+255),b
  6927  005090                     u16478:
  6928  005090  50C5               	movf	4037,w,c	;volatile
  6929  005092  0B1F               	andlw	31
  6930  005094  0101               	movlb	1	; () banked
  6931  005096  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6932  005098  0900               	iorlw	0
  6933  00509A  A4D8               	btfss	status,2,c
  6934  00509C  D7F1               	goto	l14056
  6935                           
  6936                           ; BSR set to: 1
  6937                           ;main.c: 441: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  6938  00509E  84C5               	bsf	4037,2,c	;volatile
  6939  0050A0                     l1150:
  6940  0050A0  B4C5               	btfsc	4037,2,c	;volatile
  6941  0050A2  D7FE               	goto	l1150
  6942  0050A4                     l14058:
  6943  0050A4  A4C7               	btfss	4039,2,c	;volatile
  6944  0050A6  D004               	goto	u16500
  6945  0050A8  0101               	movlb	1	; () banked
  6946  0050AA  6BDC               	clrf	??_read_sensors& (0+255),b
  6947  0050AC  2BDC               	incf	??_read_sensors& (0+255),f,b
  6948  0050AE  D002               	goto	u16508
  6949  0050B0                     u16500:
  6950  0050B0  0101               	movlb	1	; () banked
  6951  0050B2  6BDC               	clrf	??_read_sensors& (0+255),b
  6952  0050B4                     u16508:
  6953  0050B4  50C5               	movf	4037,w,c	;volatile
  6954  0050B6  0B1F               	andlw	31
  6955  0050B8  0101               	movlb	1	; () banked
  6956  0050BA  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6957  0050BC  0900               	iorlw	0
  6958  0050BE  A4D8               	btfss	status,2,c
  6959  0050C0  D7F1               	goto	l14058
  6960                           
  6961                           ; BSR set to: 1
  6962                           ;main.c: 445: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  6963  0050C2  80C5               	bsf	4037,0,c	;volatile
  6964  0050C4                     l1156:
  6965  0050C4  B0C5               	btfsc	4037,0,c	;volatile
  6966  0050C6  D7FE               	goto	l1156
  6967  0050C8                     l14060:
  6968  0050C8  A4C7               	btfss	4039,2,c	;volatile
  6969  0050CA  D004               	goto	u16530
  6970  0050CC  0101               	movlb	1	; () banked
  6971  0050CE  6BDC               	clrf	??_read_sensors& (0+255),b
  6972  0050D0  2BDC               	incf	??_read_sensors& (0+255),f,b
  6973  0050D2  D002               	goto	u16538
  6974  0050D4                     u16530:
  6975  0050D4  0101               	movlb	1	; () banked
  6976  0050D6  6BDC               	clrf	??_read_sensors& (0+255),b
  6977  0050D8                     u16538:
  6978  0050D8  50C5               	movf	4037,w,c	;volatile
  6979  0050DA  0B1F               	andlw	31
  6980  0050DC  0101               	movlb	1	; () banked
  6981  0050DE  11DC               	iorwf	??_read_sensors& (0+255),w,b
  6982  0050E0  0900               	iorlw	0
  6983  0050E2  A4D8               	btfss	status,2,c
  6984  0050E4  D7F1               	goto	l14060
  6985                           
  6986                           ; BSR set to: 1
  6987                           ;main.c: 447: WriteI2C1( 0b10010000 | 0x01 );
  6988                           
  6989                           ; BSR set to: 1
  6990  0050E6  0E91               	movlw	145
  6991  0050E8  ECC8  F042         	call	_WriteI2C1
  6992  0050EC                     l14064:
  6993  0050EC  A4C7               	btfss	4039,2,c	;volatile
  6994  0050EE  D004               	goto	u16550
  6995  0050F0  0101               	movlb	1	; () banked
  6996  0050F2  6BDC               	clrf	??_read_sensors& (0+255),b
  6997  0050F4  2BDC               	incf	??_read_sensors& (0+255),f,b
  6998  0050F6  D002               	goto	u16558
  6999  0050F8                     u16550:
  7000  0050F8  0101               	movlb	1	; () banked
  7001  0050FA  6BDC               	clrf	??_read_sensors& (0+255),b
  7002  0050FC                     u16558:
  7003  0050FC  50C5               	movf	4037,w,c	;volatile
  7004  0050FE  0B1F               	andlw	31
  7005  005100  0101               	movlb	1	; () banked
  7006  005102  11DC               	iorwf	??_read_sensors& (0+255),w,b
  7007  005104  0900               	iorlw	0
  7008  005106  A4D8               	btfss	status,2,c
  7009  005108  D7F1               	goto	l14064
  7010                           
  7011                           ; BSR set to: 1
  7012                           ;main.c: 449: t1 = ReadI2C1();
  7013                           
  7014                           ; BSR set to: 1
  7015  00510A  ECBD  F045         	call	_ReadI2C1	;wreg free
  7016  00510E  0101               	movlb	1	; () banked
  7017  005110  6FE0               	movwf	read_sensors@t1& (0+255),b
  7018                           
  7019                           ; BSR set to: 1
  7020                           ;main.c: 450: SSP1CON2bits.ACKDT=0, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7021  005112  9AC5               	bcf	4037,5,c	;volatile
  7022                           
  7023                           ; BSR set to: 1
  7024  005114  88C5               	bsf	4037,4,c	;volatile
  7025  005116                     l1165:
  7026  005116  B8C5               	btfsc	4037,4,c	;volatile
  7027  005118  D7FE               	goto	l1165
  7028                           
  7029                           ;main.c: 451: t0 = ReadI2C1();
  7030  00511A  ECBD  F045         	call	_ReadI2C1	;wreg free
  7031  00511E  0101               	movlb	1	; () banked
  7032  005120  6FDF               	movwf	read_sensors@t0& (0+255),b
  7033                           
  7034                           ; BSR set to: 1
  7035                           ;main.c: 452: SSP1CON2bits.ACKDT=1, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7036  005122  8AC5               	bsf	4037,5,c	;volatile
  7037                           
  7038                           ; BSR set to: 1
  7039  005124  88C5               	bsf	4037,4,c	;volatile
  7040  005126                     l1168:
  7041  005126  B8C5               	btfsc	4037,4,c	;volatile
  7042  005128  D7FE               	goto	l1168
  7043                           
  7044                           ;main.c: 453: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  7045  00512A  84C5               	bsf	4037,2,c	;volatile
  7046  00512C                     l1171:
  7047  00512C  B4C5               	btfsc	4037,2,c	;volatile
  7048  00512E  D7FE               	goto	l1171
  7049                           
  7050                           ;main.c: 455: uint16_t value = (t1<<8) + t0;
  7051  005130  0101               	movlb	1	; () banked
  7052  005132  51E0               	movf	read_sensors@t1& (0+255),w,b
  7053  005134  0101               	movlb	1	; () banked
  7054  005136  6FDD               	movwf	(??_read_sensors+1)& (0+255),b
  7055  005138  6BDC               	clrf	??_read_sensors& (0+255),b
  7056  00513A  0101               	movlb	1	; () banked
  7057  00513C  51DF               	movf	read_sensors@t0& (0+255),w,b
  7058  00513E  0101               	movlb	1	; () banked
  7059  005140  25DC               	addwf	??_read_sensors& (0+255),w,b
  7060  005142  0101               	movlb	1	; () banked
  7061  005144  6FE3               	movwf	read_sensors@value& (0+255),b
  7062  005146  0101               	movlb	1	; () banked
  7063  005148  0E00               	movlw	0
  7064  00514A  0101               	movlb	1	; () banked
  7065  00514C  21DD               	addwfc	(??_read_sensors+1)& (0+255),w,b
  7066  00514E  0101               	movlb	1	; () banked
  7067  005150  6FE4               	movwf	(read_sensors@value+1)& (0+255),b
  7068                           
  7069                           ;main.c: 456: value = (value>>4);
  7070  005152  C1E3  F1DC         	movff	read_sensors@value,??_read_sensors
  7071  005156  C1E4  F1DD         	movff	read_sensors@value+1,??_read_sensors+1
  7072  00515A  0E04               	movlw	4
  7073  00515C  0101               	movlb	1	; () banked
  7074  00515E  6FDE               	movwf	(??_read_sensors+2)& (0+255),b
  7075  005160                     u16605:
  7076  005160  0101               	movlb	1	; () banked
  7077  005162  90D8               	bcf	status,0,c
  7078  005164  33DD               	rrcf	(??_read_sensors+1)& (0+255),f,b
  7079  005166  33DC               	rrcf	??_read_sensors& (0+255),f,b
  7080  005168  0101               	movlb	1	; () banked
  7081  00516A  2FDE               	decfsz	(??_read_sensors+2)& (0+255),f,b
  7082  00516C  D7F9               	goto	u16605
  7083  00516E  C1DC  F1E3         	movff	??_read_sensors,read_sensors@value
  7084  005172  C1DD  F1E4         	movff	??_read_sensors+1,read_sensors@value+1
  7085                           
  7086                           ; BSR set to: 1
  7087                           ;main.c: 457: m_temperature = ((float)value)*0.0625F;
  7088  005176  C1E3  F089         	movff	read_sensors@value,___lwtoft@c
  7089  00517A  C1E4  F08A         	movff	read_sensors@value+1,___lwtoft@c+1
  7090  00517E  EC7A  F045         	call	___lwtoft	;wreg free
  7091  005182  C089  F0C9         	movff	?___lwtoft,___ftmul@f1
  7092  005186  C08A  F0CA         	movff	?___lwtoft+1,___ftmul@f1+1
  7093  00518A  C08B  F0CB         	movff	?___lwtoft+2,___ftmul@f1+2
  7094  00518E  0E00               	movlw	0
  7095  005190  0100               	movlb	0	; () banked
  7096  005192  6FCC               	movwf	___ftmul@f2& (0+255),b
  7097  005194  0E80               	movlw	128
  7098  005196  0100               	movlb	0	; () banked
  7099  005198  6FCD               	movwf	(___ftmul@f2+1)& (0+255),b
  7100  00519A  0E3D               	movlw	61
  7101  00519C  0100               	movlb	0	; () banked
  7102  00519E  6FCE               	movwf	(___ftmul@f2+2)& (0+255),b
  7103  0051A0  EC93  F032         	call	___ftmul	;wreg free
  7104  0051A4  C0C9  F155         	movff	?___ftmul,_m_temperature
  7105  0051A8  C0CA  F156         	movff	?___ftmul+1,_m_temperature+1
  7106  0051AC  C0CB  F157         	movff	?___ftmul+2,_m_temperature+2
  7107                           
  7108                           ;main.c: 459: ADCON0bits.ADON = 0;
  7109  0051B0  90C2               	bcf	4034,0,c	;volatile
  7110                           
  7111                           ;main.c: 460: SSP1CON1 &=0xDF;
  7112  0051B2  9AC6               	bcf	4038,5,c	;volatile
  7113                           
  7114                           ;main.c: 461: LATAbits.LATA6 = 0;
  7115  0051B4  9C89               	bcf	3977,6,c	;volatile
  7116  0051B6  0012               	return		;funcret
  7117  0051B8                     __end_of_read_sensors:
  7118                           	opt stack 0
  7119                           tblptru	equ	0xFF8
  7120                           tblptrh	equ	0xFF7
  7121                           tblptrl	equ	0xFF6
  7122                           tablat	equ	0xFF5
  7123                           prodh	equ	0xFF4
  7124                           prodl	equ	0xFF3
  7125                           postinc0	equ	0xFEE
  7126                           plusw0	equ	0xFEB
  7127                           wreg	equ	0xFE8
  7128                           indf1	equ	0xFE7
  7129                           fsr1h	equ	0xFE2
  7130                           fsr1l	equ	0xFE1
  7131                           indf2	equ	0xFDF
  7132                           postinc2	equ	0xFDE
  7133                           postdec2	equ	0xFDD
  7134                           plusw2	equ	0xFDB
  7135                           fsr2h	equ	0xFDA
  7136                           fsr2l	equ	0xFD9
  7137                           status	equ	0xFD8
  7138                           
  7139 ;; *************** function ___lwtoft *****************
  7140 ;; Defined at:
  7141 ;;		line 28 in file "/opt/microchip/xc8/v1.35/sources/common/lwtoft.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  c               2   41[BANK0 ] unsigned int 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  3   41[BANK0 ] float 
  7148 ;; Registers used:
  7149 ;;		wreg, status,2, status,0, cstack
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7155 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7158 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7159 ;;Total ram usage:        3 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; Hardware stack levels required when called:    8
  7162 ;; This function calls:
  7163 ;;		___ftpack
  7164 ;; This function is called by:
  7165 ;;		_read_sensors
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text15
  7170  008AF4                     __ptext15:
  7171                           	opt stack 0
  7172  008AF4                     ___lwtoft:
  7173                           	opt stack 21
  7174                           
  7175                           ;incstack = 0
  7176  008AF4  C089  F081         	movff	___lwtoft@c,___ftpack@arg
  7177  008AF8  C08A  F082         	movff	___lwtoft@c+1,___ftpack@arg+1
  7178  008AFC  0100               	movlb	0	; () banked
  7179  008AFE  6B83               	clrf	(___ftpack@arg+2)& (0+255),b
  7180  008B00  0E8E               	movlw	142
  7181  008B02  0100               	movlb	0	; () banked
  7182  008B04  6F84               	movwf	___ftpack@exp& (0+255),b
  7183  008B06  0E00               	movlw	0
  7184  008B08  0100               	movlb	0	; () banked
  7185  008B0A  6F85               	movwf	___ftpack@sign& (0+255),b
  7186  008B0C  EC57  F039         	call	___ftpack	;wreg free
  7187  008B10  C081  F089         	movff	?___ftpack,?___lwtoft
  7188  008B14  C082  F08A         	movff	?___ftpack+1,?___lwtoft+1
  7189  008B18  C083  F08B         	movff	?___ftpack+2,?___lwtoft+2
  7190  008B1C  0012               	return	
  7191  008B1E                     __end_of___lwtoft:
  7192                           	opt stack 0
  7193                           tblptru	equ	0xFF8
  7194                           tblptrh	equ	0xFF7
  7195                           tblptrl	equ	0xFF6
  7196                           tablat	equ	0xFF5
  7197                           prodh	equ	0xFF4
  7198                           prodl	equ	0xFF3
  7199                           postinc0	equ	0xFEE
  7200                           plusw0	equ	0xFEB
  7201                           wreg	equ	0xFE8
  7202                           indf1	equ	0xFE7
  7203                           fsr1h	equ	0xFE2
  7204                           fsr1l	equ	0xFE1
  7205                           indf2	equ	0xFDF
  7206                           postinc2	equ	0xFDE
  7207                           postdec2	equ	0xFDD
  7208                           plusw2	equ	0xFDB
  7209                           fsr2h	equ	0xFDA
  7210                           fsr2l	equ	0xFD9
  7211                           status	equ	0xFD8
  7212                           
  7213 ;; *************** function ___fttol *****************
  7214 ;; Defined at:
  7215 ;;		line 44 in file "/opt/microchip/xc8/v1.35/sources/common/fttol.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  f1              3   69[BANK0 ] float 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  lval            4   79[BANK0 ] unsigned long 
  7220 ;;  exp1            1   83[BANK0 ] unsigned char 
  7221 ;;  sign1           1   78[BANK0 ] unsigned char 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  4   69[BANK0 ] long 
  7224 ;; Registers used:
  7225 ;;		wreg, status,2, status,0
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7231 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7233 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7234 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;Total ram usage:       15 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    7
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_read_sensors
  7242 ;;		_send_initial_update
  7243 ;;		_send_periodical_update
  7244 ;;		_floor
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text16
  7249  006A74                     __ptext16:
  7250                           	opt stack 0
  7251  006A74                     ___fttol:
  7252                           	opt stack 21
  7253                           
  7254                           ;incstack = 0
  7255  006A74  C0A7  F0A9         	movff	___fttol@f1+2,??___fttol
  7256  006A78  0100               	movlb	0	; () banked
  7257  006A7A  6BAA               	clrf	(??___fttol+1)& (0+255),b
  7258  006A7C  6BAB               	clrf	(??___fttol+2)& (0+255),b
  7259  006A7E  0100               	movlb	0	; () banked
  7260  006A80  35A6               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7261  006A82  0100               	movlb	0	; () banked
  7262  006A84  37A9               	rlcf	??___fttol& (0+255),f,b
  7263  006A86  E301               	bnc	u14511
  7264  006A88  81AA               	bsf	(??___fttol+1)& (0+255),0,b
  7265  006A8A                     u14511:
  7266  006A8A  0100               	movlb	0	; () banked
  7267  006A8C  51A9               	movf	??___fttol& (0+255),w,b
  7268  006A8E  0100               	movlb	0	; () banked
  7269  006A90  6FB3               	movwf	___fttol@exp1& (0+255),b
  7270  006A92  0100               	movlb	0	; () banked
  7271  006A94  51B3               	movf	___fttol@exp1& (0+255),w,b
  7272  006A96  A4D8               	btfss	status,2,c
  7273  006A98  D00A               	goto	l12518
  7274                           
  7275                           ; BSR set to: 0
  7276  006A9A  0E00               	movlw	0
  7277  006A9C  0100               	movlb	0	; () banked
  7278  006A9E  6FA5               	movwf	?___fttol& (0+255),b
  7279  006AA0  0E00               	movlw	0
  7280  006AA2  6FA6               	movwf	(?___fttol+1)& (0+255),b
  7281  006AA4  0E00               	movlw	0
  7282  006AA6  6FA7               	movwf	(?___fttol+2)& (0+255),b
  7283  006AA8  0E00               	movlw	0
  7284  006AAA  6FA8               	movwf	(?___fttol+3)& (0+255),b
  7285                           
  7286                           ; BSR set to: 0
  7287  006AAC  0012               	return	
  7288  006AAE                     l12518:
  7289                           
  7290                           ; BSR set to: 0
  7291  006AAE  0E17               	movlw	23
  7292  006AB0  0100               	movlb	0	; () banked
  7293  006AB2  6FA9               	movwf	??___fttol& (0+255),b
  7294  006AB4  C0A5  F0AA         	movff	___fttol@f1,??___fttol+1
  7295  006AB8  C0A6  F0AB         	movff	___fttol@f1+1,??___fttol+2
  7296  006ABC  C0A7  F0AC         	movff	___fttol@f1+2,??___fttol+3
  7297  006AC0  0100               	movlb	0	; () banked
  7298  006AC2  29A9               	incf	??___fttol& (0+255),w,b
  7299  006AC4  0100               	movlb	0	; () banked
  7300  006AC6  6FAD               	movwf	(??___fttol+4)& (0+255),b
  7301  006AC8  D005               	goto	u14530
  7302  006ACA                     u14535:
  7303  006ACA  0100               	movlb	0	; () banked
  7304  006ACC  90D8               	bcf	status,0,c
  7305  006ACE  33AC               	rrcf	(??___fttol+3)& (0+255),f,b
  7306  006AD0  33AB               	rrcf	(??___fttol+2)& (0+255),f,b
  7307  006AD2  33AA               	rrcf	(??___fttol+1)& (0+255),f,b
  7308  006AD4                     u14530:
  7309  006AD4  0100               	movlb	0	; () banked
  7310  006AD6  2FAD               	decfsz	(??___fttol+4)& (0+255),f,b
  7311  006AD8  D7F8               	goto	u14535
  7312  006ADA  0100               	movlb	0	; () banked
  7313  006ADC  51AA               	movf	(??___fttol+1)& (0+255),w,b
  7314  006ADE  0100               	movlb	0	; () banked
  7315  006AE0  6FAE               	movwf	___fttol@sign1& (0+255),b
  7316                           
  7317                           ; BSR set to: 0
  7318  006AE2  0100               	movlb	0	; () banked
  7319  006AE4  8FA6               	bsf	(___fttol@f1+1)& (0+255),7,b
  7320                           
  7321                           ; BSR set to: 0
  7322  006AE6  0EFF               	movlw	255
  7323  006AE8  0100               	movlb	0	; () banked
  7324  006AEA  17A5               	andwf	___fttol@f1& (0+255),f,b
  7325  006AEC  0EFF               	movlw	255
  7326  006AEE  0100               	movlb	0	; () banked
  7327  006AF0  17A6               	andwf	(___fttol@f1+1)& (0+255),f,b
  7328  006AF2  0E00               	movlw	0
  7329  006AF4  0100               	movlb	0	; () banked
  7330  006AF6  17A7               	andwf	(___fttol@f1+2)& (0+255),f,b
  7331                           
  7332                           ; BSR set to: 0
  7333  006AF8  0100               	movlb	0	; () banked
  7334  006AFA  51A5               	movf	___fttol@f1& (0+255),w,b
  7335  006AFC  0100               	movlb	0	; () banked
  7336  006AFE  6FAF               	movwf	___fttol@lval& (0+255),b
  7337  006B00  0100               	movlb	0	; () banked
  7338  006B02  51A6               	movf	(___fttol@f1+1)& (0+255),w,b
  7339  006B04  0100               	movlb	0	; () banked
  7340  006B06  6FB0               	movwf	(___fttol@lval+1)& (0+255),b
  7341  006B08  0100               	movlb	0	; () banked
  7342  006B0A  51A7               	movf	(___fttol@f1+2)& (0+255),w,b
  7343  006B0C  0100               	movlb	0	; () banked
  7344  006B0E  6FB1               	movwf	(___fttol@lval+2)& (0+255),b
  7345  006B10  0100               	movlb	0	; () banked
  7346  006B12  6BB2               	clrf	(___fttol@lval+3)& (0+255),b
  7347                           
  7348                           ; BSR set to: 0
  7349  006B14  0E8E               	movlw	142
  7350  006B16  0100               	movlb	0	; () banked
  7351  006B18  5FB3               	subwf	___fttol@exp1& (0+255),f,b
  7352                           
  7353                           ; BSR set to: 0
  7354  006B1A  0100               	movlb	0	; () banked
  7355  006B1C  AFB3               	btfss	___fttol@exp1& (0+255),7,b
  7356  006B1E  D01A               	goto	l12540
  7357                           
  7358                           ; BSR set to: 0
  7359  006B20  0100               	movlb	0	; () banked
  7360  006B22  51B3               	movf	___fttol@exp1& (0+255),w,b
  7361  006B24  0A80               	xorlw	128
  7362  006B26  0F8F               	addlw	143
  7363  006B28  B0D8               	btfsc	status,0,c
  7364  006B2A  D00A               	goto	l12536
  7365                           
  7366                           ; BSR set to: 0
  7367  006B2C  0E00               	movlw	0
  7368  006B2E  0100               	movlb	0	; () banked
  7369  006B30  6FA5               	movwf	?___fttol& (0+255),b
  7370  006B32  0E00               	movlw	0
  7371  006B34  6FA6               	movwf	(?___fttol+1)& (0+255),b
  7372  006B36  0E00               	movlw	0
  7373  006B38  6FA7               	movwf	(?___fttol+2)& (0+255),b
  7374  006B3A  0E00               	movlw	0
  7375  006B3C  6FA8               	movwf	(?___fttol+3)& (0+255),b
  7376                           
  7377                           ; BSR set to: 0
  7378  006B3E  0012               	return	
  7379  006B40                     l12536:
  7380                           
  7381                           ; BSR set to: 0
  7382  006B40  0100               	movlb	0	; () banked
  7383  006B42  90D8               	bcf	status,0,c
  7384  006B44  33B2               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7385  006B46  33B1               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7386  006B48  33B0               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7387  006B4A  33AF               	rrcf	___fttol@lval& (0+255),f,b
  7388                           
  7389                           ; BSR set to: 0
  7390  006B4C  0100               	movlb	0	; () banked
  7391  006B4E  3FB3               	incfsz	___fttol@exp1& (0+255),f,b
  7392  006B50  D7F7               	goto	l12536
  7393                           
  7394                           ; BSR set to: 0
  7395  006B52  D01B               	goto	l12550
  7396  006B54                     l12540:
  7397                           
  7398                           ; BSR set to: 0
  7399  006B54  0E17               	movlw	23
  7400  006B56  0100               	movlb	0	; () banked
  7401  006B58  65B3               	cpfsgt	___fttol@exp1& (0+255),b
  7402  006B5A  D012               	goto	l12548
  7403                           
  7404                           ; BSR set to: 0
  7405  006B5C  0E00               	movlw	0
  7406  006B5E  0100               	movlb	0	; () banked
  7407  006B60  6FA5               	movwf	?___fttol& (0+255),b
  7408  006B62  0E00               	movlw	0
  7409  006B64  6FA6               	movwf	(?___fttol+1)& (0+255),b
  7410  006B66  0E00               	movlw	0
  7411  006B68  6FA7               	movwf	(?___fttol+2)& (0+255),b
  7412  006B6A  0E00               	movlw	0
  7413  006B6C  6FA8               	movwf	(?___fttol+3)& (0+255),b
  7414                           
  7415                           ; BSR set to: 0
  7416  006B6E  0012               	return	
  7417  006B70                     l12546:
  7418                           
  7419                           ; BSR set to: 0
  7420  006B70  0100               	movlb	0	; () banked
  7421  006B72  90D8               	bcf	status,0,c
  7422  006B74  37AF               	rlcf	___fttol@lval& (0+255),f,b
  7423  006B76  37B0               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7424  006B78  37B1               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7425  006B7A  37B2               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7426  006B7C  0100               	movlb	0	; () banked
  7427  006B7E  07B3               	decf	___fttol@exp1& (0+255),f,b
  7428  006B80                     l12548:
  7429                           
  7430                           ; BSR set to: 0
  7431  006B80  0100               	movlb	0	; () banked
  7432  006B82  51B3               	movf	___fttol@exp1& (0+255),w,b
  7433  006B84  0100               	movlb	0	; () banked
  7434  006B86  A4D8               	btfss	status,2,c
  7435  006B88  D7F3               	goto	l12546
  7436  006B8A                     l12550:
  7437                           
  7438                           ; BSR set to: 0
  7439  006B8A  0100               	movlb	0	; () banked
  7440  006B8C  51AE               	movf	___fttol@sign1& (0+255),w,b
  7441  006B8E  0100               	movlb	0	; () banked
  7442  006B90  B4D8               	btfsc	status,2,c
  7443  006B92  D009               	goto	l12554
  7444                           
  7445                           ; BSR set to: 0
  7446  006B94  0100               	movlb	0	; () banked
  7447  006B96  1FB2               	comf	(___fttol@lval+3)& (0+255),f,b
  7448  006B98  1FB1               	comf	(___fttol@lval+2)& (0+255),f,b
  7449  006B9A  1FB0               	comf	(___fttol@lval+1)& (0+255),f,b
  7450  006B9C  6DAF               	negf	___fttol@lval& (0+255),b
  7451  006B9E  0E00               	movlw	0
  7452  006BA0  23B0               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7453  006BA2  23B1               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7454  006BA4  23B2               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7455  006BA6                     l12554:
  7456                           
  7457                           ; BSR set to: 0
  7458  006BA6  C0AF  F0A5         	movff	___fttol@lval,?___fttol
  7459  006BAA  C0B0  F0A6         	movff	___fttol@lval+1,?___fttol+1
  7460  006BAE  C0B1  F0A7         	movff	___fttol@lval+2,?___fttol+2
  7461  006BB2  C0B2  F0A8         	movff	___fttol@lval+3,?___fttol+3
  7462  006BB6  0012               	return	
  7463  006BB8                     __end_of___fttol:
  7464                           	opt stack 0
  7465                           tblptru	equ	0xFF8
  7466                           tblptrh	equ	0xFF7
  7467                           tblptrl	equ	0xFF6
  7468                           tablat	equ	0xFF5
  7469                           prodh	equ	0xFF4
  7470                           prodl	equ	0xFF3
  7471                           postinc0	equ	0xFEE
  7472                           plusw0	equ	0xFEB
  7473                           wreg	equ	0xFE8
  7474                           indf1	equ	0xFE7
  7475                           fsr1h	equ	0xFE2
  7476                           fsr1l	equ	0xFE1
  7477                           indf2	equ	0xFDF
  7478                           postinc2	equ	0xFDE
  7479                           postdec2	equ	0xFDD
  7480                           plusw2	equ	0xFDB
  7481                           fsr2h	equ	0xFDA
  7482                           fsr2l	equ	0xFD9
  7483                           status	equ	0xFD8
  7484                           
  7485 ;; *************** function ___ftmul *****************
  7486 ;; Defined at:
  7487 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/ftmul.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  f1              3  105[BANK0 ] float 
  7490 ;;  f2              3  108[BANK0 ] float 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  f3_as_produc    3    4[BANK1 ] unsigned um
  7493 ;;  sign            1    8[BANK1 ] unsigned char 
  7494 ;;  cntr            1    7[BANK1 ] unsigned char 
  7495 ;;  exp             1    3[BANK1 ] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  3  105[BANK0 ] float 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7505 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7508 ;;      Totals:         0       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7509 ;;Total ram usage:       15 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    8
  7512 ;; This function calls:
  7513 ;;		___ftpack
  7514 ;; This function is called by:
  7515 ;;		_read_sensors
  7516 ;;		_send_initial_update
  7517 ;;		_send_periodical_update
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text17
  7522  006526                     __ptext17:
  7523                           	opt stack 0
  7524  006526                     ___ftmul:
  7525                           	opt stack 21
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;incstack = 0
  7529  006526  C0CB  F1D3         	movff	___ftmul@f1+2,??___ftmul
  7530  00652A  0101               	movlb	1	; () banked
  7531  00652C  6BD4               	clrf	(??___ftmul+1)& (0+255),b
  7532  00652E  6BD5               	clrf	(??___ftmul+2)& (0+255),b
  7533  006530  0100               	movlb	0	; () banked
  7534  006532  35CA               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7535  006534  0101               	movlb	1	; () banked
  7536  006536  37D3               	rlcf	??___ftmul& (0+255),f,b
  7537  006538  E301               	bnc	u15361
  7538  00653A  81D4               	bsf	(??___ftmul+1)& (0+255),0,b
  7539  00653C                     u15361:
  7540  00653C  0101               	movlb	1	; () banked
  7541  00653E  51D3               	movf	??___ftmul& (0+255),w,b
  7542  006540  0101               	movlb	1	; () banked
  7543  006542  6FD6               	movwf	___ftmul@exp& (0+255),b
  7544  006544  0101               	movlb	1	; () banked
  7545  006546  51D6               	movf	___ftmul@exp& (0+255),w,b
  7546  006548  A4D8               	btfss	status,2,c
  7547  00654A  D00A               	goto	l13222
  7548                           
  7549                           ; BSR set to: 1
  7550  00654C  0E00               	movlw	0
  7551  00654E  0100               	movlb	0	; () banked
  7552  006550  6FC9               	movwf	?___ftmul& (0+255),b
  7553  006552  0E00               	movlw	0
  7554  006554  0100               	movlb	0	; () banked
  7555  006556  6FCA               	movwf	(?___ftmul+1)& (0+255),b
  7556  006558  0E00               	movlw	0
  7557  00655A  0100               	movlb	0	; () banked
  7558  00655C  6FCB               	movwf	(?___ftmul+2)& (0+255),b
  7559                           
  7560                           ; BSR set to: 0
  7561  00655E  0012               	return	
  7562  006560                     l13222:
  7563  006560  C0CE  F1D3         	movff	___ftmul@f2+2,??___ftmul
  7564  006564  0101               	movlb	1	; () banked
  7565  006566  6BD4               	clrf	(??___ftmul+1)& (0+255),b
  7566  006568  6BD5               	clrf	(??___ftmul+2)& (0+255),b
  7567  00656A  0100               	movlb	0	; () banked
  7568  00656C  35CD               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7569  00656E  0101               	movlb	1	; () banked
  7570  006570  37D3               	rlcf	??___ftmul& (0+255),f,b
  7571  006572  E301               	bnc	u15381
  7572  006574  81D4               	bsf	(??___ftmul+1)& (0+255),0,b
  7573  006576                     u15381:
  7574  006576  0101               	movlb	1	; () banked
  7575  006578  51D3               	movf	??___ftmul& (0+255),w,b
  7576  00657A  0101               	movlb	1	; () banked
  7577  00657C  6FDB               	movwf	___ftmul@sign& (0+255),b
  7578  00657E  0101               	movlb	1	; () banked
  7579  006580  51DB               	movf	___ftmul@sign& (0+255),w,b
  7580  006582  A4D8               	btfss	status,2,c
  7581  006584  D00A               	goto	l13228
  7582                           
  7583                           ; BSR set to: 1
  7584  006586  0E00               	movlw	0
  7585  006588  0100               	movlb	0	; () banked
  7586  00658A  6FC9               	movwf	?___ftmul& (0+255),b
  7587  00658C  0E00               	movlw	0
  7588  00658E  0100               	movlb	0	; () banked
  7589  006590  6FCA               	movwf	(?___ftmul+1)& (0+255),b
  7590  006592  0E00               	movlw	0
  7591  006594  0100               	movlb	0	; () banked
  7592  006596  6FCB               	movwf	(?___ftmul+2)& (0+255),b
  7593                           
  7594                           ; BSR set to: 0
  7595  006598  0012               	return	
  7596  00659A                     l13228:
  7597  00659A  0101               	movlb	1	; () banked
  7598  00659C  51DB               	movf	___ftmul@sign& (0+255),w,b
  7599  00659E  0F7B               	addlw	123
  7600  0065A0  0101               	movlb	1	; () banked
  7601  0065A2  27D6               	addwf	___ftmul@exp& (0+255),f,b
  7602                           
  7603                           ; BSR set to: 1
  7604  0065A4  C0CB  F1DB         	movff	___ftmul@f1+2,___ftmul@sign
  7605  0065A8  0100               	movlb	0	; () banked
  7606  0065AA  51CE               	movf	(___ftmul@f2+2)& (0+255),w,b
  7607  0065AC  0101               	movlb	1	; () banked
  7608  0065AE  1BDB               	xorwf	___ftmul@sign& (0+255),f,b
  7609  0065B0  0E80               	movlw	128
  7610  0065B2  0101               	movlb	1	; () banked
  7611  0065B4  17DB               	andwf	___ftmul@sign& (0+255),f,b
  7612                           
  7613                           ; BSR set to: 1
  7614  0065B6  0100               	movlb	0	; () banked
  7615  0065B8  8FCA               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7616                           
  7617                           ; BSR set to: 0
  7618  0065BA  0100               	movlb	0	; () banked
  7619  0065BC  8FCD               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7620                           
  7621                           ; BSR set to: 0
  7622  0065BE  0EFF               	movlw	255
  7623  0065C0  0100               	movlb	0	; () banked
  7624  0065C2  17CC               	andwf	___ftmul@f2& (0+255),f,b
  7625  0065C4  0EFF               	movlw	255
  7626  0065C6  0100               	movlb	0	; () banked
  7627  0065C8  17CD               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7628  0065CA  0E00               	movlw	0
  7629  0065CC  0100               	movlb	0	; () banked
  7630  0065CE  17CE               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7631                           
  7632                           ; BSR set to: 0
  7633  0065D0  0E00               	movlw	0
  7634  0065D2  0101               	movlb	1	; () banked
  7635  0065D4  6FD7               	movwf	___ftmul@f3_as_product& (0+255),b
  7636  0065D6  0E00               	movlw	0
  7637  0065D8  0101               	movlb	1	; () banked
  7638  0065DA  6FD8               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7639  0065DC  0E00               	movlw	0
  7640  0065DE  0101               	movlb	1	; () banked
  7641  0065E0  6FD9               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7642                           
  7643                           ; BSR set to: 1
  7644  0065E2  0E07               	movlw	7
  7645  0065E4  0101               	movlb	1	; () banked
  7646  0065E6  6FDA               	movwf	___ftmul@cntr& (0+255),b
  7647  0065E8                     l13242:
  7648                           
  7649                           ; BSR set to: 1
  7650  0065E8  0100               	movlb	0	; () banked
  7651  0065EA  A1C9               	btfss	___ftmul@f1& (0+255),0,b
  7652  0065EC  D00C               	goto	l13246
  7653                           
  7654                           ; BSR set to: 0
  7655  0065EE  0100               	movlb	0	; () banked
  7656  0065F0  51CC               	movf	___ftmul@f2& (0+255),w,b
  7657  0065F2  0101               	movlb	1	; () banked
  7658  0065F4  27D7               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7659  0065F6  0100               	movlb	0	; () banked
  7660  0065F8  51CD               	movf	(___ftmul@f2+1)& (0+255),w,b
  7661  0065FA  0101               	movlb	1	; () banked
  7662  0065FC  23D8               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7663  0065FE  0100               	movlb	0	; () banked
  7664  006600  51CE               	movf	(___ftmul@f2+2)& (0+255),w,b
  7665  006602  0101               	movlb	1	; () banked
  7666  006604  23D9               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7667  006606                     l13246:
  7668  006606  0100               	movlb	0	; () banked
  7669  006608  90D8               	bcf	status,0,c
  7670  00660A  33CB               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7671  00660C  33CA               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7672  00660E  33C9               	rrcf	___ftmul@f1& (0+255),f,b
  7673  006610  0100               	movlb	0	; () banked
  7674  006612  90D8               	bcf	status,0,c
  7675  006614  37CC               	rlcf	___ftmul@f2& (0+255),f,b
  7676  006616  37CD               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7677  006618  37CE               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7678                           
  7679                           ; BSR set to: 0
  7680  00661A  0101               	movlb	1	; () banked
  7681  00661C  2FDA               	decfsz	___ftmul@cntr& (0+255),f,b
  7682  00661E  D7E4               	goto	l13242
  7683                           
  7684                           ; BSR set to: 1
  7685                           
  7686                           ; BSR set to: 1
  7687  006620  0E09               	movlw	9
  7688  006622  0101               	movlb	1	; () banked
  7689  006624  6FDA               	movwf	___ftmul@cntr& (0+255),b
  7690  006626                     l13252:
  7691                           
  7692                           ; BSR set to: 1
  7693  006626  0100               	movlb	0	; () banked
  7694  006628  A1C9               	btfss	___ftmul@f1& (0+255),0,b
  7695  00662A  D00C               	goto	l13256
  7696                           
  7697                           ; BSR set to: 0
  7698  00662C  0100               	movlb	0	; () banked
  7699  00662E  51CC               	movf	___ftmul@f2& (0+255),w,b
  7700  006630  0101               	movlb	1	; () banked
  7701  006632  27D7               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7702  006634  0100               	movlb	0	; () banked
  7703  006636  51CD               	movf	(___ftmul@f2+1)& (0+255),w,b
  7704  006638  0101               	movlb	1	; () banked
  7705  00663A  23D8               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7706  00663C  0100               	movlb	0	; () banked
  7707  00663E  51CE               	movf	(___ftmul@f2+2)& (0+255),w,b
  7708  006640  0101               	movlb	1	; () banked
  7709  006642  23D9               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7710  006644                     l13256:
  7711  006644  0100               	movlb	0	; () banked
  7712  006646  90D8               	bcf	status,0,c
  7713  006648  33CB               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7714  00664A  33CA               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7715  00664C  33C9               	rrcf	___ftmul@f1& (0+255),f,b
  7716  00664E  0101               	movlb	1	; () banked
  7717  006650  90D8               	bcf	status,0,c
  7718  006652  33D9               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7719  006654  33D8               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7720  006656  33D7               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7721                           
  7722                           ; BSR set to: 1
  7723  006658  0101               	movlb	1	; () banked
  7724  00665A  2FDA               	decfsz	___ftmul@cntr& (0+255),f,b
  7725  00665C  D7E4               	goto	l13252
  7726                           
  7727                           ; BSR set to: 1
  7728                           
  7729                           ; BSR set to: 1
  7730  00665E  C1D7  F081         	movff	___ftmul@f3_as_product,___ftpack@arg
  7731  006662  C1D8  F082         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7732  006666  C1D9  F083         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7733  00666A  C1D6  F084         	movff	___ftmul@exp,___ftpack@exp
  7734  00666E  C1DB  F085         	movff	___ftmul@sign,___ftpack@sign
  7735  006672  EC57  F039         	call	___ftpack	;wreg free
  7736  006676  C081  F0C9         	movff	?___ftpack,?___ftmul
  7737  00667A  C082  F0CA         	movff	?___ftpack+1,?___ftmul+1
  7738  00667E  C083  F0CB         	movff	?___ftpack+2,?___ftmul+2
  7739  006682  0012               	return	
  7740  006684                     __end_of___ftmul:
  7741                           	opt stack 0
  7742                           tblptru	equ	0xFF8
  7743                           tblptrh	equ	0xFF7
  7744                           tblptrl	equ	0xFF6
  7745                           tablat	equ	0xFF5
  7746                           prodh	equ	0xFF4
  7747                           prodl	equ	0xFF3
  7748                           postinc0	equ	0xFEE
  7749                           plusw0	equ	0xFEB
  7750                           wreg	equ	0xFE8
  7751                           indf1	equ	0xFE7
  7752                           fsr1h	equ	0xFE2
  7753                           fsr1l	equ	0xFE1
  7754                           indf2	equ	0xFDF
  7755                           postinc2	equ	0xFDE
  7756                           postdec2	equ	0xFDD
  7757                           plusw2	equ	0xFDB
  7758                           fsr2h	equ	0xFDA
  7759                           fsr2l	equ	0xFD9
  7760                           status	equ	0xFD8
  7761                           
  7762 ;; *************** function ___ftdiv *****************
  7763 ;; Defined at:
  7764 ;;		line 54 in file "/opt/microchip/xc8/v1.35/sources/common/ftdiv.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  f1              3   54[BANK0 ] float 
  7767 ;;  f2              3   57[BANK0 ] float 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;  f3              3   64[BANK0 ] float 
  7770 ;;  sign            1   68[BANK0 ] unsigned char 
  7771 ;;  exp             1   67[BANK0 ] unsigned char 
  7772 ;;  cntr            1   63[BANK0 ] unsigned char 
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  3   54[BANK0 ] float 
  7775 ;; Registers used:
  7776 ;;		wreg, status,2, status,0, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7782 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7785 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7786 ;;Total ram usage:       15 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:    8
  7789 ;; This function calls:
  7790 ;;		___ftpack
  7791 ;; This function is called by:
  7792 ;;		_read_sensors
  7793 ;;		_send_initial_update
  7794 ;;		_send_periodical_update
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text18
  7799  006928                     __ptext18:
  7800                           	opt stack 0
  7801  006928                     ___ftdiv:
  7802                           	opt stack 21
  7803                           
  7804                           ;incstack = 0
  7805  006928  C098  F09C         	movff	___ftdiv@f1+2,??___ftdiv
  7806  00692C  0100               	movlb	0	; () banked
  7807  00692E  6B9D               	clrf	(??___ftdiv+1)& (0+255),b
  7808  006930  6B9E               	clrf	(??___ftdiv+2)& (0+255),b
  7809  006932  0100               	movlb	0	; () banked
  7810  006934  3597               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  7811  006936  0100               	movlb	0	; () banked
  7812  006938  379C               	rlcf	??___ftdiv& (0+255),f,b
  7813  00693A  E301               	bnc	u15311
  7814  00693C  819D               	bsf	(??___ftdiv+1)& (0+255),0,b
  7815  00693E                     u15311:
  7816  00693E  0100               	movlb	0	; () banked
  7817  006940  519C               	movf	??___ftdiv& (0+255),w,b
  7818  006942  0100               	movlb	0	; () banked
  7819  006944  6FA3               	movwf	___ftdiv@exp& (0+255),b
  7820  006946  0100               	movlb	0	; () banked
  7821  006948  51A3               	movf	___ftdiv@exp& (0+255),w,b
  7822  00694A  A4D8               	btfss	status,2,c
  7823  00694C  D00A               	goto	l13176
  7824                           
  7825                           ; BSR set to: 0
  7826  00694E  0E00               	movlw	0
  7827  006950  0100               	movlb	0	; () banked
  7828  006952  6F96               	movwf	?___ftdiv& (0+255),b
  7829  006954  0E00               	movlw	0
  7830  006956  0100               	movlb	0	; () banked
  7831  006958  6F97               	movwf	(?___ftdiv+1)& (0+255),b
  7832  00695A  0E00               	movlw	0
  7833  00695C  0100               	movlb	0	; () banked
  7834  00695E  6F98               	movwf	(?___ftdiv+2)& (0+255),b
  7835                           
  7836                           ; BSR set to: 0
  7837  006960  0012               	return	
  7838  006962                     l13176:
  7839                           
  7840                           ; BSR set to: 0
  7841  006962  C09B  F09C         	movff	___ftdiv@f2+2,??___ftdiv
  7842  006966  0100               	movlb	0	; () banked
  7843  006968  6B9D               	clrf	(??___ftdiv+1)& (0+255),b
  7844  00696A  6B9E               	clrf	(??___ftdiv+2)& (0+255),b
  7845  00696C  0100               	movlb	0	; () banked
  7846  00696E  359A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  7847  006970  0100               	movlb	0	; () banked
  7848  006972  379C               	rlcf	??___ftdiv& (0+255),f,b
  7849  006974  E301               	bnc	u15331
  7850  006976  819D               	bsf	(??___ftdiv+1)& (0+255),0,b
  7851  006978                     u15331:
  7852  006978  0100               	movlb	0	; () banked
  7853  00697A  519C               	movf	??___ftdiv& (0+255),w,b
  7854  00697C  0100               	movlb	0	; () banked
  7855  00697E  6FA4               	movwf	___ftdiv@sign& (0+255),b
  7856  006980  0100               	movlb	0	; () banked
  7857  006982  51A4               	movf	___ftdiv@sign& (0+255),w,b
  7858  006984  A4D8               	btfss	status,2,c
  7859  006986  D00A               	goto	l13182
  7860                           
  7861                           ; BSR set to: 0
  7862  006988  0E00               	movlw	0
  7863  00698A  0100               	movlb	0	; () banked
  7864  00698C  6F96               	movwf	?___ftdiv& (0+255),b
  7865  00698E  0E00               	movlw	0
  7866  006990  0100               	movlb	0	; () banked
  7867  006992  6F97               	movwf	(?___ftdiv+1)& (0+255),b
  7868  006994  0E00               	movlw	0
  7869  006996  0100               	movlb	0	; () banked
  7870  006998  6F98               	movwf	(?___ftdiv+2)& (0+255),b
  7871                           
  7872                           ; BSR set to: 0
  7873  00699A  0012               	return	
  7874  00699C                     l13182:
  7875                           
  7876                           ; BSR set to: 0
  7877  00699C  0E00               	movlw	0
  7878  00699E  0100               	movlb	0	; () banked
  7879  0069A0  6FA0               	movwf	___ftdiv@f3& (0+255),b
  7880  0069A2  0E00               	movlw	0
  7881  0069A4  0100               	movlb	0	; () banked
  7882  0069A6  6FA1               	movwf	(___ftdiv@f3+1)& (0+255),b
  7883  0069A8  0E00               	movlw	0
  7884  0069AA  0100               	movlb	0	; () banked
  7885  0069AC  6FA2               	movwf	(___ftdiv@f3+2)& (0+255),b
  7886                           
  7887                           ; BSR set to: 0
  7888  0069AE  0100               	movlb	0	; () banked
  7889  0069B0  51A4               	movf	___ftdiv@sign& (0+255),w,b
  7890  0069B2  0F89               	addlw	137
  7891  0069B4  0100               	movlb	0	; () banked
  7892  0069B6  5FA3               	subwf	___ftdiv@exp& (0+255),f,b
  7893                           
  7894                           ; BSR set to: 0
  7895  0069B8  C098  F0A4         	movff	___ftdiv@f1+2,___ftdiv@sign
  7896                           
  7897                           ; BSR set to: 0
  7898  0069BC  0100               	movlb	0	; () banked
  7899  0069BE  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7900  0069C0  0100               	movlb	0	; () banked
  7901  0069C2  1BA4               	xorwf	___ftdiv@sign& (0+255),f,b
  7902                           
  7903                           ; BSR set to: 0
  7904  0069C4  0E80               	movlw	128
  7905  0069C6  0100               	movlb	0	; () banked
  7906  0069C8  17A4               	andwf	___ftdiv@sign& (0+255),f,b
  7907                           
  7908                           ; BSR set to: 0
  7909  0069CA  0100               	movlb	0	; () banked
  7910  0069CC  8F97               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  7911                           
  7912                           ; BSR set to: 0
  7913  0069CE  0EFF               	movlw	255
  7914  0069D0  0100               	movlb	0	; () banked
  7915  0069D2  1796               	andwf	___ftdiv@f1& (0+255),f,b
  7916  0069D4  0EFF               	movlw	255
  7917  0069D6  0100               	movlb	0	; () banked
  7918  0069D8  1797               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  7919  0069DA  0E00               	movlw	0
  7920  0069DC  0100               	movlb	0	; () banked
  7921  0069DE  1798               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  7922                           
  7923                           ; BSR set to: 0
  7924  0069E0  0100               	movlb	0	; () banked
  7925  0069E2  8F9A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  7926                           
  7927                           ; BSR set to: 0
  7928  0069E4  0EFF               	movlw	255
  7929  0069E6  0100               	movlb	0	; () banked
  7930  0069E8  1799               	andwf	___ftdiv@f2& (0+255),f,b
  7931  0069EA  0EFF               	movlw	255
  7932  0069EC  0100               	movlb	0	; () banked
  7933  0069EE  179A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  7934  0069F0  0E00               	movlw	0
  7935  0069F2  0100               	movlb	0	; () banked
  7936  0069F4  179B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  7937                           
  7938                           ; BSR set to: 0
  7939  0069F6  0E18               	movlw	24
  7940  0069F8  0100               	movlb	0	; () banked
  7941  0069FA  6F9F               	movwf	___ftdiv@cntr& (0+255),b
  7942  0069FC                     l13202:
  7943                           
  7944                           ; BSR set to: 0
  7945  0069FC  0100               	movlb	0	; () banked
  7946  0069FE  90D8               	bcf	status,0,c
  7947  006A00  37A0               	rlcf	___ftdiv@f3& (0+255),f,b
  7948  006A02  37A1               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  7949  006A04  37A2               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  7950                           
  7951                           ; BSR set to: 0
  7952  006A06  0100               	movlb	0	; () banked
  7953  006A08  5199               	movf	___ftdiv@f2& (0+255),w,b
  7954  006A0A  0100               	movlb	0	; () banked
  7955  006A0C  5D96               	subwf	___ftdiv@f1& (0+255),w,b
  7956  006A0E  0100               	movlb	0	; () banked
  7957  006A10  519A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7958  006A12  0100               	movlb	0	; () banked
  7959  006A14  5997               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  7960  006A16  0100               	movlb	0	; () banked
  7961  006A18  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7962  006A1A  0100               	movlb	0	; () banked
  7963  006A1C  5998               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  7964  006A1E  A0D8               	btfss	status,0,c
  7965  006A20  D00E               	goto	l1767
  7966                           
  7967                           ; BSR set to: 0
  7968  006A22  0100               	movlb	0	; () banked
  7969  006A24  5199               	movf	___ftdiv@f2& (0+255),w,b
  7970  006A26  0100               	movlb	0	; () banked
  7971  006A28  5F96               	subwf	___ftdiv@f1& (0+255),f,b
  7972  006A2A  0100               	movlb	0	; () banked
  7973  006A2C  519A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7974  006A2E  0100               	movlb	0	; () banked
  7975  006A30  5B97               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  7976  006A32  0100               	movlb	0	; () banked
  7977  006A34  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7978  006A36  0100               	movlb	0	; () banked
  7979  006A38  5B98               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  7980                           
  7981                           ; BSR set to: 0
  7982  006A3A  0100               	movlb	0	; () banked
  7983  006A3C  81A0               	bsf	___ftdiv@f3& (0+255),0,b
  7984  006A3E                     l1767:
  7985                           
  7986                           ; BSR set to: 0
  7987  006A3E  0100               	movlb	0	; () banked
  7988  006A40  90D8               	bcf	status,0,c
  7989  006A42  3796               	rlcf	___ftdiv@f1& (0+255),f,b
  7990  006A44  3797               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  7991  006A46  3798               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  7992                           
  7993                           ; BSR set to: 0
  7994  006A48  0100               	movlb	0	; () banked
  7995  006A4A  2F9F               	decfsz	___ftdiv@cntr& (0+255),f,b
  7996  006A4C  D7D7               	goto	l13202
  7997                           
  7998                           ; BSR set to: 0
  7999                           
  8000                           ; BSR set to: 0
  8001  006A4E  C0A0  F081         	movff	___ftdiv@f3,___ftpack@arg
  8002  006A52  C0A1  F082         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8003  006A56  C0A2  F083         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8004  006A5A  C0A3  F084         	movff	___ftdiv@exp,___ftpack@exp
  8005  006A5E  C0A4  F085         	movff	___ftdiv@sign,___ftpack@sign
  8006  006A62  EC57  F039         	call	___ftpack	;wreg free
  8007  006A66  C081  F096         	movff	?___ftpack,?___ftdiv
  8008  006A6A  C082  F097         	movff	?___ftpack+1,?___ftdiv+1
  8009  006A6E  C083  F098         	movff	?___ftpack+2,?___ftdiv+2
  8010  006A72  0012               	return	
  8011  006A74                     __end_of___ftdiv:
  8012                           	opt stack 0
  8013                           tblptru	equ	0xFF8
  8014                           tblptrh	equ	0xFF7
  8015                           tblptrl	equ	0xFF6
  8016                           tablat	equ	0xFF5
  8017                           prodh	equ	0xFF4
  8018                           prodl	equ	0xFF3
  8019                           postinc0	equ	0xFEE
  8020                           plusw0	equ	0xFEB
  8021                           wreg	equ	0xFE8
  8022                           indf1	equ	0xFE7
  8023                           fsr1h	equ	0xFE2
  8024                           fsr1l	equ	0xFE1
  8025                           indf2	equ	0xFDF
  8026                           postinc2	equ	0xFDE
  8027                           postdec2	equ	0xFDD
  8028                           plusw2	equ	0xFDB
  8029                           fsr2h	equ	0xFDA
  8030                           fsr2l	equ	0xFD9
  8031                           status	equ	0xFD8
  8032                           
  8033 ;; *************** function ___ftpack *****************
  8034 ;; Defined at:
  8035 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/float.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  arg             3   33[BANK0 ] unsigned um
  8038 ;;  exp             1   36[BANK0 ] unsigned char 
  8039 ;;  sign            1   37[BANK0 ] unsigned char 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  3   33[BANK0 ] float 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8051 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8053 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8054 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8055 ;;Total ram usage:        8 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:    7
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		___altoft
  8062 ;;		___ftadd
  8063 ;;		___ftdiv
  8064 ;;		___ftmul
  8065 ;;		___lltoft
  8066 ;;		___lwtoft
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text19
  8071  0072AE                     __ptext19:
  8072                           	opt stack 0
  8073  0072AE                     ___ftpack:
  8074                           	opt stack 20
  8075                           
  8076                           ;incstack = 0
  8077  0072AE  0100               	movlb	0	; () banked
  8078  0072B0  5184               	movf	___ftpack@exp& (0+255),w,b
  8079  0072B2  0100               	movlb	0	; () banked
  8080  0072B4  B4D8               	btfsc	status,2,c
  8081  0072B6  D008               	goto	l12148
  8082                           
  8083                           ; BSR set to: 0
  8084  0072B8  0100               	movlb	0	; () banked
  8085  0072BA  5181               	movf	___ftpack@arg& (0+255),w,b
  8086  0072BC  0100               	movlb	0	; () banked
  8087  0072BE  1182               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  8088  0072C0  0100               	movlb	0	; () banked
  8089  0072C2  1183               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  8090  0072C4  A4D8               	btfss	status,2,c
  8091  0072C6  D011               	goto	l12154
  8092  0072C8                     l12148:
  8093                           
  8094                           ; BSR set to: 0
  8095  0072C8  0E00               	movlw	0
  8096  0072CA  0100               	movlb	0	; () banked
  8097  0072CC  6F81               	movwf	?___ftpack& (0+255),b
  8098  0072CE  0E00               	movlw	0
  8099  0072D0  0100               	movlb	0	; () banked
  8100  0072D2  6F82               	movwf	(?___ftpack+1)& (0+255),b
  8101  0072D4  0E00               	movlw	0
  8102  0072D6  0100               	movlb	0	; () banked
  8103  0072D8  6F83               	movwf	(?___ftpack+2)& (0+255),b
  8104                           
  8105                           ; BSR set to: 0
  8106  0072DA  0012               	return	
  8107  0072DC                     l12152:
  8108                           
  8109                           ; BSR set to: 0
  8110  0072DC  0100               	movlb	0	; () banked
  8111  0072DE  2B84               	incf	___ftpack@exp& (0+255),f,b
  8112  0072E0  0100               	movlb	0	; () banked
  8113  0072E2  90D8               	bcf	status,0,c
  8114  0072E4  3383               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8115  0072E6  3382               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8116  0072E8  3381               	rrcf	___ftpack@arg& (0+255),f,b
  8117  0072EA                     l12154:
  8118                           
  8119                           ; BSR set to: 0
  8120  0072EA  0E00               	movlw	0
  8121  0072EC  0100               	movlb	0	; () banked
  8122  0072EE  1581               	andwf	___ftpack@arg& (0+255),w,b
  8123  0072F0  0100               	movlb	0	; () banked
  8124  0072F2  6F86               	movwf	??___ftpack& (0+255),b
  8125  0072F4  0E00               	movlw	0
  8126  0072F6  0100               	movlb	0	; () banked
  8127  0072F8  1582               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8128  0072FA  0100               	movlb	0	; () banked
  8129  0072FC  6F87               	movwf	(??___ftpack+1)& (0+255),b
  8130  0072FE  0EFE               	movlw	254
  8131  007300  0100               	movlb	0	; () banked
  8132  007302  1583               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8133  007304  0100               	movlb	0	; () banked
  8134  007306  6F88               	movwf	(??___ftpack+2)& (0+255),b
  8135  007308  0100               	movlb	0	; () banked
  8136  00730A  5186               	movf	??___ftpack& (0+255),w,b
  8137  00730C  0100               	movlb	0	; () banked
  8138  00730E  1187               	iorwf	(??___ftpack+1)& (0+255),w,b
  8139  007310  0100               	movlb	0	; () banked
  8140  007312  1188               	iorwf	(??___ftpack+2)& (0+255),w,b
  8141  007314  B4D8               	btfsc	status,2,c
  8142  007316  D011               	goto	l12160
  8143  007318  D7E1               	goto	l12152
  8144  00731A                     l12156:
  8145                           
  8146                           ; BSR set to: 0
  8147  00731A  0100               	movlb	0	; () banked
  8148  00731C  2B84               	incf	___ftpack@exp& (0+255),f,b
  8149                           
  8150                           ; BSR set to: 0
  8151  00731E  0E01               	movlw	1
  8152  007320  0100               	movlb	0	; () banked
  8153  007322  2781               	addwf	___ftpack@arg& (0+255),f,b
  8154  007324  0E00               	movlw	0
  8155  007326  0100               	movlb	0	; () banked
  8156  007328  2382               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  8157  00732A  0E00               	movlw	0
  8158  00732C  0100               	movlb	0	; () banked
  8159  00732E  2383               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  8160  007330  0100               	movlb	0	; () banked
  8161  007332  90D8               	bcf	status,0,c
  8162  007334  3383               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8163  007336  3382               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8164  007338  3381               	rrcf	___ftpack@arg& (0+255),f,b
  8165  00733A                     l12160:
  8166                           
  8167                           ; BSR set to: 0
  8168  00733A  0E00               	movlw	0
  8169  00733C  0100               	movlb	0	; () banked
  8170  00733E  1581               	andwf	___ftpack@arg& (0+255),w,b
  8171  007340  0100               	movlb	0	; () banked
  8172  007342  6F86               	movwf	??___ftpack& (0+255),b
  8173  007344  0E00               	movlw	0
  8174  007346  0100               	movlb	0	; () banked
  8175  007348  1582               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8176  00734A  0100               	movlb	0	; () banked
  8177  00734C  6F87               	movwf	(??___ftpack+1)& (0+255),b
  8178  00734E  0EFF               	movlw	255
  8179  007350  0100               	movlb	0	; () banked
  8180  007352  1583               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8181  007354  0100               	movlb	0	; () banked
  8182  007356  6F88               	movwf	(??___ftpack+2)& (0+255),b
  8183  007358  0100               	movlb	0	; () banked
  8184  00735A  5186               	movf	??___ftpack& (0+255),w,b
  8185  00735C  0100               	movlb	0	; () banked
  8186  00735E  1187               	iorwf	(??___ftpack+1)& (0+255),w,b
  8187  007360  0100               	movlb	0	; () banked
  8188  007362  1188               	iorwf	(??___ftpack+2)& (0+255),w,b
  8189  007364  B4D8               	btfsc	status,2,c
  8190  007366  D008               	goto	l12164
  8191  007368  D7D8               	goto	l12156
  8192  00736A                     l12162:
  8193                           
  8194                           ; BSR set to: 0
  8195  00736A  0100               	movlb	0	; () banked
  8196  00736C  0784               	decf	___ftpack@exp& (0+255),f,b
  8197  00736E  0100               	movlb	0	; () banked
  8198  007370  90D8               	bcf	status,0,c
  8199  007372  3781               	rlcf	___ftpack@arg& (0+255),f,b
  8200  007374  3782               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  8201  007376  3783               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  8202  007378                     l12164:
  8203                           
  8204                           ; BSR set to: 0
  8205  007378  0100               	movlb	0	; () banked
  8206  00737A  BF82               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  8207  00737C  D004               	goto	l1684
  8208                           
  8209                           ; BSR set to: 0
  8210  00737E  0E02               	movlw	2
  8211  007380  0100               	movlb	0	; () banked
  8212  007382  6184               	cpfslt	___ftpack@exp& (0+255),b
  8213  007384  D7F2               	goto	l12162
  8214  007386                     l1684:
  8215                           
  8216                           ; BSR set to: 0
  8217  007386  0100               	movlb	0	; () banked
  8218  007388  B184               	btfsc	___ftpack@exp& (0+255),0,b
  8219  00738A  D002               	goto	l12170
  8220                           
  8221                           ; BSR set to: 0
  8222  00738C  0100               	movlb	0	; () banked
  8223  00738E  9F82               	bcf	(___ftpack@arg+1)& (0+255),7,b
  8224  007390                     l12170:
  8225                           
  8226                           ; BSR set to: 0
  8227  007390  0100               	movlb	0	; () banked
  8228  007392  90D8               	bcf	status,0,c
  8229  007394  3384               	rrcf	___ftpack@exp& (0+255),f,b
  8230  007396  0100               	movlb	0	; () banked
  8231  007398  5184               	movf	___ftpack@exp& (0+255),w,b
  8232  00739A  0100               	movlb	0	; () banked
  8233  00739C  1383               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  8234                           
  8235                           ; BSR set to: 0
  8236  00739E  0100               	movlb	0	; () banked
  8237  0073A0  5185               	movf	___ftpack@sign& (0+255),w,b
  8238  0073A2  0100               	movlb	0	; () banked
  8239  0073A4  B4D8               	btfsc	status,2,c
  8240  0073A6  D002               	goto	l12176
  8241                           
  8242                           ; BSR set to: 0
  8243  0073A8  0100               	movlb	0	; () banked
  8244  0073AA  8F83               	bsf	(___ftpack@arg+2)& (0+255),7,b
  8245  0073AC                     l12176:
  8246                           
  8247                           ; BSR set to: 0
  8248  0073AC  C081  F081         	movff	___ftpack@arg,?___ftpack
  8249  0073B0  C082  F082         	movff	___ftpack@arg+1,?___ftpack+1
  8250  0073B4  C083  F083         	movff	___ftpack@arg+2,?___ftpack+2
  8251  0073B8  0012               	return	
  8252  0073BA                     __end_of___ftpack:
  8253                           	opt stack 0
  8254                           tblptru	equ	0xFF8
  8255                           tblptrh	equ	0xFF7
  8256                           tblptrl	equ	0xFF6
  8257                           tablat	equ	0xFF5
  8258                           prodh	equ	0xFF4
  8259                           prodl	equ	0xFF3
  8260                           postinc0	equ	0xFEE
  8261                           plusw0	equ	0xFEB
  8262                           wreg	equ	0xFE8
  8263                           indf1	equ	0xFE7
  8264                           fsr1h	equ	0xFE2
  8265                           fsr1l	equ	0xFE1
  8266                           indf2	equ	0xFDF
  8267                           postinc2	equ	0xFDE
  8268                           postdec2	equ	0xFDD
  8269                           plusw2	equ	0xFDB
  8270                           fsr2h	equ	0xFDA
  8271                           fsr2l	equ	0xFD9
  8272                           status	equ	0xFD8
  8273                           
  8274 ;; *************** function _WriteI2C1 *****************
  8275 ;; Defined at:
  8276 ;;		line 12 in file "/opt/microchip/xc8/v1.35/sources/pic18/plib/i2c/i2c1writ.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;  data_out        1    wreg     unsigned char 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  data_out        1   34[BANK0 ] unsigned char 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      char 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8293 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8294 ;;Total ram usage:        2 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    7
  8297 ;; This function calls:
  8298 ;;		Nothing
  8299 ;; This function is called by:
  8300 ;;		_read_sensors
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text20
  8305  008590                     __ptext20:
  8306                           	opt stack 0
  8307  008590                     _WriteI2C1:
  8308                           	opt stack 22
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;incstack = 0
  8312                           ;WriteI2C1@data_out stored from wreg
  8313  008590  0100               	movlb	0	; () banked
  8314  008592  6F82               	movwf	WriteI2C1@data_out& (0+255),b
  8315  008594  C082  FFC9         	movff	WriteI2C1@data_out,4041	;volatile
  8316  008598  BEC6               	btfsc	4038,7,c	;volatile
  8317  00859A  0012               	return	
  8318                           
  8319                           ;	Return value of _WriteI2C1 is never used
  8320  00859C  50C6               	movf	4038,w,c	;volatile
  8321  00859E  0B0F               	andlw	15
  8322  0085A0  0A08               	xorlw	8
  8323  0085A2  B4D8               	btfsc	status,2,c
  8324  0085A4  D00C               	goto	l12992
  8325  0085A6  50C6               	movf	4038,w,c	;volatile
  8326  0085A8  0B0F               	andlw	15
  8327  0085AA  0A0B               	xorlw	11
  8328  0085AC  B4D8               	btfsc	status,2,c
  8329  0085AE  D007               	goto	l12992
  8330  0085B0  88C6               	bsf	4038,4,c	;volatile
  8331  0085B2                     l1434:
  8332  0085B2  A69E               	btfss	3998,3,c	;volatile
  8333  0085B4  D7FE               	goto	l1434
  8334  0085B6  B4C7               	btfsc	4039,2,c	;volatile
  8335  0085B8  0012               	return	
  8336  0085BA  50C7               	movf	4039,w,c	;volatile
  8337                           
  8338                           ;	Return value of _WriteI2C1 is never used
  8339                           
  8340                           ;	Return value of _WriteI2C1 is never used
  8341  0085BC  0012               	return	
  8342  0085BE                     l12992:
  8343  0085BE  50C6               	movf	4038,w,c	;volatile
  8344  0085C0  0B0F               	andlw	15
  8345  0085C2  0A08               	xorlw	8
  8346  0085C4  B4D8               	btfsc	status,2,c
  8347  0085C6  D005               	goto	l1443
  8348  0085C8  50C6               	movf	4038,w,c	;volatile
  8349  0085CA  0B0F               	andlw	15
  8350  0085CC  0A0B               	xorlw	11
  8351  0085CE  A4D8               	btfss	status,2,c
  8352  0085D0  0012               	return	
  8353  0085D2                     l1443:
  8354  0085D2  B0C7               	btfsc	4039,0,c	;volatile
  8355  0085D4  D7FE               	goto	l1443
  8356  0085D6                     l12996:
  8357  0085D6  A4C7               	btfss	4039,2,c	;volatile
  8358  0085D8  D004               	goto	u15110
  8359  0085DA  0100               	movlb	0	; () banked
  8360  0085DC  6B81               	clrf	??_WriteI2C1& (0+255),b
  8361  0085DE  2B81               	incf	??_WriteI2C1& (0+255),f,b
  8362  0085E0  D002               	goto	u15118
  8363  0085E2                     u15110:
  8364  0085E2  0100               	movlb	0	; () banked
  8365  0085E4  6B81               	clrf	??_WriteI2C1& (0+255),b
  8366  0085E6                     u15118:
  8367  0085E6  50C5               	movf	4037,w,c	;volatile
  8368  0085E8  0B1F               	andlw	31
  8369  0085EA  0100               	movlb	0	; () banked
  8370  0085EC  1181               	iorwf	??_WriteI2C1& (0+255),w,b
  8371  0085EE  0900               	iorlw	0
  8372  0085F0  A4D8               	btfss	status,2,c
  8373  0085F2  D7F1               	goto	l12996
  8374                           
  8375                           ; BSR set to: 0
  8376  0085F4  50C5               	movf	4037,w,c	;volatile
  8377                           
  8378                           ; BSR set to: 0
  8379                           
  8380                           ; BSR set to: 0
  8381                           
  8382                           ; BSR set to: 0
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;	Return value of _WriteI2C1 is never used
  8386                           
  8387                           ; BSR set to: 0
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;	Return value of _WriteI2C1 is never used
  8391  0085F6  0012               	return	
  8392  0085F8                     __end_of_WriteI2C1:
  8393                           	opt stack 0
  8394                           tblptru	equ	0xFF8
  8395                           tblptrh	equ	0xFF7
  8396                           tblptrl	equ	0xFF6
  8397                           tablat	equ	0xFF5
  8398                           prodh	equ	0xFF4
  8399                           prodl	equ	0xFF3
  8400                           postinc0	equ	0xFEE
  8401                           plusw0	equ	0xFEB
  8402                           wreg	equ	0xFE8
  8403                           indf1	equ	0xFE7
  8404                           fsr1h	equ	0xFE2
  8405                           fsr1l	equ	0xFE1
  8406                           indf2	equ	0xFDF
  8407                           postinc2	equ	0xFDE
  8408                           postdec2	equ	0xFDD
  8409                           plusw2	equ	0xFDB
  8410                           fsr2h	equ	0xFDA
  8411                           fsr2l	equ	0xFD9
  8412                           status	equ	0xFD8
  8413                           
  8414 ;; *************** function _ReadI2C1 *****************
  8415 ;; Defined at:
  8416 ;;		line 11 in file "/opt/microchip/xc8/v1.35/sources/pic18/plib/i2c/i2c1read.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;		None
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;		None
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  1    wreg      unsigned char 
  8423 ;; Registers used:
  8424 ;;		wreg, status,2, status,0
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8434 ;;Total ram usage:        0 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; Hardware stack levels required when called:    7
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		_read_sensors
  8441 ;; This function uses a non-reentrant model
  8442 ;;
  8443                           
  8444                           	psect	text21
  8445  008B7A                     __ptext21:
  8446                           	opt stack 0
  8447  008B7A                     _ReadI2C1:
  8448                           	opt stack 22
  8449                           
  8450                           ;incstack = 0
  8451  008B7A  50C6               	movf	4038,w,c	;volatile
  8452  008B7C  0B0F               	andlw	15
  8453  008B7E  0A08               	xorlw	8
  8454  008B80  B4D8               	btfsc	status,2,c
  8455  008B82  D004               	goto	l1409
  8456  008B84  50C6               	movf	4038,w,c	;volatile
  8457  008B86  0B0F               	andlw	15
  8458  008B88  0A0B               	xorlw	11
  8459  008B8A  B4D8               	btfsc	status,2,c
  8460  008B8C                     l1409:
  8461  008B8C  86C5               	bsf	4037,3,c	;volatile
  8462  008B8E                     l1410:
  8463  008B8E  A0C7               	btfss	4039,0,c	;volatile
  8464  008B90  D7FE               	goto	l1410
  8465  008B92  50C9               	movf	4041,w,c	;volatile
  8466  008B94  0012               	return	
  8467  008B96                     __end_of_ReadI2C1:
  8468                           	opt stack 0
  8469                           tblptru	equ	0xFF8
  8470                           tblptrh	equ	0xFF7
  8471                           tblptrl	equ	0xFF6
  8472                           tablat	equ	0xFF5
  8473                           prodh	equ	0xFF4
  8474                           prodl	equ	0xFF3
  8475                           postinc0	equ	0xFEE
  8476                           plusw0	equ	0xFEB
  8477                           wreg	equ	0xFE8
  8478                           indf1	equ	0xFE7
  8479                           fsr1h	equ	0xFE2
  8480                           fsr1l	equ	0xFE1
  8481                           indf2	equ	0xFDF
  8482                           postinc2	equ	0xFDE
  8483                           postdec2	equ	0xFDD
  8484                           plusw2	equ	0xFDB
  8485                           fsr2h	equ	0xFDA
  8486                           fsr2l	equ	0xFD9
  8487                           status	equ	0xFD8
  8488                           
  8489 ;; *************** function _OpenI2C1 *****************
  8490 ;; Defined at:
  8491 ;;		line 29 in file "/opt/microchip/xc8/v1.35/sources/pic18/plib/i2c/i2c1open.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  sync_mode       1    wreg     unsigned char 
  8494 ;;  slew            1   33[BANK0 ] unsigned char 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  sync_mode       1   34[BANK0 ] unsigned char 
  8497 ;; Return value:  Size  Location     Type
  8498 ;;		None               void
  8499 ;; Registers used:
  8500 ;;		wreg, status,2, status,0
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8506 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8507 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8510 ;;Total ram usage:        2 bytes
  8511 ;; Hardware stack levels used:    1
  8512 ;; Hardware stack levels required when called:    7
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_read_sensors
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           	psect	text22
  8521  008B1E                     __ptext22:
  8522                           	opt stack 0
  8523  008B1E                     _OpenI2C1:
  8524                           	opt stack 22
  8525                           
  8526                           ;incstack = 0
  8527                           ;OpenI2C1@sync_mode stored from wreg
  8528  008B1E  0100               	movlb	0	; () banked
  8529  008B20  6F82               	movwf	OpenI2C1@sync_mode& (0+255),b
  8530  008B22  0E3F               	movlw	63
  8531  008B24  16C7               	andwf	4039,f,c	;volatile
  8532  008B26  0E00               	movlw	0
  8533  008B28  6EC6               	movwf	4038,c	;volatile
  8534  008B2A  0E00               	movlw	0
  8535  008B2C  6EC5               	movwf	4037,c	;volatile
  8536  008B2E  0100               	movlb	0	; () banked
  8537  008B30  5182               	movf	OpenI2C1@sync_mode& (0+255),w,b
  8538  008B32  12C6               	iorwf	4038,f,c	;volatile
  8539  008B34  0100               	movlb	0	; () banked
  8540  008B36  5181               	movf	OpenI2C1@slew& (0+255),w,b
  8541  008B38  12C7               	iorwf	4039,f,c	;volatile
  8542                           
  8543                           ; BSR set to: 0
  8544  008B3A  8AC6               	bsf	4038,5,c	;volatile
  8545                           
  8546                           ; BSR set to: 0
  8547  008B3C  0012               	return		;funcret
  8548  008B3E                     __end_of_OpenI2C1:
  8549                           	opt stack 0
  8550                           tblptru	equ	0xFF8
  8551                           tblptrh	equ	0xFF7
  8552                           tblptrl	equ	0xFF6
  8553                           tablat	equ	0xFF5
  8554                           prodh	equ	0xFF4
  8555                           prodl	equ	0xFF3
  8556                           postinc0	equ	0xFEE
  8557                           plusw0	equ	0xFEB
  8558                           wreg	equ	0xFE8
  8559                           indf1	equ	0xFE7
  8560                           fsr1h	equ	0xFE2
  8561                           fsr1l	equ	0xFE1
  8562                           indf2	equ	0xFDF
  8563                           postinc2	equ	0xFDE
  8564                           postdec2	equ	0xFDD
  8565                           plusw2	equ	0xFDB
  8566                           fsr2h	equ	0xFDA
  8567                           fsr2l	equ	0xFD9
  8568                           status	equ	0xFD8
  8569                           
  8570 ;; *************** function _process_update_answer *****************
  8571 ;; Defined at:
  8572 ;;		line 309 in file "src/main.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;		None
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;  ack_required    1   27[BANK2 ] unsigned char 
  8577 ;;  size            1   31[BANK2 ] unsigned char 
  8578 ;;  shortaddress    2   29[BANK2 ] unsigned char [2]
  8579 ;;  i               1   28[BANK2 ] unsigned char 
  8580 ;;  result          1   26[BANK2 ] unsigned char 
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1    wreg      unsigned char 
  8583 ;; Registers used:
  8584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8591 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8592 ;;      Temps:          0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8593 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8594 ;;Total ram usage:       13 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:   17
  8597 ;; This function calls:
  8598 ;;		_MiApp_DiscardMessage
  8599 ;;		_MiApp_MessageAvailable
  8600 ;;		_MiApp_TransceiverPowerState
  8601 ;;		_decode_variable
  8602 ;;		_send_writables_update
  8603 ;;		_timer_reset
  8604 ;;		_update_variable
  8605 ;;		_wait_for_1_sec
  8606 ;; This function is called by:
  8607 ;;		_main
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text23
  8612  005D44                     __ptext23:
  8613                           	opt stack 0
  8614  005D44                     _process_update_answer:
  8615                           	opt stack 13
  8616                           
  8617                           ;main.c: 311: uint8_t shortaddress[2];
  8618                           ;main.c: 312: uint8_t result = 0;
  8619                           
  8620                           ; BSR set to: 0
  8621                           ;incstack = 0
  8622  005D44  0E00               	movlw	0
  8623  005D46  0102               	movlb	2	; () banked
  8624  005D48  6FFA               	movwf	process_update_answer@result& (0+255),b
  8625  005D4A                     l1100:
  8626                           
  8627                           ; BSR set to: 2
  8628                           ;main.c: 319: {
  8629                           ;main.c: 320: for (i=0; i<200; i++)
  8630  005D4A  0E00               	movlw	0
  8631  005D4C  0102               	movlb	2	; () banked
  8632  005D4E  6FFC               	movwf	process_update_answer@i& (0+255),b
  8633  005D50                     l14250:
  8634                           
  8635                           ; BSR set to: 2
  8636  005D50  0EC7               	movlw	199
  8637  005D52  0102               	movlb	2	; () banked
  8638  005D54  65FC               	cpfsgt	process_update_answer@i& (0+255),b
  8639  005D56  D001               	goto	l14254
  8640  005D58  D7F8               	goto	l1100
  8641  005D5A                     l14254:
  8642                           
  8643                           ; BSR set to: 2
  8644                           ;main.c: 321: {
  8645                           ;main.c: 322: _delay((unsigned long)((10)*(8000000/4000.0)));
  8646  005D5A  0E1A               	movlw	26
  8647  005D5C  0102               	movlb	2	; () banked
  8648  005D5E  6FF3               	movwf	??_process_update_answer& (0+255),b
  8649  005D60  0EF8               	movlw	248
  8650  005D62                     u17607:
  8651  005D62  2EE8               	decfsz	wreg,f,c
  8652  005D64  D7FE               	goto	u17607
  8653  005D66  2FF3               	decfsz	??_process_update_answer& (0+255),f,b
  8654  005D68  D7FC               	goto	u17607
  8655  005D6A  D000               	nop2	
  8656                           
  8657                           ;main.c: 323: if(MiApp_MessageAvailable())
  8658  005D6C  EC07  F046         	call	_MiApp_MessageAvailable	;wreg free
  8659  005D70  0900               	iorlw	0
  8660  005D72  B4D8               	btfsc	status,2,c
  8661  005D74  D0C9               	goto	l14324
  8662                           
  8663                           ;main.c: 324: {
  8664                           ;main.c: 325: shortaddress[0] = rxMessage.SourceAddress[0];
  8665  005D76  C12F  FFD9         	movff	_rxMessage+3,fsr2l
  8666  005D7A  C130  FFDA         	movff	_rxMessage+4,fsr2h
  8667  005D7E  50DF               	movf	indf2,w,c
  8668  005D80  0102               	movlb	2	; () banked
  8669  005D82  6FFD               	movwf	process_update_answer@shortaddress& (0+255),b
  8670                           
  8671                           ; BSR set to: 2
  8672                           ;main.c: 326: shortaddress[1] = rxMessage.SourceAddress[1];
  8673  005D84  0101               	movlb	1	; () banked
  8674  005D86  EE20 F001          	lfsr	2,1
  8675  005D8A  512F               	movf	(_rxMessage+3)& (0+255),w,b
  8676  005D8C  26D9               	addwf	fsr2l,f,c
  8677  005D8E  5130               	movf	(_rxMessage+4)& (0+255),w,b
  8678  005D90  22DA               	addwfc	fsr2h,f,c
  8679  005D92  50DF               	movf	indf2,w,c
  8680  005D94  0102               	movlb	2	; () banked
  8681  005D96  6FFE               	movwf	(process_update_answer@shortaddress+1)& (0+255),b
  8682                           
  8683                           ; BSR set to: 2
  8684                           ;main.c: 327: uint8_t size = rxMessage.PayloadSize;
  8685  005D98  C133  F2FF         	movff	_rxMessage+7,process_update_answer@size
  8686                           
  8687                           ;main.c: 328: switch(rxMessage.Payload[0])
  8688  005D9C  D0AC               	goto	l14322
  8689  005D9E                     l14264:
  8690                           
  8691                           ;main.c: 333: if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00) && (size == 2))
  8692  005D9E  0102               	movlb	2	; () banked
  8693  005DA0  51FD               	movf	process_update_answer@shortaddress& (0+255),w,b
  8694  005DA2  0102               	movlb	2	; () banked
  8695  005DA4  A4D8               	btfss	status,2,c
  8696  005DA6  D009               	goto	l14274
  8697                           
  8698                           ; BSR set to: 2
  8699  005DA8  0102               	movlb	2	; () banked
  8700  005DAA  51FE               	movf	(process_update_answer@shortaddress+1)& (0+255),w,b
  8701  005DAC  A4D8               	btfss	status,2,c
  8702  005DAE  D005               	goto	l14274
  8703                           
  8704                           ; BSR set to: 2
  8705  005DB0  0E02               	movlw	2
  8706  005DB2  0102               	movlb	2	; () banked
  8707  005DB4  19FF               	xorwf	process_update_answer@size& (0+255),w,b
  8708  005DB6  B4D8               	btfsc	status,2,c
  8709  005DB8  0012               	return	
  8710  005DBA                     l14274:
  8711                           
  8712                           ; BSR set to: 2
  8713                           ;main.c: 339: else if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00) && (size >
      +                           2))
  8714  005DBA  0102               	movlb	2	; () banked
  8715  005DBC  51FD               	movf	process_update_answer@shortaddress& (0+255),w,b
  8716  005DBE  0102               	movlb	2	; () banked
  8717  005DC0  A4D8               	btfss	status,2,c
  8718  005DC2  D094               	goto	l14320
  8719                           
  8720                           ; BSR set to: 2
  8721  005DC4  0102               	movlb	2	; () banked
  8722  005DC6  51FE               	movf	(process_update_answer@shortaddress+1)& (0+255),w,b
  8723  005DC8  A4D8               	btfss	status,2,c
  8724  005DCA  D090               	goto	l14320
  8725                           
  8726                           ; BSR set to: 2
  8727  005DCC  0E02               	movlw	2
  8728  005DCE  0102               	movlb	2	; () banked
  8729  005DD0  65FF               	cpfsgt	process_update_answer@size& (0+255),b
  8730  005DD2  D08C               	goto	l14320
  8731                           
  8732                           ; BSR set to: 2
  8733                           ;main.c: 340: {
  8734                           ;main.c: 341: bool ack_required = rxMessage.Payload[1];
  8735  005DD4  0101               	movlb	1	; () banked
  8736  005DD6  EE20 F001          	lfsr	2,1
  8737  005DDA  5131               	movf	(_rxMessage+5)& (0+255),w,b
  8738  005DDC  26D9               	addwf	fsr2l,f,c
  8739  005DDE  5132               	movf	(_rxMessage+6)& (0+255),w,b
  8740  005DE0  22DA               	addwfc	fsr2h,f,c
  8741  005DE2  50DF               	movf	indf2,w,c
  8742  005DE4  0102               	movlb	2	; () banked
  8743  005DE6  6FFB               	movwf	process_update_answer@ack_required& (0+255),b
  8744                           
  8745                           ; BSR set to: 2
  8746                           ;main.c: 343: p_buffer = &rxMessage.Payload[2];
  8747  005DE8  0E02               	movlw	2
  8748  005DEA  0101               	movlb	1	; () banked
  8749  005DEC  2531               	addwf	(_rxMessage+5)& (0+255),w,b
  8750  005DEE  0101               	movlb	1	; () banked
  8751  005DF0  6F5C               	movwf	_p_buffer& (0+255),b
  8752  005DF2  0E00               	movlw	0
  8753  005DF4  0101               	movlb	1	; () banked
  8754  005DF6  2132               	addwfc	(_rxMessage+6)& (0+255),w,b
  8755  005DF8  0101               	movlb	1	; () banked
  8756  005DFA  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  8757                           
  8758                           ;main.c: 344: while ((p_buffer - &rxMessage.Payload[2]) < (size - 2))
  8759  005DFC  D018               	goto	l14290
  8760  005DFE                     l14284:
  8761                           
  8762                           ;main.c: 345: {
  8763                           ;main.c: 346: m_var = decode_variable(p_buffer);
  8764  005DFE  C15C  F08B         	movff	_p_buffer,decode_variable@p_buffer
  8765  005E02  C15D  F08C         	movff	_p_buffer+1,decode_variable@p_buffer+1
  8766  005E06  ECDE  F03B         	call	_decode_variable	;wreg free
  8767  005E0A  EE21  F0B7         	lfsr	2,_m_var
  8768  005E0E  0E08               	movlw	8
  8769  005E10                     u16841:
  8770  005E10  CFEB FFDB          	movff	plusw0,plusw2
  8771  005E14  06E8               	decf	wreg,f,c
  8772  005E16  E2FC               	bc	u16841
  8773                           
  8774                           ;main.c: 347: p_buffer += m_var.size;
  8775  005E18  0101               	movlb	1	; () banked
  8776  005E1A  51BF               	movf	(_m_var+8)& (0+255),w,b
  8777  005E1C  0D01               	mullw	1
  8778  005E1E  50F3               	movf	prodl,w,c
  8779  005E20  0101               	movlb	1	; () banked
  8780  005E22  275C               	addwf	_p_buffer& (0+255),f,b
  8781  005E24  50F4               	movf	prodh,w,c
  8782  005E26  0101               	movlb	1	; () banked
  8783  005E28  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  8784                           
  8785                           ; BSR set to: 1
  8786                           ;main.c: 349: update_variable();
  8787  005E2A  EC63  F03B         	call	_update_variable	;wreg free
  8788  005E2E                     l14290:
  8789  005E2E  0EFE               	movlw	254
  8790  005E30  0102               	movlb	2	; () banked
  8791  005E32  6FF3               	movwf	??_process_update_answer& (0+255),b
  8792  005E34  0EFF               	movlw	255
  8793  005E36  0102               	movlb	2	; () banked
  8794  005E38  6FF4               	movwf	(??_process_update_answer+1)& (0+255),b
  8795  005E3A  0102               	movlb	2	; () banked
  8796  005E3C  51FF               	movf	process_update_answer@size& (0+255),w,b
  8797  005E3E  0102               	movlb	2	; () banked
  8798  005E40  6FF5               	movwf	(??_process_update_answer+2)& (0+255),b
  8799  005E42  6BF6               	clrf	(??_process_update_answer+3)& (0+255),b
  8800  005E44  0102               	movlb	2	; () banked
  8801  005E46  51F3               	movf	??_process_update_answer& (0+255),w,b
  8802  005E48  0102               	movlb	2	; () banked
  8803  005E4A  27F5               	addwf	(??_process_update_answer+2)& (0+255),f,b
  8804  005E4C  0102               	movlb	2	; () banked
  8805  005E4E  51F4               	movf	(??_process_update_answer+1)& (0+255),w,b
  8806  005E50  0102               	movlb	2	; () banked
  8807  005E52  23F6               	addwfc	(??_process_update_answer+3)& (0+255),f,b
  8808  005E54  0E02               	movlw	2
  8809  005E56  0101               	movlb	1	; () banked
  8810  005E58  2531               	addwf	(_rxMessage+5)& (0+255),w,b
  8811  005E5A  0102               	movlb	2	; () banked
  8812  005E5C  6FF7               	movwf	(??_process_update_answer+4)& (0+255),b
  8813  005E5E  0E00               	movlw	0
  8814  005E60  0101               	movlb	1	; () banked
  8815  005E62  2132               	addwfc	(_rxMessage+6)& (0+255),w,b
  8816  005E64  0102               	movlb	2	; () banked
  8817  005E66  6FF8               	movwf	(??_process_update_answer+5)& (0+255),b
  8818  005E68  0102               	movlb	2	; () banked
  8819  005E6A  1FF7               	comf	(??_process_update_answer+4)& (0+255),f,b
  8820  005E6C  1FF8               	comf	(??_process_update_answer+5)& (0+255),f,b
  8821  005E6E  4BF7               	infsnz	(??_process_update_answer+4)& (0+255),f,b
  8822  005E70  2BF8               	incf	(??_process_update_answer+5)& (0+255),f,b
  8823  005E72  0101               	movlb	1	; () banked
  8824  005E74  515C               	movf	_p_buffer& (0+255),w,b
  8825  005E76  0102               	movlb	2	; () banked
  8826  005E78  27F7               	addwf	(??_process_update_answer+4)& (0+255),f,b
  8827  005E7A  0101               	movlb	1	; () banked
  8828  005E7C  515D               	movf	(_p_buffer+1)& (0+255),w,b
  8829  005E7E  0102               	movlb	2	; () banked
  8830  005E80  23F8               	addwfc	(??_process_update_answer+5)& (0+255),f,b
  8831  005E82  0102               	movlb	2	; () banked
  8832  005E84  51F5               	movf	(??_process_update_answer+2)& (0+255),w,b
  8833  005E86  0102               	movlb	2	; () banked
  8834  005E88  5DF7               	subwf	(??_process_update_answer+4)& (0+255),w,b
  8835  005E8A  0102               	movlb	2	; () banked
  8836  005E8C  51F8               	movf	(??_process_update_answer+5)& (0+255),w,b
  8837  005E8E  0A80               	xorlw	128
  8838  005E90  0102               	movlb	2	; () banked
  8839  005E92  6FF9               	movwf	(??_process_update_answer+6)& (0+255),b
  8840  005E94  0102               	movlb	2	; () banked
  8841  005E96  51F6               	movf	(??_process_update_answer+3)& (0+255),w,b
  8842  005E98  0A80               	xorlw	128
  8843  005E9A  0102               	movlb	2	; () banked
  8844  005E9C  59F9               	subwfb	(??_process_update_answer+6)& (0+255),w,b
  8845  005E9E  A0D8               	btfss	status,0,c
  8846  005EA0  D7AE               	goto	l14284
  8847                           
  8848                           ; BSR set to: 2
  8849                           ;main.c: 350: }
  8850                           ;main.c: 351: MiApp_DiscardMessage();
  8851                           
  8852                           ; BSR set to: 2
  8853  005EA2  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
  8854                           
  8855                           ;main.c: 352: if (ack_required)
  8856  005EA6  0102               	movlb	2	; () banked
  8857  005EA8  51FB               	movf	process_update_answer@ack_required& (0+255),w,b
  8858  005EAA  0102               	movlb	2	; () banked
  8859  005EAC  A4D8               	btfss	status,2,c
  8860  005EAE  D015               	goto	l14314
  8861  005EB0  D01F               	goto	l1119
  8862  005EB2                     l14298:
  8863                           
  8864                           ;main.c: 355: {
  8865                           ;main.c: 357: consecutive_fails++;
  8866  005EB2  0101               	movlb	1	; () banked
  8867  005EB4  2B66               	incf	_consecutive_fails& (0+255),f,b
  8868                           
  8869                           ; BSR set to: 1
  8870                           ;main.c: 358: if (consecutive_fails >= 3)
  8871  005EB6  0E02               	movlw	2
  8872  005EB8  0101               	movlb	1	; () banked
  8873  005EBA  6566               	cpfsgt	_consecutive_fails& (0+255),b
  8874  005EBC  D00C               	goto	l14312
  8875                           
  8876                           ; BSR set to: 1
  8877                           ;main.c: 359: {
  8878                           ;main.c: 361: myAppState = STATE_PROBLEM;
  8879  005EBE  0E02               	movlw	2
  8880  005EC0  0101               	movlb	1	; () banked
  8881  005EC2  6F6A               	movwf	_myAppState& (0+255),b
  8882                           
  8883                           ; BSR set to: 1
  8884                           ;main.c: 362: LATCbits.LATC0 = 0;
  8885  005EC4  908B               	bcf	3979,0,c	;volatile
  8886                           
  8887                           ; BSR set to: 1
  8888                           ;main.c: 363: MiApp_TransceiverPowerState(0x00);
  8889  005EC6  0E00               	movlw	0
  8890  005EC8  ECBE  F044         	call	_MiApp_TransceiverPowerState
  8891                           
  8892                           ;main.c: 364: timer_reset();
  8893  005ECC  ECD9  F045         	call	_timer_reset	;wreg free
  8894                           
  8895                           ;main.c: 365: PIR3bits.RTCCIF = 0;
  8896  005ED0  90A4               	bcf	4004,0,c	;volatile
  8897  005ED2  0003               	sleep		;# 
  8898  005ED4  00FF               	reset		;# 
  8899  005ED6                     l14312:
  8900                           
  8901                           ;main.c: 369: }
  8902                           ;main.c: 370: wait_for_1_sec();
  8903  005ED6  EC16  F045         	call	_wait_for_1_sec	;wreg free
  8904  005EDA                     l14314:
  8905  005EDA  EC62  F03A         	call	_send_writables_update	;wreg free
  8906  005EDE  0900               	iorlw	0
  8907  005EE0  B4D8               	btfsc	status,2,c
  8908  005EE2  D7E7               	goto	l14298
  8909                           
  8910                           ;main.c: 371: }
  8911                           ;main.c: 372: consecutive_fails = 0;
  8912  005EE4  0E00               	movlw	0
  8913  005EE6  0101               	movlb	1	; () banked
  8914  005EE8  6F66               	movwf	_consecutive_fails& (0+255),b
  8915                           
  8916                           ; BSR set to: 1
  8917                           ;main.c: 373: return 1;
  8918                           ;	Return value of _process_update_answer is never used
  8919  005EEA  0012               	return	
  8920  005EEC                     l14320:
  8921                           
  8922                           ;main.c: 376: else
  8923                           ;main.c: 377: MiApp_DiscardMessage();
  8924  005EEC  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
  8925  005EF0                     l1119:
  8926                           
  8927                           ;main.c: 380: MiApp_DiscardMessage();
  8928  005EF0  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
  8929                           
  8930                           ;main.c: 381: }
  8931  005EF4  D009               	goto	l14324
  8932  005EF6                     l14322:
  8933  005EF6  C131  FFD9         	movff	_rxMessage+5,fsr2l
  8934  005EFA  C132  FFDA         	movff	_rxMessage+6,fsr2h
  8935  005EFE  50DF               	movf	indf2,w,c
  8936                           
  8937                           ; Switch size 1, requested type "space"
  8938                           ; Number of cases is 1, Range of values is 4 to 4
  8939                           ; switch strategies available:
  8940                           ; Name         Instructions Cycles
  8941                           ; simple_byte            4     3 (average)
  8942                           ;	Chosen strategy is simple_byte
  8943  005F00  0A04               	xorlw	4	; case 4
  8944  005F02  B4D8               	btfsc	status,2,c
  8945  005F04  D74C               	goto	l14264
  8946  005F06  D7F4               	goto	l1119
  8947  005F08                     l14324:
  8948  005F08  0102               	movlb	2	; () banked
  8949  005F0A  2BFC               	incf	process_update_answer@i& (0+255),f,b
  8950  005F0C  D721               	goto	l14250
  8951  005F0E                     __end_of_process_update_answer:
  8952                           	opt stack 0
  8953                           tblptru	equ	0xFF8
  8954                           tblptrh	equ	0xFF7
  8955                           tblptrl	equ	0xFF6
  8956                           tablat	equ	0xFF5
  8957                           prodh	equ	0xFF4
  8958                           prodl	equ	0xFF3
  8959                           postinc0	equ	0xFEE
  8960                           plusw0	equ	0xFEB
  8961                           wreg	equ	0xFE8
  8962                           indf1	equ	0xFE7
  8963                           fsr1h	equ	0xFE2
  8964                           fsr1l	equ	0xFE1
  8965                           indf2	equ	0xFDF
  8966                           postinc2	equ	0xFDE
  8967                           postdec2	equ	0xFDD
  8968                           plusw2	equ	0xFDB
  8969                           fsr2h	equ	0xFDA
  8970                           fsr2l	equ	0xFD9
  8971                           status	equ	0xFD8
  8972                           
  8973 ;; *************** function _wait_for_1_sec *****************
  8974 ;; Defined at:
  8975 ;;		line 755 in file "src/main.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;		None
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;  i               2   34[BANK0 ] unsigned int 
  8980 ;; Return value:  Size  Location     Type
  8981 ;;		None               void
  8982 ;; Registers used:
  8983 ;;		wreg, status,2, status,0
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8992 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8993 ;;Total ram usage:        3 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; Hardware stack levels required when called:    7
  8996 ;; This function calls:
  8997 ;;		Nothing
  8998 ;; This function is called by:
  8999 ;;		_main
  9000 ;;		_process_update_answer
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text24
  9005  008A2C                     __ptext24:
  9006                           	opt stack 0
  9007  008A2C                     _wait_for_1_sec:
  9008                           	opt stack 23
  9009                           
  9010                           ;main.c: 757: unsigned int i;
  9011                           ;main.c: 758: for (i=0; i<100; i++)
  9012                           
  9013                           ;incstack = 0
  9014  008A2C  0E00               	movlw	0
  9015  008A2E  0100               	movlb	0	; () banked
  9016  008A30  6F83               	movwf	(wait_for_1_sec@i+1)& (0+255),b
  9017  008A32  0E00               	movlw	0
  9018  008A34  6F82               	movwf	wait_for_1_sec@i& (0+255),b
  9019  008A36                     l12840:
  9020                           
  9021                           ; BSR set to: 0
  9022  008A36  0100               	movlb	0	; () banked
  9023  008A38  5183               	movf	(wait_for_1_sec@i+1)& (0+255),w,b
  9024  008A3A  E112               	bnz	l1227
  9025  008A3C  0E64               	movlw	100
  9026  008A3E  0100               	movlb	0	; () banked
  9027  008A40  5D82               	subwf	wait_for_1_sec@i& (0+255),w,b
  9028  008A42  B0D8               	btfsc	status,0,c
  9029  008A44  0012               	return	
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;main.c: 759: {
  9033                           ;main.c: 760: _delay((unsigned long)((10)*(8000000/4000.0)));
  9034                           
  9035                           ; BSR set to: 0
  9036                           
  9037                           ; BSR set to: 0
  9038  008A46  0E1A               	movlw	26
  9039  008A48  0100               	movlb	0	; () banked
  9040  008A4A  6F81               	movwf	??_wait_for_1_sec& (0+255),b
  9041  008A4C  0EF8               	movlw	248
  9042  008A4E                     u17617:
  9043  008A4E  2EE8               	decfsz	wreg,f,c
  9044  008A50  D7FE               	goto	u17617
  9045  008A52  2F81               	decfsz	??_wait_for_1_sec& (0+255),f,b
  9046  008A54  D7FC               	goto	u17617
  9047  008A56  D000               	nop2	
  9048  008A58  0100               	movlb	0	; () banked
  9049  008A5A  4B82               	infsnz	wait_for_1_sec@i& (0+255),f,b
  9050  008A5C  2B83               	incf	(wait_for_1_sec@i+1)& (0+255),f,b
  9051  008A5E  D7EB               	goto	l12840
  9052  008A60                     l1227:
  9053                           
  9054                           ; BSR set to: 0
  9055  008A60  0012               	return		;funcret
  9056  008A62                     __end_of_wait_for_1_sec:
  9057                           	opt stack 0
  9058                           tblptru	equ	0xFF8
  9059                           tblptrh	equ	0xFF7
  9060                           tblptrl	equ	0xFF6
  9061                           tablat	equ	0xFF5
  9062                           prodh	equ	0xFF4
  9063                           prodl	equ	0xFF3
  9064                           postinc0	equ	0xFEE
  9065                           plusw0	equ	0xFEB
  9066                           wreg	equ	0xFE8
  9067                           indf1	equ	0xFE7
  9068                           fsr1h	equ	0xFE2
  9069                           fsr1l	equ	0xFE1
  9070                           indf2	equ	0xFDF
  9071                           postinc2	equ	0xFDE
  9072                           postdec2	equ	0xFDD
  9073                           plusw2	equ	0xFDB
  9074                           fsr2h	equ	0xFDA
  9075                           fsr2l	equ	0xFD9
  9076                           status	equ	0xFD8
  9077                           
  9078 ;; *************** function _update_variable *****************
  9079 ;; Defined at:
  9080 ;;		line 667 in file "src/main.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;		None
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;		None
  9085 ;; Return value:  Size  Location     Type
  9086 ;;		None               void
  9087 ;; Registers used:
  9088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9098 ;;Total ram usage:        0 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; Hardware stack levels required when called:   10
  9101 ;; This function calls:
  9102 ;;		_MiMAC_SetPower
  9103 ;;		_RtccWrOn
  9104 ;;		_strcmp
  9105 ;; This function is called by:
  9106 ;;		_process_update_answer
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           	psect	text25
  9111  0076C6                     __ptext25:
  9112                           	opt stack 0
  9113  0076C6                     _update_variable:
  9114                           	opt stack 19
  9115                           
  9116                           ;main.c: 669: if (strcmp(POWER_LABEL, m_var.label) == 0)
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;incstack = 0
  9120  0076C6  0EEF               	movlw	low _POWER_LABEL
  9121  0076C8  0100               	movlb	0	; () banked
  9122  0076CA  6F81               	movwf	strcmp@s1& (0+255),b
  9123  0076CC  0E20               	movlw	high _POWER_LABEL
  9124  0076CE  0100               	movlb	0	; () banked
  9125  0076D0  6F82               	movwf	(strcmp@s1+1)& (0+255),b
  9126  0076D2  0EB7               	movlw	low _m_var
  9127  0076D4  0100               	movlb	0	; () banked
  9128  0076D6  6F83               	movwf	strcmp@s2& (0+255),b
  9129  0076D8  0E01               	movlw	high _m_var
  9130  0076DA  0100               	movlb	0	; () banked
  9131  0076DC  6F84               	movwf	(strcmp@s2+1)& (0+255),b
  9132  0076DE  EC2E  F043         	call	_strcmp	;wreg free
  9133  0076E2  0100               	movlb	0	; () banked
  9134  0076E4  5181               	movf	?_strcmp& (0+255),w,b
  9135  0076E6  0100               	movlb	0	; () banked
  9136  0076E8  1182               	iorwf	(?_strcmp+1)& (0+255),w,b
  9137  0076EA  A4D8               	btfss	status,2,c
  9138  0076EC  D00F               	goto	l12892
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;main.c: 670: {
  9142                           ;main.c: 671: m_power = m_var.value_byte1;
  9143  0076EE  C1BB  F169         	movff	_m_var+4,_m_power
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;main.c: 672: if ((m_power >= 1) && (m_power <= 7))
  9147  0076F2  0101               	movlb	1	; () banked
  9148  0076F4  5169               	movf	_m_power& (0+255),w,b
  9149  0076F6  B4D8               	btfsc	status,2,c
  9150  0076F8  0012               	return	
  9151                           
  9152                           ; BSR set to: 1
  9153  0076FA  0E08               	movlw	8
  9154  0076FC  0101               	movlb	1	; () banked
  9155  0076FE  6169               	cpfslt	_m_power& (0+255),b
  9156  007700  0012               	return	
  9157                           
  9158                           ; BSR set to: 1
  9159                           ;main.c: 673: MiMAC_SetPower(m_power);
  9160  007702  0101               	movlb	1	; () banked
  9161  007704  5169               	movf	_m_power& (0+255),w,b
  9162  007706  ECDC  F044         	call	_MiMAC_SetPower
  9163                           
  9164                           ;main.c: 674: }
  9165  00770A  0012               	return	
  9166  00770C                     l12892:
  9167                           
  9168                           ;main.c: 675: else if ((strcmp(UPDATE_FREQUENCY_LABEL, m_var.label) == 0) && (m_var.unit
      +                           == 4) && (m_var.type == 0))
  9169  00770C  0EFB               	movlw	low _UPDATE_FREQUENCY_LABEL
  9170  00770E  0100               	movlb	0	; () banked
  9171  007710  6F81               	movwf	strcmp@s1& (0+255),b
  9172  007712  0E20               	movlw	high _UPDATE_FREQUENCY_LABEL
  9173  007714  0100               	movlb	0	; () banked
  9174  007716  6F82               	movwf	(strcmp@s1+1)& (0+255),b
  9175  007718  0EB7               	movlw	low _m_var
  9176  00771A  0100               	movlb	0	; () banked
  9177  00771C  6F83               	movwf	strcmp@s2& (0+255),b
  9178  00771E  0E01               	movlw	high _m_var
  9179  007720  0100               	movlb	0	; () banked
  9180  007722  6F84               	movwf	(strcmp@s2+1)& (0+255),b
  9181  007724  EC2E  F043         	call	_strcmp	;wreg free
  9182  007728  0100               	movlb	0	; () banked
  9183  00772A  5181               	movf	?_strcmp& (0+255),w,b
  9184  00772C  0100               	movlb	0	; () banked
  9185  00772E  1182               	iorwf	(?_strcmp+1)& (0+255),w,b
  9186  007730  A4D8               	btfss	status,2,c
  9187  007732  0012               	return	
  9188                           
  9189                           ; BSR set to: 0
  9190  007734  0E04               	movlw	4
  9191  007736  0101               	movlb	1	; () banked
  9192  007738  19BD               	xorwf	(_m_var+6)& (0+255),w,b
  9193  00773A  A4D8               	btfss	status,2,c
  9194  00773C  0012               	return	
  9195                           
  9196                           ; BSR set to: 1
  9197  00773E  0101               	movlb	1	; () banked
  9198  007740  51BA               	movf	(_m_var+3)& (0+255),w,b
  9199  007742  A4D8               	btfss	status,2,c
  9200  007744  0012               	return	
  9201                           
  9202                           ; BSR set to: 1
  9203                           ;main.c: 677: {
  9204                           ;main.c: 678: if (m_var.value_byte1 == 0)
  9205  007746  0101               	movlb	1	; () banked
  9206  007748  51BB               	movf	(_m_var+4)& (0+255),w,b
  9207  00774A  A4D8               	btfss	status,2,c
  9208  00774C  D01C               	goto	l1205
  9209                           
  9210                           ; BSR set to: 1
  9211                           ;main.c: 679: {
  9212                           ;main.c: 680: m_update_frequency = 0;
  9213  00774E  0E00               	movlw	0
  9214  007750  0101               	movlb	1	; () banked
  9215  007752  6FFF               	movwf	_m_update_frequency& (0+255),b	;volatile
  9216                           
  9217                           ; BSR set to: 1
  9218                           ;main.c: 681: RtccWrOn();
  9219  007754  ECFE  F045         	call	_RtccWrOn	;wreg free
  9220                           
  9221                           ;main.c: 682: RTCCFGbits.RTCPTR0 = 0;
  9222  007758  010F               	movlb	15	; () banked
  9223  00775A  913F               	bcf	63,0,b	;volatile
  9224                           
  9225                           ; BSR set to: 15
  9226                           ;main.c: 683: RTCCFGbits.RTCPTR1 = 0;
  9227  00775C  010F               	movlb	15	; () banked
  9228  00775E  933F               	bcf	63,1,b	;volatile
  9229                           
  9230                           ; BSR set to: 15
  9231                           ;main.c: 684: RTCVALHbits.RTCVALH = 0x00;
  9232  007760  0E00               	movlw	0
  9233  007762  010F               	movlb	15	; () banked
  9234  007764  6F3B               	movwf	59,b	;volatile
  9235                           
  9236                           ; BSR set to: 15
  9237                           ;main.c: 685: RTCVALLbits.RTCVALL = 0x00;
  9238  007766  0E00               	movlw	0
  9239  007768  010F               	movlb	15	; () banked
  9240  00776A  6F3A               	movwf	58,b	;volatile
  9241                           
  9242                           ; BSR set to: 15
  9243                           ;main.c: 686: ALRMCFGbits.AMASK = 0b0010;
  9244  00776C  010F               	movlb	15	; () banked
  9245  00776E  5147               	movf	71,w,b	;volatile
  9246  007770  0BC3               	andlw	-61
  9247  007772  0908               	iorlw	8
  9248  007774  6F47               	movwf	71,b	;volatile
  9249                           
  9250                           ; BSR set to: 15
  9251                           ;main.c: 687: (RTCCFGbits.RTCWREN = 0);
  9252  007776  010F               	movlb	15	; () banked
  9253  007778  9B3F               	bcf	63,5,b	;volatile
  9254                           
  9255                           ; BSR set to: 15
  9256                           ;main.c: 688: timer_count = 1;
  9257  00777A  0E01               	movlw	1
  9258  00777C  6E4B               	movwf	_timer_count,c	;volatile
  9259                           
  9260                           ; BSR set to: 15
  9261                           ;main.c: 689: timer_flag = 0;
  9262  00777E  0E00               	movlw	0
  9263  007780  0101               	movlb	1	; () banked
  9264  007782  6F6B               	movwf	_timer_flag& (0+255),b	;volatile
  9265                           
  9266                           ;main.c: 690: }
  9267  007784  0012               	return	
  9268  007786                     l1205:
  9269                           
  9270                           ; BSR set to: 1
  9271                           ;main.c: 691: else
  9272                           ;main.c: 692: {
  9273                           ;main.c: 693: m_update_frequency = m_var.value_byte1;
  9274  007786  C1BB  F1FF         	movff	_m_var+4,_m_update_frequency	;volatile
  9275                           
  9276                           ; BSR set to: 1
  9277                           ;main.c: 694: RtccWrOn();
  9278  00778A  ECFE  F045         	call	_RtccWrOn	;wreg free
  9279                           
  9280                           ;main.c: 695: RTCCFGbits.RTCPTR0 = 0;
  9281  00778E  010F               	movlb	15	; () banked
  9282  007790  913F               	bcf	63,0,b	;volatile
  9283                           
  9284                           ; BSR set to: 15
  9285                           ;main.c: 696: RTCCFGbits.RTCPTR1 = 0;
  9286  007792  010F               	movlb	15	; () banked
  9287  007794  933F               	bcf	63,1,b	;volatile
  9288                           
  9289                           ; BSR set to: 15
  9290                           ;main.c: 697: RTCVALHbits.RTCVALH = 0x00;
  9291  007796  0E00               	movlw	0
  9292  007798  010F               	movlb	15	; () banked
  9293  00779A  6F3B               	movwf	59,b	;volatile
  9294                           
  9295                           ; BSR set to: 15
  9296                           ;main.c: 698: RTCVALLbits.RTCVALL = 0x00;
  9297  00779C  0E00               	movlw	0
  9298  00779E  010F               	movlb	15	; () banked
  9299  0077A0  6F3A               	movwf	58,b	;volatile
  9300                           
  9301                           ; BSR set to: 15
  9302                           ;main.c: 699: ALRMCFGbits.AMASK = 0b0011;
  9303  0077A2  010F               	movlb	15	; () banked
  9304  0077A4  5147               	movf	71,w,b	;volatile
  9305  0077A6  0BC3               	andlw	-61
  9306  0077A8  090C               	iorlw	12
  9307  0077AA  6F47               	movwf	71,b	;volatile
  9308                           
  9309                           ; BSR set to: 15
  9310                           ;main.c: 700: (RTCCFGbits.RTCWREN = 0);
  9311  0077AC  010F               	movlb	15	; () banked
  9312  0077AE  9B3F               	bcf	63,5,b	;volatile
  9313                           
  9314                           ; BSR set to: 15
  9315                           ;main.c: 701: timer_count = m_update_frequency;
  9316  0077B0  C1FF  F04B         	movff	_m_update_frequency,_timer_count	;volatile
  9317                           
  9318                           ; BSR set to: 15
  9319                           ;main.c: 702: timer_flag = 0;
  9320  0077B4  0E00               	movlw	0
  9321  0077B6  0101               	movlb	1	; () banked
  9322  0077B8  6F6B               	movwf	_timer_flag& (0+255),b	;volatile
  9323                           
  9324                           ; BSR set to: 1
  9325                           
  9326                           ; BSR set to: 1
  9327  0077BA  0012               	return	
  9328  0077BC                     __end_of_update_variable:
  9329                           	opt stack 0
  9330                           tblptru	equ	0xFF8
  9331                           tblptrh	equ	0xFF7
  9332                           tblptrl	equ	0xFF6
  9333                           tablat	equ	0xFF5
  9334                           prodh	equ	0xFF4
  9335                           prodl	equ	0xFF3
  9336                           postinc0	equ	0xFEE
  9337                           plusw0	equ	0xFEB
  9338                           wreg	equ	0xFE8
  9339                           indf1	equ	0xFE7
  9340                           fsr1h	equ	0xFE2
  9341                           fsr1l	equ	0xFE1
  9342                           indf2	equ	0xFDF
  9343                           postinc2	equ	0xFDE
  9344                           postdec2	equ	0xFDD
  9345                           plusw2	equ	0xFDB
  9346                           fsr2h	equ	0xFDA
  9347                           fsr2l	equ	0xFD9
  9348                           status	equ	0xFD8
  9349                           
  9350 ;; *************** function _strcmp *****************
  9351 ;; Defined at:
  9352 ;;		line 33 in file "/opt/microchip/xc8/v1.35/sources/common/strcmp.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;  s1              2   33[BANK0 ] PTR const unsigned char 
  9355 ;;		 -> UPDATE_FREQUENCY_LABEL(4), POWER_LABEL(4), 
  9356 ;;  s2              2   35[BANK0 ] PTR const unsigned char 
  9357 ;;		 -> m_var.label(3), m_var(9), 
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;  r               1   38[BANK0 ] char 
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  2   33[BANK0 ] int 
  9362 ;; Registers used:
  9363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9369 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9371 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9372 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9373 ;;Total ram usage:        6 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; Hardware stack levels required when called:    7
  9376 ;; This function calls:
  9377 ;;		Nothing
  9378 ;; This function is called by:
  9379 ;;		_update_variable
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text26
  9384  00865C                     __ptext26:
  9385                           	opt stack 0
  9386  00865C                     _strcmp:
  9387                           	opt stack 21
  9388                           
  9389                           ;incstack = 0
  9390  00865C  D006               	goto	l12384
  9391  00865E                     l12382:
  9392  00865E  0100               	movlb	0	; () banked
  9393  008660  4B81               	infsnz	strcmp@s1& (0+255),f,b
  9394  008662  2B82               	incf	(strcmp@s1+1)& (0+255),f,b
  9395  008664  0100               	movlb	0	; () banked
  9396  008666  4B83               	infsnz	strcmp@s2& (0+255),f,b
  9397  008668  2B84               	incf	(strcmp@s2+1)& (0+255),f,b
  9398  00866A                     l12384:
  9399  00866A  C081  FFF6         	movff	strcmp@s1,tblptrl
  9400  00866E  C082  FFF7         	movff	strcmp@s1+1,tblptrh
  9401  008672                     	if	0	;tblptru may be non-zero
  9402  008672                     	endif
  9403  008672                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9404  008672  0E00               	movlw	low (__mediumconst shr (0+16))
  9405  008674  6EF8               	movwf	tblptru,c
  9406  008676                     	endif
  9407  008676  0008               	tblrd		*
  9408  008678  CFF5 F085          	movff	tablat,??_strcmp
  9409  00867C  C083  FFD9         	movff	strcmp@s2,fsr2l
  9410  008680  C084  FFDA         	movff	strcmp@s2+1,fsr2h
  9411  008684  50DF               	movf	indf2,w,c
  9412  008686  0800               	sublw	0
  9413  008688  0100               	movlb	0	; () banked
  9414  00868A  2585               	addwf	??_strcmp& (0+255),w,b
  9415  00868C  0100               	movlb	0	; () banked
  9416  00868E  6F86               	movwf	strcmp@r& (0+255),b
  9417  008690  0100               	movlb	0	; () banked
  9418  008692  5186               	movf	strcmp@r& (0+255),w,b
  9419  008694  A4D8               	btfss	status,2,c
  9420  008696  D00B               	goto	l12388
  9421                           
  9422                           ; BSR set to: 0
  9423  008698  C081  FFF6         	movff	strcmp@s1,tblptrl
  9424  00869C  C082  FFF7         	movff	strcmp@s1+1,tblptrh
  9425  0086A0                     	if	0	;tblptru may be non-zero
  9426  0086A0                     	endif
  9427  0086A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9428  0086A0  0E00               	movlw	low (__mediumconst shr (0+16))
  9429  0086A2  6EF8               	movwf	tblptru,c
  9430  0086A4                     	endif
  9431  0086A4  0008               	tblrd		*
  9432  0086A6  50F5               	movf	tablat,w,c
  9433  0086A8  0900               	iorlw	0
  9434  0086AA  A4D8               	btfss	status,2,c
  9435  0086AC  D7D8               	goto	l12382
  9436  0086AE                     l12388:
  9437                           
  9438                           ; BSR set to: 0
  9439  0086AE  0100               	movlb	0	; () banked
  9440  0086B0  5186               	movf	strcmp@r& (0+255),w,b
  9441  0086B2  0100               	movlb	0	; () banked
  9442  0086B4  6F81               	movwf	?_strcmp& (0+255),b
  9443  0086B6  6B82               	clrf	(?_strcmp+1)& (0+255),b
  9444  0086B8  BF81               	btfsc	?_strcmp& (0+255),7,b
  9445  0086BA  0782               	decf	(?_strcmp+1)& (0+255),f,b
  9446  0086BC  0012               	return	
  9447  0086BE                     __end_of_strcmp:
  9448                           	opt stack 0
  9449                           tblptru	equ	0xFF8
  9450                           tblptrh	equ	0xFF7
  9451                           tblptrl	equ	0xFF6
  9452                           tablat	equ	0xFF5
  9453                           prodh	equ	0xFF4
  9454                           prodl	equ	0xFF3
  9455                           postinc0	equ	0xFEE
  9456                           plusw0	equ	0xFEB
  9457                           wreg	equ	0xFE8
  9458                           indf1	equ	0xFE7
  9459                           fsr1h	equ	0xFE2
  9460                           fsr1l	equ	0xFE1
  9461                           indf2	equ	0xFDF
  9462                           postinc2	equ	0xFDE
  9463                           postdec2	equ	0xFDD
  9464                           plusw2	equ	0xFDB
  9465                           fsr2h	equ	0xFDA
  9466                           fsr2l	equ	0xFD9
  9467                           status	equ	0xFD8
  9468                           
  9469 ;; *************** function _timer_reset *****************
  9470 ;; Defined at:
  9471 ;;		line 709 in file "src/main.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;		None
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;		None
  9476 ;; Return value:  Size  Location     Type
  9477 ;;		None               void
  9478 ;; Registers used:
  9479 ;;		wreg, status,2
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9489 ;;Total ram usage:        0 bytes
  9490 ;; Hardware stack levels used:    1
  9491 ;; Hardware stack levels required when called:    7
  9492 ;; This function calls:
  9493 ;;		Nothing
  9494 ;; This function is called by:
  9495 ;;		_main
  9496 ;;		_process_update_answer
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           	psect	text27
  9501  008BB2                     __ptext27:
  9502                           	opt stack 0
  9503  008BB2                     _timer_reset:
  9504                           	opt stack 23
  9505                           
  9506                           ;main.c: 718: if (m_update_frequency == 0)
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;incstack = 0
  9510  008BB2  0101               	movlb	1	; () banked
  9511  008BB4  51FF               	movf	_m_update_frequency& (0+255),w,b	;volatile
  9512  008BB6  A4D8               	btfss	status,2,c
  9513  008BB8  D003               	goto	l1210
  9514                           
  9515                           ; BSR set to: 1
  9516                           ;main.c: 719: timer_count = 1;
  9517  008BBA  0E01               	movlw	1
  9518  008BBC  6E4B               	movwf	_timer_count,c	;volatile
  9519  008BBE  D002               	goto	l12836
  9520  008BC0                     l1210:
  9521                           
  9522                           ; BSR set to: 1
  9523                           ;main.c: 720: else
  9524                           ;main.c: 721: timer_count = m_update_frequency;
  9525  008BC0  C1FF  F04B         	movff	_m_update_frequency,_timer_count	;volatile
  9526  008BC4                     l12836:
  9527                           
  9528                           ; BSR set to: 1
  9529                           ;main.c: 722: timer_flag = 0;
  9530  008BC4  0E00               	movlw	0
  9531  008BC6  0101               	movlb	1	; () banked
  9532  008BC8  6F6B               	movwf	_timer_flag& (0+255),b	;volatile
  9533                           
  9534                           ; BSR set to: 1
  9535  008BCA  0012               	return		;funcret
  9536  008BCC                     __end_of_timer_reset:
  9537                           	opt stack 0
  9538                           tblptru	equ	0xFF8
  9539                           tblptrh	equ	0xFF7
  9540                           tblptrl	equ	0xFF6
  9541                           tablat	equ	0xFF5
  9542                           prodh	equ	0xFF4
  9543                           prodl	equ	0xFF3
  9544                           postinc0	equ	0xFEE
  9545                           plusw0	equ	0xFEB
  9546                           wreg	equ	0xFE8
  9547                           indf1	equ	0xFE7
  9548                           fsr1h	equ	0xFE2
  9549                           fsr1l	equ	0xFE1
  9550                           indf2	equ	0xFDF
  9551                           postinc2	equ	0xFDE
  9552                           postdec2	equ	0xFDD
  9553                           plusw2	equ	0xFDB
  9554                           fsr2h	equ	0xFDA
  9555                           fsr2l	equ	0xFD9
  9556                           status	equ	0xFD8
  9557                           
  9558 ;; *************** function _send_writables_update *****************
  9559 ;; Defined at:
  9560 ;;		line 564 in file "src/main.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;		None
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;  tmp             2    0        unsigned int 
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      unsigned char 
  9567 ;; Registers used:
  9568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9576 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9577 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9578 ;;Total ram usage:        1 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:   16
  9581 ;; This function calls:
  9582 ;;		_do_UPDATE
  9583 ;;		_encode_uint8_variable
  9584 ;;		_memcpy
  9585 ;; This function is called by:
  9586 ;;		_process_update_answer
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590                           	psect	text28
  9591  0074C4                     __ptext28:
  9592                           	opt stack 0
  9593  0074C4                     _send_writables_update:
  9594                           	opt stack 13
  9595                           
  9596                           ;main.c: 566: uint16_t tmp;
  9597                           ;main.c: 567: p_buffer = m_buffer;
  9598                           
  9599                           ; BSR set to: 1
  9600                           ;incstack = 0
  9601  0074C4  0E97               	movlw	low _m_buffer
  9602  0074C6  0101               	movlb	1	; () banked
  9603  0074C8  6F5C               	movwf	_p_buffer& (0+255),b
  9604  0074CA  0E01               	movlw	high _m_buffer
  9605  0074CC  0101               	movlb	1	; () banked
  9606  0074CE  6F5D               	movwf	(_p_buffer+1)& (0+255),b
  9607                           
  9608                           ; BSR set to: 1
  9609                           ;main.c: 570: memcpy(m_var.label, POWER_LABEL, 3);
  9610  0074D0  0EB7               	movlw	low _m_var
  9611  0074D2  0100               	movlb	0	; () banked
  9612  0074D4  6F81               	movwf	memcpy@d1& (0+255),b
  9613  0074D6  0E01               	movlw	high _m_var
  9614  0074D8  0100               	movlb	0	; () banked
  9615  0074DA  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  9616  0074DC  0EEF               	movlw	low _POWER_LABEL
  9617  0074DE  0100               	movlb	0	; () banked
  9618  0074E0  6F83               	movwf	memcpy@s1& (0+255),b
  9619  0074E2  0E20               	movlw	high _POWER_LABEL
  9620  0074E4  0100               	movlb	0	; () banked
  9621  0074E6  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  9622  0074E8  0E00               	movlw	0
  9623  0074EA  0100               	movlb	0	; () banked
  9624  0074EC  6F86               	movwf	(memcpy@n+1)& (0+255),b
  9625  0074EE  0E03               	movlw	3
  9626  0074F0  6F85               	movwf	memcpy@n& (0+255),b
  9627  0074F2  EC5F  F043         	call	_memcpy	;wreg free
  9628                           
  9629                           ;main.c: 571: m_var.unit = 0;
  9630  0074F6  0E00               	movlw	0
  9631  0074F8  0101               	movlb	1	; () banked
  9632  0074FA  6FBD               	movwf	(_m_var+6)& (0+255),b
  9633                           
  9634                           ; BSR set to: 1
  9635                           ;main.c: 572: m_var.value_byte1 = m_power;
  9636  0074FC  C169  F1BB         	movff	_m_power,_m_var+4
  9637                           
  9638                           ; BSR set to: 1
  9639                           ;main.c: 573: m_var.writable = 1;
  9640  007500  0E01               	movlw	1
  9641  007502  0101               	movlb	1	; () banked
  9642  007504  6FBE               	movwf	(_m_var+7)& (0+255),b
  9643                           
  9644                           ; BSR set to: 1
  9645                           ;main.c: 574: p_buffer += encode_uint8_variable(p_buffer, m_var);
  9646  007506  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  9647  00750A  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  9648  00750E  EE21  F0B7         	lfsr	2,_m_var
  9649  007512  EE00  F083         	lfsr	0,encode_uint8_variable@var
  9650  007516  0E08               	movlw	8
  9651  007518                     u15011:
  9652  007518  CFDB FFEB          	movff	plusw2,plusw0
  9653  00751C  06E8               	decf	wreg,f,c
  9654  00751E  E2FC               	bc	u15011
  9655  007520  ECA5  F040         	call	_encode_uint8_variable	;wreg free
  9656  007524  0101               	movlb	1	; () banked
  9657  007526  6FFD               	movwf	??_send_writables_update& (0+255),b
  9658  007528  0101               	movlb	1	; () banked
  9659  00752A  51FD               	movf	??_send_writables_update& (0+255),w,b
  9660  00752C  0D01               	mullw	1
  9661  00752E  50F3               	movf	prodl,w,c
  9662  007530  0101               	movlb	1	; () banked
  9663  007532  275C               	addwf	_p_buffer& (0+255),f,b
  9664  007534  50F4               	movf	prodh,w,c
  9665  007536  0101               	movlb	1	; () banked
  9666  007538  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  9667                           
  9668                           ; BSR set to: 1
  9669                           ;main.c: 576: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  9670  00753A  0EB7               	movlw	low _m_var
  9671  00753C  0100               	movlb	0	; () banked
  9672  00753E  6F81               	movwf	memcpy@d1& (0+255),b
  9673  007540  0E01               	movlw	high _m_var
  9674  007542  0100               	movlb	0	; () banked
  9675  007544  6F82               	movwf	(memcpy@d1+1)& (0+255),b
  9676  007546  0EFB               	movlw	low _UPDATE_FREQUENCY_LABEL
  9677  007548  0100               	movlb	0	; () banked
  9678  00754A  6F83               	movwf	memcpy@s1& (0+255),b
  9679  00754C  0E20               	movlw	high _UPDATE_FREQUENCY_LABEL
  9680  00754E  0100               	movlb	0	; () banked
  9681  007550  6F84               	movwf	(memcpy@s1+1)& (0+255),b
  9682  007552  0E00               	movlw	0
  9683  007554  0100               	movlb	0	; () banked
  9684  007556  6F86               	movwf	(memcpy@n+1)& (0+255),b
  9685  007558  0E03               	movlw	3
  9686  00755A  6F85               	movwf	memcpy@n& (0+255),b
  9687  00755C  EC5F  F043         	call	_memcpy	;wreg free
  9688                           
  9689                           ;main.c: 577: m_var.unit = 4;
  9690  007560  0E04               	movlw	4
  9691  007562  0101               	movlb	1	; () banked
  9692  007564  6FBD               	movwf	(_m_var+6)& (0+255),b
  9693                           
  9694                           ; BSR set to: 1
  9695                           ;main.c: 578: m_var.value_byte1 = m_update_frequency;
  9696  007566  C1FF  F1BB         	movff	_m_update_frequency,_m_var+4	;volatile
  9697                           
  9698                           ; BSR set to: 1
  9699                           ;main.c: 579: m_var.writable = 1;
  9700  00756A  0E01               	movlw	1
  9701  00756C  0101               	movlb	1	; () banked
  9702  00756E  6FBE               	movwf	(_m_var+7)& (0+255),b
  9703                           
  9704                           ; BSR set to: 1
  9705                           ;main.c: 580: p_buffer += encode_uint8_variable(p_buffer, m_var);
  9706  007570  C15C  F081         	movff	_p_buffer,encode_uint8_variable@buffer
  9707  007574  C15D  F082         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  9708  007578  EE21  F0B7         	lfsr	2,_m_var
  9709  00757C  EE00  F083         	lfsr	0,encode_uint8_variable@var
  9710  007580  0E08               	movlw	8
  9711  007582                     u15021:
  9712  007582  CFDB FFEB          	movff	plusw2,plusw0
  9713  007586  06E8               	decf	wreg,f,c
  9714  007588  E2FC               	bc	u15021
  9715  00758A  ECA5  F040         	call	_encode_uint8_variable	;wreg free
  9716  00758E  0101               	movlb	1	; () banked
  9717  007590  6FFD               	movwf	??_send_writables_update& (0+255),b
  9718  007592  0101               	movlb	1	; () banked
  9719  007594  51FD               	movf	??_send_writables_update& (0+255),w,b
  9720  007596  0D01               	mullw	1
  9721  007598  50F3               	movf	prodl,w,c
  9722  00759A  0101               	movlb	1	; () banked
  9723  00759C  275C               	addwf	_p_buffer& (0+255),f,b
  9724  00759E  50F4               	movf	prodh,w,c
  9725  0075A0  0101               	movlb	1	; () banked
  9726  0075A2  235D               	addwfc	(_p_buffer+1)& (0+255),f,b
  9727                           
  9728                           ; BSR set to: 1
  9729                           ;main.c: 582: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  9730  0075A4  0E97               	movlw	low _m_buffer
  9731  0075A6  0101               	movlb	1	; () banked
  9732  0075A8  6FF4               	movwf	do_UPDATE@p_buff& (0+255),b
  9733  0075AA  0E01               	movlw	high _m_buffer
  9734  0075AC  0101               	movlb	1	; () banked
  9735  0075AE  6FF5               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  9736  0075B0  0E97               	movlw	_m_buffer& (0+255)
  9737  0075B2  0800               	sublw	0
  9738  0075B4  0101               	movlb	1	; () banked
  9739  0075B6  255C               	addwf	_p_buffer& (0+255),w,b
  9740  0075B8  0101               	movlb	1	; () banked
  9741  0075BA  6FF6               	movwf	do_UPDATE@size& (0+255),b
  9742  0075BC  0E01               	movlw	1
  9743  0075BE  0101               	movlb	1	; () banked
  9744  0075C0  6FF7               	movwf	do_UPDATE@ack_required& (0+255),b
  9745  0075C2  EC1E  F031         	call	_do_UPDATE	;wreg free
  9746  0075C6  0012               	return	
  9747  0075C8                     __end_of_send_writables_update:
  9748                           	opt stack 0
  9749                           tblptru	equ	0xFF8
  9750                           tblptrh	equ	0xFF7
  9751                           tblptrl	equ	0xFF6
  9752                           tablat	equ	0xFF5
  9753                           prodh	equ	0xFF4
  9754                           prodl	equ	0xFF3
  9755                           postinc0	equ	0xFEE
  9756                           plusw0	equ	0xFEB
  9757                           wreg	equ	0xFE8
  9758                           indf1	equ	0xFE7
  9759                           fsr1h	equ	0xFE2
  9760                           fsr1l	equ	0xFE1
  9761                           indf2	equ	0xFDF
  9762                           postinc2	equ	0xFDE
  9763                           postdec2	equ	0xFDD
  9764                           plusw2	equ	0xFDB
  9765                           fsr2h	equ	0xFDA
  9766                           fsr2l	equ	0xFD9
  9767                           status	equ	0xFD8
  9768                           
  9769 ;; *************** function _encode_uint8_variable *****************
  9770 ;; Defined at:
  9771 ;;		line 43 in file "../../muta/muta_messages.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
  9774 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
  9775 ;;  var             9   35[BANK0 ] struct .
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;		None
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1    wreg      unsigned char 
  9780 ;; Registers used:
  9781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9787 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9790 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9791 ;;Total ram usage:       11 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:    7
  9794 ;; This function calls:
  9795 ;;		Nothing
  9796 ;; This function is called by:
  9797 ;;		_send_initial_update
  9798 ;;		_send_writables_update
  9799 ;;		_send_periodical_update
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           	psect	text29
  9804  00814A                     __ptext29:
  9805                           	opt stack 0
  9806  00814A                     _encode_uint8_variable:
  9807                           	opt stack 22
  9808                           
  9809                           ;muta_messages.c: 45: *(buffer++) = var.label[0];
  9810                           
  9811                           ;incstack = 0
  9812  00814A  C081  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9813  00814E  C082  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9814  008152  C083  FFDF         	movff	encode_uint8_variable@var,indf2
  9815  008156  0100               	movlb	0	; () banked
  9816  008158  4B81               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9817  00815A  2B82               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;muta_messages.c: 46: *(buffer++) = var.label[1];
  9821  00815C  C081  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9822  008160  C082  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9823  008164  C084  FFDF         	movff	encode_uint8_variable@var+1,indf2
  9824  008168  0100               	movlb	0	; () banked
  9825  00816A  4B81               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9826  00816C  2B82               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;muta_messages.c: 47: *(buffer++) = var.label[2];
  9830  00816E  C081  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9831  008172  C082  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9832  008176  C085  FFDF         	movff	encode_uint8_variable@var+2,indf2
  9833                           
  9834                           ; BSR set to: 0
  9835  00817A  0100               	movlb	0	; () banked
  9836  00817C  4B81               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9837  00817E  2B82               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;muta_messages.c: 48: var.type = 0 << 1;
  9841  008180  0E00               	movlw	0
  9842  008182  0100               	movlb	0	; () banked
  9843  008184  6F86               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;muta_messages.c: 49: if (var.writable)
  9847  008186  0100               	movlb	0	; () banked
  9848  008188  518A               	movf	(encode_uint8_variable@var+7)& (0+255),w,b
  9849  00818A  B4D8               	btfsc	status,2,c
  9850  00818C  D004               	goto	l1290
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;muta_messages.c: 50: {
  9854                           ;muta_messages.c: 51: var.type = var.type + 1;
  9855  00818E  0100               	movlb	0	; () banked
  9856  008190  2986               	incf	(encode_uint8_variable@var+3)& (0+255),w,b
  9857  008192  0100               	movlb	0	; () banked
  9858  008194  6F86               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9859  008196                     l1290:
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;muta_messages.c: 52: }
  9863                           ;muta_messages.c: 53: var.type = var.type << 4;
  9864  008196  0100               	movlb	0	; () banked
  9865  008198  3986               	swapf	(encode_uint8_variable@var+3)& (0+255),w,b
  9866  00819A  0BF0               	andlw	240
  9867  00819C  0100               	movlb	0	; () banked
  9868  00819E  6F86               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9869                           
  9870                           ;muta_messages.c: 54: var.type = var.type + var.unit;
  9871  0081A0  0100               	movlb	0	; () banked
  9872  0081A2  5186               	movf	(encode_uint8_variable@var+3)& (0+255),w,b
  9873  0081A4  0100               	movlb	0	; () banked
  9874  0081A6  2589               	addwf	(encode_uint8_variable@var+6)& (0+255),w,b
  9875  0081A8  0100               	movlb	0	; () banked
  9876  0081AA  6F86               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;muta_messages.c: 55: *(buffer++) = var.type;
  9880  0081AC  C081  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9881  0081B0  C082  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9882  0081B4  C086  FFDF         	movff	encode_uint8_variable@var+3,indf2
  9883                           
  9884                           ; BSR set to: 0
  9885  0081B8  0100               	movlb	0	; () banked
  9886  0081BA  4B81               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9887  0081BC  2B82               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;muta_messages.c: 56: *(buffer++) = var.value_byte1;
  9891  0081BE  C081  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9892  0081C2  C082  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9893  0081C6  C087  FFDF         	movff	encode_uint8_variable@var+4,indf2
  9894                           
  9895                           ; BSR set to: 0
  9896  0081CA  0100               	movlb	0	; () banked
  9897  0081CC  4B81               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9898  0081CE  2B82               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;muta_messages.c: 57: return 5;
  9902  0081D0  0E05               	movlw	5
  9903  0081D2  0012               	return	
  9904  0081D4                     __end_of_encode_uint8_variable:
  9905                           	opt stack 0
  9906                           tblptru	equ	0xFF8
  9907                           tblptrh	equ	0xFF7
  9908                           tblptrl	equ	0xFF6
  9909                           tablat	equ	0xFF5
  9910                           prodh	equ	0xFF4
  9911                           prodl	equ	0xFF3
  9912                           postinc0	equ	0xFEE
  9913                           plusw0	equ	0xFEB
  9914                           wreg	equ	0xFE8
  9915                           indf1	equ	0xFE7
  9916                           fsr1h	equ	0xFE2
  9917                           fsr1l	equ	0xFE1
  9918                           indf2	equ	0xFDF
  9919                           postinc2	equ	0xFDE
  9920                           postdec2	equ	0xFDD
  9921                           plusw2	equ	0xFDB
  9922                           fsr2h	equ	0xFDA
  9923                           fsr2l	equ	0xFD9
  9924                           status	equ	0xFD8
  9925                           
  9926 ;; *************** function _do_UPDATE *****************
  9927 ;; Defined at:
  9928 ;;		line 333 in file "../../muta/muta_messages.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;  p_buff          2   33[BANK1 ] PTR unsigned char 
  9931 ;;		 -> m_buffer(32), 
  9932 ;;  size            1   35[BANK1 ] unsigned char 
  9933 ;;  ack_required    1   36[BANK1 ] unsigned char 
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;  i               2   39[BANK1 ] unsigned int 
  9936 ;;  shortaddress    2   37[BANK1 ] unsigned char [2]
  9937 ;;  result          1   41[BANK1 ] unsigned char 
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      unsigned char 
  9940 ;; Registers used:
  9941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9947 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9948 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9950 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9951 ;;Total ram usage:       10 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:   15
  9954 ;; This function calls:
  9955 ;;		_MiApp_DiscardMessage
  9956 ;;		_MiApp_MessageAvailable
  9957 ;;		_MiApp_UnicastAddress
  9958 ;;		_memcpy
  9959 ;; This function is called by:
  9960 ;;		_send_initial_update
  9961 ;;		_send_writables_update
  9962 ;;		_send_periodical_update
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966                           	psect	text30
  9967  00623C                     __ptext30:
  9968                           	opt stack 0
  9969  00623C                     _do_UPDATE:
  9970                           	opt stack 14
  9971                           
  9972                           ;muta_messages.c: 335: uint8_t shortaddress[2] = { 0x00, 0x00 };
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;incstack = 0
  9976  00623C  C162  F1F8         	movff	do_UPDATE@F10230,do_UPDATE@shortaddress
  9977  006240  C163  F1F9         	movff	do_UPDATE@F10230+1,do_UPDATE@shortaddress+1
  9978                           
  9979                           ;muta_messages.c: 336: {TxData = 11;};
  9980  006244  0E0B               	movlw	11
  9981  006246  0100               	movlb	0	; () banked
  9982  006248  6FD8               	movwf	_TxData& (0+255),b
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;muta_messages.c: 337: TxBuffer[TxData++] = 04;
  9986  00624A  0100               	movlb	0	; () banked
  9987  00624C  51D8               	movf	_TxData& (0+255),w,b
  9988  00624E  0D01               	mullw	1
  9989  006250  0E6C               	movlw	low _TxBuffer
  9990  006252  24F3               	addwf	prodl,w,c
  9991  006254  6ED9               	movwf	fsr2l,c
  9992  006256  0E01               	movlw	high _TxBuffer
  9993  006258  20F4               	addwfc	prodh,w,c
  9994  00625A  6EDA               	movwf	fsr2h,c
  9995  00625C  0E04               	movlw	4
  9996  00625E  6EDF               	movwf	indf2,c
  9997                           
  9998                           ; BSR set to: 0
  9999  006260  0100               	movlb	0	; () banked
 10000  006262  2BD8               	incf	_TxData& (0+255),f,b
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;muta_messages.c: 338: if (ack_required)
 10004  006264  0101               	movlb	1	; () banked
 10005  006266  51F7               	movf	do_UPDATE@ack_required& (0+255),w,b
 10006  006268  0101               	movlb	1	; () banked
 10007  00626A  B4D8               	btfsc	status,2,c
 10008  00626C  D00E               	goto	l12320
 10009                           
 10010                           ; BSR set to: 1
 10011                           ;muta_messages.c: 339: TxBuffer[TxData++] = 0xff;
 10012  00626E  0100               	movlb	0	; () banked
 10013  006270  51D8               	movf	_TxData& (0+255),w,b
 10014  006272  0D01               	mullw	1
 10015  006274  0E6C               	movlw	low _TxBuffer
 10016  006276  24F3               	addwf	prodl,w,c
 10017  006278  6ED9               	movwf	fsr2l,c
 10018  00627A  0E01               	movlw	high _TxBuffer
 10019  00627C  20F4               	addwfc	prodh,w,c
 10020  00627E  6EDA               	movwf	fsr2h,c
 10021  006280  0EFF               	movlw	255
 10022  006282  D00D               	goto	L7
 10023  006284                     l12318:
 10024                           
 10025                           ; BSR set to: 0
 10026  006284  0100               	movlb	0	; () banked
 10027  006286  2BD8               	incf	_TxData& (0+255),f,b
 10028  006288  D00C               	goto	l12324
 10029  00628A                     l12320:
 10030                           
 10031                           ;muta_messages.c: 340: else
 10032                           ;muta_messages.c: 341: TxBuffer[TxData++] = 0xf0;
 10033  00628A  0100               	movlb	0	; () banked
 10034  00628C  51D8               	movf	_TxData& (0+255),w,b
 10035  00628E  0D01               	mullw	1
 10036  006290  0E6C               	movlw	low _TxBuffer
 10037  006292  24F3               	addwf	prodl,w,c
 10038  006294  6ED9               	movwf	fsr2l,c
 10039  006296  0E01               	movlw	high _TxBuffer
 10040  006298  20F4               	addwfc	prodh,w,c
 10041  00629A  6EDA               	movwf	fsr2h,c
 10042  00629C  0EF0               	movlw	240
 10043  00629E                     L7:
 10044  00629E  6EDF               	movwf	indf2,c
 10045  0062A0  D7F1               	goto	l12318
 10046  0062A2                     l12324:
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;muta_messages.c: 342: memcpy(&TxBuffer[TxData], p_buff, size);
 10050  0062A2  0100               	movlb	0	; () banked
 10051  0062A4  51D8               	movf	_TxData& (0+255),w,b
 10052  0062A6  0D01               	mullw	1
 10053  0062A8  0E6C               	movlw	low _TxBuffer
 10054  0062AA  24F3               	addwf	prodl,w,c
 10055  0062AC  0100               	movlb	0	; () banked
 10056  0062AE  6F81               	movwf	memcpy@d1& (0+255),b
 10057  0062B0  0E01               	movlw	high _TxBuffer
 10058  0062B2  20F4               	addwfc	prodh,w,c
 10059  0062B4  0100               	movlb	0	; () banked
 10060  0062B6  6F82               	movwf	(memcpy@d1+1)& (0+255),b
 10061  0062B8  C1F4  F083         	movff	do_UPDATE@p_buff,memcpy@s1
 10062  0062BC  C1F5  F084         	movff	do_UPDATE@p_buff+1,memcpy@s1+1
 10063  0062C0  C1F6  F085         	movff	do_UPDATE@size,memcpy@n
 10064  0062C4  0100               	movlb	0	; () banked
 10065  0062C6  6B86               	clrf	(memcpy@n+1)& (0+255),b
 10066  0062C8  EC5F  F043         	call	_memcpy	;wreg free
 10067                           
 10068                           ;muta_messages.c: 343: TxData = TxData + size;
 10069  0062CC  0100               	movlb	0	; () banked
 10070  0062CE  51D8               	movf	_TxData& (0+255),w,b
 10071  0062D0  0101               	movlb	1	; () banked
 10072  0062D2  25F6               	addwf	do_UPDATE@size& (0+255),w,b
 10073  0062D4  0100               	movlb	0	; () banked
 10074  0062D6  6FD8               	movwf	_TxData& (0+255),b
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;muta_messages.c: 344: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 1);
 10078  0062D8  0EF8               	movlw	low do_UPDATE@shortaddress
 10079  0062DA  0101               	movlb	1	; () banked
 10080  0062DC  6FE8               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 10081  0062DE  0E01               	movlw	high do_UPDATE@shortaddress
 10082  0062E0  0101               	movlb	1	; () banked
 10083  0062E2  6FE9               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 10084  0062E4  0E00               	movlw	0
 10085  0062E6  0101               	movlb	1	; () banked
 10086  0062E8  6FEA               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 10087  0062EA  0E01               	movlw	1
 10088  0062EC  0101               	movlb	1	; () banked
 10089  0062EE  6FEB               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 10090  0062F0  ECA4  F020         	call	_MiApp_UnicastAddress	;wreg free
 10091  0062F4  0101               	movlb	1	; () banked
 10092  0062F6  6FFC               	movwf	do_UPDATE@result& (0+255),b
 10093                           
 10094                           ; BSR set to: 1
 10095                           ;muta_messages.c: 345: if (!result)
 10096  0062F8  0101               	movlb	1	; () banked
 10097  0062FA  51FC               	movf	do_UPDATE@result& (0+255),w,b
 10098  0062FC  0101               	movlb	1	; () banked
 10099  0062FE  A4D8               	btfss	status,2,c
 10100  006300  D009               	goto	l12338
 10101                           
 10102                           ; BSR set to: 1
 10103                           ;muta_messages.c: 346: {
 10104                           ;muta_messages.c: 347: m_failed_messages++;
 10105  006302  0E01               	movlw	1
 10106  006304  0101               	movlb	1	; () banked
 10107  006306  2742               	addwf	_m_failed_messages& (0+255),f,b
 10108  006308  0E00               	movlw	0
 10109  00630A  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 10110  00630C  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 10111  00630E  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 10112                           
 10113                           ; BSR set to: 1
 10114                           ;muta_messages.c: 348: return 0;
 10115  006310  0E00               	movlw	0
 10116                           
 10117                           ; BSR set to: 1
 10118  006312  0012               	return	
 10119  006314                     l12338:
 10120                           
 10121                           ; BSR set to: 1
 10122                           ;muta_messages.c: 349: }
 10123                           ;muta_messages.c: 350: if (ack_required)
 10124  006314  0101               	movlb	1	; () banked
 10125  006316  51F7               	movf	do_UPDATE@ack_required& (0+255),w,b
 10126  006318  0101               	movlb	1	; () banked
 10127  00631A  B4D8               	btfsc	status,2,c
 10128  00631C  D04A               	goto	l12374
 10129                           
 10130                           ; BSR set to: 1
 10131                           ;muta_messages.c: 351: {
 10132                           ;muta_messages.c: 352: unsigned int i;
 10133                           ;muta_messages.c: 353: result = 0;
 10134  00631E  0E00               	movlw	0
 10135  006320  0101               	movlb	1	; () banked
 10136  006322  6FFC               	movwf	do_UPDATE@result& (0+255),b
 10137                           
 10138                           ;muta_messages.c: 354: for (i=0; i<100; i++)
 10139  006324  0E00               	movlw	0
 10140  006326  0101               	movlb	1	; () banked
 10141  006328  6FFB               	movwf	(do_UPDATE@i+1)& (0+255),b
 10142  00632A  0E00               	movlw	0
 10143  00632C  6FFA               	movwf	do_UPDATE@i& (0+255),b
 10144  00632E                     l12342:
 10145                           
 10146                           ; BSR set to: 1
 10147  00632E  0101               	movlb	1	; () banked
 10148  006330  51FB               	movf	(do_UPDATE@i+1)& (0+255),w,b
 10149  006332  E128               	bnz	l12362
 10150  006334  0E64               	movlw	100
 10151  006336  0101               	movlb	1	; () banked
 10152  006338  5DFA               	subwf	do_UPDATE@i& (0+255),w,b
 10153  00633A  B0D8               	btfsc	status,0,c
 10154  00633C  D023               	goto	l12362
 10155                           
 10156                           ; BSR set to: 1
 10157                           ;muta_messages.c: 355: {
 10158                           ;muta_messages.c: 356: _delay((unsigned long)((10)*(8000000/4000.0)));
 10159                           
 10160                           ; BSR set to: 1
 10161                           
 10162                           ; BSR set to: 1
 10163  00633E  0E1A               	movlw	26
 10164  006340  0100               	movlb	0	; () banked
 10165  006342  6FD0               	movwf	??_do_UPDATE& (0+255),b
 10166  006344  0EF8               	movlw	248
 10167  006346                     u17627:
 10168  006346  2EE8               	decfsz	wreg,f,c
 10169  006348  D7FE               	goto	u17627
 10170  00634A  2FD0               	decfsz	??_do_UPDATE& (0+255),f,b
 10171  00634C  D7FC               	goto	u17627
 10172  00634E  D000               	nop2	
 10173                           
 10174                           ;muta_messages.c: 357: if(MiApp_MessageAvailable())
 10175  006350  EC07  F046         	call	_MiApp_MessageAvailable	;wreg free
 10176  006354  0900               	iorlw	0
 10177  006356  B4D8               	btfsc	status,2,c
 10178  006358  D011               	goto	l12358
 10179                           
 10180                           ;muta_messages.c: 358: {
 10181                           ;muta_messages.c: 360: last_rssi = rxMessage.PacketRSSI;
 10182  00635A  C134  F167         	movff	_rxMessage+8,_last_rssi
 10183                           
 10184                           ;muta_messages.c: 361: if (rxMessage.Payload[0] != 04)
 10185  00635E  C131  FFD9         	movff	_rxMessage+5,fsr2l
 10186  006362  C132  FFDA         	movff	_rxMessage+6,fsr2h
 10187  006366  0E04               	movlw	4
 10188  006368  18DE               	xorwf	postinc2,w,c
 10189  00636A  B4D8               	btfsc	status,2,c
 10190  00636C  D003               	goto	l12356
 10191                           
 10192                           ;muta_messages.c: 362: {
 10193                           ;muta_messages.c: 363: MiApp_DiscardMessage();
 10194  00636E  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
 10195                           
 10196                           ;muta_messages.c: 364: }
 10197  006372  D008               	goto	l12362
 10198  006374                     l12356:
 10199                           
 10200                           ;muta_messages.c: 365: else
 10201                           ;muta_messages.c: 366: result = 1;
 10202  006374  0E01               	movlw	1
 10203  006376  0101               	movlb	1	; () banked
 10204  006378  6FFC               	movwf	do_UPDATE@result& (0+255),b
 10205                           
 10206                           ; BSR set to: 1
 10207                           ;muta_messages.c: 369: break;
 10208  00637A  D004               	goto	l12362
 10209  00637C                     l12358:
 10210  00637C  0101               	movlb	1	; () banked
 10211  00637E  4BFA               	infsnz	do_UPDATE@i& (0+255),f,b
 10212  006380  2BFB               	incf	(do_UPDATE@i+1)& (0+255),f,b
 10213  006382  D7D5               	goto	l12342
 10214  006384                     l12362:
 10215                           
 10216                           ;muta_messages.c: 370: }
 10217                           ;muta_messages.c: 371: }
 10218                           ;muta_messages.c: 372: if (!result)
 10219  006384  0101               	movlb	1	; () banked
 10220  006386  51FC               	movf	do_UPDATE@result& (0+255),w,b
 10221  006388  0101               	movlb	1	; () banked
 10222  00638A  A4D8               	btfss	status,2,c
 10223  00638C  D008               	goto	l12366
 10224                           
 10225                           ; BSR set to: 1
 10226                           ;muta_messages.c: 373: m_failed_messages++;
 10227  00638E  0E01               	movlw	1
 10228  006390  0101               	movlb	1	; () banked
 10229  006392  2742               	addwf	_m_failed_messages& (0+255),f,b
 10230  006394  0E00               	movlw	0
 10231  006396  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 10232  006398  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 10233  00639A  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 10234  00639C  D007               	goto	l12368
 10235  00639E                     l12366:
 10236                           
 10237                           ; BSR set to: 1
 10238                           ;muta_messages.c: 374: else
 10239                           ;muta_messages.c: 375: m_sent_messages++;
 10240  00639E  0E01               	movlw	1
 10241  0063A0  0101               	movlb	1	; () banked
 10242  0063A2  2746               	addwf	_m_sent_messages& (0+255),f,b
 10243  0063A4  0E00               	movlw	0
 10244  0063A6  2347               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 10245  0063A8  2348               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 10246  0063AA  2349               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 10247  0063AC                     l12368:
 10248                           
 10249                           ; BSR set to: 1
 10250                           ;muta_messages.c: 376: return result;
 10251  0063AC  0101               	movlb	1	; () banked
 10252  0063AE  51FC               	movf	do_UPDATE@result& (0+255),w,b
 10253                           
 10254                           ; BSR set to: 1
 10255                           ;muta_messages.c: 377: }
 10256                           
 10257                           ; BSR set to: 1
 10258  0063B0  0012               	return	
 10259  0063B2                     l12374:
 10260                           
 10261                           ; BSR set to: 1
 10262                           ;muta_messages.c: 378: else
 10263                           ;muta_messages.c: 379: {
 10264                           ;muta_messages.c: 380: m_sent_messages++;
 10265  0063B2  0E01               	movlw	1
 10266  0063B4  0101               	movlb	1	; () banked
 10267  0063B6  2746               	addwf	_m_sent_messages& (0+255),f,b
 10268  0063B8  0E00               	movlw	0
 10269  0063BA  2347               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 10270  0063BC  2348               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 10271  0063BE  2349               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 10272                           
 10273                           ; BSR set to: 1
 10274                           ;muta_messages.c: 381: return 1;
 10275  0063C0  0E01               	movlw	1
 10276                           
 10277                           ; BSR set to: 1
 10278  0063C2  0012               	return	
 10279  0063C4                     __end_of_do_UPDATE:
 10280                           	opt stack 0
 10281                           tblptru	equ	0xFF8
 10282                           tblptrh	equ	0xFF7
 10283                           tblptrl	equ	0xFF6
 10284                           tablat	equ	0xFF5
 10285                           prodh	equ	0xFF4
 10286                           prodl	equ	0xFF3
 10287                           postinc0	equ	0xFEE
 10288                           plusw0	equ	0xFEB
 10289                           wreg	equ	0xFE8
 10290                           indf1	equ	0xFE7
 10291                           fsr1h	equ	0xFE2
 10292                           fsr1l	equ	0xFE1
 10293                           indf2	equ	0xFDF
 10294                           postinc2	equ	0xFDE
 10295                           postdec2	equ	0xFDD
 10296                           plusw2	equ	0xFDB
 10297                           fsr2h	equ	0xFDA
 10298                           fsr2l	equ	0xFD9
 10299                           status	equ	0xFD8
 10300                           
 10301 ;; *************** function _decode_variable *****************
 10302 ;; Defined at:
 10303 ;;		line 120 in file "../../muta/muta_messages.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;  p_buffer        2   43[BANK0 ] PTR unsigned char 
 10306 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;  var             9   54[BANK0 ] struct .
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  9   43[BANK0 ] struct .
 10311 ;; Registers used:
 10312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10318 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10319 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10320 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10321 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10322 ;;Total ram usage:       20 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:    8
 10325 ;; This function calls:
 10326 ;;		_memcpy
 10327 ;; This function is called by:
 10328 ;;		_process_update_answer
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           	psect	text31
 10333  0077BC                     __ptext31:
 10334                           	opt stack 0
 10335  0077BC                     _decode_variable:
 10336                           	opt stack 21
 10337                           
 10338                           ;muta_messages.c: 122: MUTA_VARIABLE var;
 10339                           ;muta_messages.c: 123: memcpy(var.label, p_buffer, 3);
 10340                           
 10341                           ; BSR set to: 1
 10342                           ;incstack = 0
 10343  0077BC  0E96               	movlw	low decode_variable@var
 10344  0077BE  0100               	movlb	0	; () banked
 10345  0077C0  6F81               	movwf	memcpy@d1& (0+255),b
 10346  0077C2  0E00               	movlw	high decode_variable@var
 10347  0077C4  0100               	movlb	0	; () banked
 10348  0077C6  6F82               	movwf	(memcpy@d1+1)& (0+255),b
 10349  0077C8  C08B  F083         	movff	decode_variable@p_buffer,memcpy@s1
 10350  0077CC  C08C  F084         	movff	decode_variable@p_buffer+1,memcpy@s1+1
 10351  0077D0  0E00               	movlw	0
 10352  0077D2  0100               	movlb	0	; () banked
 10353  0077D4  6F86               	movwf	(memcpy@n+1)& (0+255),b
 10354  0077D6  0E03               	movlw	3
 10355  0077D8  6F85               	movwf	memcpy@n& (0+255),b
 10356  0077DA  EC5F  F043         	call	_memcpy	;wreg free
 10357                           
 10358                           ;muta_messages.c: 124: p_buffer += 3;
 10359  0077DE  0E03               	movlw	3
 10360  0077E0  0100               	movlb	0	; () banked
 10361  0077E2  278B               	addwf	decode_variable@p_buffer& (0+255),f,b
 10362  0077E4  0E00               	movlw	0
 10363  0077E6  238C               	addwfc	(decode_variable@p_buffer+1)& (0+255),f,b
 10364                           
 10365                           ; BSR set to: 0
 10366                           ;muta_messages.c: 126: var.unit = *p_buffer & 0b00000111;
 10367  0077E8  C08B  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10368  0077EC  C08C  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10369  0077F0  50DF               	movf	indf2,w,c
 10370  0077F2  0B07               	andlw	7
 10371  0077F4  0100               	movlb	0	; () banked
 10372  0077F6  6F9C               	movwf	(decode_variable@var+6)& (0+255),b
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;muta_messages.c: 127: if (*p_buffer & 0b00010000)
 10376  0077F8  C08B  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10377  0077FC  C08C  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10378  007800  0100               	movlb	0	; () banked
 10379  007802  A8DF               	btfss	indf2,4,c
 10380  007804  D002               	goto	l12858
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;muta_messages.c: 128: var.writable = 1;
 10384  007806  0E01               	movlw	1
 10385  007808  D001               	goto	L8
 10386  00780A                     l12858:
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;muta_messages.c: 129: else
 10390                           ;muta_messages.c: 130: var.writable = 0;
 10391  00780A  0E00               	movlw	0
 10392  00780C                     L8:
 10393  00780C  0100               	movlb	0	; () banked
 10394  00780E  6F9D               	movwf	(decode_variable@var+7)& (0+255),b
 10395                           
 10396                           ; BSR set to: 0
 10397                           ;muta_messages.c: 131: var.type = (*p_buffer++ & 0b11100000) >> 5;
 10398                           
 10399                           ; BSR set to: 0
 10400  007810  C08B  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10401  007814  C08C  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10402  007818  50DF               	movf	indf2,w,c
 10403  00781A  0100               	movlb	0	; () banked
 10404  00781C  6F94               	movwf	??_decode_variable& (0+255),b
 10405  00781E  0E05               	movlw	5
 10406  007820  0100               	movlb	0	; () banked
 10407  007822  6F95               	movwf	(??_decode_variable+1)& (0+255),b
 10408  007824                     u14905:
 10409  007824  0100               	movlb	0	; () banked
 10410  007826  90D8               	bcf	status,0,c
 10411  007828  3394               	rrcf	??_decode_variable& (0+255),f,b
 10412  00782A  0100               	movlb	0	; () banked
 10413  00782C  2F95               	decfsz	(??_decode_variable+1)& (0+255),f,b
 10414  00782E  D7FA               	goto	u14905
 10415  007830  0100               	movlb	0	; () banked
 10416  007832  5194               	movf	??_decode_variable& (0+255),w,b
 10417  007834  0B07               	andlw	7
 10418  007836  0100               	movlb	0	; () banked
 10419  007838  6F99               	movwf	(decode_variable@var+3)& (0+255),b
 10420                           
 10421                           ; BSR set to: 0
 10422  00783A  0100               	movlb	0	; () banked
 10423  00783C  4B8B               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10424  00783E  2B8C               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;muta_messages.c: 132: var.value_byte1 = *p_buffer++;
 10428  007840  C08B  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10429  007844  C08C  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10430  007848  50DF               	movf	indf2,w,c
 10431  00784A  0100               	movlb	0	; () banked
 10432  00784C  6F9A               	movwf	(decode_variable@var+4)& (0+255),b
 10433                           
 10434                           ; BSR set to: 0
 10435  00784E  0100               	movlb	0	; () banked
 10436  007850  4B8B               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10437  007852  2B8C               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10438                           
 10439                           ;muta_messages.c: 133: if ((var.type == 1) || (var.type == 2))
 10440  007854  0100               	movlb	0	; () banked
 10441  007856  0599               	decf	(decode_variable@var+3)& (0+255),w,b
 10442  007858  B4D8               	btfsc	status,2,c
 10443  00785A  D005               	goto	l12870
 10444                           
 10445                           ; BSR set to: 0
 10446  00785C  0E02               	movlw	2
 10447  00785E  0100               	movlb	0	; () banked
 10448  007860  1999               	xorwf	(decode_variable@var+3)& (0+255),w,b
 10449  007862  A4D8               	btfss	status,2,c
 10450  007864  D00C               	goto	l12876
 10451  007866                     l12870:
 10452                           
 10453                           ; BSR set to: 0
 10454                           ;muta_messages.c: 134: {
 10455                           ;muta_messages.c: 135: var.value_byte2 = *p_buffer++;
 10456  007866  C08B  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10457  00786A  C08C  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10458  00786E  50DF               	movf	indf2,w,c
 10459  007870  0100               	movlb	0	; () banked
 10460  007872  6F9B               	movwf	(decode_variable@var+5)& (0+255),b
 10461                           
 10462                           ; BSR set to: 0
 10463  007874  0100               	movlb	0	; () banked
 10464  007876  4B8B               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10465  007878  2B8C               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;muta_messages.c: 136: var.size = 6;
 10469  00787A  0E06               	movlw	6
 10470  00787C  D001               	goto	L9
 10471  00787E                     l12876:
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;muta_messages.c: 138: else
 10475                           ;muta_messages.c: 139: var.size = 5;
 10476  00787E  0E05               	movlw	5
 10477  007880                     L9:
 10478  007880  0100               	movlb	0	; () banked
 10479  007882  6F9E               	movwf	(decode_variable@var+8)& (0+255),b
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;muta_messages.c: 140: return var;
 10483                           
 10484                           ; BSR set to: 0
 10485  007884  EE20  F096         	lfsr	2,decode_variable@var
 10486  007888  EE00  F08B         	lfsr	0,?_decode_variable
 10487  00788C  0E08               	movlw	8
 10488  00788E                     u14931:
 10489  00788E  CFDB FFEB          	movff	plusw2,plusw0
 10490  007892  06E8               	decf	wreg,f,c
 10491  007894  E2FC               	bc	u14931
 10492  007896  0012               	return	
 10493  007898                     __end_of_decode_variable:
 10494                           	opt stack 0
 10495                           tblptru	equ	0xFF8
 10496                           tblptrh	equ	0xFF7
 10497                           tblptrl	equ	0xFF6
 10498                           tablat	equ	0xFF5
 10499                           prodh	equ	0xFF4
 10500                           prodl	equ	0xFF3
 10501                           postinc0	equ	0xFEE
 10502                           plusw0	equ	0xFEB
 10503                           wreg	equ	0xFE8
 10504                           indf1	equ	0xFE7
 10505                           fsr1h	equ	0xFE2
 10506                           fsr1l	equ	0xFE1
 10507                           indf2	equ	0xFDF
 10508                           postinc2	equ	0xFDE
 10509                           postdec2	equ	0xFDD
 10510                           plusw2	equ	0xFDB
 10511                           fsr2h	equ	0xFDA
 10512                           fsr2l	equ	0xFD9
 10513                           status	equ	0xFD8
 10514                           
 10515 ;; *************** function _MiApp_TransceiverPowerState *****************
 10516 ;; Defined at:
 10517 ;;		line 3805 in file "src/miwi/miwi_mesh.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  Mode            1    wreg     unsigned char 
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;  Mode            1   53[BANK0 ] unsigned char 
 10522 ;;  status          1    0        unsigned char 
 10523 ;; Return value:  Size  Location     Type
 10524 ;;                  1    wreg      unsigned char 
 10525 ;; Registers used:
 10526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10527 ;; Tracked objects:
 10528 ;;		On entry : 0/0
 10529 ;;		On exit  : 0/0
 10530 ;;		Unchanged: 0/0
 10531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10535 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10536 ;;Total ram usage:        1 bytes
 10537 ;; Hardware stack levels used:    1
 10538 ;; Hardware stack levels required when called:   11
 10539 ;; This function calls:
 10540 ;;		_MiMAC_PowerState
 10541 ;; This function is called by:
 10542 ;;		_main
 10543 ;;		_process_update_answer
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547                           	psect	text32
 10548  00897C                     __ptext32:
 10549                           	opt stack 0
 10550  00897C                     _MiApp_TransceiverPowerState:
 10551                           	opt stack 18
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;incstack = 0
 10555                           ;MiApp_TransceiverPowerState@Mode stored from wreg
 10556  00897C  0100               	movlb	0	; () banked
 10557  00897E  6F95               	movwf	MiApp_TransceiverPowerState@Mode& (0+255),b
 10558                           
 10559                           ;miwi_mesh.c: 3807: uint8_t status;
 10560                           ;miwi_mesh.c: 3809: switch(Mode)
 10561  008980  D012               	goto	l12772
 10562  008982                     l12762:
 10563                           
 10564                           ;miwi_mesh.c: 3812: {
 10565                           ;miwi_mesh.c: 3820: if( MiMAC_PowerState(0x00) )
 10566  008982  0E00               	movlw	0
 10567  008984  ECE1  F041         	call	_MiMAC_PowerState
 10568  008988  0900               	iorlw	0
 10569  00898A  B4D8               	btfsc	status,2,c
 10570  00898C  0012               	return	
 10571                           
 10572                           ;miwi_mesh.c: 3821: {
 10573                           ;miwi_mesh.c: 3822: MiWiStateMachine.bits.Sleeping = 1;
 10574  00898E  0100               	movlb	0	; () banked
 10575  008990  81D5               	bsf	(_MiWiStateMachine+1)& (0+255),0,b
 10576                           
 10577                           ; BSR set to: 0
 10578                           ;miwi_mesh.c: 3824: }
 10579                           ;miwi_mesh.c: 3825: return 0x01;
 10580                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10581                           
 10582                           ;miwi_mesh.c: 3823: return 0x00;
 10583                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10584  008992  0012               	return	
 10585  008994                     l12766:
 10586                           
 10587                           ; BSR set to: 0
 10588                           ;miwi_mesh.c: 3829: {
 10589                           ;miwi_mesh.c: 3830: if( MiMAC_PowerState(0xFF) )
 10590  008994  0EFF               	movlw	255
 10591  008996  ECE1  F041         	call	_MiMAC_PowerState
 10592  00899A  0900               	iorlw	0
 10593  00899C  B4D8               	btfsc	status,2,c
 10594  00899E  0012               	return	
 10595                           
 10596                           ;miwi_mesh.c: 3831: {
 10597                           ;miwi_mesh.c: 3832: MiWiStateMachine.bits.Sleeping = 0;
 10598  0089A0  0100               	movlb	0	; () banked
 10599  0089A2  91D5               	bcf	(_MiWiStateMachine+1)& (0+255),0,b
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;miwi_mesh.c: 3860: }
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;miwi_mesh.c: 3859: break;
 10606                           
 10607                           ;miwi_mesh.c: 3836: }
 10608                           ;miwi_mesh.c: 3858: default:
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;miwi_mesh.c: 3834: }
 10612                           ;miwi_mesh.c: 3835: return 0x01;
 10613                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10614                           
 10615                           ;miwi_mesh.c: 3833: return 0x00;
 10616                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10617  0089A4  0012               	return	
 10618  0089A6                     l12772:
 10619  0089A6  0100               	movlb	0	; () banked
 10620  0089A8  5195               	movf	MiApp_TransceiverPowerState@Mode& (0+255),w,b
 10621                           
 10622                           ; Switch size 1, requested type "space"
 10623                           ; Number of cases is 2, Range of values is 0 to 1
 10624                           ; switch strategies available:
 10625                           ; Name         Instructions Cycles
 10626                           ; simple_byte            7     4 (average)
 10627                           ;	Chosen strategy is simple_byte
 10628  0089AA  0A00               	xorlw	0	; case 0
 10629  0089AC  B4D8               	btfsc	status,2,c
 10630  0089AE  D7E9               	goto	l12762
 10631  0089B0  0A01               	xorlw	1	; case 1
 10632  0089B2  A4D8               	btfss	status,2,c
 10633  0089B4  0012               	return	
 10634  0089B6  D7EE               	goto	l12766
 10635  0089B8                     __end_of_MiApp_TransceiverPowerState:
 10636                           	opt stack 0
 10637                           tblptru	equ	0xFF8
 10638                           tblptrh	equ	0xFF7
 10639                           tblptrl	equ	0xFF6
 10640                           tablat	equ	0xFF5
 10641                           prodh	equ	0xFF4
 10642                           prodl	equ	0xFF3
 10643                           postinc0	equ	0xFEE
 10644                           plusw0	equ	0xFEB
 10645                           wreg	equ	0xFE8
 10646                           indf1	equ	0xFE7
 10647                           fsr1h	equ	0xFE2
 10648                           fsr1l	equ	0xFE1
 10649                           indf2	equ	0xFDF
 10650                           postinc2	equ	0xFDE
 10651                           postdec2	equ	0xFDD
 10652                           plusw2	equ	0xFDB
 10653                           fsr2h	equ	0xFDA
 10654                           fsr2l	equ	0xFD9
 10655                           status	equ	0xFD8
 10656                           
 10657 ;; *************** function _MiMAC_PowerState *****************
 10658 ;; Defined at:
 10659 ;;		line 1174 in file "src/miwi/drv_mrf_miwi_89xa.c"
 10660 ;; Parameters:    Size  Location     Type
 10661 ;;  PowerState      1    wreg     unsigned char 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  PowerState      1   51[BANK0 ] unsigned char 
 10664 ;;  i               1   52[BANK0 ] unsigned char 
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  1    wreg      unsigned char 
 10667 ;; Registers used:
 10668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10675 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10678 ;;Total ram usage:        2 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; Hardware stack levels required when called:   10
 10681 ;; This function calls:
 10682 ;;		_DELAY_ms
 10683 ;;		_SetRFMode
 10684 ;; This function is called by:
 10685 ;;		_MiApp_TransceiverPowerState
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           	psect	text33
 10690  0083C2                     __ptext33:
 10691                           	opt stack 0
 10692  0083C2                     _MiMAC_PowerState:
 10693                           	opt stack 18
 10694                           
 10695                           ;incstack = 0
 10696                           ;MiMAC_PowerState@PowerState stored from wreg
 10697  0083C2  0100               	movlb	0	; () banked
 10698  0083C4  6F93               	movwf	MiMAC_PowerState@PowerState& (0+255),b
 10699                           
 10700                           ;drv_mrf_miwi_89xa.c: 1176: switch(PowerState)
 10701  0083C6  D02D               	goto	l12252
 10702  0083C8                     l12222:
 10703                           
 10704                           ;drv_mrf_miwi_89xa.c: 1179: {
 10705                           ;drv_mrf_miwi_89xa.c: 1180: SetRFMode(0x00);
 10706  0083C8  0E00               	movlw	0
 10707  0083CA  EC18  F040         	call	_SetRFMode
 10708                           
 10709                           ;drv_mrf_miwi_89xa.c: 1182: INTCONbits.INT0IE = 0;
 10710  0083CE  98F2               	bcf	intcon,4,c	;volatile
 10711                           
 10712                           ;drv_mrf_miwi_89xa.c: 1184: INTCON3bits.INT1IE = 0;
 10713  0083D0  96F0               	bcf	intcon3,3,c	;volatile
 10714                           
 10715                           ;drv_mrf_miwi_89xa.c: 1185: }
 10716                           ;drv_mrf_miwi_89xa.c: 1186: break;
 10717  0083D2  D030               	goto	l12254
 10718  0083D4                     l12228:
 10719                           
 10720                           ;drv_mrf_miwi_89xa.c: 1189: {
 10721                           ;drv_mrf_miwi_89xa.c: 1190: uint8_t i;
 10722                           ;drv_mrf_miwi_89xa.c: 1192: SetRFMode(0x20);
 10723  0083D4  0E20               	movlw	32
 10724  0083D6  EC18  F040         	call	_SetRFMode
 10725                           
 10726                           ;drv_mrf_miwi_89xa.c: 1193: SetRFMode(0x60);
 10727  0083DA  0E60               	movlw	96
 10728  0083DC  EC18  F040         	call	_SetRFMode
 10729                           
 10730                           ;drv_mrf_miwi_89xa.c: 1195: INTCONbits.INT0IE = 1;
 10731  0083E0  88F2               	bsf	intcon,4,c	;volatile
 10732                           
 10733                           ;drv_mrf_miwi_89xa.c: 1197: INTCON3bits.INT1IE = 1;
 10734  0083E2  86F0               	bsf	intcon3,3,c	;volatile
 10735                           
 10736                           ;drv_mrf_miwi_89xa.c: 1198: DELAY_ms(10);
 10737  0083E4  0E00               	movlw	0
 10738  0083E6  0100               	movlb	0	; () banked
 10739  0083E8  6F8E               	movwf	(DELAY_ms@ms+1)& (0+255),b
 10740  0083EA  0E0A               	movlw	10
 10741  0083EC  6F8D               	movwf	DELAY_ms@ms& (0+255),b
 10742  0083EE  EC90  F03E         	call	_DELAY_ms	;wreg free
 10743                           
 10744                           ;drv_mrf_miwi_89xa.c: 1200: for(i = 0; i < 5; i++)
 10745  0083F2  0E00               	movlw	0
 10746  0083F4  0100               	movlb	0	; () banked
 10747  0083F6  6F94               	movwf	MiMAC_PowerState@i& (0+255),b
 10748  0083F8                     l12236:
 10749                           
 10750                           ; BSR set to: 0
 10751  0083F8  0E04               	movlw	4
 10752  0083FA  0100               	movlb	0	; () banked
 10753  0083FC  6594               	cpfsgt	MiMAC_PowerState@i& (0+255),b
 10754  0083FE  D001               	goto	l12240
 10755  008400  D019               	goto	l12254
 10756  008402                     l12240:
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;drv_mrf_miwi_89xa.c: 1201: {
 10760                           ;drv_mrf_miwi_89xa.c: 1202: AckInfo[i].Valid = 0;
 10761  008402  0100               	movlb	0	; () banked
 10762  008404  5194               	movf	MiMAC_PowerState@i& (0+255),w,b
 10763  008406  0D06               	mullw	6
 10764  008408  0E28               	movlw	low _AckInfo
 10765  00840A  24F3               	addwf	prodl,w,c
 10766  00840C  6ED9               	movwf	fsr2l,c
 10767  00840E  0E02               	movlw	high _AckInfo
 10768  008410  20F4               	addwfc	prodh,w,c
 10769  008412  6EDA               	movwf	fsr2h,c
 10770  008414  0E00               	movlw	0
 10771  008416  6EDF               	movwf	indf2,c
 10772                           
 10773                           ; BSR set to: 0
 10774  008418  0100               	movlb	0	; () banked
 10775  00841A  2B94               	incf	MiMAC_PowerState@i& (0+255),f,b
 10776  00841C  D7ED               	goto	l12236
 10777  00841E                     l12246:
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;drv_mrf_miwi_89xa.c: 1209: return 0;
 10781  00841E  0E00               	movlw	0
 10782                           
 10783                           ; BSR set to: 0
 10784  008420  0012               	return	
 10785  008422                     l12252:
 10786  008422  0100               	movlb	0	; () banked
 10787  008424  5193               	movf	MiMAC_PowerState@PowerState& (0+255),w,b
 10788                           
 10789                           ; Switch size 1, requested type "space"
 10790                           ; Number of cases is 2, Range of values is 0 to 255
 10791                           ; switch strategies available:
 10792                           ; Name         Instructions Cycles
 10793                           ; simple_byte            7     4 (average)
 10794                           ;	Chosen strategy is simple_byte
 10795  008426  0A00               	xorlw	0	; case 0
 10796  008428  B4D8               	btfsc	status,2,c
 10797  00842A  D7CE               	goto	l12222
 10798  00842C  0AFF               	xorlw	255	; case 255
 10799  00842E  B4D8               	btfsc	status,2,c
 10800  008430  D7D1               	goto	l12228
 10801  008432  D7F5               	goto	l12246
 10802  008434                     l12254:
 10803                           
 10804                           ;drv_mrf_miwi_89xa.c: 1211: return 1;
 10805  008434  0E01               	movlw	1
 10806  008436  0012               	return	
 10807  008438                     __end_of_MiMAC_PowerState:
 10808                           	opt stack 0
 10809                           tblptru	equ	0xFF8
 10810                           tblptrh	equ	0xFF7
 10811                           tblptrl	equ	0xFF6
 10812                           tablat	equ	0xFF5
 10813                           prodh	equ	0xFF4
 10814                           prodl	equ	0xFF3
 10815                           intcon	equ	0xFF2
 10816                           intcon3	equ	0xFF0
 10817                           postinc0	equ	0xFEE
 10818                           plusw0	equ	0xFEB
 10819                           wreg	equ	0xFE8
 10820                           indf1	equ	0xFE7
 10821                           fsr1h	equ	0xFE2
 10822                           fsr1l	equ	0xFE1
 10823                           indf2	equ	0xFDF
 10824                           postinc2	equ	0xFDE
 10825                           postdec2	equ	0xFDD
 10826                           plusw2	equ	0xFDB
 10827                           fsr2h	equ	0xFDA
 10828                           fsr2l	equ	0xFD9
 10829                           status	equ	0xFD8
 10830                           
 10831 ;; *************** function _do_NETWORK_REGISTER *****************
 10832 ;; Defined at:
 10833 ;;		line 146 in file "../../muta/muta_messages.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;  p_uid           2   33[BANK1 ] PTR unsigned char 
 10836 ;;		 -> myLongAddress(4), 
 10837 ;;  sleeping_dev    1   35[BANK1 ] unsigned char 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  i               2   38[BANK1 ] unsigned int 
 10840 ;;  shortaddress    2   36[BANK1 ] unsigned char [2]
 10841 ;;  result          1   40[BANK1 ] unsigned char 
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      unsigned char 
 10844 ;; Registers used:
 10845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10851 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10852 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10854 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10855 ;;Total ram usage:        9 bytes
 10856 ;; Hardware stack levels used:    1
 10857 ;; Hardware stack levels required when called:   15
 10858 ;; This function calls:
 10859 ;;		_MiApp_DiscardMessage
 10860 ;;		_MiApp_MessageAvailable
 10861 ;;		_MiApp_UnicastAddress
 10862 ;;		_memcpy
 10863 ;; This function is called by:
 10864 ;;		_main
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           	psect	text34
 10869  0060B0                     __ptext34:
 10870                           	opt stack 0
 10871  0060B0                     _do_NETWORK_REGISTER:
 10872                           	opt stack 15
 10873                           
 10874                           ;muta_messages.c: 148: uint8_t shortaddress[2] = { 0x00, 0x00 };
 10875                           
 10876                           ;incstack = 0
 10877  0060B0  C160  F1F7         	movff	do_NETWORK_REGISTER@F10202,do_NETWORK_REGISTER@shortaddress
 10878  0060B4  C161  F1F8         	movff	do_NETWORK_REGISTER@F10202+1,do_NETWORK_REGISTER@shortaddress+1
 10879                           
 10880                           ;muta_messages.c: 149: {TxData = 11;};
 10881  0060B8  0E0B               	movlw	11
 10882  0060BA  0100               	movlb	0	; () banked
 10883  0060BC  6FD8               	movwf	_TxData& (0+255),b
 10884                           
 10885                           ; BSR set to: 0
 10886                           ;muta_messages.c: 150: TxBuffer[TxData++] = 02;
 10887  0060BE  0100               	movlb	0	; () banked
 10888  0060C0  51D8               	movf	_TxData& (0+255),w,b
 10889  0060C2  0D01               	mullw	1
 10890  0060C4  0E6C               	movlw	low _TxBuffer
 10891  0060C6  24F3               	addwf	prodl,w,c
 10892  0060C8  6ED9               	movwf	fsr2l,c
 10893  0060CA  0E01               	movlw	high _TxBuffer
 10894  0060CC  20F4               	addwfc	prodh,w,c
 10895  0060CE  6EDA               	movwf	fsr2h,c
 10896  0060D0  0E02               	movlw	2
 10897  0060D2  6EDF               	movwf	indf2,c
 10898                           
 10899                           ; BSR set to: 0
 10900  0060D4  0100               	movlb	0	; () banked
 10901  0060D6  2BD8               	incf	_TxData& (0+255),f,b
 10902                           
 10903                           ; BSR set to: 0
 10904                           ;muta_messages.c: 151: memcpy(&TxBuffer[TxData], p_uid, 4);
 10905  0060D8  0100               	movlb	0	; () banked
 10906  0060DA  51D8               	movf	_TxData& (0+255),w,b
 10907  0060DC  0D01               	mullw	1
 10908  0060DE  0E6C               	movlw	low _TxBuffer
 10909  0060E0  24F3               	addwf	prodl,w,c
 10910  0060E2  0100               	movlb	0	; () banked
 10911  0060E4  6F81               	movwf	memcpy@d1& (0+255),b
 10912  0060E6  0E01               	movlw	high _TxBuffer
 10913  0060E8  20F4               	addwfc	prodh,w,c
 10914  0060EA  0100               	movlb	0	; () banked
 10915  0060EC  6F82               	movwf	(memcpy@d1+1)& (0+255),b
 10916  0060EE  C1F4  F083         	movff	do_NETWORK_REGISTER@p_uid,memcpy@s1
 10917  0060F2  C1F5  F084         	movff	do_NETWORK_REGISTER@p_uid+1,memcpy@s1+1
 10918  0060F6  0E00               	movlw	0
 10919  0060F8  0100               	movlb	0	; () banked
 10920  0060FA  6F86               	movwf	(memcpy@n+1)& (0+255),b
 10921  0060FC  0E04               	movlw	4
 10922  0060FE  6F85               	movwf	memcpy@n& (0+255),b
 10923  006100  EC5F  F043         	call	_memcpy	;wreg free
 10924                           
 10925                           ;muta_messages.c: 152: TxData = TxData + 4;
 10926  006104  0100               	movlb	0	; () banked
 10927  006106  51D8               	movf	_TxData& (0+255),w,b
 10928  006108  0F04               	addlw	4
 10929  00610A  0100               	movlb	0	; () banked
 10930  00610C  6FD8               	movwf	_TxData& (0+255),b
 10931                           
 10932                           ; BSR set to: 0
 10933                           ;muta_messages.c: 153: TxBuffer[TxData++] = sleeping_device;
 10934  00610E  0100               	movlb	0	; () banked
 10935  006110  51D8               	movf	_TxData& (0+255),w,b
 10936  006112  0D01               	mullw	1
 10937  006114  0E6C               	movlw	low _TxBuffer
 10938  006116  24F3               	addwf	prodl,w,c
 10939  006118  6ED9               	movwf	fsr2l,c
 10940  00611A  0E01               	movlw	high _TxBuffer
 10941  00611C  20F4               	addwfc	prodh,w,c
 10942  00611E  6EDA               	movwf	fsr2h,c
 10943  006120  C1F6  FFDF         	movff	do_NETWORK_REGISTER@sleeping_device,indf2
 10944                           
 10945                           ; BSR set to: 0
 10946  006124  0100               	movlb	0	; () banked
 10947  006126  2BD8               	incf	_TxData& (0+255),f,b
 10948                           
 10949                           ; BSR set to: 0
 10950                           ;muta_messages.c: 154: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 0);
 10951  006128  0EF7               	movlw	low do_NETWORK_REGISTER@shortaddress
 10952  00612A  0101               	movlb	1	; () banked
 10953  00612C  6FE8               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 10954  00612E  0E01               	movlw	high do_NETWORK_REGISTER@shortaddress
 10955  006130  0101               	movlb	1	; () banked
 10956  006132  6FE9               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 10957  006134  0E00               	movlw	0
 10958  006136  0101               	movlb	1	; () banked
 10959  006138  6FEA               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 10960  00613A  0E00               	movlw	0
 10961  00613C  0101               	movlb	1	; () banked
 10962  00613E  6FEB               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 10963  006140  ECA4  F020         	call	_MiApp_UnicastAddress	;wreg free
 10964  006144  0101               	movlb	1	; () banked
 10965  006146  6FFB               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 10966                           
 10967                           ; BSR set to: 1
 10968                           ;muta_messages.c: 155: if (!result)
 10969  006148  0101               	movlb	1	; () banked
 10970  00614A  51FB               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 10971  00614C  0101               	movlb	1	; () banked
 10972  00614E  A4D8               	btfss	status,2,c
 10973  006150  D009               	goto	l13954
 10974                           
 10975                           ; BSR set to: 1
 10976                           ;muta_messages.c: 156: {
 10977                           ;muta_messages.c: 157: m_failed_messages++;
 10978  006152  0E01               	movlw	1
 10979  006154  0101               	movlb	1	; () banked
 10980  006156  2742               	addwf	_m_failed_messages& (0+255),f,b
 10981  006158  0E00               	movlw	0
 10982  00615A  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 10983  00615C  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 10984  00615E  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 10985                           
 10986                           ; BSR set to: 1
 10987                           ;muta_messages.c: 158: return 0;
 10988  006160  0E00               	movlw	0
 10989                           
 10990                           ; BSR set to: 1
 10991                           ;muta_messages.c: 159: }
 10992                           
 10993                           ; BSR set to: 1
 10994  006162  0012               	return	
 10995  006164                     l13954:
 10996                           
 10997                           ; BSR set to: 1
 10998                           ;muta_messages.c: 160: else
 10999                           ;muta_messages.c: 161: {
 11000                           ;muta_messages.c: 162: unsigned int i;
 11001                           ;muta_messages.c: 163: result = 0;
 11002  006164  0E00               	movlw	0
 11003  006166  0101               	movlb	1	; () banked
 11004  006168  6FFB               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 11005                           
 11006                           ;muta_messages.c: 164: for (i=0; i<100; i++)
 11007  00616A  0E00               	movlw	0
 11008  00616C  0101               	movlb	1	; () banked
 11009  00616E  6FFA               	movwf	(do_NETWORK_REGISTER@i+1)& (0+255),b
 11010  006170  0E00               	movlw	0
 11011  006172  6FF9               	movwf	do_NETWORK_REGISTER@i& (0+255),b
 11012  006174                     l13956:
 11013                           
 11014                           ; BSR set to: 1
 11015  006174  0101               	movlb	1	; () banked
 11016  006176  51FA               	movf	(do_NETWORK_REGISTER@i+1)& (0+255),w,b
 11017  006178  E14A               	bnz	l13978
 11018  00617A  0E64               	movlw	100
 11019  00617C  0101               	movlb	1	; () banked
 11020  00617E  5DF9               	subwf	do_NETWORK_REGISTER@i& (0+255),w,b
 11021  006180  B0D8               	btfsc	status,0,c
 11022  006182  D045               	goto	l13978
 11023                           
 11024                           ; BSR set to: 1
 11025                           ;muta_messages.c: 165: {
 11026                           ;muta_messages.c: 166: _delay((unsigned long)((10)*(8000000/4000.0)));
 11027                           
 11028                           ; BSR set to: 1
 11029                           
 11030                           ; BSR set to: 1
 11031  006184  0E1A               	movlw	26
 11032  006186  0100               	movlb	0	; () banked
 11033  006188  6FD0               	movwf	??_do_NETWORK_REGISTER& (0+255),b
 11034  00618A  0EF8               	movlw	248
 11035  00618C                     u17637:
 11036  00618C  2EE8               	decfsz	wreg,f,c
 11037  00618E  D7FE               	goto	u17637
 11038  006190  2FD0               	decfsz	??_do_NETWORK_REGISTER& (0+255),f,b
 11039  006192  D7FC               	goto	u17637
 11040  006194  D000               	nop2	
 11041                           
 11042                           ;muta_messages.c: 167: if(MiApp_MessageAvailable())
 11043  006196  EC07  F046         	call	_MiApp_MessageAvailable	;wreg free
 11044  00619A  0900               	iorlw	0
 11045  00619C  B4D8               	btfsc	status,2,c
 11046  00619E  D033               	goto	l13974
 11047                           
 11048                           ;muta_messages.c: 168: {
 11049                           ;muta_messages.c: 170: last_rssi = rxMessage.PacketRSSI;
 11050  0061A0  C134  F167         	movff	_rxMessage+8,_last_rssi
 11051                           
 11052                           ;muta_messages.c: 171: if (rxMessage.Payload[0] != 02)
 11053  0061A4  C131  FFD9         	movff	_rxMessage+5,fsr2l
 11054  0061A8  C132  FFDA         	movff	_rxMessage+6,fsr2h
 11055  0061AC  0E02               	movlw	2
 11056  0061AE  18DE               	xorwf	postinc2,w,c
 11057  0061B0  B4D8               	btfsc	status,2,c
 11058  0061B2  D003               	goto	l13970
 11059                           
 11060                           ;muta_messages.c: 172: {
 11061                           ;muta_messages.c: 173: MiApp_DiscardMessage();
 11062  0061B4  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
 11063                           
 11064                           ;muta_messages.c: 174: }
 11065  0061B8  D026               	goto	l13974
 11066  0061BA                     l13970:
 11067                           
 11068                           ;muta_messages.c: 175: else
 11069                           ;muta_messages.c: 176: {
 11070                           ;muta_messages.c: 177: result = (rxMessage.Payload[1] == 0xff);
 11071  0061BA  0101               	movlb	1	; () banked
 11072  0061BC  EE20 F001          	lfsr	2,1
 11073  0061C0  5131               	movf	(_rxMessage+5)& (0+255),w,b
 11074  0061C2  26D9               	addwf	fsr2l,f,c
 11075  0061C4  5132               	movf	(_rxMessage+6)& (0+255),w,b
 11076  0061C6  22DA               	addwfc	fsr2h,f,c
 11077  0061C8  28DE               	incf	postinc2,w,c
 11078  0061CA  A4D8               	btfss	status,2,c
 11079  0061CC  D002               	goto	u16300
 11080  0061CE  0E01               	movlw	1
 11081  0061D0  D001               	goto	u16310
 11082  0061D2                     u16300:
 11083  0061D2  0E00               	movlw	0
 11084  0061D4                     u16310:
 11085  0061D4  0101               	movlb	1	; () banked
 11086  0061D6  6FFB               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 11087                           
 11088                           ;muta_messages.c: 178: mySecurityKey[2] = rxMessage.Payload[2];
 11089  0061D8  0101               	movlb	1	; () banked
 11090  0061DA  EE20 F002          	lfsr	2,2
 11091  0061DE  5131               	movf	(_rxMessage+5)& (0+255),w,b
 11092  0061E0  26D9               	addwf	fsr2l,f,c
 11093  0061E2  5132               	movf	(_rxMessage+6)& (0+255),w,b
 11094  0061E4  22DA               	addwfc	fsr2h,f,c
 11095  0061E6  50DF               	movf	indf2,w,c
 11096  0061E8  0101               	movlb	1	; () banked
 11097  0061EA  6F38               	movwf	(_mySecurityKey+2)& (0+255),b
 11098                           
 11099                           ;muta_messages.c: 179: mySecurityKey[6] = rxMessage.Payload[3];
 11100  0061EC  0101               	movlb	1	; () banked
 11101  0061EE  EE20 F003          	lfsr	2,3
 11102  0061F2  5131               	movf	(_rxMessage+5)& (0+255),w,b
 11103  0061F4  26D9               	addwf	fsr2l,f,c
 11104  0061F6  5132               	movf	(_rxMessage+6)& (0+255),w,b
 11105  0061F8  22DA               	addwfc	fsr2h,f,c
 11106  0061FA  50DF               	movf	indf2,w,c
 11107  0061FC  0101               	movlb	1	; () banked
 11108  0061FE  6F3C               	movwf	(_mySecurityKey+6)& (0+255),b
 11109                           
 11110                           ; BSR set to: 1
 11111                           ;muta_messages.c: 180: MiApp_DiscardMessage();
 11112  006200  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
 11113                           
 11114                           ;muta_messages.c: 181: break;
 11115  006204  D004               	goto	l13978
 11116  006206                     l13974:
 11117  006206  0101               	movlb	1	; () banked
 11118  006208  4BF9               	infsnz	do_NETWORK_REGISTER@i& (0+255),f,b
 11119  00620A  2BFA               	incf	(do_NETWORK_REGISTER@i+1)& (0+255),f,b
 11120  00620C  D7B3               	goto	l13956
 11121  00620E                     l13978:
 11122                           
 11123                           ;muta_messages.c: 182: }
 11124                           ;muta_messages.c: 183: }
 11125                           ;muta_messages.c: 184: }
 11126                           ;muta_messages.c: 186: if (!result)
 11127  00620E  0101               	movlb	1	; () banked
 11128  006210  51FB               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 11129  006212  0101               	movlb	1	; () banked
 11130  006214  A4D8               	btfss	status,2,c
 11131  006216  D008               	goto	l13982
 11132                           
 11133                           ; BSR set to: 1
 11134                           ;muta_messages.c: 187: m_failed_messages++;
 11135  006218  0E01               	movlw	1
 11136  00621A  0101               	movlb	1	; () banked
 11137  00621C  2742               	addwf	_m_failed_messages& (0+255),f,b
 11138  00621E  0E00               	movlw	0
 11139  006220  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 11140  006222  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 11141  006224  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 11142  006226  D007               	goto	l13984
 11143  006228                     l13982:
 11144                           
 11145                           ; BSR set to: 1
 11146                           ;muta_messages.c: 188: else
 11147                           ;muta_messages.c: 189: m_sent_messages++;
 11148  006228  0E01               	movlw	1
 11149  00622A  0101               	movlb	1	; () banked
 11150  00622C  2746               	addwf	_m_sent_messages& (0+255),f,b
 11151  00622E  0E00               	movlw	0
 11152  006230  2347               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 11153  006232  2348               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 11154  006234  2349               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 11155  006236                     l13984:
 11156                           
 11157                           ; BSR set to: 1
 11158                           ;muta_messages.c: 190: return result;
 11159  006236  0101               	movlb	1	; () banked
 11160  006238  51FB               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 11161                           
 11162                           ; BSR set to: 1
 11163  00623A  0012               	return	
 11164  00623C                     __end_of_do_NETWORK_REGISTER:
 11165                           	opt stack 0
 11166                           tblptru	equ	0xFF8
 11167                           tblptrh	equ	0xFF7
 11168                           tblptrl	equ	0xFF6
 11169                           tablat	equ	0xFF5
 11170                           prodh	equ	0xFF4
 11171                           prodl	equ	0xFF3
 11172                           intcon	equ	0xFF2
 11173                           intcon3	equ	0xFF0
 11174                           postinc0	equ	0xFEE
 11175                           plusw0	equ	0xFEB
 11176                           wreg	equ	0xFE8
 11177                           indf1	equ	0xFE7
 11178                           fsr1h	equ	0xFE2
 11179                           fsr1l	equ	0xFE1
 11180                           indf2	equ	0xFDF
 11181                           postinc2	equ	0xFDE
 11182                           postdec2	equ	0xFDD
 11183                           plusw2	equ	0xFDB
 11184                           fsr2h	equ	0xFDA
 11185                           fsr2l	equ	0xFD9
 11186                           status	equ	0xFD8
 11187                           
 11188 ;; *************** function _memcpy *****************
 11189 ;; Defined at:
 11190 ;;		line 11 in file "/opt/microchip/xc8/v1.35/sources/common/memcpy.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  d1              2   33[BANK0 ] PTR void 
 11193 ;;		 -> decode_variable@var(9), m_var(9), TxBuffer(43), 
 11194 ;;  s1              2   35[BANK0 ] PTR const void 
 11195 ;;		 -> do_PING@buffer(21), FAILEDMSG_LABEL(4), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), 
 11196 ;;		 -> POWER_LABEL(4), TEMPERATURE_LABEL(4), LIGHT_LEVEL_LABEL(4), BATTERY_VOLTAGE_LABEL(4), 
 11197 ;;		 -> m_buffer(32), myLongAddress(4), NULL(0), RxPacket.Payload(64), 
 11198 ;;		 -> RxPacket(132), 
 11199 ;;  n               2   37[BANK0 ] unsigned int 
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 11202 ;;		 -> do_PING@buffer(21), FAILEDMSG_LABEL(4), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), 
 11203 ;;		 -> POWER_LABEL(4), TEMPERATURE_LABEL(4), LIGHT_LEVEL_LABEL(4), BATTERY_VOLTAGE_LABEL(4), 
 11204 ;;		 -> m_buffer(32), myLongAddress(4), NULL(0), RxPacket.Payload(64), 
 11205 ;;		 -> RxPacket(132), 
 11206 ;;  d               2   39[BANK0 ] PTR unsigned char 
 11207 ;;		 -> decode_variable@var(9), m_var(9), TxBuffer(43), 
 11208 ;; Return value:  Size  Location     Type
 11209 ;;                  2   33[BANK0 ] PTR void 
 11210 ;; Registers used:
 11211 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11212 ;; Tracked objects:
 11213 ;;		On entry : 0/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11217 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11218 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11220 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11221 ;;Total ram usage:       10 bytes
 11222 ;; Hardware stack levels used:    1
 11223 ;; Hardware stack levels required when called:    7
 11224 ;; This function calls:
 11225 ;;		Nothing
 11226 ;; This function is called by:
 11227 ;;		_send_initial_update
 11228 ;;		_send_writables_update
 11229 ;;		_send_periodical_update
 11230 ;;		_decode_variable
 11231 ;;		_do_NETWORK_REGISTER
 11232 ;;		_do_UPDATE
 11233 ;;		_do_PING
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           	psect	text35
 11238  0086BE                     __ptext35:
 11239                           	opt stack 0
 11240  0086BE                     _memcpy:
 11241                           	opt stack 22
 11242                           
 11243                           ; BSR set to: 1
 11244                           ;incstack = 0
 11245  0086BE  C083  F089         	movff	memcpy@s1,memcpy@s
 11246  0086C2  C084  F08A         	movff	memcpy@s1+1,memcpy@s+1
 11247  0086C6  C081  F087         	movff	memcpy@d1,memcpy@d
 11248  0086CA  C082  F088         	movff	memcpy@d1+1,memcpy@d+1
 11249  0086CE  D01C               	goto	l12142
 11250  0086D0                     l12136:
 11251  0086D0  C089  FFF6         	movff	memcpy@s,tblptrl
 11252  0086D4  C08A  FFF7         	movff	memcpy@s+1,tblptrh
 11253  0086D8  0E00               	movlw	low (__mediumconst shr (0+16))
 11254  0086DA  6EF8               	movwf	tblptru,c
 11255  0086DC  C087  FFD9         	movff	memcpy@d,fsr2l
 11256  0086E0  C088  FFDA         	movff	memcpy@d+1,fsr2h
 11257  0086E4  0E0E               	movlw	(high __ramtop+-1)
 11258  0086E6  64F7               	cpfsgt	tblptrh,c
 11259  0086E8  D003               	bra	u13937
 11260  0086EA  0008               	tblrd		*
 11261  0086EC  50F5               	movf	tablat,w,c
 11262  0086EE  D005               	bra	u13930
 11263  0086F0                     u13937:
 11264  0086F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 11265  0086F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 11266  0086F8  50EF               	movf	indf0,w,c
 11267  0086FA                     u13930:
 11268  0086FA  6EDF               	movwf	indf2,c
 11269  0086FC  0100               	movlb	0	; () banked
 11270  0086FE  4B89               	infsnz	memcpy@s& (0+255),f,b
 11271  008700  2B8A               	incf	(memcpy@s+1)& (0+255),f,b
 11272                           
 11273                           ; BSR set to: 0
 11274  008702  0100               	movlb	0	; () banked
 11275  008704  4B87               	infsnz	memcpy@d& (0+255),f,b
 11276  008706  2B88               	incf	(memcpy@d+1)& (0+255),f,b
 11277  008708                     l12142:
 11278  008708  0100               	movlb	0	; () banked
 11279  00870A  0785               	decf	memcpy@n& (0+255),f,b
 11280  00870C  A0D8               	btfss	status,0,c
 11281  00870E  0786               	decf	(memcpy@n+1)& (0+255),f,b
 11282  008710  0100               	movlb	0	; () banked
 11283  008712  2985               	incf	memcpy@n& (0+255),w,b
 11284  008714  E1DD               	bnz	l12136
 11285  008716  0100               	movlb	0	; () banked
 11286  008718  2986               	incf	(memcpy@n+1)& (0+255),w,b
 11287  00871A  B4D8               	btfsc	status,2,c
 11288  00871C  0012               	return	
 11289  00871E  D7D8               	goto	l12136
 11290  008720                     __end_of_memcpy:
 11291                           	opt stack 0
 11292                           tblptru	equ	0xFF8
 11293                           tblptrh	equ	0xFF7
 11294                           tblptrl	equ	0xFF6
 11295                           tablat	equ	0xFF5
 11296                           prodh	equ	0xFF4
 11297                           prodl	equ	0xFF3
 11298                           intcon	equ	0xFF2
 11299                           intcon3	equ	0xFF0
 11300                           indf0	equ	0xFEF
 11301                           postinc0	equ	0xFEE
 11302                           plusw0	equ	0xFEB
 11303                           fsr0h	equ	0xFEA
 11304                           fsr0l	equ	0xFE9
 11305                           wreg	equ	0xFE8
 11306                           indf1	equ	0xFE7
 11307                           fsr1h	equ	0xFE2
 11308                           fsr1l	equ	0xFE1
 11309                           indf2	equ	0xFDF
 11310                           postinc2	equ	0xFDE
 11311                           postdec2	equ	0xFDD
 11312                           plusw2	equ	0xFDB
 11313                           fsr2h	equ	0xFDA
 11314                           fsr2l	equ	0xFD9
 11315                           status	equ	0xFD8
 11316                           
 11317 ;; *************** function _adapt_power_level *****************
 11318 ;; Defined at:
 11319 ;;		line 252 in file "../../muta/muta_messages.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;  power           1    wreg     unsigned char 
 11322 ;;  minimal_rssi    1   40[BANK1 ] unsigned char 
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;  power           1    0[COMRAM] unsigned char 
 11325 ;;  m_power         1   21[BANK2 ] unsigned char 
 11326 ;;  last_good_po    1   20[BANK2 ] unsigned char 
 11327 ;;  rssi            1   19[BANK2 ] unsigned char 
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  1    wreg      unsigned char 
 11330 ;; Registers used:
 11331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11337 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11338 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11339 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11340 ;;      Totals:         0       0       2       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11341 ;;Total ram usage:        5 bytes
 11342 ;; Hardware stack levels used:    1
 11343 ;; Hardware stack levels required when called:   16
 11344 ;; This function calls:
 11345 ;;		_MiMAC_SetPower
 11346 ;;		_do_POWER_TEST
 11347 ;; This function is called by:
 11348 ;;		_main
 11349 ;; This function uses a non-reentrant model
 11350 ;;
 11351                           
 11352                           	psect	text36
 11353  0085F8                     __ptext36:
 11354                           	opt stack 0
 11355  0085F8                     _adapt_power_level:
 11356                           	opt stack 14
 11357                           
 11358                           ;muta_messages.c: 254: uint8_t m_power = 0x04;
 11359                           
 11360                           ; BSR set to: 0
 11361                           ;incstack = 0
 11362  0085F8  0E04               	movlw	4
 11363  0085FA  0102               	movlb	2	; () banked
 11364  0085FC  6FF5               	movwf	adapt_power_level@m_power& (0+255),b
 11365                           
 11366                           ; BSR set to: 2
 11367                           ;muta_messages.c: 255: uint8_t last_good_power = m_power;
 11368  0085FE  C2F5  F2F4         	movff	adapt_power_level@m_power,adapt_power_level@last_good_power
 11369  008602                     l13992:
 11370                           
 11371                           ; BSR set to: 2
 11372                           ;muta_messages.c: 258: {
 11373                           ;muta_messages.c: 259: MiMAC_SetPower(m_power);
 11374  008602  0102               	movlb	2	; () banked
 11375  008604  51F5               	movf	adapt_power_level@m_power& (0+255),w,b
 11376  008606  ECDC  F044         	call	_MiMAC_SetPower
 11377                           
 11378                           ;muta_messages.c: 260: _delay((unsigned long)((20)*(8000000/4000.0)));
 11379  00860A  0E34               	movlw	52
 11380  00860C  0101               	movlb	1	; () banked
 11381  00860E  6FFC               	movwf	??_adapt_power_level& (0+255),b
 11382  008610  0EF2               	movlw	242
 11383  008612                     u17647:
 11384  008612  2EE8               	decfsz	wreg,f,c
 11385  008614  D7FE               	goto	u17647
 11386  008616  2FFC               	decfsz	??_adapt_power_level& (0+255),f,b
 11387  008618  D7FC               	goto	u17647
 11388                           
 11389                           ;muta_messages.c: 261: rssi = do_POWER_TEST(m_power);
 11390  00861A  0102               	movlb	2	; () banked
 11391  00861C  51F5               	movf	adapt_power_level@m_power& (0+255),w,b
 11392  00861E  ECE2  F031         	call	_do_POWER_TEST
 11393  008622  0102               	movlb	2	; () banked
 11394  008624  6FF3               	movwf	adapt_power_level@rssi& (0+255),b
 11395                           
 11396                           ; BSR set to: 2
 11397                           ;muta_messages.c: 262: if (rssi < minimal_rssi)
 11398  008626  0101               	movlb	1	; () banked
 11399  008628  51FB               	movf	adapt_power_level@minimal_rssi& (0+255),w,b
 11400  00862A  0102               	movlb	2	; () banked
 11401  00862C  5DF3               	subwf	adapt_power_level@rssi& (0+255),w,b
 11402  00862E  A0D8               	btfss	status,0,c
 11403  008630  D00C               	goto	l1350
 11404                           
 11405                           ; BSR set to: 2
 11406                           ;muta_messages.c: 266: else
 11407                           ;muta_messages.c: 267: {
 11408                           ;muta_messages.c: 268: last_good_power = m_power;
 11409                           
 11410                           ; BSR set to: 2
 11411                           ;muta_messages.c: 265: }
 11412                           
 11413                           ; BSR set to: 2
 11414                           ;muta_messages.c: 263: {
 11415                           ;muta_messages.c: 264: break;
 11416  008632  C2F5  F2F4         	movff	adapt_power_level@m_power,adapt_power_level@last_good_power
 11417                           
 11418                           ; BSR set to: 2
 11419                           ;muta_messages.c: 269: if (m_power == 0x07)
 11420  008636  0E07               	movlw	7
 11421  008638  0102               	movlb	2	; () banked
 11422  00863A  19F5               	xorwf	adapt_power_level@m_power& (0+255),w,b
 11423  00863C  B4D8               	btfsc	status,2,c
 11424  00863E  D005               	goto	l1350
 11425                           
 11426                           ; BSR set to: 2
 11427                           ;muta_messages.c: 273: else
 11428                           ;muta_messages.c: 274: {
 11429                           ;muta_messages.c: 275: m_power = m_power + 1;
 11430                           
 11431                           ; BSR set to: 2
 11432                           
 11433                           ; BSR set to: 2
 11434                           ;muta_messages.c: 272: }
 11435                           
 11436                           ; BSR set to: 2
 11437                           ;muta_messages.c: 270: {
 11438                           ;muta_messages.c: 271: break;
 11439  008640  0102               	movlb	2	; () banked
 11440  008642  29F5               	incf	adapt_power_level@m_power& (0+255),w,b
 11441  008644  0102               	movlb	2	; () banked
 11442  008646  6FF5               	movwf	adapt_power_level@m_power& (0+255),b
 11443                           
 11444                           ; BSR set to: 2
 11445                           
 11446                           ; BSR set to: 2
 11447                           
 11448                           ; BSR set to: 2
 11449  008648  D7DC               	goto	l13992
 11450  00864A                     l1350:
 11451                           
 11452                           ; BSR set to: 2
 11453                           ;muta_messages.c: 276: }
 11454                           ;muta_messages.c: 277: }
 11455                           ;muta_messages.c: 278: }
 11456                           ;muta_messages.c: 279: m_power = last_good_power;
 11457  00864A  C2F4  F2F5         	movff	adapt_power_level@last_good_power,adapt_power_level@m_power
 11458                           
 11459                           ; BSR set to: 2
 11460                           ;muta_messages.c: 280: MiMAC_SetPower(m_power);
 11461  00864E  0102               	movlb	2	; () banked
 11462  008650  51F5               	movf	adapt_power_level@m_power& (0+255),w,b
 11463  008652  ECDC  F044         	call	_MiMAC_SetPower
 11464                           
 11465                           ;muta_messages.c: 281: return m_power;
 11466  008656  0102               	movlb	2	; () banked
 11467  008658  51F5               	movf	adapt_power_level@m_power& (0+255),w,b
 11468  00865A  0012               	return	
 11469  00865C                     __end_of_adapt_power_level:
 11470                           	opt stack 0
 11471                           tblptru	equ	0xFF8
 11472                           tblptrh	equ	0xFF7
 11473                           tblptrl	equ	0xFF6
 11474                           tablat	equ	0xFF5
 11475                           prodh	equ	0xFF4
 11476                           prodl	equ	0xFF3
 11477                           intcon	equ	0xFF2
 11478                           intcon3	equ	0xFF0
 11479                           indf0	equ	0xFEF
 11480                           postinc0	equ	0xFEE
 11481                           plusw0	equ	0xFEB
 11482                           fsr0h	equ	0xFEA
 11483                           fsr0l	equ	0xFE9
 11484                           wreg	equ	0xFE8
 11485                           indf1	equ	0xFE7
 11486                           fsr1h	equ	0xFE2
 11487                           fsr1l	equ	0xFE1
 11488                           indf2	equ	0xFDF
 11489                           postinc2	equ	0xFDE
 11490                           postdec2	equ	0xFDD
 11491                           plusw2	equ	0xFDB
 11492                           fsr2h	equ	0xFDA
 11493                           fsr2l	equ	0xFD9
 11494                           status	equ	0xFD8
 11495                           
 11496 ;; *************** function _do_POWER_TEST *****************
 11497 ;; Defined at:
 11498 ;;		line 194 in file "../../muta/muta_messages.c"
 11499 ;; Parameters:    Size  Location     Type
 11500 ;;  power_lvl       1    wreg     unsigned char 
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;  power_lvl       1   34[BANK1 ] unsigned char 
 11503 ;;  i               2   35[BANK1 ] unsigned int 
 11504 ;;  rssi            1   37[BANK1 ] unsigned char 
 11505 ;;  shortaddress    2   38[BANK1 ] unsigned char [2]
 11506 ;;  result          1   33[BANK1 ] unsigned char 
 11507 ;; Return value:  Size  Location     Type
 11508 ;;                  1    wreg      unsigned char 
 11509 ;; Registers used:
 11510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11511 ;; Tracked objects:
 11512 ;;		On entry : 0/0
 11513 ;;		On exit  : 0/0
 11514 ;;		Unchanged: 0/0
 11515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11517 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11518 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11519 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11520 ;;Total ram usage:        8 bytes
 11521 ;; Hardware stack levels used:    1
 11522 ;; Hardware stack levels required when called:   15
 11523 ;; This function calls:
 11524 ;;		_MiApp_DiscardMessage
 11525 ;;		_MiApp_MessageAvailable
 11526 ;;		_MiApp_UnicastAddress
 11527 ;; This function is called by:
 11528 ;;		_adapt_power_level
 11529 ;; This function uses a non-reentrant model
 11530 ;;
 11531                           
 11532                           	psect	text37
 11533  0063C4                     __ptext37:
 11534                           	opt stack 0
 11535  0063C4                     _do_POWER_TEST:
 11536                           	opt stack 14
 11537                           
 11538                           ; BSR set to: 2
 11539                           ;incstack = 0
 11540                           ;do_POWER_TEST@power_lvl stored from wreg
 11541  0063C4  0101               	movlb	1	; () banked
 11542  0063C6  6FF5               	movwf	do_POWER_TEST@power_lvl& (0+255),b
 11543                           
 11544                           ;muta_messages.c: 196: uint8_t shortaddress[2];
 11545                           ;muta_messages.c: 197: {TxData = 11;};
 11546  0063C8  0E0B               	movlw	11
 11547  0063CA  0100               	movlb	0	; () banked
 11548  0063CC  6FD8               	movwf	_TxData& (0+255),b
 11549                           
 11550                           ; BSR set to: 0
 11551                           ;muta_messages.c: 198: TxBuffer[TxData++] = 01;
 11552  0063CE  0100               	movlb	0	; () banked
 11553  0063D0  51D8               	movf	_TxData& (0+255),w,b
 11554  0063D2  0D01               	mullw	1
 11555  0063D4  0E6C               	movlw	low _TxBuffer
 11556  0063D6  24F3               	addwf	prodl,w,c
 11557  0063D8  6ED9               	movwf	fsr2l,c
 11558  0063DA  0E01               	movlw	high _TxBuffer
 11559  0063DC  20F4               	addwfc	prodh,w,c
 11560  0063DE  6EDA               	movwf	fsr2h,c
 11561  0063E0  0E01               	movlw	1
 11562  0063E2  6EDF               	movwf	indf2,c
 11563                           
 11564                           ; BSR set to: 0
 11565  0063E4  0100               	movlb	0	; () banked
 11566  0063E6  2BD8               	incf	_TxData& (0+255),f,b
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;muta_messages.c: 199: TxBuffer[TxData++] = power_lvl;
 11570  0063E8  0100               	movlb	0	; () banked
 11571  0063EA  51D8               	movf	_TxData& (0+255),w,b
 11572  0063EC  0D01               	mullw	1
 11573  0063EE  0E6C               	movlw	low _TxBuffer
 11574  0063F0  24F3               	addwf	prodl,w,c
 11575  0063F2  6ED9               	movwf	fsr2l,c
 11576  0063F4  0E01               	movlw	high _TxBuffer
 11577  0063F6  20F4               	addwfc	prodh,w,c
 11578  0063F8  6EDA               	movwf	fsr2h,c
 11579  0063FA  C1F5  FFDF         	movff	do_POWER_TEST@power_lvl,indf2
 11580                           
 11581                           ; BSR set to: 0
 11582  0063FE  0100               	movlb	0	; () banked
 11583  006400  2BD8               	incf	_TxData& (0+255),f,b
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;muta_messages.c: 200: if (myShortAddress.v[0] == 0x00)
 11587  006402  0100               	movlb	0	; () banked
 11588  006404  51DD               	movf	_myShortAddress& (0+255),w,b
 11589  006406  A4D8               	btfss	status,2,c
 11590  006408  D00D               	goto	l13118
 11591                           
 11592                           ; BSR set to: 0
 11593                           ;muta_messages.c: 201: {
 11594                           ;muta_messages.c: 202: if (myShortAddress.v[1] == 0x00)
 11595  00640A  0100               	movlb	0	; () banked
 11596  00640C  51DE               	movf	(_myShortAddress+1)& (0+255),w,b
 11597  00640E  A4D8               	btfss	status,2,c
 11598  006410  D002               	goto	l13116
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;muta_messages.c: 203: {
 11602                           ;muta_messages.c: 204: return 0;
 11603  006412  0E00               	movlw	0
 11604                           
 11605                           ; BSR set to: 0
 11606  006414  0012               	return	
 11607  006416                     l13116:
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;muta_messages.c: 205: }
 11611                           ;muta_messages.c: 206: shortaddress[0] = 0x00;
 11612  006416  0E00               	movlw	0
 11613  006418  0101               	movlb	1	; () banked
 11614  00641A  6FF9               	movwf	do_POWER_TEST@shortaddress& (0+255),b
 11615                           
 11616                           ;muta_messages.c: 207: shortaddress[1] = 0x00;
 11617  00641C  0E00               	movlw	0
 11618  00641E  0101               	movlb	1	; () banked
 11619  006420  6FFA               	movwf	(do_POWER_TEST@shortaddress+1)& (0+255),b
 11620                           
 11621                           ;muta_messages.c: 208: }
 11622  006422  D005               	goto	l13122
 11623  006424                     l13118:
 11624                           
 11625                           ;muta_messages.c: 209: else
 11626                           ;muta_messages.c: 210: {
 11627                           ;muta_messages.c: 211: shortaddress[0] = 0x00;
 11628  006424  0E00               	movlw	0
 11629  006426  0101               	movlb	1	; () banked
 11630  006428  6FF9               	movwf	do_POWER_TEST@shortaddress& (0+255),b
 11631                           
 11632                           ; BSR set to: 1
 11633                           ;muta_messages.c: 212: shortaddress[1] = myShortAddress.v[1];
 11634  00642A  C0DE  F1FA         	movff	_myShortAddress+1,do_POWER_TEST@shortaddress+1
 11635  00642E                     l13122:
 11636                           
 11637                           ; BSR set to: 1
 11638                           ;muta_messages.c: 213: }
 11639                           ;muta_messages.c: 214: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 1);
 11640  00642E  0EF9               	movlw	low do_POWER_TEST@shortaddress
 11641  006430  0101               	movlb	1	; () banked
 11642  006432  6FE8               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 11643  006434  0E01               	movlw	high do_POWER_TEST@shortaddress
 11644  006436  0101               	movlb	1	; () banked
 11645  006438  6FE9               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 11646  00643A  0E00               	movlw	0
 11647  00643C  0101               	movlb	1	; () banked
 11648  00643E  6FEA               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 11649  006440  0E01               	movlw	1
 11650  006442  0101               	movlb	1	; () banked
 11651  006444  6FEB               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 11652  006446  ECA4  F020         	call	_MiApp_UnicastAddress	;wreg free
 11653  00644A  0101               	movlb	1	; () banked
 11654  00644C  6FF4               	movwf	do_POWER_TEST@result& (0+255),b
 11655                           
 11656                           ; BSR set to: 1
 11657                           ;muta_messages.c: 215: if (!result)
 11658  00644E  0101               	movlb	1	; () banked
 11659  006450  51F4               	movf	do_POWER_TEST@result& (0+255),w,b
 11660  006452  0101               	movlb	1	; () banked
 11661  006454  A4D8               	btfss	status,2,c
 11662  006456  D009               	goto	l13134
 11663                           
 11664                           ; BSR set to: 1
 11665                           ;muta_messages.c: 216: {
 11666                           ;muta_messages.c: 217: m_failed_messages++;
 11667  006458  0E01               	movlw	1
 11668  00645A  0101               	movlb	1	; () banked
 11669  00645C  2742               	addwf	_m_failed_messages& (0+255),f,b
 11670  00645E  0E00               	movlw	0
 11671  006460  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 11672  006462  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 11673  006464  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 11674                           
 11675                           ; BSR set to: 1
 11676                           ;muta_messages.c: 218: return 0;
 11677  006466  0E00               	movlw	0
 11678                           
 11679                           ; BSR set to: 1
 11680                           ;muta_messages.c: 219: }
 11681                           
 11682                           ; BSR set to: 1
 11683  006468  0012               	return	
 11684  00646A                     l13134:
 11685                           
 11686                           ; BSR set to: 1
 11687                           ;muta_messages.c: 220: else
 11688                           ;muta_messages.c: 221: {
 11689                           ;muta_messages.c: 222: unsigned int i;
 11690                           ;muta_messages.c: 223: uint8_t rssi = 0;
 11691  00646A  0E00               	movlw	0
 11692  00646C  0101               	movlb	1	; () banked
 11693  00646E  6FF8               	movwf	do_POWER_TEST@rssi& (0+255),b
 11694                           
 11695                           ;muta_messages.c: 224: for (i=0; i<100; i++)
 11696  006470  0E00               	movlw	0
 11697  006472  0101               	movlb	1	; () banked
 11698  006474  6FF7               	movwf	(do_POWER_TEST@i+1)& (0+255),b
 11699  006476  0E00               	movlw	0
 11700  006478  6FF6               	movwf	do_POWER_TEST@i& (0+255),b
 11701  00647A                     l13136:
 11702                           
 11703                           ; BSR set to: 1
 11704  00647A  0101               	movlb	1	; () banked
 11705  00647C  51F7               	movf	(do_POWER_TEST@i+1)& (0+255),w,b
 11706  00647E  E13C               	bnz	l13160
 11707  006480  0E64               	movlw	100
 11708  006482  0101               	movlb	1	; () banked
 11709  006484  5DF6               	subwf	do_POWER_TEST@i& (0+255),w,b
 11710  006486  B0D8               	btfsc	status,0,c
 11711  006488  D037               	goto	l13160
 11712                           
 11713                           ; BSR set to: 1
 11714                           ;muta_messages.c: 225: {
 11715                           ;muta_messages.c: 226: _delay((unsigned long)((10)*(8000000/4000.0)));
 11716                           
 11717                           ; BSR set to: 1
 11718                           
 11719                           ; BSR set to: 1
 11720  00648A  0E1A               	movlw	26
 11721  00648C  0100               	movlb	0	; () banked
 11722  00648E  6FD0               	movwf	??_do_POWER_TEST& (0+255),b
 11723  006490  0EF8               	movlw	248
 11724  006492                     u17657:
 11725  006492  2EE8               	decfsz	wreg,f,c
 11726  006494  D7FE               	goto	u17657
 11727  006496  2FD0               	decfsz	??_do_POWER_TEST& (0+255),f,b
 11728  006498  D7FC               	goto	u17657
 11729  00649A  D000               	nop2	
 11730                           
 11731                           ;muta_messages.c: 227: if(MiApp_MessageAvailable())
 11732  00649C  EC07  F046         	call	_MiApp_MessageAvailable	;wreg free
 11733  0064A0  0900               	iorlw	0
 11734  0064A2  B4D8               	btfsc	status,2,c
 11735  0064A4  D025               	goto	l13156
 11736                           
 11737                           ;muta_messages.c: 228: {
 11738                           ;muta_messages.c: 230: last_rssi = rxMessage.PacketRSSI;
 11739  0064A6  C134  F167         	movff	_rxMessage+8,_last_rssi
 11740                           
 11741                           ;muta_messages.c: 231: if (rxMessage.Payload[0] != 01 || rxMessage.Payload[1] != power_l
      +                          vl)
 11742  0064AA  C131  FFD9         	movff	_rxMessage+5,fsr2l
 11743  0064AE  C132  FFDA         	movff	_rxMessage+6,fsr2h
 11744  0064B2  04DE               	decf	postinc2,w,c
 11745  0064B4  A4D8               	btfss	status,2,c
 11746  0064B6  D00C               	goto	l13150
 11747  0064B8  0101               	movlb	1	; () banked
 11748  0064BA  EE20 F001          	lfsr	2,1
 11749  0064BE  5131               	movf	(_rxMessage+5)& (0+255),w,b
 11750  0064C0  26D9               	addwf	fsr2l,f,c
 11751  0064C2  5132               	movf	(_rxMessage+6)& (0+255),w,b
 11752  0064C4  22DA               	addwfc	fsr2h,f,c
 11753  0064C6  0101               	movlb	1	; () banked
 11754  0064C8  51F5               	movf	do_POWER_TEST@power_lvl& (0+255),w,b
 11755  0064CA  18DE               	xorwf	postinc2,w,c
 11756  0064CC  B4D8               	btfsc	status,2,c
 11757  0064CE  D003               	goto	l13152
 11758  0064D0                     l13150:
 11759                           
 11760                           ;muta_messages.c: 232: {
 11761                           ;muta_messages.c: 233: MiApp_DiscardMessage();
 11762  0064D0  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
 11763                           
 11764                           ;muta_messages.c: 234: }
 11765  0064D4  D00D               	goto	l13156
 11766  0064D6                     l13152:
 11767                           
 11768                           ;muta_messages.c: 235: else
 11769                           ;muta_messages.c: 236: {
 11770                           ;muta_messages.c: 237: rssi = (rxMessage.Payload[2]);
 11771  0064D6  0101               	movlb	1	; () banked
 11772  0064D8  EE20 F002          	lfsr	2,2
 11773  0064DC  5131               	movf	(_rxMessage+5)& (0+255),w,b
 11774  0064DE  26D9               	addwf	fsr2l,f,c
 11775  0064E0  5132               	movf	(_rxMessage+6)& (0+255),w,b
 11776  0064E2  22DA               	addwfc	fsr2h,f,c
 11777  0064E4  50DF               	movf	indf2,w,c
 11778  0064E6  0101               	movlb	1	; () banked
 11779  0064E8  6FF8               	movwf	do_POWER_TEST@rssi& (0+255),b
 11780                           
 11781                           ; BSR set to: 1
 11782                           ;muta_messages.c: 238: MiApp_DiscardMessage();
 11783  0064EA  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
 11784                           
 11785                           ;muta_messages.c: 239: break;
 11786  0064EE  D004               	goto	l13160
 11787  0064F0                     l13156:
 11788  0064F0  0101               	movlb	1	; () banked
 11789  0064F2  4BF6               	infsnz	do_POWER_TEST@i& (0+255),f,b
 11790  0064F4  2BF7               	incf	(do_POWER_TEST@i+1)& (0+255),f,b
 11791  0064F6  D7C1               	goto	l13136
 11792  0064F8                     l13160:
 11793                           
 11794                           ;muta_messages.c: 240: }
 11795                           ;muta_messages.c: 241: }
 11796                           ;muta_messages.c: 242: }
 11797                           ;muta_messages.c: 244: if (rssi == 0)
 11798  0064F8  0101               	movlb	1	; () banked
 11799  0064FA  51F8               	movf	do_POWER_TEST@rssi& (0+255),w,b
 11800  0064FC  0101               	movlb	1	; () banked
 11801  0064FE  A4D8               	btfss	status,2,c
 11802  006500  D008               	goto	l13164
 11803                           
 11804                           ; BSR set to: 1
 11805                           ;muta_messages.c: 245: m_failed_messages++;
 11806  006502  0E01               	movlw	1
 11807  006504  0101               	movlb	1	; () banked
 11808  006506  2742               	addwf	_m_failed_messages& (0+255),f,b
 11809  006508  0E00               	movlw	0
 11810  00650A  2343               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 11811  00650C  2344               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 11812  00650E  2345               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 11813  006510  D007               	goto	l13166
 11814  006512                     l13164:
 11815                           
 11816                           ; BSR set to: 1
 11817                           ;muta_messages.c: 246: else
 11818                           ;muta_messages.c: 247: m_sent_messages++;
 11819  006512  0E01               	movlw	1
 11820  006514  0101               	movlb	1	; () banked
 11821  006516  2746               	addwf	_m_sent_messages& (0+255),f,b
 11822  006518  0E00               	movlw	0
 11823  00651A  2347               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 11824  00651C  2348               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 11825  00651E  2349               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 11826  006520                     l13166:
 11827                           
 11828                           ; BSR set to: 1
 11829                           ;muta_messages.c: 248: return rssi;
 11830  006520  0101               	movlb	1	; () banked
 11831  006522  51F8               	movf	do_POWER_TEST@rssi& (0+255),w,b
 11832                           
 11833                           ; BSR set to: 1
 11834  006524  0012               	return	
 11835  006526                     __end_of_do_POWER_TEST:
 11836                           	opt stack 0
 11837                           tblptru	equ	0xFF8
 11838                           tblptrh	equ	0xFF7
 11839                           tblptrl	equ	0xFF6
 11840                           tablat	equ	0xFF5
 11841                           prodh	equ	0xFF4
 11842                           prodl	equ	0xFF3
 11843                           intcon	equ	0xFF2
 11844                           intcon3	equ	0xFF0
 11845                           indf0	equ	0xFEF
 11846                           postinc0	equ	0xFEE
 11847                           plusw0	equ	0xFEB
 11848                           fsr0h	equ	0xFEA
 11849                           fsr0l	equ	0xFE9
 11850                           wreg	equ	0xFE8
 11851                           indf1	equ	0xFE7
 11852                           fsr1h	equ	0xFE2
 11853                           fsr1l	equ	0xFE1
 11854                           indf2	equ	0xFDF
 11855                           postinc2	equ	0xFDE
 11856                           postdec2	equ	0xFDD
 11857                           plusw2	equ	0xFDB
 11858                           fsr2h	equ	0xFDA
 11859                           fsr2l	equ	0xFD9
 11860                           status	equ	0xFD8
 11861                           
 11862 ;; *************** function _MiMAC_SetPower *****************
 11863 ;; Defined at:
 11864 ;;		line 544 in file "src/miwi/drv_mrf_miwi_89xa.c"
 11865 ;; Parameters:    Size  Location     Type
 11866 ;;  outputPower     1    wreg     unsigned char 
 11867 ;; Auto vars:     Size  Location     Type
 11868 ;;  outputPower     1   41[BANK0 ] unsigned char 
 11869 ;; Return value:  Size  Location     Type
 11870 ;;                  1    wreg      unsigned char 
 11871 ;; Registers used:
 11872 ;;		wreg, status,2, status,0, cstack
 11873 ;; Tracked objects:
 11874 ;;		On entry : 0/0
 11875 ;;		On exit  : 0/0
 11876 ;;		Unchanged: 0/0
 11877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11881 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11882 ;;Total ram usage:        3 bytes
 11883 ;; Hardware stack levels used:    1
 11884 ;; Hardware stack levels required when called:    9
 11885 ;; This function calls:
 11886 ;;		_RegisterSet
 11887 ;; This function is called by:
 11888 ;;		_main
 11889 ;;		_update_variable
 11890 ;;		_adapt_power_level
 11891 ;; This function uses a non-reentrant model
 11892 ;;
 11893                           
 11894                           	psect	text38
 11895  0089B8                     __ptext38:
 11896                           	opt stack 0
 11897  0089B8                     _MiMAC_SetPower:
 11898                           	opt stack 19
 11899                           
 11900                           ;incstack = 0
 11901                           ;MiMAC_SetPower@outputPower stored from wreg
 11902  0089B8  0100               	movlb	0	; () banked
 11903  0089BA  6F89               	movwf	MiMAC_SetPower@outputPower& (0+255),b
 11904                           
 11905                           ;drv_mrf_miwi_89xa.c: 546: if( outputPower > 0x07 )
 11906  0089BC  0E07               	movlw	7
 11907  0089BE  0100               	movlb	0	; () banked
 11908  0089C0  6589               	cpfsgt	MiMAC_SetPower@outputPower& (0+255),b
 11909  0089C2  D001               	goto	l12216
 11910  0089C4  0012               	return	
 11911  0089C6                     l12216:
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;drv_mrf_miwi_89xa.c: 549: }
 11915                           ;drv_mrf_miwi_89xa.c: 550: RegisterSet(0x3400 | ((0xF0 | (0x04<<1)) & 0xF0) | (outputPow
      +                          er<<1));
 11916  0089C6  0100               	movlb	0	; () banked
 11917  0089C8  5189               	movf	MiMAC_SetPower@outputPower& (0+255),w,b
 11918  0089CA  0100               	movlb	0	; () banked
 11919  0089CC  6F87               	movwf	??_MiMAC_SetPower& (0+255),b
 11920  0089CE  6B88               	clrf	(??_MiMAC_SetPower+1)& (0+255),b
 11921  0089D0  90D8               	bcf	status,0,c
 11922  0089D2  0100               	movlb	0	; () banked
 11923  0089D4  3787               	rlcf	??_MiMAC_SetPower& (0+255),f,b
 11924  0089D6  3788               	rlcf	(??_MiMAC_SetPower+1)& (0+255),f,b
 11925  0089D8  0EF0               	movlw	240
 11926  0089DA  0100               	movlb	0	; () banked
 11927  0089DC  1187               	iorwf	??_MiMAC_SetPower& (0+255),w,b
 11928  0089DE  0100               	movlb	0	; () banked
 11929  0089E0  6F83               	movwf	RegisterSet@setting& (0+255),b
 11930  0089E2  0E34               	movlw	52
 11931  0089E4  0100               	movlb	0	; () banked
 11932  0089E6  1188               	iorwf	(??_MiMAC_SetPower+1)& (0+255),w,b
 11933  0089E8  0100               	movlb	0	; () banked
 11934  0089EA  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 11935  0089EC  EC38  F044         	call	_RegisterSet	;wreg free
 11936  0089F0  0012               	return	
 11937  0089F2                     __end_of_MiMAC_SetPower:
 11938                           	opt stack 0
 11939                           tblptru	equ	0xFF8
 11940                           tblptrh	equ	0xFF7
 11941                           tblptrl	equ	0xFF6
 11942                           tablat	equ	0xFF5
 11943                           prodh	equ	0xFF4
 11944                           prodl	equ	0xFF3
 11945                           intcon	equ	0xFF2
 11946                           intcon3	equ	0xFF0
 11947                           indf0	equ	0xFEF
 11948                           postinc0	equ	0xFEE
 11949                           plusw0	equ	0xFEB
 11950                           fsr0h	equ	0xFEA
 11951                           fsr0l	equ	0xFE9
 11952                           wreg	equ	0xFE8
 11953                           indf1	equ	0xFE7
 11954                           fsr1h	equ	0xFE2
 11955                           fsr1l	equ	0xFE1
 11956                           indf2	equ	0xFDF
 11957                           postinc2	equ	0xFDE
 11958                           postdec2	equ	0xFDD
 11959                           plusw2	equ	0xFDB
 11960                           fsr2h	equ	0xFDA
 11961                           fsr2l	equ	0xFD9
 11962                           status	equ	0xFD8
 11963                           
 11964 ;; *************** function _SYSTEM_Initialize *****************
 11965 ;; Defined at:
 11966 ;;		line 58 in file "src/18F27J53/system.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;		None
 11969 ;; Auto vars:     Size  Location     Type
 11970 ;;		None
 11971 ;; Return value:  Size  Location     Type
 11972 ;;		None               void
 11973 ;; Registers used:
 11974 ;;		wreg, status,2, cstack
 11975 ;; Tracked objects:
 11976 ;;		On entry : 0/0
 11977 ;;		On exit  : 0/0
 11978 ;;		Unchanged: 0/0
 11979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11984 ;;Total ram usage:        0 bytes
 11985 ;; Hardware stack levels used:    1
 11986 ;; Hardware stack levels required when called:    8
 11987 ;; This function calls:
 11988 ;;		_RtccWrOn
 11989 ;; This function is called by:
 11990 ;;		_main
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994                           	psect	text39
 11995  007074                     __ptext39:
 11996                           	opt stack 0
 11997  007074                     _SYSTEM_Initialize:
 11998                           	opt stack 22
 11999                           
 12000                           ;system.c: 61: PLLEN = 0;
 12001                           
 12002                           ;incstack = 0
 12003  007074  9C9B               	bcf	3995,6,c	;volatile
 12004                           
 12005                           ;system.c: 64: OSCCONbits.IRCF = 0b111;
 12006  007076  88D3               	bsf	4051,4,c	;volatile
 12007  007078  8AD3               	bsf	4051,5,c	;volatile
 12008  00707A  8CD3               	bsf	4051,6,c	;volatile
 12009                           
 12010                           ;system.c: 67: ANCON0 = 0xFF;
 12011  00707C  010F               	movlb	15	; () banked
 12012  00707E  6948               	setf	72,b	;volatile
 12013                           
 12014                           ; BSR set to: 15
 12015                           ;system.c: 68: ANCON1 = 0x1F;
 12016  007080  0E1F               	movlw	31
 12017  007082  010F               	movlb	15	; () banked
 12018  007084  6F49               	movwf	73,b	;volatile
 12019                           
 12020                           ;system.c: 71: TRISA = 0;
 12021  007086  0E00               	movlw	0
 12022  007088  6E92               	movwf	3986,c	;volatile
 12023                           
 12024                           ;system.c: 72: TRISB = 0;
 12025  00708A  0E00               	movlw	0
 12026  00708C  6E93               	movwf	3987,c	;volatile
 12027                           
 12028                           ;system.c: 73: TRISC = 0;
 12029  00708E  0E00               	movlw	0
 12030  007090  6E94               	movwf	3988,c	;volatile
 12031                           
 12032                           ; BSR set to: 15
 12033                           ;system.c: 75: LATCbits.LATC0 = 1;
 12034  007092  808B               	bsf	3979,0,c	;volatile
 12035                           
 12036                           ; BSR set to: 15
 12037                           ;system.c: 77: UPUEN = 0;
 12038  007094  010F               	movlb	15	; () banked
 12039  007096  9939               	bcf	57,4,b	;volatile
 12040                           
 12041                           ; BSR set to: 15
 12042                           ;system.c: 78: UCONbits.USBEN = 0;
 12043  007098  9665               	bcf	3941,3,c	;volatile
 12044                           
 12045                           ; BSR set to: 15
 12046                           ;system.c: 80: RCONbits.IPEN = 1;
 12047  00709A  8ED0               	bsf	4048,7,c	;volatile
 12048                           
 12049                           ;system.c: 83: ALRMCFGbits.AMASK = 0b0011;
 12050  00709C  010F               	movlb	15	; () banked
 12051  00709E  5147               	movf	71,w,b	;volatile
 12052  0070A0  0BC3               	andlw	-61
 12053  0070A2  090C               	iorlw	12
 12054  0070A4  6F47               	movwf	71,b	;volatile
 12055                           
 12056                           ; BSR set to: 15
 12057                           ;system.c: 85: ALRMCFGbits.CHIME = 1;
 12058  0070A6  010F               	movlb	15	; () banked
 12059  0070A8  8D47               	bsf	71,6,b	;volatile
 12060                           
 12061                           ; BSR set to: 15
 12062                           ;system.c: 86: ALRMCFGbits.ALRMEN = 1;
 12063  0070AA  010F               	movlb	15	; () banked
 12064  0070AC  8F47               	bsf	71,7,b	;volatile
 12065                           
 12066                           ;system.c: 91: RTCCFG = 0x0;
 12067  0070AE  0E00               	movlw	0
 12068  0070B0  010F               	movlb	15	; () banked
 12069  0070B2  6F3F               	movwf	63,b	;volatile
 12070                           
 12071                           ;system.c: 92: RTCCAL = 0x00;
 12072  0070B4  0E00               	movlw	0
 12073  0070B6  010F               	movlb	15	; () banked
 12074  0070B8  6F3E               	movwf	62,b	;volatile
 12075                           
 12076                           ; BSR set to: 15
 12077                           ;system.c: 93: if((RTCCFGbits.RTCEN))
 12078  0070BA  010F               	movlb	15	; () banked
 12079  0070BC  AF3F               	btfss	63,7,b	;volatile
 12080  0070BE  D006               	goto	l13402
 12081                           
 12082                           ; BSR set to: 15
 12083                           ;system.c: 94: {
 12084                           ;system.c: 95: if(!(RTCCFGbits.RTCWREN))
 12085  0070C0  010F               	movlb	15	; () banked
 12086  0070C2  AB3F               	btfss	63,5,b	;volatile
 12087                           
 12088                           ; BSR set to: 15
 12089                           ;system.c: 96: {
 12090                           ;system.c: 97: RtccWrOn();
 12091  0070C4  ECFE  F045         	call	_RtccWrOn	;wreg free
 12092                           
 12093                           ;system.c: 98: }
 12094                           ;system.c: 99: (RTCCFGbits.RTCEN=0);
 12095  0070C8  010F               	movlb	15	; () banked
 12096  0070CA  9F3F               	bcf	63,7,b	;volatile
 12097  0070CC                     l13402:
 12098                           
 12099                           ; BSR set to: 15
 12100                           ;system.c: 100: }
 12101                           ;system.c: 101: (RTCCFGbits.RTCWREN = 0);
 12102  0070CC  010F               	movlb	15	; () banked
 12103  0070CE  9B3F               	bcf	63,5,b	;volatile
 12104                           
 12105                           ;system.c: 102: RtccWrOn();
 12106  0070D0  ECFE  F045         	call	_RtccWrOn	;wreg free
 12107                           
 12108                           ;system.c: 103: (RTCCFGbits.RTCEN=1);
 12109  0070D4  010F               	movlb	15	; () banked
 12110  0070D6  8F3F               	bsf	63,7,b	;volatile
 12111                           
 12112                           ; BSR set to: 15
 12113                           ;system.c: 104: (ALRMCFGbits.ALRMEN=1);
 12114  0070D8  010F               	movlb	15	; () banked
 12115  0070DA  8F47               	bsf	71,7,b	;volatile
 12116                           
 12117                           ; BSR set to: 15
 12118                           ;system.c: 105: RTCCFGbits.RTCPTR0 = 0;
 12119  0070DC  010F               	movlb	15	; () banked
 12120  0070DE  913F               	bcf	63,0,b	;volatile
 12121                           
 12122                           ; BSR set to: 15
 12123                           ;system.c: 106: RTCCFGbits.RTCPTR1 = 0;
 12124  0070E0  010F               	movlb	15	; () banked
 12125  0070E2  933F               	bcf	63,1,b	;volatile
 12126                           
 12127                           ; BSR set to: 15
 12128                           ;system.c: 107: RTCVALHbits.RTCVALH = 0x00;
 12129  0070E4  0E00               	movlw	0
 12130  0070E6  010F               	movlb	15	; () banked
 12131  0070E8  6F3B               	movwf	59,b	;volatile
 12132                           
 12133                           ; BSR set to: 15
 12134                           ;system.c: 108: RTCVALLbits.RTCVALL = 0x00;
 12135  0070EA  0E00               	movlw	0
 12136  0070EC  010F               	movlb	15	; () banked
 12137  0070EE  6F3A               	movwf	58,b	;volatile
 12138                           
 12139                           ; BSR set to: 15
 12140                           ;system.c: 109: (RTCCFGbits.RTCWREN = 0);
 12141  0070F0  010F               	movlb	15	; () banked
 12142  0070F2  9B3F               	bcf	63,5,b	;volatile
 12143                           
 12144                           ; BSR set to: 15
 12145                           ;system.c: 112: IPR3bits.RTCCIP = 0;
 12146  0070F4  90A5               	bcf	4005,0,c	;volatile
 12147                           
 12148                           ; BSR set to: 15
 12149                           ;system.c: 113: PIR3bits.RTCCIF = 0;
 12150  0070F6  90A4               	bcf	4004,0,c	;volatile
 12151                           
 12152                           ; BSR set to: 15
 12153                           ;system.c: 114: PIE3bits.RTCCIE = 1;
 12154  0070F8  80A3               	bsf	4003,0,c	;volatile
 12155                           
 12156                           ; BSR set to: 15
 12157                           ;system.c: 119: TRISBbits.TRISB4 = 1;
 12158  0070FA  8893               	bsf	3987,4,c	;volatile
 12159                           
 12160                           ; BSR set to: 15
 12161                           ;system.c: 120: TRISBbits.TRISB5 = 1;
 12162  0070FC  8A93               	bsf	3987,5,c	;volatile
 12163                           
 12164                           ; BSR set to: 15
 12165                           ;system.c: 122: SSP1ADD = 19;
 12166  0070FE  0E13               	movlw	19
 12167  007100  6EC8               	movwf	4040,c	;volatile
 12168                           
 12169                           ; BSR set to: 15
 12170                           ;system.c: 128: LATAbits.LATA6 = 0;
 12171  007102  9C89               	bcf	3977,6,c	;volatile
 12172                           
 12173                           ; BSR set to: 15
 12174                           ;system.c: 131: ADCON0bits.ADON = 0;
 12175  007104  90C2               	bcf	4034,0,c	;volatile
 12176                           
 12177                           ; BSR set to: 15
 12178                           ;system.c: 134: TRISAbits.TRISA0 = 1;
 12179  007106  8092               	bsf	3986,0,c	;volatile
 12180                           
 12181                           ; BSR set to: 15
 12182                           ;system.c: 136: ANCON0bits.PCFG0 = 0;
 12183  007108  010F               	movlb	15	; () banked
 12184  00710A  9148               	bcf	72,0,b	;volatile
 12185                           
 12186                           ; BSR set to: 15
 12187                           ;system.c: 139: TRISAbits.TRISA1 = 1;
 12188  00710C  8292               	bsf	3986,1,c	;volatile
 12189                           
 12190                           ; BSR set to: 15
 12191                           ;system.c: 141: ANCON0bits.PCFG1 = 0;
 12192  00710E  010F               	movlb	15	; () banked
 12193  007110  9348               	bcf	72,1,b	;volatile
 12194                           
 12195                           ; BSR set to: 15
 12196                           ;system.c: 143: ANCON1bits.VBGEN = 0;
 12197  007112  010F               	movlb	15	; () banked
 12198  007114  9F49               	bcf	73,7,b	;volatile
 12199                           
 12200                           ; BSR set to: 15
 12201                           ;system.c: 148: ADCON0bits.VCFG0 = 0;
 12202  007116  9CC2               	bcf	4034,6,c	;volatile
 12203                           
 12204                           ; BSR set to: 15
 12205                           ;system.c: 149: ADCON0bits.VCFG1 = 0;
 12206  007118  9EC2               	bcf	4034,7,c	;volatile
 12207                           
 12208                           ; BSR set to: 15
 12209                           ;system.c: 151: ADCON1bits.ADCS = 0b001;
 12210  00711A  50C1               	movf	4033,w,c	;volatile
 12211  00711C  0BF8               	andlw	-8
 12212  00711E  0901               	iorlw	1
 12213  007120  6EC1               	movwf	4033,c	;volatile
 12214                           
 12215                           ; BSR set to: 15
 12216                           ;system.c: 153: ADCON1bits.ACQT = 0b111;
 12217  007122  86C1               	bsf	4033,3,c	;volatile
 12218  007124  88C1               	bsf	4033,4,c	;volatile
 12219  007126  8AC1               	bsf	4033,5,c	;volatile
 12220                           
 12221                           ; BSR set to: 15
 12222                           ;system.c: 154: ADCON1bits.ADFM = 1;
 12223  007128  8EC1               	bsf	4033,7,c	;volatile
 12224                           
 12225                           ; BSR set to: 15
 12226                           ;system.c: 160: EECON2 = 0x55;
 12227  00712A  0E55               	movlw	85
 12228  00712C  6EA7               	movwf	4007,c	;volatile
 12229                           
 12230                           ; BSR set to: 15
 12231                           ;system.c: 161: EECON2 = 0xAA;
 12232  00712E  0EAA               	movlw	170
 12233  007130  6EA7               	movwf	4007,c	;volatile
 12234                           
 12235                           ; BSR set to: 15
 12236                           ;system.c: 162: PPSCONbits.IOLOCK = 0;
 12237  007132  010E               	movlb	14	; () banked
 12238  007134  91BF               	bcf	191,0,b	;volatile
 12239                           
 12240                           ; BSR set to: 14
 12241                           ;system.c: 165: RPINR1 = 13;
 12242  007136  0E0D               	movlw	13
 12243  007138  010E               	movlb	14	; () banked
 12244  00713A  6FE1               	movwf	225,b	;volatile
 12245                           
 12246                           ; BSR set to: 14
 12247                           ;system.c: 166: RPINR21 = 12;
 12248  00713C  0E0C               	movlw	12
 12249  00713E  010E               	movlb	14	; () banked
 12250  007140  6FFC               	movwf	252,b	;volatile
 12251                           
 12252                           ; BSR set to: 14
 12253                           ;system.c: 167: RPINR22 = 5;
 12254  007142  0E05               	movlw	5
 12255  007144  010E               	movlb	14	; () banked
 12256  007146  6FFD               	movwf	253,b	;volatile
 12257                           
 12258                           ; BSR set to: 14
 12259                           ;system.c: 170: RPOR4 = 10;
 12260  007148  0E0A               	movlw	10
 12261  00714A  010E               	movlb	14	; () banked
 12262  00714C  6FC4               	movwf	196,b	;volatile
 12263                           
 12264                           ; BSR set to: 14
 12265                           ;system.c: 171: RPOR5 = 11;
 12266  00714E  0E0B               	movlw	11
 12267  007150  010E               	movlb	14	; () banked
 12268  007152  6FC5               	movwf	197,b	;volatile
 12269                           
 12270                           ; BSR set to: 14
 12271                           ;system.c: 175: EECON2 = 0x55;
 12272  007154  0E55               	movlw	85
 12273  007156  6EA7               	movwf	4007,c	;volatile
 12274                           
 12275                           ; BSR set to: 14
 12276                           ;system.c: 176: EECON2 = 0xAA;
 12277  007158  0EAA               	movlw	170
 12278  00715A  6EA7               	movwf	4007,c	;volatile
 12279                           
 12280                           ; BSR set to: 14
 12281                           ;system.c: 177: PPSCONbits.IOLOCK = 1;
 12282  00715C  010E               	movlb	14	; () banked
 12283  00715E  81BF               	bsf	191,0,b	;volatile
 12284                           
 12285                           ; BSR set to: 14
 12286                           ;system.c: 189: LATCbits.LATC6 = 1;
 12287  007160  8C8B               	bsf	3979,6,c	;volatile
 12288                           
 12289                           ; BSR set to: 14
 12290                           ;system.c: 190: LATBbits.LATB3 = 1;
 12291  007162  868A               	bsf	3978,3,c	;volatile
 12292                           
 12293                           ; BSR set to: 14
 12294                           ;system.c: 192: TRISCbits.TRISC6 = 0;
 12295  007164  9C94               	bcf	3988,6,c	;volatile
 12296                           
 12297                           ; BSR set to: 14
 12298                           ;system.c: 193: TRISBbits.TRISB3 = 0;
 12299  007166  9693               	bcf	3987,3,c	;volatile
 12300                           
 12301                           ; BSR set to: 14
 12302                           ;system.c: 196: TRISBbits.TRISB0 = 1;
 12303  007168  8093               	bsf	3987,0,c	;volatile
 12304                           
 12305                           ; BSR set to: 14
 12306                           ;system.c: 197: TRISCbits.TRISC2 = 1;
 12307  00716A  8494               	bsf	3988,2,c	;volatile
 12308                           
 12309                           ; BSR set to: 14
 12310                           ;system.c: 200: INTCON2bits.INTEDG1 = 1;
 12311  00716C  8AF1               	bsf	intcon2,5,c	;volatile
 12312                           
 12313                           ; BSR set to: 14
 12314                           ;system.c: 203: INTCON2bits.INTEDG0 = 1;
 12315  00716E  8CF1               	bsf	intcon2,6,c	;volatile
 12316                           
 12317                           ; BSR set to: 14
 12318                           ;system.c: 205: INTCONbits.INT0IF = 0;
 12319  007170  92F2               	bcf	intcon,1,c	;volatile
 12320                           
 12321                           ; BSR set to: 14
 12322                           ;system.c: 206: INTCONbits.INT0IE = 1;
 12323  007172  88F2               	bsf	intcon,4,c	;volatile
 12324                           
 12325                           ; BSR set to: 14
 12326                           ;system.c: 208: INTCON3bits.INT1IF = 0;
 12327  007174  90F0               	bcf	intcon3,0,c	;volatile
 12328                           
 12329                           ; BSR set to: 14
 12330                           ;system.c: 209: INTCON3bits.INT1IP = 1;
 12331  007176  8CF0               	bsf	intcon3,6,c	;volatile
 12332                           
 12333                           ; BSR set to: 14
 12334                           ;system.c: 210: INTCON3bits.INT1IE = 1;
 12335  007178  86F0               	bsf	intcon3,3,c	;volatile
 12336                           
 12337                           ; BSR set to: 14
 12338                           ;system.c: 216: TRISCbits.TRISC1 = 1;
 12339  00717A  8294               	bsf	3988,1,c	;volatile
 12340                           
 12341                           ; BSR set to: 14
 12342                           ;system.c: 217: TRISBbits.TRISB1 = 0;
 12343  00717C  9293               	bcf	3987,1,c	;volatile
 12344                           
 12345                           ; BSR set to: 14
 12346                           ;system.c: 218: TRISBbits.TRISB2 = 0;
 12347  00717E  9493               	bcf	3987,2,c	;volatile
 12348                           
 12349                           ; BSR set to: 14
 12350                           ;system.c: 220: SSP2STAT = 0xC0;
 12351  007180  0EC0               	movlw	192
 12352  007182  6E73               	movwf	3955,c	;volatile
 12353                           
 12354                           ; BSR set to: 14
 12355                           ;system.c: 221: SSP2CON1 = 0b00101010;
 12356  007184  0E2A               	movlw	42
 12357  007186  6E72               	movwf	3954,c	;volatile
 12358                           
 12359                           ; BSR set to: 14
 12360                           ;system.c: 225: LATAbits.LATA5 = 0;
 12361  007188  9A89               	bcf	3977,5,c	;volatile
 12362                           
 12363                           ; BSR set to: 14
 12364                           ;system.c: 226: TRISAbits.TRISA5 = 1;
 12365  00718A  8A92               	bsf	3986,5,c	;volatile
 12366                           
 12367                           ; BSR set to: 14
 12368                           ;system.c: 231: INTCONbits.GIEH = 1;
 12369  00718C  8EF2               	bsf	intcon,7,c	;volatile
 12370                           
 12371                           ; BSR set to: 14
 12372                           ;system.c: 232: INTCONbits.GIEL = 1;
 12373  00718E  8CF2               	bsf	intcon,6,c	;volatile
 12374                           
 12375                           ; BSR set to: 14
 12376  007190  0012               	return		;funcret
 12377  007192                     __end_of_SYSTEM_Initialize:
 12378                           	opt stack 0
 12379                           tblptru	equ	0xFF8
 12380                           tblptrh	equ	0xFF7
 12381                           tblptrl	equ	0xFF6
 12382                           tablat	equ	0xFF5
 12383                           prodh	equ	0xFF4
 12384                           prodl	equ	0xFF3
 12385                           intcon	equ	0xFF2
 12386                           intcon2	equ	0xFF1
 12387                           intcon3	equ	0xFF0
 12388                           indf0	equ	0xFEF
 12389                           postinc0	equ	0xFEE
 12390                           plusw0	equ	0xFEB
 12391                           fsr0h	equ	0xFEA
 12392                           fsr0l	equ	0xFE9
 12393                           wreg	equ	0xFE8
 12394                           indf1	equ	0xFE7
 12395                           fsr1h	equ	0xFE2
 12396                           fsr1l	equ	0xFE1
 12397                           indf2	equ	0xFDF
 12398                           postinc2	equ	0xFDE
 12399                           postdec2	equ	0xFDD
 12400                           plusw2	equ	0xFDB
 12401                           fsr2h	equ	0xFDA
 12402                           fsr2l	equ	0xFD9
 12403                           status	equ	0xFD8
 12404                           
 12405 ;; *************** function _RtccWrOn *****************
 12406 ;; Defined at:
 12407 ;;		line 21 in file "/opt/microchip/xc8/v1.35/sources/pic18/plib/rtcc/RtccWrOn.c"
 12408 ;; Parameters:    Size  Location     Type
 12409 ;;		None
 12410 ;; Auto vars:     Size  Location     Type
 12411 ;;  data            2    0        unsigned int 
 12412 ;; Return value:  Size  Location     Type
 12413 ;;		None               void
 12414 ;; Registers used:
 12415 ;;		wreg, status,2
 12416 ;; Tracked objects:
 12417 ;;		On entry : 0/0
 12418 ;;		On exit  : 0/0
 12419 ;;		Unchanged: 0/0
 12420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12425 ;;Total ram usage:        0 bytes
 12426 ;; Hardware stack levels used:    1
 12427 ;; Hardware stack levels required when called:    7
 12428 ;; This function calls:
 12429 ;;		Nothing
 12430 ;; This function is called by:
 12431 ;;		_SYSTEM_Initialize
 12432 ;;		_update_variable
 12433 ;; This function uses a non-reentrant model
 12434 ;;
 12435                           
 12436                           	psect	text40
 12437  008BFC                     __ptext40:
 12438                           	opt stack 0
 12439  008BFC                     _RtccWrOn:
 12440                           	opt stack 21
 12441                           
 12442                           ; BSR set to: 14
 12443                           ;incstack = 0
 12444  008BFC  9CF2               	bcf	intcon,6,c	;volatile
 12445  008BFE  0E55               	movlw	85
 12446  008C00  6EA7               	movwf	4007,c	;volatile
 12447  008C02  0EAA               	movlw	170
 12448  008C04  6EA7               	movwf	4007,c	;volatile
 12449  008C06  010F               	movlb	15	; () banked
 12450  008C08  8B3F               	bsf	63,5,b	;volatile
 12451                           
 12452                           ; BSR set to: 15
 12453  008C0A  8CF2               	bsf	intcon,6,c	;volatile
 12454                           
 12455                           ; BSR set to: 15
 12456  008C0C  0012               	return		;funcret
 12457  008C0E                     __end_of_RtccWrOn:
 12458                           	opt stack 0
 12459                           tblptru	equ	0xFF8
 12460                           tblptrh	equ	0xFF7
 12461                           tblptrl	equ	0xFF6
 12462                           tablat	equ	0xFF5
 12463                           prodh	equ	0xFF4
 12464                           prodl	equ	0xFF3
 12465                           intcon	equ	0xFF2
 12466                           intcon2	equ	0xFF1
 12467                           intcon3	equ	0xFF0
 12468                           indf0	equ	0xFEF
 12469                           postinc0	equ	0xFEE
 12470                           plusw0	equ	0xFEB
 12471                           fsr0h	equ	0xFEA
 12472                           fsr0l	equ	0xFE9
 12473                           wreg	equ	0xFE8
 12474                           indf1	equ	0xFE7
 12475                           fsr1h	equ	0xFE2
 12476                           fsr1l	equ	0xFE1
 12477                           indf2	equ	0xFDF
 12478                           postinc2	equ	0xFDE
 12479                           postdec2	equ	0xFDD
 12480                           plusw2	equ	0xFDB
 12481                           fsr2h	equ	0xFDA
 12482                           fsr2l	equ	0xFD9
 12483                           status	equ	0xFD8
 12484                           
 12485 ;; *************** function _MiApp_ProtocolInit *****************
 12486 ;; Defined at:
 12487 ;;		line 3563 in file "src/miwi/miwi_mesh.c"
 12488 ;; Parameters:    Size  Location     Type
 12489 ;;  bNetworkFree    1    wreg     unsigned char 
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;  bNetworkFree    1   56[BANK0 ] unsigned char 
 12492 ;;  MIP             3   57[BANK0 ] struct .
 12493 ;;  i               1   60[BANK0 ] unsigned char 
 12494 ;; Return value:  Size  Location     Type
 12495 ;;                  1    wreg      unsigned char 
 12496 ;; Registers used:
 12497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12498 ;; Tracked objects:
 12499 ;;		On entry : 0/0
 12500 ;;		On exit  : 0/0
 12501 ;;		Unchanged: 0/0
 12502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12504 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12506 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12507 ;;Total ram usage:        6 bytes
 12508 ;; Hardware stack levels used:    1
 12509 ;; Hardware stack levels required when called:   12
 12510 ;; This function calls:
 12511 ;;		_InitSymbolTimer
 12512 ;;		_MiApp_SetChannel
 12513 ;;		_MiMAC_Init
 12514 ;;		_MiMAC_SetAltAddress
 12515 ;; This function is called by:
 12516 ;;		_main
 12517 ;; This function uses a non-reentrant model
 12518 ;;
 12519                           
 12520                           	psect	text41
 12521  006E2E                     __ptext41:
 12522                           	opt stack 0
 12523  006E2E                     _MiApp_ProtocolInit:
 12524                           	opt stack 18
 12525                           
 12526                           ; BSR set to: 15
 12527                           ;incstack = 0
 12528                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
 12529  006E2E  0100               	movlb	0	; () banked
 12530  006E30  6F98               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
 12531                           
 12532                           ;miwi_mesh.c: 3565: MACINIT_PARAM MIP;
 12533                           ;miwi_mesh.c: 3566: uint8_t i;
 12534                           ;miwi_mesh.c: 3601: myShortAddress.Val = 0xFFFF;
 12535  006E32  0100               	movlb	0	; () banked
 12536  006E34  69DD               	setf	_myShortAddress& (0+255),b
 12537  006E36  69DE               	setf	(_myShortAddress+1)& (0+255),b
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;miwi_mesh.c: 3602: myPANID.Val = 0x1337;
 12541  006E38  0E13               	movlw	19
 12542  006E3A  0100               	movlb	0	; () banked
 12543  006E3C  6FDC               	movwf	(_myPANID+1)& (0+255),b
 12544  006E3E  0E37               	movlw	55
 12545  006E40  6FDB               	movwf	_myPANID& (0+255),b
 12546                           
 12547                           ;miwi_mesh.c: 3607: for(i = 0; i < 10; i++)
 12548  006E42  0E00               	movlw	0
 12549  006E44  0100               	movlb	0	; () banked
 12550  006E46  6F9C               	movwf	MiApp_ProtocolInit@i& (0+255),b
 12551  006E48                     l13742:
 12552                           
 12553                           ; BSR set to: 0
 12554  006E48  0E09               	movlw	9
 12555  006E4A  0100               	movlb	0	; () banked
 12556  006E4C  659C               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 12557  006E4E  D001               	goto	l13746
 12558  006E50  D012               	goto	l13752
 12559  006E52                     l13746:
 12560                           
 12561                           ; BSR set to: 0
 12562                           ;miwi_mesh.c: 3608: {
 12563                           ;miwi_mesh.c: 3609: ConnectionTable[i].status.Val = 0;
 12564  006E52  0100               	movlb	0	; () banked
 12565  006E54  519C               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 12566  006E56  0D09               	mullw	9
 12567  006E58  0E08               	movlw	8
 12568  006E5A  26F3               	addwf	prodl,f,c
 12569  006E5C  0E00               	movlw	0
 12570  006E5E  22F4               	addwfc	prodh,f,c
 12571  006E60  0E46               	movlw	low _ConnectionTable
 12572  006E62  24F3               	addwf	prodl,w,c
 12573  006E64  6ED9               	movwf	fsr2l,c
 12574  006E66  0E02               	movlw	high _ConnectionTable
 12575  006E68  20F4               	addwfc	prodh,w,c
 12576  006E6A  6EDA               	movwf	fsr2h,c
 12577  006E6C  0E00               	movlw	0
 12578  006E6E  6EDF               	movwf	indf2,c
 12579                           
 12580                           ; BSR set to: 0
 12581  006E70  0100               	movlb	0	; () banked
 12582  006E72  2B9C               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 12583  006E74  D7E9               	goto	l13742
 12584  006E76                     l13752:
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;miwi_mesh.c: 3610: }
 12588                           ;miwi_mesh.c: 3621: MiWiStateMachine.Val = 0;
 12589  006E76  0E00               	movlw	0
 12590  006E78  0100               	movlb	0	; () banked
 12591  006E7A  6FD5               	movwf	(_MiWiStateMachine+1)& (0+255),b
 12592  006E7C  0E00               	movlw	0
 12593  006E7E  6FD4               	movwf	_MiWiStateMachine& (0+255),b
 12594                           
 12595                           ;miwi_mesh.c: 3623: openSocketInfo.status.Val = 0;
 12596  006E80  0E00               	movlw	0
 12597  006E82  0101               	movlb	1	; () banked
 12598  006E84  6F20               	movwf	_openSocketInfo& (0+255),b
 12599                           
 12600                           ;miwi_mesh.c: 3624: MiWiCapacityInfo.Val = 0;
 12601  006E86  0E00               	movlw	0
 12602  006E88  0101               	movlb	1	; () banked
 12603  006E8A  6F64               	movwf	_MiWiCapacityInfo& (0+255),b
 12604                           
 12605                           ; BSR set to: 1
 12606                           ;miwi_mesh.c: 3626: InitSymbolTimer();
 12607  006E8C  ECF3  F045         	call	_InitSymbolTimer	;wreg free
 12608                           
 12609                           ;miwi_mesh.c: 3628: TxData = 0;
 12610  006E90  0E00               	movlw	0
 12611  006E92  0100               	movlb	0	; () banked
 12612  006E94  6FD8               	movwf	_TxData& (0+255),b
 12613                           
 12614                           ; BSR set to: 0
 12615                           ;miwi_mesh.c: 3644: for(i = 0; i < 10; i++)
 12616  006E96  0E00               	movlw	0
 12617  006E98  0100               	movlb	0	; () banked
 12618  006E9A  6F9C               	movwf	MiApp_ProtocolInit@i& (0+255),b
 12619  006E9C                     l13760:
 12620                           
 12621                           ; BSR set to: 0
 12622  006E9C  0E09               	movlw	9
 12623  006E9E  0100               	movlb	0	; () banked
 12624  006EA0  659C               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 12625  006EA2  D001               	goto	l13764
 12626  006EA4  D010               	goto	l13770
 12627  006EA6                     l13764:
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;miwi_mesh.c: 3645: {
 12631                           ;miwi_mesh.c: 3646: IncomingFrameCounter[i].Val = 0;
 12632  006EA6  0100               	movlb	0	; () banked
 12633  006EA8  519C               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 12634  006EAA  0D04               	mullw	4
 12635  006EAC  0E00               	movlw	low _IncomingFrameCounter
 12636  006EAE  24F3               	addwf	prodl,w,c
 12637  006EB0  6ED9               	movwf	fsr2l,c
 12638  006EB2  0E02               	movlw	high _IncomingFrameCounter
 12639  006EB4  20F4               	addwfc	prodh,w,c
 12640  006EB6  6EDA               	movwf	fsr2h,c
 12641  006EB8  6ADE               	clrf	postinc2,c
 12642  006EBA  6ADE               	clrf	postinc2,c
 12643  006EBC  6ADE               	clrf	postinc2,c
 12644  006EBE  6ADD               	clrf	postdec2,c
 12645                           
 12646                           ; BSR set to: 0
 12647  006EC0  0100               	movlb	0	; () banked
 12648  006EC2  2B9C               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 12649  006EC4  D7EB               	goto	l13760
 12650  006EC6                     l13770:
 12651                           
 12652                           ; BSR set to: 0
 12653                           ;miwi_mesh.c: 3647: }
 12654                           ;miwi_mesh.c: 3708: MIP.actionFlags.Val = 0;
 12655  006EC6  0E00               	movlw	0
 12656  006EC8  0100               	movlb	0	; () banked
 12657  006ECA  6F99               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 12658                           
 12659                           ;miwi_mesh.c: 3709: MIP.actionFlags.bits.PAddrLength = 4;
 12660  006ECC  0100               	movlb	0	; () banked
 12661  006ECE  5199               	movf	MiApp_ProtocolInit@MIP& (0+255),w,b
 12662  006ED0  0B87               	andlw	-121
 12663  006ED2  0920               	iorlw	32
 12664  006ED4  6F99               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 12665                           
 12666                           ; BSR set to: 0
 12667                           ;miwi_mesh.c: 3710: MIP.actionFlags.bits.CCAEnable = 1;
 12668  006ED6  0100               	movlb	0	; () banked
 12669  006ED8  8399               	bsf	MiApp_ProtocolInit@MIP& (0+255),1,b
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;miwi_mesh.c: 3711: MIP.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
 12673  006EDA  0100               	movlb	0	; () banked
 12674  006EDC  B198               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
 12675  006EDE  D003               	bra	u16075
 12676  006EE0  0100               	movlb	0	; () banked
 12677  006EE2  9599               	bcf	MiApp_ProtocolInit@MIP& (0+255),2,b
 12678  006EE4  D002               	bra	u16076
 12679  006EE6                     u16075:
 12680  006EE6  0100               	movlb	0	; () banked
 12681  006EE8  8599               	bsf	MiApp_ProtocolInit@MIP& (0+255),2,b
 12682  006EEA                     u16076:
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;miwi_mesh.c: 3712: MIP.PAddress = myLongAddress;
 12686  006EEA  0EC8               	movlw	low _myLongAddress
 12687  006EEC  0100               	movlb	0	; () banked
 12688  006EEE  6F9A               	movwf	(MiApp_ProtocolInit@MIP+1)& (0+255),b
 12689  006EF0  0E01               	movlw	high _myLongAddress
 12690  006EF2  0100               	movlb	0	; () banked
 12691  006EF4  6F9B               	movwf	(MiApp_ProtocolInit@MIP+2)& (0+255),b
 12692                           
 12693                           ; BSR set to: 0
 12694                           ;miwi_mesh.c: 3714: MiMAC_Init(MIP);
 12695  006EF6  C099  F093         	movff	MiApp_ProtocolInit@MIP,MiMAC_Init@initValue
 12696  006EFA  C09A  F094         	movff	MiApp_ProtocolInit@MIP+1,MiMAC_Init@initValue+1
 12697  006EFE  C09B  F095         	movff	MiApp_ProtocolInit@MIP+2,MiMAC_Init@initValue+2
 12698  006F02  ECDC  F035         	call	_MiMAC_Init	;wreg free
 12699                           
 12700                           ;miwi_mesh.c: 3716: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 12701  006F06  0EDD               	movlw	low _myShortAddress
 12702  006F08  0100               	movlb	0	; () banked
 12703  006F0A  6F81               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 12704  006F0C  0E00               	movlw	high _myShortAddress
 12705  006F0E  0100               	movlb	0	; () banked
 12706  006F10  6F82               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 12707  006F12  0EDB               	movlw	low _myPANID
 12708  006F14  0100               	movlb	0	; () banked
 12709  006F16  6F83               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 12710  006F18  0E00               	movlw	high _myPANID
 12711  006F1A  0100               	movlb	0	; () banked
 12712  006F1C  6F84               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 12713  006F1E  EC21  F046         	call	_MiMAC_SetAltAddress	;wreg free
 12714                           
 12715                           ;miwi_mesh.c: 3717: MiApp_SetChannel(currentChannel);
 12716  006F22  0101               	movlb	1	; () banked
 12717  006F24  51D2               	movf	_currentChannel& (0+255),w,b
 12718  006F26  EC9F  F045         	call	_MiApp_SetChannel
 12719                           
 12720                           ;miwi_mesh.c: 3722: MiWiCapacityInfo.bits.Sleep = 1;
 12721  006F2A  0101               	movlb	1	; () banked
 12722  006F2C  8164               	bsf	_MiWiCapacityInfo& (0+255),0,b
 12723                           
 12724                           ; BSR set to: 1
 12725                           ;miwi_mesh.c: 3725: MiWiCapacityInfo.bits.Security = 1;
 12726  006F2E  0101               	movlb	1	; () banked
 12727  006F30  8764               	bsf	_MiWiCapacityInfo& (0+255),3,b
 12728                           
 12729                           ; BSR set to: 1
 12730                           ;miwi_mesh.c: 3727: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 12731  006F32  C03F  F097         	movff	_ConnMode,??_MiApp_ProtocolInit
 12732  006F36  0100               	movlb	0	; () banked
 12733  006F38  3B97               	swapf	??_MiApp_ProtocolInit& (0+255),f,b
 12734  006F3A  0101               	movlb	1	; () banked
 12735  006F3C  5164               	movf	_MiWiCapacityInfo& (0+255),w,b
 12736  006F3E  0100               	movlb	0	; () banked
 12737  006F40  1997               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 12738  006F42  0BCF               	andlw	-49
 12739  006F44  1997               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 12740  006F46  0101               	movlb	1	; () banked
 12741  006F48  6F64               	movwf	_MiWiCapacityInfo& (0+255),b
 12742                           
 12743                           ; BSR set to: 1
 12744                           ;miwi_mesh.c: 3742: MiWiSeqNum = TMR1L;
 12745  006F4A  CFCE F0D7          	movff	4046,_MiWiSeqNum	;volatile
 12746                           
 12747                           ; BSR set to: 1
 12748                           ;miwi_mesh.c: 3744: INTCON3bits.INT1IF = 0;
 12749  006F4E  90F0               	bcf	intcon3,0,c	;volatile
 12750                           
 12751                           ; BSR set to: 1
 12752                           ;miwi_mesh.c: 3745: INTCON3bits.INT1IE = 1;
 12753  006F50  86F0               	bsf	intcon3,3,c	;volatile
 12754  006F52  0012               	return	
 12755  006F54                     __end_of_MiApp_ProtocolInit:
 12756                           	opt stack 0
 12757                           tblptru	equ	0xFF8
 12758                           tblptrh	equ	0xFF7
 12759                           tblptrl	equ	0xFF6
 12760                           tablat	equ	0xFF5
 12761                           prodh	equ	0xFF4
 12762                           prodl	equ	0xFF3
 12763                           intcon	equ	0xFF2
 12764                           intcon2	equ	0xFF1
 12765                           intcon3	equ	0xFF0
 12766                           indf0	equ	0xFEF
 12767                           postinc0	equ	0xFEE
 12768                           plusw0	equ	0xFEB
 12769                           fsr0h	equ	0xFEA
 12770                           fsr0l	equ	0xFE9
 12771                           wreg	equ	0xFE8
 12772                           indf1	equ	0xFE7
 12773                           fsr1h	equ	0xFE2
 12774                           fsr1l	equ	0xFE1
 12775                           indf2	equ	0xFDF
 12776                           postinc2	equ	0xFDE
 12777                           postdec2	equ	0xFDD
 12778                           plusw2	equ	0xFDB
 12779                           fsr2h	equ	0xFDA
 12780                           fsr2l	equ	0xFD9
 12781                           status	equ	0xFD8
 12782                           
 12783 ;; *************** function _MiMAC_Init *****************
 12784 ;; Defined at:
 12785 ;;		line 585 in file "src/miwi/drv_mrf_miwi_89xa.c"
 12786 ;; Parameters:    Size  Location     Type
 12787 ;;  initValue       3   51[BANK0 ] struct .
 12788 ;; Auto vars:     Size  Location     Type
 12789 ;;  i               1   54[BANK0 ] unsigned char 
 12790 ;; Return value:  Size  Location     Type
 12791 ;;                  1    wreg      unsigned char 
 12792 ;; Registers used:
 12793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12794 ;; Tracked objects:
 12795 ;;		On entry : 0/0
 12796 ;;		On exit  : 0/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12799 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12800 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12802 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12803 ;;Total ram usage:        4 bytes
 12804 ;; Hardware stack levels used:    1
 12805 ;; Hardware stack levels required when called:   10
 12806 ;; This function calls:
 12807 ;;		_DELAY_ms
 12808 ;;		_RegisterSet
 12809 ;;		_SetRFMode
 12810 ;; This function is called by:
 12811 ;;		_MiApp_ProtocolInit
 12812 ;; This function uses a non-reentrant model
 12813 ;;
 12814                           
 12815                           	psect	text42
 12816  006BB8                     __ptext42:
 12817                           	opt stack 0
 12818  006BB8                     _MiMAC_Init:
 12819                           	opt stack 19
 12820                           
 12821                           ;drv_mrf_miwi_89xa.c: 587: uint8_t i;
 12822                           ;drv_mrf_miwi_89xa.c: 589: MACInitParams = initValue;
 12823                           
 12824                           ; BSR set to: 1
 12825                           ;incstack = 0
 12826  006BB8  C093  F03C         	movff	MiMAC_Init@initValue,_MACInitParams
 12827  006BBC  C094  F03D         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
 12828  006BC0  C095  F03E         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
 12829                           
 12830                           ;drv_mrf_miwi_89xa.c: 591: DELAY_ms(20);
 12831  006BC4  0E00               	movlw	0
 12832  006BC6  0100               	movlb	0	; () banked
 12833  006BC8  6F8E               	movwf	(DELAY_ms@ms+1)& (0+255),b
 12834  006BCA  0E14               	movlw	20
 12835  006BCC  6F8D               	movwf	DELAY_ms@ms& (0+255),b
 12836  006BCE  EC90  F03E         	call	_DELAY_ms	;wreg free
 12837                           
 12838                           ;drv_mrf_miwi_89xa.c: 592: LATBbits.LATB3 = 1;
 12839  006BD2  868A               	bsf	3978,3,c	;volatile
 12840                           
 12841                           ;drv_mrf_miwi_89xa.c: 593: LATCbits.LATC6 = 1;
 12842  006BD4  8C8B               	bsf	3979,6,c	;volatile
 12843                           
 12844                           ;drv_mrf_miwi_89xa.c: 596: MACSeq = TMR1L;
 12845  006BD6  CFCE F041          	movff	4046,_MACSeq	;volatile
 12846                           
 12847                           ;drv_mrf_miwi_89xa.c: 597: ReceivedBankIndex = 0xFF;
 12848  006BDA  6845               	setf	_ReceivedBankIndex,c
 12849                           
 12850                           ;drv_mrf_miwi_89xa.c: 599: for(i = 0; i < 2; i++)
 12851  006BDC  0E00               	movlw	0
 12852  006BDE  0100               	movlb	0	; () banked
 12853  006BE0  6F96               	movwf	MiMAC_Init@i& (0+255),b
 12854  006BE2                     l12662:
 12855                           
 12856                           ; BSR set to: 0
 12857  006BE2  0E01               	movlw	1
 12858  006BE4  0100               	movlb	0	; () banked
 12859  006BE6  6596               	cpfsgt	MiMAC_Init@i& (0+255),b
 12860  006BE8  D001               	goto	l12666
 12861  006BEA  D00E               	goto	l12672
 12862  006BEC                     l12666:
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;drv_mrf_miwi_89xa.c: 600: {
 12866                           ;drv_mrf_miwi_89xa.c: 601: RxPacket[i].flags.Val = 0;
 12867  006BEC  0100               	movlb	0	; () banked
 12868  006BEE  5196               	movf	MiMAC_Init@i& (0+255),w,b
 12869  006BF0  0D42               	mullw	66
 12870  006BF2  0E50               	movlw	low _RxPacket
 12871  006BF4  24F3               	addwf	prodl,w,c
 12872  006BF6  6ED9               	movwf	fsr2l,c
 12873  006BF8  0E03               	movlw	high _RxPacket
 12874  006BFA  20F4               	addwfc	prodh,w,c
 12875  006BFC  6EDA               	movwf	fsr2h,c
 12876  006BFE  0E00               	movlw	0
 12877  006C00  6EDF               	movwf	indf2,c
 12878                           
 12879                           ; BSR set to: 0
 12880  006C02  0100               	movlb	0	; () banked
 12881  006C04  2B96               	incf	MiMAC_Init@i& (0+255),f,b
 12882  006C06  D7ED               	goto	l12662
 12883  006C08                     l12672:
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;drv_mrf_miwi_89xa.c: 602: }
 12887                           ;drv_mrf_miwi_89xa.c: 605: for(i = 0; i < 5; i++)
 12888  006C08  0E00               	movlw	0
 12889  006C0A  0100               	movlb	0	; () banked
 12890  006C0C  6F96               	movwf	MiMAC_Init@i& (0+255),b
 12891  006C0E                     l12674:
 12892                           
 12893                           ; BSR set to: 0
 12894  006C0E  0E04               	movlw	4
 12895  006C10  0100               	movlb	0	; () banked
 12896  006C12  6596               	cpfsgt	MiMAC_Init@i& (0+255),b
 12897  006C14  D001               	goto	l12678
 12898  006C16  D00E               	goto	l12684
 12899  006C18                     l12678:
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;drv_mrf_miwi_89xa.c: 606: {
 12903                           ;drv_mrf_miwi_89xa.c: 607: AckInfo[i].Valid = FALSE;
 12904  006C18  0100               	movlb	0	; () banked
 12905  006C1A  5196               	movf	MiMAC_Init@i& (0+255),w,b
 12906  006C1C  0D06               	mullw	6
 12907  006C1E  0E28               	movlw	low _AckInfo
 12908  006C20  24F3               	addwf	prodl,w,c
 12909  006C22  6ED9               	movwf	fsr2l,c
 12910  006C24  0E02               	movlw	high _AckInfo
 12911  006C26  20F4               	addwfc	prodh,w,c
 12912  006C28  6EDA               	movwf	fsr2h,c
 12913  006C2A  0E00               	movlw	0
 12914  006C2C  6EDF               	movwf	indf2,c
 12915                           
 12916                           ; BSR set to: 0
 12917  006C2E  0100               	movlb	0	; () banked
 12918  006C30  2B96               	incf	MiMAC_Init@i& (0+255),f,b
 12919  006C32  D7ED               	goto	l12674
 12920  006C34                     l12684:
 12921                           
 12922                           ; BSR set to: 0
 12923                           ;drv_mrf_miwi_89xa.c: 608: }
 12924                           ;drv_mrf_miwi_89xa.c: 626: OutgoingFrameCounter.Val = 1;
 12925  006C34  0E01               	movlw	1
 12926  006C36  0101               	movlb	1	; () banked
 12927  006C38  6F3E               	movwf	_OutgoingFrameCounter& (0+255),b
 12928  006C3A  0E00               	movlw	0
 12929  006C3C  6F3F               	movwf	(_OutgoingFrameCounter+1)& (0+255),b
 12930  006C3E  0E00               	movlw	0
 12931  006C40  6F40               	movwf	(_OutgoingFrameCounter+2)& (0+255),b
 12932  006C42  0E00               	movlw	0
 12933  006C44  6F41               	movwf	(_OutgoingFrameCounter+3)& (0+255),b
 12934                           
 12935                           ;drv_mrf_miwi_89xa.c: 628: for(i = 0; i < 8; i++)
 12936  006C46  0E00               	movlw	0
 12937  006C48  0100               	movlb	0	; () banked
 12938  006C4A  6F96               	movwf	MiMAC_Init@i& (0+255),b
 12939  006C4C                     l12686:
 12940                           
 12941                           ; BSR set to: 0
 12942  006C4C  0E07               	movlw	7
 12943  006C4E  0100               	movlb	0	; () banked
 12944  006C50  6596               	cpfsgt	MiMAC_Init@i& (0+255),b
 12945  006C52  D001               	goto	l12690
 12946  006C54  D017               	goto	l12696
 12947  006C56                     l12690:
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;drv_mrf_miwi_89xa.c: 629: {
 12951                           ;drv_mrf_miwi_89xa.c: 630: key[i] = mySecurityKey[i];
 12952  006C56  0100               	movlb	0	; () banked
 12953  006C58  5196               	movf	MiMAC_Init@i& (0+255),w,b
 12954  006C5A  0D01               	mullw	1
 12955  006C5C  0E36               	movlw	low _mySecurityKey
 12956  006C5E  24F3               	addwf	prodl,w,c
 12957  006C60  6ED9               	movwf	fsr2l,c
 12958  006C62  0E01               	movlw	high _mySecurityKey
 12959  006C64  20F4               	addwfc	prodh,w,c
 12960  006C66  6EDA               	movwf	fsr2h,c
 12961  006C68  0100               	movlb	0	; () banked
 12962  006C6A  5196               	movf	MiMAC_Init@i& (0+255),w,b
 12963  006C6C  0D01               	mullw	1
 12964  006C6E  0EC0               	movlw	low _key
 12965  006C70  24F3               	addwf	prodl,w,c
 12966  006C72  6EE1               	movwf	fsr1l,c
 12967  006C74  0E01               	movlw	high _key
 12968  006C76  20F4               	addwfc	prodh,w,c
 12969  006C78  6EE2               	movwf	fsr1h,c
 12970  006C7A  CFDF FFE7          	movff	indf2,indf1
 12971                           
 12972                           ; BSR set to: 0
 12973  006C7E  0100               	movlb	0	; () banked
 12974  006C80  2B96               	incf	MiMAC_Init@i& (0+255),f,b
 12975  006C82  D7E4               	goto	l12686
 12976  006C84                     l12696:
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;drv_mrf_miwi_89xa.c: 631: }
 12980                           ;drv_mrf_miwi_89xa.c: 636: for (i = 0 ; i <= 31; i++)
 12981  006C84  0E00               	movlw	0
 12982  006C86  0100               	movlb	0	; () banked
 12983  006C88  6F96               	movwf	MiMAC_Init@i& (0+255),b
 12984  006C8A                     l12698:
 12985                           
 12986                           ; BSR set to: 0
 12987  006C8A  0E1F               	movlw	31
 12988  006C8C  0100               	movlb	0	; () banked
 12989  006C8E  6596               	cpfsgt	MiMAC_Init@i& (0+255),b
 12990  006C90  D001               	goto	l12702
 12991  006C92  D017               	goto	l12708
 12992  006C94                     l12702:
 12993                           
 12994                           ; BSR set to: 0
 12995                           ;drv_mrf_miwi_89xa.c: 637: {
 12996                           ;drv_mrf_miwi_89xa.c: 638: RegisterSet(InitConfigRegs[i]);
 12997  006C94  0100               	movlb	0	; () banked
 12998  006C96  5196               	movf	MiMAC_Init@i& (0+255),w,b
 12999  006C98  0D02               	mullw	2
 13000  006C9A  0EF5               	movlw	low _InitConfigRegs
 13001  006C9C  24F3               	addwf	prodl,w,c
 13002  006C9E  6EF6               	movwf	tblptrl,c
 13003  006CA0  0E1F               	movlw	high _InitConfigRegs
 13004  006CA2  20F4               	addwfc	prodh,w,c
 13005  006CA4  6EF7               	movwf	tblptrh,c
 13006  006CA6                     	if	1	;There are 3 active tblptr bytes
 13007  006CA6  6AF8               	clrf	tblptru,c
 13008  006CA8  0E00               	movlw	low (__mediumconst shr (0+16))
 13009  006CAA  22F8               	addwfc	tblptru,f,c
 13010  006CAC                     	endif
 13011  006CAC  0009               	tblrd		*+
 13012  006CAE  CFF5 F083          	movff	tablat,RegisterSet@setting
 13013  006CB2  000A               	tblrd		*-
 13014  006CB4  CFF5 F084          	movff	tablat,RegisterSet@setting+1
 13015  006CB8  EC38  F044         	call	_RegisterSet	;wreg free
 13016  006CBC  0100               	movlb	0	; () banked
 13017  006CBE  2B96               	incf	MiMAC_Init@i& (0+255),f,b
 13018  006CC0  D7E4               	goto	l12698
 13019  006CC2                     l12708:
 13020                           
 13021                           ; BSR set to: 0
 13022                           ;drv_mrf_miwi_89xa.c: 639: }
 13023                           ;drv_mrf_miwi_89xa.c: 640: SetRFMode(0x20);
 13024  006CC2  0E20               	movlw	32
 13025  006CC4  EC18  F040         	call	_SetRFMode
 13026                           
 13027                           ;drv_mrf_miwi_89xa.c: 642: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 13028  006CC8  0E00               	movlw	0
 13029  006CCA  0100               	movlb	0	; () banked
 13030  006CCC  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 13031  006CCE  0E56               	movlw	86
 13032  006CD0  6F83               	movwf	RegisterSet@setting& (0+255),b
 13033  006CD2  EC38  F044         	call	_RegisterSet	;wreg free
 13034                           
 13035                           ;drv_mrf_miwi_89xa.c: 643: SetRFMode(0x40);
 13036  006CD6  0E40               	movlw	64
 13037  006CD8  EC18  F040         	call	_SetRFMode
 13038                           
 13039                           ;drv_mrf_miwi_89xa.c: 646: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 13040  006CDC  0E1C               	movlw	28
 13041  006CDE  0100               	movlb	0	; () banked
 13042  006CE0  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 13043  006CE2  0E0F               	movlw	15
 13044  006CE4  6F83               	movwf	RegisterSet@setting& (0+255),b
 13045  006CE6  EC38  F044         	call	_RegisterSet	;wreg free
 13046                           
 13047                           ;drv_mrf_miwi_89xa.c: 648: SetRFMode(0x60);
 13048  006CEA  0E60               	movlw	96
 13049  006CEC  EC18  F040         	call	_SetRFMode
 13050                           
 13051                           ;drv_mrf_miwi_89xa.c: 651: INTCONbits.INT0IF = 0;
 13052  006CF0  92F2               	bcf	intcon,1,c	;volatile
 13053                           
 13054                           ;drv_mrf_miwi_89xa.c: 652: INTCONbits.INT0IE = 1;
 13055  006CF2  88F2               	bsf	intcon,4,c	;volatile
 13056                           
 13057                           ;drv_mrf_miwi_89xa.c: 654: INTCON3bits.INT1IF = 0;
 13058  006CF4  90F0               	bcf	intcon3,0,c	;volatile
 13059                           
 13060                           ;drv_mrf_miwi_89xa.c: 655: INTCON3bits.INT1IE = 1;
 13061  006CF6  86F0               	bsf	intcon3,3,c	;volatile
 13062  006CF8  0012               	return	
 13063  006CFA                     __end_of_MiMAC_Init:
 13064                           	opt stack 0
 13065                           tblptru	equ	0xFF8
 13066                           tblptrh	equ	0xFF7
 13067                           tblptrl	equ	0xFF6
 13068                           tablat	equ	0xFF5
 13069                           prodh	equ	0xFF4
 13070                           prodl	equ	0xFF3
 13071                           intcon	equ	0xFF2
 13072                           intcon2	equ	0xFF1
 13073                           intcon3	equ	0xFF0
 13074                           indf0	equ	0xFEF
 13075                           postinc0	equ	0xFEE
 13076                           plusw0	equ	0xFEB
 13077                           fsr0h	equ	0xFEA
 13078                           fsr0l	equ	0xFE9
 13079                           wreg	equ	0xFE8
 13080                           indf1	equ	0xFE7
 13081                           fsr1h	equ	0xFE2
 13082                           fsr1l	equ	0xFE1
 13083                           indf2	equ	0xFDF
 13084                           postinc2	equ	0xFDE
 13085                           postdec2	equ	0xFDD
 13086                           plusw2	equ	0xFDB
 13087                           fsr2h	equ	0xFDA
 13088                           fsr2l	equ	0xFD9
 13089                           status	equ	0xFD8
 13090                           
 13091 ;; *************** function _DELAY_ms *****************
 13092 ;; Defined at:
 13093 ;;		line 108 in file "src/18F27J53/delay.c"
 13094 ;; Parameters:    Size  Location     Type
 13095 ;;  ms              2   45[BANK0 ] unsigned int 
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;  cyclesRequir    4   47[BANK0 ] long 
 13098 ;; Return value:  Size  Location     Type
 13099 ;;		None               void
 13100 ;; Registers used:
 13101 ;;		wreg, status,2, status,0, cstack
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13108 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13110 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13111 ;;Total ram usage:        6 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; Hardware stack levels required when called:    8
 13114 ;; This function calls:
 13115 ;;		___lmul
 13116 ;; This function is called by:
 13117 ;;		_MiMAC_Init
 13118 ;;		_MiMAC_PowerState
 13119 ;; This function uses a non-reentrant model
 13120 ;;
 13121                           
 13122                           	psect	text43
 13123  007D20                     __ptext43:
 13124                           	opt stack 0
 13125  007D20                     _DELAY_ms:
 13126                           	opt stack 19
 13127                           
 13128                           ;delay.c: 110: int32_t cyclesRequiredForEntireDelay = 0;
 13129                           
 13130                           ;incstack = 0
 13131  007D20  0E00               	movlw	0
 13132  007D22  0100               	movlb	0	; () banked
 13133  007D24  6F8F               	movwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),b
 13134  007D26  0E00               	movlw	0
 13135  007D28  6F90               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),b
 13136  007D2A  0E00               	movlw	0
 13137  007D2C  6F91               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),b
 13138  007D2E  0E00               	movlw	0
 13139  007D30  6F92               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),b
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;delay.c: 113: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 13143  007D32  C08D  F081         	movff	DELAY_ms@ms,___lmul@multiplier
 13144  007D36  C08E  F082         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
 13145  007D3A  0100               	movlb	0	; () banked
 13146  007D3C  6B83               	clrf	(___lmul@multiplier+2)& (0+255),b
 13147  007D3E  6B84               	clrf	(___lmul@multiplier+3)& (0+255),b
 13148  007D40  0EA0               	movlw	160
 13149  007D42  0100               	movlb	0	; () banked
 13150  007D44  6F85               	movwf	___lmul@multiplicand& (0+255),b
 13151  007D46  0E0F               	movlw	15
 13152  007D48  6F86               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13153  007D4A  0E00               	movlw	0
 13154  007D4C  6F87               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13155  007D4E  0E00               	movlw	0
 13156  007D50  6F88               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13157  007D52  EC1C  F042         	call	___lmul	;wreg free
 13158  007D56  C081  F08F         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
 13159  007D5A  C082  F090         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
 13160  007D5E  C083  F091         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
 13161  007D62  C084  F092         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
 13162                           
 13163                           ;delay.c: 117: cyclesRequiredForEntireDelay -= (148 + 22);
 13164  007D66  0E56               	movlw	86
 13165  007D68  0100               	movlb	0	; () banked
 13166  007D6A  278F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 13167  007D6C  0EFF               	movlw	255
 13168  007D6E  2390               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 13169  007D70  0EFF               	movlw	255
 13170  007D72  2391               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 13171  007D74  0EFF               	movlw	255
 13172  007D76  2392               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;delay.c: 119: if (cyclesRequiredForEntireDelay <= (170+25))
 13176  007D78  0100               	movlb	0	; () banked
 13177  007D7A  BF92               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 13178  007D7C  0012               	return	
 13179  007D7E  0100               	movlb	0	; () banked
 13180  007D80  5192               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 13181  007D82  0100               	movlb	0	; () banked
 13182  007D84  1191               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 13183  007D86  0100               	movlb	0	; () banked
 13184  007D88  1190               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 13185  007D8A  E110               	bnz	l18
 13186  007D8C  0EC4               	movlw	196
 13187  007D8E  0100               	movlb	0	; () banked
 13188  007D90  5D8F               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 13189  007D92  A0D8               	btfss	status,0,c
 13190  007D94  0012               	return	
 13191  007D96  D00A               	goto	l18
 13192  007D98                     l19:
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;delay.c: 126: {
 13196                           ;delay.c: 127: __nop();
 13197  007D98  F000               	nop	
 13198                           
 13199                           ;delay.c: 128: cyclesRequiredForEntireDelay -= 39;
 13200  007D9A  0ED9               	movlw	217
 13201  007D9C  0100               	movlb	0	; () banked
 13202  007D9E  278F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 13203  007DA0  0EFF               	movlw	255
 13204  007DA2  2390               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 13205  007DA4  0EFF               	movlw	255
 13206  007DA6  2391               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 13207  007DA8  0EFF               	movlw	255
 13208  007DAA  2392               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 13209  007DAC                     l18:
 13210                           
 13211                           ; BSR set to: 0
 13212  007DAC  0100               	movlb	0	; () banked
 13213  007DAE  BF92               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 13214  007DB0  0012               	return	
 13215  007DB2  0100               	movlb	0	; () banked
 13216  007DB4  5192               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 13217  007DB6  0100               	movlb	0	; () banked
 13218  007DB8  1191               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 13219  007DBA  0100               	movlb	0	; () banked
 13220  007DBC  1190               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 13221  007DBE  E1EC               	bnz	l19
 13222  007DC0  0100               	movlb	0	; () banked
 13223  007DC2  058F               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 13224  007DC4  A0D8               	btfss	status,0,c
 13225  007DC6  0012               	return	
 13226  007DC8  D7E7               	goto	l19
 13227  007DCA                     __end_of_DELAY_ms:
 13228                           	opt stack 0
 13229                           tblptru	equ	0xFF8
 13230                           tblptrh	equ	0xFF7
 13231                           tblptrl	equ	0xFF6
 13232                           tablat	equ	0xFF5
 13233                           prodh	equ	0xFF4
 13234                           prodl	equ	0xFF3
 13235                           intcon	equ	0xFF2
 13236                           intcon2	equ	0xFF1
 13237                           intcon3	equ	0xFF0
 13238                           indf0	equ	0xFEF
 13239                           postinc0	equ	0xFEE
 13240                           plusw0	equ	0xFEB
 13241                           fsr0h	equ	0xFEA
 13242                           fsr0l	equ	0xFE9
 13243                           wreg	equ	0xFE8
 13244                           indf1	equ	0xFE7
 13245                           fsr1h	equ	0xFE2
 13246                           fsr1l	equ	0xFE1
 13247                           indf2	equ	0xFDF
 13248                           postinc2	equ	0xFDE
 13249                           postdec2	equ	0xFDD
 13250                           plusw2	equ	0xFDB
 13251                           fsr2h	equ	0xFDA
 13252                           fsr2l	equ	0xFD9
 13253                           status	equ	0xFD8
 13254                           
 13255 ;; *************** function ___lmul *****************
 13256 ;; Defined at:
 13257 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/Umul32.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  multiplier      4   33[BANK0 ] unsigned long 
 13260 ;;  multiplicand    4   37[BANK0 ] unsigned long 
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;  product         4   41[BANK0 ] unsigned long 
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  4   33[BANK0 ] unsigned long 
 13265 ;; Registers used:
 13266 ;;		wreg, status,2, status,0
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/0
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13272 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13273 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13275 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13276 ;;Total ram usage:       12 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; Hardware stack levels required when called:    7
 13279 ;; This function calls:
 13280 ;;		Nothing
 13281 ;; This function is called by:
 13282 ;;		_DELAY_ms
 13283 ;;		_send_initial_update
 13284 ;;		_send_periodical_update
 13285 ;;		_DELAY_10us
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text44
 13290  008438                     __ptext44:
 13291                           	opt stack 0
 13292  008438                     ___lmul:
 13293                           	opt stack 22
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;incstack = 0
 13297  008438  0E00               	movlw	0
 13298  00843A  0100               	movlb	0	; () banked
 13299  00843C  6F89               	movwf	___lmul@product& (0+255),b
 13300  00843E  0E00               	movlw	0
 13301  008440  6F8A               	movwf	(___lmul@product+1)& (0+255),b
 13302  008442  0E00               	movlw	0
 13303  008444  6F8B               	movwf	(___lmul@product+2)& (0+255),b
 13304  008446  0E00               	movlw	0
 13305  008448  6F8C               	movwf	(___lmul@product+3)& (0+255),b
 13306  00844A                     l11868:
 13307                           
 13308                           ; BSR set to: 0
 13309  00844A  0100               	movlb	0	; () banked
 13310  00844C  A181               	btfss	___lmul@multiplier& (0+255),0,b
 13311  00844E  D010               	goto	l11872
 13312                           
 13313                           ; BSR set to: 0
 13314  008450  0100               	movlb	0	; () banked
 13315  008452  5185               	movf	___lmul@multiplicand& (0+255),w,b
 13316  008454  0100               	movlb	0	; () banked
 13317  008456  2789               	addwf	___lmul@product& (0+255),f,b
 13318  008458  0100               	movlb	0	; () banked
 13319  00845A  5186               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13320  00845C  0100               	movlb	0	; () banked
 13321  00845E  238A               	addwfc	(___lmul@product+1)& (0+255),f,b
 13322  008460  0100               	movlb	0	; () banked
 13323  008462  5187               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13324  008464  0100               	movlb	0	; () banked
 13325  008466  238B               	addwfc	(___lmul@product+2)& (0+255),f,b
 13326  008468  0100               	movlb	0	; () banked
 13327  00846A  5188               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13328  00846C  0100               	movlb	0	; () banked
 13329  00846E  238C               	addwfc	(___lmul@product+3)& (0+255),f,b
 13330  008470                     l11872:
 13331                           
 13332                           ; BSR set to: 0
 13333  008470  0100               	movlb	0	; () banked
 13334  008472  90D8               	bcf	status,0,c
 13335  008474  3785               	rlcf	___lmul@multiplicand& (0+255),f,b
 13336  008476  3786               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13337  008478  3787               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13338  00847A  3788               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13339                           
 13340                           ; BSR set to: 0
 13341  00847C  0100               	movlb	0	; () banked
 13342  00847E  90D8               	bcf	status,0,c
 13343  008480  3384               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13344  008482  3383               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13345  008484  3382               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13346  008486  3381               	rrcf	___lmul@multiplier& (0+255),f,b
 13347  008488  0100               	movlb	0	; () banked
 13348  00848A  5181               	movf	___lmul@multiplier& (0+255),w,b
 13349  00848C  0100               	movlb	0	; () banked
 13350  00848E  1182               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13351  008490  0100               	movlb	0	; () banked
 13352  008492  1183               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13353  008494  0100               	movlb	0	; () banked
 13354  008496  1184               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13355  008498  A4D8               	btfss	status,2,c
 13356  00849A  D7D7               	goto	l11868
 13357                           
 13358                           ; BSR set to: 0
 13359  00849C  C089  F081         	movff	___lmul@product,?___lmul
 13360  0084A0  C08A  F082         	movff	___lmul@product+1,?___lmul+1
 13361  0084A4  C08B  F083         	movff	___lmul@product+2,?___lmul+2
 13362  0084A8  C08C  F084         	movff	___lmul@product+3,?___lmul+3
 13363                           
 13364                           ; BSR set to: 0
 13365  0084AC  0012               	return		;funcret
 13366  0084AE                     __end_of___lmul:
 13367                           	opt stack 0
 13368                           tblptru	equ	0xFF8
 13369                           tblptrh	equ	0xFF7
 13370                           tblptrl	equ	0xFF6
 13371                           tablat	equ	0xFF5
 13372                           prodh	equ	0xFF4
 13373                           prodl	equ	0xFF3
 13374                           intcon	equ	0xFF2
 13375                           intcon2	equ	0xFF1
 13376                           intcon3	equ	0xFF0
 13377                           indf0	equ	0xFEF
 13378                           postinc0	equ	0xFEE
 13379                           plusw0	equ	0xFEB
 13380                           fsr0h	equ	0xFEA
 13381                           fsr0l	equ	0xFE9
 13382                           wreg	equ	0xFE8
 13383                           indf1	equ	0xFE7
 13384                           fsr1h	equ	0xFE2
 13385                           fsr1l	equ	0xFE1
 13386                           indf2	equ	0xFDF
 13387                           postinc2	equ	0xFDE
 13388                           postdec2	equ	0xFDD
 13389                           plusw2	equ	0xFDB
 13390                           fsr2h	equ	0xFDA
 13391                           fsr2l	equ	0xFD9
 13392                           status	equ	0xFD8
 13393                           
 13394 ;; *************** function _InitSymbolTimer *****************
 13395 ;; Defined at:
 13396 ;;		line 59 in file "src/18F27J53/symbol.c"
 13397 ;; Parameters:    Size  Location     Type
 13398 ;;		None
 13399 ;; Auto vars:     Size  Location     Type
 13400 ;;		None
 13401 ;; Return value:  Size  Location     Type
 13402 ;;		None               void
 13403 ;; Registers used:
 13404 ;;		wreg, status,2
 13405 ;; Tracked objects:
 13406 ;;		On entry : 0/0
 13407 ;;		On exit  : 0/0
 13408 ;;		Unchanged: 0/0
 13409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13414 ;;Total ram usage:        0 bytes
 13415 ;; Hardware stack levels used:    1
 13416 ;; Hardware stack levels required when called:    7
 13417 ;; This function calls:
 13418 ;;		Nothing
 13419 ;; This function is called by:
 13420 ;;		_MiApp_ProtocolInit
 13421 ;; This function uses a non-reentrant model
 13422 ;;
 13423                           
 13424                           	psect	text45
 13425  008BE6                     __ptext45:
 13426                           	opt stack 0
 13427  008BE6                     _InitSymbolTimer:
 13428                           	opt stack 22
 13429                           
 13430                           ;symbol.c: 62: T1CON = 0b00110000;
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;incstack = 0
 13434  008BE6  0E30               	movlw	48
 13435  008BE8  6ECD               	movwf	4045,c	;volatile
 13436                           
 13437                           ;symbol.c: 63: PIR1bits.TMR1IF = 0;
 13438  008BEA  909E               	bcf	3998,0,c	;volatile
 13439                           
 13440                           ;symbol.c: 64: PIE1bits.TMR1IE = 1;
 13441  008BEC  809D               	bsf	3997,0,c	;volatile
 13442                           
 13443                           ;symbol.c: 65: T1CONbits.TMR1ON = 1;
 13444  008BEE  80CD               	bsf	4045,0,c	;volatile
 13445                           
 13446                           ;symbol.c: 74: timerExtension1 = 0;
 13447  008BF0  0E00               	movlw	0
 13448  008BF2  0100               	movlb	0	; () banked
 13449  008BF4  6FDA               	movwf	_timerExtension1& (0+255),b	;volatile
 13450                           
 13451                           ;symbol.c: 75: timerExtension2 = 0;
 13452  008BF6  0E00               	movlw	0
 13453  008BF8  6E49               	movwf	_timerExtension2,c	;volatile
 13454                           
 13455                           ; BSR set to: 0
 13456  008BFA  0012               	return		;funcret
 13457  008BFC                     __end_of_InitSymbolTimer:
 13458                           	opt stack 0
 13459                           tblptru	equ	0xFF8
 13460                           tblptrh	equ	0xFF7
 13461                           tblptrl	equ	0xFF6
 13462                           tablat	equ	0xFF5
 13463                           prodh	equ	0xFF4
 13464                           prodl	equ	0xFF3
 13465                           intcon	equ	0xFF2
 13466                           intcon2	equ	0xFF1
 13467                           intcon3	equ	0xFF0
 13468                           indf0	equ	0xFEF
 13469                           postinc0	equ	0xFEE
 13470                           plusw0	equ	0xFEB
 13471                           fsr0h	equ	0xFEA
 13472                           fsr0l	equ	0xFE9
 13473                           wreg	equ	0xFE8
 13474                           indf1	equ	0xFE7
 13475                           fsr1h	equ	0xFE2
 13476                           fsr1l	equ	0xFE1
 13477                           indf2	equ	0xFDF
 13478                           postinc2	equ	0xFDE
 13479                           postdec2	equ	0xFDD
 13480                           plusw2	equ	0xFDB
 13481                           fsr2h	equ	0xFDA
 13482                           fsr2l	equ	0xFD9
 13483                           status	equ	0xFD8
 13484                           
 13485 ;; *************** function _MiApp_EstablishConnection *****************
 13486 ;; Defined at:
 13487 ;;		line 4095 in file "src/miwi/miwi_mesh.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;  ActiveScanIn    1    wreg     unsigned char 
 13490 ;;  Mode            1   34[BANK1 ] unsigned char 
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;  ActiveScanIn    1   28[BANK2 ] unsigned char 
 13493 ;;  t2              4   23[BANK2 ] struct _MIWI_TICK
 13494 ;;  t1              4   19[BANK2 ] struct _MIWI_TICK
 13495 ;;  i               1   29[BANK2 ] unsigned char 
 13496 ;;  retry           1   27[BANK2 ] unsigned char 
 13497 ;; Return value:  Size  Location     Type
 13498 ;;                  1    wreg      unsigned char 
 13499 ;; Registers used:
 13500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13501 ;; Tracked objects:
 13502 ;;		On entry : 0/0
 13503 ;;		On exit  : 0/0
 13504 ;;		Unchanged: 0/0
 13505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13506 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13507 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13508 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13509 ;;      Totals:         0       0       9      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13510 ;;Total ram usage:       20 bytes
 13511 ;; Hardware stack levels used:    1
 13512 ;; Hardware stack levels required when called:   16
 13513 ;; This function calls:
 13514 ;;		_MiApp_DiscardMessage
 13515 ;;		_MiApp_MessageAvailable
 13516 ;;		_MiApp_SearchConnection
 13517 ;;		_MiApp_SetChannel
 13518 ;;		_MiMAC_SetAltAddress
 13519 ;;		_MiWi_TickGet
 13520 ;;		_OpenSocket
 13521 ;;		_SearchForLongAddress
 13522 ;;		_SendMACPacket
 13523 ;;		_findNextNetworkEntry
 13524 ;; This function is called by:
 13525 ;;		_main
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text46
 13530  004A7C                     __ptext46:
 13531                           	opt stack 0
 13532  004A7C                     _MiApp_EstablishConnection:
 13533                           	opt stack 14
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;incstack = 0
 13537                           ;MiApp_EstablishConnection@ActiveScanIndex stored from wreg
 13538  004A7C  0102               	movlb	2	; () banked
 13539  004A7E  6FFC               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 13540                           
 13541                           ;miwi_mesh.c: 4097: uint8_t retry = 3;
 13542  004A80  0E03               	movlw	3
 13543  004A82  0102               	movlb	2	; () banked
 13544  004A84  6FFB               	movwf	MiApp_EstablishConnection@retry& (0+255),b
 13545                           
 13546                           ; BSR set to: 2
 13547                           ;miwi_mesh.c: 4098: uint8_t i;
 13548                           ;miwi_mesh.c: 4099: MIWI_TICK t1, t2;
 13549                           ;miwi_mesh.c: 4101: if( Mode == 0x01 )
 13550  004A86  0101               	movlb	1	; () banked
 13551  004A88  05F5               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
 13552  004A8A  A4D8               	btfss	status,2,c
 13553  004A8C  D014               	goto	l13826
 13554                           
 13555                           ; BSR set to: 1
 13556                           ;miwi_mesh.c: 4102: {
 13557                           ;miwi_mesh.c: 4106: OpenSocket();
 13558  004A8E  EC16  F03D         	call	_OpenSocket	;wreg free
 13559                           
 13560                           ;miwi_mesh.c: 4107: while(openSocketInfo.status.bits.requestIsOpen)
 13561  004A92  D006               	goto	l13814
 13562  004A94                     l13810:
 13563                           
 13564                           ;miwi_mesh.c: 4108: {
 13565                           ;miwi_mesh.c: 4109: if( MiApp_MessageAvailable())
 13566  004A94  EC07  F046         	call	_MiApp_MessageAvailable	;wreg free
 13567  004A98  0900               	iorlw	0
 13568  004A9A  A4D8               	btfss	status,2,c
 13569                           
 13570                           ;miwi_mesh.c: 4110: {
 13571                           ;miwi_mesh.c: 4111: MiApp_DiscardMessage();
 13572  004A9C  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
 13573  004AA0                     l13814:
 13574  004AA0  0101               	movlb	1	; () banked
 13575  004AA2  B320               	btfsc	_openSocketInfo& (0+255),1,b
 13576  004AA4  D7F7               	goto	l13810
 13577                           
 13578                           ; BSR set to: 1
 13579                           ;miwi_mesh.c: 4112: }
 13580                           ;miwi_mesh.c: 4122: }
 13581                           ;miwi_mesh.c: 4123: if( openSocketInfo.status.bits.matchFound )
 13582  004AA6  0101               	movlb	1	; () banked
 13583  004AA8  A120               	btfss	_openSocketInfo& (0+255),0,b
 13584  004AAA  D003               	goto	l13820
 13585                           
 13586                           ; BSR set to: 1
 13587                           ;miwi_mesh.c: 4124: {
 13588                           ;miwi_mesh.c: 4125: return openSocketInfo.socketHandle;
 13589  004AAC  0101               	movlb	1	; () banked
 13590  004AAE  5121               	movf	(_openSocketInfo+1)& (0+255),w,b
 13591                           
 13592                           ; BSR set to: 1
 13593  004AB0  0012               	return	
 13594  004AB2                     l13820:
 13595                           
 13596                           ; BSR set to: 1
 13597                           ;miwi_mesh.c: 4126: }
 13598                           ;miwi_mesh.c: 4127: return 0xFF;
 13599  004AB2  0EFF               	movlw	255
 13600                           
 13601                           ; BSR set to: 1
 13602  004AB4  0012               	return	
 13603  004AB6                     l13826:
 13604                           
 13605                           ; BSR set to: 1
 13606                           ;miwi_mesh.c: 4129: else if( Mode == 0x00)
 13607  004AB6  0101               	movlb	1	; () banked
 13608  004AB8  51F5               	movf	MiApp_EstablishConnection@Mode& (0+255),w,b
 13609  004ABA  0101               	movlb	1	; () banked
 13610  004ABC  A4D8               	btfss	status,2,c
 13611  004ABE  D1F7               	goto	l13922
 13612                           
 13613                           ; BSR set to: 1
 13614                           ;miwi_mesh.c: 4130: {
 13615                           ;miwi_mesh.c: 4131: if( ActiveScanIndex == 0xFF )
 13616  004AC0  0102               	movlb	2	; () banked
 13617  004AC2  29FC               	incf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 13618  004AC4  B4D8               	btfsc	status,2,c
 13619  004AC6  D006               	goto	l13836
 13620  004AC8  D02A               	goto	l13840
 13621  004ACA                     l784:
 13622                           
 13623                           ;miwi_mesh.c: 4134: {
 13624                           ;miwi_mesh.c: 4135: if( --retry == 0 )
 13625  004ACA  0102               	movlb	2	; () banked
 13626  004ACC  2FFB               	decfsz	MiApp_EstablishConnection@retry& (0+255),f,b
 13627  004ACE  D002               	goto	l13836
 13628                           
 13629                           ; BSR set to: 2
 13630                           ;miwi_mesh.c: 4136: {
 13631                           ;miwi_mesh.c: 4137: return 0xFF;
 13632  004AD0  0EFF               	movlw	255
 13633                           
 13634                           ; BSR set to: 2
 13635  004AD2  0012               	return	
 13636  004AD4                     l13836:
 13637                           
 13638                           ; BSR set to: 2
 13639  004AD4  C1D2  F1F6         	movff	_currentChannel,??_MiApp_EstablishConnection
 13640  004AD8  0E01               	movlw	1
 13641  004ADA  0101               	movlb	1	; () banked
 13642  004ADC  6FF7               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 13643  004ADE  6BF8               	clrf	(??_MiApp_EstablishConnection+2)& (0+255),b
 13644  004AE0  6BF9               	clrf	(??_MiApp_EstablishConnection+3)& (0+255),b
 13645  004AE2  6BFA               	clrf	(??_MiApp_EstablishConnection+4)& (0+255),b
 13646  004AE4  0101               	movlb	1	; () banked
 13647  004AE6  2BF6               	incf	??_MiApp_EstablishConnection& (0+255),f,b
 13648  004AE8  D006               	goto	u16150
 13649  004AEA                     u16155:
 13650  004AEA  90D8               	bcf	status,0,c
 13651  004AEC  0101               	movlb	1	; () banked
 13652  004AEE  37F7               	rlcf	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 13653  004AF0  37F8               	rlcf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 13654  004AF2  37F9               	rlcf	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 13655  004AF4  37FA               	rlcf	(??_MiApp_EstablishConnection+4)& (0+255),f,b
 13656  004AF6                     u16150:
 13657  004AF6  0101               	movlb	1	; () banked
 13658  004AF8  2FF6               	decfsz	??_MiApp_EstablishConnection& (0+255),f,b
 13659  004AFA  D7F7               	goto	u16155
 13660  004AFC  C1F7  F1E8         	movff	??_MiApp_EstablishConnection+1,MiApp_SearchConnection@ChannelMap
 13661  004B00  C1F8  F1E9         	movff	??_MiApp_EstablishConnection+2,MiApp_SearchConnection@ChannelMap+1
 13662  004B04  C1F9  F1EA         	movff	??_MiApp_EstablishConnection+3,MiApp_SearchConnection@ChannelMap+2
 13663  004B08  C1FA  F1EB         	movff	??_MiApp_EstablishConnection+4,MiApp_SearchConnection@ChannelMap+3
 13664  004B0C  0E0A               	movlw	10
 13665  004B0E  ECA1  F02D         	call	_MiApp_SearchConnection
 13666  004B12  0900               	iorlw	0
 13667  004B14  B4D8               	btfsc	status,2,c
 13668  004B16  D7D9               	goto	l784
 13669                           
 13670                           ;miwi_mesh.c: 4138: }
 13671                           ;miwi_mesh.c: 4139: }
 13672                           ;miwi_mesh.c: 4140: ActiveScanIndex = 0;
 13673  004B18  0E00               	movlw	0
 13674  004B1A  0102               	movlb	2	; () banked
 13675  004B1C  6FFC               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 13676  004B1E                     l13840:
 13677                           
 13678                           ; BSR set to: 2
 13679                           ;miwi_mesh.c: 4141: }
 13680                           ;miwi_mesh.c: 4149: tempPANID.Val = ActiveScanResults[ActiveScanIndex].PANID.Val;
 13681  004B1E  0102               	movlb	2	; () banked
 13682  004B20  51FC               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 13683  004B22  0D0A               	mullw	10
 13684  004B24  0E05               	movlw	5
 13685  004B26  26F3               	addwf	prodl,f,c
 13686  004B28  0E00               	movlw	0
 13687  004B2A  22F4               	addwfc	prodh,f,c
 13688  004B2C  0E00               	movlw	low _ActiveScanResults
 13689  004B2E  24F3               	addwf	prodl,w,c
 13690  004B30  6ED9               	movwf	fsr2l,c
 13691  004B32  0E03               	movlw	high _ActiveScanResults
 13692  004B34  20F4               	addwfc	prodh,w,c
 13693  004B36  6EDA               	movwf	fsr2h,c
 13694  004B38  CFDE F15E          	movff	postinc2,_tempPANID
 13695  004B3C  CFDD F15F          	movff	postdec2,_tempPANID+1
 13696                           
 13697                           ; BSR set to: 2
 13698                           ;miwi_mesh.c: 4150: for(i = 0; i < 4; i++)
 13699  004B40  0E00               	movlw	0
 13700  004B42  0102               	movlb	2	; () banked
 13701  004B44  6FFD               	movwf	MiApp_EstablishConnection@i& (0+255),b
 13702  004B46                     l13844:
 13703                           
 13704                           ; BSR set to: 2
 13705  004B46  0E03               	movlw	3
 13706  004B48  0102               	movlb	2	; () banked
 13707  004B4A  65FD               	cpfsgt	MiApp_EstablishConnection@i& (0+255),b
 13708  004B4C  D001               	goto	l13848
 13709  004B4E  D02C               	goto	l13854
 13710  004B50                     l13848:
 13711                           
 13712                           ; BSR set to: 2
 13713                           ;miwi_mesh.c: 4151: {
 13714                           ;miwi_mesh.c: 4152: tempLongAddress[i] = ActiveScanResults[ActiveScanIndex].Address[i];
 13715  004B50  0102               	movlb	2	; () banked
 13716  004B52  51FD               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 13717  004B54  0D01               	mullw	1
 13718  004B56  0E01               	movlw	1
 13719  004B58  26F3               	addwf	prodl,f,c
 13720  004B5A  0E00               	movlw	0
 13721  004B5C  22F4               	addwfc	prodh,f,c
 13722  004B5E  0E00               	movlw	low _ActiveScanResults
 13723  004B60  0101               	movlb	1	; () banked
 13724  004B62  6FF6               	movwf	??_MiApp_EstablishConnection& (0+255),b
 13725  004B64  0E03               	movlw	high _ActiveScanResults
 13726  004B66  0101               	movlb	1	; () banked
 13727  004B68  6FF7               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 13728  004B6A  50F3               	movf	prodl,w,c
 13729  004B6C  0101               	movlb	1	; () banked
 13730  004B6E  27F6               	addwf	??_MiApp_EstablishConnection& (0+255),f,b
 13731  004B70  50F4               	movf	prodh,w,c
 13732  004B72  0101               	movlb	1	; () banked
 13733  004B74  23F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 13734  004B76  0102               	movlb	2	; () banked
 13735  004B78  51FC               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 13736  004B7A  0D0A               	mullw	10
 13737  004B7C  50F3               	movf	prodl,w,c
 13738  004B7E  0101               	movlb	1	; () banked
 13739  004B80  25F6               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 13740  004B82  6ED9               	movwf	fsr2l,c
 13741  004B84  50F4               	movf	prodh,w,c
 13742  004B86  0101               	movlb	1	; () banked
 13743  004B88  21F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 13744  004B8A  6EDA               	movwf	fsr2h,c
 13745  004B8C  0102               	movlb	2	; () banked
 13746  004B8E  51FD               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 13747  004B90  0D01               	mullw	1
 13748  004B92  0E4E               	movlw	low _tempLongAddress
 13749  004B94  24F3               	addwf	prodl,w,c
 13750  004B96  6EE1               	movwf	fsr1l,c
 13751  004B98  0E01               	movlw	high _tempLongAddress
 13752  004B9A  20F4               	addwfc	prodh,w,c
 13753  004B9C  6EE2               	movwf	fsr1h,c
 13754  004B9E  CFDF FFE7          	movff	indf2,indf1
 13755                           
 13756                           ; BSR set to: 2
 13757  004BA2  0102               	movlb	2	; () banked
 13758  004BA4  2BFD               	incf	MiApp_EstablishConnection@i& (0+255),f,b
 13759  004BA6  D7CF               	goto	l13844
 13760  004BA8                     l13854:
 13761                           
 13762                           ; BSR set to: 2
 13763                           ;miwi_mesh.c: 4153: }
 13764                           ;miwi_mesh.c: 4154: myParent = SearchForLongAddress();
 13765  004BA8  EC4C  F03C         	call	_SearchForLongAddress	;wreg free
 13766  004BAC  0100               	movlb	0	; () banked
 13767  004BAE  6FD9               	movwf	_myParent& (0+255),b
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;miwi_mesh.c: 4157: if( myParent == 0xFF )
 13771  004BB0  0100               	movlb	0	; () banked
 13772  004BB2  29D9               	incf	_myParent& (0+255),w,b
 13773  004BB4  A4D8               	btfss	status,2,c
 13774  004BB6  D00A               	goto	l13864
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;miwi_mesh.c: 4158: {
 13778                           ;miwi_mesh.c: 4159: if( (myParent = findNextNetworkEntry()) == 0xFF )
 13779  004BB8  EC9E  F044         	call	_findNextNetworkEntry	;wreg free
 13780  004BBC  0100               	movlb	0	; () banked
 13781  004BBE  6FD9               	movwf	_myParent& (0+255),b
 13782  004BC0  0100               	movlb	0	; () banked
 13783  004BC2  29D9               	incf	_myParent& (0+255),w,b
 13784  004BC4  A4D8               	btfss	status,2,c
 13785  004BC6  D002               	goto	l13864
 13786                           
 13787                           ; BSR set to: 0
 13788                           ;miwi_mesh.c: 4160: {
 13789                           ;miwi_mesh.c: 4161: return 0xFF;
 13790  004BC8  0EFF               	movlw	255
 13791                           
 13792                           ; BSR set to: 0
 13793  004BCA  0012               	return	
 13794  004BCC                     l13864:
 13795                           
 13796                           ; BSR set to: 0
 13797                           ;miwi_mesh.c: 4162: }
 13798                           ;miwi_mesh.c: 4163: }
 13799                           ;miwi_mesh.c: 4165: ConnectionTable[myParent].status.Val = 0;
 13800  004BCC  0100               	movlb	0	; () banked
 13801  004BCE  51D9               	movf	_myParent& (0+255),w,b
 13802  004BD0  0D09               	mullw	9
 13803  004BD2  0E08               	movlw	8
 13804  004BD4  26F3               	addwf	prodl,f,c
 13805  004BD6  0E00               	movlw	0
 13806  004BD8  22F4               	addwfc	prodh,f,c
 13807  004BDA  0E46               	movlw	low _ConnectionTable
 13808  004BDC  24F3               	addwf	prodl,w,c
 13809  004BDE  6ED9               	movwf	fsr2l,c
 13810  004BE0  0E02               	movlw	high _ConnectionTable
 13811  004BE2  20F4               	addwfc	prodh,w,c
 13812  004BE4  6EDA               	movwf	fsr2h,c
 13813  004BE6  0E00               	movlw	0
 13814  004BE8  6EDF               	movwf	indf2,c
 13815                           
 13816                           ; BSR set to: 0
 13817                           ;miwi_mesh.c: 4166: ConnectionTable[myParent].PANID.Val = ActiveScanResults[ActiveScanIn
      +                          dex].PANID.Val;
 13818  004BEA  0102               	movlb	2	; () banked
 13819  004BEC  51FC               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 13820  004BEE  0D0A               	mullw	10
 13821  004BF0  0E05               	movlw	5
 13822  004BF2  26F3               	addwf	prodl,f,c
 13823  004BF4  0E00               	movlw	0
 13824  004BF6  22F4               	addwfc	prodh,f,c
 13825  004BF8  0E00               	movlw	low _ActiveScanResults
 13826  004BFA  24F3               	addwf	prodl,w,c
 13827  004BFC  6ED9               	movwf	fsr2l,c
 13828  004BFE  0E03               	movlw	high _ActiveScanResults
 13829  004C00  20F4               	addwfc	prodh,w,c
 13830  004C02  6EDA               	movwf	fsr2h,c
 13831  004C04  0100               	movlb	0	; () banked
 13832  004C06  51D9               	movf	_myParent& (0+255),w,b
 13833  004C08  0D09               	mullw	9
 13834  004C0A  0E46               	movlw	low _ConnectionTable
 13835  004C0C  24F3               	addwf	prodl,w,c
 13836  004C0E  6EE1               	movwf	fsr1l,c
 13837  004C10  0E02               	movlw	high _ConnectionTable
 13838  004C12  20F4               	addwfc	prodh,w,c
 13839  004C14  6EE2               	movwf	fsr1h,c
 13840  004C16  CFDE FFE6          	movff	postinc2,postinc1
 13841  004C1A  CFDD FFE5          	movff	postdec2,postdec1
 13842                           
 13843                           ; BSR set to: 0
 13844                           ;miwi_mesh.c: 4172: for(i = 0; i < 4; i++)
 13845  004C1E  0E00               	movlw	0
 13846  004C20  0102               	movlb	2	; () banked
 13847  004C22  6FFD               	movwf	MiApp_EstablishConnection@i& (0+255),b
 13848  004C24                     l13870:
 13849                           
 13850                           ; BSR set to: 2
 13851  004C24  0E03               	movlw	3
 13852  004C26  0102               	movlb	2	; () banked
 13853  004C28  65FD               	cpfsgt	MiApp_EstablishConnection@i& (0+255),b
 13854  004C2A  D001               	goto	l13874
 13855  004C2C  D041               	goto	l13880
 13856  004C2E                     l13874:
 13857                           
 13858                           ; BSR set to: 2
 13859                           ;miwi_mesh.c: 4173: {
 13860                           ;miwi_mesh.c: 4174: ConnectionTable[myParent].Address[i] = ActiveScanResults[ActiveScanI
      +                          ndex].Address[i];
 13861  004C2E  0102               	movlb	2	; () banked
 13862  004C30  51FD               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 13863  004C32  0D01               	mullw	1
 13864  004C34  0E01               	movlw	1
 13865  004C36  26F3               	addwf	prodl,f,c
 13866  004C38  0E00               	movlw	0
 13867  004C3A  22F4               	addwfc	prodh,f,c
 13868  004C3C  0E00               	movlw	low _ActiveScanResults
 13869  004C3E  0101               	movlb	1	; () banked
 13870  004C40  6FF6               	movwf	??_MiApp_EstablishConnection& (0+255),b
 13871  004C42  0E03               	movlw	high _ActiveScanResults
 13872  004C44  0101               	movlb	1	; () banked
 13873  004C46  6FF7               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 13874  004C48  50F3               	movf	prodl,w,c
 13875  004C4A  0101               	movlb	1	; () banked
 13876  004C4C  27F6               	addwf	??_MiApp_EstablishConnection& (0+255),f,b
 13877  004C4E  50F4               	movf	prodh,w,c
 13878  004C50  0101               	movlb	1	; () banked
 13879  004C52  23F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 13880  004C54  0102               	movlb	2	; () banked
 13881  004C56  51FC               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 13882  004C58  0D0A               	mullw	10
 13883  004C5A  50F3               	movf	prodl,w,c
 13884  004C5C  0101               	movlb	1	; () banked
 13885  004C5E  25F6               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 13886  004C60  6ED9               	movwf	fsr2l,c
 13887  004C62  50F4               	movf	prodh,w,c
 13888  004C64  0101               	movlb	1	; () banked
 13889  004C66  21F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 13890  004C68  6EDA               	movwf	fsr2h,c
 13891  004C6A  0102               	movlb	2	; () banked
 13892  004C6C  51FD               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 13893  004C6E  0D01               	mullw	1
 13894  004C70  0E04               	movlw	4
 13895  004C72  26F3               	addwf	prodl,f,c
 13896  004C74  0E00               	movlw	0
 13897  004C76  22F4               	addwfc	prodh,f,c
 13898  004C78  0E46               	movlw	low _ConnectionTable
 13899  004C7A  0101               	movlb	1	; () banked
 13900  004C7C  6FF8               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
 13901  004C7E  0E02               	movlw	high _ConnectionTable
 13902  004C80  0101               	movlb	1	; () banked
 13903  004C82  6FF9               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
 13904  004C84  50F3               	movf	prodl,w,c
 13905  004C86  0101               	movlb	1	; () banked
 13906  004C88  27F8               	addwf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 13907  004C8A  50F4               	movf	prodh,w,c
 13908  004C8C  0101               	movlb	1	; () banked
 13909  004C8E  23F9               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 13910  004C90  0100               	movlb	0	; () banked
 13911  004C92  51D9               	movf	_myParent& (0+255),w,b
 13912  004C94  0D09               	mullw	9
 13913  004C96  50F3               	movf	prodl,w,c
 13914  004C98  0101               	movlb	1	; () banked
 13915  004C9A  25F8               	addwf	(??_MiApp_EstablishConnection+2)& (0+255),w,b
 13916  004C9C  6EE1               	movwf	fsr1l,c
 13917  004C9E  50F4               	movf	prodh,w,c
 13918  004CA0  0101               	movlb	1	; () banked
 13919  004CA2  21F9               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),w,b
 13920  004CA4  6EE2               	movwf	fsr1h,c
 13921  004CA6  CFDF FFE7          	movff	indf2,indf1
 13922                           
 13923                           ; BSR set to: 1
 13924  004CAA  0102               	movlb	2	; () banked
 13925  004CAC  2BFD               	incf	MiApp_EstablishConnection@i& (0+255),f,b
 13926  004CAE  D7BA               	goto	l13870
 13927  004CB0                     l13880:
 13928                           
 13929                           ; BSR set to: 2
 13930                           ;miwi_mesh.c: 4175: }
 13931                           ;miwi_mesh.c: 4176: ConnectionTable[myParent].status.bits.longAddressValid = 1;
 13932  004CB0  0100               	movlb	0	; () banked
 13933  004CB2  51D9               	movf	_myParent& (0+255),w,b
 13934  004CB4  0D09               	mullw	9
 13935  004CB6  0E08               	movlw	8
 13936  004CB8  26F3               	addwf	prodl,f,c
 13937  004CBA  0E00               	movlw	0
 13938  004CBC  22F4               	addwfc	prodh,f,c
 13939  004CBE  0E46               	movlw	low _ConnectionTable
 13940  004CC0  24F3               	addwf	prodl,w,c
 13941  004CC2  6ED9               	movwf	fsr2l,c
 13942  004CC4  0E02               	movlw	high _ConnectionTable
 13943  004CC6  20F4               	addwfc	prodh,w,c
 13944  004CC8  6EDA               	movwf	fsr2h,c
 13945  004CCA  0102               	movlb	2	; () banked
 13946  004CCC  84DF               	bsf	indf2,2,c
 13947                           
 13948                           ;miwi_mesh.c: 4185: ConnectionTable[myParent].status.bits.directConnection = 1;
 13949  004CCE  0100               	movlb	0	; () banked
 13950  004CD0  51D9               	movf	_myParent& (0+255),w,b
 13951  004CD2  0D09               	mullw	9
 13952  004CD4  0E08               	movlw	8
 13953  004CD6  26F3               	addwf	prodl,f,c
 13954  004CD8  0E00               	movlw	0
 13955  004CDA  22F4               	addwfc	prodh,f,c
 13956  004CDC  0E46               	movlw	low _ConnectionTable
 13957  004CDE  24F3               	addwf	prodl,w,c
 13958  004CE0  6ED9               	movwf	fsr2l,c
 13959  004CE2  0E02               	movlw	high _ConnectionTable
 13960  004CE4  20F4               	addwfc	prodh,w,c
 13961  004CE6  6EDA               	movwf	fsr2h,c
 13962  004CE8  0102               	movlb	2	; () banked
 13963  004CEA  82DF               	bsf	indf2,1,c
 13964                           
 13965                           ;miwi_mesh.c: 4186: ConnectionTable[myParent].status.bits.isFamily = 1;
 13966  004CEC  0100               	movlb	0	; () banked
 13967  004CEE  51D9               	movf	_myParent& (0+255),w,b
 13968  004CF0  0D09               	mullw	9
 13969  004CF2  0E08               	movlw	8
 13970  004CF4  26F3               	addwf	prodl,f,c
 13971  004CF6  0E00               	movlw	0
 13972  004CF8  22F4               	addwfc	prodh,f,c
 13973  004CFA  0E46               	movlw	low _ConnectionTable
 13974  004CFC  24F3               	addwf	prodl,w,c
 13975  004CFE  6ED9               	movwf	fsr2l,c
 13976  004D00  0E02               	movlw	high _ConnectionTable
 13977  004D02  20F4               	addwfc	prodh,w,c
 13978  004D04  6EDA               	movwf	fsr2h,c
 13979  004D06  0102               	movlb	2	; () banked
 13980  004D08  8ADF               	bsf	indf2,5,c
 13981                           
 13982                           ;miwi_mesh.c: 4187: ConnectionTable[myParent].status.bits.RXOnWhenIdle = 1;
 13983  004D0A  0100               	movlb	0	; () banked
 13984  004D0C  51D9               	movf	_myParent& (0+255),w,b
 13985  004D0E  0D09               	mullw	9
 13986  004D10  0E08               	movlw	8
 13987  004D12  26F3               	addwf	prodl,f,c
 13988  004D14  0E00               	movlw	0
 13989  004D16  22F4               	addwfc	prodh,f,c
 13990  004D18  0E46               	movlw	low _ConnectionTable
 13991  004D1A  24F3               	addwf	prodl,w,c
 13992  004D1C  6ED9               	movwf	fsr2l,c
 13993  004D1E  0E02               	movlw	high _ConnectionTable
 13994  004D20  20F4               	addwfc	prodh,w,c
 13995  004D22  6EDA               	movwf	fsr2h,c
 13996  004D24  0102               	movlb	2	; () banked
 13997  004D26  80DF               	bsf	indf2,0,c
 13998                           
 13999                           ; BSR set to: 2
 14000                           ;miwi_mesh.c: 4189: MiApp_SetChannel(ActiveScanResults[ActiveScanIndex].Channel);
 14001  004D28  0102               	movlb	2	; () banked
 14002  004D2A  51FC               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14003  004D2C  0D0A               	mullw	10
 14004  004D2E  0E00               	movlw	low _ActiveScanResults
 14005  004D30  24F3               	addwf	prodl,w,c
 14006  004D32  6ED9               	movwf	fsr2l,c
 14007  004D34  0E03               	movlw	high _ActiveScanResults
 14008  004D36  20F4               	addwfc	prodh,w,c
 14009  004D38  6EDA               	movwf	fsr2h,c
 14010  004D3A  50DF               	movf	indf2,w,c
 14011  004D3C  EC9F  F045         	call	_MiApp_SetChannel
 14012                           
 14013                           ;miwi_mesh.c: 4192: myPANID.Val = ConnectionTable[myParent].PANID.Val;
 14014  004D40  0100               	movlb	0	; () banked
 14015  004D42  51D9               	movf	_myParent& (0+255),w,b
 14016  004D44  0D09               	mullw	9
 14017  004D46  0E46               	movlw	low _ConnectionTable
 14018  004D48  24F3               	addwf	prodl,w,c
 14019  004D4A  6ED9               	movwf	fsr2l,c
 14020  004D4C  0E02               	movlw	high _ConnectionTable
 14021  004D4E  20F4               	addwfc	prodh,w,c
 14022  004D50  6EDA               	movwf	fsr2h,c
 14023  004D52  CFDE F0DB          	movff	postinc2,_myPANID
 14024  004D56  CFDD F0DC          	movff	postdec2,_myPANID+1
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;miwi_mesh.c: 4193: tempShortAddress.Val = 0xFFFF;
 14028  004D5A  0101               	movlb	1	; () banked
 14029  004D5C  69D0               	setf	_tempShortAddress& (0+255),b
 14030  004D5E  69D1               	setf	(_tempShortAddress+1)& (0+255),b
 14031                           
 14032                           ; BSR set to: 1
 14033                           ;miwi_mesh.c: 4194: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 14034  004D60  0ED0               	movlw	low _tempShortAddress
 14035  004D62  0100               	movlb	0	; () banked
 14036  004D64  6F81               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 14037  004D66  0E01               	movlw	high _tempShortAddress
 14038  004D68  0100               	movlb	0	; () banked
 14039  004D6A  6F82               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 14040  004D6C  0EDB               	movlw	low _myPANID
 14041  004D6E  0100               	movlb	0	; () banked
 14042  004D70  6F83               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 14043  004D72  0E00               	movlw	high _myPANID
 14044  004D74  0100               	movlb	0	; () banked
 14045  004D76  6F84               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 14046  004D78  EC21  F046         	call	_MiMAC_SetAltAddress	;wreg free
 14047                           
 14048                           ;miwi_mesh.c: 4197: {TxData = 0;};
 14049  004D7C  0E00               	movlw	0
 14050  004D7E  0100               	movlb	0	; () banked
 14051  004D80  6FD8               	movwf	_TxData& (0+255),b
 14052                           
 14053                           ; BSR set to: 0
 14054                           ;miwi_mesh.c: 4198: TxBuffer[TxData++] = 0x01;
 14055  004D82  0100               	movlb	0	; () banked
 14056  004D84  51D8               	movf	_TxData& (0+255),w,b
 14057  004D86  0D01               	mullw	1
 14058  004D88  0E6C               	movlw	low _TxBuffer
 14059  004D8A  24F3               	addwf	prodl,w,c
 14060  004D8C  6ED9               	movwf	fsr2l,c
 14061  004D8E  0E01               	movlw	high _TxBuffer
 14062  004D90  20F4               	addwfc	prodh,w,c
 14063  004D92  6EDA               	movwf	fsr2h,c
 14064  004D94  0E01               	movlw	1
 14065  004D96  6EDF               	movwf	indf2,c
 14066                           
 14067                           ; BSR set to: 0
 14068  004D98  0100               	movlb	0	; () banked
 14069  004D9A  2BD8               	incf	_TxData& (0+255),f,b
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;miwi_mesh.c: 4199: TxBuffer[TxData++] = MiWiCapacityInfo.Val;
 14073  004D9C  0100               	movlb	0	; () banked
 14074  004D9E  51D8               	movf	_TxData& (0+255),w,b
 14075  004DA0  0D01               	mullw	1
 14076  004DA2  0E6C               	movlw	low _TxBuffer
 14077  004DA4  24F3               	addwf	prodl,w,c
 14078  004DA6  6ED9               	movwf	fsr2l,c
 14079  004DA8  0E01               	movlw	high _TxBuffer
 14080  004DAA  20F4               	addwfc	prodh,w,c
 14081  004DAC  6EDA               	movwf	fsr2h,c
 14082  004DAE  C164  FFDF         	movff	_MiWiCapacityInfo,indf2
 14083                           
 14084                           ; BSR set to: 0
 14085  004DB2  0100               	movlb	0	; () banked
 14086  004DB4  2BD8               	incf	_TxData& (0+255),f,b
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;miwi_mesh.c: 4210: SendMACPacket(ConnectionTable[myParent].Address, 0x01);
 14090  004DB6  0100               	movlb	0	; () banked
 14091  004DB8  51D9               	movf	_myParent& (0+255),w,b
 14092  004DBA  0D09               	mullw	9
 14093  004DBC  0E04               	movlw	4
 14094  004DBE  26F3               	addwf	prodl,f,c
 14095  004DC0  0E00               	movlw	0
 14096  004DC2  22F4               	addwfc	prodh,f,c
 14097  004DC4  0E46               	movlw	low _ConnectionTable
 14098  004DC6  24F3               	addwf	prodl,w,c
 14099  004DC8  0100               	movlb	0	; () banked
 14100  004DCA  6FBA               	movwf	SendMACPacket@Address& (0+255),b
 14101  004DCC  0E02               	movlw	high _ConnectionTable
 14102  004DCE  20F4               	addwfc	prodh,w,c
 14103  004DD0  0100               	movlb	0	; () banked
 14104  004DD2  6FBB               	movwf	(SendMACPacket@Address+1)& (0+255),b
 14105  004DD4  0E01               	movlw	1
 14106  004DD6  0100               	movlb	0	; () banked
 14107  004DD8  6FBC               	movwf	SendMACPacket@PacketType& (0+255),b
 14108  004DDA  EC68  F041         	call	_SendMACPacket	;wreg free
 14109                           
 14110                           ;miwi_mesh.c: 4213: t1 = MiWi_TickGet();
 14111  004DDE  EC57  F042         	call	_MiWi_TickGet	;wreg free
 14112  004DE2  C081  F2F3         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
 14113  004DE6  C082  F2F4         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
 14114  004DEA  C083  F2F5         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
 14115  004DEE  C084  F2F6         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
 14116                           
 14117                           ;miwi_mesh.c: 4214: while(ConnectionTable[myParent].status.bits.FinishJoin == 0 )
 14118  004DF2  D04A               	goto	l13916
 14119  004DF4                     l13904:
 14120                           
 14121                           ;miwi_mesh.c: 4215: {
 14122                           ;miwi_mesh.c: 4216: if( MiApp_MessageAvailable())
 14123  004DF4  EC07  F046         	call	_MiApp_MessageAvailable	;wreg free
 14124  004DF8  0900               	iorlw	0
 14125  004DFA  A4D8               	btfss	status,2,c
 14126                           
 14127                           ;miwi_mesh.c: 4217: {
 14128                           ;miwi_mesh.c: 4218: MiApp_DiscardMessage();
 14129  004DFC  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
 14130                           
 14131                           ;miwi_mesh.c: 4219: }
 14132                           ;miwi_mesh.c: 4221: t2 = MiWi_TickGet();
 14133  004E00  EC57  F042         	call	_MiWi_TickGet	;wreg free
 14134  004E04  C081  F2F7         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
 14135  004E08  C082  F2F8         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
 14136  004E0C  C083  F2F9         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
 14137  004E10  C084  F2FA         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
 14138                           
 14139                           ;miwi_mesh.c: 4222: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32) )
 14140  004E14  C2F3  F1F6         	movff	MiApp_EstablishConnection@t1,??_MiApp_EstablishConnection
 14141  004E18  C2F4  F1F7         	movff	MiApp_EstablishConnection@t1+1,??_MiApp_EstablishConnection+1
 14142  004E1C  C2F5  F1F8         	movff	MiApp_EstablishConnection@t1+2,??_MiApp_EstablishConnection+2
 14143  004E20  C2F6  F1F9         	movff	MiApp_EstablishConnection@t1+3,??_MiApp_EstablishConnection+3
 14144  004E24  0101               	movlb	1	; () banked
 14145  004E26  1FF6               	comf	??_MiApp_EstablishConnection& (0+255),f,b
 14146  004E28  1FF7               	comf	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14147  004E2A  1FF8               	comf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14148  004E2C  1FF9               	comf	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14149  004E2E  2BF6               	incf	??_MiApp_EstablishConnection& (0+255),f,b
 14150  004E30  0E00               	movlw	0
 14151  004E32  23F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14152  004E34  23F8               	addwfc	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14153  004E36  23F9               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14154  004E38  0102               	movlb	2	; () banked
 14155  004E3A  51F7               	movf	MiApp_EstablishConnection@t2& (0+255),w,b
 14156  004E3C  0101               	movlb	1	; () banked
 14157  004E3E  25F6               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 14158  004E40  0101               	movlb	1	; () banked
 14159  004E42  6FFA               	movwf	(??_MiApp_EstablishConnection+4)& (0+255),b
 14160  004E44  0102               	movlb	2	; () banked
 14161  004E46  51F8               	movf	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
 14162  004E48  0101               	movlb	1	; () banked
 14163  004E4A  21F7               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 14164  004E4C  0101               	movlb	1	; () banked
 14165  004E4E  6FFB               	movwf	(??_MiApp_EstablishConnection+5)& (0+255),b
 14166  004E50  0102               	movlb	2	; () banked
 14167  004E52  51F9               	movf	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
 14168  004E54  0101               	movlb	1	; () banked
 14169  004E56  21F8               	addwfc	(??_MiApp_EstablishConnection+2)& (0+255),w,b
 14170  004E58  0101               	movlb	1	; () banked
 14171  004E5A  6FFC               	movwf	(??_MiApp_EstablishConnection+6)& (0+255),b
 14172  004E5C  0102               	movlb	2	; () banked
 14173  004E5E  51FA               	movf	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
 14174  004E60  0101               	movlb	1	; () banked
 14175  004E62  21F9               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),w,b
 14176  004E64  0101               	movlb	1	; () banked
 14177  004E66  6FFD               	movwf	(??_MiApp_EstablishConnection+7)& (0+255),b
 14178  004E68  0101               	movlb	1	; () banked
 14179  004E6A  51FD               	movf	(??_MiApp_EstablishConnection+7)& (0+255),w,b
 14180  004E6C  E10B               	bnz	u16240
 14181  004E6E  0E21               	movlw	33
 14182  004E70  0101               	movlb	1	; () banked
 14183  004E72  5DFA               	subwf	(??_MiApp_EstablishConnection+4)& (0+255),w,b
 14184  004E74  0EA1               	movlw	161
 14185  004E76  0101               	movlb	1	; () banked
 14186  004E78  59FB               	subwfb	(??_MiApp_EstablishConnection+5)& (0+255),w,b
 14187  004E7A  0E07               	movlw	7
 14188  004E7C  0101               	movlb	1	; () banked
 14189  004E7E  59FC               	subwfb	(??_MiApp_EstablishConnection+6)& (0+255),w,b
 14190  004E80  A0D8               	btfss	status,0,c
 14191  004E82  D002               	goto	l13916
 14192  004E84                     u16240:
 14193                           
 14194                           ; BSR set to: 1
 14195                           ;miwi_mesh.c: 4223: {
 14196                           ;miwi_mesh.c: 4224: return 0xFF;
 14197  004E84  0EFF               	movlw	255
 14198                           
 14199                           ; BSR set to: 1
 14200  004E86  0012               	return	
 14201  004E88                     l13916:
 14202  004E88  0100               	movlb	0	; () banked
 14203  004E8A  51D9               	movf	_myParent& (0+255),w,b
 14204  004E8C  0D09               	mullw	9
 14205  004E8E  0E08               	movlw	8
 14206  004E90  26F3               	addwf	prodl,f,c
 14207  004E92  0E00               	movlw	0
 14208  004E94  22F4               	addwfc	prodh,f,c
 14209  004E96  0E46               	movlw	low _ConnectionTable
 14210  004E98  24F3               	addwf	prodl,w,c
 14211  004E9A  6ED9               	movwf	fsr2l,c
 14212  004E9C  0E02               	movlw	high _ConnectionTable
 14213  004E9E  20F4               	addwfc	prodh,w,c
 14214  004EA0  6EDA               	movwf	fsr2h,c
 14215  004EA2  0102               	movlb	2	; () banked
 14216  004EA4  A8DF               	btfss	indf2,4,c
 14217  004EA6  D7A6               	goto	l13904
 14218                           
 14219                           ; BSR set to: 2
 14220                           ;miwi_mesh.c: 4225: }
 14221                           ;miwi_mesh.c: 4226: }
 14222                           ;miwi_mesh.c: 4231: return myParent;
 14223                           
 14224                           ; BSR set to: 2
 14225  004EA8  0100               	movlb	0	; () banked
 14226  004EAA  51D9               	movf	_myParent& (0+255),w,b
 14227                           
 14228                           ; BSR set to: 0
 14229  004EAC  0012               	return	
 14230  004EAE                     l13922:
 14231                           
 14232                           ;miwi_mesh.c: 4232: }
 14233                           ;miwi_mesh.c: 4233: return 0xFF;
 14234  004EAE  0EFF               	movlw	255
 14235  004EB0  0012               	return	
 14236  004EB2                     __end_of_MiApp_EstablishConnection:
 14237                           	opt stack 0
 14238                           tblptru	equ	0xFF8
 14239                           tblptrh	equ	0xFF7
 14240                           tblptrl	equ	0xFF6
 14241                           tablat	equ	0xFF5
 14242                           prodh	equ	0xFF4
 14243                           prodl	equ	0xFF3
 14244                           intcon	equ	0xFF2
 14245                           intcon2	equ	0xFF1
 14246                           intcon3	equ	0xFF0
 14247                           indf0	equ	0xFEF
 14248                           postinc0	equ	0xFEE
 14249                           plusw0	equ	0xFEB
 14250                           fsr0h	equ	0xFEA
 14251                           fsr0l	equ	0xFE9
 14252                           wreg	equ	0xFE8
 14253                           indf1	equ	0xFE7
 14254                           postinc1	equ	0xFE6
 14255                           postdec1	equ	0xFE5
 14256                           fsr1h	equ	0xFE2
 14257                           fsr1l	equ	0xFE1
 14258                           indf2	equ	0xFDF
 14259                           postinc2	equ	0xFDE
 14260                           postdec2	equ	0xFDD
 14261                           plusw2	equ	0xFDB
 14262                           fsr2h	equ	0xFDA
 14263                           fsr2l	equ	0xFD9
 14264                           status	equ	0xFD8
 14265                           
 14266 ;; *************** function _OpenSocket *****************
 14267 ;; Defined at:
 14268 ;;		line 2959 in file "src/miwi/miwi_mesh.c"
 14269 ;; Parameters:    Size  Location     Type
 14270 ;;		None
 14271 ;; Auto vars:     Size  Location     Type
 14272 ;;  i               1  112[BANK0 ] unsigned char 
 14273 ;; Return value:  Size  Location     Type
 14274 ;;		None               void
 14275 ;; Registers used:
 14276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14277 ;; Tracked objects:
 14278 ;;		On entry : 0/0
 14279 ;;		On exit  : 0/0
 14280 ;;		Unchanged: 0/0
 14281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14285 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14286 ;;Total ram usage:        1 bytes
 14287 ;; Hardware stack levels used:    1
 14288 ;; Hardware stack levels required when called:   15
 14289 ;; This function calls:
 14290 ;;		_MiApp_UnicastAddress
 14291 ;;		_MiWi_TickGet
 14292 ;; This function is called by:
 14293 ;;		_MiApp_EstablishConnection
 14294 ;; This function uses a non-reentrant model
 14295 ;;
 14296                           
 14297                           	psect	text47
 14298  007A2C                     __ptext47:
 14299                           	opt stack 0
 14300  007A2C                     _OpenSocket:
 14301                           	opt stack 14
 14302                           
 14303                           ;miwi_mesh.c: 2961: uint8_t i;
 14304                           ;miwi_mesh.c: 2963: openSocketInfo.status.bits.matchFound = 0;
 14305                           
 14306                           ;incstack = 0
 14307  007A2C  0101               	movlb	1	; () banked
 14308  007A2E  9120               	bcf	_openSocketInfo& (0+255),0,b
 14309                           
 14310                           ; BSR set to: 1
 14311                           ;miwi_mesh.c: 3069: openSocketInfo.socketStart = MiWi_TickGet();
 14312  007A30  EC57  F042         	call	_MiWi_TickGet	;wreg free
 14313  007A34  C081  F128         	movff	?_MiWi_TickGet,_openSocketInfo+8
 14314  007A38  C082  F129         	movff	?_MiWi_TickGet+1,_openSocketInfo+9
 14315  007A3C  C083  F12A         	movff	?_MiWi_TickGet+2,_openSocketInfo+10
 14316  007A40  C084  F12B         	movff	?_MiWi_TickGet+3,_openSocketInfo+11
 14317                           
 14318                           ;miwi_mesh.c: 3072: tempShortAddress.Val = 0x0000;
 14319  007A44  0E00               	movlw	0
 14320  007A46  0101               	movlb	1	; () banked
 14321  007A48  6FD1               	movwf	(_tempShortAddress+1)& (0+255),b
 14322  007A4A  0E00               	movlw	0
 14323  007A4C  6FD0               	movwf	_tempShortAddress& (0+255),b
 14324                           
 14325                           ; BSR set to: 1
 14326                           ;miwi_mesh.c: 3074: {TxData = 11;};
 14327  007A4E  0E0B               	movlw	11
 14328  007A50  0100               	movlb	0	; () banked
 14329  007A52  6FD8               	movwf	_TxData& (0+255),b
 14330                           
 14331                           ; BSR set to: 0
 14332                           ;miwi_mesh.c: 3075: TxBuffer[TxData++] = 0x00;
 14333  007A54  0100               	movlb	0	; () banked
 14334  007A56  51D8               	movf	_TxData& (0+255),w,b
 14335  007A58  0D01               	mullw	1
 14336  007A5A  0E6C               	movlw	low _TxBuffer
 14337  007A5C  24F3               	addwf	prodl,w,c
 14338  007A5E  6ED9               	movwf	fsr2l,c
 14339  007A60  0E01               	movlw	high _TxBuffer
 14340  007A62  20F4               	addwfc	prodh,w,c
 14341  007A64  6EDA               	movwf	fsr2h,c
 14342  007A66  0E00               	movlw	0
 14343  007A68  6EDF               	movwf	indf2,c
 14344                           
 14345                           ; BSR set to: 0
 14346  007A6A  0100               	movlb	0	; () banked
 14347  007A6C  2BD8               	incf	_TxData& (0+255),f,b
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;miwi_mesh.c: 3076: TxBuffer[TxData++] = 0x10;
 14351  007A6E  0100               	movlb	0	; () banked
 14352  007A70  51D8               	movf	_TxData& (0+255),w,b
 14353  007A72  0D01               	mullw	1
 14354  007A74  0E6C               	movlw	low _TxBuffer
 14355  007A76  24F3               	addwf	prodl,w,c
 14356  007A78  6ED9               	movwf	fsr2l,c
 14357  007A7A  0E01               	movlw	high _TxBuffer
 14358  007A7C  20F4               	addwfc	prodh,w,c
 14359  007A7E  6EDA               	movwf	fsr2h,c
 14360  007A80  0E10               	movlw	16
 14361  007A82  6EDF               	movwf	indf2,c
 14362                           
 14363                           ; BSR set to: 0
 14364  007A84  0100               	movlb	0	; () banked
 14365  007A86  2BD8               	incf	_TxData& (0+255),f,b
 14366                           
 14367                           ; BSR set to: 0
 14368                           ;miwi_mesh.c: 3077: for(i = 0; i < 4; i++)
 14369  007A88  0E00               	movlw	0
 14370  007A8A  0100               	movlb	0	; () banked
 14371  007A8C  6FD0               	movwf	OpenSocket@i& (0+255),b
 14372  007A8E                     l12744:
 14373                           
 14374                           ; BSR set to: 0
 14375  007A8E  0E03               	movlw	3
 14376  007A90  0100               	movlb	0	; () banked
 14377  007A92  65D0               	cpfsgt	OpenSocket@i& (0+255),b
 14378  007A94  D001               	goto	l12748
 14379  007A96  D019               	goto	l12756
 14380  007A98                     l12748:
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;miwi_mesh.c: 3078: {
 14384                           ;miwi_mesh.c: 3079: TxBuffer[TxData++] = myLongAddress[i];
 14385  007A98  0100               	movlb	0	; () banked
 14386  007A9A  51D0               	movf	OpenSocket@i& (0+255),w,b
 14387  007A9C  0D01               	mullw	1
 14388  007A9E  0EC8               	movlw	low _myLongAddress
 14389  007AA0  24F3               	addwf	prodl,w,c
 14390  007AA2  6ED9               	movwf	fsr2l,c
 14391  007AA4  0E01               	movlw	high _myLongAddress
 14392  007AA6  20F4               	addwfc	prodh,w,c
 14393  007AA8  6EDA               	movwf	fsr2h,c
 14394  007AAA  0100               	movlb	0	; () banked
 14395  007AAC  51D8               	movf	_TxData& (0+255),w,b
 14396  007AAE  0D01               	mullw	1
 14397  007AB0  0E6C               	movlw	low _TxBuffer
 14398  007AB2  24F3               	addwf	prodl,w,c
 14399  007AB4  6EE1               	movwf	fsr1l,c
 14400  007AB6  0E01               	movlw	high _TxBuffer
 14401  007AB8  20F4               	addwfc	prodh,w,c
 14402  007ABA  6EE2               	movwf	fsr1h,c
 14403  007ABC  CFDF FFE7          	movff	indf2,indf1
 14404                           
 14405                           ; BSR set to: 0
 14406  007AC0  0100               	movlb	0	; () banked
 14407  007AC2  2BD8               	incf	_TxData& (0+255),f,b
 14408                           
 14409                           ; BSR set to: 0
 14410  007AC4  0100               	movlb	0	; () banked
 14411  007AC6  2BD0               	incf	OpenSocket@i& (0+255),f,b
 14412  007AC8  D7E2               	goto	l12744
 14413  007ACA                     l12756:
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;miwi_mesh.c: 3080: }
 14417                           ;miwi_mesh.c: 3088: MiApp_UnicastAddress(tempShortAddress.v, 0, 0);
 14418  007ACA  0ED0               	movlw	low _tempShortAddress
 14419  007ACC  0101               	movlb	1	; () banked
 14420  007ACE  6FE8               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 14421  007AD0  0E01               	movlw	high _tempShortAddress
 14422  007AD2  0101               	movlb	1	; () banked
 14423  007AD4  6FE9               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 14424  007AD6  0E00               	movlw	0
 14425  007AD8  0101               	movlb	1	; () banked
 14426  007ADA  6FEA               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 14427  007ADC  0E00               	movlw	0
 14428  007ADE  0101               	movlb	1	; () banked
 14429  007AE0  6FEB               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 14430  007AE2  ECA4  F020         	call	_MiApp_UnicastAddress	;wreg free
 14431                           
 14432                           ;miwi_mesh.c: 3090: openSocketInfo.status.bits.requestIsOpen = 1;
 14433  007AE6  0101               	movlb	1	; () banked
 14434  007AE8  8320               	bsf	_openSocketInfo& (0+255),1,b
 14435                           
 14436                           ; BSR set to: 1
 14437  007AEA  0012               	return		;funcret
 14438  007AEC                     __end_of_OpenSocket:
 14439                           	opt stack 0
 14440                           tblptru	equ	0xFF8
 14441                           tblptrh	equ	0xFF7
 14442                           tblptrl	equ	0xFF6
 14443                           tablat	equ	0xFF5
 14444                           prodh	equ	0xFF4
 14445                           prodl	equ	0xFF3
 14446                           intcon	equ	0xFF2
 14447                           intcon2	equ	0xFF1
 14448                           intcon3	equ	0xFF0
 14449                           indf0	equ	0xFEF
 14450                           postinc0	equ	0xFEE
 14451                           plusw0	equ	0xFEB
 14452                           fsr0h	equ	0xFEA
 14453                           fsr0l	equ	0xFE9
 14454                           wreg	equ	0xFE8
 14455                           indf1	equ	0xFE7
 14456                           postinc1	equ	0xFE6
 14457                           postdec1	equ	0xFE5
 14458                           fsr1h	equ	0xFE2
 14459                           fsr1l	equ	0xFE1
 14460                           indf2	equ	0xFDF
 14461                           postinc2	equ	0xFDE
 14462                           postdec2	equ	0xFDD
 14463                           plusw2	equ	0xFDB
 14464                           fsr2h	equ	0xFDA
 14465                           fsr2l	equ	0xFD9
 14466                           status	equ	0xFD8
 14467                           
 14468 ;; *************** function _MiApp_UnicastAddress *****************
 14469 ;; Defined at:
 14470 ;;		line 4565 in file "src/miwi/miwi_mesh.c"
 14471 ;; Parameters:    Size  Location     Type
 14472 ;;  DestAddress     2   21[BANK1 ] PTR unsigned char 
 14473 ;;		 -> do_UPDATE@shortaddress(2), do_POWER_TEST@shortaddress(2), do_NETWORK_REGISTER@shortaddress(2), tempShortAddress(
      +2), 
 14474 ;;  PermanentAdd    1   23[BANK1 ] unsigned char 
 14475 ;;  SecEn           1   24[BANK1 ] unsigned char 
 14476 ;; Auto vars:     Size  Location     Type
 14477 ;;  t2              4    4[BANK2 ] struct _MIWI_TICK
 14478 ;;  t1              4    0[BANK2 ] struct _MIWI_TICK
 14479 ;;  t2              4   12[BANK2 ] struct _MIWI_TICK
 14480 ;;  t1              4    8[BANK2 ] struct _MIWI_TICK
 14481 ;;  handle          1   18[BANK2 ] unsigned char 
 14482 ;;  i               1   17[BANK2 ] unsigned char 
 14483 ;;  MiWiFrameCon    1   16[BANK2 ] unsigned char 
 14484 ;; Return value:  Size  Location     Type
 14485 ;;                  1    wreg      unsigned char 
 14486 ;; Registers used:
 14487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14488 ;; Tracked objects:
 14489 ;;		On entry : 0/0
 14490 ;;		On exit  : 0/0
 14491 ;;		Unchanged: 0/0
 14492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14493 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14494 ;;      Locals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14495 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14496 ;;      Totals:         0       0      12      19       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14497 ;;Total ram usage:       31 bytes
 14498 ;; Hardware stack levels used:    1
 14499 ;; Hardware stack levels required when called:   14
 14500 ;; This function calls:
 14501 ;;		_MiApp_DiscardMessage
 14502 ;;		_MiApp_MessageAvailable
 14503 ;;		_MiMAC_SendPacket
 14504 ;;		_MiWi_TickGet
 14505 ;;		_SearchForLongAddress
 14506 ;; This function is called by:
 14507 ;;		_OpenSocket
 14508 ;;		_do_NETWORK_REGISTER
 14509 ;;		_do_POWER_TEST
 14510 ;;		_do_UPDATE
 14511 ;;		_do_PING
 14512 ;; This function uses a non-reentrant model
 14513 ;;
 14514                           
 14515                           	psect	text48
 14516  004148                     __ptext48:
 14517                           	opt stack 0
 14518  004148                     _MiApp_UnicastAddress:
 14519                           	opt stack 14
 14520                           
 14521                           ;miwi_mesh.c: 4567: uint8_t handle;
 14522                           ;miwi_mesh.c: 4568: uint8_t i;
 14523                           ;miwi_mesh.c: 4569: uint8_t MiWiFrameControl;
 14524                           ;miwi_mesh.c: 4571: if( MiWiAckRequired && TxBuffer[11])
 14525                           
 14526                           ; BSR set to: 1
 14527                           ;incstack = 0
 14528  004148  5042               	movf	_MiWiAckRequired,w,c
 14529  00414A  B4D8               	btfsc	status,2,c
 14530  00414C  D00C               	goto	l11930
 14531  00414E  0101               	movlb	1	; () banked
 14532  004150  5177               	movf	(_TxBuffer+11)& (0+255),w,b
 14533  004152  B4D8               	btfsc	status,2,c
 14534  004154  D008               	goto	l11930
 14535                           
 14536                           ; BSR set to: 1
 14537                           ;miwi_mesh.c: 4572: {
 14538                           ;miwi_mesh.c: 4573: MiWiStateMachine.bits.MiWiAckInProgress = 1;
 14539  004156  0100               	movlb	0	; () banked
 14540  004158  87D4               	bsf	_MiWiStateMachine& (0+255),3,b
 14541                           
 14542                           ;miwi_mesh.c: 4574: AcknowledgementSeq = MiWiSeqNum;
 14543  00415A  C0D7  F1FE         	movff	_MiWiSeqNum,_AcknowledgementSeq
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;miwi_mesh.c: 4575: MiWiFrameControl = 0x06;
 14547  00415E  0E06               	movlw	6
 14548  004160  0102               	movlb	2	; () banked
 14549  004162  6FF0               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 14550                           
 14551                           ;miwi_mesh.c: 4576: }
 14552  004164  D005               	goto	l829
 14553  004166                     l11930:
 14554                           
 14555                           ;miwi_mesh.c: 4577: else
 14556                           ;miwi_mesh.c: 4578: {
 14557                           ;miwi_mesh.c: 4579: MiWiFrameControl = 0x02;
 14558  004166  0E02               	movlw	2
 14559  004168  0102               	movlb	2	; () banked
 14560  00416A  6FF0               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 14561                           
 14562                           ; BSR set to: 2
 14563                           ;miwi_mesh.c: 4580: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14564  00416C  0100               	movlb	0	; () banked
 14565  00416E  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 14566  004170                     l829:
 14567                           
 14568                           ;miwi_mesh.c: 4581: }
 14569                           ;miwi_mesh.c: 4583: if( PermanentAddr )
 14570  004170  0101               	movlb	1	; () banked
 14571  004172  51EA               	movf	MiApp_UnicastAddress@PermanentAddr& (0+255),w,b
 14572  004174  0101               	movlb	1	; () banked
 14573  004176  B4D8               	btfsc	status,2,c
 14574  004178  D16A               	goto	l12062
 14575                           
 14576                           ; BSR set to: 1
 14577                           ;miwi_mesh.c: 4584: {
 14578                           ;miwi_mesh.c: 4585: for(i = 0; i < 4; i++)
 14579  00417A  0E00               	movlw	0
 14580  00417C  0102               	movlb	2	; () banked
 14581  00417E  6FF1               	movwf	MiApp_UnicastAddress@i& (0+255),b
 14582  004180                     l11936:
 14583                           
 14584                           ; BSR set to: 2
 14585  004180  0E03               	movlw	3
 14586  004182  0102               	movlb	2	; () banked
 14587  004184  65F1               	cpfsgt	MiApp_UnicastAddress@i& (0+255),b
 14588  004186  D001               	goto	l11940
 14589  004188  D019               	goto	l11946
 14590  00418A                     l11940:
 14591                           
 14592                           ; BSR set to: 2
 14593                           ;miwi_mesh.c: 4586: {
 14594                           ;miwi_mesh.c: 4587: tempLongAddress[i] = DestAddress[i];
 14595  00418A  0102               	movlb	2	; () banked
 14596  00418C  51F1               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 14597  00418E  0D01               	mullw	1
 14598  004190  50F3               	movf	prodl,w,c
 14599  004192  0101               	movlb	1	; () banked
 14600  004194  25E8               	addwf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14601  004196  6ED9               	movwf	fsr2l,c
 14602  004198  50F4               	movf	prodh,w,c
 14603  00419A  0101               	movlb	1	; () banked
 14604  00419C  21E9               	addwfc	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14605  00419E  6EDA               	movwf	fsr2h,c
 14606  0041A0  0102               	movlb	2	; () banked
 14607  0041A2  51F1               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 14608  0041A4  0D01               	mullw	1
 14609  0041A6  0E4E               	movlw	low _tempLongAddress
 14610  0041A8  24F3               	addwf	prodl,w,c
 14611  0041AA  6EE1               	movwf	fsr1l,c
 14612  0041AC  0E01               	movlw	high _tempLongAddress
 14613  0041AE  20F4               	addwfc	prodh,w,c
 14614  0041B0  6EE2               	movwf	fsr1h,c
 14615  0041B2  CFDF FFE7          	movff	indf2,indf1
 14616                           
 14617                           ; BSR set to: 2
 14618  0041B6  0102               	movlb	2	; () banked
 14619  0041B8  2BF1               	incf	MiApp_UnicastAddress@i& (0+255),f,b
 14620  0041BA  D7E2               	goto	l11936
 14621  0041BC                     l11946:
 14622                           
 14623                           ; BSR set to: 2
 14624                           ;miwi_mesh.c: 4588: }
 14625                           ;miwi_mesh.c: 4589: if( (handle = SearchForLongAddress()) == 0xFF )
 14626  0041BC  EC4C  F03C         	call	_SearchForLongAddress	;wreg free
 14627  0041C0  0102               	movlb	2	; () banked
 14628  0041C2  6FF2               	movwf	MiApp_UnicastAddress@handle& (0+255),b
 14629  0041C4  0102               	movlb	2	; () banked
 14630  0041C6  29F2               	incf	MiApp_UnicastAddress@handle& (0+255),w,b
 14631  0041C8  A4D8               	btfss	status,2,c
 14632  0041CA  D03D               	goto	l11986
 14633  0041CC                     l834:
 14634                           
 14635                           ; BSR set to: 2
 14636                           ;miwi_mesh.c: 4593: TxBuffer[0] = defaultHops;
 14637  0041CC  C04A  F16C         	movff	_defaultHops,_TxBuffer
 14638                           
 14639                           ; BSR set to: 2
 14640                           ;miwi_mesh.c: 4594: TxBuffer[1] = 0x02;
 14641  0041D0  0E02               	movlw	2
 14642  0041D2  0101               	movlb	1	; () banked
 14643  0041D4  6F6D               	movwf	(_TxBuffer+1)& (0+255),b
 14644                           
 14645                           ; BSR set to: 1
 14646                           ;miwi_mesh.c: 4595: TxBuffer[2] = 0xFF;
 14647  0041D6  0101               	movlb	1	; () banked
 14648  0041D8  696E               	setf	(_TxBuffer+2)& (0+255),b
 14649                           
 14650                           ; BSR set to: 1
 14651                           ;miwi_mesh.c: 4596: TxBuffer[3] = 0xFF;
 14652  0041DA  0101               	movlb	1	; () banked
 14653  0041DC  696F               	setf	(_TxBuffer+3)& (0+255),b
 14654                           
 14655                           ; BSR set to: 1
 14656                           ;miwi_mesh.c: 4597: TxBuffer[4] = 0xFF;
 14657  0041DE  0101               	movlb	1	; () banked
 14658  0041E0  6970               	setf	(_TxBuffer+4)& (0+255),b
 14659                           
 14660                           ; BSR set to: 1
 14661                           ;miwi_mesh.c: 4598: TxBuffer[5] = 0xFF;
 14662  0041E2  0101               	movlb	1	; () banked
 14663  0041E4  6971               	setf	(_TxBuffer+5)& (0+255),b
 14664                           
 14665                           ; BSR set to: 1
 14666                           ;miwi_mesh.c: 4599: TxBuffer[6] = myPANID.v[0];
 14667  0041E6  C0DB  F172         	movff	_myPANID,_TxBuffer+6
 14668                           
 14669                           ; BSR set to: 1
 14670                           ;miwi_mesh.c: 4600: TxBuffer[7] = myPANID.v[1];
 14671  0041EA  C0DC  F173         	movff	_myPANID+1,_TxBuffer+7
 14672                           
 14673                           ; BSR set to: 1
 14674                           ;miwi_mesh.c: 4601: TxBuffer[8] = myShortAddress.v[0];
 14675  0041EE  C0DD  F174         	movff	_myShortAddress,_TxBuffer+8
 14676                           
 14677                           ; BSR set to: 1
 14678                           ;miwi_mesh.c: 4602: TxBuffer[9] = myShortAddress.v[1];
 14679  0041F2  C0DE  F175         	movff	_myShortAddress+1,_TxBuffer+9
 14680                           
 14681                           ; BSR set to: 1
 14682                           ;miwi_mesh.c: 4603: TxBuffer[10] = MiWiSeqNum++;
 14683  0041F6  C0D7  F176         	movff	_MiWiSeqNum,_TxBuffer+10
 14684                           
 14685                           ; BSR set to: 1
 14686  0041FA  0100               	movlb	0	; () banked
 14687  0041FC  2BD7               	incf	_MiWiSeqNum& (0+255),f,b
 14688                           
 14689                           ; BSR set to: 0
 14690                           ;miwi_mesh.c: 4616: MTP.flags.Val = 0;
 14691  0041FE  0E00               	movlw	0
 14692  004200  0100               	movlb	0	; () banked
 14693  004202  6FD1               	movwf	_MTP& (0+255),b
 14694                           
 14695                           ; BSR set to: 0
 14696                           ;miwi_mesh.c: 4617: MTP.flags.bits.ackReq = 1;
 14697  004204  0100               	movlb	0	; () banked
 14698  004206  8BD1               	bsf	_MTP& (0+255),5,b
 14699                           
 14700                           ; BSR set to: 0
 14701                           ;miwi_mesh.c: 4618: MTP.flags.bits.secEn = SecEn;
 14702  004208  0101               	movlb	1	; () banked
 14703  00420A  B1EB               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 14704  00420C  D003               	bra	u13785
 14705  00420E  0100               	movlb	0	; () banked
 14706  004210  97D1               	bcf	_MTP& (0+255),3,b
 14707  004212  D002               	bra	u13786
 14708  004214                     u13785:
 14709  004214  0100               	movlb	0	; () banked
 14710  004216  87D1               	bsf	_MTP& (0+255),3,b
 14711  004218                     u13786:
 14712                           
 14713                           ; BSR set to: 0
 14714                           ;miwi_mesh.c: 4619: MTP.DestAddress = DestAddress;
 14715  004218  C1E8  F0D2         	movff	MiApp_UnicastAddress@DestAddress,_MTP+1
 14716  00421C  C1E9  F0D3         	movff	MiApp_UnicastAddress@DestAddress+1,_MTP+2
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;miwi_mesh.c: 4625: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14720  004220  0100               	movlb	0	; () banked
 14721  004222  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 14722                           
 14723                           ; BSR set to: 0
 14724                           ;miwi_mesh.c: 4627: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 14725  004224  C0D1  F0B0         	movff	_MTP,MiMAC_SendPacket@transParam
 14726  004228  C0D2  F0B1         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 14727  00422C  C0D3  F0B2         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 14728  004230  0E6C               	movlw	low _TxBuffer
 14729  004232  0100               	movlb	0	; () banked
 14730  004234  6FB3               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 14731  004236  0E01               	movlw	high _TxBuffer
 14732  004238  0100               	movlb	0	; () banked
 14733  00423A  6FB4               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 14734  00423C  C0D8  F0B5         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 14735  004240  EC6F  F02B         	call	_MiMAC_SendPacket	;wreg free
 14736  004244  0012               	return	
 14737  004246                     l11986:
 14738                           
 14739                           ;miwi_mesh.c: 4629: else
 14740                           ;miwi_mesh.c: 4630: {
 14741                           ;miwi_mesh.c: 4631: if( ConnectionTable[handle].status.bits.shortAddressValid == 0 )
 14742  004246  0102               	movlb	2	; () banked
 14743  004248  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14744  00424A  0D09               	mullw	9
 14745  00424C  0E08               	movlw	8
 14746  00424E  26F3               	addwf	prodl,f,c
 14747  004250  0E00               	movlw	0
 14748  004252  22F4               	addwfc	prodh,f,c
 14749  004254  0E46               	movlw	low _ConnectionTable
 14750  004256  24F3               	addwf	prodl,w,c
 14751  004258  6ED9               	movwf	fsr2l,c
 14752  00425A  0E02               	movlw	high _ConnectionTable
 14753  00425C  20F4               	addwfc	prodh,w,c
 14754  00425E  6EDA               	movwf	fsr2h,c
 14755  004260  0102               	movlb	2	; () banked
 14756  004262  A6DF               	btfss	indf2,3,c
 14757  004264  D7B3               	goto	l834
 14758                           
 14759                           ; BSR set to: 2
 14760                           ;miwi_mesh.c: 4634: }
 14761                           ;miwi_mesh.c: 4636: if( MiWiAckRequired )
 14762                           
 14763                           ; BSR set to: 2
 14764                           
 14765                           ; BSR set to: 2
 14766                           ;miwi_mesh.c: 4632: {
 14767                           ;miwi_mesh.c: 4633: goto DIRECT_LONG_ADDRESS;
 14768  004266  5042               	movf	_MiWiAckRequired,w,c
 14769  004268  B4D8               	btfsc	status,2,c
 14770  00426A  D011               	goto	l11994
 14771                           
 14772                           ; BSR set to: 2
 14773                           ;miwi_mesh.c: 4637: {
 14774                           ;miwi_mesh.c: 4638: AcknowledgementAddr.Val = ConnectionTable[handle].AltAddress.Val;
 14775  00426C  0102               	movlb	2	; () banked
 14776  00426E  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14777  004270  0D09               	mullw	9
 14778  004272  0E02               	movlw	2
 14779  004274  26F3               	addwf	prodl,f,c
 14780  004276  0E00               	movlw	0
 14781  004278  22F4               	addwfc	prodh,f,c
 14782  00427A  0E46               	movlw	low _ConnectionTable
 14783  00427C  24F3               	addwf	prodl,w,c
 14784  00427E  6ED9               	movwf	fsr2l,c
 14785  004280  0E02               	movlw	high _ConnectionTable
 14786  004282  20F4               	addwfc	prodh,w,c
 14787  004284  6EDA               	movwf	fsr2h,c
 14788  004286  CFDE F158          	movff	postinc2,_AcknowledgementAddr
 14789  00428A  CFDD F159          	movff	postdec2,_AcknowledgementAddr+1
 14790  00428E                     l11994:
 14791                           
 14792                           ; BSR set to: 2
 14793                           ;miwi_mesh.c: 4639: }
 14794                           ;miwi_mesh.c: 4641: TxBuffer[0] = 4;
 14795  00428E  0E04               	movlw	4
 14796  004290  0101               	movlb	1	; () banked
 14797  004292  6F6C               	movwf	_TxBuffer& (0+255),b
 14798                           
 14799                           ; BSR set to: 1
 14800                           ;miwi_mesh.c: 4642: TxBuffer[1] = MiWiFrameControl;
 14801  004294  C2F0  F16D         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 14802                           
 14803                           ; BSR set to: 1
 14804                           ;miwi_mesh.c: 4643: TxBuffer[2] = ConnectionTable[handle].PANID.v[0];
 14805  004298  0102               	movlb	2	; () banked
 14806  00429A  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14807  00429C  0D09               	mullw	9
 14808  00429E  0E46               	movlw	low _ConnectionTable
 14809  0042A0  24F3               	addwf	prodl,w,c
 14810  0042A2  6ED9               	movwf	fsr2l,c
 14811  0042A4  0E02               	movlw	high _ConnectionTable
 14812  0042A6  20F4               	addwfc	prodh,w,c
 14813  0042A8  6EDA               	movwf	fsr2h,c
 14814  0042AA  50DF               	movf	indf2,w,c
 14815  0042AC  0101               	movlb	1	; () banked
 14816  0042AE  6F6E               	movwf	(_TxBuffer+2)& (0+255),b
 14817                           
 14818                           ; BSR set to: 1
 14819                           ;miwi_mesh.c: 4644: TxBuffer[3] = ConnectionTable[handle].PANID.v[1];
 14820  0042B0  0102               	movlb	2	; () banked
 14821  0042B2  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14822  0042B4  0D09               	mullw	9
 14823  0042B6  0E01               	movlw	1
 14824  0042B8  26F3               	addwf	prodl,f,c
 14825  0042BA  0E00               	movlw	0
 14826  0042BC  22F4               	addwfc	prodh,f,c
 14827  0042BE  0E46               	movlw	low _ConnectionTable
 14828  0042C0  24F3               	addwf	prodl,w,c
 14829  0042C2  6ED9               	movwf	fsr2l,c
 14830  0042C4  0E02               	movlw	high _ConnectionTable
 14831  0042C6  20F4               	addwfc	prodh,w,c
 14832  0042C8  6EDA               	movwf	fsr2h,c
 14833  0042CA  50DF               	movf	indf2,w,c
 14834  0042CC  0101               	movlb	1	; () banked
 14835  0042CE  6F6F               	movwf	(_TxBuffer+3)& (0+255),b
 14836                           
 14837                           ; BSR set to: 1
 14838                           ;miwi_mesh.c: 4645: TxBuffer[4] = ConnectionTable[handle].AltAddress.v[0];
 14839  0042D0  0102               	movlb	2	; () banked
 14840  0042D2  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14841  0042D4  0D09               	mullw	9
 14842  0042D6  0E02               	movlw	2
 14843  0042D8  26F3               	addwf	prodl,f,c
 14844  0042DA  0E00               	movlw	0
 14845  0042DC  22F4               	addwfc	prodh,f,c
 14846  0042DE  0E46               	movlw	low _ConnectionTable
 14847  0042E0  24F3               	addwf	prodl,w,c
 14848  0042E2  6ED9               	movwf	fsr2l,c
 14849  0042E4  0E02               	movlw	high _ConnectionTable
 14850  0042E6  20F4               	addwfc	prodh,w,c
 14851  0042E8  6EDA               	movwf	fsr2h,c
 14852  0042EA  50DF               	movf	indf2,w,c
 14853  0042EC  0101               	movlb	1	; () banked
 14854  0042EE  6F70               	movwf	(_TxBuffer+4)& (0+255),b
 14855                           
 14856                           ; BSR set to: 1
 14857                           ;miwi_mesh.c: 4646: TxBuffer[5] = ConnectionTable[handle].AltAddress.v[1];
 14858  0042F0  0102               	movlb	2	; () banked
 14859  0042F2  51F2               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14860  0042F4  0D09               	mullw	9
 14861  0042F6  0E03               	movlw	3
 14862  0042F8  26F3               	addwf	prodl,f,c
 14863  0042FA  0E00               	movlw	0
 14864  0042FC  22F4               	addwfc	prodh,f,c
 14865  0042FE  0E46               	movlw	low _ConnectionTable
 14866  004300  24F3               	addwf	prodl,w,c
 14867  004302  6ED9               	movwf	fsr2l,c
 14868  004304  0E02               	movlw	high _ConnectionTable
 14869  004306  20F4               	addwfc	prodh,w,c
 14870  004308  6EDA               	movwf	fsr2h,c
 14871  00430A  50DF               	movf	indf2,w,c
 14872  00430C  0101               	movlb	1	; () banked
 14873  00430E  6F71               	movwf	(_TxBuffer+5)& (0+255),b
 14874                           
 14875                           ; BSR set to: 1
 14876                           ;miwi_mesh.c: 4647: TxBuffer[6] = myPANID.v[0];
 14877  004310  C0DB  F172         	movff	_myPANID,_TxBuffer+6
 14878                           
 14879                           ; BSR set to: 1
 14880                           ;miwi_mesh.c: 4648: TxBuffer[7] = myPANID.v[1];
 14881  004314  C0DC  F173         	movff	_myPANID+1,_TxBuffer+7
 14882                           
 14883                           ; BSR set to: 1
 14884                           ;miwi_mesh.c: 4649: TxBuffer[8] = myShortAddress.v[0];
 14885  004318  C0DD  F174         	movff	_myShortAddress,_TxBuffer+8
 14886                           
 14887                           ; BSR set to: 1
 14888                           ;miwi_mesh.c: 4650: TxBuffer[9] = myShortAddress.v[1];
 14889  00431C  C0DE  F175         	movff	_myShortAddress+1,_TxBuffer+9
 14890                           
 14891                           ; BSR set to: 1
 14892                           ;miwi_mesh.c: 4651: TxBuffer[10] = MiWiSeqNum++;
 14893  004320  C0D7  F176         	movff	_MiWiSeqNum,_TxBuffer+10
 14894                           
 14895                           ; BSR set to: 1
 14896  004324  0100               	movlb	0	; () banked
 14897  004326  2BD7               	incf	_MiWiSeqNum& (0+255),f,b
 14898                           
 14899                           ; BSR set to: 0
 14900                           ;miwi_mesh.c: 4696: MTP.flags.Val = 0;
 14901  004328  0E00               	movlw	0
 14902  00432A  0100               	movlb	0	; () banked
 14903  00432C  6FD1               	movwf	_MTP& (0+255),b
 14904                           
 14905                           ; BSR set to: 0
 14906                           ;miwi_mesh.c: 4697: MTP.flags.bits.ackReq = 1;
 14907  00432E  0100               	movlb	0	; () banked
 14908  004330  8BD1               	bsf	_MTP& (0+255),5,b
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;miwi_mesh.c: 4698: MTP.flags.bits.secEn = SecEn;
 14912  004332  0101               	movlb	1	; () banked
 14913  004334  B1EB               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 14914  004336  D003               	bra	u13815
 14915  004338  0100               	movlb	0	; () banked
 14916  00433A  97D1               	bcf	_MTP& (0+255),3,b
 14917  00433C  D002               	bra	u13816
 14918  00433E                     u13815:
 14919  00433E  0100               	movlb	0	; () banked
 14920  004340  87D1               	bsf	_MTP& (0+255),3,b
 14921  004342                     u13816:
 14922                           
 14923                           ; BSR set to: 0
 14924                           ;miwi_mesh.c: 4706: MTP.DestAddress = ConnectionTable[myParent].Address;
 14925  004342  0100               	movlb	0	; () banked
 14926  004344  51D9               	movf	_myParent& (0+255),w,b
 14927  004346  0D09               	mullw	9
 14928  004348  0E04               	movlw	4
 14929  00434A  26F3               	addwf	prodl,f,c
 14930  00434C  0E00               	movlw	0
 14931  00434E  22F4               	addwfc	prodh,f,c
 14932  004350  0E46               	movlw	low _ConnectionTable
 14933  004352  24F3               	addwf	prodl,w,c
 14934  004354  0100               	movlb	0	; () banked
 14935  004356  6FD2               	movwf	(_MTP+1)& (0+255),b
 14936  004358  0E02               	movlw	high _ConnectionTable
 14937  00435A  20F4               	addwfc	prodh,w,c
 14938  00435C  0100               	movlb	0	; () banked
 14939  00435E  6FD3               	movwf	(_MTP+2)& (0+255),b
 14940                           
 14941                           ; BSR set to: 0
 14942                           ;miwi_mesh.c: 4709: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 14943  004360  C0D1  F0B0         	movff	_MTP,MiMAC_SendPacket@transParam
 14944  004364  C0D2  F0B1         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 14945  004368  C0D3  F0B2         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 14946  00436C  0E6C               	movlw	low _TxBuffer
 14947  00436E  0100               	movlb	0	; () banked
 14948  004370  6FB3               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 14949  004372  0E01               	movlw	high _TxBuffer
 14950  004374  0100               	movlb	0	; () banked
 14951  004376  6FB4               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 14952  004378  C0D8  F0B5         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 14953  00437C  EC6F  F02B         	call	_MiMAC_SendPacket	;wreg free
 14954  004380  0900               	iorlw	0
 14955  004382  A4D8               	btfss	status,2,c
 14956  004384  D004               	goto	l839
 14957                           
 14958                           ;miwi_mesh.c: 4710: {
 14959                           ;miwi_mesh.c: 4711: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14960  004386  0100               	movlb	0	; () banked
 14961  004388  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 14962                           
 14963                           ; BSR set to: 0
 14964                           ;miwi_mesh.c: 4712: return 0;
 14965  00438A  0E00               	movlw	0
 14966                           
 14967                           ; BSR set to: 0
 14968  00438C  0012               	return	
 14969  00438E                     l839:
 14970                           
 14971                           ;miwi_mesh.c: 4714: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 14972  00438E  0100               	movlb	0	; () banked
 14973  004390  A7D4               	btfss	_MiWiStateMachine& (0+255),3,b
 14974  004392  D05B               	goto	l12058
 14975                           
 14976                           ; BSR set to: 0
 14977                           ;miwi_mesh.c: 4715: {
 14978                           ;miwi_mesh.c: 4716: MIWI_TICK t1, t2;
 14979                           ;miwi_mesh.c: 4717: t1 = MiWi_TickGet();
 14980  004394  EC57  F042         	call	_MiWi_TickGet	;wreg free
 14981  004398  C081  F2E0         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1
 14982  00439C  C082  F2E1         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1+1
 14983  0043A0  C083  F2E2         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1+2
 14984  0043A4  C084  F2E3         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1+3
 14985  0043A8                     l12038:
 14986                           
 14987                           ;miwi_mesh.c: 4719: {
 14988                           ;miwi_mesh.c: 4720: if( MiApp_MessageAvailable())
 14989  0043A8  EC07  F046         	call	_MiApp_MessageAvailable	;wreg free
 14990  0043AC  0900               	iorlw	0
 14991  0043AE  A4D8               	btfss	status,2,c
 14992                           
 14993                           ;miwi_mesh.c: 4721: {
 14994                           ;miwi_mesh.c: 4722: MiApp_DiscardMessage();
 14995  0043B0  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
 14996                           
 14997                           ;miwi_mesh.c: 4723: }
 14998                           ;miwi_mesh.c: 4725: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 14999  0043B4  0100               	movlb	0	; () banked
 15000  0043B6  B7D4               	btfsc	_MiWiStateMachine& (0+255),3,b
 15001  0043B8  D002               	goto	l12048
 15002                           
 15003                           ; BSR set to: 0
 15004                           ;miwi_mesh.c: 4726: {
 15005                           ;miwi_mesh.c: 4727: return 1;
 15006  0043BA  0E01               	movlw	1
 15007                           
 15008                           ; BSR set to: 0
 15009  0043BC  0012               	return	
 15010  0043BE                     l12048:
 15011                           
 15012                           ; BSR set to: 0
 15013                           ;miwi_mesh.c: 4728: }
 15014                           ;miwi_mesh.c: 4729: t2 = MiWi_TickGet();
 15015  0043BE  EC57  F042         	call	_MiWi_TickGet	;wreg free
 15016  0043C2  C081  F2E4         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2
 15017  0043C6  C082  F2E5         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2+1
 15018  0043CA  C083  F2E6         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2+2
 15019  0043CE  C084  F2E7         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2+3
 15020                           
 15021                           ;miwi_mesh.c: 4730: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 15022  0043D2  C2E0  F1EC         	movff	MiApp_UnicastAddress@t1,??_MiApp_UnicastAddress
 15023  0043D6  C2E1  F1ED         	movff	MiApp_UnicastAddress@t1+1,??_MiApp_UnicastAddress+1
 15024  0043DA  C2E2  F1EE         	movff	MiApp_UnicastAddress@t1+2,??_MiApp_UnicastAddress+2
 15025  0043DE  C2E3  F1EF         	movff	MiApp_UnicastAddress@t1+3,??_MiApp_UnicastAddress+3
 15026  0043E2  0101               	movlb	1	; () banked
 15027  0043E4  1FEC               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 15028  0043E6  1FED               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15029  0043E8  1FEE               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15030  0043EA  1FEF               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15031  0043EC  2BEC               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 15032  0043EE  0E00               	movlw	0
 15033  0043F0  23ED               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15034  0043F2  23EE               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15035  0043F4  23EF               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15036  0043F6  0102               	movlb	2	; () banked
 15037  0043F8  51E4               	movf	MiApp_UnicastAddress@t2& (0+255),w,b
 15038  0043FA  0101               	movlb	1	; () banked
 15039  0043FC  25EC               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 15040  0043FE  0101               	movlb	1	; () banked
 15041  004400  6FF0               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 15042  004402  0102               	movlb	2	; () banked
 15043  004404  51E5               	movf	(MiApp_UnicastAddress@t2+1)& (0+255),w,b
 15044  004406  0101               	movlb	1	; () banked
 15045  004408  21ED               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 15046  00440A  0101               	movlb	1	; () banked
 15047  00440C  6FF1               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 15048  00440E  0102               	movlb	2	; () banked
 15049  004410  51E6               	movf	(MiApp_UnicastAddress@t2+2)& (0+255),w,b
 15050  004412  0101               	movlb	1	; () banked
 15051  004414  21EE               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 15052  004416  0101               	movlb	1	; () banked
 15053  004418  6FF2               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 15054  00441A  0102               	movlb	2	; () banked
 15055  00441C  51E7               	movf	(MiApp_UnicastAddress@t2+3)& (0+255),w,b
 15056  00441E  0101               	movlb	1	; () banked
 15057  004420  21EF               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 15058  004422  0101               	movlb	1	; () banked
 15059  004424  6FF3               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 15060  004426  0101               	movlb	1	; () banked
 15061  004428  51F3               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 15062  00442A  E10B               	bnz	u13860
 15063  00442C  0E21               	movlw	33
 15064  00442E  0101               	movlb	1	; () banked
 15065  004430  5DF0               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 15066  004432  0EA1               	movlw	161
 15067  004434  0101               	movlb	1	; () banked
 15068  004436  59F1               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 15069  004438  0E07               	movlw	7
 15070  00443A  0101               	movlb	1	; () banked
 15071  00443C  59F2               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 15072  00443E  A0D8               	btfss	status,0,c
 15073  004440  D7B3               	goto	l12038
 15074  004442                     u13860:
 15075                           
 15076                           ; BSR set to: 1
 15077                           ;miwi_mesh.c: 4731: {
 15078                           ;miwi_mesh.c: 4732: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15079  004442  0100               	movlb	0	; () banked
 15080  004444  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 15081                           
 15082                           ; BSR set to: 0
 15083                           ;miwi_mesh.c: 4733: return 0;
 15084  004446  0E00               	movlw	0
 15085                           
 15086                           ; BSR set to: 0
 15087  004448  0012               	return	
 15088  00444A                     l12058:
 15089                           
 15090                           ; BSR set to: 0
 15091                           ;miwi_mesh.c: 4734: }
 15092                           ;miwi_mesh.c: 4735: }
 15093                           ;miwi_mesh.c: 4736: }
 15094                           ;miwi_mesh.c: 4737: return 1;
 15095  00444A  0E01               	movlw	1
 15096                           
 15097                           ; BSR set to: 0
 15098  00444C  0012               	return	
 15099  00444E                     l12062:
 15100                           
 15101                           ;miwi_mesh.c: 4739: }
 15102                           ;miwi_mesh.c: 4740: }
 15103                           ;miwi_mesh.c: 4742: TxBuffer[0] = 4;
 15104  00444E  0E04               	movlw	4
 15105  004450  0101               	movlb	1	; () banked
 15106  004452  6F6C               	movwf	_TxBuffer& (0+255),b
 15107                           
 15108                           ; BSR set to: 1
 15109                           ;miwi_mesh.c: 4743: TxBuffer[1] = MiWiFrameControl;
 15110  004454  C2F0  F16D         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 15111                           
 15112                           ; BSR set to: 1
 15113                           ;miwi_mesh.c: 4744: TxBuffer[2] = myPANID.v[0];
 15114  004458  C0DB  F16E         	movff	_myPANID,_TxBuffer+2
 15115                           
 15116                           ; BSR set to: 1
 15117                           ;miwi_mesh.c: 4745: TxBuffer[3] = myPANID.v[1];
 15118  00445C  C0DC  F16F         	movff	_myPANID+1,_TxBuffer+3
 15119                           
 15120                           ; BSR set to: 1
 15121                           ;miwi_mesh.c: 4746: TxBuffer[4] = DestAddress[0];
 15122  004460  C1E8  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 15123  004464  C1E9  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 15124  004468  50DF               	movf	indf2,w,c
 15125  00446A  0101               	movlb	1	; () banked
 15126  00446C  6F70               	movwf	(_TxBuffer+4)& (0+255),b
 15127                           
 15128                           ; BSR set to: 1
 15129                           ;miwi_mesh.c: 4747: TxBuffer[5] = DestAddress[1];
 15130  00446E  0101               	movlb	1	; () banked
 15131  004470  EE20 F001          	lfsr	2,1
 15132  004474  51E8               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 15133  004476  26D9               	addwf	fsr2l,f,c
 15134  004478  51E9               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 15135  00447A  22DA               	addwfc	fsr2h,f,c
 15136  00447C  50DF               	movf	indf2,w,c
 15137  00447E  0101               	movlb	1	; () banked
 15138  004480  6F71               	movwf	(_TxBuffer+5)& (0+255),b
 15139                           
 15140                           ; BSR set to: 1
 15141                           ;miwi_mesh.c: 4748: TxBuffer[6] = myPANID.v[0];
 15142  004482  C0DB  F172         	movff	_myPANID,_TxBuffer+6
 15143                           
 15144                           ; BSR set to: 1
 15145                           ;miwi_mesh.c: 4749: TxBuffer[7] = myPANID.v[1];
 15146  004486  C0DC  F173         	movff	_myPANID+1,_TxBuffer+7
 15147                           
 15148                           ; BSR set to: 1
 15149                           ;miwi_mesh.c: 4750: TxBuffer[8] = myShortAddress.v[0];
 15150  00448A  C0DD  F174         	movff	_myShortAddress,_TxBuffer+8
 15151                           
 15152                           ; BSR set to: 1
 15153                           ;miwi_mesh.c: 4751: TxBuffer[9] = myShortAddress.v[1];
 15154  00448E  C0DE  F175         	movff	_myShortAddress+1,_TxBuffer+9
 15155                           
 15156                           ; BSR set to: 1
 15157                           ;miwi_mesh.c: 4752: TxBuffer[10] = MiWiSeqNum++;
 15158  004492  C0D7  F176         	movff	_MiWiSeqNum,_TxBuffer+10
 15159                           
 15160                           ; BSR set to: 1
 15161  004496  0100               	movlb	0	; () banked
 15162  004498  2BD7               	incf	_MiWiSeqNum& (0+255),f,b
 15163                           
 15164                           ; BSR set to: 0
 15165                           ;miwi_mesh.c: 4754: AcknowledgementAddr.v[0] = DestAddress[0];
 15166  00449A  C1E8  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 15167  00449E  C1E9  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 15168  0044A2  50DF               	movf	indf2,w,c
 15169  0044A4  0101               	movlb	1	; () banked
 15170  0044A6  6F58               	movwf	_AcknowledgementAddr& (0+255),b
 15171                           
 15172                           ; BSR set to: 1
 15173                           ;miwi_mesh.c: 4755: AcknowledgementAddr.v[1] = DestAddress[1];
 15174  0044A8  0101               	movlb	1	; () banked
 15175  0044AA  EE20 F001          	lfsr	2,1
 15176  0044AE  51E8               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 15177  0044B0  26D9               	addwf	fsr2l,f,c
 15178  0044B2  51E9               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 15179  0044B4  22DA               	addwfc	fsr2h,f,c
 15180  0044B6  50DF               	movf	indf2,w,c
 15181  0044B8  0101               	movlb	1	; () banked
 15182  0044BA  6F59               	movwf	(_AcknowledgementAddr+1)& (0+255),b
 15183                           
 15184                           ; BSR set to: 1
 15185                           ;miwi_mesh.c: 4803: MTP.flags.Val = 0;
 15186  0044BC  0E00               	movlw	0
 15187  0044BE  0100               	movlb	0	; () banked
 15188  0044C0  6FD1               	movwf	_MTP& (0+255),b
 15189                           
 15190                           ; BSR set to: 0
 15191                           ;miwi_mesh.c: 4804: MTP.flags.bits.ackReq = 1;
 15192  0044C2  0100               	movlb	0	; () banked
 15193  0044C4  8BD1               	bsf	_MTP& (0+255),5,b
 15194                           
 15195                           ; BSR set to: 0
 15196                           ;miwi_mesh.c: 4805: MTP.flags.bits.secEn = SecEn;
 15197  0044C6  0101               	movlb	1	; () banked
 15198  0044C8  B1EB               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 15199  0044CA  D003               	bra	u13875
 15200  0044CC  0100               	movlb	0	; () banked
 15201  0044CE  97D1               	bcf	_MTP& (0+255),3,b
 15202  0044D0  D002               	bra	u13876
 15203  0044D2                     u13875:
 15204  0044D2  0100               	movlb	0	; () banked
 15205  0044D4  87D1               	bsf	_MTP& (0+255),3,b
 15206  0044D6                     u13876:
 15207                           
 15208                           ; BSR set to: 0
 15209                           ;miwi_mesh.c: 4813: MTP.DestAddress = ConnectionTable[myParent].Address;
 15210  0044D6  0100               	movlb	0	; () banked
 15211  0044D8  51D9               	movf	_myParent& (0+255),w,b
 15212  0044DA  0D09               	mullw	9
 15213  0044DC  0E04               	movlw	4
 15214  0044DE  26F3               	addwf	prodl,f,c
 15215  0044E0  0E00               	movlw	0
 15216  0044E2  22F4               	addwfc	prodh,f,c
 15217  0044E4  0E46               	movlw	low _ConnectionTable
 15218  0044E6  24F3               	addwf	prodl,w,c
 15219  0044E8  0100               	movlb	0	; () banked
 15220  0044EA  6FD2               	movwf	(_MTP+1)& (0+255),b
 15221  0044EC  0E02               	movlw	high _ConnectionTable
 15222  0044EE  20F4               	addwfc	prodh,w,c
 15223  0044F0  0100               	movlb	0	; () banked
 15224  0044F2  6FD3               	movwf	(_MTP+2)& (0+255),b
 15225                           
 15226                           ; BSR set to: 0
 15227                           ;miwi_mesh.c: 4817: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 15228  0044F4  C0D1  F0B0         	movff	_MTP,MiMAC_SendPacket@transParam
 15229  0044F8  C0D2  F0B1         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15230  0044FC  C0D3  F0B2         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15231  004500  0E6C               	movlw	low _TxBuffer
 15232  004502  0100               	movlb	0	; () banked
 15233  004504  6FB3               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15234  004506  0E01               	movlw	high _TxBuffer
 15235  004508  0100               	movlb	0	; () banked
 15236  00450A  6FB4               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15237  00450C  C0D8  F0B5         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15238  004510  EC6F  F02B         	call	_MiMAC_SendPacket	;wreg free
 15239  004514  0900               	iorlw	0
 15240  004516  A4D8               	btfss	status,2,c
 15241  004518  D004               	goto	l848
 15242                           
 15243                           ;miwi_mesh.c: 4818: {
 15244                           ;miwi_mesh.c: 4819: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15245  00451A  0100               	movlb	0	; () banked
 15246  00451C  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 15247                           
 15248                           ; BSR set to: 0
 15249                           ;miwi_mesh.c: 4820: return 0;
 15250  00451E  0E00               	movlw	0
 15251                           
 15252                           ; BSR set to: 0
 15253  004520  0012               	return	
 15254  004522                     l848:
 15255                           
 15256                           ;miwi_mesh.c: 4822: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 15257  004522  0100               	movlb	0	; () banked
 15258  004524  A7D4               	btfss	_MiWiStateMachine& (0+255),3,b
 15259  004526  D05B               	goto	l12130
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;miwi_mesh.c: 4823: {
 15263                           ;miwi_mesh.c: 4824: MIWI_TICK t1, t2;
 15264                           ;miwi_mesh.c: 4825: t1 = MiWi_TickGet();
 15265  004528  EC57  F042         	call	_MiWi_TickGet	;wreg free
 15266  00452C  C081  F2E8         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1_2763
 15267  004530  C082  F2E9         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1_2763+1
 15268  004534  C083  F2EA         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1_2763+2
 15269  004538  C084  F2EB         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1_2763+3
 15270  00453C                     l12110:
 15271                           
 15272                           ;miwi_mesh.c: 4827: {
 15273                           ;miwi_mesh.c: 4828: if( MiApp_MessageAvailable())
 15274  00453C  EC07  F046         	call	_MiApp_MessageAvailable	;wreg free
 15275  004540  0900               	iorlw	0
 15276  004542  A4D8               	btfss	status,2,c
 15277                           
 15278                           ;miwi_mesh.c: 4829: {
 15279                           ;miwi_mesh.c: 4830: MiApp_DiscardMessage();
 15280  004544  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
 15281                           
 15282                           ;miwi_mesh.c: 4831: }
 15283                           ;miwi_mesh.c: 4833: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 15284  004548  0100               	movlb	0	; () banked
 15285  00454A  B7D4               	btfsc	_MiWiStateMachine& (0+255),3,b
 15286  00454C  D002               	goto	l12120
 15287                           
 15288                           ; BSR set to: 0
 15289                           ;miwi_mesh.c: 4834: {
 15290                           ;miwi_mesh.c: 4835: return 1;
 15291  00454E  0E01               	movlw	1
 15292                           
 15293                           ; BSR set to: 0
 15294  004550  0012               	return	
 15295  004552                     l12120:
 15296                           
 15297                           ; BSR set to: 0
 15298                           ;miwi_mesh.c: 4836: }
 15299                           ;miwi_mesh.c: 4837: t2 = MiWi_TickGet();
 15300  004552  EC57  F042         	call	_MiWi_TickGet	;wreg free
 15301  004556  C081  F2EC         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2_2774
 15302  00455A  C082  F2ED         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2_2774+1
 15303  00455E  C083  F2EE         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2_2774+2
 15304  004562  C084  F2EF         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2_2774+3
 15305                           
 15306                           ;miwi_mesh.c: 4838: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 15307  004566  C2E8  F1EC         	movff	MiApp_UnicastAddress@t1_2763,??_MiApp_UnicastAddress
 15308  00456A  C2E9  F1ED         	movff	MiApp_UnicastAddress@t1_2763+1,??_MiApp_UnicastAddress+1
 15309  00456E  C2EA  F1EE         	movff	MiApp_UnicastAddress@t1_2763+2,??_MiApp_UnicastAddress+2
 15310  004572  C2EB  F1EF         	movff	MiApp_UnicastAddress@t1_2763+3,??_MiApp_UnicastAddress+3
 15311  004576  0101               	movlb	1	; () banked
 15312  004578  1FEC               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 15313  00457A  1FED               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15314  00457C  1FEE               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15315  00457E  1FEF               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15316  004580  2BEC               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 15317  004582  0E00               	movlw	0
 15318  004584  23ED               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15319  004586  23EE               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15320  004588  23EF               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15321  00458A  0102               	movlb	2	; () banked
 15322  00458C  51EC               	movf	MiApp_UnicastAddress@t2_2774& (0+255),w,b
 15323  00458E  0101               	movlb	1	; () banked
 15324  004590  25EC               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 15325  004592  0101               	movlb	1	; () banked
 15326  004594  6FF0               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 15327  004596  0102               	movlb	2	; () banked
 15328  004598  51ED               	movf	(MiApp_UnicastAddress@t2_2774+1)& (0+255),w,b
 15329  00459A  0101               	movlb	1	; () banked
 15330  00459C  21ED               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 15331  00459E  0101               	movlb	1	; () banked
 15332  0045A0  6FF1               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 15333  0045A2  0102               	movlb	2	; () banked
 15334  0045A4  51EE               	movf	(MiApp_UnicastAddress@t2_2774+2)& (0+255),w,b
 15335  0045A6  0101               	movlb	1	; () banked
 15336  0045A8  21EE               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 15337  0045AA  0101               	movlb	1	; () banked
 15338  0045AC  6FF2               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 15339  0045AE  0102               	movlb	2	; () banked
 15340  0045B0  51EF               	movf	(MiApp_UnicastAddress@t2_2774+3)& (0+255),w,b
 15341  0045B2  0101               	movlb	1	; () banked
 15342  0045B4  21EF               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 15343  0045B6  0101               	movlb	1	; () banked
 15344  0045B8  6FF3               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 15345  0045BA  0101               	movlb	1	; () banked
 15346  0045BC  51F3               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 15347  0045BE  E10B               	bnz	u13920
 15348  0045C0  0E21               	movlw	33
 15349  0045C2  0101               	movlb	1	; () banked
 15350  0045C4  5DF0               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 15351  0045C6  0EA1               	movlw	161
 15352  0045C8  0101               	movlb	1	; () banked
 15353  0045CA  59F1               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 15354  0045CC  0E07               	movlw	7
 15355  0045CE  0101               	movlb	1	; () banked
 15356  0045D0  59F2               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 15357  0045D2  A0D8               	btfss	status,0,c
 15358  0045D4  D7B3               	goto	l12110
 15359  0045D6                     u13920:
 15360                           
 15361                           ; BSR set to: 1
 15362                           ;miwi_mesh.c: 4839: {
 15363                           ;miwi_mesh.c: 4840: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15364  0045D6  0100               	movlb	0	; () banked
 15365  0045D8  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;miwi_mesh.c: 4841: return 0;
 15369  0045DA  0E00               	movlw	0
 15370                           
 15371                           ; BSR set to: 0
 15372  0045DC  0012               	return	
 15373  0045DE                     l12130:
 15374                           
 15375                           ; BSR set to: 0
 15376                           ;miwi_mesh.c: 4842: }
 15377                           ;miwi_mesh.c: 4843: }
 15378                           ;miwi_mesh.c: 4844: }
 15379                           ;miwi_mesh.c: 4846: return 1;
 15380  0045DE  0E01               	movlw	1
 15381  0045E0  0012               	return	
 15382  0045E2                     __end_of_MiApp_UnicastAddress:
 15383                           	opt stack 0
 15384                           tblptru	equ	0xFF8
 15385                           tblptrh	equ	0xFF7
 15386                           tblptrl	equ	0xFF6
 15387                           tablat	equ	0xFF5
 15388                           prodh	equ	0xFF4
 15389                           prodl	equ	0xFF3
 15390                           intcon	equ	0xFF2
 15391                           intcon2	equ	0xFF1
 15392                           intcon3	equ	0xFF0
 15393                           indf0	equ	0xFEF
 15394                           postinc0	equ	0xFEE
 15395                           plusw0	equ	0xFEB
 15396                           fsr0h	equ	0xFEA
 15397                           fsr0l	equ	0xFE9
 15398                           wreg	equ	0xFE8
 15399                           indf1	equ	0xFE7
 15400                           postinc1	equ	0xFE6
 15401                           postdec1	equ	0xFE5
 15402                           fsr1h	equ	0xFE2
 15403                           fsr1l	equ	0xFE1
 15404                           indf2	equ	0xFDF
 15405                           postinc2	equ	0xFDE
 15406                           postdec2	equ	0xFDD
 15407                           plusw2	equ	0xFDB
 15408                           fsr2h	equ	0xFDA
 15409                           fsr2l	equ	0xFD9
 15410                           status	equ	0xFD8
 15411                           
 15412 ;; *************** function _MiApp_SearchConnection *****************
 15413 ;; Defined at:
 15414 ;;		line 3979 in file "src/miwi/miwi_mesh.c"
 15415 ;; Parameters:    Size  Location     Type
 15416 ;;  ScanDuration    1    wreg     unsigned char 
 15417 ;;  ChannelMap      4   21[BANK1 ] unsigned long 
 15418 ;; Auto vars:     Size  Location     Type
 15419 ;;  ScanDuration    1   12[BANK2 ] unsigned char 
 15420 ;;  t2              4    8[BANK2 ] struct _MIWI_TICK
 15421 ;;  t1              4    4[BANK2 ] struct _MIWI_TICK
 15422 ;;  channelMask     4    0[BANK2 ] unsigned long 
 15423 ;;  i               1   14[BANK2 ] unsigned char 
 15424 ;;  backupChanne    1   13[BANK2 ] unsigned char 
 15425 ;; Return value:  Size  Location     Type
 15426 ;;                  1    wreg      unsigned char 
 15427 ;; Registers used:
 15428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15429 ;; Tracked objects:
 15430 ;;		On entry : 0/0
 15431 ;;		On exit  : 0/0
 15432 ;;		Unchanged: 0/0
 15433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15434 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15435 ;;      Locals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15436 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15437 ;;      Totals:         0       0      13      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15438 ;;Total ram usage:       28 bytes
 15439 ;; Hardware stack levels used:    1
 15440 ;; Hardware stack levels required when called:   14
 15441 ;; This function calls:
 15442 ;;		_MiApp_DiscardMessage
 15443 ;;		_MiApp_MessageAvailable
 15444 ;;		_MiApp_SetChannel
 15445 ;;		_MiWi_TickGet
 15446 ;;		_SendMACPacket
 15447 ;; This function is called by:
 15448 ;;		_MiApp_EstablishConnection
 15449 ;;		_main
 15450 ;; This function uses a non-reentrant model
 15451 ;;
 15452                           
 15453                           	psect	text49
 15454  005B42                     __ptext49:
 15455                           	opt stack 0
 15456  005B42                     _MiApp_SearchConnection:
 15457                           	opt stack 16
 15458                           
 15459                           ;incstack = 0
 15460                           ;MiApp_SearchConnection@ScanDuration stored from wreg
 15461  005B42  0102               	movlb	2	; () banked
 15462  005B44  6FEC               	movwf	MiApp_SearchConnection@ScanDuration& (0+255),b
 15463                           
 15464                           ;miwi_mesh.c: 3981: uint8_t i;
 15465                           ;miwi_mesh.c: 3982: uint32_t channelMask = 0x00000001;
 15466  005B46  0E01               	movlw	1
 15467  005B48  0102               	movlb	2	; () banked
 15468  005B4A  6FE0               	movwf	MiApp_SearchConnection@channelMask& (0+255),b
 15469  005B4C  0E00               	movlw	0
 15470  005B4E  6FE1               	movwf	(MiApp_SearchConnection@channelMask+1)& (0+255),b
 15471  005B50  0E00               	movlw	0
 15472  005B52  6FE2               	movwf	(MiApp_SearchConnection@channelMask+2)& (0+255),b
 15473  005B54  0E00               	movlw	0
 15474  005B56  6FE3               	movwf	(MiApp_SearchConnection@channelMask+3)& (0+255),b
 15475                           
 15476                           ; BSR set to: 2
 15477                           ;miwi_mesh.c: 3983: uint8_t backupChannel = currentChannel;
 15478  005B58  C1D2  F2ED         	movff	_currentChannel,MiApp_SearchConnection@backupChannel
 15479                           
 15480                           ;miwi_mesh.c: 3984: MIWI_TICK t1, t2;
 15481                           ;miwi_mesh.c: 3986: for(i = 0; i < 8; i++)
 15482  005B5C  0E00               	movlw	0
 15483  005B5E  0102               	movlb	2	; () banked
 15484  005B60  6FEE               	movwf	MiApp_SearchConnection@i& (0+255),b
 15485  005B62                     l12778:
 15486                           
 15487                           ; BSR set to: 2
 15488  005B62  0E07               	movlw	7
 15489  005B64  0102               	movlb	2	; () banked
 15490  005B66  65EE               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
 15491  005B68  D001               	goto	l12782
 15492  005B6A  D00E               	goto	l12788
 15493  005B6C                     l12782:
 15494                           
 15495                           ; BSR set to: 2
 15496                           ;miwi_mesh.c: 3987: {
 15497                           ;miwi_mesh.c: 3988: ActiveScanResults[i].Channel = 0xFF;
 15498  005B6C  0102               	movlb	2	; () banked
 15499  005B6E  51EE               	movf	MiApp_SearchConnection@i& (0+255),w,b
 15500  005B70  0D0A               	mullw	10
 15501  005B72  0E00               	movlw	low _ActiveScanResults
 15502  005B74  24F3               	addwf	prodl,w,c
 15503  005B76  6ED9               	movwf	fsr2l,c
 15504  005B78  0E03               	movlw	high _ActiveScanResults
 15505  005B7A  20F4               	addwfc	prodh,w,c
 15506  005B7C  6EDA               	movwf	fsr2h,c
 15507  005B7E  0EFF               	movlw	255
 15508  005B80  6EDF               	movwf	indf2,c
 15509                           
 15510                           ; BSR set to: 2
 15511  005B82  0102               	movlb	2	; () banked
 15512  005B84  2BEE               	incf	MiApp_SearchConnection@i& (0+255),f,b
 15513  005B86  D7ED               	goto	l12778
 15514  005B88                     l12788:
 15515                           
 15516                           ; BSR set to: 2
 15517                           ;miwi_mesh.c: 3989: }
 15518                           ;miwi_mesh.c: 3990: ActiveScanResultIndex = 0;
 15519  005B88  0E00               	movlw	0
 15520  005B8A  0100               	movlb	0	; () banked
 15521  005B8C  6FD6               	movwf	_ActiveScanResultIndex& (0+255),b
 15522                           
 15523                           ; BSR set to: 0
 15524                           ;miwi_mesh.c: 3991: MiWiStateMachine.bits.searchingForNetwork = 1;
 15525  005B8E  0100               	movlb	0	; () banked
 15526  005B90  81D4               	bsf	_MiWiStateMachine& (0+255),0,b
 15527                           
 15528                           ;miwi_mesh.c: 3993: i = 0;
 15529  005B92  0E00               	movlw	0
 15530  005B94  0102               	movlb	2	; () banked
 15531  005B96  6FEE               	movwf	MiApp_SearchConnection@i& (0+255),b
 15532                           
 15533                           ;miwi_mesh.c: 3994: while(i < 32 )
 15534  005B98  D0C8               	goto	l12822
 15535  005B9A                     l12792:
 15536                           
 15537                           ; BSR set to: 2
 15538                           ;miwi_mesh.c: 3995: {
 15539                           ;miwi_mesh.c: 3996: if( ChannelMap & 0xFFFFFFFF & (channelMask << i) )
 15540  005B9A  C2EE  F1EC         	movff	MiApp_SearchConnection@i,??_MiApp_SearchConnection
 15541  005B9E  C2E0  F1ED         	movff	MiApp_SearchConnection@channelMask,??_MiApp_SearchConnection+1
 15542  005BA2  C2E1  F1EE         	movff	MiApp_SearchConnection@channelMask+1,??_MiApp_SearchConnection+2
 15543  005BA6  C2E2  F1EF         	movff	MiApp_SearchConnection@channelMask+2,??_MiApp_SearchConnection+3
 15544  005BAA  C2E3  F1F0         	movff	MiApp_SearchConnection@channelMask+3,??_MiApp_SearchConnection+4
 15545  005BAE  0101               	movlb	1	; () banked
 15546  005BB0  2BEC               	incf	??_MiApp_SearchConnection& (0+255),f,b
 15547  005BB2  D006               	goto	u14810
 15548  005BB4                     u14815:
 15549  005BB4  90D8               	bcf	status,0,c
 15550  005BB6  0101               	movlb	1	; () banked
 15551  005BB8  37ED               	rlcf	(??_MiApp_SearchConnection+1)& (0+255),f,b
 15552  005BBA  37EE               	rlcf	(??_MiApp_SearchConnection+2)& (0+255),f,b
 15553  005BBC  37EF               	rlcf	(??_MiApp_SearchConnection+3)& (0+255),f,b
 15554  005BBE  37F0               	rlcf	(??_MiApp_SearchConnection+4)& (0+255),f,b
 15555  005BC0                     u14810:
 15556  005BC0  0101               	movlb	1	; () banked
 15557  005BC2  2FEC               	decfsz	??_MiApp_SearchConnection& (0+255),f,b
 15558  005BC4  D7F7               	goto	u14815
 15559  005BC6  0101               	movlb	1	; () banked
 15560  005BC8  51E8               	movf	MiApp_SearchConnection@ChannelMap& (0+255),w,b
 15561  005BCA  0101               	movlb	1	; () banked
 15562  005BCC  15ED               	andwf	(??_MiApp_SearchConnection+1)& (0+255),w,b
 15563  005BCE  0101               	movlb	1	; () banked
 15564  005BD0  6FF1               	movwf	(??_MiApp_SearchConnection+5)& (0+255),b
 15565  005BD2  0101               	movlb	1	; () banked
 15566  005BD4  51E9               	movf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),w,b
 15567  005BD6  0101               	movlb	1	; () banked
 15568  005BD8  15EE               	andwf	(??_MiApp_SearchConnection+2)& (0+255),w,b
 15569  005BDA  0101               	movlb	1	; () banked
 15570  005BDC  6FF2               	movwf	(??_MiApp_SearchConnection+6)& (0+255),b
 15571  005BDE  0101               	movlb	1	; () banked
 15572  005BE0  51EA               	movf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),w,b
 15573  005BE2  0101               	movlb	1	; () banked
 15574  005BE4  15EF               	andwf	(??_MiApp_SearchConnection+3)& (0+255),w,b
 15575  005BE6  0101               	movlb	1	; () banked
 15576  005BE8  6FF3               	movwf	(??_MiApp_SearchConnection+7)& (0+255),b
 15577  005BEA  0101               	movlb	1	; () banked
 15578  005BEC  51EB               	movf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),w,b
 15579  005BEE  0101               	movlb	1	; () banked
 15580  005BF0  15F0               	andwf	(??_MiApp_SearchConnection+4)& (0+255),w,b
 15581  005BF2  0101               	movlb	1	; () banked
 15582  005BF4  6FF4               	movwf	(??_MiApp_SearchConnection+8)& (0+255),b
 15583  005BF6  0101               	movlb	1	; () banked
 15584  005BF8  51F1               	movf	(??_MiApp_SearchConnection+5)& (0+255),w,b
 15585  005BFA  0101               	movlb	1	; () banked
 15586  005BFC  11F2               	iorwf	(??_MiApp_SearchConnection+6)& (0+255),w,b
 15587  005BFE  0101               	movlb	1	; () banked
 15588  005C00  11F3               	iorwf	(??_MiApp_SearchConnection+7)& (0+255),w,b
 15589  005C02  0101               	movlb	1	; () banked
 15590  005C04  11F4               	iorwf	(??_MiApp_SearchConnection+8)& (0+255),w,b
 15591  005C06  B4D8               	btfsc	status,2,c
 15592  005C08  D08E               	goto	l12820
 15593                           
 15594                           ; BSR set to: 1
 15595                           ;miwi_mesh.c: 3997: {
 15596                           ;miwi_mesh.c: 3998: ;
 15597                           ;miwi_mesh.c: 3999: ;
 15598                           ;miwi_mesh.c: 4001: MiApp_SetChannel( i );
 15599  005C0A  0102               	movlb	2	; () banked
 15600  005C0C  51EE               	movf	MiApp_SearchConnection@i& (0+255),w,b
 15601  005C0E  EC9F  F045         	call	_MiApp_SetChannel
 15602                           
 15603                           ;miwi_mesh.c: 4003: {TxData = 0;};
 15604  005C12  0E00               	movlw	0
 15605  005C14  0100               	movlb	0	; () banked
 15606  005C16  6FD8               	movwf	_TxData& (0+255),b
 15607                           
 15608                           ; BSR set to: 0
 15609                           ;miwi_mesh.c: 4004: TxBuffer[TxData++] = 0x07;
 15610  005C18  0100               	movlb	0	; () banked
 15611  005C1A  51D8               	movf	_TxData& (0+255),w,b
 15612  005C1C  0D01               	mullw	1
 15613  005C1E  0E6C               	movlw	low _TxBuffer
 15614  005C20  24F3               	addwf	prodl,w,c
 15615  005C22  6ED9               	movwf	fsr2l,c
 15616  005C24  0E01               	movlw	high _TxBuffer
 15617  005C26  20F4               	addwfc	prodh,w,c
 15618  005C28  6EDA               	movwf	fsr2h,c
 15619  005C2A  0E07               	movlw	7
 15620  005C2C  6EDF               	movwf	indf2,c
 15621                           
 15622                           ; BSR set to: 0
 15623  005C2E  0100               	movlb	0	; () banked
 15624  005C30  2BD8               	incf	_TxData& (0+255),f,b
 15625                           
 15626                           ; BSR set to: 0
 15627                           ;miwi_mesh.c: 4005: TxBuffer[TxData++] = currentChannel;
 15628  005C32  0100               	movlb	0	; () banked
 15629  005C34  51D8               	movf	_TxData& (0+255),w,b
 15630  005C36  0D01               	mullw	1
 15631  005C38  0E6C               	movlw	low _TxBuffer
 15632  005C3A  24F3               	addwf	prodl,w,c
 15633  005C3C  6ED9               	movwf	fsr2l,c
 15634  005C3E  0E01               	movlw	high _TxBuffer
 15635  005C40  20F4               	addwfc	prodh,w,c
 15636  005C42  6EDA               	movwf	fsr2h,c
 15637  005C44  C1D2  FFDF         	movff	_currentChannel,indf2
 15638                           
 15639                           ; BSR set to: 0
 15640  005C48  0100               	movlb	0	; () banked
 15641  005C4A  2BD8               	incf	_TxData& (0+255),f,b
 15642                           
 15643                           ; BSR set to: 0
 15644                           ;miwi_mesh.c: 4010: SendMACPacket((0), 0x01);
 15645  005C4C  0E00               	movlw	0
 15646  005C4E  0100               	movlb	0	; () banked
 15647  005C50  6FBA               	movwf	SendMACPacket@Address& (0+255),b
 15648  005C52  0E00               	movlw	0
 15649  005C54  0100               	movlb	0	; () banked
 15650  005C56  6FBB               	movwf	(SendMACPacket@Address+1)& (0+255),b
 15651  005C58  0E01               	movlw	1
 15652  005C5A  0100               	movlb	0	; () banked
 15653  005C5C  6FBC               	movwf	SendMACPacket@PacketType& (0+255),b
 15654  005C5E  EC68  F041         	call	_SendMACPacket	;wreg free
 15655                           
 15656                           ;miwi_mesh.c: 4013: t1 = MiWi_TickGet();
 15657  005C62  EC57  F042         	call	_MiWi_TickGet	;wreg free
 15658  005C66  C081  F2E4         	movff	?_MiWi_TickGet,MiApp_SearchConnection@t1
 15659  005C6A  C082  F2E5         	movff	?_MiWi_TickGet+1,MiApp_SearchConnection@t1+1
 15660  005C6E  C083  F2E6         	movff	?_MiWi_TickGet+2,MiApp_SearchConnection@t1+2
 15661  005C72  C084  F2E7         	movff	?_MiWi_TickGet+3,MiApp_SearchConnection@t1+3
 15662  005C76                     l12810:
 15663                           
 15664                           ;miwi_mesh.c: 4015: {
 15665                           ;miwi_mesh.c: 4016: if( MiApp_MessageAvailable() )
 15666  005C76  EC07  F046         	call	_MiApp_MessageAvailable	;wreg free
 15667  005C7A  0900               	iorlw	0
 15668  005C7C  A4D8               	btfss	status,2,c
 15669                           
 15670                           ;miwi_mesh.c: 4017: {
 15671                           ;miwi_mesh.c: 4018: MiApp_DiscardMessage();
 15672  005C7E  EC15  F046         	call	_MiApp_DiscardMessage	;wreg free
 15673                           
 15674                           ;miwi_mesh.c: 4019: }
 15675                           ;miwi_mesh.c: 4021: t2 = MiWi_TickGet();
 15676  005C82  EC57  F042         	call	_MiWi_TickGet	;wreg free
 15677  005C86  C081  F2E8         	movff	?_MiWi_TickGet,MiApp_SearchConnection@t2
 15678  005C8A  C082  F2E9         	movff	?_MiWi_TickGet+1,MiApp_SearchConnection@t2+1
 15679  005C8E  C083  F2EA         	movff	?_MiWi_TickGet+2,MiApp_SearchConnection@t2+2
 15680  005C92  C084  F2EB         	movff	?_MiWi_TickGet+3,MiApp_SearchConnection@t2+3
 15681                           
 15682                           ;miwi_mesh.c: 4022: if( (t2.Val - t1.Val) > ((uint32_t)(ScanTime[ScanDuration])) )
 15683  005C96  C2E4  F1EC         	movff	MiApp_SearchConnection@t1,??_MiApp_SearchConnection
 15684  005C9A  C2E5  F1ED         	movff	MiApp_SearchConnection@t1+1,??_MiApp_SearchConnection+1
 15685  005C9E  C2E6  F1EE         	movff	MiApp_SearchConnection@t1+2,??_MiApp_SearchConnection+2
 15686  005CA2  C2E7  F1EF         	movff	MiApp_SearchConnection@t1+3,??_MiApp_SearchConnection+3
 15687  005CA6  0101               	movlb	1	; () banked
 15688  005CA8  1FEC               	comf	??_MiApp_SearchConnection& (0+255),f,b
 15689  005CAA  1FED               	comf	(??_MiApp_SearchConnection+1)& (0+255),f,b
 15690  005CAC  1FEE               	comf	(??_MiApp_SearchConnection+2)& (0+255),f,b
 15691  005CAE  1FEF               	comf	(??_MiApp_SearchConnection+3)& (0+255),f,b
 15692  005CB0  2BEC               	incf	??_MiApp_SearchConnection& (0+255),f,b
 15693  005CB2  0E00               	movlw	0
 15694  005CB4  23ED               	addwfc	(??_MiApp_SearchConnection+1)& (0+255),f,b
 15695  005CB6  23EE               	addwfc	(??_MiApp_SearchConnection+2)& (0+255),f,b
 15696  005CB8  23EF               	addwfc	(??_MiApp_SearchConnection+3)& (0+255),f,b
 15697  005CBA  0102               	movlb	2	; () banked
 15698  005CBC  51E8               	movf	MiApp_SearchConnection@t2& (0+255),w,b
 15699  005CBE  0101               	movlb	1	; () banked
 15700  005CC0  25EC               	addwf	??_MiApp_SearchConnection& (0+255),w,b
 15701  005CC2  0101               	movlb	1	; () banked
 15702  005CC4  6FF0               	movwf	(??_MiApp_SearchConnection+4)& (0+255),b
 15703  005CC6  0102               	movlb	2	; () banked
 15704  005CC8  51E9               	movf	(MiApp_SearchConnection@t2+1)& (0+255),w,b
 15705  005CCA  0101               	movlb	1	; () banked
 15706  005CCC  21ED               	addwfc	(??_MiApp_SearchConnection+1)& (0+255),w,b
 15707  005CCE  0101               	movlb	1	; () banked
 15708  005CD0  6FF1               	movwf	(??_MiApp_SearchConnection+5)& (0+255),b
 15709  005CD2  0102               	movlb	2	; () banked
 15710  005CD4  51EA               	movf	(MiApp_SearchConnection@t2+2)& (0+255),w,b
 15711  005CD6  0101               	movlb	1	; () banked
 15712  005CD8  21EE               	addwfc	(??_MiApp_SearchConnection+2)& (0+255),w,b
 15713  005CDA  0101               	movlb	1	; () banked
 15714  005CDC  6FF2               	movwf	(??_MiApp_SearchConnection+6)& (0+255),b
 15715  005CDE  0102               	movlb	2	; () banked
 15716  005CE0  51EB               	movf	(MiApp_SearchConnection@t2+3)& (0+255),w,b
 15717  005CE2  0101               	movlb	1	; () banked
 15718  005CE4  21EF               	addwfc	(??_MiApp_SearchConnection+3)& (0+255),w,b
 15719  005CE6  0101               	movlb	1	; () banked
 15720  005CE8  6FF3               	movwf	(??_MiApp_SearchConnection+7)& (0+255),b
 15721  005CEA  0102               	movlb	2	; () banked
 15722  005CEC  51EC               	movf	MiApp_SearchConnection@ScanDuration& (0+255),w,b
 15723  005CEE  0D04               	mullw	4
 15724  005CF0  0E35               	movlw	low _ScanTime
 15725  005CF2  24F3               	addwf	prodl,w,c
 15726  005CF4  6EF6               	movwf	tblptrl,c
 15727  005CF6  0E20               	movlw	high _ScanTime
 15728  005CF8  20F4               	addwfc	prodh,w,c
 15729  005CFA  6EF7               	movwf	tblptrh,c
 15730  005CFC                     	if	1	;There are 3 active tblptr bytes
 15731  005CFC  6AF8               	clrf	tblptru,c
 15732  005CFE  0E00               	movlw	low (__mediumconst shr (0+16))
 15733  005D00  22F8               	addwfc	tblptru,f,c
 15734  005D02                     	endif
 15735  005D02  0101               	movlb	1	; () banked
 15736  005D04  51F0               	movf	(??_MiApp_SearchConnection+4)& (0+255),w,b
 15737  005D06  0009               	tblrd		*+
 15738  005D08  5CF5               	subwf	tablat,w,c
 15739  005D0A  0101               	movlb	1	; () banked
 15740  005D0C  51F1               	movf	(??_MiApp_SearchConnection+5)& (0+255),w,b
 15741  005D0E  0009               	tblrd		*+
 15742  005D10  58F5               	subwfb	tablat,w,c
 15743  005D12  0101               	movlb	1	; () banked
 15744  005D14  51F2               	movf	(??_MiApp_SearchConnection+6)& (0+255),w,b
 15745  005D16  0009               	tblrd		*+
 15746  005D18  58F5               	subwfb	tablat,w,c
 15747  005D1A  0101               	movlb	1	; () banked
 15748  005D1C  51F3               	movf	(??_MiApp_SearchConnection+7)& (0+255),w,b
 15749  005D1E  0009               	tblrd		*+
 15750  005D20  58F5               	subwfb	tablat,w,c
 15751  005D22  B0D8               	btfsc	status,0,c
 15752  005D24  D7A8               	goto	l12810
 15753  005D26                     l12820:
 15754                           
 15755                           ; BSR set to: 1
 15756                           ;miwi_mesh.c: 4026: }
 15757                           ;miwi_mesh.c: 4027: }
 15758                           ;miwi_mesh.c: 4028: }
 15759                           ;miwi_mesh.c: 4029: i++;
 15760  005D26  0102               	movlb	2	; () banked
 15761  005D28  2BEE               	incf	MiApp_SearchConnection@i& (0+255),f,b
 15762  005D2A                     l12822:
 15763                           
 15764                           ; BSR set to: 2
 15765  005D2A  0E1F               	movlw	31
 15766  005D2C  0102               	movlb	2	; () banked
 15767  005D2E  65EE               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
 15768  005D30  D734               	goto	l12792
 15769                           
 15770                           ; BSR set to: 2
 15771                           ;miwi_mesh.c: 4030: }
 15772                           ;miwi_mesh.c: 4032: MiApp_SetChannel(backupChannel);
 15773                           
 15774                           ; BSR set to: 2
 15775  005D32  0102               	movlb	2	; () banked
 15776  005D34  51ED               	movf	MiApp_SearchConnection@backupChannel& (0+255),w,b
 15777  005D36  EC9F  F045         	call	_MiApp_SetChannel
 15778                           
 15779                           ;miwi_mesh.c: 4033: MiWiStateMachine.bits.searchingForNetwork = 0;
 15780  005D3A  0100               	movlb	0	; () banked
 15781  005D3C  91D4               	bcf	_MiWiStateMachine& (0+255),0,b
 15782                           
 15783                           ; BSR set to: 0
 15784                           ;miwi_mesh.c: 4035: return ActiveScanResultIndex;
 15785  005D3E  0100               	movlb	0	; () banked
 15786  005D40  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 15787  005D42  0012               	return	
 15788  005D44                     __end_of_MiApp_SearchConnection:
 15789                           	opt stack 0
 15790                           tblptru	equ	0xFF8
 15791                           tblptrh	equ	0xFF7
 15792                           tblptrl	equ	0xFF6
 15793                           tablat	equ	0xFF5
 15794                           prodh	equ	0xFF4
 15795                           prodl	equ	0xFF3
 15796                           intcon	equ	0xFF2
 15797                           intcon2	equ	0xFF1
 15798                           intcon3	equ	0xFF0
 15799                           indf0	equ	0xFEF
 15800                           postinc0	equ	0xFEE
 15801                           plusw0	equ	0xFEB
 15802                           fsr0h	equ	0xFEA
 15803                           fsr0l	equ	0xFE9
 15804                           wreg	equ	0xFE8
 15805                           indf1	equ	0xFE7
 15806                           postinc1	equ	0xFE6
 15807                           postdec1	equ	0xFE5
 15808                           fsr1h	equ	0xFE2
 15809                           fsr1l	equ	0xFE1
 15810                           indf2	equ	0xFDF
 15811                           postinc2	equ	0xFDE
 15812                           postdec2	equ	0xFDD
 15813                           plusw2	equ	0xFDB
 15814                           fsr2h	equ	0xFDA
 15815                           fsr2l	equ	0xFD9
 15816                           status	equ	0xFD8
 15817                           
 15818 ;; *************** function _SendMACPacket *****************
 15819 ;; Defined at:
 15820 ;;		line 2251 in file "src/miwi/miwi_mesh.c"
 15821 ;; Parameters:    Size  Location     Type
 15822 ;;  Address         2   90[BANK0 ] PTR unsigned char 
 15823 ;;		 -> ConnectionTable(90), NULL(0), 
 15824 ;;  PacketType      1   92[BANK0 ] unsigned char 
 15825 ;; Auto vars:     Size  Location     Type
 15826 ;;		None
 15827 ;; Return value:  Size  Location     Type
 15828 ;;                  1    wreg      unsigned char 
 15829 ;; Registers used:
 15830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15831 ;; Tracked objects:
 15832 ;;		On entry : 0/0
 15833 ;;		On exit  : 0/0
 15834 ;;		Unchanged: 0/0
 15835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15836 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15838 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15839 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15840 ;;Total ram usage:        4 bytes
 15841 ;; Hardware stack levels used:    1
 15842 ;; Hardware stack levels required when called:   12
 15843 ;; This function calls:
 15844 ;;		_MiMAC_SendPacket
 15845 ;; This function is called by:
 15846 ;;		_MiApp_SearchConnection
 15847 ;;		_MiApp_EstablishConnection
 15848 ;; This function uses a non-reentrant model
 15849 ;;
 15850                           
 15851                           	psect	text50
 15852  0082D0                     __ptext50:
 15853                           	opt stack 0
 15854  0082D0                     _SendMACPacket:
 15855                           	opt stack 17
 15856                           
 15857                           ;miwi_mesh.c: 2254: MTP.flags.Val = 0;
 15858                           
 15859                           ; BSR set to: 0
 15860                           ;incstack = 0
 15861  0082D0  0E00               	movlw	0
 15862  0082D2  0100               	movlb	0	; () banked
 15863  0082D4  6FD1               	movwf	_MTP& (0+255),b
 15864                           
 15865                           ; BSR set to: 0
 15866                           ;miwi_mesh.c: 2256: MTP.flags.bits.packetType = PacketType;
 15867  0082D6  0100               	movlb	0	; () banked
 15868  0082D8  51D1               	movf	_MTP& (0+255),w,b
 15869  0082DA  0100               	movlb	0	; () banked
 15870  0082DC  19BC               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 15871  0082DE  0BFC               	andlw	-4
 15872  0082E0  19BC               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 15873  0082E2  0100               	movlb	0	; () banked
 15874  0082E4  6FD1               	movwf	_MTP& (0+255),b
 15875                           
 15876                           ; BSR set to: 0
 15877                           ;miwi_mesh.c: 2257: if( Address == (0) )
 15878  0082E6  0100               	movlb	0	; () banked
 15879  0082E8  51BA               	movf	SendMACPacket@Address& (0+255),w,b
 15880  0082EA  0100               	movlb	0	; () banked
 15881  0082EC  11BB               	iorwf	(SendMACPacket@Address+1)& (0+255),w,b
 15882  0082EE  A4D8               	btfss	status,2,c
 15883  0082F0  D002               	goto	l12266
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;miwi_mesh.c: 2258: {
 15887                           ;miwi_mesh.c: 2259: MTP.flags.bits.broadcast = 1;
 15888  0082F2  0100               	movlb	0	; () banked
 15889  0082F4  85D1               	bsf	_MTP& (0+255),2,b
 15890  0082F6                     l12266:
 15891                           
 15892                           ; BSR set to: 0
 15893                           ;miwi_mesh.c: 2260: }
 15894                           ;miwi_mesh.c: 2261: MTP.flags.bits.ackReq = (MTP.flags.bits.broadcast) ? 0:1;
 15895  0082F6  0100               	movlb	0	; () banked
 15896  0082F8  B5D1               	btfsc	_MTP& (0+255),2,b
 15897  0082FA  D004               	goto	u14090
 15898  0082FC  0100               	movlb	0	; () banked
 15899  0082FE  6BBD               	clrf	??_SendMACPacket& (0+255),b
 15900  008300  2BBD               	incf	??_SendMACPacket& (0+255),f,b
 15901  008302  D002               	goto	u14108
 15902  008304                     u14090:
 15903  008304  0100               	movlb	0	; () banked
 15904  008306  6BBD               	clrf	??_SendMACPacket& (0+255),b
 15905  008308                     u14108:
 15906  008308  0100               	movlb	0	; () banked
 15907  00830A  3BBD               	swapf	??_SendMACPacket& (0+255),f,b
 15908  00830C  47BD               	rlncf	??_SendMACPacket& (0+255),f,b
 15909  00830E  0100               	movlb	0	; () banked
 15910  008310  51D1               	movf	_MTP& (0+255),w,b
 15911  008312  0100               	movlb	0	; () banked
 15912  008314  19BD               	xorwf	??_SendMACPacket& (0+255),w,b
 15913  008316  0BDF               	andlw	-33
 15914  008318  19BD               	xorwf	??_SendMACPacket& (0+255),w,b
 15915  00831A  0100               	movlb	0	; () banked
 15916  00831C  6FD1               	movwf	_MTP& (0+255),b
 15917                           
 15918                           ; BSR set to: 0
 15919                           ;miwi_mesh.c: 2262: MTP.flags.bits.sourcePrsnt = 1;
 15920  00831E  0100               	movlb	0	; () banked
 15921  008320  8FD1               	bsf	_MTP& (0+255),7,b
 15922                           
 15923                           ;miwi_mesh.c: 2264: MTP.DestAddress = Address;
 15924  008322  C0BA  F0D2         	movff	SendMACPacket@Address,_MTP+1
 15925  008326  C0BB  F0D3         	movff	SendMACPacket@Address+1,_MTP+2
 15926                           
 15927                           ; BSR set to: 0
 15928                           ;miwi_mesh.c: 2287: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 15929                           ;	Return value of _SendMACPacket is never used
 15930  00832A  C0D1  F0B0         	movff	_MTP,MiMAC_SendPacket@transParam
 15931  00832E  C0D2  F0B1         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15932  008332  C0D3  F0B2         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15933  008336  0E6C               	movlw	low _TxBuffer
 15934  008338  0100               	movlb	0	; () banked
 15935  00833A  6FB3               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15936  00833C  0E01               	movlw	high _TxBuffer
 15937  00833E  0100               	movlb	0	; () banked
 15938  008340  6FB4               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15939  008342  C0D8  F0B5         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15940  008346  EC6F  F02B         	call	_MiMAC_SendPacket	;wreg free
 15941  00834A  0012               	return	
 15942  00834C                     __end_of_SendMACPacket:
 15943                           	opt stack 0
 15944                           tblptru	equ	0xFF8
 15945                           tblptrh	equ	0xFF7
 15946                           tblptrl	equ	0xFF6
 15947                           tablat	equ	0xFF5
 15948                           prodh	equ	0xFF4
 15949                           prodl	equ	0xFF3
 15950                           intcon	equ	0xFF2
 15951                           intcon2	equ	0xFF1
 15952                           intcon3	equ	0xFF0
 15953                           indf0	equ	0xFEF
 15954                           postinc0	equ	0xFEE
 15955                           plusw0	equ	0xFEB
 15956                           fsr0h	equ	0xFEA
 15957                           fsr0l	equ	0xFE9
 15958                           wreg	equ	0xFE8
 15959                           indf1	equ	0xFE7
 15960                           postinc1	equ	0xFE6
 15961                           postdec1	equ	0xFE5
 15962                           fsr1h	equ	0xFE2
 15963                           fsr1l	equ	0xFE1
 15964                           indf2	equ	0xFDF
 15965                           postinc2	equ	0xFDE
 15966                           postdec2	equ	0xFDD
 15967                           plusw2	equ	0xFDB
 15968                           fsr2h	equ	0xFDA
 15969                           fsr2l	equ	0xFD9
 15970                           status	equ	0xFD8
 15971                           
 15972 ;; *************** function _MiApp_SetChannel *****************
 15973 ;; Defined at:
 15974 ;;		line 3867 in file "src/miwi/miwi_mesh.c"
 15975 ;; Parameters:    Size  Location     Type
 15976 ;;  channel         1    wreg     unsigned char 
 15977 ;; Auto vars:     Size  Location     Type
 15978 ;;  channel         1   43[BANK0 ] unsigned char 
 15979 ;; Return value:  Size  Location     Type
 15980 ;;                  1    wreg      unsigned char 
 15981 ;; Registers used:
 15982 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15983 ;; Tracked objects:
 15984 ;;		On entry : 0/0
 15985 ;;		On exit  : 0/0
 15986 ;;		Unchanged: 0/0
 15987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15991 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15992 ;;Total ram usage:        1 bytes
 15993 ;; Hardware stack levels used:    1
 15994 ;; Hardware stack levels required when called:   11
 15995 ;; This function calls:
 15996 ;;		_MiMAC_SetChannel
 15997 ;; This function is called by:
 15998 ;;		_MiApp_ProtocolInit
 15999 ;;		_MiApp_SearchConnection
 16000 ;;		_MiApp_EstablishConnection
 16001 ;; This function uses a non-reentrant model
 16002 ;;
 16003                           
 16004                           	psect	text51
 16005  008B3E                     __ptext51:
 16006                           	opt stack 0
 16007  008B3E                     _MiApp_SetChannel:
 16008                           	opt stack 18
 16009                           
 16010                           ;incstack = 0
 16011                           ;MiApp_SetChannel@channel stored from wreg
 16012  008B3E  0100               	movlb	0	; () banked
 16013  008B40  6F8B               	movwf	MiApp_SetChannel@channel& (0+255),b
 16014                           
 16015                           ;miwi_mesh.c: 3869: if( MiMAC_SetChannel(channel, 0) )
 16016  008B42  0E00               	movlw	0
 16017  008B44  0100               	movlb	0	; () banked
 16018  008B46  6F88               	movwf	MiMAC_SetChannel@offsetFreq& (0+255),b
 16019  008B48  0100               	movlb	0	; () banked
 16020  008B4A  518B               	movf	MiApp_SetChannel@channel& (0+255),w,b
 16021  008B4C  EC33  F03E         	call	_MiMAC_SetChannel
 16022  008B50  0900               	iorlw	0
 16023  008B52  B4D8               	btfsc	status,2,c
 16024  008B54  0012               	return	
 16025                           
 16026                           ;miwi_mesh.c: 3870: {
 16027                           ;miwi_mesh.c: 3871: currentChannel = channel;
 16028  008B56  C08B  F1D2         	movff	MiApp_SetChannel@channel,_currentChannel
 16029                           
 16030                           ;miwi_mesh.c: 3875: return 1;
 16031                           ;	Return value of _MiApp_SetChannel is never used
 16032  008B5A  0012               	return	
 16033  008B5C                     __end_of_MiApp_SetChannel:
 16034                           	opt stack 0
 16035                           tblptru	equ	0xFF8
 16036                           tblptrh	equ	0xFF7
 16037                           tblptrl	equ	0xFF6
 16038                           tablat	equ	0xFF5
 16039                           prodh	equ	0xFF4
 16040                           prodl	equ	0xFF3
 16041                           intcon	equ	0xFF2
 16042                           intcon2	equ	0xFF1
 16043                           intcon3	equ	0xFF0
 16044                           indf0	equ	0xFEF
 16045                           postinc0	equ	0xFEE
 16046                           plusw0	equ	0xFEB
 16047                           fsr0h	equ	0xFEA
 16048                           fsr0l	equ	0xFE9
 16049                           wreg	equ	0xFE8
 16050                           indf1	equ	0xFE7
 16051                           postinc1	equ	0xFE6
 16052                           postdec1	equ	0xFE5
 16053                           fsr1h	equ	0xFE2
 16054                           fsr1l	equ	0xFE1
 16055                           indf2	equ	0xFDF
 16056                           postinc2	equ	0xFDE
 16057                           postdec2	equ	0xFDD
 16058                           plusw2	equ	0xFDB
 16059                           fsr2h	equ	0xFDA
 16060                           fsr2l	equ	0xFD9
 16061                           status	equ	0xFD8
 16062                           
 16063 ;; *************** function _MiMAC_SetChannel *****************
 16064 ;; Defined at:
 16065 ;;		line 490 in file "src/miwi/drv_mrf_miwi_89xa.c"
 16066 ;; Parameters:    Size  Location     Type
 16067 ;;  channel         1    wreg     unsigned char 
 16068 ;;  offsetFreq      1   40[BANK0 ] unsigned char 
 16069 ;; Auto vars:     Size  Location     Type
 16070 ;;  channel         1   42[BANK0 ] unsigned char 
 16071 ;; Return value:  Size  Location     Type
 16072 ;;                  1    wreg      unsigned char 
 16073 ;; Registers used:
 16074 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16075 ;; Tracked objects:
 16076 ;;		On entry : 0/0
 16077 ;;		On exit  : 0/0
 16078 ;;		Unchanged: 0/0
 16079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16080 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16082 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16083 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16084 ;;Total ram usage:        3 bytes
 16085 ;; Hardware stack levels used:    1
 16086 ;; Hardware stack levels required when called:   10
 16087 ;; This function calls:
 16088 ;;		_RegisterSet
 16089 ;;		_SetRFMode
 16090 ;; This function is called by:
 16091 ;;		_MiApp_SetChannel
 16092 ;; This function uses a non-reentrant model
 16093 ;;
 16094                           
 16095                           	psect	text52
 16096  007C66                     __ptext52:
 16097                           	opt stack 0
 16098  007C66                     _MiMAC_SetChannel:
 16099                           	opt stack 18
 16100                           
 16101                           ;incstack = 0
 16102                           ;MiMAC_SetChannel@channel stored from wreg
 16103  007C66  0100               	movlb	0	; () banked
 16104  007C68  6F8A               	movwf	MiMAC_SetChannel@channel& (0+255),b
 16105                           
 16106                           ;drv_mrf_miwi_89xa.c: 492: if( channel >= 32 )
 16107  007C6A  0E1F               	movlw	31
 16108  007C6C  0100               	movlb	0	; () banked
 16109  007C6E  658A               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 16110  007C70  D002               	goto	l11902
 16111                           
 16112                           ; BSR set to: 0
 16113                           ;drv_mrf_miwi_89xa.c: 493: {
 16114                           ;drv_mrf_miwi_89xa.c: 494: return 0;
 16115  007C72  0E00               	movlw	0
 16116                           
 16117                           ; BSR set to: 0
 16118  007C74  0012               	return	
 16119  007C76                     l11902:
 16120                           
 16121                           ; BSR set to: 0
 16122                           ;drv_mrf_miwi_89xa.c: 495: }
 16123                           ;drv_mrf_miwi_89xa.c: 498: RegisterSet(0x0C00 | 100);
 16124  007C76  0E0C               	movlw	12
 16125  007C78  0100               	movlb	0	; () banked
 16126  007C7A  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 16127  007C7C  0E64               	movlw	100
 16128  007C7E  6F83               	movwf	RegisterSet@setting& (0+255),b
 16129  007C80  EC38  F044         	call	_RegisterSet	;wreg free
 16130                           
 16131                           ;drv_mrf_miwi_89xa.c: 499: RegisterSet(0x0E00 | PVALUE[channel]);
 16132  007C84  0100               	movlb	0	; () banked
 16133  007C86  518A               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 16134  007C88  0D01               	mullw	1
 16135  007C8A  0E71               	movlw	low _PVALUE
 16136  007C8C  24F3               	addwf	prodl,w,c
 16137  007C8E  6EF6               	movwf	tblptrl,c
 16138  007C90  0E20               	movlw	high _PVALUE
 16139  007C92  20F4               	addwfc	prodh,w,c
 16140  007C94  6EF7               	movwf	tblptrh,c
 16141  007C96                     	if	1	;There are 3 active tblptr bytes
 16142  007C96  6AF8               	clrf	tblptru,c
 16143  007C98  0E00               	movlw	low (__mediumconst shr (0+16))
 16144  007C9A  22F8               	addwfc	tblptru,f,c
 16145  007C9C                     	endif
 16146  007C9C  0008               	tblrd		*
 16147  007C9E  CFF5 F089          	movff	tablat,??_MiMAC_SetChannel
 16148  007CA2  0E00               	movlw	0
 16149  007CA4  0100               	movlb	0	; () banked
 16150  007CA6  1189               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 16151  007CA8  0100               	movlb	0	; () banked
 16152  007CAA  6F83               	movwf	RegisterSet@setting& (0+255),b
 16153  007CAC  0E0E               	movlw	14
 16154  007CAE  0100               	movlb	0	; () banked
 16155  007CB0  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 16156  007CB2  EC38  F044         	call	_RegisterSet	;wreg free
 16157                           
 16158                           ;drv_mrf_miwi_89xa.c: 500: RegisterSet(0x1000 | SVALUE[channel]);
 16159  007CB6  0100               	movlb	0	; () banked
 16160  007CB8  518A               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 16161  007CBA  0D01               	mullw	1
 16162  007CBC  0E91               	movlw	low _SVALUE
 16163  007CBE  24F3               	addwf	prodl,w,c
 16164  007CC0  6EF6               	movwf	tblptrl,c
 16165  007CC2  0E20               	movlw	high _SVALUE
 16166  007CC4  20F4               	addwfc	prodh,w,c
 16167  007CC6  6EF7               	movwf	tblptrh,c
 16168  007CC8                     	if	1	;There are 3 active tblptr bytes
 16169  007CC8  6AF8               	clrf	tblptru,c
 16170  007CCA  0E00               	movlw	low (__mediumconst shr (0+16))
 16171  007CCC  22F8               	addwfc	tblptru,f,c
 16172  007CCE                     	endif
 16173  007CCE  0008               	tblrd		*
 16174  007CD0  CFF5 F089          	movff	tablat,??_MiMAC_SetChannel
 16175  007CD4  0E00               	movlw	0
 16176  007CD6  0100               	movlb	0	; () banked
 16177  007CD8  1189               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 16178  007CDA  0100               	movlb	0	; () banked
 16179  007CDC  6F83               	movwf	RegisterSet@setting& (0+255),b
 16180  007CDE  0E10               	movlw	16
 16181  007CE0  0100               	movlb	0	; () banked
 16182  007CE2  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 16183  007CE4  EC38  F044         	call	_RegisterSet	;wreg free
 16184                           
 16185                           ;drv_mrf_miwi_89xa.c: 501: SetRFMode(0x20);
 16186  007CE8  0E20               	movlw	32
 16187  007CEA  EC18  F040         	call	_SetRFMode
 16188                           
 16189                           ;drv_mrf_miwi_89xa.c: 502: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 16190  007CEE  0E00               	movlw	0
 16191  007CF0  0100               	movlb	0	; () banked
 16192  007CF2  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 16193  007CF4  0E56               	movlw	86
 16194  007CF6  6F83               	movwf	RegisterSet@setting& (0+255),b
 16195  007CF8  EC38  F044         	call	_RegisterSet	;wreg free
 16196                           
 16197                           ;drv_mrf_miwi_89xa.c: 503: SetRFMode(0x40);
 16198  007CFC  0E40               	movlw	64
 16199  007CFE  EC18  F040         	call	_SetRFMode
 16200                           
 16201                           ;drv_mrf_miwi_89xa.c: 504: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 16202  007D02  0E1C               	movlw	28
 16203  007D04  0100               	movlb	0	; () banked
 16204  007D06  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 16205  007D08  0E0F               	movlw	15
 16206  007D0A  6F83               	movwf	RegisterSet@setting& (0+255),b
 16207  007D0C  EC38  F044         	call	_RegisterSet	;wreg free
 16208                           
 16209                           ;drv_mrf_miwi_89xa.c: 505: SetRFMode(0x20);
 16210  007D10  0E20               	movlw	32
 16211  007D12  EC18  F040         	call	_SetRFMode
 16212                           
 16213                           ;drv_mrf_miwi_89xa.c: 506: SetRFMode(0x60);
 16214  007D16  0E60               	movlw	96
 16215  007D18  EC18  F040         	call	_SetRFMode
 16216                           
 16217                           ;drv_mrf_miwi_89xa.c: 508: return 1;
 16218  007D1C  0E01               	movlw	1
 16219  007D1E  0012               	return	
 16220  007D20                     __end_of_MiMAC_SetChannel:
 16221                           	opt stack 0
 16222                           tblptru	equ	0xFF8
 16223                           tblptrh	equ	0xFF7
 16224                           tblptrl	equ	0xFF6
 16225                           tablat	equ	0xFF5
 16226                           prodh	equ	0xFF4
 16227                           prodl	equ	0xFF3
 16228                           intcon	equ	0xFF2
 16229                           intcon2	equ	0xFF1
 16230                           intcon3	equ	0xFF0
 16231                           indf0	equ	0xFEF
 16232                           postinc0	equ	0xFEE
 16233                           plusw0	equ	0xFEB
 16234                           fsr0h	equ	0xFEA
 16235                           fsr0l	equ	0xFE9
 16236                           wreg	equ	0xFE8
 16237                           indf1	equ	0xFE7
 16238                           postinc1	equ	0xFE6
 16239                           postdec1	equ	0xFE5
 16240                           fsr1h	equ	0xFE2
 16241                           fsr1l	equ	0xFE1
 16242                           indf2	equ	0xFDF
 16243                           postinc2	equ	0xFDE
 16244                           postdec2	equ	0xFDD
 16245                           plusw2	equ	0xFDB
 16246                           fsr2h	equ	0xFDA
 16247                           fsr2l	equ	0xFD9
 16248                           status	equ	0xFD8
 16249                           
 16250 ;; *************** function _MiApp_MessageAvailable *****************
 16251 ;; Defined at:
 16252 ;;		line 4236 in file "src/miwi/miwi_mesh.c"
 16253 ;; Parameters:    Size  Location     Type
 16254 ;;		None
 16255 ;; Auto vars:     Size  Location     Type
 16256 ;;		None
 16257 ;; Return value:  Size  Location     Type
 16258 ;;                  1    wreg      unsigned char 
 16259 ;; Registers used:
 16260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16261 ;; Tracked objects:
 16262 ;;		On entry : 0/0
 16263 ;;		On exit  : 0/0
 16264 ;;		Unchanged: 0/0
 16265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16270 ;;Total ram usage:        0 bytes
 16271 ;; Hardware stack levels used:    1
 16272 ;; Hardware stack levels required when called:   13
 16273 ;; This function calls:
 16274 ;;		_MiWiTasks
 16275 ;; This function is called by:
 16276 ;;		_MiApp_SearchConnection
 16277 ;;		_MiApp_EstablishConnection
 16278 ;;		_MiApp_UnicastAddress
 16279 ;;		_main
 16280 ;;		_process_update_answer
 16281 ;;		_do_NETWORK_REGISTER
 16282 ;;		_do_POWER_TEST
 16283 ;;		_do_UPDATE
 16284 ;;		_MiApp_UnicastConnection
 16285 ;;		_do_PING
 16286 ;; This function uses a non-reentrant model
 16287 ;;
 16288                           
 16289                           	psect	text53
 16290  008C0E                     __ptext53:
 16291                           	opt stack 0
 16292  008C0E                     _MiApp_MessageAvailable:
 16293                           	opt stack 14
 16294                           
 16295                           ;miwi_mesh.c: 4238: MiWiTasks();
 16296                           
 16297                           ;incstack = 0
 16298  008C0E  EC82  F010         	call	_MiWiTasks	;wreg free
 16299                           
 16300                           ;miwi_mesh.c: 4239: return MiWiStateMachine.bits.RxHasUserData;
 16301  008C12  0100               	movlb	0	; () banked
 16302  008C14  A5D4               	btfss	_MiWiStateMachine& (0+255),2,b
 16303  008C16  D002               	goto	u13640
 16304  008C18  0E01               	movlw	1
 16305  008C1A  0012               	return	
 16306  008C1C                     u13640:
 16307  008C1C  0E00               	movlw	0
 16308  008C1E  0012               	return	
 16309  008C20                     __end_of_MiApp_MessageAvailable:
 16310                           	opt stack 0
 16311                           tblptru	equ	0xFF8
 16312                           tblptrh	equ	0xFF7
 16313                           tblptrl	equ	0xFF6
 16314                           tablat	equ	0xFF5
 16315                           prodh	equ	0xFF4
 16316                           prodl	equ	0xFF3
 16317                           intcon	equ	0xFF2
 16318                           intcon2	equ	0xFF1
 16319                           intcon3	equ	0xFF0
 16320                           indf0	equ	0xFEF
 16321                           postinc0	equ	0xFEE
 16322                           plusw0	equ	0xFEB
 16323                           fsr0h	equ	0xFEA
 16324                           fsr0l	equ	0xFE9
 16325                           wreg	equ	0xFE8
 16326                           indf1	equ	0xFE7
 16327                           postinc1	equ	0xFE6
 16328                           postdec1	equ	0xFE5
 16329                           fsr1h	equ	0xFE2
 16330                           fsr1l	equ	0xFE1
 16331                           indf2	equ	0xFDF
 16332                           postinc2	equ	0xFDE
 16333                           postdec2	equ	0xFDD
 16334                           plusw2	equ	0xFDB
 16335                           fsr2h	equ	0xFDA
 16336                           fsr2l	equ	0xFD9
 16337                           status	equ	0xFD8
 16338                           
 16339 ;; *************** function _MiWiTasks *****************
 16340 ;; Defined at:
 16341 ;;		line 282 in file "src/miwi/miwi_mesh.c"
 16342 ;; Parameters:    Size  Location     Type
 16343 ;;		None
 16344 ;; Auto vars:     Size  Location     Type
 16345 ;;  j               1   15[BANK1 ] unsigned char 
 16346 ;;  CapacityByte    1   14[BANK1 ] struct .
 16347 ;;  cIndex          1    4[BANK1 ] unsigned char 
 16348 ;;  rxIndex         1   13[BANK1 ] unsigned char 
 16349 ;;  sourceShortA    2   18[BANK1 ] struct .
 16350 ;;  sourcePANID     2   16[BANK1 ] struct .
 16351 ;;  destShortAdd    2   11[BANK1 ] struct .
 16352 ;;  destPANID       2    9[BANK1 ] struct .
 16353 ;;  t1              4    5[BANK1 ] struct _MIWI_TICK
 16354 ;;  t2              4    0[BANK1 ] struct _MIWI_TICK
 16355 ;;  i               1   20[BANK1 ] unsigned char 
 16356 ;; Return value:  Size  Location     Type
 16357 ;;		None               void
 16358 ;; Registers used:
 16359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16360 ;; Tracked objects:
 16361 ;;		On entry : 0/0
 16362 ;;		On exit  : 0/0
 16363 ;;		Unchanged: 0/0
 16364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16366 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16367 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16368 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16369 ;;Total ram usage:       29 bytes
 16370 ;; Hardware stack levels used:    1
 16371 ;; Hardware stack levels required when called:   12
 16372 ;; This function calls:
 16373 ;;		_AddNodeToNetworkTable
 16374 ;;		_MiMAC_DiscardPacket
 16375 ;;		_MiMAC_ReceivedPacket
 16376 ;;		_MiMAC_SendPacket
 16377 ;;		_MiMAC_SetAltAddress
 16378 ;;		_MiWi_TickGet
 16379 ;;		_SearchForLongAddress
 16380 ;;		_SearchForShortAddress
 16381 ;; This function is called by:
 16382 ;;		_MiApp_MessageAvailable
 16383 ;;		_main
 16384 ;; This function uses a non-reentrant model
 16385 ;;
 16386                           
 16387                           	psect	text54
 16388  002104                     __ptext54:
 16389                           	opt stack 0
 16390  002104                     _MiWiTasks:
 16391                           	opt stack 14
 16392                           
 16393                           ;miwi_mesh.c: 284: uint8_t i;
 16394                           ;miwi_mesh.c: 285: MIWI_TICK t1, t2;
 16395                           ;miwi_mesh.c: 287: if( MiMAC_ReceivedPacket() )
 16396                           
 16397                           ; BSR set to: 0
 16398                           ;incstack = 0
 16399  002104  ECF1  F022         	call	_MiMAC_ReceivedPacket	;wreg free
 16400  002108  0900               	iorlw	0
 16401  00210A  B4D8               	btfsc	status,2,c
 16402  00210C  EFC1  F015         	goto	l11830
 16403                           
 16404                           ;miwi_mesh.c: 288: {
 16405                           ;miwi_mesh.c: 289: if( MiWiStateMachine.bits.RxHasUserData )
 16406  002110  0100               	movlb	0	; () banked
 16407  002112  B5D4               	btfsc	_MiWiStateMachine& (0+255),2,b
 16408  002114  0012               	return	
 16409                           
 16410                           ; BSR set to: 0
 16411                           ;miwi_mesh.c: 292: }
 16412                           ;miwi_mesh.c: 294: rxMessage.flags.Val = 0;
 16413                           
 16414                           ; BSR set to: 0
 16415                           
 16416                           ; BSR set to: 0
 16417                           ;miwi_mesh.c: 290: {
 16418                           ;miwi_mesh.c: 291: return;
 16419  002116  0E00               	movlw	0
 16420  002118  0101               	movlb	1	; () banked
 16421  00211A  6F2C               	movwf	_rxMessage& (0+255),b
 16422                           
 16423                           ; BSR set to: 1
 16424                           ;miwi_mesh.c: 295: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
 16425  00211C  A434               	btfss	_MACRxPacket,2,c
 16426  00211E  D004               	goto	u12970
 16427  002120  0100               	movlb	0	; () banked
 16428  002122  6BC8               	clrf	??_MiWiTasks& (0+255),b
 16429  002124  2BC8               	incf	??_MiWiTasks& (0+255),f,b
 16430  002126  D002               	goto	u12978
 16431  002128                     u12970:
 16432  002128  0100               	movlb	0	; () banked
 16433  00212A  6BC8               	clrf	??_MiWiTasks& (0+255),b
 16434  00212C                     u12978:
 16435  00212C  0101               	movlb	1	; () banked
 16436  00212E  512C               	movf	_rxMessage& (0+255),w,b
 16437  002130  0100               	movlb	0	; () banked
 16438  002132  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 16439  002134  0BFC               	andlw	-4
 16440  002136  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 16441  002138  0101               	movlb	1	; () banked
 16442  00213A  6F2C               	movwf	_rxMessage& (0+255),b
 16443                           
 16444                           ; BSR set to: 1
 16445                           ;miwi_mesh.c: 296: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 16446  00213C  A634               	btfss	_MACRxPacket,3,c
 16447  00213E  D003               	bra	u12985
 16448  002140  0101               	movlb	1	; () banked
 16449  002142  872C               	bsf	_rxMessage& (0+255),3,b
 16450  002144  D002               	bra	u12987
 16451  002146                     u12985:
 16452  002146  0101               	movlb	1	; () banked
 16453  002148  972C               	bcf	_rxMessage& (0+255),3,b
 16454  00214A                     u12987:
 16455                           
 16456                           ; BSR set to: 1
 16457                           ;miwi_mesh.c: 297: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 
      +                          0x01) ? 1:0;
 16458  00214A  5034               	movf	_MACRxPacket,w,c
 16459  00214C  0B03               	andlw	3
 16460  00214E  06E8               	decf	wreg,f,c
 16461  002150  A4D8               	btfss	status,2,c
 16462  002152  D004               	goto	u12990
 16463  002154  0100               	movlb	0	; () banked
 16464  002156  6BC8               	clrf	??_MiWiTasks& (0+255),b
 16465  002158  2BC8               	incf	??_MiWiTasks& (0+255),f,b
 16466  00215A  D002               	goto	u13008
 16467  00215C                     u12990:
 16468  00215C  0100               	movlb	0	; () banked
 16469  00215E  6BC8               	clrf	??_MiWiTasks& (0+255),b
 16470  002160                     u13008:
 16471  002160  0100               	movlb	0	; () banked
 16472  002162  3BC8               	swapf	??_MiWiTasks& (0+255),f,b
 16473  002164  47C8               	rlncf	??_MiWiTasks& (0+255),f,b
 16474  002166  0101               	movlb	1	; () banked
 16475  002168  512C               	movf	_rxMessage& (0+255),w,b
 16476  00216A  0100               	movlb	0	; () banked
 16477  00216C  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 16478  00216E  0BDF               	andlw	-33
 16479  002170  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 16480  002172  0101               	movlb	1	; () banked
 16481  002174  6F2C               	movwf	_rxMessage& (0+255),b
 16482                           
 16483                           ; BSR set to: 1
 16484                           ;miwi_mesh.c: 298: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 16485  002176  AE34               	btfss	_MACRxPacket,7,c
 16486  002178  D003               	bra	u13015
 16487  00217A  0101               	movlb	1	; () banked
 16488  00217C  8D2C               	bsf	_rxMessage& (0+255),6,b
 16489  00217E  D002               	bra	u13017
 16490  002180                     u13015:
 16491  002180  0101               	movlb	1	; () banked
 16492  002182  9D2C               	bcf	_rxMessage& (0+255),6,b
 16493  002184                     u13017:
 16494                           
 16495                           ; BSR set to: 1
 16496                           ;miwi_mesh.c: 299: if( MACRxPacket.flags.bits.sourcePrsnt )
 16497  002184  AE34               	btfss	_MACRxPacket,7,c
 16498  002186  D006               	goto	l11502
 16499                           
 16500                           ; BSR set to: 1
 16501                           ;miwi_mesh.c: 300: {
 16502                           ;miwi_mesh.c: 304: rxMessage.flags.bits.altSrcAddr = 1;
 16503  002188  0101               	movlb	1	; () banked
 16504  00218A  8F2C               	bsf	_rxMessage& (0+255),7,b
 16505                           
 16506                           ; BSR set to: 1
 16507                           ;miwi_mesh.c: 306: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 16508  00218C  C035  F12F         	movff	_MACRxPacket+1,_rxMessage+3
 16509  002190  C036  F130         	movff	_MACRxPacket+2,_rxMessage+4
 16510  002194                     l11502:
 16511                           
 16512                           ; BSR set to: 1
 16513                           ;miwi_mesh.c: 307: }
 16514                           ;miwi_mesh.c: 311: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 16515  002194  C03B  F135         	movff	_MACRxPacket+7,_rxMessage+9
 16516                           
 16517                           ; BSR set to: 1
 16518                           ;miwi_mesh.c: 312: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 16519  002198  C03A  F134         	movff	_MACRxPacket+6,_rxMessage+8
 16520                           
 16521                           ; BSR set to: 1
 16522                           ;miwi_mesh.c: 314: MiWiStateMachine.bits.RxHasUserData = 0;
 16523  00219C  0100               	movlb	0	; () banked
 16524  00219E  95D4               	bcf	_MiWiStateMachine& (0+255),2,b
 16525                           
 16526                           ;miwi_mesh.c: 317: switch(MACRxPacket.flags.bits.packetType)
 16527  0021A0  EFB1  F015         	goto	l11826
 16528  0021A4                     l11508:
 16529                           
 16530                           ;miwi_mesh.c: 347: if( MACRxPacket.PayloadLen < 10 )
 16531  0021A4  0E0A               	movlw	10
 16532  0021A6  6039               	cpfslt	_MACRxPacket+5,c
 16533  0021A8  D002               	goto	l11512
 16534  0021AA  EFBD  F015         	goto	l601
 16535  0021AE                     l11512:
 16536                           
 16537                           ;miwi_mesh.c: 350: }
 16538                           ;miwi_mesh.c: 353: destPANID.v[0] = MACRxPacket.Payload[2];
 16539  0021AE  EE20 F002          	lfsr	2,2
 16540  0021B2  5037               	movf	_MACRxPacket+3,w,c
 16541  0021B4  26D9               	addwf	fsr2l,f,c
 16542  0021B6  5038               	movf	_MACRxPacket+4,w,c
 16543  0021B8  22DA               	addwfc	fsr2h,f,c
 16544  0021BA  50DF               	movf	indf2,w,c
 16545  0021BC  0101               	movlb	1	; () banked
 16546  0021BE  6FDC               	movwf	MiWiTasks@destPANID& (0+255),b
 16547                           
 16548                           ;miwi_mesh.c: 354: destPANID.v[1] = MACRxPacket.Payload[3];
 16549  0021C0  EE20 F003          	lfsr	2,3
 16550  0021C4  5037               	movf	_MACRxPacket+3,w,c
 16551  0021C6  26D9               	addwf	fsr2l,f,c
 16552  0021C8  5038               	movf	_MACRxPacket+4,w,c
 16553  0021CA  22DA               	addwfc	fsr2h,f,c
 16554  0021CC  50DF               	movf	indf2,w,c
 16555  0021CE  0101               	movlb	1	; () banked
 16556  0021D0  6FDD               	movwf	(MiWiTasks@destPANID+1)& (0+255),b
 16557                           
 16558                           ;miwi_mesh.c: 355: destShortAddress.v[0] = MACRxPacket.Payload[4];
 16559  0021D2  EE20 F004          	lfsr	2,4
 16560  0021D6  5037               	movf	_MACRxPacket+3,w,c
 16561  0021D8  26D9               	addwf	fsr2l,f,c
 16562  0021DA  5038               	movf	_MACRxPacket+4,w,c
 16563  0021DC  22DA               	addwfc	fsr2h,f,c
 16564  0021DE  50DF               	movf	indf2,w,c
 16565  0021E0  0101               	movlb	1	; () banked
 16566  0021E2  6FDE               	movwf	MiWiTasks@destShortAddress& (0+255),b
 16567                           
 16568                           ;miwi_mesh.c: 356: destShortAddress.v[1] = MACRxPacket.Payload[5];
 16569  0021E4  EE20 F005          	lfsr	2,5
 16570  0021E8  5037               	movf	_MACRxPacket+3,w,c
 16571  0021EA  26D9               	addwf	fsr2l,f,c
 16572  0021EC  5038               	movf	_MACRxPacket+4,w,c
 16573  0021EE  22DA               	addwfc	fsr2h,f,c
 16574  0021F0  50DF               	movf	indf2,w,c
 16575  0021F2  0101               	movlb	1	; () banked
 16576  0021F4  6FDF               	movwf	(MiWiTasks@destShortAddress+1)& (0+255),b
 16577                           
 16578                           ;miwi_mesh.c: 357: sourcePANID.v[0] = MACRxPacket.Payload[6];
 16579  0021F6  EE20 F006          	lfsr	2,6
 16580  0021FA  5037               	movf	_MACRxPacket+3,w,c
 16581  0021FC  26D9               	addwf	fsr2l,f,c
 16582  0021FE  5038               	movf	_MACRxPacket+4,w,c
 16583  002200  22DA               	addwfc	fsr2h,f,c
 16584  002202  50DF               	movf	indf2,w,c
 16585  002204  0101               	movlb	1	; () banked
 16586  002206  6FE3               	movwf	MiWiTasks@sourcePANID& (0+255),b
 16587                           
 16588                           ;miwi_mesh.c: 358: sourcePANID.v[1] = MACRxPacket.Payload[7];
 16589  002208  EE20 F007          	lfsr	2,7
 16590  00220C  5037               	movf	_MACRxPacket+3,w,c
 16591  00220E  26D9               	addwf	fsr2l,f,c
 16592  002210  5038               	movf	_MACRxPacket+4,w,c
 16593  002212  22DA               	addwfc	fsr2h,f,c
 16594  002214  50DF               	movf	indf2,w,c
 16595  002216  0101               	movlb	1	; () banked
 16596  002218  6FE4               	movwf	(MiWiTasks@sourcePANID+1)& (0+255),b
 16597                           
 16598                           ;miwi_mesh.c: 359: sourceShortAddress.v[0] = MACRxPacket.Payload[8];
 16599  00221A  EE20 F008          	lfsr	2,8
 16600  00221E  5037               	movf	_MACRxPacket+3,w,c
 16601  002220  26D9               	addwf	fsr2l,f,c
 16602  002222  5038               	movf	_MACRxPacket+4,w,c
 16603  002224  22DA               	addwfc	fsr2h,f,c
 16604  002226  50DF               	movf	indf2,w,c
 16605  002228  0101               	movlb	1	; () banked
 16606  00222A  6FE5               	movwf	MiWiTasks@sourceShortAddress& (0+255),b
 16607                           
 16608                           ;miwi_mesh.c: 360: sourceShortAddress.v[1] = MACRxPacket.Payload[9];
 16609  00222C  EE20 F009          	lfsr	2,9
 16610  002230  5037               	movf	_MACRxPacket+3,w,c
 16611  002232  26D9               	addwf	fsr2l,f,c
 16612  002234  5038               	movf	_MACRxPacket+4,w,c
 16613  002236  22DA               	addwfc	fsr2h,f,c
 16614  002238  50DF               	movf	indf2,w,c
 16615  00223A  0101               	movlb	1	; () banked
 16616  00223C  6FE6               	movwf	(MiWiTasks@sourceShortAddress+1)& (0+255),b
 16617                           
 16618                           ; BSR set to: 1
 16619                           ;miwi_mesh.c: 362: rxMessage.flags.Val = 0;
 16620  00223E  0E00               	movlw	0
 16621  002240  0101               	movlb	1	; () banked
 16622  002242  6F2C               	movwf	_rxMessage& (0+255),b
 16623                           
 16624                           ; BSR set to: 1
 16625                           ;miwi_mesh.c: 363: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 16626  002244  A634               	btfss	_MACRxPacket,3,c
 16627  002246  D003               	bra	u13045
 16628  002248  0101               	movlb	1	; () banked
 16629  00224A  872C               	bsf	_rxMessage& (0+255),3,b
 16630  00224C  D002               	bra	u13047
 16631  00224E                     u13045:
 16632  00224E  0101               	movlb	1	; () banked
 16633  002250  972C               	bcf	_rxMessage& (0+255),3,b
 16634  002252                     u13047:
 16635                           
 16636                           ; BSR set to: 1
 16637                           ;miwi_mesh.c: 365: if(rxMessage.flags.bits.broadcast || destShortAddress.Val == 0xFFFF)
 16638  002252  0101               	movlb	1	; () banked
 16639  002254  512C               	movf	_rxMessage& (0+255),w,b
 16640  002256  0B03               	andlw	3
 16641  002258  0900               	iorlw	0
 16642  00225A  A4D8               	btfss	status,2,c
 16643  00225C  D007               	goto	l11522
 16644                           
 16645                           ; BSR set to: 1
 16646  00225E  0101               	movlb	1	; () banked
 16647  002260  29DE               	incf	MiWiTasks@destShortAddress& (0+255),w,b
 16648  002262  E103               	bnz	u13061
 16649  002264  0101               	movlb	1	; () banked
 16650  002266  29DF               	incf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 16651  002268  A4D8               	btfss	status,2,c
 16652  00226A                     u13061:
 16653  00226A  D0D2               	goto	l11576
 16654  00226C                     l11522:
 16655                           
 16656                           ; BSR set to: 1
 16657                           ;miwi_mesh.c: 366: {
 16658                           ;miwi_mesh.c: 368: if( sourceShortAddress.Val == myShortAddress.Val &&
 16659                           ;miwi_mesh.c: 369: sourcePANID.Val == myPANID.Val )
 16660  00226C  0100               	movlb	0	; () banked
 16661  00226E  51DD               	movf	_myShortAddress& (0+255),w,b
 16662  002270  0101               	movlb	1	; () banked
 16663  002272  19E5               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 16664  002274  E112               	bnz	l11528
 16665  002276  0100               	movlb	0	; () banked
 16666  002278  51DE               	movf	(_myShortAddress+1)& (0+255),w,b
 16667  00227A  0101               	movlb	1	; () banked
 16668  00227C  19E6               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 16669  00227E  A4D8               	btfss	status,2,c
 16670  002280  D00C               	goto	l11528
 16671                           
 16672                           ; BSR set to: 1
 16673  002282  0100               	movlb	0	; () banked
 16674  002284  51DB               	movf	_myPANID& (0+255),w,b
 16675  002286  0101               	movlb	1	; () banked
 16676  002288  19E3               	xorwf	MiWiTasks@sourcePANID& (0+255),w,b
 16677  00228A  E107               	bnz	l11528
 16678  00228C  0100               	movlb	0	; () banked
 16679  00228E  51DC               	movf	(_myPANID+1)& (0+255),w,b
 16680  002290  0101               	movlb	1	; () banked
 16681  002292  19E4               	xorwf	(MiWiTasks@sourcePANID+1)& (0+255),w,b
 16682  002294  B4D8               	btfsc	status,2,c
 16683  002296  EFBD  F015         	goto	l601
 16684  00229A                     l11528:
 16685                           
 16686                           ; BSR set to: 1
 16687                           ;miwi_mesh.c: 372: }
 16688                           ;miwi_mesh.c: 420: for(i = 0; i < 4; i++)
 16689  00229A  0E00               	movlw	0
 16690  00229C  0101               	movlb	1	; () banked
 16691  00229E  6FE7               	movwf	MiWiTasks@i& (0+255),b
 16692  0022A0                     l11530:
 16693                           
 16694                           ; BSR set to: 1
 16695  0022A0  0E03               	movlw	3
 16696  0022A2  0101               	movlb	1	; () banked
 16697  0022A4  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 16698  0022A6  D001               	goto	l11534
 16699  0022A8  D03C               	goto	l11546
 16700  0022AA                     l11534:
 16701                           
 16702                           ; BSR set to: 1
 16703                           ;miwi_mesh.c: 421: {
 16704                           ;miwi_mesh.c: 422: if( BroadcastRecords[i].RxCounter &&
 16705                           ;miwi_mesh.c: 423: BroadcastRecords[i].AltSourceAddr.Val == sourceShortAddress.Val &&
 16706                           ;miwi_mesh.c: 424: BroadcastRecords[i].MiWiSeq == MACRxPacket.Payload[10] )
 16707  0022AA  0101               	movlb	1	; () banked
 16708  0022AC  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16709  0022AE  0D08               	mullw	8
 16710  0022B0  0E03               	movlw	3
 16711  0022B2  26F3               	addwf	prodl,f,c
 16712  0022B4  0E00               	movlw	0
 16713  0022B6  22F4               	addwfc	prodh,f,c
 16714  0022B8  0E00               	movlw	low _BroadcastRecords
 16715  0022BA  24F3               	addwf	prodl,w,c
 16716  0022BC  6ED9               	movwf	fsr2l,c
 16717  0022BE  0E01               	movlw	high _BroadcastRecords
 16718  0022C0  20F4               	addwfc	prodh,w,c
 16719  0022C2  6EDA               	movwf	fsr2h,c
 16720  0022C4  50DF               	movf	indf2,w,c
 16721  0022C6  B4D8               	btfsc	status,2,c
 16722  0022C8  D029               	goto	l11542
 16723                           
 16724                           ; BSR set to: 1
 16725  0022CA  0101               	movlb	1	; () banked
 16726  0022CC  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16727  0022CE  0D08               	mullw	8
 16728  0022D0  0E00               	movlw	low _BroadcastRecords
 16729  0022D2  24F3               	addwf	prodl,w,c
 16730  0022D4  6ED9               	movwf	fsr2l,c
 16731  0022D6  0E01               	movlw	high _BroadcastRecords
 16732  0022D8  20F4               	addwfc	prodh,w,c
 16733  0022DA  6EDA               	movwf	fsr2h,c
 16734  0022DC  0101               	movlb	1	; () banked
 16735  0022DE  51E5               	movf	MiWiTasks@sourceShortAddress& (0+255),w,b
 16736  0022E0  18DE               	xorwf	postinc2,w,c
 16737  0022E2  E11C               	bnz	l11542
 16738  0022E4  0101               	movlb	1	; () banked
 16739  0022E6  51E6               	movf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 16740  0022E8  18DE               	xorwf	postinc2,w,c
 16741  0022EA  A4D8               	btfss	status,2,c
 16742  0022EC  D017               	goto	l11542
 16743                           
 16744                           ; BSR set to: 1
 16745  0022EE  EE20 F00A          	lfsr	2,10
 16746  0022F2  5037               	movf	_MACRxPacket+3,w,c
 16747  0022F4  26D9               	addwf	fsr2l,f,c
 16748  0022F6  5038               	movf	_MACRxPacket+4,w,c
 16749  0022F8  22DA               	addwfc	fsr2h,f,c
 16750  0022FA  0101               	movlb	1	; () banked
 16751  0022FC  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16752  0022FE  0D08               	mullw	8
 16753  002300  0E02               	movlw	2
 16754  002302  26F3               	addwf	prodl,f,c
 16755  002304  0E00               	movlw	0
 16756  002306  22F4               	addwfc	prodh,f,c
 16757  002308  0E00               	movlw	low _BroadcastRecords
 16758  00230A  24F3               	addwf	prodl,w,c
 16759  00230C  6EE1               	movwf	fsr1l,c
 16760  00230E  0E01               	movlw	high _BroadcastRecords
 16761  002310  20F4               	addwfc	prodh,w,c
 16762  002312  6EE2               	movwf	fsr1h,c
 16763  002314  50DE               	movf	postinc2,w,c
 16764  002316  18E6               	xorwf	postinc1,w,c
 16765  002318  B4D8               	btfsc	status,2,c
 16766  00231A  D003               	goto	l11546
 16767  00231C                     l11542:
 16768                           
 16769                           ; BSR set to: 1
 16770  00231C  0101               	movlb	1	; () banked
 16771  00231E  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 16772  002320  D7BF               	goto	l11530
 16773  002322                     l11546:
 16774                           
 16775                           ; BSR set to: 1
 16776                           ;miwi_mesh.c: 427: }
 16777                           ;miwi_mesh.c: 428: }
 16778                           ;miwi_mesh.c: 431: if( i < 4 )
 16779  002322  0E04               	movlw	4
 16780  002324  0101               	movlb	1	; () banked
 16781  002326  61E7               	cpfslt	MiWiTasks@i& (0+255),b
 16782  002328  D002               	goto	l11550
 16783  00232A  EFBD  F015         	goto	l601
 16784  00232E                     l11550:
 16785                           
 16786                           ; BSR set to: 1
 16787                           ;miwi_mesh.c: 437: }
 16788                           ;miwi_mesh.c: 441: for(i = 0; i < 4; i++)
 16789  00232E  0E00               	movlw	0
 16790  002330  0101               	movlb	1	; () banked
 16791  002332  6FE7               	movwf	MiWiTasks@i& (0+255),b
 16792  002334                     l11552:
 16793                           
 16794                           ; BSR set to: 1
 16795  002334  0E03               	movlw	3
 16796  002336  0101               	movlb	1	; () banked
 16797  002338  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 16798  00233A  D001               	goto	l11556
 16799  00233C  D013               	goto	l11564
 16800  00233E                     l11556:
 16801                           
 16802                           ; BSR set to: 1
 16803                           ;miwi_mesh.c: 442: {
 16804                           ;miwi_mesh.c: 443: if( BroadcastRecords[i].RxCounter == 0 )
 16805  00233E  0101               	movlb	1	; () banked
 16806  002340  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16807  002342  0D08               	mullw	8
 16808  002344  0E03               	movlw	3
 16809  002346  26F3               	addwf	prodl,f,c
 16810  002348  0E00               	movlw	0
 16811  00234A  22F4               	addwfc	prodh,f,c
 16812  00234C  0E00               	movlw	low _BroadcastRecords
 16813  00234E  24F3               	addwf	prodl,w,c
 16814  002350  6ED9               	movwf	fsr2l,c
 16815  002352  0E01               	movlw	high _BroadcastRecords
 16816  002354  20F4               	addwfc	prodh,w,c
 16817  002356  6EDA               	movwf	fsr2h,c
 16818  002358  50DF               	movf	indf2,w,c
 16819  00235A  B4D8               	btfsc	status,2,c
 16820  00235C  D003               	goto	l11564
 16821                           
 16822                           ; BSR set to: 1
 16823                           
 16824                           ; BSR set to: 1
 16825                           
 16826                           ; BSR set to: 1
 16827                           ;miwi_mesh.c: 444: {
 16828                           ;miwi_mesh.c: 445: break;
 16829  00235E  0101               	movlb	1	; () banked
 16830  002360  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 16831  002362  D7E8               	goto	l11552
 16832  002364                     l11564:
 16833                           
 16834                           ; BSR set to: 1
 16835                           ;miwi_mesh.c: 446: }
 16836                           ;miwi_mesh.c: 447: }
 16837                           ;miwi_mesh.c: 449: if( i < 4 )
 16838  002364  0E04               	movlw	4
 16839  002366  0101               	movlb	1	; () banked
 16840  002368  61E7               	cpfslt	MiWiTasks@i& (0+255),b
 16841  00236A  D04C               	goto	l11574
 16842                           
 16843                           ; BSR set to: 1
 16844                           ;miwi_mesh.c: 450: {
 16845                           ;miwi_mesh.c: 451: BroadcastRecords[i].AltSourceAddr.Val = sourceShortAddress.Val;
 16846  00236C  0101               	movlb	1	; () banked
 16847  00236E  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16848  002370  0D08               	mullw	8
 16849  002372  0E00               	movlw	low _BroadcastRecords
 16850  002374  24F3               	addwf	prodl,w,c
 16851  002376  6ED9               	movwf	fsr2l,c
 16852  002378  0E01               	movlw	high _BroadcastRecords
 16853  00237A  20F4               	addwfc	prodh,w,c
 16854  00237C  6EDA               	movwf	fsr2h,c
 16855  00237E  C1E5  FFDE         	movff	MiWiTasks@sourceShortAddress,postinc2
 16856  002382  C1E6  FFDD         	movff	MiWiTasks@sourceShortAddress+1,postdec2
 16857                           
 16858                           ; BSR set to: 1
 16859                           ;miwi_mesh.c: 452: BroadcastRecords[i].MiWiSeq = MACRxPacket.Payload[10];
 16860  002386  EE20 F00A          	lfsr	2,10
 16861  00238A  5037               	movf	_MACRxPacket+3,w,c
 16862  00238C  26D9               	addwf	fsr2l,f,c
 16863  00238E  5038               	movf	_MACRxPacket+4,w,c
 16864  002390  22DA               	addwfc	fsr2h,f,c
 16865  002392  0101               	movlb	1	; () banked
 16866  002394  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16867  002396  0D08               	mullw	8
 16868  002398  0E02               	movlw	2
 16869  00239A  26F3               	addwf	prodl,f,c
 16870  00239C  0E00               	movlw	0
 16871  00239E  22F4               	addwfc	prodh,f,c
 16872  0023A0  0E00               	movlw	low _BroadcastRecords
 16873  0023A2  24F3               	addwf	prodl,w,c
 16874  0023A4  6EE1               	movwf	fsr1l,c
 16875  0023A6  0E01               	movlw	high _BroadcastRecords
 16876  0023A8  20F4               	addwfc	prodh,w,c
 16877  0023AA  6EE2               	movwf	fsr1h,c
 16878  0023AC  CFDF FFE7          	movff	indf2,indf1
 16879                           
 16880                           ; BSR set to: 1
 16881                           ;miwi_mesh.c: 453: BroadcastRecords[i].RxCounter = 2 + 1;
 16882  0023B0  0101               	movlb	1	; () banked
 16883  0023B2  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16884  0023B4  0D08               	mullw	8
 16885  0023B6  0E03               	movlw	3
 16886  0023B8  26F3               	addwf	prodl,f,c
 16887  0023BA  0E00               	movlw	0
 16888  0023BC  22F4               	addwfc	prodh,f,c
 16889  0023BE  0E00               	movlw	low _BroadcastRecords
 16890  0023C0  24F3               	addwf	prodl,w,c
 16891  0023C2  6ED9               	movwf	fsr2l,c
 16892  0023C4  0E01               	movlw	high _BroadcastRecords
 16893  0023C6  20F4               	addwfc	prodh,w,c
 16894  0023C8  6EDA               	movwf	fsr2h,c
 16895  0023CA  0E03               	movlw	3
 16896  0023CC  6EDF               	movwf	indf2,c
 16897                           
 16898                           ; BSR set to: 1
 16899                           ;miwi_mesh.c: 455: BroadcastRecords[i].StartTick = MiWi_TickGet();
 16900  0023CE  EC57  F042         	call	_MiWi_TickGet	;wreg free
 16901  0023D2  0101               	movlb	1	; () banked
 16902  0023D4  51E7               	movf	MiWiTasks@i& (0+255),w,b
 16903  0023D6  0D08               	mullw	8
 16904  0023D8  0E04               	movlw	4
 16905  0023DA  26F3               	addwf	prodl,f,c
 16906  0023DC  0E00               	movlw	0
 16907  0023DE  22F4               	addwfc	prodh,f,c
 16908  0023E0  0E00               	movlw	low _BroadcastRecords
 16909  0023E2  24F3               	addwf	prodl,w,c
 16910  0023E4  6ED9               	movwf	fsr2l,c
 16911  0023E6  0E01               	movlw	high _BroadcastRecords
 16912  0023E8  20F4               	addwfc	prodh,w,c
 16913  0023EA  6EDA               	movwf	fsr2h,c
 16914  0023EC  0100               	movlb	0	; () banked
 16915  0023EE  C081  FFDE         	movff	?_MiWi_TickGet,postinc2
 16916  0023F2  0100               	movlb	0	; () banked
 16917  0023F4  C082  FFDE         	movff	?_MiWi_TickGet+1,postinc2
 16918  0023F8  0100               	movlb	0	; () banked
 16919  0023FA  C083  FFDE         	movff	?_MiWi_TickGet+2,postinc2
 16920  0023FE  0100               	movlb	0	; () banked
 16921  002400  C084  FFDE         	movff	?_MiWi_TickGet+3,postinc2
 16922  002404                     l11574:
 16923                           
 16924                           ;miwi_mesh.c: 457: }
 16925                           ;miwi_mesh.c: 459: rxMessage.flags.bits.broadcast = 1;
 16926  002404  0101               	movlb	1	; () banked
 16927  002406  512C               	movf	_rxMessage& (0+255),w,b
 16928  002408  0BFC               	andlw	-4
 16929  00240A  0901               	iorlw	1
 16930  00240C  6F2C               	movwf	_rxMessage& (0+255),b
 16931                           
 16932                           ;miwi_mesh.c: 460: goto ThisPacketIsForMe;
 16933  00240E  D06B               	goto	l11620
 16934  002410                     l11576:
 16935                           
 16936                           ; BSR set to: 1
 16937                           ;miwi_mesh.c: 461: }
 16938                           ;miwi_mesh.c: 464: if((destPANID.Val == myPANID.Val) && (destShortAddress.Val == myShort
      +                          Address.Val))
 16939  002410  0100               	movlb	0	; () banked
 16940  002412  51DB               	movf	_myPANID& (0+255),w,b
 16941  002414  0101               	movlb	1	; () banked
 16942  002416  19DC               	xorwf	MiWiTasks@destPANID& (0+255),w,b
 16943  002418  E105               	bnz	u13191
 16944  00241A  0100               	movlb	0	; () banked
 16945  00241C  51DC               	movf	(_myPANID+1)& (0+255),w,b
 16946  00241E  0101               	movlb	1	; () banked
 16947  002420  19DD               	xorwf	(MiWiTasks@destPANID+1)& (0+255),w,b
 16948  002422  A4D8               	btfss	status,2,c
 16949  002424                     u13191:
 16950  002424  D3AA               	goto	l601
 16951                           
 16952                           ; BSR set to: 1
 16953  002426  0100               	movlb	0	; () banked
 16954  002428  51DD               	movf	_myShortAddress& (0+255),w,b
 16955  00242A  0101               	movlb	1	; () banked
 16956  00242C  19DE               	xorwf	MiWiTasks@destShortAddress& (0+255),w,b
 16957  00242E  E105               	bnz	u13201
 16958  002430  0100               	movlb	0	; () banked
 16959  002432  51DE               	movf	(_myShortAddress+1)& (0+255),w,b
 16960  002434  0101               	movlb	1	; () banked
 16961  002436  19DF               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 16962  002438  A4D8               	btfss	status,2,c
 16963  00243A                     u13201:
 16964  00243A  D39F               	goto	l601
 16965                           
 16966                           ; BSR set to: 1
 16967                           ;miwi_mesh.c: 465: {
 16968                           ;miwi_mesh.c: 467: if(MACRxPacket.Payload[1] & 0x04)
 16969  00243C  EE20 F001          	lfsr	2,1
 16970  002440  5037               	movf	_MACRxPacket+3,w,c
 16971  002442  26D9               	addwf	fsr2l,f,c
 16972  002444  5038               	movf	_MACRxPacket+4,w,c
 16973  002446  22DA               	addwfc	fsr2h,f,c
 16974  002448  A4DF               	btfss	indf2,2,c
 16975  00244A  D04D               	goto	l11620
 16976                           
 16977                           ; BSR set to: 1
 16978                           ;miwi_mesh.c: 468: {
 16979                           ;miwi_mesh.c: 469: TxBuffer[0] = defaultHops;
 16980  00244C  C04A  F16C         	movff	_defaultHops,_TxBuffer
 16981                           
 16982                           ; BSR set to: 1
 16983                           ;miwi_mesh.c: 470: TxBuffer[1] = 0x02;
 16984  002450  0E02               	movlw	2
 16985  002452  0101               	movlb	1	; () banked
 16986  002454  6F6D               	movwf	(_TxBuffer+1)& (0+255),b
 16987                           
 16988                           ; BSR set to: 1
 16989                           ;miwi_mesh.c: 471: TxBuffer[2] = sourcePANID.v[0];
 16990  002456  C1E3  F16E         	movff	MiWiTasks@sourcePANID,_TxBuffer+2
 16991                           
 16992                           ; BSR set to: 1
 16993                           ;miwi_mesh.c: 472: TxBuffer[3] = sourcePANID.v[1];
 16994  00245A  C1E4  F16F         	movff	MiWiTasks@sourcePANID+1,_TxBuffer+3
 16995                           
 16996                           ; BSR set to: 1
 16997                           ;miwi_mesh.c: 473: TxBuffer[4] = sourceShortAddress.v[0];
 16998  00245E  C1E5  F170         	movff	MiWiTasks@sourceShortAddress,_TxBuffer+4
 16999                           
 17000                           ; BSR set to: 1
 17001                           ;miwi_mesh.c: 474: TxBuffer[5] = sourceShortAddress.v[1];
 17002  002462  C1E6  F171         	movff	MiWiTasks@sourceShortAddress+1,_TxBuffer+5
 17003                           
 17004                           ; BSR set to: 1
 17005                           ;miwi_mesh.c: 475: TxBuffer[6] = myPANID.v[0];
 17006  002466  C0DB  F172         	movff	_myPANID,_TxBuffer+6
 17007                           
 17008                           ; BSR set to: 1
 17009                           ;miwi_mesh.c: 476: TxBuffer[7] = myPANID.v[1];
 17010  00246A  C0DC  F173         	movff	_myPANID+1,_TxBuffer+7
 17011                           
 17012                           ; BSR set to: 1
 17013                           ;miwi_mesh.c: 477: TxBuffer[8] = myShortAddress.v[0];
 17014  00246E  C0DD  F174         	movff	_myShortAddress,_TxBuffer+8
 17015                           
 17016                           ; BSR set to: 1
 17017                           ;miwi_mesh.c: 478: TxBuffer[9] = myShortAddress.v[1];
 17018  002472  C0DE  F175         	movff	_myShortAddress+1,_TxBuffer+9
 17019                           
 17020                           ; BSR set to: 1
 17021                           ;miwi_mesh.c: 479: TxBuffer[10] = MACRxPacket.Payload[11-1];
 17022  002476  EE20 F00A          	lfsr	2,10
 17023  00247A  5037               	movf	_MACRxPacket+3,w,c
 17024  00247C  26D9               	addwf	fsr2l,f,c
 17025  00247E  5038               	movf	_MACRxPacket+4,w,c
 17026  002480  22DA               	addwfc	fsr2h,f,c
 17027  002482  50DF               	movf	indf2,w,c
 17028  002484  0101               	movlb	1	; () banked
 17029  002486  6F76               	movwf	(_TxBuffer+10)& (0+255),b
 17030                           
 17031                           ; BSR set to: 1
 17032                           ;miwi_mesh.c: 480: TxBuffer[11] = 0x00;
 17033  002488  0E00               	movlw	0
 17034  00248A  0101               	movlb	1	; () banked
 17035  00248C  6F77               	movwf	(_TxBuffer+11)& (0+255),b
 17036                           
 17037                           ; BSR set to: 1
 17038                           ;miwi_mesh.c: 481: TxBuffer[12] = 0x30;
 17039  00248E  0E30               	movlw	48
 17040  002490  0101               	movlb	1	; () banked
 17041  002492  6F78               	movwf	(_TxBuffer+12)& (0+255),b
 17042                           
 17043                           ; BSR set to: 1
 17044                           ;miwi_mesh.c: 482: TxData = 13;
 17045  002494  0E0D               	movlw	13
 17046  002496  0100               	movlb	0	; () banked
 17047  002498  6FD8               	movwf	_TxData& (0+255),b
 17048                           
 17049                           ; BSR set to: 0
 17050                           ;miwi_mesh.c: 512: MTP.flags.Val = 0;
 17051  00249A  0E00               	movlw	0
 17052  00249C  0100               	movlb	0	; () banked
 17053  00249E  6FD1               	movwf	_MTP& (0+255),b
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;miwi_mesh.c: 513: MTP.flags.bits.ackReq = 1;
 17057  0024A0  0100               	movlb	0	; () banked
 17058  0024A2  8BD1               	bsf	_MTP& (0+255),5,b
 17059                           
 17060                           ; BSR set to: 0
 17061                           ;miwi_mesh.c: 521: MTP.DestAddress = ConnectionTable[myParent].Address;
 17062  0024A4  0100               	movlb	0	; () banked
 17063  0024A6  51D9               	movf	_myParent& (0+255),w,b
 17064  0024A8  0D09               	mullw	9
 17065  0024AA  0E04               	movlw	4
 17066  0024AC  26F3               	addwf	prodl,f,c
 17067  0024AE  0E00               	movlw	0
 17068  0024B0  22F4               	addwfc	prodh,f,c
 17069  0024B2  0E46               	movlw	low _ConnectionTable
 17070  0024B4  24F3               	addwf	prodl,w,c
 17071  0024B6  0100               	movlb	0	; () banked
 17072  0024B8  6FD2               	movwf	(_MTP+1)& (0+255),b
 17073  0024BA  0E02               	movlw	high _ConnectionTable
 17074  0024BC  20F4               	addwfc	prodh,w,c
 17075  0024BE  0100               	movlb	0	; () banked
 17076  0024C0  6FD3               	movwf	(_MTP+2)& (0+255),b
 17077                           
 17078                           ; BSR set to: 0
 17079                           ;miwi_mesh.c: 524: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 17080  0024C2  C0D1  F0B0         	movff	_MTP,MiMAC_SendPacket@transParam
 17081  0024C6  C0D2  F0B1         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 17082  0024CA  C0D3  F0B2         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 17083  0024CE  0E6C               	movlw	low _TxBuffer
 17084  0024D0  0100               	movlb	0	; () banked
 17085  0024D2  6FB3               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 17086  0024D4  0E01               	movlw	high _TxBuffer
 17087  0024D6  0100               	movlb	0	; () banked
 17088  0024D8  6FB4               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 17089  0024DA  C0D8  F0B5         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 17090  0024DE  EC6F  F02B         	call	_MiMAC_SendPacket	;wreg free
 17091                           
 17092                           ;miwi_mesh.c: 526: rxMessage.flags.bits.ackReq = 1;
 17093  0024E2  0101               	movlb	1	; () banked
 17094  0024E4  852C               	bsf	_rxMessage& (0+255),2,b
 17095  0024E6                     l11620:
 17096                           
 17097                           ; BSR set to: 1
 17098                           ;miwi_mesh.c: 531: if(MACRxPacket.Payload[11] == 0x00)
 17099  0024E6  EE20 F00B          	lfsr	2,11
 17100  0024EA  5037               	movf	_MACRxPacket+3,w,c
 17101  0024EC  26D9               	addwf	fsr2l,f,c
 17102  0024EE  5038               	movf	_MACRxPacket+4,w,c
 17103  0024F0  22DA               	addwfc	fsr2h,f,c
 17104  0024F2  50DF               	movf	indf2,w,c
 17105  0024F4  A4D8               	btfss	status,2,c
 17106  0024F6  D0A6               	goto	l11680
 17107                           
 17108                           ; BSR set to: 1
 17109                           ;miwi_mesh.c: 532: {
 17110                           ;miwi_mesh.c: 533: if( MACRxPacket.Payload[11+1] != 0x30)
 17111  0024F8  EE20 F00C          	lfsr	2,12
 17112  0024FC  5037               	movf	_MACRxPacket+3,w,c
 17113  0024FE  26D9               	addwf	fsr2l,f,c
 17114  002500  5038               	movf	_MACRxPacket+4,w,c
 17115  002502  22DA               	addwfc	fsr2h,f,c
 17116  002504  0E30               	movlw	48
 17117  002506  18DE               	xorwf	postinc2,w,c
 17118  002508  A4D8               	btfss	status,2,c
 17119  00250A  D078               	goto	l11672
 17120  00250C  D082               	goto	l11674
 17121  00250E                     l11626:
 17122                           
 17123                           ; BSR set to: 1
 17124                           ;miwi_mesh.c: 826: {
 17125                           ;miwi_mesh.c: 827: uint8_t j;
 17126                           ;miwi_mesh.c: 830: for(j=0;j<4;j++)
 17127  00250E  0E00               	movlw	0
 17128  002510  0101               	movlb	1	; () banked
 17129  002512  6FE2               	movwf	MiWiTasks@j& (0+255),b
 17130  002514                     l11628:
 17131                           
 17132                           ; BSR set to: 1
 17133  002514  0E03               	movlw	3
 17134  002516  0101               	movlb	1	; () banked
 17135  002518  65E2               	cpfsgt	MiWiTasks@j& (0+255),b
 17136  00251A  D001               	goto	l11632
 17137  00251C  D020               	goto	l11638
 17138  00251E                     l11632:
 17139                           
 17140                           ; BSR set to: 1
 17141                           ;miwi_mesh.c: 831: {
 17142                           ;miwi_mesh.c: 832: tempLongAddress[j] = MACRxPacket.Payload[j+13];
 17143  00251E  0101               	movlb	1	; () banked
 17144  002520  51E2               	movf	MiWiTasks@j& (0+255),w,b
 17145  002522  0100               	movlb	0	; () banked
 17146  002524  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17147  002526  6BC9               	clrf	(??_MiWiTasks+1)& (0+255),b
 17148  002528  0E0D               	movlw	13
 17149  00252A  0100               	movlb	0	; () banked
 17150  00252C  27C8               	addwf	??_MiWiTasks& (0+255),f,b
 17151  00252E  0E00               	movlw	0
 17152  002530  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17153  002532  0100               	movlb	0	; () banked
 17154  002534  51C8               	movf	??_MiWiTasks& (0+255),w,b
 17155  002536  2437               	addwf	_MACRxPacket+3,w,c
 17156  002538  6ED9               	movwf	fsr2l,c
 17157  00253A  0100               	movlb	0	; () banked
 17158  00253C  51C9               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17159  00253E  2038               	addwfc	_MACRxPacket+4,w,c
 17160  002540  6EDA               	movwf	fsr2h,c
 17161  002542  0101               	movlb	1	; () banked
 17162  002544  51E2               	movf	MiWiTasks@j& (0+255),w,b
 17163  002546  0D01               	mullw	1
 17164  002548  0E4E               	movlw	low _tempLongAddress
 17165  00254A  24F3               	addwf	prodl,w,c
 17166  00254C  6EE1               	movwf	fsr1l,c
 17167  00254E  0E01               	movlw	high _tempLongAddress
 17168  002550  20F4               	addwfc	prodh,w,c
 17169  002552  6EE2               	movwf	fsr1h,c
 17170  002554  CFDF FFE7          	movff	indf2,indf1
 17171                           
 17172                           ; BSR set to: 1
 17173  002558  0101               	movlb	1	; () banked
 17174  00255A  2BE2               	incf	MiWiTasks@j& (0+255),f,b
 17175  00255C  D7DB               	goto	l11628
 17176  00255E                     l11638:
 17177                           
 17178                           ; BSR set to: 1
 17179                           ;miwi_mesh.c: 833: }
 17180                           ;miwi_mesh.c: 836: tempNodeStatus.Val = 0x8D;
 17181  00255E  0E8D               	movlw	141
 17182  002560  6E48               	movwf	_tempNodeStatus,c
 17183                           
 17184                           ; BSR set to: 1
 17185                           ;miwi_mesh.c: 838: if(MACRxPacket.Payload[13+4] & 0x80)
 17186  002562  EE20 F011          	lfsr	2,17
 17187  002566  5037               	movf	_MACRxPacket+3,w,c
 17188  002568  26D9               	addwf	fsr2l,f,c
 17189  00256A  5038               	movf	_MACRxPacket+4,w,c
 17190  00256C  22DA               	addwfc	fsr2h,f,c
 17191  00256E  BEDF               	btfsc	indf2,7,c
 17192                           
 17193                           ; BSR set to: 1
 17194                           ;miwi_mesh.c: 839: {
 17195                           ;miwi_mesh.c: 840: tempNodeStatus.bits.RXOnWhenIdle = 0;
 17196  002570  9048               	bcf	_tempNodeStatus,0,c
 17197                           
 17198                           ; BSR set to: 1
 17199                           ;miwi_mesh.c: 841: }
 17200                           ;miwi_mesh.c: 844: tempShortAddress.v[0] = MACRxPacket.Payload[4+13];
 17201                           
 17202                           ; BSR set to: 1
 17203  002572  EE20 F011          	lfsr	2,17
 17204  002576  5037               	movf	_MACRxPacket+3,w,c
 17205  002578  26D9               	addwf	fsr2l,f,c
 17206  00257A  5038               	movf	_MACRxPacket+4,w,c
 17207  00257C  22DA               	addwfc	fsr2h,f,c
 17208  00257E  50DF               	movf	indf2,w,c
 17209  002580  0101               	movlb	1	; () banked
 17210  002582  6FD0               	movwf	_tempShortAddress& (0+255),b
 17211                           
 17212                           ;miwi_mesh.c: 845: tempShortAddress.v[1] = MACRxPacket.Payload[4+14];
 17213  002584  EE20 F012          	lfsr	2,18
 17214  002588  5037               	movf	_MACRxPacket+3,w,c
 17215  00258A  26D9               	addwf	fsr2l,f,c
 17216  00258C  5038               	movf	_MACRxPacket+4,w,c
 17217  00258E  22DA               	addwfc	fsr2h,f,c
 17218  002590  50DF               	movf	indf2,w,c
 17219  002592  0101               	movlb	1	; () banked
 17220  002594  6FD1               	movwf	(_tempShortAddress+1)& (0+255),b
 17221                           
 17222                           ; BSR set to: 1
 17223                           ;miwi_mesh.c: 848: tempPANID.Val = myPANID.Val;
 17224  002596  C0DB  F15E         	movff	_myPANID,_tempPANID
 17225  00259A  C0DC  F15F         	movff	_myPANID+1,_tempPANID+1
 17226                           
 17227                           ; BSR set to: 1
 17228                           ;miwi_mesh.c: 851: openSocketInfo.socketHandle = SearchForShortAddress();
 17229  00259E  EC5F  F040         	call	_SearchForShortAddress	;wreg free
 17230  0025A2  0101               	movlb	1	; () banked
 17231  0025A4  6F21               	movwf	(_openSocketInfo+1)& (0+255),b
 17232                           
 17233                           ; BSR set to: 1
 17234                           ;miwi_mesh.c: 853: if(openSocketInfo.socketHandle != 0xFF)
 17235  0025A6  0101               	movlb	1	; () banked
 17236  0025A8  2921               	incf	(_openSocketInfo+1)& (0+255),w,b
 17237  0025AA  B4D8               	btfsc	status,2,c
 17238  0025AC  D012               	goto	l11658
 17239                           
 17240                           ; BSR set to: 1
 17241                           ;miwi_mesh.c: 854: {
 17242                           ;miwi_mesh.c: 856: tempNodeStatus.Val = ConnectionTable[openSocketInfo.socketHandle].sta
      +                          tus.Val;
 17243  0025AE  0101               	movlb	1	; () banked
 17244  0025B0  5121               	movf	(_openSocketInfo+1)& (0+255),w,b
 17245  0025B2  0D09               	mullw	9
 17246  0025B4  0E08               	movlw	8
 17247  0025B6  26F3               	addwf	prodl,f,c
 17248  0025B8  0E00               	movlw	0
 17249  0025BA  22F4               	addwfc	prodh,f,c
 17250  0025BC  0E46               	movlw	low _ConnectionTable
 17251  0025BE  24F3               	addwf	prodl,w,c
 17252  0025C0  6ED9               	movwf	fsr2l,c
 17253  0025C2  0E02               	movlw	high _ConnectionTable
 17254  0025C4  20F4               	addwfc	prodh,w,c
 17255  0025C6  6EDA               	movwf	fsr2h,c
 17256  0025C8  50DF               	movf	indf2,w,c
 17257  0025CA  6E48               	movwf	_tempNodeStatus,c
 17258                           
 17259                           ; BSR set to: 1
 17260                           ;miwi_mesh.c: 857: tempNodeStatus.bits.longAddressValid = 1;
 17261  0025CC  8448               	bsf	_tempNodeStatus,2,c
 17262                           
 17263                           ; BSR set to: 1
 17264                           ;miwi_mesh.c: 858: tempNodeStatus.bits.shortAddressValid = 1;
 17265  0025CE  8648               	bsf	_tempNodeStatus,3,c
 17266                           
 17267                           ;miwi_mesh.c: 859: }
 17268  0025D0  D005               	goto	l11664
 17269  0025D2                     l11658:
 17270                           
 17271                           ; BSR set to: 1
 17272                           ;miwi_mesh.c: 860: else
 17273                           ;miwi_mesh.c: 861: {
 17274                           ;miwi_mesh.c: 863: tempNodeStatus.Val = 0x8D;
 17275  0025D2  0E8D               	movlw	141
 17276  0025D4  6E48               	movwf	_tempNodeStatus,c
 17277                           
 17278                           ; BSR set to: 1
 17279                           ;miwi_mesh.c: 864: if(tempShortAddress.v[0] & 0x80)
 17280  0025D6  0101               	movlb	1	; () banked
 17281  0025D8  BFD0               	btfsc	_tempShortAddress& (0+255),7,b
 17282                           
 17283                           ; BSR set to: 1
 17284                           ;miwi_mesh.c: 865: {
 17285                           ;miwi_mesh.c: 866: tempNodeStatus.bits.RXOnWhenIdle = 0;
 17286  0025DA  9048               	bcf	_tempNodeStatus,0,c
 17287  0025DC                     l11664:
 17288                           
 17289                           ; BSR set to: 1
 17290                           ;miwi_mesh.c: 867: }
 17291                           ;miwi_mesh.c: 868: }
 17292                           ;miwi_mesh.c: 870: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 17293  0025DC  ECC9  F038         	call	_AddNodeToNetworkTable	;wreg free
 17294  0025E0  0101               	movlb	1	; () banked
 17295  0025E2  6F21               	movwf	(_openSocketInfo+1)& (0+255),b
 17296                           
 17297                           ; BSR set to: 1
 17298                           ;miwi_mesh.c: 871: if( openSocketInfo.socketHandle < 0xFF )
 17299  0025E4  0101               	movlb	1	; () banked
 17300  0025E6  2921               	incf	(_openSocketInfo+1)& (0+255),w,b
 17301  0025E8  B4D8               	btfsc	status,2,c
 17302  0025EA  D003               	goto	l627
 17303                           
 17304                           ; BSR set to: 1
 17305                           ;miwi_mesh.c: 872: {
 17306                           ;miwi_mesh.c: 882: openSocketInfo.status.bits.matchFound = 1;
 17307  0025EC  0101               	movlb	1	; () banked
 17308  0025EE  8120               	bsf	_openSocketInfo& (0+255),0,b
 17309                           
 17310                           ;miwi_mesh.c: 883: }
 17311  0025F0  D002               	goto	l628
 17312  0025F2                     l627:
 17313                           
 17314                           ; BSR set to: 1
 17315                           ;miwi_mesh.c: 884: else
 17316                           ;miwi_mesh.c: 885: {
 17317                           ;miwi_mesh.c: 886: openSocketInfo.status.bits.matchFound = 0;
 17318  0025F2  0101               	movlb	1	; () banked
 17319  0025F4  9120               	bcf	_openSocketInfo& (0+255),0,b
 17320  0025F6                     l628:
 17321                           
 17322                           ; BSR set to: 1
 17323                           ;miwi_mesh.c: 887: }
 17324                           ;miwi_mesh.c: 890: openSocketInfo.status.bits.requestIsOpen = 0;
 17325  0025F6  0101               	movlb	1	; () banked
 17326  0025F8  9320               	bcf	_openSocketInfo& (0+255),1,b
 17327                           
 17328                           ; BSR set to: 1
 17329                           ;miwi_mesh.c: 968: }
 17330                           
 17331                           ; BSR set to: 1
 17332                           ;miwi_mesh.c: 967: break;
 17333                           
 17334                           ;miwi_mesh.c: 964: default:
 17335                           
 17336                           ;miwi_mesh.c: 892: }
 17337                           ;miwi_mesh.c: 893: break;
 17338  0025FA  D2BF               	goto	l601
 17339  0025FC                     l11672:
 17340                           
 17341                           ; BSR set to: 1
 17342  0025FC  EE20 F00C          	lfsr	2,12
 17343  002600  5037               	movf	_MACRxPacket+3,w,c
 17344  002602  26D9               	addwf	fsr2l,f,c
 17345  002604  5038               	movf	_MACRxPacket+4,w,c
 17346  002606  22DA               	addwfc	fsr2h,f,c
 17347  002608  50DF               	movf	indf2,w,c
 17348                           
 17349                           ; Switch size 1, requested type "space"
 17350                           ; Number of cases is 1, Range of values is 17 to 17
 17351                           ; switch strategies available:
 17352                           ; Name         Instructions Cycles
 17353                           ; simple_byte            4     3 (average)
 17354                           ;	Chosen strategy is simple_byte
 17355  00260A  0A11               	xorlw	17	; case 17
 17356  00260C  B4D8               	btfsc	status,2,c
 17357  00260E  D77F               	goto	l11626
 17358                           
 17359                           ; BSR set to: 1
 17360                           ;miwi_mesh.c: 969: }
 17361  002610  D2B4               	goto	l601
 17362  002612                     l11674:
 17363                           
 17364                           ; BSR set to: 1
 17365                           ;miwi_mesh.c: 970: else
 17366                           ;miwi_mesh.c: 971: {
 17367                           ;miwi_mesh.c: 973: if( AcknowledgementSeq == MACRxPacket.Payload[11-1] &&
 17368                           ;miwi_mesh.c: 974: sourceShortAddress.Val == AcknowledgementAddr.Val)
 17369  002612  EE20 F00A          	lfsr	2,10
 17370  002616  5037               	movf	_MACRxPacket+3,w,c
 17371  002618  26D9               	addwf	fsr2l,f,c
 17372  00261A  5038               	movf	_MACRxPacket+4,w,c
 17373  00261C  22DA               	addwfc	fsr2h,f,c
 17374  00261E  0101               	movlb	1	; () banked
 17375  002620  51FE               	movf	_AcknowledgementSeq& (0+255),w,b
 17376  002622  18DE               	xorwf	postinc2,w,c
 17377  002624  A4D8               	btfss	status,2,c
 17378  002626  D2A9               	goto	l601
 17379                           
 17380                           ; BSR set to: 1
 17381  002628  0101               	movlb	1	; () banked
 17382  00262A  5158               	movf	_AcknowledgementAddr& (0+255),w,b
 17383  00262C  0101               	movlb	1	; () banked
 17384  00262E  19E5               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 17385  002630  E105               	bnz	u13311
 17386  002632  0101               	movlb	1	; () banked
 17387  002634  5159               	movf	(_AcknowledgementAddr+1)& (0+255),w,b
 17388  002636  0101               	movlb	1	; () banked
 17389  002638  19E6               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 17390  00263A  A4D8               	btfss	status,2,c
 17391  00263C                     u13311:
 17392  00263C  D29E               	goto	l601
 17393                           
 17394                           ; BSR set to: 1
 17395                           ;miwi_mesh.c: 975: {
 17396                           ;miwi_mesh.c: 976: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 17397  00263E  0100               	movlb	0	; () banked
 17398  002640  97D4               	bcf	_MiWiStateMachine& (0+255),3,b
 17399                           
 17400                           ; BSR set to: 0
 17401                           ;miwi_mesh.c: 980: }
 17402                           ;miwi_mesh.c: 981: }
 17403                           
 17404                           ; BSR set to: 0
 17405                           ;miwi_mesh.c: 977: }
 17406                           ;miwi_mesh.c: 979: break;
 17407  002642  D29B               	goto	l601
 17408  002644                     l11680:
 17409                           
 17410                           ;miwi_mesh.c: 982: else
 17411                           ;miwi_mesh.c: 983: {
 17412                           ;miwi_mesh.c: 988: rxMessage.PayloadSize = MACRxPacket.PayloadLen - 11;
 17413  002644  5039               	movf	_MACRxPacket+5,w,c
 17414  002646  0FF5               	addlw	245
 17415  002648  0101               	movlb	1	; () banked
 17416  00264A  6F33               	movwf	(_rxMessage+7)& (0+255),b
 17417                           
 17418                           ;miwi_mesh.c: 989: rxMessage.Payload = &MACRxPacket.Payload[11];
 17419  00264C  0E0B               	movlw	11
 17420  00264E  2437               	addwf	_MACRxPacket+3,w,c
 17421  002650  0101               	movlb	1	; () banked
 17422  002652  6F31               	movwf	(_rxMessage+5)& (0+255),b
 17423  002654  0E00               	movlw	0
 17424  002656  2038               	addwfc	_MACRxPacket+4,w,c
 17425  002658  0101               	movlb	1	; () banked
 17426  00265A  6F32               	movwf	(_rxMessage+6)& (0+255),b
 17427                           
 17428                           ; BSR set to: 1
 17429                           ;miwi_mesh.c: 990: rxMessage.SourcePANID.Val = sourcePANID.Val;
 17430  00265C  C1E3  F12D         	movff	MiWiTasks@sourcePANID,_rxMessage+1
 17431  002660  C1E4  F12E         	movff	MiWiTasks@sourcePANID+1,_rxMessage+2
 17432                           
 17433                           ; BSR set to: 1
 17434                           ;miwi_mesh.c: 991: if( MACRxPacket.Payload[8] == 0xFF && MACRxPacket.Payload[9] == 0xFF 
      +                          )
 17435  002664  EE20 F008          	lfsr	2,8
 17436  002668  5037               	movf	_MACRxPacket+3,w,c
 17437  00266A  26D9               	addwf	fsr2l,f,c
 17438  00266C  5038               	movf	_MACRxPacket+4,w,c
 17439  00266E  22DA               	addwfc	fsr2h,f,c
 17440  002670  28DE               	incf	postinc2,w,c
 17441  002672  A4D8               	btfss	status,2,c
 17442  002674  D00F               	goto	l634
 17443                           
 17444                           ; BSR set to: 1
 17445  002676  EE20 F009          	lfsr	2,9
 17446  00267A  5037               	movf	_MACRxPacket+3,w,c
 17447  00267C  26D9               	addwf	fsr2l,f,c
 17448  00267E  5038               	movf	_MACRxPacket+4,w,c
 17449  002680  22DA               	addwfc	fsr2h,f,c
 17450  002682  28DE               	incf	postinc2,w,c
 17451  002684  B4D8               	btfsc	status,2,c
 17452                           
 17453                           ; BSR set to: 1
 17454                           ;miwi_mesh.c: 992: {
 17455                           ;miwi_mesh.c: 997: if( MACRxPacket.flags.bits.sourcePrsnt )
 17456  002686  AE34               	btfss	_MACRxPacket,7,c
 17457  002688  D005               	goto	l634
 17458                           
 17459                           ; BSR set to: 1
 17460                           ;miwi_mesh.c: 998: {
 17461                           ;miwi_mesh.c: 999: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 17462  00268A  C035  F12F         	movff	_MACRxPacket+1,_rxMessage+3
 17463  00268E  C036  F130         	movff	_MACRxPacket+2,_rxMessage+4
 17464                           
 17465                           ;miwi_mesh.c: 1000: }
 17466  002692  D00A               	goto	l11696
 17467  002694                     l634:
 17468                           
 17469                           ; BSR set to: 1
 17470                           ;miwi_mesh.c: 1009: else
 17471                           ;miwi_mesh.c: 1010: {
 17472                           ;miwi_mesh.c: 1011: rxMessage.flags.bits.altSrcAddr = 1;
 17473  002694  0101               	movlb	1	; () banked
 17474  002696  8F2C               	bsf	_rxMessage& (0+255),7,b
 17475                           
 17476                           ; BSR set to: 1
 17477                           ;miwi_mesh.c: 1012: rxMessage.SourceAddress = &(MACRxPacket.Payload[8]);
 17478  002698  0E08               	movlw	8
 17479  00269A  2437               	addwf	_MACRxPacket+3,w,c
 17480  00269C  0101               	movlb	1	; () banked
 17481  00269E  6F2F               	movwf	(_rxMessage+3)& (0+255),b
 17482  0026A0  0E00               	movlw	0
 17483  0026A2  2038               	addwfc	_MACRxPacket+4,w,c
 17484  0026A4  0101               	movlb	1	; () banked
 17485  0026A6  6F30               	movwf	(_rxMessage+4)& (0+255),b
 17486  0026A8                     l11696:
 17487                           
 17488                           ; BSR set to: 1
 17489                           ;miwi_mesh.c: 1013: }
 17490                           ;miwi_mesh.c: 1014: rxMessage.flags.bits.srcPrsnt = 1;
 17491  0026A8  0101               	movlb	1	; () banked
 17492  0026AA  8D2C               	bsf	_rxMessage& (0+255),6,b
 17493                           
 17494                           ; BSR set to: 1
 17495                           ;miwi_mesh.c: 1016: if( rxMessage.PayloadSize > 0 )
 17496  0026AC  0101               	movlb	1	; () banked
 17497  0026AE  5133               	movf	(_rxMessage+7)& (0+255),w,b
 17498  0026B0  B4D8               	btfsc	status,2,c
 17499  0026B2  D263               	goto	l601
 17500                           
 17501                           ; BSR set to: 1
 17502                           ;miwi_mesh.c: 1017: {
 17503                           ;miwi_mesh.c: 1018: MiWiStateMachine.bits.RxHasUserData = 1;
 17504  0026B4  0100               	movlb	0	; () banked
 17505  0026B6  85D4               	bsf	_MiWiStateMachine& (0+255),2,b
 17506                           
 17507                           ; BSR set to: 0
 17508                           ;miwi_mesh.c: 1066: }
 17509                           ;miwi_mesh.c: 1068: }
 17510                           ;miwi_mesh.c: 1069: break;
 17511                           
 17512                           ;miwi_mesh.c: 1023: else
 17513                           ;miwi_mesh.c: 1024: {
 17514                           
 17515                           ; BSR set to: 0
 17516                           
 17517                           ; BSR set to: 0
 17518                           ;miwi_mesh.c: 1019: }
 17519                           ;miwi_mesh.c: 1021: }
 17520                           ;miwi_mesh.c: 1022: }
 17521                           
 17522                           ; BSR set to: 0
 17523  0026B8  D260               	goto	l601
 17524  0026BA                     l11702:
 17525                           
 17526                           ;miwi_mesh.c: 1073: {
 17527                           ;miwi_mesh.c: 1074: uint8_t rxIndex;
 17528                           ;miwi_mesh.c: 1079: rxIndex = 4;
 17529  0026BA  0E04               	movlw	4
 17530  0026BC  0101               	movlb	1	; () banked
 17531  0026BE  6FE0               	movwf	MiWiTasks@rxIndex& (0+255),b
 17532                           
 17533                           ; BSR set to: 1
 17534                           ;miwi_mesh.c: 1083: if(MACRxPacket.Payload[rxIndex+4] != 0x4D )
 17535  0026C0  0101               	movlb	1	; () banked
 17536  0026C2  51E0               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17537  0026C4  0100               	movlb	0	; () banked
 17538  0026C6  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17539  0026C8  6BC9               	clrf	(??_MiWiTasks+1)& (0+255),b
 17540  0026CA  0E04               	movlw	4
 17541  0026CC  0100               	movlb	0	; () banked
 17542  0026CE  27C8               	addwf	??_MiWiTasks& (0+255),f,b
 17543  0026D0  0E00               	movlw	0
 17544  0026D2  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17545  0026D4  0100               	movlb	0	; () banked
 17546  0026D6  51C8               	movf	??_MiWiTasks& (0+255),w,b
 17547  0026D8  2437               	addwf	_MACRxPacket+3,w,c
 17548  0026DA  6ED9               	movwf	fsr2l,c
 17549  0026DC  0100               	movlb	0	; () banked
 17550  0026DE  51C9               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17551  0026E0  2038               	addwfc	_MACRxPacket+4,w,c
 17552  0026E2  6EDA               	movwf	fsr2h,c
 17553  0026E4  0E4D               	movlw	77
 17554  0026E6  18DE               	xorwf	postinc2,w,c
 17555  0026E8  B4D8               	btfsc	status,2,c
 17556  0026EA  D016               	goto	l641
 17557                           
 17558                           ; BSR set to: 0
 17559                           ;miwi_mesh.c: 1084: {
 17560                           ;miwi_mesh.c: 1086: if(MACRxPacket.Payload[rxIndex+4] != 0x5D)
 17561  0026EC  0101               	movlb	1	; () banked
 17562  0026EE  51E0               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17563  0026F0  0100               	movlb	0	; () banked
 17564  0026F2  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17565  0026F4  6BC9               	clrf	(??_MiWiTasks+1)& (0+255),b
 17566  0026F6  0E04               	movlw	4
 17567  0026F8  0100               	movlb	0	; () banked
 17568  0026FA  27C8               	addwf	??_MiWiTasks& (0+255),f,b
 17569  0026FC  0E00               	movlw	0
 17570  0026FE  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17571  002700  0100               	movlb	0	; () banked
 17572  002702  51C8               	movf	??_MiWiTasks& (0+255),w,b
 17573  002704  2437               	addwf	_MACRxPacket+3,w,c
 17574  002706  6ED9               	movwf	fsr2l,c
 17575  002708  0100               	movlb	0	; () banked
 17576  00270A  51C9               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17577  00270C  2038               	addwfc	_MACRxPacket+4,w,c
 17578  00270E  6EDA               	movwf	fsr2h,c
 17579  002710  0E5D               	movlw	93
 17580  002712  18DE               	xorwf	postinc2,w,c
 17581  002714  A4D8               	btfss	status,2,c
 17582  002716  D231               	goto	l601
 17583  002718                     l641:
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;miwi_mesh.c: 1090: }
 17587                           ;miwi_mesh.c: 1091: }
 17588                           ;miwi_mesh.c: 1186: if(MiWiStateMachine.bits.searchingForNetwork)
 17589  002718  0100               	movlb	0	; () banked
 17590  00271A  A1D4               	btfss	_MiWiStateMachine& (0+255),0,b
 17591  00271C  D22E               	goto	l601
 17592                           
 17593                           ; BSR set to: 0
 17594                           ;miwi_mesh.c: 1187: {
 17595                           ;miwi_mesh.c: 1193: tempPANID.v[0] = MACRxPacket.Payload[0];
 17596  00271E  C037  FFD9         	movff	_MACRxPacket+3,fsr2l
 17597  002722  C038  FFDA         	movff	_MACRxPacket+4,fsr2h
 17598  002726  50DF               	movf	indf2,w,c
 17599  002728  0101               	movlb	1	; () banked
 17600  00272A  6F5E               	movwf	_tempPANID& (0+255),b
 17601                           
 17602                           ; BSR set to: 1
 17603                           ;miwi_mesh.c: 1194: tempPANID.v[1] = MACRxPacket.Payload[1];
 17604  00272C  EE20 F001          	lfsr	2,1
 17605  002730  5037               	movf	_MACRxPacket+3,w,c
 17606  002732  26D9               	addwf	fsr2l,f,c
 17607  002734  5038               	movf	_MACRxPacket+4,w,c
 17608  002736  22DA               	addwfc	fsr2h,f,c
 17609  002738  50DF               	movf	indf2,w,c
 17610  00273A  0101               	movlb	1	; () banked
 17611  00273C  6F5F               	movwf	(_tempPANID+1)& (0+255),b
 17612                           
 17613                           ; BSR set to: 1
 17614                           ;miwi_mesh.c: 1195: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 17615  00273E  EE20 F002          	lfsr	2,2
 17616  002742  5037               	movf	_MACRxPacket+3,w,c
 17617  002744  26D9               	addwf	fsr2l,f,c
 17618  002746  5038               	movf	_MACRxPacket+4,w,c
 17619  002748  22DA               	addwfc	fsr2h,f,c
 17620  00274A  50DF               	movf	indf2,w,c
 17621  00274C  0101               	movlb	1	; () banked
 17622  00274E  6FD0               	movwf	_tempShortAddress& (0+255),b
 17623                           
 17624                           ; BSR set to: 1
 17625                           ;miwi_mesh.c: 1196: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 17626  002750  EE20 F003          	lfsr	2,3
 17627  002754  5037               	movf	_MACRxPacket+3,w,c
 17628  002756  26D9               	addwf	fsr2l,f,c
 17629  002758  5038               	movf	_MACRxPacket+4,w,c
 17630  00275A  22DA               	addwfc	fsr2h,f,c
 17631  00275C  50DF               	movf	indf2,w,c
 17632  00275E  0101               	movlb	1	; () banked
 17633  002760  6FD1               	movwf	(_tempShortAddress+1)& (0+255),b
 17634                           
 17635                           ; BSR set to: 1
 17636                           ;miwi_mesh.c: 1200: if(MACRxPacket.Payload[rxIndex] == 0xFF)
 17637  002762  0101               	movlb	1	; () banked
 17638  002764  51E0               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17639  002766  0D01               	mullw	1
 17640  002768  50F3               	movf	prodl,w,c
 17641  00276A  2437               	addwf	_MACRxPacket+3,w,c
 17642  00276C  6ED9               	movwf	fsr2l,c
 17643  00276E  50F4               	movf	prodh,w,c
 17644  002770  2038               	addwfc	_MACRxPacket+4,w,c
 17645  002772  6EDA               	movwf	fsr2h,c
 17646  002774  28DE               	incf	postinc2,w,c
 17647  002776  A4D8               	btfss	status,2,c
 17648  002778  D200               	goto	l601
 17649                           
 17650                           ; BSR set to: 1
 17651                           ;miwi_mesh.c: 1201: {
 17652                           ;miwi_mesh.c: 1202: MIWI_CAPACITY_INFO CapacityByte;
 17653                           ;miwi_mesh.c: 1203: CapacityByte.Val = MACRxPacket.Payload[rxIndex+1];
 17654  00277A  0101               	movlb	1	; () banked
 17655  00277C  51E0               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17656  00277E  0100               	movlb	0	; () banked
 17657  002780  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17658  002782  6BC9               	clrf	(??_MiWiTasks+1)& (0+255),b
 17659  002784  0E01               	movlw	1
 17660  002786  0100               	movlb	0	; () banked
 17661  002788  27C8               	addwf	??_MiWiTasks& (0+255),f,b
 17662  00278A  0E00               	movlw	0
 17663  00278C  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17664  00278E  0100               	movlb	0	; () banked
 17665  002790  51C8               	movf	??_MiWiTasks& (0+255),w,b
 17666  002792  2437               	addwf	_MACRxPacket+3,w,c
 17667  002794  6ED9               	movwf	fsr2l,c
 17668  002796  0100               	movlb	0	; () banked
 17669  002798  51C9               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17670  00279A  2038               	addwfc	_MACRxPacket+4,w,c
 17671  00279C  6EDA               	movwf	fsr2h,c
 17672  00279E  50DF               	movf	indf2,w,c
 17673  0027A0  0101               	movlb	1	; () banked
 17674  0027A2  6FE1               	movwf	MiWiTasks@CapacityByte& (0+255),b
 17675                           
 17676                           ; BSR set to: 1
 17677                           ;miwi_mesh.c: 1204: if( (ActiveScanResultIndex < 8) && (CapacityByte.bits.ConnMode <= 0x
      +                          01) )
 17678  0027A4  0E08               	movlw	8
 17679  0027A6  0100               	movlb	0	; () banked
 17680  0027A8  61D6               	cpfslt	_ActiveScanResultIndex& (0+255),b
 17681  0027AA  D1E7               	goto	l601
 17682                           
 17683                           ; BSR set to: 0
 17684  0027AC  0101               	movlb	1	; () banked
 17685  0027AE  39E1               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 17686  0027B0  0B03               	andlw	3
 17687  0027B2  0100               	movlb	0	; () banked
 17688  0027B4  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17689  0027B6  0E02               	movlw	2
 17690  0027B8  0100               	movlb	0	; () banked
 17691  0027BA  61C8               	cpfslt	??_MiWiTasks& (0+255),b
 17692  0027BC  D1DE               	goto	l601
 17693                           
 17694                           ; BSR set to: 0
 17695                           ;miwi_mesh.c: 1205: {
 17696                           ;miwi_mesh.c: 1207: ActiveScanResults[ActiveScanResultIndex].Channel = currentChannel;
 17697  0027BE  0100               	movlb	0	; () banked
 17698  0027C0  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17699  0027C2  0D0A               	mullw	10
 17700  0027C4  0E00               	movlw	low _ActiveScanResults
 17701  0027C6  24F3               	addwf	prodl,w,c
 17702  0027C8  6ED9               	movwf	fsr2l,c
 17703  0027CA  0E03               	movlw	high _ActiveScanResults
 17704  0027CC  20F4               	addwfc	prodh,w,c
 17705  0027CE  6EDA               	movwf	fsr2h,c
 17706  0027D0  C1D2  FFDF         	movff	_currentChannel,indf2
 17707                           
 17708                           ;miwi_mesh.c: 1208: ActiveScanResults[ActiveScanResultIndex].RSSIValue = rxMessage.Packe
      +                          tRSSI;
 17709  0027D4  0100               	movlb	0	; () banked
 17710  0027D6  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17711  0027D8  0D0A               	mullw	10
 17712  0027DA  0E07               	movlw	7
 17713  0027DC  26F3               	addwf	prodl,f,c
 17714  0027DE  0E00               	movlw	0
 17715  0027E0  22F4               	addwfc	prodh,f,c
 17716  0027E2  0E00               	movlw	low _ActiveScanResults
 17717  0027E4  24F3               	addwf	prodl,w,c
 17718  0027E6  6ED9               	movwf	fsr2l,c
 17719  0027E8  0E03               	movlw	high _ActiveScanResults
 17720  0027EA  20F4               	addwfc	prodh,w,c
 17721  0027EC  6EDA               	movwf	fsr2h,c
 17722  0027EE  C134  FFDF         	movff	_rxMessage+8,indf2
 17723                           
 17724                           ;miwi_mesh.c: 1209: ActiveScanResults[ActiveScanResultIndex].LQIValue = rxMessage.Packet
      +                          LQI;
 17725  0027F2  0100               	movlb	0	; () banked
 17726  0027F4  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17727  0027F6  0D0A               	mullw	10
 17728  0027F8  0E08               	movlw	8
 17729  0027FA  26F3               	addwf	prodl,f,c
 17730  0027FC  0E00               	movlw	0
 17731  0027FE  22F4               	addwfc	prodh,f,c
 17732  002800  0E00               	movlw	low _ActiveScanResults
 17733  002802  24F3               	addwf	prodl,w,c
 17734  002804  6ED9               	movwf	fsr2l,c
 17735  002806  0E03               	movlw	high _ActiveScanResults
 17736  002808  20F4               	addwfc	prodh,w,c
 17737  00280A  6EDA               	movwf	fsr2h,c
 17738  00280C  C135  FFDF         	movff	_rxMessage+9,indf2
 17739                           
 17740                           ;miwi_mesh.c: 1210: ActiveScanResults[ActiveScanResultIndex].PANID.Val = tempPANID.Val;
 17741  002810  0100               	movlb	0	; () banked
 17742  002812  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17743  002814  0D0A               	mullw	10
 17744  002816  0E05               	movlw	5
 17745  002818  26F3               	addwf	prodl,f,c
 17746  00281A  0E00               	movlw	0
 17747  00281C  22F4               	addwfc	prodh,f,c
 17748  00281E  0E00               	movlw	low _ActiveScanResults
 17749  002820  24F3               	addwf	prodl,w,c
 17750  002822  6ED9               	movwf	fsr2l,c
 17751  002824  0E03               	movlw	high _ActiveScanResults
 17752  002826  20F4               	addwfc	prodh,w,c
 17753  002828  6EDA               	movwf	fsr2h,c
 17754  00282A  C15E  FFDE         	movff	_tempPANID,postinc2
 17755  00282E  C15F  FFDD         	movff	_tempPANID+1,postdec2
 17756                           
 17757                           ;miwi_mesh.c: 1212: ActiveScanResults[ActiveScanResultIndex].Capability.Val = 0;
 17758  002832  0100               	movlb	0	; () banked
 17759  002834  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17760  002836  0D0A               	mullw	10
 17761  002838  0E09               	movlw	9
 17762  00283A  26F3               	addwf	prodl,f,c
 17763  00283C  0E00               	movlw	0
 17764  00283E  22F4               	addwfc	prodh,f,c
 17765  002840  0E00               	movlw	low _ActiveScanResults
 17766  002842  24F3               	addwf	prodl,w,c
 17767  002844  6ED9               	movwf	fsr2l,c
 17768  002846  0E03               	movlw	high _ActiveScanResults
 17769  002848  20F4               	addwfc	prodh,w,c
 17770  00284A  6EDA               	movwf	fsr2h,c
 17771  00284C  0E00               	movlw	0
 17772  00284E  6EDF               	movwf	indf2,c
 17773                           
 17774                           ;miwi_mesh.c: 1213: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Direct = 1;
 17775  002850  0100               	movlb	0	; () banked
 17776  002852  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17777  002854  0D0A               	mullw	10
 17778  002856  0E09               	movlw	9
 17779  002858  26F3               	addwf	prodl,f,c
 17780  00285A  0E00               	movlw	0
 17781  00285C  22F4               	addwfc	prodh,f,c
 17782  00285E  0E00               	movlw	low _ActiveScanResults
 17783  002860  24F3               	addwf	prodl,w,c
 17784  002862  6ED9               	movwf	fsr2l,c
 17785  002864  0E03               	movlw	high _ActiveScanResults
 17786  002866  20F4               	addwfc	prodh,w,c
 17787  002868  6EDA               	movwf	fsr2h,c
 17788  00286A  0103               	movlb	3	; () banked
 17789  00286C  8CDF               	bsf	indf2,6,c
 17790                           
 17791                           ;miwi_mesh.c: 1214: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Role = Capa
      +                          cityByte.bits.Role;
 17792  00286E  0101               	movlb	1	; () banked
 17793  002870  31E1               	rrcf	MiWiTasks@CapacityByte& (0+255),w,b
 17794  002872  0B03               	andlw	3
 17795  002874  0100               	movlb	0	; () banked
 17796  002876  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17797  002878  0100               	movlb	0	; () banked
 17798  00287A  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17799  00287C  0D0A               	mullw	10
 17800  00287E  0E09               	movlw	9
 17801  002880  26F3               	addwf	prodl,f,c
 17802  002882  0E00               	movlw	0
 17803  002884  22F4               	addwfc	prodh,f,c
 17804  002886  0E00               	movlw	low _ActiveScanResults
 17805  002888  24F3               	addwf	prodl,w,c
 17806  00288A  6ED9               	movwf	fsr2l,c
 17807  00288C  0E03               	movlw	high _ActiveScanResults
 17808  00288E  20F4               	addwfc	prodh,w,c
 17809  002890  6EDA               	movwf	fsr2h,c
 17810  002892  0103               	movlb	3	; () banked
 17811  002894  50DF               	movf	223,w,c
 17812  002896  0100               	movlb	0	; () banked
 17813  002898  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 17814  00289A  0BFC               	andlw	-4
 17815  00289C  19C8               	xorwf	??_MiWiTasks& (0+255),w,b
 17816  00289E  0103               	movlb	3	; () banked
 17817  0028A0  6EDF               	movwf	223,c
 17818                           
 17819                           ; BSR set to: 3
 17820                           ;miwi_mesh.c: 1215: if( CapacityByte.bits.Security )
 17821  0028A2  0101               	movlb	1	; () banked
 17822  0028A4  A7E1               	btfss	MiWiTasks@CapacityByte& (0+255),3,b
 17823  0028A6  D00F               	goto	l11732
 17824                           
 17825                           ; BSR set to: 1
 17826                           ;miwi_mesh.c: 1216: {
 17827                           ;miwi_mesh.c: 1217: ActiveScanResults[ActiveScanResultIndex].Capability.bits.SecurityEn 
      +                          = 1;
 17828  0028A8  0100               	movlb	0	; () banked
 17829  0028AA  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17830  0028AC  0D0A               	mullw	10
 17831  0028AE  0E09               	movlw	9
 17832  0028B0  26F3               	addwf	prodl,f,c
 17833  0028B2  0E00               	movlw	0
 17834  0028B4  22F4               	addwfc	prodh,f,c
 17835  0028B6  0E00               	movlw	low _ActiveScanResults
 17836  0028B8  24F3               	addwf	prodl,w,c
 17837  0028BA  6ED9               	movwf	fsr2l,c
 17838  0028BC  0E03               	movlw	high _ActiveScanResults
 17839  0028BE  20F4               	addwfc	prodh,w,c
 17840  0028C0  6EDA               	movwf	fsr2h,c
 17841  0028C2  0103               	movlb	3	; () banked
 17842  0028C4  86DF               	bsf	indf2,3,c
 17843  0028C6                     l11732:
 17844                           
 17845                           ;miwi_mesh.c: 1218: }
 17846                           ;miwi_mesh.c: 1219: if( CapacityByte.bits.ConnMode <= 0x01 )
 17847  0028C6  0101               	movlb	1	; () banked
 17848  0028C8  39E1               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 17849  0028CA  0B03               	andlw	3
 17850  0028CC  0100               	movlb	0	; () banked
 17851  0028CE  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17852  0028D0  0E02               	movlw	2
 17853  0028D2  0100               	movlb	0	; () banked
 17854  0028D4  61C8               	cpfslt	??_MiWiTasks& (0+255),b
 17855  0028D6  D00F               	goto	l11736
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;miwi_mesh.c: 1220: {
 17859                           ;miwi_mesh.c: 1221: ActiveScanResults[ActiveScanResultIndex].Capability.bits.AllowJoin =
      +                           1;
 17860  0028D8  0100               	movlb	0	; () banked
 17861  0028DA  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17862  0028DC  0D0A               	mullw	10
 17863  0028DE  0E09               	movlw	9
 17864  0028E0  26F3               	addwf	prodl,f,c
 17865  0028E2  0E00               	movlw	0
 17866  0028E4  22F4               	addwfc	prodh,f,c
 17867  0028E6  0E00               	movlw	low _ActiveScanResults
 17868  0028E8  24F3               	addwf	prodl,w,c
 17869  0028EA  6ED9               	movwf	fsr2l,c
 17870  0028EC  0E03               	movlw	high _ActiveScanResults
 17871  0028EE  20F4               	addwfc	prodh,w,c
 17872  0028F0  6EDA               	movwf	fsr2h,c
 17873  0028F2  0103               	movlb	3	; () banked
 17874  0028F4  8ADF               	bsf	indf2,5,c
 17875  0028F6                     l11736:
 17876                           
 17877                           ;miwi_mesh.c: 1222: }
 17878                           ;miwi_mesh.c: 1230: for(i = 0; i < 4; i++)
 17879  0028F6  0E00               	movlw	0
 17880  0028F8  0101               	movlb	1	; () banked
 17881  0028FA  6FE7               	movwf	MiWiTasks@i& (0+255),b
 17882  0028FC                     l11738:
 17883                           
 17884                           ; BSR set to: 1
 17885  0028FC  0E03               	movlw	3
 17886  0028FE  0101               	movlb	1	; () banked
 17887  002900  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 17888  002902  D001               	goto	l11742
 17889  002904  D02E               	goto	l11748
 17890  002906                     l11742:
 17891                           
 17892                           ; BSR set to: 1
 17893                           ;miwi_mesh.c: 1231: {
 17894                           ;miwi_mesh.c: 1232: ActiveScanResults[ActiveScanResultIndex].Address[i] = rxMessage.Sour
      +                          ceAddress[i];
 17895  002906  0101               	movlb	1	; () banked
 17896  002908  51E7               	movf	MiWiTasks@i& (0+255),w,b
 17897  00290A  0D01               	mullw	1
 17898  00290C  50F3               	movf	prodl,w,c
 17899  00290E  0101               	movlb	1	; () banked
 17900  002910  252F               	addwf	(_rxMessage+3)& (0+255),w,b
 17901  002912  6ED9               	movwf	fsr2l,c
 17902  002914  50F4               	movf	prodh,w,c
 17903  002916  0101               	movlb	1	; () banked
 17904  002918  2130               	addwfc	(_rxMessage+4)& (0+255),w,b
 17905  00291A  6EDA               	movwf	fsr2h,c
 17906  00291C  0101               	movlb	1	; () banked
 17907  00291E  51E7               	movf	MiWiTasks@i& (0+255),w,b
 17908  002920  0D01               	mullw	1
 17909  002922  0E01               	movlw	1
 17910  002924  26F3               	addwf	prodl,f,c
 17911  002926  0E00               	movlw	0
 17912  002928  22F4               	addwfc	prodh,f,c
 17913  00292A  0E00               	movlw	low _ActiveScanResults
 17914  00292C  0100               	movlb	0	; () banked
 17915  00292E  6FC8               	movwf	??_MiWiTasks& (0+255),b
 17916  002930  0E03               	movlw	high _ActiveScanResults
 17917  002932  0100               	movlb	0	; () banked
 17918  002934  6FC9               	movwf	(??_MiWiTasks+1)& (0+255),b
 17919  002936  50F3               	movf	prodl,w,c
 17920  002938  0100               	movlb	0	; () banked
 17921  00293A  27C8               	addwf	??_MiWiTasks& (0+255),f,b
 17922  00293C  50F4               	movf	prodh,w,c
 17923  00293E  0100               	movlb	0	; () banked
 17924  002940  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17925  002942  0100               	movlb	0	; () banked
 17926  002944  51D6               	movf	_ActiveScanResultIndex& (0+255),w,b
 17927  002946  0D0A               	mullw	10
 17928  002948  50F3               	movf	prodl,w,c
 17929  00294A  0100               	movlb	0	; () banked
 17930  00294C  25C8               	addwf	??_MiWiTasks& (0+255),w,b
 17931  00294E  6EE1               	movwf	fsr1l,c
 17932  002950  50F4               	movf	prodh,w,c
 17933  002952  0100               	movlb	0	; () banked
 17934  002954  21C9               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 17935  002956  6EE2               	movwf	fsr1h,c
 17936  002958  CFDF FFE7          	movff	indf2,indf1
 17937                           
 17938                           ; BSR set to: 0
 17939  00295C  0101               	movlb	1	; () banked
 17940  00295E  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 17941  002960  D7CD               	goto	l11738
 17942  002962                     l11748:
 17943                           
 17944                           ; BSR set to: 1
 17945                           ;miwi_mesh.c: 1233: }
 17946                           ;miwi_mesh.c: 1241: ActiveScanResultIndex++;
 17947  002962  0100               	movlb	0	; () banked
 17948  002964  2BD6               	incf	_ActiveScanResultIndex& (0+255),f,b
 17949                           
 17950                           ; BSR set to: 0
 17951                           ;miwi_mesh.c: 1242: }
 17952                           ;miwi_mesh.c: 1243: }
 17953                           ;miwi_mesh.c: 1244: }
 17954                           ;miwi_mesh.c: 1245: }
 17955                           ;miwi_mesh.c: 1246: break;
 17956                           
 17957                           ; BSR set to: 0
 17958                           
 17959                           ; BSR set to: 0
 17960  002966  D109               	goto	l601
 17961  002968                     l11750:
 17962                           
 17963                           ;miwi_mesh.c: 1412: {
 17964                           ;miwi_mesh.c: 1413: if(MACRxPacket.Payload[3] == 0x00)
 17965  002968  EE20 F003          	lfsr	2,3
 17966  00296C  5037               	movf	_MACRxPacket+3,w,c
 17967  00296E  26D9               	addwf	fsr2l,f,c
 17968  002970  5038               	movf	_MACRxPacket+4,w,c
 17969  002972  22DA               	addwfc	fsr2h,f,c
 17970  002974  50DF               	movf	indf2,w,c
 17971  002976  A4D8               	btfss	status,2,c
 17972  002978  D067               	goto	l654
 17973                           
 17974                           ;miwi_mesh.c: 1414: {
 17975                           ;miwi_mesh.c: 1417: myShortAddress.v[0] = MACRxPacket.Payload[1];
 17976  00297A  EE20 F001          	lfsr	2,1
 17977  00297E  5037               	movf	_MACRxPacket+3,w,c
 17978  002980  26D9               	addwf	fsr2l,f,c
 17979  002982  5038               	movf	_MACRxPacket+4,w,c
 17980  002984  22DA               	addwfc	fsr2h,f,c
 17981  002986  50DF               	movf	indf2,w,c
 17982  002988  0100               	movlb	0	; () banked
 17983  00298A  6FDD               	movwf	_myShortAddress& (0+255),b
 17984                           
 17985                           ;miwi_mesh.c: 1418: myShortAddress.v[1] = MACRxPacket.Payload[2];
 17986  00298C  EE20 F002          	lfsr	2,2
 17987  002990  5037               	movf	_MACRxPacket+3,w,c
 17988  002992  26D9               	addwf	fsr2l,f,c
 17989  002994  5038               	movf	_MACRxPacket+4,w,c
 17990  002996  22DA               	addwfc	fsr2h,f,c
 17991  002998  50DF               	movf	indf2,w,c
 17992  00299A  0100               	movlb	0	; () banked
 17993  00299C  6FDE               	movwf	(_myShortAddress+1)& (0+255),b
 17994                           
 17995                           ; BSR set to: 0
 17996                           ;miwi_mesh.c: 1441: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 17997  00299E  0EDD               	movlw	low _myShortAddress
 17998  0029A0  0100               	movlb	0	; () banked
 17999  0029A2  6F81               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18000  0029A4  0E00               	movlw	high _myShortAddress
 18001  0029A6  0100               	movlb	0	; () banked
 18002  0029A8  6F82               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18003  0029AA  0EDB               	movlw	low _myPANID
 18004  0029AC  0100               	movlb	0	; () banked
 18005  0029AE  6F83               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18006  0029B0  0E00               	movlw	high _myPANID
 18007  0029B2  0100               	movlb	0	; () banked
 18008  0029B4  6F84               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18009  0029B6  EC21  F046         	call	_MiMAC_SetAltAddress	;wreg free
 18010                           
 18011                           ;miwi_mesh.c: 1444: MiWiStateMachine.bits.memberOfNetwork = 1;
 18012  0029BA  0100               	movlb	0	; () banked
 18013  0029BC  83D4               	bsf	_MiWiStateMachine& (0+255),1,b
 18014                           
 18015                           ; BSR set to: 0
 18016                           ;miwi_mesh.c: 1447: tempNodeStatus.Val = 0xBF;
 18017  0029BE  0EBF               	movlw	191
 18018  0029C0  6E48               	movwf	_tempNodeStatus,c
 18019                           
 18020                           ; BSR set to: 0
 18021                           ;miwi_mesh.c: 1448: for(i = 0; i < 4; i++)
 18022  0029C2  0E00               	movlw	0
 18023  0029C4  0101               	movlb	1	; () banked
 18024  0029C6  6FE7               	movwf	MiWiTasks@i& (0+255),b
 18025  0029C8                     l11762:
 18026                           
 18027                           ; BSR set to: 1
 18028  0029C8  0E03               	movlw	3
 18029  0029CA  0101               	movlb	1	; () banked
 18030  0029CC  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 18031  0029CE  D001               	goto	l11766
 18032  0029D0  D017               	goto	l11772
 18033  0029D2                     l11766:
 18034                           
 18035                           ; BSR set to: 1
 18036                           ;miwi_mesh.c: 1449: {
 18037                           ;miwi_mesh.c: 1450: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18038  0029D2  0101               	movlb	1	; () banked
 18039  0029D4  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18040  0029D6  0D01               	mullw	1
 18041  0029D8  50F3               	movf	prodl,w,c
 18042  0029DA  2435               	addwf	_MACRxPacket+1,w,c
 18043  0029DC  6ED9               	movwf	fsr2l,c
 18044  0029DE  50F4               	movf	prodh,w,c
 18045  0029E0  2036               	addwfc	_MACRxPacket+2,w,c
 18046  0029E2  6EDA               	movwf	fsr2h,c
 18047  0029E4  0101               	movlb	1	; () banked
 18048  0029E6  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18049  0029E8  0D01               	mullw	1
 18050  0029EA  0E4E               	movlw	low _tempLongAddress
 18051  0029EC  24F3               	addwf	prodl,w,c
 18052  0029EE  6EE1               	movwf	fsr1l,c
 18053  0029F0  0E01               	movlw	high _tempLongAddress
 18054  0029F2  20F4               	addwfc	prodh,w,c
 18055  0029F4  6EE2               	movwf	fsr1h,c
 18056  0029F6  CFDF FFE7          	movff	indf2,indf1
 18057                           
 18058                           ; BSR set to: 1
 18059  0029FA  0101               	movlb	1	; () banked
 18060  0029FC  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 18061  0029FE  D7E4               	goto	l11762
 18062  002A00                     l11772:
 18063                           
 18064                           ; BSR set to: 1
 18065                           ;miwi_mesh.c: 1451: }
 18066                           ;miwi_mesh.c: 1453: if(myShortAddress.v[0] == 0x00)
 18067  002A00  0100               	movlb	0	; () banked
 18068  002A02  51DD               	movf	_myShortAddress& (0+255),w,b
 18069  002A04  A4D8               	btfss	status,2,c
 18070  002A06  D005               	goto	l657
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;miwi_mesh.c: 1454: {
 18074                           ;miwi_mesh.c: 1457: tempShortAddress.Val = 0x0000;
 18075  002A08  0E00               	movlw	0
 18076  002A0A  0101               	movlb	1	; () banked
 18077  002A0C  6FD1               	movwf	(_tempShortAddress+1)& (0+255),b
 18078  002A0E  0E00               	movlw	0
 18079  002A10  D004               	goto	L10
 18080  002A12                     l657:
 18081                           
 18082                           ; BSR set to: 0
 18083                           ;miwi_mesh.c: 1459: else
 18084                           ;miwi_mesh.c: 1460: {
 18085                           ;miwi_mesh.c: 1461: tempShortAddress.v[1] = myShortAddress.v[1];
 18086  002A12  C0DE  F1D1         	movff	_myShortAddress+1,_tempShortAddress+1
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;miwi_mesh.c: 1462: tempShortAddress.v[0] = 0x00;
 18090  002A16  0E00               	movlw	0
 18091  002A18  0101               	movlb	1	; () banked
 18092  002A1A                     L10:
 18093  002A1A  6FD0               	movwf	_tempShortAddress& (0+255),b
 18094                           
 18095                           ; BSR set to: 1
 18096                           ;miwi_mesh.c: 1463: }
 18097                           ;miwi_mesh.c: 1465: tempPANID.Val = myPANID.Val;
 18098                           
 18099                           ; BSR set to: 1
 18100  002A1C  C0DB  F15E         	movff	_myPANID,_tempPANID
 18101  002A20  C0DC  F15F         	movff	_myPANID+1,_tempPANID+1
 18102                           
 18103                           ; BSR set to: 1
 18104                           ;miwi_mesh.c: 1468: myParent = AddNodeToNetworkTable();
 18105  002A24  ECC9  F038         	call	_AddNodeToNetworkTable	;wreg free
 18106  002A28  0100               	movlb	0	; () banked
 18107  002A2A  6FD9               	movwf	_myParent& (0+255),b
 18108                           
 18109                           ; BSR set to: 0
 18110                           ;miwi_mesh.c: 1470: IncomingFrameCounter[myParent].Val = 0;
 18111  002A2C  0100               	movlb	0	; () banked
 18112  002A2E  51D9               	movf	_myParent& (0+255),w,b
 18113  002A30  0D04               	mullw	4
 18114  002A32  0E00               	movlw	low _IncomingFrameCounter
 18115  002A34  24F3               	addwf	prodl,w,c
 18116  002A36  6ED9               	movwf	fsr2l,c
 18117  002A38  0E02               	movlw	high _IncomingFrameCounter
 18118  002A3A  20F4               	addwfc	prodh,w,c
 18119  002A3C  6EDA               	movwf	fsr2h,c
 18120  002A3E  6ADE               	clrf	postinc2,c
 18121  002A40  6ADE               	clrf	postinc2,c
 18122  002A42  6ADE               	clrf	postinc2,c
 18123  002A44  6ADD               	clrf	postdec2,c
 18124                           
 18125                           ;miwi_mesh.c: 1490: ;
 18126                           ;miwi_mesh.c: 1491: }
 18127  002A46  D099               	goto	l601
 18128  002A48                     l654:
 18129                           
 18130                           ;miwi_mesh.c: 1492: else
 18131                           ;miwi_mesh.c: 1493: {
 18132                           ;miwi_mesh.c: 1495: myParent = 0xFF;
 18133  002A48  0100               	movlb	0	; () banked
 18134  002A4A  69D9               	setf	_myParent& (0+255),b
 18135                           
 18136                           ;miwi_mesh.c: 1496: myPANID.Val = 0xFFFF;
 18137  002A4C  0100               	movlb	0	; () banked
 18138  002A4E  69DB               	setf	_myPANID& (0+255),b
 18139  002A50  69DC               	setf	(_myPANID+1)& (0+255),b
 18140                           
 18141                           ;miwi_mesh.c: 1497: tempShortAddress.Val = 0xFFFF;
 18142  002A52  0101               	movlb	1	; () banked
 18143  002A54  69D0               	setf	_tempShortAddress& (0+255),b
 18144  002A56  69D1               	setf	(_tempShortAddress+1)& (0+255),b
 18145                           
 18146                           ; BSR set to: 1
 18147                           ;miwi_mesh.c: 1498: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 18148  002A58  0ED0               	movlw	low _tempShortAddress
 18149  002A5A  0100               	movlb	0	; () banked
 18150  002A5C  6F81               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18151  002A5E  0E01               	movlw	high _tempShortAddress
 18152  002A60  0100               	movlb	0	; () banked
 18153  002A62  6F82               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18154  002A64  0EDB               	movlw	low _myPANID
 18155  002A66  0100               	movlb	0	; () banked
 18156  002A68  6F83               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18157  002A6A  0E00               	movlw	high _myPANID
 18158  002A6C  0100               	movlb	0	; () banked
 18159  002A6E  6F84               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18160  002A70  EC21  F046         	call	_MiMAC_SetAltAddress	;wreg free
 18161                           
 18162                           ;miwi_mesh.c: 1504: }
 18163                           ;miwi_mesh.c: 1505: }
 18164                           ;miwi_mesh.c: 1506: break;
 18165  002A74  D082               	goto	l601
 18166  002A76                     l11786:
 18167                           
 18168                           ;miwi_mesh.c: 1510: {
 18169                           ;miwi_mesh.c: 1511: uint8_t cIndex;
 18170                           ;miwi_mesh.c: 1526: {
 18171                           ;miwi_mesh.c: 1527: for(i = 0; i < 4; i++)
 18172  002A76  0E00               	movlw	0
 18173  002A78  0101               	movlb	1	; () banked
 18174  002A7A  6FE7               	movwf	MiWiTasks@i& (0+255),b
 18175  002A7C                     l11788:
 18176                           
 18177                           ; BSR set to: 1
 18178  002A7C  0E03               	movlw	3
 18179  002A7E  0101               	movlb	1	; () banked
 18180  002A80  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 18181  002A82  D001               	goto	l11792
 18182  002A84  D017               	goto	l11798
 18183  002A86                     l11792:
 18184                           
 18185                           ; BSR set to: 1
 18186                           ;miwi_mesh.c: 1528: {
 18187                           ;miwi_mesh.c: 1529: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18188  002A86  0101               	movlb	1	; () banked
 18189  002A88  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18190  002A8A  0D01               	mullw	1
 18191  002A8C  50F3               	movf	prodl,w,c
 18192  002A8E  2435               	addwf	_MACRxPacket+1,w,c
 18193  002A90  6ED9               	movwf	fsr2l,c
 18194  002A92  50F4               	movf	prodh,w,c
 18195  002A94  2036               	addwfc	_MACRxPacket+2,w,c
 18196  002A96  6EDA               	movwf	fsr2h,c
 18197  002A98  0101               	movlb	1	; () banked
 18198  002A9A  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18199  002A9C  0D01               	mullw	1
 18200  002A9E  0E4E               	movlw	low _tempLongAddress
 18201  002AA0  24F3               	addwf	prodl,w,c
 18202  002AA2  6EE1               	movwf	fsr1l,c
 18203  002AA4  0E01               	movlw	high _tempLongAddress
 18204  002AA6  20F4               	addwfc	prodh,w,c
 18205  002AA8  6EE2               	movwf	fsr1h,c
 18206  002AAA  CFDF FFE7          	movff	indf2,indf1
 18207                           
 18208                           ; BSR set to: 1
 18209  002AAE  0101               	movlb	1	; () banked
 18210  002AB0  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 18211  002AB2  D7E4               	goto	l11788
 18212  002AB4                     l11798:
 18213                           
 18214                           ; BSR set to: 1
 18215                           ;miwi_mesh.c: 1530: }
 18216                           ;miwi_mesh.c: 1531: if( (cIndex = SearchForLongAddress()) == 0xFF )
 18217  002AB4  EC4C  F03C         	call	_SearchForLongAddress	;wreg free
 18218  002AB8  0101               	movlb	1	; () banked
 18219  002ABA  6FD7               	movwf	MiWiTasks@cIndex& (0+255),b
 18220  002ABC  0101               	movlb	1	; () banked
 18221  002ABE  29D7               	incf	MiWiTasks@cIndex& (0+255),w,b
 18222  002AC0  B4D8               	btfsc	status,2,c
 18223  002AC2  D05B               	goto	l601
 18224                           
 18225                           ; BSR set to: 1
 18226                           ;miwi_mesh.c: 1534: }
 18227                           ;miwi_mesh.c: 1535: }
 18228                           ;miwi_mesh.c: 1590: if( ConnectionTable[cIndex].status.bits.isFamily )
 18229                           
 18230                           ; BSR set to: 1
 18231                           
 18232                           ; BSR set to: 1
 18233                           ;miwi_mesh.c: 1532: {
 18234                           ;miwi_mesh.c: 1533: break;
 18235  002AC4  0101               	movlb	1	; () banked
 18236  002AC6  51D7               	movf	MiWiTasks@cIndex& (0+255),w,b
 18237  002AC8  0D09               	mullw	9
 18238  002ACA  0E08               	movlw	8
 18239  002ACC  26F3               	addwf	prodl,f,c
 18240  002ACE  0E00               	movlw	0
 18241  002AD0  22F4               	addwfc	prodh,f,c
 18242  002AD2  0E46               	movlw	low _ConnectionTable
 18243  002AD4  24F3               	addwf	prodl,w,c
 18244  002AD6  6ED9               	movwf	fsr2l,c
 18245  002AD8  0E02               	movlw	high _ConnectionTable
 18246  002ADA  20F4               	addwfc	prodh,w,c
 18247  002ADC  6EDA               	movwf	fsr2h,c
 18248  002ADE  0102               	movlb	2	; () banked
 18249  002AE0  AADF               	btfss	indf2,5,c
 18250  002AE2  D04B               	goto	l601
 18251                           
 18252                           ; BSR set to: 2
 18253                           ;miwi_mesh.c: 1591: {
 18254                           ;miwi_mesh.c: 1592: for(i = 0; i < 10; i++)
 18255  002AE4  0E00               	movlw	0
 18256  002AE6  0101               	movlb	1	; () banked
 18257  002AE8  6FE7               	movwf	MiWiTasks@i& (0+255),b
 18258  002AEA                     l11806:
 18259                           
 18260                           ; BSR set to: 1
 18261  002AEA  0E09               	movlw	9
 18262  002AEC  0101               	movlb	1	; () banked
 18263  002AEE  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 18264  002AF0  D001               	goto	l11810
 18265  002AF2  D012               	goto	l667
 18266  002AF4                     l11810:
 18267                           
 18268                           ; BSR set to: 1
 18269                           ;miwi_mesh.c: 1593: {
 18270                           ;miwi_mesh.c: 1594: ConnectionTable[i].status.Val = 0;
 18271  002AF4  0101               	movlb	1	; () banked
 18272  002AF6  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18273  002AF8  0D09               	mullw	9
 18274  002AFA  0E08               	movlw	8
 18275  002AFC  26F3               	addwf	prodl,f,c
 18276  002AFE  0E00               	movlw	0
 18277  002B00  22F4               	addwfc	prodh,f,c
 18278  002B02  0E46               	movlw	low _ConnectionTable
 18279  002B04  24F3               	addwf	prodl,w,c
 18280  002B06  6ED9               	movwf	fsr2l,c
 18281  002B08  0E02               	movlw	high _ConnectionTable
 18282  002B0A  20F4               	addwfc	prodh,w,c
 18283  002B0C  6EDA               	movwf	fsr2h,c
 18284  002B0E  0E00               	movlw	0
 18285  002B10  6EDF               	movwf	indf2,c
 18286                           
 18287                           ; BSR set to: 1
 18288  002B12  0101               	movlb	1	; () banked
 18289  002B14  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 18290  002B16  D7E9               	goto	l11806
 18291  002B18                     l667:
 18292                           
 18293                           ; BSR set to: 1
 18294                           ;miwi_mesh.c: 1595: }
 18295                           ;miwi_mesh.c: 1596: myParent = 0xFF;
 18296  002B18  0100               	movlb	0	; () banked
 18297  002B1A  69D9               	setf	_myParent& (0+255),b
 18298                           
 18299                           ;miwi_mesh.c: 1597: myShortAddress.Val = 0xFFFF;
 18300  002B1C  0100               	movlb	0	; () banked
 18301  002B1E  69DD               	setf	_myShortAddress& (0+255),b
 18302  002B20  69DE               	setf	(_myShortAddress+1)& (0+255),b
 18303                           
 18304                           ;miwi_mesh.c: 1598: myPANID.Val = 0xFFFF;
 18305  002B22  0100               	movlb	0	; () banked
 18306  002B24  69DB               	setf	_myPANID& (0+255),b
 18307  002B26  69DC               	setf	(_myPANID+1)& (0+255),b
 18308                           
 18309                           ; BSR set to: 0
 18310                           ;miwi_mesh.c: 1599: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 18311  002B28  0EDD               	movlw	low _myShortAddress
 18312  002B2A  0100               	movlb	0	; () banked
 18313  002B2C  6F81               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18314  002B2E  0E00               	movlw	high _myShortAddress
 18315  002B30  0100               	movlb	0	; () banked
 18316  002B32  6F82               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18317  002B34  0EDB               	movlw	low _myPANID
 18318  002B36  0100               	movlb	0	; () banked
 18319  002B38  6F83               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18320  002B3A  0E00               	movlw	high _myPANID
 18321  002B3C  0100               	movlb	0	; () banked
 18322  002B3E  6F84               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18323  002B40  EC21  F046         	call	_MiMAC_SetAltAddress	;wreg free
 18324                           
 18325                           ;miwi_mesh.c: 1600: MiWiStateMachine.bits.memberOfNetwork = 0;
 18326  002B44  0100               	movlb	0	; () banked
 18327  002B46  93D4               	bcf	_MiWiStateMachine& (0+255),1,b
 18328                           
 18329                           ; BSR set to: 0
 18330                           ;miwi_mesh.c: 1763: }
 18331                           
 18332                           ; BSR set to: 0
 18333                           ;miwi_mesh.c: 1762: break;
 18334                           
 18335                           ;miwi_mesh.c: 1761: default:
 18336                           
 18337                           ; BSR set to: 0
 18338                           ;miwi_mesh.c: 1606: }
 18339                           ;miwi_mesh.c: 1609: }
 18340                           ;miwi_mesh.c: 1610: break;
 18341  002B48  D018               	goto	l601
 18342  002B4A                     l11822:
 18343  002B4A  C037  FFD9         	movff	_MACRxPacket+3,fsr2l
 18344  002B4E  C038  FFDA         	movff	_MACRxPacket+4,fsr2h
 18345  002B52  50DF               	movf	indf2,w,c
 18346                           
 18347                           ; Switch size 1, requested type "space"
 18348                           ; Number of cases is 2, Range of values is 2 to 3
 18349                           ; switch strategies available:
 18350                           ; Name         Instructions Cycles
 18351                           ; simple_byte            7     4 (average)
 18352                           ;	Chosen strategy is simple_byte
 18353  002B54  0A02               	xorlw	2	; case 2
 18354  002B56  B4D8               	btfsc	status,2,c
 18355  002B58  D707               	goto	l11750
 18356  002B5A  0A01               	xorlw	1	; case 3
 18357  002B5C  B4D8               	btfsc	status,2,c
 18358  002B5E  D78B               	goto	l11786
 18359                           
 18360                           ;miwi_mesh.c: 1769: }
 18361                           
 18362                           ;miwi_mesh.c: 1767: break;
 18363                           
 18364                           ;miwi_mesh.c: 1766: default:
 18365                           
 18366                           ;miwi_mesh.c: 1764: break;
 18367  002B60  D00C               	goto	l601
 18368  002B62                     l11826:
 18369  002B62  5034               	movf	_MACRxPacket,w,c
 18370  002B64  0B03               	andlw	3
 18371                           
 18372                           ; Switch size 1, requested type "space"
 18373                           ; Number of cases is 3, Range of values is 0 to 3
 18374                           ; switch strategies available:
 18375                           ; Name         Instructions Cycles
 18376                           ; simple_byte           10     6 (average)
 18377                           ;	Chosen strategy is simple_byte
 18378  002B66  0A00               	xorlw	0	; case 0
 18379  002B68  B4D8               	btfsc	status,2,c
 18380  002B6A  EFD2  F010         	goto	l11508
 18381  002B6E  0A01               	xorlw	1	; case 1
 18382  002B70  B4D8               	btfsc	status,2,c
 18383  002B72  D7EB               	goto	l11822
 18384  002B74  0A02               	xorlw	2	; case 3
 18385  002B76  B4D8               	btfsc	status,2,c
 18386  002B78  D5A0               	goto	l11702
 18387  002B7A                     l601:
 18388                           
 18389                           ;miwi_mesh.c: 1771: if( MiWiStateMachine.bits.RxHasUserData == 0 )
 18390  002B7A  0100               	movlb	0	; () banked
 18391  002B7C  A5D4               	btfss	_MiWiStateMachine& (0+255),2,b
 18392                           
 18393                           ; BSR set to: 0
 18394                           ;miwi_mesh.c: 1772: {
 18395                           ;miwi_mesh.c: 1773: MiMAC_DiscardPacket();
 18396  002B7E  ECAE  F045         	call	_MiMAC_DiscardPacket	;wreg free
 18397  002B82                     l11830:
 18398                           
 18399                           ;miwi_mesh.c: 1774: }
 18400                           ;miwi_mesh.c: 1775: }
 18401                           ;miwi_mesh.c: 1777: t1 = MiWi_TickGet();
 18402  002B82  EC57  F042         	call	_MiWi_TickGet	;wreg free
 18403  002B86  C081  F1D8         	movff	?_MiWi_TickGet,MiWiTasks@t1
 18404  002B8A  C082  F1D9         	movff	?_MiWi_TickGet+1,MiWiTasks@t1+1
 18405  002B8E  C083  F1DA         	movff	?_MiWi_TickGet+2,MiWiTasks@t1+2
 18406  002B92  C084  F1DB         	movff	?_MiWi_TickGet+3,MiWiTasks@t1+3
 18407                           
 18408                           ;miwi_mesh.c: 1844: for(i = 0; i < 4; i++)
 18409  002B96  0E00               	movlw	0
 18410  002B98  0101               	movlb	1	; () banked
 18411  002B9A  6FE7               	movwf	MiWiTasks@i& (0+255),b
 18412  002B9C                     l11834:
 18413                           
 18414                           ; BSR set to: 1
 18415  002B9C  0E03               	movlw	3
 18416  002B9E  0101               	movlb	1	; () banked
 18417  002BA0  65E7               	cpfsgt	MiWiTasks@i& (0+255),b
 18418  002BA2  D001               	goto	l11838
 18419  002BA4  D067               	goto	l672
 18420  002BA6                     l11838:
 18421                           
 18422                           ; BSR set to: 1
 18423                           ;miwi_mesh.c: 1845: {
 18424                           ;miwi_mesh.c: 1846: if( BroadcastRecords[i].RxCounter > 0 )
 18425  002BA6  0101               	movlb	1	; () banked
 18426  002BA8  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18427  002BAA  0D08               	mullw	8
 18428  002BAC  0E03               	movlw	3
 18429  002BAE  26F3               	addwf	prodl,f,c
 18430  002BB0  0E00               	movlw	0
 18431  002BB2  22F4               	addwfc	prodh,f,c
 18432  002BB4  0E00               	movlw	low _BroadcastRecords
 18433  002BB6  24F3               	addwf	prodl,w,c
 18434  002BB8  6ED9               	movwf	fsr2l,c
 18435  002BBA  0E01               	movlw	high _BroadcastRecords
 18436  002BBC  20F4               	addwfc	prodh,w,c
 18437  002BBE  6EDA               	movwf	fsr2h,c
 18438  002BC0  50DF               	movf	indf2,w,c
 18439  002BC2  B4D8               	btfsc	status,2,c
 18440  002BC4  D054               	goto	l11844
 18441                           
 18442                           ; BSR set to: 1
 18443                           ;miwi_mesh.c: 1847: {
 18444                           ;miwi_mesh.c: 1848: if( (t1.Val - BroadcastRecords[i].StartTick.Val) > (((uint32_t)(1600
      +                          0000)/32)) )
 18445  002BC6  0101               	movlb	1	; () banked
 18446  002BC8  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18447  002BCA  0D08               	mullw	8
 18448  002BCC  0E04               	movlw	4
 18449  002BCE  26F3               	addwf	prodl,f,c
 18450  002BD0  0E00               	movlw	0
 18451  002BD2  22F4               	addwfc	prodh,f,c
 18452  002BD4  0E00               	movlw	low _BroadcastRecords
 18453  002BD6  24F3               	addwf	prodl,w,c
 18454  002BD8  6ED9               	movwf	fsr2l,c
 18455  002BDA  0E01               	movlw	high _BroadcastRecords
 18456  002BDC  20F4               	addwfc	prodh,w,c
 18457  002BDE  6EDA               	movwf	fsr2h,c
 18458  002BE0  CFDE F0C8          	movff	postinc2,??_MiWiTasks
 18459  002BE4  CFDE F0C9          	movff	postinc2,??_MiWiTasks+1
 18460  002BE8  CFDE F0CA          	movff	postinc2,??_MiWiTasks+2
 18461  002BEC  CFDE F0CB          	movff	postinc2,??_MiWiTasks+3
 18462  002BF0  0100               	movlb	0	; () banked
 18463  002BF2  1FC8               	comf	??_MiWiTasks& (0+255),f,b
 18464  002BF4  1FC9               	comf	(??_MiWiTasks+1)& (0+255),f,b
 18465  002BF6  1FCA               	comf	(??_MiWiTasks+2)& (0+255),f,b
 18466  002BF8  1FCB               	comf	(??_MiWiTasks+3)& (0+255),f,b
 18467  002BFA  2BC8               	incf	??_MiWiTasks& (0+255),f,b
 18468  002BFC  0E00               	movlw	0
 18469  002BFE  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18470  002C00  23CA               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 18471  002C02  23CB               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 18472  002C04  0101               	movlb	1	; () banked
 18473  002C06  51D8               	movf	MiWiTasks@t1& (0+255),w,b
 18474  002C08  0100               	movlb	0	; () banked
 18475  002C0A  25C8               	addwf	??_MiWiTasks& (0+255),w,b
 18476  002C0C  0100               	movlb	0	; () banked
 18477  002C0E  6FCC               	movwf	(??_MiWiTasks+4)& (0+255),b
 18478  002C10  0101               	movlb	1	; () banked
 18479  002C12  51D9               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 18480  002C14  0100               	movlb	0	; () banked
 18481  002C16  21C9               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 18482  002C18  0100               	movlb	0	; () banked
 18483  002C1A  6FCD               	movwf	(??_MiWiTasks+5)& (0+255),b
 18484  002C1C  0101               	movlb	1	; () banked
 18485  002C1E  51DA               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 18486  002C20  0100               	movlb	0	; () banked
 18487  002C22  21CA               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 18488  002C24  0100               	movlb	0	; () banked
 18489  002C26  6FCE               	movwf	(??_MiWiTasks+6)& (0+255),b
 18490  002C28  0101               	movlb	1	; () banked
 18491  002C2A  51DB               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 18492  002C2C  0100               	movlb	0	; () banked
 18493  002C2E  21CB               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 18494  002C30  0100               	movlb	0	; () banked
 18495  002C32  6FCF               	movwf	(??_MiWiTasks+7)& (0+255),b
 18496  002C34  0100               	movlb	0	; () banked
 18497  002C36  51CF               	movf	(??_MiWiTasks+7)& (0+255),w,b
 18498  002C38  E10B               	bnz	u13590
 18499  002C3A  0E21               	movlw	33
 18500  002C3C  0100               	movlb	0	; () banked
 18501  002C3E  5DCC               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 18502  002C40  0EA1               	movlw	161
 18503  002C42  0100               	movlb	0	; () banked
 18504  002C44  59CD               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 18505  002C46  0E07               	movlw	7
 18506  002C48  0100               	movlb	0	; () banked
 18507  002C4A  59CE               	subwfb	(??_MiWiTasks+6)& (0+255),w,b
 18508  002C4C  A0D8               	btfss	status,0,c
 18509  002C4E  D00F               	goto	l11844
 18510  002C50                     u13590:
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;miwi_mesh.c: 1849: {
 18514                           ;miwi_mesh.c: 1850: BroadcastRecords[i].RxCounter = 0;
 18515  002C50  0101               	movlb	1	; () banked
 18516  002C52  51E7               	movf	MiWiTasks@i& (0+255),w,b
 18517  002C54  0D08               	mullw	8
 18518  002C56  0E03               	movlw	3
 18519  002C58  26F3               	addwf	prodl,f,c
 18520  002C5A  0E00               	movlw	0
 18521  002C5C  22F4               	addwfc	prodh,f,c
 18522  002C5E  0E00               	movlw	low _BroadcastRecords
 18523  002C60  24F3               	addwf	prodl,w,c
 18524  002C62  6ED9               	movwf	fsr2l,c
 18525  002C64  0E01               	movlw	high _BroadcastRecords
 18526  002C66  20F4               	addwfc	prodh,w,c
 18527  002C68  6EDA               	movwf	fsr2h,c
 18528  002C6A  0E00               	movlw	0
 18529  002C6C  6EDF               	movwf	indf2,c
 18530  002C6E                     l11844:
 18531  002C6E  0101               	movlb	1	; () banked
 18532  002C70  2BE7               	incf	MiWiTasks@i& (0+255),f,b
 18533  002C72  D794               	goto	l11834
 18534  002C74                     l672:
 18535                           
 18536                           ; BSR set to: 1
 18537                           ;miwi_mesh.c: 1851: }
 18538                           ;miwi_mesh.c: 1852: }
 18539                           ;miwi_mesh.c: 1853: }
 18540                           ;miwi_mesh.c: 1857: if(openSocketInfo.status.bits.requestIsOpen)
 18541  002C74  0101               	movlb	1	; () banked
 18542  002C76  A320               	btfss	_openSocketInfo& (0+255),1,b
 18543  002C78  0012               	return	
 18544                           
 18545                           ; BSR set to: 1
 18546                           ;miwi_mesh.c: 1858: {
 18547                           ;miwi_mesh.c: 1859: if(openSocketInfo.status.bits.matchFound)
 18548  002C7A  0101               	movlb	1	; () banked
 18549  002C7C  B120               	btfsc	_openSocketInfo& (0+255),0,b
 18550  002C7E  0012               	return	
 18551                           
 18552                           ; BSR set to: 1
 18553                           ;miwi_mesh.c: 1894: else
 18554                           ;miwi_mesh.c: 1895: {
 18555                           ;miwi_mesh.c: 1896: t2.Val = (t1.Val - openSocketInfo.socketStart.Val);
 18556                           
 18557                           ; BSR set to: 1
 18558                           
 18559                           ; BSR set to: 1
 18560                           ;miwi_mesh.c: 1860: {
 18561                           ;miwi_mesh.c: 1893: }
 18562  002C80  C128  F0C8         	movff	_openSocketInfo+8,??_MiWiTasks
 18563  002C84  C129  F0C9         	movff	_openSocketInfo+9,??_MiWiTasks+1
 18564  002C88  C12A  F0CA         	movff	_openSocketInfo+10,??_MiWiTasks+2
 18565  002C8C  C12B  F0CB         	movff	_openSocketInfo+11,??_MiWiTasks+3
 18566  002C90  0100               	movlb	0	; () banked
 18567  002C92  1FC8               	comf	??_MiWiTasks& (0+255),f,b
 18568  002C94  1FC9               	comf	(??_MiWiTasks+1)& (0+255),f,b
 18569  002C96  1FCA               	comf	(??_MiWiTasks+2)& (0+255),f,b
 18570  002C98  1FCB               	comf	(??_MiWiTasks+3)& (0+255),f,b
 18571  002C9A  2BC8               	incf	??_MiWiTasks& (0+255),f,b
 18572  002C9C  0E00               	movlw	0
 18573  002C9E  23C9               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18574  002CA0  23CA               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 18575  002CA2  23CB               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 18576  002CA4  0101               	movlb	1	; () banked
 18577  002CA6  51D8               	movf	MiWiTasks@t1& (0+255),w,b
 18578  002CA8  0100               	movlb	0	; () banked
 18579  002CAA  25C8               	addwf	??_MiWiTasks& (0+255),w,b
 18580  002CAC  0101               	movlb	1	; () banked
 18581  002CAE  6FD3               	movwf	MiWiTasks@t2& (0+255),b
 18582  002CB0  0101               	movlb	1	; () banked
 18583  002CB2  51D9               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 18584  002CB4  0100               	movlb	0	; () banked
 18585  002CB6  21C9               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 18586  002CB8  0101               	movlb	1	; () banked
 18587  002CBA  6FD4               	movwf	(MiWiTasks@t2+1)& (0+255),b
 18588  002CBC  0101               	movlb	1	; () banked
 18589  002CBE  51DA               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 18590  002CC0  0100               	movlb	0	; () banked
 18591  002CC2  21CA               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 18592  002CC4  0101               	movlb	1	; () banked
 18593  002CC6  6FD5               	movwf	(MiWiTasks@t2+2)& (0+255),b
 18594  002CC8  0101               	movlb	1	; () banked
 18595  002CCA  51DB               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 18596  002CCC  0100               	movlb	0	; () banked
 18597  002CCE  21CB               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 18598  002CD0  0101               	movlb	1	; () banked
 18599  002CD2  6FD6               	movwf	(MiWiTasks@t2+3)& (0+255),b
 18600                           
 18601                           ;miwi_mesh.c: 1898: if(t2.Val > (((uint32_t)(16000000)/32) * 3))
 18602  002CD4  0101               	movlb	1	; () banked
 18603  002CD6  51D6               	movf	(MiWiTasks@t2+3)& (0+255),w,b
 18604  002CD8  E10B               	bnz	u13630
 18605  002CDA  0E61               	movlw	97
 18606  002CDC  0101               	movlb	1	; () banked
 18607  002CDE  5DD3               	subwf	MiWiTasks@t2& (0+255),w,b
 18608  002CE0  0EE3               	movlw	227
 18609  002CE2  0101               	movlb	1	; () banked
 18610  002CE4  59D4               	subwfb	(MiWiTasks@t2+1)& (0+255),w,b
 18611  002CE6  0E16               	movlw	22
 18612  002CE8  0101               	movlb	1	; () banked
 18613  002CEA  59D5               	subwfb	(MiWiTasks@t2+2)& (0+255),w,b
 18614  002CEC  A0D8               	btfss	status,0,c
 18615  002CEE  0012               	return	
 18616  002CF0                     u13630:
 18617                           
 18618                           ; BSR set to: 1
 18619                           ;miwi_mesh.c: 1899: {
 18620                           ;miwi_mesh.c: 1901: openSocketInfo.status.bits.requestIsOpen = 0;
 18621  002CF0  0101               	movlb	1	; () banked
 18622  002CF2  9320               	bcf	_openSocketInfo& (0+255),1,b
 18623                           
 18624                           ; BSR set to: 1
 18625                           
 18626                           ; BSR set to: 1
 18627  002CF4  0012               	return	
 18628  002CF6                     __end_of_MiWiTasks:
 18629                           	opt stack 0
 18630                           tblptru	equ	0xFF8
 18631                           tblptrh	equ	0xFF7
 18632                           tblptrl	equ	0xFF6
 18633                           tablat	equ	0xFF5
 18634                           prodh	equ	0xFF4
 18635                           prodl	equ	0xFF3
 18636                           intcon	equ	0xFF2
 18637                           intcon2	equ	0xFF1
 18638                           intcon3	equ	0xFF0
 18639                           indf0	equ	0xFEF
 18640                           postinc0	equ	0xFEE
 18641                           plusw0	equ	0xFEB
 18642                           fsr0h	equ	0xFEA
 18643                           fsr0l	equ	0xFE9
 18644                           wreg	equ	0xFE8
 18645                           indf1	equ	0xFE7
 18646                           postinc1	equ	0xFE6
 18647                           postdec1	equ	0xFE5
 18648                           fsr1h	equ	0xFE2
 18649                           fsr1l	equ	0xFE1
 18650                           indf2	equ	0xFDF
 18651                           postinc2	equ	0xFDE
 18652                           postdec2	equ	0xFDD
 18653                           plusw2	equ	0xFDB
 18654                           fsr2h	equ	0xFDA
 18655                           fsr2l	equ	0xFD9
 18656                           status	equ	0xFD8
 18657                           
 18658 ;; *************** function _MiMAC_SetAltAddress *****************
 18659 ;; Defined at:
 18660 ;;		line 445 in file "src/miwi/drv_mrf_miwi_89xa.c"
 18661 ;; Parameters:    Size  Location     Type
 18662 ;;  Address         2   33[BANK0 ] PTR unsigned char 
 18663 ;;		 -> tempShortAddress(2), myShortAddress(2), 
 18664 ;;  PANID           2   35[BANK0 ] PTR unsigned char 
 18665 ;;		 -> myPANID(2), 
 18666 ;; Auto vars:     Size  Location     Type
 18667 ;;		None
 18668 ;; Return value:  Size  Location     Type
 18669 ;;                  1    wreg      unsigned char 
 18670 ;; Registers used:
 18671 ;;		None
 18672 ;; Tracked objects:
 18673 ;;		On entry : 0/0
 18674 ;;		On exit  : 0/0
 18675 ;;		Unchanged: 0/0
 18676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18677 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18680 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18681 ;;Total ram usage:        4 bytes
 18682 ;; Hardware stack levels used:    1
 18683 ;; Hardware stack levels required when called:    7
 18684 ;; This function calls:
 18685 ;;		Nothing
 18686 ;; This function is called by:
 18687 ;;		_MiWiTasks
 18688 ;;		_MiApp_ProtocolInit
 18689 ;;		_MiApp_EstablishConnection
 18690 ;;		_MiApp_RemoveConnection
 18691 ;; This function uses a non-reentrant model
 18692 ;;
 18693                           
 18694                           	psect	text55
 18695  008C42                     __ptext55:
 18696                           	opt stack 0
 18697  008C42                     _MiMAC_SetAltAddress:
 18698                           	opt stack 18
 18699                           
 18700                           ;drv_mrf_miwi_89xa.c: 447: return 0;
 18701                           ;	Return value of _MiMAC_SetAltAddress is never used
 18702                           
 18703                           ;incstack = 0
 18704  008C42  0012               	return		;funcret
 18705  008C44                     __end_of_MiMAC_SetAltAddress:
 18706                           	opt stack 0
 18707                           tblptru	equ	0xFF8
 18708                           tblptrh	equ	0xFF7
 18709                           tblptrl	equ	0xFF6
 18710                           tablat	equ	0xFF5
 18711                           prodh	equ	0xFF4
 18712                           prodl	equ	0xFF3
 18713                           intcon	equ	0xFF2
 18714                           intcon2	equ	0xFF1
 18715                           intcon3	equ	0xFF0
 18716                           indf0	equ	0xFEF
 18717                           postinc0	equ	0xFEE
 18718                           plusw0	equ	0xFEB
 18719                           fsr0h	equ	0xFEA
 18720                           fsr0l	equ	0xFE9
 18721                           wreg	equ	0xFE8
 18722                           indf1	equ	0xFE7
 18723                           postinc1	equ	0xFE6
 18724                           postdec1	equ	0xFE5
 18725                           fsr1h	equ	0xFE2
 18726                           fsr1l	equ	0xFE1
 18727                           indf2	equ	0xFDF
 18728                           postinc2	equ	0xFDE
 18729                           postdec2	equ	0xFDD
 18730                           plusw2	equ	0xFDB
 18731                           fsr2h	equ	0xFDA
 18732                           fsr2l	equ	0xFD9
 18733                           status	equ	0xFD8
 18734                           
 18735 ;; *************** function _MiMAC_SendPacket *****************
 18736 ;; Defined at:
 18737 ;;		line 735 in file "src/miwi/drv_mrf_miwi_89xa.c"
 18738 ;; Parameters:    Size  Location     Type
 18739 ;;  transParam      3   80[BANK0 ] struct .
 18740 ;;  MACPayload      2   83[BANK0 ] PTR unsigned char 
 18741 ;;		 -> TxBuffer(43), 
 18742 ;;  MACPayloadLe    1   85[BANK0 ] unsigned char 
 18743 ;; Auto vars:     Size  Location     Type
 18744 ;;  headerLen       1   87[BANK0 ] unsigned char 
 18745 ;;  i               1   89[BANK0 ] unsigned char 
 18746 ;;  TxIndex         1   88[BANK0 ] unsigned char 
 18747 ;; Return value:  Size  Location     Type
 18748 ;;                  1    wreg      unsigned char 
 18749 ;; Registers used:
 18750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18751 ;; Tracked objects:
 18752 ;;		On entry : 0/0
 18753 ;;		On exit  : 0/0
 18754 ;;		Unchanged: 0/0
 18755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18756 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18757 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18758 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18759 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18760 ;;Total ram usage:       10 bytes
 18761 ;; Hardware stack levels used:    1
 18762 ;; Hardware stack levels required when called:   11
 18763 ;; This function calls:
 18764 ;;		_CCM_Enc
 18765 ;;		_TxPacket
 18766 ;; This function is called by:
 18767 ;;		_MiWiTasks
 18768 ;;		_SendMACPacket
 18769 ;;		_MiApp_UnicastAddress
 18770 ;;		_MiApp_BroadcastPacket
 18771 ;;		_MiApp_UnicastConnection
 18772 ;;		_UnicastShortAddress
 18773 ;;		_MiApp_RemoveConnection
 18774 ;; This function uses a non-reentrant model
 18775 ;;
 18776                           
 18777                           	psect	text56
 18778  0056DE                     __ptext56:
 18779                           	opt stack 0
 18780  0056DE                     _MiMAC_SendPacket:
 18781                           	opt stack 16
 18782                           
 18783                           ;drv_mrf_miwi_89xa.c: 739: uint8_t i;
 18784                           ;drv_mrf_miwi_89xa.c: 740: uint8_t TxIndex;
 18785                           ;drv_mrf_miwi_89xa.c: 742: if( MACPayloadLen > 32 )
 18786                           
 18787                           ;incstack = 0
 18788  0056DE  0E20               	movlw	32
 18789  0056E0  0100               	movlb	0	; () banked
 18790  0056E2  65B5               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 18791  0056E4  D002               	goto	l11226
 18792                           
 18793                           ; BSR set to: 0
 18794                           ;drv_mrf_miwi_89xa.c: 743: {
 18795                           ;drv_mrf_miwi_89xa.c: 744: return 0;
 18796  0056E6  0E00               	movlw	0
 18797                           
 18798                           ; BSR set to: 0
 18799  0056E8  0012               	return	
 18800  0056EA                     l11226:
 18801                           
 18802                           ; BSR set to: 0
 18803                           ;drv_mrf_miwi_89xa.c: 745: }
 18804                           ;drv_mrf_miwi_89xa.c: 750: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 18805  0056EA  0100               	movlb	0	; () banked
 18806  0056EC  B5B0               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 18807  0056EE  D004               	goto	u12510
 18808  0056F0  0100               	movlb	0	; () banked
 18809  0056F2  6BB6               	clrf	??_MiMAC_SendPacket& (0+255),b
 18810  0056F4  2BB6               	incf	??_MiMAC_SendPacket& (0+255),f,b
 18811  0056F6  D002               	goto	u12528
 18812  0056F8                     u12510:
 18813  0056F8  0100               	movlb	0	; () banked
 18814  0056FA  6BB6               	clrf	??_MiMAC_SendPacket& (0+255),b
 18815  0056FC                     u12528:
 18816  0056FC  0100               	movlb	0	; () banked
 18817  0056FE  3BB6               	swapf	??_MiMAC_SendPacket& (0+255),f,b
 18818  005700  47B6               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 18819  005702  47B6               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 18820  005704  0100               	movlb	0	; () banked
 18821  005706  51B0               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 18822  005708  0100               	movlb	0	; () banked
 18823  00570A  19B6               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 18824  00570C  0BBF               	andlw	-65
 18825  00570E  19B6               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 18826  005710  0100               	movlb	0	; () banked
 18827  005712  6FB0               	movwf	MiMAC_SendPacket@transParam& (0+255),b
 18828                           
 18829                           ;drv_mrf_miwi_89xa.c: 757: if( transParam.flags.bits.packetType == 0x01 )
 18830  005714  0100               	movlb	0	; () banked
 18831  005716  51B0               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 18832  005718  0B03               	andlw	3
 18833  00571A  06E8               	decf	wreg,f,c
 18834  00571C  A4D8               	btfss	status,2,c
 18835  00571E  D002               	goto	l318
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;drv_mrf_miwi_89xa.c: 758: {
 18839                           ;drv_mrf_miwi_89xa.c: 759: transParam.flags.bits.sourcePrsnt = 1;
 18840  005720  0100               	movlb	0	; () banked
 18841  005722  8FB0               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 18842  005724                     l318:
 18843                           
 18844                           ; BSR set to: 0
 18845                           ;drv_mrf_miwi_89xa.c: 760: }
 18846                           ;drv_mrf_miwi_89xa.c: 762: MACTxBuffer[0] = transParam.flags.Val;
 18847  005724  C0B0  F2A0         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 18848                           
 18849                           ;drv_mrf_miwi_89xa.c: 763: MACTxBuffer[1] = MACSeq++;
 18850  005728  C041  F2A1         	movff	_MACSeq,_MACTxBuffer+1	;volatile
 18851                           
 18852                           ; BSR set to: 0
 18853  00572C  2A41               	incf	_MACSeq,f,c
 18854                           
 18855                           ; BSR set to: 0
 18856                           ;drv_mrf_miwi_89xa.c: 766: TxIndex = 2;
 18857  00572E  0E02               	movlw	2
 18858  005730  0100               	movlb	0	; () banked
 18859  005732  6FB8               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
 18860                           
 18861                           ; BSR set to: 0
 18862                           ;drv_mrf_miwi_89xa.c: 768: if( transParam.flags.bits.destPrsnt )
 18863  005734  0100               	movlb	0	; () banked
 18864  005736  ADB0               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 18865  005738  D02A               	goto	l323
 18866                           
 18867                           ; BSR set to: 0
 18868                           ;drv_mrf_miwi_89xa.c: 769: {
 18869                           ;drv_mrf_miwi_89xa.c: 770: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 18870  00573A  0E00               	movlw	0
 18871  00573C  0100               	movlb	0	; () banked
 18872  00573E  6FB9               	movwf	MiMAC_SendPacket@i& (0+255),b
 18873  005740  D01A               	goto	l11244
 18874  005742                     l11238:
 18875                           
 18876                           ; BSR set to: 0
 18877                           ;drv_mrf_miwi_89xa.c: 771: {
 18878                           ;drv_mrf_miwi_89xa.c: 772: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 18879  005742  0100               	movlb	0	; () banked
 18880  005744  51B9               	movf	MiMAC_SendPacket@i& (0+255),w,b
 18881  005746  0D01               	mullw	1
 18882  005748  50F3               	movf	prodl,w,c
 18883  00574A  0100               	movlb	0	; () banked
 18884  00574C  25B1               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 18885  00574E  6ED9               	movwf	fsr2l,c
 18886  005750  50F4               	movf	prodh,w,c
 18887  005752  0100               	movlb	0	; () banked
 18888  005754  21B2               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 18889  005756  6EDA               	movwf	fsr2h,c
 18890  005758  0100               	movlb	0	; () banked
 18891  00575A  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 18892  00575C  0D01               	mullw	1
 18893  00575E  0EA0               	movlw	low _MACTxBuffer
 18894  005760  24F3               	addwf	prodl,w,c
 18895  005762  6EE1               	movwf	fsr1l,c
 18896  005764  0E02               	movlw	high _MACTxBuffer
 18897  005766  20F4               	addwfc	prodh,w,c
 18898  005768  6EE2               	movwf	fsr1h,c
 18899  00576A  CFDF FFE7          	movff	indf2,indf1
 18900                           
 18901                           ; BSR set to: 0
 18902  00576E  0100               	movlb	0	; () banked
 18903  005770  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 18904                           
 18905                           ; BSR set to: 0
 18906  005772  0100               	movlb	0	; () banked
 18907  005774  2BB9               	incf	MiMAC_SendPacket@i& (0+255),f,b
 18908  005776                     l11244:
 18909                           
 18910                           ; BSR set to: 0
 18911  005776  303C               	rrcf	_MACInitParams,w,c
 18912  005778  32E8               	rrcf	wreg,f,c
 18913  00577A  32E8               	rrcf	wreg,f,c
 18914  00577C  0B0F               	andlw	15
 18915  00577E  0100               	movlb	0	; () banked
 18916  005780  6FB6               	movwf	??_MiMAC_SendPacket& (0+255),b
 18917  005782  0100               	movlb	0	; () banked
 18918  005784  51B6               	movf	??_MiMAC_SendPacket& (0+255),w,b
 18919  005786  0100               	movlb	0	; () banked
 18920  005788  5DB9               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 18921  00578A  A0D8               	btfss	status,0,c
 18922  00578C  D7DA               	goto	l11238
 18923  00578E                     l323:
 18924                           
 18925                           ; BSR set to: 0
 18926                           ;drv_mrf_miwi_89xa.c: 778: }
 18927                           ;drv_mrf_miwi_89xa.c: 780: if( transParam.flags.bits.sourcePrsnt )
 18928  00578E  0100               	movlb	0	; () banked
 18929  005790  AFB0               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 18930  005792  D028               	goto	l324
 18931                           
 18932                           ; BSR set to: 0
 18933                           ;drv_mrf_miwi_89xa.c: 781: {
 18934                           ;drv_mrf_miwi_89xa.c: 782: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 18935  005794  0E00               	movlw	0
 18936  005796  0100               	movlb	0	; () banked
 18937  005798  6FB9               	movwf	MiMAC_SendPacket@i& (0+255),b
 18938  00579A  D018               	goto	l11254
 18939  00579C                     l11248:
 18940                           
 18941                           ; BSR set to: 0
 18942                           ;drv_mrf_miwi_89xa.c: 783: {
 18943                           ;drv_mrf_miwi_89xa.c: 784: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 18944  00579C  0100               	movlb	0	; () banked
 18945  00579E  51B9               	movf	MiMAC_SendPacket@i& (0+255),w,b
 18946  0057A0  0D01               	mullw	1
 18947  0057A2  50F3               	movf	prodl,w,c
 18948  0057A4  243D               	addwf	_MACInitParams+1,w,c
 18949  0057A6  6ED9               	movwf	fsr2l,c
 18950  0057A8  50F4               	movf	prodh,w,c
 18951  0057AA  203E               	addwfc	_MACInitParams+2,w,c
 18952  0057AC  6EDA               	movwf	fsr2h,c
 18953  0057AE  0100               	movlb	0	; () banked
 18954  0057B0  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 18955  0057B2  0D01               	mullw	1
 18956  0057B4  0EA0               	movlw	low _MACTxBuffer
 18957  0057B6  24F3               	addwf	prodl,w,c
 18958  0057B8  6EE1               	movwf	fsr1l,c
 18959  0057BA  0E02               	movlw	high _MACTxBuffer
 18960  0057BC  20F4               	addwfc	prodh,w,c
 18961  0057BE  6EE2               	movwf	fsr1h,c
 18962  0057C0  CFDF FFE7          	movff	indf2,indf1
 18963                           
 18964                           ; BSR set to: 0
 18965  0057C4  0100               	movlb	0	; () banked
 18966  0057C6  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 18967                           
 18968                           ; BSR set to: 0
 18969  0057C8  0100               	movlb	0	; () banked
 18970  0057CA  2BB9               	incf	MiMAC_SendPacket@i& (0+255),f,b
 18971  0057CC                     l11254:
 18972                           
 18973                           ; BSR set to: 0
 18974  0057CC  303C               	rrcf	_MACInitParams,w,c
 18975  0057CE  32E8               	rrcf	wreg,f,c
 18976  0057D0  32E8               	rrcf	wreg,f,c
 18977  0057D2  0B0F               	andlw	15
 18978  0057D4  0100               	movlb	0	; () banked
 18979  0057D6  6FB6               	movwf	??_MiMAC_SendPacket& (0+255),b
 18980  0057D8  0100               	movlb	0	; () banked
 18981  0057DA  51B6               	movf	??_MiMAC_SendPacket& (0+255),w,b
 18982  0057DC  0100               	movlb	0	; () banked
 18983  0057DE  5DB9               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 18984  0057E0  A0D8               	btfss	status,0,c
 18985  0057E2  D7DC               	goto	l11248
 18986  0057E4                     l324:
 18987                           
 18988                           ; BSR set to: 0
 18989                           ;drv_mrf_miwi_89xa.c: 785: }
 18990                           ;drv_mrf_miwi_89xa.c: 787: }
 18991                           ;drv_mrf_miwi_89xa.c: 790: if( transParam.flags.bits.secEn )
 18992  0057E4  0100               	movlb	0	; () banked
 18993  0057E6  A7B0               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 18994  0057E8  D071               	goto	l11292
 18995                           
 18996                           ; BSR set to: 0
 18997                           ;drv_mrf_miwi_89xa.c: 791: {
 18998                           ;drv_mrf_miwi_89xa.c: 793: for(i = 0; i < 4; i++)
 18999  0057EA  0E00               	movlw	0
 19000  0057EC  0100               	movlb	0	; () banked
 19001  0057EE  6FB9               	movwf	MiMAC_SendPacket@i& (0+255),b
 19002  0057F0                     l11258:
 19003                           
 19004                           ; BSR set to: 0
 19005  0057F0  0E03               	movlw	3
 19006  0057F2  0100               	movlb	0	; () banked
 19007  0057F4  65B9               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 19008  0057F6  D001               	goto	l11262
 19009  0057F8  D019               	goto	l11270
 19010  0057FA                     l11262:
 19011                           
 19012                           ; BSR set to: 0
 19013                           ;drv_mrf_miwi_89xa.c: 794: {
 19014                           ;drv_mrf_miwi_89xa.c: 795: MACTxBuffer[TxIndex++] = OutgoingFrameCounter.v[i];
 19015  0057FA  0100               	movlb	0	; () banked
 19016  0057FC  51B9               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19017  0057FE  0D01               	mullw	1
 19018  005800  0E3E               	movlw	low _OutgoingFrameCounter
 19019  005802  24F3               	addwf	prodl,w,c
 19020  005804  6ED9               	movwf	fsr2l,c
 19021  005806  0E01               	movlw	high _OutgoingFrameCounter
 19022  005808  20F4               	addwfc	prodh,w,c
 19023  00580A  6EDA               	movwf	fsr2h,c
 19024  00580C  0100               	movlb	0	; () banked
 19025  00580E  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19026  005810  0D01               	mullw	1
 19027  005812  0EA0               	movlw	low _MACTxBuffer
 19028  005814  24F3               	addwf	prodl,w,c
 19029  005816  6EE1               	movwf	fsr1l,c
 19030  005818  0E02               	movlw	high _MACTxBuffer
 19031  00581A  20F4               	addwfc	prodh,w,c
 19032  00581C  6EE2               	movwf	fsr1h,c
 19033  00581E  CFDF FFE7          	movff	indf2,indf1
 19034                           
 19035                           ; BSR set to: 0
 19036  005822  0100               	movlb	0	; () banked
 19037  005824  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19038                           
 19039                           ; BSR set to: 0
 19040  005826  0100               	movlb	0	; () banked
 19041  005828  2BB9               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19042  00582A  D7E2               	goto	l11258
 19043  00582C                     l11270:
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;drv_mrf_miwi_89xa.c: 796: }
 19047                           ;drv_mrf_miwi_89xa.c: 797: OutgoingFrameCounter.Val++;
 19048  00582C  0E01               	movlw	1
 19049  00582E  0101               	movlb	1	; () banked
 19050  005830  273E               	addwf	_OutgoingFrameCounter& (0+255),f,b
 19051  005832  0E00               	movlw	0
 19052  005834  233F               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 19053  005836  2340               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 19054  005838  2341               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 19055                           
 19056                           ; BSR set to: 1
 19057                           ;drv_mrf_miwi_89xa.c: 804: MACTxBuffer[TxIndex++] = 0x00;
 19058  00583A  0100               	movlb	0	; () banked
 19059  00583C  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19060  00583E  0D01               	mullw	1
 19061  005840  0EA0               	movlw	low _MACTxBuffer
 19062  005842  24F3               	addwf	prodl,w,c
 19063  005844  6ED9               	movwf	fsr2l,c
 19064  005846  0E02               	movlw	high _MACTxBuffer
 19065  005848  20F4               	addwfc	prodh,w,c
 19066  00584A  6EDA               	movwf	fsr2h,c
 19067  00584C  0E00               	movlw	0
 19068  00584E  6EDF               	movwf	indf2,c
 19069                           
 19070                           ; BSR set to: 0
 19071  005850  0100               	movlb	0	; () banked
 19072  005852  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19073                           
 19074                           ; BSR set to: 0
 19075                           ;drv_mrf_miwi_89xa.c: 806: {
 19076                           ;drv_mrf_miwi_89xa.c: 807: uint8_t headerLen;
 19077                           ;drv_mrf_miwi_89xa.c: 809: headerLen = TxIndex;
 19078  005854  C0B8  F0B7         	movff	MiMAC_SendPacket@TxIndex,MiMAC_SendPacket@headerLen
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;drv_mrf_miwi_89xa.c: 811: for(i = 0; i < MACPayloadLen; i++)
 19082  005858  0E00               	movlw	0
 19083  00585A  0100               	movlb	0	; () banked
 19084  00585C  6FB9               	movwf	MiMAC_SendPacket@i& (0+255),b
 19085  00585E  D01A               	goto	l11286
 19086  005860                     l11280:
 19087                           
 19088                           ; BSR set to: 0
 19089                           ;drv_mrf_miwi_89xa.c: 812: {
 19090                           ;drv_mrf_miwi_89xa.c: 813: MACTxBuffer[TxIndex++] = MACPayload[i];
 19091  005860  0100               	movlb	0	; () banked
 19092  005862  51B9               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19093  005864  0D01               	mullw	1
 19094  005866  50F3               	movf	prodl,w,c
 19095  005868  0100               	movlb	0	; () banked
 19096  00586A  25B3               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 19097  00586C  6ED9               	movwf	fsr2l,c
 19098  00586E  50F4               	movf	prodh,w,c
 19099  005870  0100               	movlb	0	; () banked
 19100  005872  21B4               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 19101  005874  6EDA               	movwf	fsr2h,c
 19102  005876  0100               	movlb	0	; () banked
 19103  005878  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19104  00587A  0D01               	mullw	1
 19105  00587C  0EA0               	movlw	low _MACTxBuffer
 19106  00587E  24F3               	addwf	prodl,w,c
 19107  005880  6EE1               	movwf	fsr1l,c
 19108  005882  0E02               	movlw	high _MACTxBuffer
 19109  005884  20F4               	addwfc	prodh,w,c
 19110  005886  6EE2               	movwf	fsr1h,c
 19111  005888  CFDF FFE7          	movff	indf2,indf1
 19112                           
 19113                           ; BSR set to: 0
 19114  00588C  0100               	movlb	0	; () banked
 19115  00588E  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19116                           
 19117                           ; BSR set to: 0
 19118  005890  0100               	movlb	0	; () banked
 19119  005892  2BB9               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19120  005894                     l11286:
 19121                           
 19122                           ; BSR set to: 0
 19123  005894  0100               	movlb	0	; () banked
 19124  005896  51B5               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 19125  005898  0100               	movlb	0	; () banked
 19126  00589A  5DB9               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19127  00589C  A0D8               	btfss	status,0,c
 19128  00589E  D7E0               	goto	l11280
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;drv_mrf_miwi_89xa.c: 814: }
 19132                           ;drv_mrf_miwi_89xa.c: 834: CCM_Enc((uint8_t *)MACTxBuffer, headerLen, MACPayloadLen, key
      +                          );
 19133                           
 19134                           ; BSR set to: 0
 19135  0058A0  0EA0               	movlw	low _MACTxBuffer
 19136  0058A2  0100               	movlb	0	; () banked
 19137  0058A4  6FA5               	movwf	CCM_Enc@text& (0+255),b
 19138  0058A6  0E02               	movlw	high _MACTxBuffer
 19139  0058A8  0100               	movlb	0	; () banked
 19140  0058AA  6FA6               	movwf	(CCM_Enc@text+1)& (0+255),b
 19141  0058AC  C0B7  F0A7         	movff	MiMAC_SendPacket@headerLen,CCM_Enc@headerLen
 19142  0058B0  C0B5  F0A8         	movff	MiMAC_SendPacket@MACPayloadLen,CCM_Enc@payloadLen
 19143  0058B4  0EC0               	movlw	low _key
 19144  0058B6  0100               	movlb	0	; () banked
 19145  0058B8  6FA9               	movwf	CCM_Enc@key& (0+255),b
 19146  0058BA  0E01               	movlw	high _key
 19147  0058BC  0100               	movlb	0	; () banked
 19148  0058BE  6FAA               	movwf	(CCM_Enc@key+1)& (0+255),b
 19149  0058C0  EC7D  F036         	call	_CCM_Enc	;wreg free
 19150                           
 19151                           ;drv_mrf_miwi_89xa.c: 835: TxIndex += 2;
 19152  0058C4  0E02               	movlw	2
 19153  0058C6  0100               	movlb	0	; () banked
 19154  0058C8  27B8               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19155                           
 19156                           ;drv_mrf_miwi_89xa.c: 842: }
 19157                           ;drv_mrf_miwi_89xa.c: 843: }
 19158  0058CA  D024               	goto	l11302
 19159  0058CC                     l11292:
 19160                           
 19161                           ; BSR set to: 0
 19162                           ;drv_mrf_miwi_89xa.c: 844: else
 19163                           ;drv_mrf_miwi_89xa.c: 848: for(i = 0; i < MACPayloadLen; i++)
 19164  0058CC  0E00               	movlw	0
 19165  0058CE  0100               	movlb	0	; () banked
 19166  0058D0  6FB9               	movwf	MiMAC_SendPacket@i& (0+255),b
 19167  0058D2  D01A               	goto	l11300
 19168  0058D4                     l11294:
 19169                           
 19170                           ; BSR set to: 0
 19171                           ;drv_mrf_miwi_89xa.c: 849: {
 19172                           ;drv_mrf_miwi_89xa.c: 850: MACTxBuffer[TxIndex++] = MACPayload[i];
 19173  0058D4  0100               	movlb	0	; () banked
 19174  0058D6  51B9               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19175  0058D8  0D01               	mullw	1
 19176  0058DA  50F3               	movf	prodl,w,c
 19177  0058DC  0100               	movlb	0	; () banked
 19178  0058DE  25B3               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 19179  0058E0  6ED9               	movwf	fsr2l,c
 19180  0058E2  50F4               	movf	prodh,w,c
 19181  0058E4  0100               	movlb	0	; () banked
 19182  0058E6  21B4               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 19183  0058E8  6EDA               	movwf	fsr2h,c
 19184  0058EA  0100               	movlb	0	; () banked
 19185  0058EC  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19186  0058EE  0D01               	mullw	1
 19187  0058F0  0EA0               	movlw	low _MACTxBuffer
 19188  0058F2  24F3               	addwf	prodl,w,c
 19189  0058F4  6EE1               	movwf	fsr1l,c
 19190  0058F6  0E02               	movlw	high _MACTxBuffer
 19191  0058F8  20F4               	addwfc	prodh,w,c
 19192  0058FA  6EE2               	movwf	fsr1h,c
 19193  0058FC  CFDF FFE7          	movff	indf2,indf1
 19194                           
 19195                           ; BSR set to: 0
 19196  005900  0100               	movlb	0	; () banked
 19197  005902  2BB8               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19198                           
 19199                           ; BSR set to: 0
 19200  005904  0100               	movlb	0	; () banked
 19201  005906  2BB9               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19202  005908                     l11300:
 19203                           
 19204                           ; BSR set to: 0
 19205  005908  0100               	movlb	0	; () banked
 19206  00590A  51B5               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 19207  00590C  0100               	movlb	0	; () banked
 19208  00590E  5DB9               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19209  005910  A0D8               	btfss	status,0,c
 19210  005912  D7E0               	goto	l11294
 19211  005914                     l11302:
 19212                           
 19213                           ; BSR set to: 0
 19214                           ;drv_mrf_miwi_89xa.c: 851: }
 19215                           ;drv_mrf_miwi_89xa.c: 853: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 19216  005914  0E00               	movlw	0
 19217  005916  B23C               	btfsc	_MACInitParams,1,c
 19218  005918  0E01               	movlw	1
 19219  00591A  0100               	movlb	0	; () banked
 19220  00591C  6F8B               	movwf	TxPacket@CCA& (0+255),b
 19221  00591E  0100               	movlb	0	; () banked
 19222  005920  51B8               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19223  005922  EC87  F02F         	call	_TxPacket
 19224  005926  0012               	return	
 19225  005928                     __end_of_MiMAC_SendPacket:
 19226                           	opt stack 0
 19227                           tblptru	equ	0xFF8
 19228                           tblptrh	equ	0xFF7
 19229                           tblptrl	equ	0xFF6
 19230                           tablat	equ	0xFF5
 19231                           prodh	equ	0xFF4
 19232                           prodl	equ	0xFF3
 19233                           intcon	equ	0xFF2
 19234                           intcon2	equ	0xFF1
 19235                           intcon3	equ	0xFF0
 19236                           indf0	equ	0xFEF
 19237                           postinc0	equ	0xFEE
 19238                           plusw0	equ	0xFEB
 19239                           fsr0h	equ	0xFEA
 19240                           fsr0l	equ	0xFE9
 19241                           wreg	equ	0xFE8
 19242                           indf1	equ	0xFE7
 19243                           postinc1	equ	0xFE6
 19244                           postdec1	equ	0xFE5
 19245                           fsr1h	equ	0xFE2
 19246                           fsr1l	equ	0xFE1
 19247                           indf2	equ	0xFDF
 19248                           postinc2	equ	0xFDE
 19249                           postdec2	equ	0xFDD
 19250                           plusw2	equ	0xFDB
 19251                           fsr2h	equ	0xFDA
 19252                           fsr2l	equ	0xFD9
 19253                           status	equ	0xFD8
 19254                           
 19255 ;; *************** function _TxPacket *****************
 19256 ;; Defined at:
 19257 ;;		line 295 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19258 ;; Parameters:    Size  Location     Type
 19259 ;;  TxPacketLen     1    wreg     unsigned char 
 19260 ;;  CCA             1   43[BANK0 ] unsigned char 
 19261 ;; Auto vars:     Size  Location     Type
 19262 ;;  TxPacketLen     1   64[BANK0 ] unsigned char 
 19263 ;;  allowedTxFai    1   62[BANK0 ] unsigned char 
 19264 ;;  t2              4   56[BANK0 ] struct _MIWI_TICK
 19265 ;;  t1              4   52[BANK0 ] struct _MIWI_TICK
 19266 ;;  rssival         1   66[BANK0 ] unsigned char 
 19267 ;;  i               1   65[BANK0 ] unsigned char 
 19268 ;;  status          1   63[BANK0 ] unsigned char 
 19269 ;;  reTry           1   61[BANK0 ] unsigned char 
 19270 ;;  CCARetries      1   60[BANK0 ] unsigned char 
 19271 ;; Return value:  Size  Location     Type
 19272 ;;                  1    wreg      unsigned char 
 19273 ;; Registers used:
 19274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19275 ;; Tracked objects:
 19276 ;;		On entry : 0/0
 19277 ;;		On exit  : 0/0
 19278 ;;		Unchanged: 0/0
 19279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19280 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19281 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19282 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19283 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19284 ;;Total ram usage:       24 bytes
 19285 ;; Hardware stack levels used:    1
 19286 ;; Hardware stack levels required when called:   10
 19287 ;; This function calls:
 19288 ;;		_MiWi_TickGet
 19289 ;;		_RegisterRead
 19290 ;;		_RegisterSet
 19291 ;;		_SetRFMode
 19292 ;;		_WriteFIFO
 19293 ;; This function is called by:
 19294 ;;		_MiMAC_SendPacket
 19295 ;; This function uses a non-reentrant model
 19296 ;;
 19297                           
 19298                           	psect	text57
 19299  005F0E                     __ptext57:
 19300                           	opt stack 0
 19301  005F0E                     _TxPacket:
 19302                           	opt stack 16
 19303                           
 19304                           ;incstack = 0
 19305                           ;TxPacket@TxPacketLen stored from wreg
 19306  005F0E  0100               	movlb	0	; () banked
 19307  005F10  6FA0               	movwf	TxPacket@TxPacketLen& (0+255),b
 19308                           
 19309                           ;drv_mrf_miwi_89xa.c: 297: bool status;
 19310                           ;drv_mrf_miwi_89xa.c: 298: uint8_t i;
 19311                           ;drv_mrf_miwi_89xa.c: 299: MIWI_TICK t1, t2;
 19312                           ;drv_mrf_miwi_89xa.c: 301: uint8_t CCARetries;
 19313                           ;drv_mrf_miwi_89xa.c: 302: uint8_t rssival;
 19314                           ;drv_mrf_miwi_89xa.c: 306: uint8_t reTry = 3;
 19315  005F12  0E03               	movlw	3
 19316  005F14  0100               	movlb	0	; () banked
 19317  005F16  6F9D               	movwf	TxPacket@reTry& (0+255),b
 19318                           
 19319                           ;drv_mrf_miwi_89xa.c: 310: while( reTry-- )
 19320  005F18  D0BF               	goto	l11040
 19321  005F1A                     l10972:
 19322                           
 19323                           ; BSR set to: 0
 19324                           ;drv_mrf_miwi_89xa.c: 312: {
 19325                           ;drv_mrf_miwi_89xa.c: 313: uint8_t allowedTxFailure;
 19326                           ;drv_mrf_miwi_89xa.c: 314: allowedTxFailure = 0;
 19327  005F1A  0E00               	movlw	0
 19328  005F1C  0100               	movlb	0	; () banked
 19329  005F1E  6F9E               	movwf	TxPacket@allowedTxFailure& (0+255),b
 19330  005F20                     l258:
 19331                           
 19332                           ; BSR set to: 0
 19333                           ;drv_mrf_miwi_89xa.c: 319: hasAck = 0;
 19334  005F20  0E00               	movlw	0
 19335  005F22  6E47               	movwf	_hasAck,c	;volatile
 19336                           
 19337                           ;drv_mrf_miwi_89xa.c: 323: CCARetries = 0;
 19338  005F24  0E00               	movlw	0
 19339  005F26  0100               	movlb	0	; () banked
 19340  005F28  6F9C               	movwf	TxPacket@CCARetries& (0+255),b
 19341                           
 19342                           ; BSR set to: 0
 19343                           ;drv_mrf_miwi_89xa.c: 325: if( CCA )
 19344  005F2A  0100               	movlb	0	; () banked
 19345  005F2C  518B               	movf	TxPacket@CCA& (0+255),w,b
 19346  005F2E  0100               	movlb	0	; () banked
 19347  005F30  B4D8               	btfsc	status,2,c
 19348  005F32  D019               	goto	l259
 19349  005F34                     l10976:
 19350                           
 19351                           ; BSR set to: 0
 19352                           ;drv_mrf_miwi_89xa.c: 329: rssival = RegisterRead(0x2800>>8);
 19353  005F34  0E28               	movlw	40
 19354  005F36  EC90  F043         	call	_RegisterRead
 19355  005F3A  0100               	movlb	0	; () banked
 19356  005F3C  6FA2               	movwf	TxPacket@rssival& (0+255),b
 19357                           
 19358                           ; BSR set to: 0
 19359                           ;drv_mrf_miwi_89xa.c: 330: rssival = (rssival>>1);
 19360  005F3E  0100               	movlb	0	; () banked
 19361  005F40  90D8               	bcf	status,0,c
 19362  005F42  31A2               	rrcf	TxPacket@rssival& (0+255),w,b
 19363  005F44  0100               	movlb	0	; () banked
 19364  005F46  6FA2               	movwf	TxPacket@rssival& (0+255),b
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;drv_mrf_miwi_89xa.c: 332: if( rssival > 65 )
 19368  005F48  0E41               	movlw	65
 19369  005F4A  0100               	movlb	0	; () banked
 19370  005F4C  65A2               	cpfsgt	TxPacket@rssival& (0+255),b
 19371  005F4E  D00B               	goto	l259
 19372                           
 19373                           ; BSR set to: 0
 19374                           ;drv_mrf_miwi_89xa.c: 333: {
 19375                           ;drv_mrf_miwi_89xa.c: 334: if(CCARetries++ > 4 )
 19376  005F50  0100               	movlb	0	; () banked
 19377  005F52  2B9C               	incf	TxPacket@CCARetries& (0+255),f,b
 19378  005F54  059C               	decf	TxPacket@CCARetries& (0+255),w,b
 19379  005F56  0100               	movlb	0	; () banked
 19380  005F58  6F8C               	movwf	??_TxPacket& (0+255),b
 19381  005F5A  0E04               	movlw	4
 19382  005F5C  0100               	movlb	0	; () banked
 19383  005F5E  658C               	cpfsgt	??_TxPacket& (0+255),b
 19384  005F60  D7E9               	goto	l10976
 19385                           
 19386                           ; BSR set to: 0
 19387                           ;drv_mrf_miwi_89xa.c: 335: {
 19388                           ;drv_mrf_miwi_89xa.c: 336: return 0;
 19389  005F62  0E00               	movlw	0
 19390                           
 19391                           ; BSR set to: 0
 19392  005F64  0012               	return	
 19393  005F66                     l259:
 19394                           
 19395                           ; BSR set to: 0
 19396                           ;drv_mrf_miwi_89xa.c: 340: }
 19397                           ;drv_mrf_miwi_89xa.c: 341: }
 19398                           ;drv_mrf_miwi_89xa.c: 346: INTCONbits.INT0IE = 0;
 19399  005F66  98F2               	bcf	intcon,4,c	;volatile
 19400                           
 19401                           ;drv_mrf_miwi_89xa.c: 348: INTCON3bits.INT1IE = 0;
 19402  005F68  96F0               	bcf	intcon3,3,c	;volatile
 19403                           
 19404                           ; BSR set to: 0
 19405                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x20);
 19406  005F6A  0E20               	movlw	32
 19407  005F6C  EC18  F040         	call	_SetRFMode
 19408                           
 19409                           ;drv_mrf_miwi_89xa.c: 350: RegisterSet(0x1A00 | (0xC8) | 0x01);
 19410  005F70  0E1A               	movlw	26
 19411  005F72  0100               	movlb	0	; () banked
 19412  005F74  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19413  005F76  0EC9               	movlw	201
 19414  005F78  6F83               	movwf	RegisterSet@setting& (0+255),b
 19415  005F7A  EC38  F044         	call	_RegisterSet	;wreg free
 19416                           
 19417                           ;drv_mrf_miwi_89xa.c: 351: WriteFIFO(TxPacketLen);
 19418  005F7E  0100               	movlb	0	; () banked
 19419  005F80  51A0               	movf	TxPacket@TxPacketLen& (0+255),w,b
 19420  005F82  EC7D  F044         	call	_WriteFIFO
 19421                           
 19422                           ;drv_mrf_miwi_89xa.c: 352: for(i=0; i< TxPacketLen; i++)
 19423  005F86  0E00               	movlw	0
 19424  005F88  0100               	movlb	0	; () banked
 19425  005F8A  6FA1               	movwf	TxPacket@i& (0+255),b
 19426  005F8C  D00E               	goto	l11000
 19427  005F8E                     l10996:
 19428                           
 19429                           ; BSR set to: 0
 19430                           ;drv_mrf_miwi_89xa.c: 353: {
 19431                           ;drv_mrf_miwi_89xa.c: 354: WriteFIFO(MACTxBuffer[i]);
 19432  005F8E  0100               	movlb	0	; () banked
 19433  005F90  51A1               	movf	TxPacket@i& (0+255),w,b
 19434  005F92  0D01               	mullw	1
 19435  005F94  0EA0               	movlw	low _MACTxBuffer
 19436  005F96  24F3               	addwf	prodl,w,c
 19437  005F98  6ED9               	movwf	fsr2l,c
 19438  005F9A  0E02               	movlw	high _MACTxBuffer
 19439  005F9C  20F4               	addwfc	prodh,w,c
 19440  005F9E  6EDA               	movwf	fsr2h,c
 19441  005FA0  50DF               	movf	indf2,w,c
 19442  005FA2  EC7D  F044         	call	_WriteFIFO
 19443  005FA6  0100               	movlb	0	; () banked
 19444  005FA8  2BA1               	incf	TxPacket@i& (0+255),f,b
 19445  005FAA                     l11000:
 19446                           
 19447                           ; BSR set to: 0
 19448  005FAA  0100               	movlb	0	; () banked
 19449  005FAC  51A0               	movf	TxPacket@TxPacketLen& (0+255),w,b
 19450  005FAE  0100               	movlb	0	; () banked
 19451  005FB0  5DA1               	subwf	TxPacket@i& (0+255),w,b
 19452  005FB2  A0D8               	btfss	status,0,c
 19453  005FB4  D7EC               	goto	l10996
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;drv_mrf_miwi_89xa.c: 355: }
 19457                           ;drv_mrf_miwi_89xa.c: 356: SetRFMode(0x80);
 19458                           
 19459                           ; BSR set to: 0
 19460  005FB6  0E80               	movlw	128
 19461  005FB8  EC18  F040         	call	_SetRFMode
 19462                           
 19463                           ;drv_mrf_miwi_89xa.c: 358: INTCONbits.INT0IE = 1;
 19464  005FBC  88F2               	bsf	intcon,4,c	;volatile
 19465                           
 19466                           ;drv_mrf_miwi_89xa.c: 360: INTCON3bits.INT1IE = 1;
 19467  005FBE  86F0               	bsf	intcon3,3,c	;volatile
 19468  005FC0                     l11008:
 19469  005FC0  5040               	movf	_IRQ1_Received,w,c	;volatile
 19470  005FC2  B4D8               	btfsc	status,2,c
 19471  005FC4  B0F0               	btfsc	intcon3,0,c	;volatile
 19472  005FC6  D001               	goto	l11012
 19473  005FC8  D7FB               	goto	l11008
 19474  005FCA                     l11012:
 19475                           
 19476                           ;drv_mrf_miwi_89xa.c: 364: };
 19477                           ;drv_mrf_miwi_89xa.c: 368: IRQ1_Received = 0;
 19478  005FCA  0E00               	movlw	0
 19479  005FCC  6E40               	movwf	_IRQ1_Received,c	;volatile
 19480                           
 19481                           ;drv_mrf_miwi_89xa.c: 369: SetRFMode(0x20);
 19482  005FCE  0E20               	movlw	32
 19483  005FD0  EC18  F040         	call	_SetRFMode
 19484                           
 19485                           ;drv_mrf_miwi_89xa.c: 370: SetRFMode(0x60);
 19486  005FD4  0E60               	movlw	96
 19487  005FD6  EC18  F040         	call	_SetRFMode
 19488                           
 19489                           ;drv_mrf_miwi_89xa.c: 373: if( (MACTxBuffer[0] & 0x20) > 0 )
 19490  005FDA  0102               	movlb	2	; () banked
 19491  005FDC  ABA0               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 19492  005FDE  D05A               	goto	l11038
 19493                           
 19494                           ; BSR set to: 2
 19495                           ;drv_mrf_miwi_89xa.c: 374: {
 19496                           ;drv_mrf_miwi_89xa.c: 375: TxMACSeq = MACTxBuffer[1];
 19497  005FE0  C2A1  F046         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 19498                           
 19499                           ; BSR set to: 2
 19500                           ;drv_mrf_miwi_89xa.c: 376: t1 = MiWi_TickGet();
 19501  005FE4  EC57  F042         	call	_MiWi_TickGet	;wreg free
 19502  005FE8  C081  F094         	movff	?_MiWi_TickGet,TxPacket@t1
 19503  005FEC  C082  F095         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 19504  005FF0  C083  F096         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 19505  005FF4  C084  F097         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 19506  005FF8                     l11024:
 19507                           
 19508                           ;drv_mrf_miwi_89xa.c: 378: {
 19509                           ;drv_mrf_miwi_89xa.c: 379: if( hasAck )
 19510  005FF8  5047               	movf	_hasAck,w,c	;volatile
 19511  005FFA  A4D8               	btfss	status,2,c
 19512  005FFC  D04B               	goto	l11038
 19513                           
 19514                           ;drv_mrf_miwi_89xa.c: 383: }
 19515                           ;drv_mrf_miwi_89xa.c: 384: t2 = MiWi_TickGet();
 19516                           
 19517                           ; BSR set to: 0
 19518                           
 19519                           ;drv_mrf_miwi_89xa.c: 382: goto TX_END_HERE;
 19520                           
 19521                           ;drv_mrf_miwi_89xa.c: 380: {
 19522                           ;drv_mrf_miwi_89xa.c: 381: status = 1;
 19523  005FFE  EC57  F042         	call	_MiWi_TickGet	;wreg free
 19524  006002  C081  F098         	movff	?_MiWi_TickGet,TxPacket@t2
 19525  006006  C082  F099         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 19526  00600A  C083  F09A         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 19527  00600E  C084  F09B         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 19528                           
 19529                           ;drv_mrf_miwi_89xa.c: 385: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 19530  006012  C094  F08C         	movff	TxPacket@t1,??_TxPacket
 19531  006016  C095  F08D         	movff	TxPacket@t1+1,??_TxPacket+1
 19532  00601A  C096  F08E         	movff	TxPacket@t1+2,??_TxPacket+2
 19533  00601E  C097  F08F         	movff	TxPacket@t1+3,??_TxPacket+3
 19534  006022  0100               	movlb	0	; () banked
 19535  006024  1F8C               	comf	??_TxPacket& (0+255),f,b
 19536  006026  1F8D               	comf	(??_TxPacket+1)& (0+255),f,b
 19537  006028  1F8E               	comf	(??_TxPacket+2)& (0+255),f,b
 19538  00602A  1F8F               	comf	(??_TxPacket+3)& (0+255),f,b
 19539  00602C  2B8C               	incf	??_TxPacket& (0+255),f,b
 19540  00602E  0E00               	movlw	0
 19541  006030  238D               	addwfc	(??_TxPacket+1)& (0+255),f,b
 19542  006032  238E               	addwfc	(??_TxPacket+2)& (0+255),f,b
 19543  006034  238F               	addwfc	(??_TxPacket+3)& (0+255),f,b
 19544  006036  0100               	movlb	0	; () banked
 19545  006038  5198               	movf	TxPacket@t2& (0+255),w,b
 19546  00603A  0100               	movlb	0	; () banked
 19547  00603C  258C               	addwf	??_TxPacket& (0+255),w,b
 19548  00603E  0100               	movlb	0	; () banked
 19549  006040  6F90               	movwf	(??_TxPacket+4)& (0+255),b
 19550  006042  0100               	movlb	0	; () banked
 19551  006044  5199               	movf	(TxPacket@t2+1)& (0+255),w,b
 19552  006046  0100               	movlb	0	; () banked
 19553  006048  218D               	addwfc	(??_TxPacket+1)& (0+255),w,b
 19554  00604A  0100               	movlb	0	; () banked
 19555  00604C  6F91               	movwf	(??_TxPacket+5)& (0+255),b
 19556  00604E  0100               	movlb	0	; () banked
 19557  006050  519A               	movf	(TxPacket@t2+2)& (0+255),w,b
 19558  006052  0100               	movlb	0	; () banked
 19559  006054  218E               	addwfc	(??_TxPacket+2)& (0+255),w,b
 19560  006056  0100               	movlb	0	; () banked
 19561  006058  6F92               	movwf	(??_TxPacket+6)& (0+255),b
 19562  00605A  0100               	movlb	0	; () banked
 19563  00605C  519B               	movf	(TxPacket@t2+3)& (0+255),w,b
 19564  00605E  0100               	movlb	0	; () banked
 19565  006060  218F               	addwfc	(??_TxPacket+3)& (0+255),w,b
 19566  006062  0100               	movlb	0	; () banked
 19567  006064  6F93               	movwf	(??_TxPacket+7)& (0+255),b
 19568  006066  0100               	movlb	0	; () banked
 19569  006068  5193               	movf	(??_TxPacket+7)& (0+255),w,b
 19570  00606A  0100               	movlb	0	; () banked
 19571  00606C  1192               	iorwf	(??_TxPacket+6)& (0+255),w,b
 19572  00606E  E108               	bnz	l11034
 19573  006070  0EA9               	movlw	169
 19574  006072  0100               	movlb	0	; () banked
 19575  006074  5D90               	subwf	(??_TxPacket+4)& (0+255),w,b
 19576  006076  0E61               	movlw	97
 19577  006078  0100               	movlb	0	; () banked
 19578  00607A  5991               	subwfb	(??_TxPacket+5)& (0+255),w,b
 19579  00607C  A0D8               	btfss	status,0,c
 19580  00607E  D7BC               	goto	l11024
 19581  006080                     l11034:
 19582                           
 19583                           ; BSR set to: 0
 19584                           ;drv_mrf_miwi_89xa.c: 388: }
 19585                           ;drv_mrf_miwi_89xa.c: 389: }
 19586                           ;drv_mrf_miwi_89xa.c: 391: if(allowedTxFailure++ <= 3)
 19587  006080  0100               	movlb	0	; () banked
 19588  006082  2B9E               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 19589  006084  059E               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 19590  006086  0100               	movlb	0	; () banked
 19591  006088  6F8C               	movwf	??_TxPacket& (0+255),b
 19592  00608A  0E04               	movlw	4
 19593  00608C  0100               	movlb	0	; () banked
 19594  00608E  618C               	cpfslt	??_TxPacket& (0+255),b
 19595  006090  D003               	goto	l11040
 19596  006092  D746               	goto	l258
 19597  006094                     l11038:
 19598                           
 19599                           ;drv_mrf_miwi_89xa.c: 395: else
 19600                           ;drv_mrf_miwi_89xa.c: 397: {
 19601                           ;drv_mrf_miwi_89xa.c: 398: status = 1;
 19602  006094  0E01               	movlw	1
 19603  006096  D007               	goto	L11
 19604  006098                     l11040:
 19605                           
 19606                           ; BSR set to: 0
 19607  006098  0100               	movlb	0	; () banked
 19608  00609A  079D               	decf	TxPacket@reTry& (0+255),f,b
 19609  00609C  0100               	movlb	0	; () banked
 19610  00609E  299D               	incf	TxPacket@reTry& (0+255),w,b
 19611  0060A0  A4D8               	btfss	status,2,c
 19612  0060A2  D73B               	goto	l10972
 19613                           
 19614                           ; BSR set to: 0
 19615                           ;drv_mrf_miwi_89xa.c: 400: }
 19616                           ;drv_mrf_miwi_89xa.c: 401: }
 19617                           ;drv_mrf_miwi_89xa.c: 403: status = 0;
 19618                           
 19619                           ; BSR set to: 0
 19620  0060A4  0E00               	movlw	0
 19621  0060A6                     L11:
 19622  0060A6  0100               	movlb	0	; () banked
 19623  0060A8  6F9F               	movwf	TxPacket@status& (0+255),b
 19624                           
 19625                           ; BSR set to: 0
 19626                           ;drv_mrf_miwi_89xa.c: 405: return status;
 19627                           
 19628                           ;drv_mrf_miwi_89xa.c: 404: TX_END_HERE:
 19629  0060AA  0100               	movlb	0	; () banked
 19630  0060AC  519F               	movf	TxPacket@status& (0+255),w,b
 19631  0060AE  0012               	return	
 19632  0060B0                     __end_of_TxPacket:
 19633                           	opt stack 0
 19634                           tblptru	equ	0xFF8
 19635                           tblptrh	equ	0xFF7
 19636                           tblptrl	equ	0xFF6
 19637                           tablat	equ	0xFF5
 19638                           prodh	equ	0xFF4
 19639                           prodl	equ	0xFF3
 19640                           intcon	equ	0xFF2
 19641                           intcon2	equ	0xFF1
 19642                           intcon3	equ	0xFF0
 19643                           indf0	equ	0xFEF
 19644                           postinc0	equ	0xFEE
 19645                           plusw0	equ	0xFEB
 19646                           fsr0h	equ	0xFEA
 19647                           fsr0l	equ	0xFE9
 19648                           wreg	equ	0xFE8
 19649                           indf1	equ	0xFE7
 19650                           postinc1	equ	0xFE6
 19651                           postdec1	equ	0xFE5
 19652                           fsr1h	equ	0xFE2
 19653                           fsr1l	equ	0xFE1
 19654                           indf2	equ	0xFDF
 19655                           postinc2	equ	0xFDE
 19656                           postdec2	equ	0xFDD
 19657                           plusw2	equ	0xFDB
 19658                           fsr2h	equ	0xFDA
 19659                           fsr2l	equ	0xFD9
 19660                           status	equ	0xFD8
 19661                           
 19662 ;; *************** function _WriteFIFO *****************
 19663 ;; Defined at:
 19664 ;;		line 251 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19665 ;; Parameters:    Size  Location     Type
 19666 ;;  Data            1    wreg     unsigned char 
 19667 ;; Auto vars:     Size  Location     Type
 19668 ;;  Data            1   35[BANK0 ] unsigned char 
 19669 ;;  IRQ0select      1   37[BANK0 ] unsigned char 
 19670 ;;  IRQ1select      1   36[BANK0 ] unsigned char 
 19671 ;; Return value:  Size  Location     Type
 19672 ;;		None               void
 19673 ;; Registers used:
 19674 ;;		wreg, status,2, cstack
 19675 ;; Tracked objects:
 19676 ;;		On entry : 0/0
 19677 ;;		On exit  : 0/0
 19678 ;;		Unchanged: 0/0
 19679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19681 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19683 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19684 ;;Total ram usage:        3 bytes
 19685 ;; Hardware stack levels used:    1
 19686 ;; Hardware stack levels required when called:    8
 19687 ;; This function calls:
 19688 ;;		_SPIPut
 19689 ;; This function is called by:
 19690 ;;		_TxPacket
 19691 ;; This function uses a non-reentrant model
 19692 ;;
 19693                           
 19694                           	psect	text58
 19695  0088FA                     __ptext58:
 19696                           	opt stack 0
 19697  0088FA                     _WriteFIFO:
 19698                           	opt stack 17
 19699                           
 19700                           ; BSR set to: 0
 19701                           ;incstack = 0
 19702                           ;WriteFIFO@Data stored from wreg
 19703  0088FA  0100               	movlb	0	; () banked
 19704  0088FC  6F83               	movwf	WriteFIFO@Data& (0+255),b
 19705                           
 19706                           ;drv_mrf_miwi_89xa.c: 253: uint8_t IRQ1select = INTCON3bits.INT1IE;
 19707  0088FE  0E00               	movlw	0
 19708  008900  B6F0               	btfsc	intcon3,3,c	;volatile
 19709  008902  0E01               	movlw	1
 19710  008904  0100               	movlb	0	; () banked
 19711  008906  6F84               	movwf	WriteFIFO@IRQ1select& (0+255),b
 19712                           
 19713                           ;drv_mrf_miwi_89xa.c: 255: bool IRQ0select = INTCONbits.INT0IE;
 19714  008908  0E00               	movlw	0
 19715  00890A  B8F2               	btfsc	intcon,4,c	;volatile
 19716  00890C  0E01               	movlw	1
 19717  00890E  0100               	movlb	0	; () banked
 19718  008910  6F85               	movwf	WriteFIFO@IRQ0select& (0+255),b
 19719                           
 19720                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.INT0IE = 0;
 19721  008912  98F2               	bcf	intcon,4,c	;volatile
 19722                           
 19723                           ;drv_mrf_miwi_89xa.c: 260: INTCON3bits.INT1IE = 0;
 19724  008914  96F0               	bcf	intcon3,3,c	;volatile
 19725                           
 19726                           ;drv_mrf_miwi_89xa.c: 261: LATCbits.LATC6 = 0;
 19727  008916  9C8B               	bcf	3979,6,c	;volatile
 19728                           
 19729                           ; BSR set to: 0
 19730                           ;drv_mrf_miwi_89xa.c: 262: SPIPut(Data);
 19731  008918  0100               	movlb	0	; () banked
 19732  00891A  5183               	movf	WriteFIFO@Data& (0+255),w,b
 19733  00891C  ECCB  F045         	call	_SPIPut
 19734                           
 19735                           ;drv_mrf_miwi_89xa.c: 263: LATCbits.LATC6 = 1;
 19736  008920  8C8B               	bsf	3979,6,c	;volatile
 19737                           
 19738                           ;drv_mrf_miwi_89xa.c: 264: INTCON3bits.INT1IE = IRQ1select;
 19739  008922  0100               	movlb	0	; () banked
 19740  008924  B184               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 19741  008926  D002               	bra	u11965
 19742  008928  96F0               	bcf	intcon3,3,c	;volatile
 19743  00892A  D001               	bra	u11966
 19744  00892C                     u11965:
 19745  00892C  86F0               	bsf	intcon3,3,c	;volatile
 19746  00892E                     u11966:
 19747                           
 19748                           ;drv_mrf_miwi_89xa.c: 267: INTCONbits.INT0IE = IRQ0select;
 19749  00892E  0100               	movlb	0	; () banked
 19750  008930  B185               	btfsc	WriteFIFO@IRQ0select& (0+255),0,b
 19751  008932  D002               	bra	u11975
 19752  008934  98F2               	bcf	intcon,4,c	;volatile
 19753  008936  D001               	bra	u11976
 19754  008938                     u11975:
 19755  008938  88F2               	bsf	intcon,4,c	;volatile
 19756  00893A                     u11976:
 19757  00893A  0012               	return		;funcret
 19758  00893C                     __end_of_WriteFIFO:
 19759                           	opt stack 0
 19760                           tblptru	equ	0xFF8
 19761                           tblptrh	equ	0xFF7
 19762                           tblptrl	equ	0xFF6
 19763                           tablat	equ	0xFF5
 19764                           prodh	equ	0xFF4
 19765                           prodl	equ	0xFF3
 19766                           intcon	equ	0xFF2
 19767                           intcon2	equ	0xFF1
 19768                           intcon3	equ	0xFF0
 19769                           indf0	equ	0xFEF
 19770                           postinc0	equ	0xFEE
 19771                           plusw0	equ	0xFEB
 19772                           fsr0h	equ	0xFEA
 19773                           fsr0l	equ	0xFE9
 19774                           wreg	equ	0xFE8
 19775                           indf1	equ	0xFE7
 19776                           postinc1	equ	0xFE6
 19777                           postdec1	equ	0xFE5
 19778                           fsr1h	equ	0xFE2
 19779                           fsr1l	equ	0xFE1
 19780                           indf2	equ	0xFDF
 19781                           postinc2	equ	0xFDE
 19782                           postdec2	equ	0xFDD
 19783                           plusw2	equ	0xFDB
 19784                           fsr2h	equ	0xFDA
 19785                           fsr2l	equ	0xFD9
 19786                           status	equ	0xFD8
 19787                           
 19788 ;; *************** function _SetRFMode *****************
 19789 ;; Defined at:
 19790 ;;		line 674 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19791 ;; Parameters:    Size  Location     Type
 19792 ;;  mode            1    wreg     unsigned char 
 19793 ;; Auto vars:     Size  Location     Type
 19794 ;;  mode            1   39[BANK0 ] unsigned char 
 19795 ;; Return value:  Size  Location     Type
 19796 ;;		None               void
 19797 ;; Registers used:
 19798 ;;		wreg, status,2, status,0, cstack
 19799 ;; Tracked objects:
 19800 ;;		On entry : 0/0
 19801 ;;		On exit  : 0/0
 19802 ;;		Unchanged: 0/0
 19803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19805 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19807 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19808 ;;Total ram usage:        1 bytes
 19809 ;; Hardware stack levels used:    1
 19810 ;; Hardware stack levels required when called:    9
 19811 ;; This function calls:
 19812 ;;		_RegisterSet
 19813 ;; This function is called by:
 19814 ;;		_TxPacket
 19815 ;;		_MiMAC_SetChannel
 19816 ;;		_MiMAC_Init
 19817 ;;		_MiMAC_PowerState
 19818 ;; This function uses a non-reentrant model
 19819 ;;
 19820                           
 19821                           	psect	text59
 19822  008030                     __ptext59:
 19823                           	opt stack 0
 19824  008030                     _SetRFMode:
 19825                           	opt stack 16
 19826                           
 19827                           ;incstack = 0
 19828                           ;SetRFMode@mode stored from wreg
 19829  008030  0100               	movlb	0	; () banked
 19830  008032  6F87               	movwf	SetRFMode@mode& (0+255),b
 19831                           
 19832                           ;drv_mrf_miwi_89xa.c: 676: switch (mode) {
 19833  008034  D032               	goto	l10892
 19834  008036                     l10870:
 19835                           
 19836                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 19837  008036  0E00               	movlw	0
 19838  008038  0100               	movlb	0	; () banked
 19839  00803A  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19840  00803C  0E96               	movlw	150
 19841  00803E  6F83               	movwf	RegisterSet@setting& (0+255),b
 19842  008040  EC38  F044         	call	_RegisterSet	;wreg free
 19843                           
 19844                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x80;
 19845  008044  0E80               	movlw	128
 19846  008046  6E43               	movwf	_RF_Mode,c
 19847                           
 19848                           ;drv_mrf_miwi_89xa.c: 680: break;
 19849  008048  0012               	return	
 19850  00804A                     l10874:
 19851                           
 19852                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 19853  00804A  0E00               	movlw	0
 19854  00804C  0100               	movlb	0	; () banked
 19855  00804E  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19856  008050  0E76               	movlw	118
 19857  008052  6F83               	movwf	RegisterSet@setting& (0+255),b
 19858  008054  EC38  F044         	call	_RegisterSet	;wreg free
 19859                           
 19860                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x60;
 19861  008058  0E60               	movlw	96
 19862  00805A  6E43               	movwf	_RF_Mode,c
 19863                           
 19864                           ;drv_mrf_miwi_89xa.c: 684: break;
 19865  00805C  0012               	return	
 19866  00805E                     l10878:
 19867                           
 19868                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 19869  00805E  0E00               	movlw	0
 19870  008060  0100               	movlb	0	; () banked
 19871  008062  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19872  008064  0E56               	movlw	86
 19873  008066  6F83               	movwf	RegisterSet@setting& (0+255),b
 19874  008068  EC38  F044         	call	_RegisterSet	;wreg free
 19875                           
 19876                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x40;
 19877  00806C  0E40               	movlw	64
 19878  00806E  6E43               	movwf	_RF_Mode,c
 19879                           
 19880                           ;drv_mrf_miwi_89xa.c: 688: break;
 19881  008070  0012               	return	
 19882  008072                     l10882:
 19883                           
 19884                           ;drv_mrf_miwi_89xa.c: 690: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 19885  008072  0E00               	movlw	0
 19886  008074  0100               	movlb	0	; () banked
 19887  008076  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19888  008078  0E36               	movlw	54
 19889  00807A  6F83               	movwf	RegisterSet@setting& (0+255),b
 19890  00807C  EC38  F044         	call	_RegisterSet	;wreg free
 19891                           
 19892                           ;drv_mrf_miwi_89xa.c: 691: RF_Mode = 0x20;
 19893  008080  0E20               	movlw	32
 19894  008082  6E43               	movwf	_RF_Mode,c
 19895                           
 19896                           ;drv_mrf_miwi_89xa.c: 692: break;
 19897  008084  0012               	return	
 19898  008086                     l10886:
 19899                           
 19900                           ;drv_mrf_miwi_89xa.c: 694: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 19901  008086  0E00               	movlw	0
 19902  008088  0100               	movlb	0	; () banked
 19903  00808A  6F84               	movwf	(RegisterSet@setting+1)& (0+255),b
 19904  00808C  0E16               	movlw	22
 19905  00808E  6F83               	movwf	RegisterSet@setting& (0+255),b
 19906  008090  EC38  F044         	call	_RegisterSet	;wreg free
 19907                           
 19908                           ;drv_mrf_miwi_89xa.c: 695: RF_Mode = 0x00;
 19909  008094  0E00               	movlw	0
 19910  008096  6E43               	movwf	_RF_Mode,c
 19911                           
 19912                           ;drv_mrf_miwi_89xa.c: 697: }
 19913                           
 19914                           ;drv_mrf_miwi_89xa.c: 696: break;
 19915  008098  0012               	return	
 19916  00809A                     l10892:
 19917  00809A  0100               	movlb	0	; () banked
 19918  00809C  5187               	movf	SetRFMode@mode& (0+255),w,b
 19919                           
 19920                           ; Switch size 1, requested type "space"
 19921                           ; Number of cases is 5, Range of values is 0 to 128
 19922                           ; switch strategies available:
 19923                           ; Name         Instructions Cycles
 19924                           ; simple_byte           16     9 (average)
 19925                           ;	Chosen strategy is simple_byte
 19926  00809E  0A00               	xorlw	0	; case 0
 19927  0080A0  B4D8               	btfsc	status,2,c
 19928  0080A2  D7F1               	goto	l10886
 19929  0080A4  0A20               	xorlw	32	; case 32
 19930  0080A6  B4D8               	btfsc	status,2,c
 19931  0080A8  D7E4               	goto	l10882
 19932  0080AA  0A60               	xorlw	96	; case 64
 19933  0080AC  B4D8               	btfsc	status,2,c
 19934  0080AE  D7D7               	goto	l10878
 19935  0080B0  0A20               	xorlw	32	; case 96
 19936  0080B2  B4D8               	btfsc	status,2,c
 19937  0080B4  D7CA               	goto	l10874
 19938  0080B6  0AE0               	xorlw	224	; case 128
 19939  0080B8  A4D8               	btfss	status,2,c
 19940  0080BA  0012               	return	
 19941  0080BC  D7BC               	goto	l10870
 19942  0080BE                     __end_of_SetRFMode:
 19943                           	opt stack 0
 19944                           tblptru	equ	0xFF8
 19945                           tblptrh	equ	0xFF7
 19946                           tblptrl	equ	0xFF6
 19947                           tablat	equ	0xFF5
 19948                           prodh	equ	0xFF4
 19949                           prodl	equ	0xFF3
 19950                           intcon	equ	0xFF2
 19951                           intcon2	equ	0xFF1
 19952                           intcon3	equ	0xFF0
 19953                           indf0	equ	0xFEF
 19954                           postinc0	equ	0xFEE
 19955                           plusw0	equ	0xFEB
 19956                           fsr0h	equ	0xFEA
 19957                           fsr0l	equ	0xFE9
 19958                           wreg	equ	0xFE8
 19959                           indf1	equ	0xFE7
 19960                           postinc1	equ	0xFE6
 19961                           postdec1	equ	0xFE5
 19962                           fsr1h	equ	0xFE2
 19963                           fsr1l	equ	0xFE1
 19964                           indf2	equ	0xFDF
 19965                           postinc2	equ	0xFDE
 19966                           postdec2	equ	0xFDD
 19967                           plusw2	equ	0xFDB
 19968                           fsr2h	equ	0xFDA
 19969                           fsr2l	equ	0xFD9
 19970                           status	equ	0xFD8
 19971                           
 19972 ;; *************** function _RegisterSet *****************
 19973 ;; Defined at:
 19974 ;;		line 171 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19975 ;; Parameters:    Size  Location     Type
 19976 ;;  setting         2   35[BANK0 ] unsigned int 
 19977 ;; Auto vars:     Size  Location     Type
 19978 ;;  IRQ0select      1   38[BANK0 ] unsigned char 
 19979 ;;  IRQ1select      1   37[BANK0 ] unsigned char 
 19980 ;; Return value:  Size  Location     Type
 19981 ;;		None               void
 19982 ;; Registers used:
 19983 ;;		wreg, status,2, cstack
 19984 ;; Tracked objects:
 19985 ;;		On entry : 0/0
 19986 ;;		On exit  : 0/0
 19987 ;;		Unchanged: 0/0
 19988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19992 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19993 ;;Total ram usage:        4 bytes
 19994 ;; Hardware stack levels used:    1
 19995 ;; Hardware stack levels required when called:    8
 19996 ;; This function calls:
 19997 ;;		_SPIPut
 19998 ;; This function is called by:
 19999 ;;		_TxPacket
 20000 ;;		_MiMAC_SetChannel
 20001 ;;		_MiMAC_SetPower
 20002 ;;		_MiMAC_Init
 20003 ;;		_SetRFMode
 20004 ;; This function uses a non-reentrant model
 20005 ;;
 20006                           
 20007                           	psect	text60
 20008  008870                     __ptext60:
 20009                           	opt stack 0
 20010  008870                     _RegisterSet:
 20011                           	opt stack 16
 20012                           
 20013                           ;drv_mrf_miwi_89xa.c: 173: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20014                           
 20015                           ;incstack = 0
 20016  008870  0E00               	movlw	0
 20017  008872  B6F0               	btfsc	intcon3,3,c	;volatile
 20018  008874  0E01               	movlw	1
 20019  008876  0100               	movlb	0	; () banked
 20020  008878  6F85               	movwf	RegisterSet@IRQ1select& (0+255),b
 20021                           
 20022                           ;drv_mrf_miwi_89xa.c: 175: bool IRQ0select = INTCONbits.INT0IE;
 20023  00887A  0E00               	movlw	0
 20024  00887C  B8F2               	btfsc	intcon,4,c	;volatile
 20025  00887E  0E01               	movlw	1
 20026  008880  0100               	movlb	0	; () banked
 20027  008882  6F86               	movwf	RegisterSet@IRQ0select& (0+255),b
 20028                           
 20029                           ; BSR set to: 0
 20030                           ;drv_mrf_miwi_89xa.c: 176: INTCONbits.INT0IE = 0;
 20031  008884  98F2               	bcf	intcon,4,c	;volatile
 20032                           
 20033                           ; BSR set to: 0
 20034                           ;drv_mrf_miwi_89xa.c: 179: INTCON3bits.INT1IE = 0;
 20035  008886  96F0               	bcf	intcon3,3,c	;volatile
 20036                           
 20037                           ; BSR set to: 0
 20038                           ;drv_mrf_miwi_89xa.c: 180: LATBbits.LATB3 = 0;
 20039  008888  968A               	bcf	3978,3,c	;volatile
 20040                           
 20041                           ; BSR set to: 0
 20042                           ;drv_mrf_miwi_89xa.c: 181: SPIPut((uint8_t)(setting >> 8));
 20043  00888A  0100               	movlb	0	; () banked
 20044  00888C  5184               	movf	(RegisterSet@setting+1)& (0+255),w,b
 20045  00888E  ECCB  F045         	call	_SPIPut
 20046                           
 20047                           ;drv_mrf_miwi_89xa.c: 182: SPIPut((uint8_t)setting);
 20048  008892  0100               	movlb	0	; () banked
 20049  008894  5183               	movf	RegisterSet@setting& (0+255),w,b
 20050  008896  ECCB  F045         	call	_SPIPut
 20051                           
 20052                           ;drv_mrf_miwi_89xa.c: 183: LATBbits.LATB3 = 1;
 20053  00889A  868A               	bsf	3978,3,c	;volatile
 20054                           
 20055                           ;drv_mrf_miwi_89xa.c: 184: INTCON3bits.INT1IE = IRQ1select;
 20056  00889C  0100               	movlb	0	; () banked
 20057  00889E  B185               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 20058  0088A0  D002               	bra	u11775
 20059  0088A2  96F0               	bcf	intcon3,3,c	;volatile
 20060  0088A4  D001               	bra	u11776
 20061  0088A6                     u11775:
 20062  0088A6  86F0               	bsf	intcon3,3,c	;volatile
 20063  0088A8                     u11776:
 20064                           
 20065                           ;drv_mrf_miwi_89xa.c: 187: INTCONbits.INT0IE = IRQ0select;
 20066  0088A8  0100               	movlb	0	; () banked
 20067  0088AA  B186               	btfsc	RegisterSet@IRQ0select& (0+255),0,b
 20068  0088AC  D002               	bra	u11785
 20069  0088AE  98F2               	bcf	intcon,4,c	;volatile
 20070  0088B0  D001               	bra	u11786
 20071  0088B2                     u11785:
 20072  0088B2  88F2               	bsf	intcon,4,c	;volatile
 20073  0088B4                     u11786:
 20074  0088B4  0012               	return		;funcret
 20075  0088B6                     __end_of_RegisterSet:
 20076                           	opt stack 0
 20077                           tblptru	equ	0xFF8
 20078                           tblptrh	equ	0xFF7
 20079                           tblptrl	equ	0xFF6
 20080                           tablat	equ	0xFF5
 20081                           prodh	equ	0xFF4
 20082                           prodl	equ	0xFF3
 20083                           intcon	equ	0xFF2
 20084                           intcon2	equ	0xFF1
 20085                           intcon3	equ	0xFF0
 20086                           indf0	equ	0xFEF
 20087                           postinc0	equ	0xFEE
 20088                           plusw0	equ	0xFEB
 20089                           fsr0h	equ	0xFEA
 20090                           fsr0l	equ	0xFE9
 20091                           wreg	equ	0xFE8
 20092                           indf1	equ	0xFE7
 20093                           postinc1	equ	0xFE6
 20094                           postdec1	equ	0xFE5
 20095                           fsr1h	equ	0xFE2
 20096                           fsr1l	equ	0xFE1
 20097                           indf2	equ	0xFDF
 20098                           postinc2	equ	0xFDE
 20099                           postdec2	equ	0xFDD
 20100                           plusw2	equ	0xFDB
 20101                           fsr2h	equ	0xFDA
 20102                           fsr2l	equ	0xFD9
 20103                           status	equ	0xFD8
 20104                           
 20105 ;; *************** function _RegisterRead *****************
 20106 ;; Defined at:
 20107 ;;		line 207 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20108 ;; Parameters:    Size  Location     Type
 20109 ;;  address         1    wreg     unsigned char 
 20110 ;; Auto vars:     Size  Location     Type
 20111 ;;  address         1   38[BANK0 ] unsigned char 
 20112 ;;  IRQ0select      1   37[BANK0 ] unsigned char 
 20113 ;;  IRQ1select      1   36[BANK0 ] unsigned char 
 20114 ;;  value           1   35[BANK0 ] unsigned char 
 20115 ;; Return value:  Size  Location     Type
 20116 ;;                  1    wreg      unsigned char 
 20117 ;; Registers used:
 20118 ;;		wreg, status,2, status,0, cstack
 20119 ;; Tracked objects:
 20120 ;;		On entry : 0/0
 20121 ;;		On exit  : 0/0
 20122 ;;		Unchanged: 0/0
 20123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20125 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20127 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20128 ;;Total ram usage:        4 bytes
 20129 ;; Hardware stack levels used:    1
 20130 ;; Hardware stack levels required when called:    9
 20131 ;; This function calls:
 20132 ;;		_SPIGet
 20133 ;;		_SPIPut
 20134 ;; This function is called by:
 20135 ;;		_TxPacket
 20136 ;;		_getReceiverBW
 20137 ;; This function uses a non-reentrant model
 20138 ;;
 20139                           
 20140                           	psect	text61
 20141  008720                     __ptext61:
 20142                           	opt stack 0
 20143  008720                     _RegisterRead:
 20144                           	opt stack 16
 20145                           
 20146                           ;incstack = 0
 20147                           ;RegisterRead@address stored from wreg
 20148  008720  0100               	movlb	0	; () banked
 20149  008722  6F86               	movwf	RegisterRead@address& (0+255),b
 20150                           
 20151                           ;drv_mrf_miwi_89xa.c: 209: uint8_t value;
 20152                           ;drv_mrf_miwi_89xa.c: 210: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20153  008724  0E00               	movlw	0
 20154  008726  B6F0               	btfsc	intcon3,3,c	;volatile
 20155  008728  0E01               	movlw	1
 20156  00872A  0100               	movlb	0	; () banked
 20157  00872C  6F84               	movwf	RegisterRead@IRQ1select& (0+255),b
 20158                           
 20159                           ;drv_mrf_miwi_89xa.c: 212: bool IRQ0select = INTCONbits.INT0IE;
 20160  00872E  0E00               	movlw	0
 20161  008730  B8F2               	btfsc	intcon,4,c	;volatile
 20162  008732  0E01               	movlw	1
 20163  008734  0100               	movlb	0	; () banked
 20164  008736  6F85               	movwf	RegisterRead@IRQ0select& (0+255),b
 20165                           
 20166                           ;drv_mrf_miwi_89xa.c: 214: INTCONbits.INT0IE = 0;
 20167  008738  98F2               	bcf	intcon,4,c	;volatile
 20168                           
 20169                           ;drv_mrf_miwi_89xa.c: 217: INTCON3bits.INT1IE = 0;
 20170  00873A  96F0               	bcf	intcon3,3,c	;volatile
 20171                           
 20172                           ;drv_mrf_miwi_89xa.c: 218: LATBbits.LATB3 = 0;
 20173  00873C  968A               	bcf	3978,3,c	;volatile
 20174                           
 20175                           ; BSR set to: 0
 20176                           ;drv_mrf_miwi_89xa.c: 219: address = (address|0x40);
 20177  00873E  0100               	movlb	0	; () banked
 20178  008740  5186               	movf	RegisterRead@address& (0+255),w,b
 20179  008742  0940               	iorlw	64
 20180  008744  0100               	movlb	0	; () banked
 20181  008746  6F86               	movwf	RegisterRead@address& (0+255),b
 20182                           
 20183                           ; BSR set to: 0
 20184                           ;drv_mrf_miwi_89xa.c: 220: SPIPut(address);
 20185  008748  0100               	movlb	0	; () banked
 20186  00874A  5186               	movf	RegisterRead@address& (0+255),w,b
 20187  00874C  ECCB  F045         	call	_SPIPut
 20188                           
 20189                           ;drv_mrf_miwi_89xa.c: 221: value = SPIGet();
 20190  008750  EC10  F046         	call	_SPIGet	;wreg free
 20191  008754  0100               	movlb	0	; () banked
 20192  008756  6F83               	movwf	RegisterRead@value& (0+255),b
 20193                           
 20194                           ; BSR set to: 0
 20195                           ;drv_mrf_miwi_89xa.c: 222: LATBbits.LATB3 = 1;
 20196  008758  868A               	bsf	3978,3,c	;volatile
 20197                           
 20198                           ; BSR set to: 0
 20199                           ;drv_mrf_miwi_89xa.c: 223: INTCON3bits.INT1IE = IRQ1select;
 20200  00875A  0100               	movlb	0	; () banked
 20201  00875C  B184               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 20202  00875E  D002               	bra	u11945
 20203  008760  96F0               	bcf	intcon3,3,c	;volatile
 20204  008762  D001               	bra	u11946
 20205  008764                     u11945:
 20206  008764  86F0               	bsf	intcon3,3,c	;volatile
 20207  008766                     u11946:
 20208                           
 20209                           ;drv_mrf_miwi_89xa.c: 226: INTCONbits.INT0IE = IRQ0select;
 20210  008766  0100               	movlb	0	; () banked
 20211  008768  B185               	btfsc	RegisterRead@IRQ0select& (0+255),0,b
 20212  00876A  D002               	bra	u11955
 20213  00876C  98F2               	bcf	intcon,4,c	;volatile
 20214  00876E  D001               	bra	u11956
 20215  008770                     u11955:
 20216  008770  88F2               	bsf	intcon,4,c	;volatile
 20217  008772                     u11956:
 20218                           
 20219                           ;drv_mrf_miwi_89xa.c: 229: return value;
 20220  008772  0100               	movlb	0	; () banked
 20221  008774  5183               	movf	RegisterRead@value& (0+255),w,b
 20222  008776  0012               	return	
 20223  008778                     __end_of_RegisterRead:
 20224                           	opt stack 0
 20225                           tblptru	equ	0xFF8
 20226                           tblptrh	equ	0xFF7
 20227                           tblptrl	equ	0xFF6
 20228                           tablat	equ	0xFF5
 20229                           prodh	equ	0xFF4
 20230                           prodl	equ	0xFF3
 20231                           intcon	equ	0xFF2
 20232                           intcon2	equ	0xFF1
 20233                           intcon3	equ	0xFF0
 20234                           indf0	equ	0xFEF
 20235                           postinc0	equ	0xFEE
 20236                           plusw0	equ	0xFEB
 20237                           fsr0h	equ	0xFEA
 20238                           fsr0l	equ	0xFE9
 20239                           wreg	equ	0xFE8
 20240                           indf1	equ	0xFE7
 20241                           postinc1	equ	0xFE6
 20242                           postdec1	equ	0xFE5
 20243                           fsr1h	equ	0xFE2
 20244                           fsr1l	equ	0xFE1
 20245                           indf2	equ	0xFDF
 20246                           postinc2	equ	0xFDE
 20247                           postdec2	equ	0xFDD
 20248                           plusw2	equ	0xFDB
 20249                           fsr2h	equ	0xFDA
 20250                           fsr2l	equ	0xFD9
 20251                           status	equ	0xFD8
 20252                           
 20253 ;; *************** function _SPIGet *****************
 20254 ;; Defined at:
 20255 ;;		line 104 in file "src/18F27J53/spi.c"
 20256 ;; Parameters:    Size  Location     Type
 20257 ;;		None
 20258 ;; Auto vars:     Size  Location     Type
 20259 ;;		None
 20260 ;; Return value:  Size  Location     Type
 20261 ;;                  1    wreg      unsigned char 
 20262 ;; Registers used:
 20263 ;;		wreg, status,2, cstack
 20264 ;; Tracked objects:
 20265 ;;		On entry : 0/0
 20266 ;;		On exit  : 0/0
 20267 ;;		Unchanged: 0/0
 20268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20273 ;;Total ram usage:        0 bytes
 20274 ;; Hardware stack levels used:    1
 20275 ;; Hardware stack levels required when called:    8
 20276 ;; This function calls:
 20277 ;;		_SPIPut
 20278 ;; This function is called by:
 20279 ;;		_RegisterRead
 20280 ;; This function uses a non-reentrant model
 20281 ;;
 20282                           
 20283                           	psect	text62
 20284  008C20                     __ptext62:
 20285                           	opt stack 0
 20286  008C20                     _SPIGet:
 20287                           	opt stack 16
 20288                           
 20289                           ;spi.c: 128: SPIPut(0x00);
 20290                           
 20291                           ; BSR set to: 0
 20292                           ;incstack = 0
 20293  008C20  0E00               	movlw	0
 20294  008C22  ECCB  F045         	call	_SPIPut
 20295                           
 20296                           ;spi.c: 129: return SSP2BUF;
 20297  008C26  5075               	movf	3957,w,c	;volatile
 20298  008C28  0012               	return	
 20299  008C2A                     __end_of_SPIGet:
 20300                           	opt stack 0
 20301                           tblptru	equ	0xFF8
 20302                           tblptrh	equ	0xFF7
 20303                           tblptrl	equ	0xFF6
 20304                           tablat	equ	0xFF5
 20305                           prodh	equ	0xFF4
 20306                           prodl	equ	0xFF3
 20307                           intcon	equ	0xFF2
 20308                           intcon2	equ	0xFF1
 20309                           intcon3	equ	0xFF0
 20310                           indf0	equ	0xFEF
 20311                           postinc0	equ	0xFEE
 20312                           plusw0	equ	0xFEB
 20313                           fsr0h	equ	0xFEA
 20314                           fsr0l	equ	0xFE9
 20315                           wreg	equ	0xFE8
 20316                           indf1	equ	0xFE7
 20317                           postinc1	equ	0xFE6
 20318                           postdec1	equ	0xFE5
 20319                           fsr1h	equ	0xFE2
 20320                           fsr1l	equ	0xFE1
 20321                           indf2	equ	0xFDF
 20322                           postinc2	equ	0xFDE
 20323                           postdec2	equ	0xFDD
 20324                           plusw2	equ	0xFDB
 20325                           fsr2h	equ	0xFDA
 20326                           fsr2l	equ	0xFD9
 20327                           status	equ	0xFD8
 20328                           
 20329 ;; *************** function _SPIPut *****************
 20330 ;; Defined at:
 20331 ;;		line 45 in file "src/18F27J53/spi.c"
 20332 ;; Parameters:    Size  Location     Type
 20333 ;;  v               1    wreg     unsigned char 
 20334 ;; Auto vars:     Size  Location     Type
 20335 ;;  v               1   34[BANK0 ] unsigned char 
 20336 ;;  i               1   33[BANK0 ] unsigned char 
 20337 ;; Return value:  Size  Location     Type
 20338 ;;		None               void
 20339 ;; Registers used:
 20340 ;;		wreg
 20341 ;; Tracked objects:
 20342 ;;		On entry : 0/0
 20343 ;;		On exit  : 0/0
 20344 ;;		Unchanged: 0/0
 20345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20350 ;;Total ram usage:        2 bytes
 20351 ;; Hardware stack levels used:    1
 20352 ;; Hardware stack levels required when called:    7
 20353 ;; This function calls:
 20354 ;;		Nothing
 20355 ;; This function is called by:
 20356 ;;		_SPIGet
 20357 ;;		_RegisterSet
 20358 ;;		_RegisterRead
 20359 ;;		_WriteFIFO
 20360 ;; This function uses a non-reentrant model
 20361 ;;
 20362                           
 20363                           	psect	text63
 20364  008B96                     __ptext63:
 20365                           	opt stack 0
 20366  008B96                     _SPIPut:
 20367                           	opt stack 17
 20368                           
 20369                           ;incstack = 0
 20370                           ;SPIPut@v stored from wreg
 20371  008B96  0100               	movlb	0	; () banked
 20372  008B98  6F82               	movwf	SPIPut@v& (0+255),b
 20373                           
 20374                           ;spi.c: 66: {
 20375                           ;spi.c: 68: uint8_t i;
 20376                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 20377  008B9A  9EA4               	bcf	4004,7,c	;volatile
 20378                           
 20379                           ;spi.c: 72: i = SSP2BUF;
 20380  008B9C  CF75 F081          	movff	3957,SPIPut@i	;volatile
 20381  008BA0                     l29:
 20382                           
 20383                           ;spi.c: 75: {
 20384                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 20385  008BA0  9E72               	bcf	3954,7,c	;volatile
 20386                           
 20387                           ;spi.c: 77: SSP2BUF = v;
 20388  008BA2  C082  FF75         	movff	SPIPut@v,3957	;volatile
 20389                           
 20390                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 20391  008BA6  BE72               	btfsc	3954,7,c	;volatile
 20392  008BA8  D7FB               	goto	l29
 20393  008BAA                     l31:
 20394  008BAA  AEA4               	btfss	4004,7,c	;volatile
 20395  008BAC  D7FE               	goto	l31
 20396                           
 20397                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 20398  008BAE  9EA4               	bcf	4004,7,c	;volatile
 20399  008BB0  0012               	return		;funcret
 20400  008BB2                     __end_of_SPIPut:
 20401                           	opt stack 0
 20402                           tblptru	equ	0xFF8
 20403                           tblptrh	equ	0xFF7
 20404                           tblptrl	equ	0xFF6
 20405                           tablat	equ	0xFF5
 20406                           prodh	equ	0xFF4
 20407                           prodl	equ	0xFF3
 20408                           intcon	equ	0xFF2
 20409                           intcon2	equ	0xFF1
 20410                           intcon3	equ	0xFF0
 20411                           indf0	equ	0xFEF
 20412                           postinc0	equ	0xFEE
 20413                           plusw0	equ	0xFEB
 20414                           fsr0h	equ	0xFEA
 20415                           fsr0l	equ	0xFE9
 20416                           wreg	equ	0xFE8
 20417                           indf1	equ	0xFE7
 20418                           postinc1	equ	0xFE6
 20419                           postdec1	equ	0xFE5
 20420                           fsr1h	equ	0xFE2
 20421                           fsr1l	equ	0xFE1
 20422                           indf2	equ	0xFDF
 20423                           postinc2	equ	0xFDE
 20424                           postdec2	equ	0xFDD
 20425                           plusw2	equ	0xFDB
 20426                           fsr2h	equ	0xFDA
 20427                           fsr2l	equ	0xFD9
 20428                           status	equ	0xFD8
 20429                           
 20430 ;; *************** function _CCM_Enc *****************
 20431 ;; Defined at:
 20432 ;;		line 240 in file "src/miwi/drv_mrf_miwi_security.c"
 20433 ;; Parameters:    Size  Location     Type
 20434 ;;  text            2   69[BANK0 ] PTR unsigned char 
 20435 ;;		 -> MACTxBuffer(64), 
 20436 ;;  headerLen       1   71[BANK0 ] unsigned char 
 20437 ;;  payloadLen      1   72[BANK0 ] unsigned char 
 20438 ;;  key             2   73[BANK0 ] PTR unsigned char 
 20439 ;;		 -> key(8), 
 20440 ;; Auto vars:     Size  Location     Type
 20441 ;;  i               1   79[BANK0 ] unsigned char 
 20442 ;; Return value:  Size  Location     Type
 20443 ;;		None               void
 20444 ;; Registers used:
 20445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20446 ;; Tracked objects:
 20447 ;;		On entry : 0/0
 20448 ;;		On exit  : 0/0
 20449 ;;		Unchanged: 0/0
 20450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20451 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20452 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20454 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20455 ;;Total ram usage:       11 bytes
 20456 ;; Hardware stack levels used:    1
 20457 ;; Hardware stack levels required when called:    9
 20458 ;; This function calls:
 20459 ;;		_CBC_MAC
 20460 ;;		_CTR
 20461 ;; This function is called by:
 20462 ;;		_MiMAC_SendPacket
 20463 ;; This function uses a non-reentrant model
 20464 ;;
 20465                           
 20466                           	psect	text64
 20467  006CFA                     __ptext64:
 20468                           	opt stack 0
 20469  006CFA                     _CCM_Enc:
 20470                           	opt stack 17
 20471                           
 20472                           ;drv_mrf_miwi_security.c: 245: uint8_t i;
 20473                           ;drv_mrf_miwi_security.c: 252: CBC_MAC(text, (headerLen + payloadLen), key, tmpBlock);
 20474                           
 20475                           ;incstack = 0
 20476  006CFA  C0A5  F098         	movff	CCM_Enc@text,CBC_MAC@text
 20477  006CFE  C0A6  F099         	movff	CCM_Enc@text+1,CBC_MAC@text+1
 20478  006D02  0100               	movlb	0	; () banked
 20479  006D04  51A7               	movf	CCM_Enc@headerLen& (0+255),w,b
 20480  006D06  0100               	movlb	0	; () banked
 20481  006D08  25A8               	addwf	CCM_Enc@payloadLen& (0+255),w,b
 20482  006D0A  0100               	movlb	0	; () banked
 20483  006D0C  6F9A               	movwf	CBC_MAC@len& (0+255),b
 20484  006D0E  C0A9  F09B         	movff	CCM_Enc@key,CBC_MAC@key
 20485  006D12  C0AA  F09C         	movff	CCM_Enc@key+1,CBC_MAC@key+1
 20486  006D16  0ECC               	movlw	low _tmpBlock
 20487  006D18  0100               	movlb	0	; () banked
 20488  006D1A  6F9D               	movwf	CBC_MAC@MIC& (0+255),b
 20489  006D1C  0E01               	movlw	high _tmpBlock
 20490  006D1E  0100               	movlb	0	; () banked
 20491  006D20  6F9E               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 20492  006D22  ECDD  F039         	call	_CBC_MAC	;wreg free
 20493                           
 20494                           ;drv_mrf_miwi_security.c: 254: for(i = 0; i < 4; i++)
 20495  006D26  0E00               	movlw	0
 20496  006D28  0100               	movlb	0	; () banked
 20497  006D2A  6FAF               	movwf	CCM_Enc@i& (0+255),b
 20498  006D2C                     l11050:
 20499                           
 20500                           ; BSR set to: 0
 20501  006D2C  0E03               	movlw	3
 20502  006D2E  0100               	movlb	0	; () banked
 20503  006D30  65AF               	cpfsgt	CCM_Enc@i& (0+255),b
 20504  006D32  D001               	goto	l11054
 20505  006D34  D028               	goto	l11060
 20506  006D36                     l11054:
 20507                           
 20508                           ; BSR set to: 0
 20509                           ;drv_mrf_miwi_security.c: 255: {
 20510                           ;drv_mrf_miwi_security.c: 256: text[headerLen + payloadLen + i] = tmpBlock[i];
 20511  006D36  0100               	movlb	0	; () banked
 20512  006D38  51AF               	movf	CCM_Enc@i& (0+255),w,b
 20513  006D3A  0D01               	mullw	1
 20514  006D3C  0ECC               	movlw	low _tmpBlock
 20515  006D3E  24F3               	addwf	prodl,w,c
 20516  006D40  6ED9               	movwf	fsr2l,c
 20517  006D42  0E01               	movlw	high _tmpBlock
 20518  006D44  20F4               	addwfc	prodh,w,c
 20519  006D46  6EDA               	movwf	fsr2h,c
 20520  006D48  0100               	movlb	0	; () banked
 20521  006D4A  51A8               	movf	CCM_Enc@payloadLen& (0+255),w,b
 20522  006D4C  C0A7  F0AB         	movff	CCM_Enc@headerLen,??_CCM_Enc
 20523  006D50  0100               	movlb	0	; () banked
 20524  006D52  6BAC               	clrf	(??_CCM_Enc+1)& (0+255),b
 20525  006D54  0100               	movlb	0	; () banked
 20526  006D56  27AB               	addwf	??_CCM_Enc& (0+255),f,b
 20527  006D58  0E00               	movlw	0
 20528  006D5A  23AC               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 20529  006D5C  0100               	movlb	0	; () banked
 20530  006D5E  51AF               	movf	CCM_Enc@i& (0+255),w,b
 20531  006D60  0100               	movlb	0	; () banked
 20532  006D62  27AB               	addwf	??_CCM_Enc& (0+255),f,b
 20533  006D64  0E00               	movlw	0
 20534  006D66  23AC               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 20535  006D68  0100               	movlb	0	; () banked
 20536  006D6A  51AB               	movf	??_CCM_Enc& (0+255),w,b
 20537  006D6C  0100               	movlb	0	; () banked
 20538  006D6E  25A5               	addwf	CCM_Enc@text& (0+255),w,b
 20539  006D70  6EE1               	movwf	fsr1l,c
 20540  006D72  0100               	movlb	0	; () banked
 20541  006D74  51AC               	movf	(??_CCM_Enc+1)& (0+255),w,b
 20542  006D76  0100               	movlb	0	; () banked
 20543  006D78  21A6               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 20544  006D7A  6EE2               	movwf	fsr1h,c
 20545  006D7C  CFDF FFE7          	movff	indf2,indf1
 20546                           
 20547                           ; BSR set to: 0
 20548  006D80  0100               	movlb	0	; () banked
 20549  006D82  2BAF               	incf	CCM_Enc@i& (0+255),f,b
 20550  006D84  D7D3               	goto	l11050
 20551  006D86                     l11060:
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;drv_mrf_miwi_security.c: 257: }
 20555                           ;drv_mrf_miwi_security.c: 259: for(i = 0; i < 4-1; i++)
 20556  006D86  0E00               	movlw	0
 20557  006D88  0100               	movlb	0	; () banked
 20558  006D8A  6FAF               	movwf	CCM_Enc@i& (0+255),b
 20559  006D8C                     l11062:
 20560                           
 20561                           ; BSR set to: 0
 20562  006D8C  0E02               	movlw	2
 20563  006D8E  0100               	movlb	0	; () banked
 20564  006D90  65AF               	cpfsgt	CCM_Enc@i& (0+255),b
 20565  006D92  D001               	goto	l11066
 20566  006D94  D02D               	goto	l11076
 20567  006D96                     l11066:
 20568                           
 20569                           ; BSR set to: 0
 20570                           ;drv_mrf_miwi_security.c: 260: {
 20571                           ;drv_mrf_miwi_security.c: 261: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 20572  006D96  0100               	movlb	0	; () banked
 20573  006D98  51A7               	movf	CCM_Enc@headerLen& (0+255),w,b
 20574  006D9A  0100               	movlb	0	; () banked
 20575  006D9C  5DAF               	subwf	CCM_Enc@i& (0+255),w,b
 20576  006D9E  A0D8               	btfss	status,0,c
 20577  006DA0  D006               	goto	l11070
 20578                           
 20579                           ; BSR set to: 0
 20580  006DA2  0E00               	movlw	0
 20581  006DA4  0100               	movlb	0	; () banked
 20582  006DA6  6FAE               	movwf	(_CCM_Enc$2085+1)& (0+255),b
 20583  006DA8  0E00               	movlw	0
 20584  006DAA  6FAD               	movwf	_CCM_Enc$2085& (0+255),b
 20585  006DAC  D013               	goto	l468
 20586  006DAE                     l11070:
 20587                           
 20588                           ; BSR set to: 0
 20589  006DAE  0100               	movlb	0	; () banked
 20590  006DB0  51AF               	movf	CCM_Enc@i& (0+255),w,b
 20591  006DB2  0D01               	mullw	1
 20592  006DB4  50F3               	movf	prodl,w,c
 20593  006DB6  0100               	movlb	0	; () banked
 20594  006DB8  25A5               	addwf	CCM_Enc@text& (0+255),w,b
 20595  006DBA  6ED9               	movwf	fsr2l,c
 20596  006DBC  50F4               	movf	prodh,w,c
 20597  006DBE  0100               	movlb	0	; () banked
 20598  006DC0  21A6               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 20599  006DC2  6EDA               	movwf	fsr2h,c
 20600  006DC4  50DF               	movf	indf2,w,c
 20601  006DC6  0100               	movlb	0	; () banked
 20602  006DC8  6FAB               	movwf	??_CCM_Enc& (0+255),b
 20603  006DCA  0100               	movlb	0	; () banked
 20604  006DCC  51AB               	movf	??_CCM_Enc& (0+255),w,b
 20605  006DCE  0100               	movlb	0	; () banked
 20606  006DD0  6FAD               	movwf	_CCM_Enc$2085& (0+255),b
 20607  006DD2  6BAE               	clrf	(_CCM_Enc$2085+1)& (0+255),b
 20608  006DD4                     l468:
 20609                           
 20610                           ; BSR set to: 0
 20611  006DD4  0100               	movlb	0	; () banked
 20612  006DD6  51AF               	movf	CCM_Enc@i& (0+255),w,b
 20613  006DD8  0D01               	mullw	1
 20614  006DDA  0ECC               	movlw	low _tmpBlock
 20615  006DDC  24F3               	addwf	prodl,w,c
 20616  006DDE  6ED9               	movwf	fsr2l,c
 20617  006DE0  0E01               	movlw	high _tmpBlock
 20618  006DE2  20F4               	addwfc	prodh,w,c
 20619  006DE4  6EDA               	movwf	fsr2h,c
 20620  006DE6  C0AD  FFDF         	movff	_CCM_Enc$2085,indf2
 20621                           
 20622                           ; BSR set to: 0
 20623  006DEA  0100               	movlb	0	; () banked
 20624  006DEC  2BAF               	incf	CCM_Enc@i& (0+255),f,b
 20625  006DEE  D7CE               	goto	l11062
 20626  006DF0                     l11076:
 20627                           
 20628                           ; BSR set to: 0
 20629                           ;drv_mrf_miwi_security.c: 262: }
 20630                           ;drv_mrf_miwi_security.c: 264: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBlock);
 20631  006DF0  0100               	movlb	0	; () banked
 20632  006DF2  51A7               	movf	CCM_Enc@headerLen& (0+255),w,b
 20633  006DF4  0D01               	mullw	1
 20634  006DF6  50F3               	movf	prodl,w,c
 20635  006DF8  0100               	movlb	0	; () banked
 20636  006DFA  25A5               	addwf	CCM_Enc@text& (0+255),w,b
 20637  006DFC  0100               	movlb	0	; () banked
 20638  006DFE  6F98               	movwf	CTR@text& (0+255),b
 20639  006E00  50F4               	movf	prodh,w,c
 20640  006E02  0100               	movlb	0	; () banked
 20641  006E04  21A6               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 20642  006E06  0100               	movlb	0	; () banked
 20643  006E08  6F99               	movwf	(CTR@text+1)& (0+255),b
 20644  006E0A  0100               	movlb	0	; () banked
 20645  006E0C  51A8               	movf	CCM_Enc@payloadLen& (0+255),w,b
 20646  006E0E  0F04               	addlw	4
 20647  006E10  0100               	movlb	0	; () banked
 20648  006E12  6F9A               	movwf	CTR@len& (0+255),b
 20649  006E14  C0A9  F09B         	movff	CCM_Enc@key,CTR@key
 20650  006E18  C0AA  F09C         	movff	CCM_Enc@key+1,CTR@key+1
 20651  006E1C  0ECC               	movlw	low _tmpBlock
 20652  006E1E  0100               	movlb	0	; () banked
 20653  006E20  6F9D               	movwf	CTR@nounce& (0+255),b
 20654  006E22  0E01               	movlw	high _tmpBlock
 20655  006E24  0100               	movlb	0	; () banked
 20656  006E26  6F9E               	movwf	(CTR@nounce+1)& (0+255),b
 20657  006E28  ECAA  F037         	call	_CTR	;wreg free
 20658  006E2C  0012               	return		;funcret
 20659  006E2E                     __end_of_CCM_Enc:
 20660                           	opt stack 0
 20661                           tblptru	equ	0xFF8
 20662                           tblptrh	equ	0xFF7
 20663                           tblptrl	equ	0xFF6
 20664                           tablat	equ	0xFF5
 20665                           prodh	equ	0xFF4
 20666                           prodl	equ	0xFF3
 20667                           intcon	equ	0xFF2
 20668                           intcon2	equ	0xFF1
 20669                           intcon3	equ	0xFF0
 20670                           indf0	equ	0xFEF
 20671                           postinc0	equ	0xFEE
 20672                           plusw0	equ	0xFEB
 20673                           fsr0h	equ	0xFEA
 20674                           fsr0l	equ	0xFE9
 20675                           wreg	equ	0xFE8
 20676                           indf1	equ	0xFE7
 20677                           postinc1	equ	0xFE6
 20678                           postdec1	equ	0xFE5
 20679                           fsr1h	equ	0xFE2
 20680                           fsr1l	equ	0xFE1
 20681                           indf2	equ	0xFDF
 20682                           postinc2	equ	0xFDE
 20683                           postdec2	equ	0xFDD
 20684                           plusw2	equ	0xFDB
 20685                           fsr2h	equ	0xFDA
 20686                           fsr2l	equ	0xFD9
 20687                           status	equ	0xFD8
 20688                           
 20689 ;; *************** function _MiMAC_ReceivedPacket *****************
 20690 ;; Defined at:
 20691 ;;		line 858 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20692 ;; Parameters:    Size  Location     Type
 20693 ;;		None
 20694 ;; Auto vars:     Size  Location     Type
 20695 ;;  FrameCounter    4   96[BANK0 ] struct .
 20696 ;;  k               1  100[BANK0 ] unsigned char 
 20697 ;;  PayloadIndex    1  102[BANK0 ] unsigned char 
 20698 ;;  j               1  101[BANK0 ] unsigned char 
 20699 ;;  currentTick     4   92[BANK0 ] struct _MIWI_TICK
 20700 ;;  i               1  103[BANK0 ] unsigned char 
 20701 ;; Return value:  Size  Location     Type
 20702 ;;                  1    wreg      unsigned char 
 20703 ;; Registers used:
 20704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20705 ;; Tracked objects:
 20706 ;;		On entry : 0/0
 20707 ;;		On exit  : 0/0
 20708 ;;		Unchanged: 0/0
 20709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20711 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20712 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20713 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20714 ;;Total ram usage:       20 bytes
 20715 ;; Hardware stack levels used:    1
 20716 ;; Hardware stack levels required when called:   10
 20717 ;; This function calls:
 20718 ;;		_CCM_Dec
 20719 ;;		_MiWi_TickGet
 20720 ;;		_isSameAddress
 20721 ;; This function is called by:
 20722 ;;		_MiWiTasks
 20723 ;; This function uses a non-reentrant model
 20724 ;;
 20725                           
 20726                           	psect	text65
 20727  0045E2                     __ptext65:
 20728                           	opt stack 0
 20729  0045E2                     _MiMAC_ReceivedPacket:
 20730                           	opt stack 15
 20731                           
 20732                           ;drv_mrf_miwi_89xa.c: 860: uint8_t i;
 20733                           ;drv_mrf_miwi_89xa.c: 861: MIWI_TICK currentTick;
 20734                           ;drv_mrf_miwi_89xa.c: 865: for(i = 0; i < 5; i++)
 20735                           
 20736                           ;incstack = 0
 20737  0045E2  0E00               	movlw	0
 20738  0045E4  0100               	movlb	0	; () banked
 20739  0045E6  6FC7               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 20740  0045E8                     l11308:
 20741                           
 20742                           ; BSR set to: 0
 20743  0045E8  0E04               	movlw	4
 20744  0045EA  0100               	movlb	0	; () banked
 20745  0045EC  65C7               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 20746  0045EE  D001               	goto	l11312
 20747  0045F0  D084               	goto	l11326
 20748  0045F2                     l11312:
 20749                           
 20750                           ; BSR set to: 0
 20751                           ;drv_mrf_miwi_89xa.c: 866: {
 20752                           ;drv_mrf_miwi_89xa.c: 867: currentTick = MiWi_TickGet();
 20753  0045F2  EC57  F042         	call	_MiWi_TickGet	;wreg free
 20754  0045F6  C081  F0BC         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
 20755  0045FA  C082  F0BD         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
 20756  0045FE  C083  F0BE         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
 20757  004602  C084  F0BF         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
 20758                           
 20759                           ;drv_mrf_miwi_89xa.c: 868: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
 20760                           ;drv_mrf_miwi_89xa.c: 869: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          6000000)/32)) )
 20761  004606  0100               	movlb	0	; () banked
 20762  004608  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20763  00460A  0D06               	mullw	6
 20764  00460C  0E28               	movlw	low _AckInfo
 20765  00460E  24F3               	addwf	prodl,w,c
 20766  004610  6ED9               	movwf	fsr2l,c
 20767  004612  0E02               	movlw	high _AckInfo
 20768  004614  20F4               	addwfc	prodh,w,c
 20769  004616  6EDA               	movwf	fsr2h,c
 20770  004618  50DF               	movf	indf2,w,c
 20771  00461A  B4D8               	btfsc	status,2,c
 20772  00461C  D06B               	goto	l11322
 20773                           
 20774                           ; BSR set to: 0
 20775  00461E  0100               	movlb	0	; () banked
 20776  004620  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20777  004622  0D06               	mullw	6
 20778  004624  0E02               	movlw	2
 20779  004626  26F3               	addwf	prodl,f,c
 20780  004628  0E00               	movlw	0
 20781  00462A  22F4               	addwfc	prodh,f,c
 20782  00462C  0E28               	movlw	low _AckInfo
 20783  00462E  24F3               	addwf	prodl,w,c
 20784  004630  6ED9               	movwf	fsr2l,c
 20785  004632  0E02               	movlw	high _AckInfo
 20786  004634  20F4               	addwfc	prodh,w,c
 20787  004636  6EDA               	movwf	fsr2h,c
 20788  004638  0100               	movlb	0	; () banked
 20789  00463A  51BC               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 20790  00463C  5CDE               	subwf	postinc2,w,c
 20791  00463E  0100               	movlb	0	; () banked
 20792  004640  51BD               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 20793  004642  58DE               	subwfb	postinc2,w,c
 20794  004644  0100               	movlb	0	; () banked
 20795  004646  51BE               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 20796  004648  58DE               	subwfb	postinc2,w,c
 20797  00464A  0100               	movlb	0	; () banked
 20798  00464C  51BF               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 20799  00464E  58DE               	subwfb	postinc2,w,c
 20800  004650  B0D8               	btfsc	status,0,c
 20801  004652  D050               	goto	l11322
 20802                           
 20803                           ; BSR set to: 0
 20804  004654  0100               	movlb	0	; () banked
 20805  004656  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20806  004658  0D06               	mullw	6
 20807  00465A  0E02               	movlw	2
 20808  00465C  26F3               	addwf	prodl,f,c
 20809  00465E  0E00               	movlw	0
 20810  004660  22F4               	addwfc	prodh,f,c
 20811  004662  0E28               	movlw	low _AckInfo
 20812  004664  24F3               	addwf	prodl,w,c
 20813  004666  6ED9               	movwf	fsr2l,c
 20814  004668  0E02               	movlw	high _AckInfo
 20815  00466A  20F4               	addwfc	prodh,w,c
 20816  00466C  6EDA               	movwf	fsr2h,c
 20817  00466E  CFDE F0B4          	movff	postinc2,??_MiMAC_ReceivedPacket
 20818  004672  CFDE F0B5          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 20819  004676  CFDE F0B6          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 20820  00467A  CFDE F0B7          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 20821  00467E  0100               	movlb	0	; () banked
 20822  004680  1FB4               	comf	??_MiMAC_ReceivedPacket& (0+255),f,b
 20823  004682  1FB5               	comf	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 20824  004684  1FB6               	comf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 20825  004686  1FB7               	comf	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 20826  004688  2BB4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 20827  00468A  0E00               	movlw	0
 20828  00468C  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 20829  00468E  23B6               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 20830  004690  23B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 20831  004692  0100               	movlb	0	; () banked
 20832  004694  51BC               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 20833  004696  0100               	movlb	0	; () banked
 20834  004698  25B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 20835  00469A  0100               	movlb	0	; () banked
 20836  00469C  6FB8               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 20837  00469E  0100               	movlb	0	; () banked
 20838  0046A0  51BD               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 20839  0046A2  0100               	movlb	0	; () banked
 20840  0046A4  21B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 20841  0046A6  0100               	movlb	0	; () banked
 20842  0046A8  6FB9               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 20843  0046AA  0100               	movlb	0	; () banked
 20844  0046AC  51BE               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 20845  0046AE  0100               	movlb	0	; () banked
 20846  0046B0  21B6               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 20847  0046B2  0100               	movlb	0	; () banked
 20848  0046B4  6FBA               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 20849  0046B6  0100               	movlb	0	; () banked
 20850  0046B8  51BF               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 20851  0046BA  0100               	movlb	0	; () banked
 20852  0046BC  21B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 20853  0046BE  0100               	movlb	0	; () banked
 20854  0046C0  6FBB               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 20855  0046C2  0100               	movlb	0	; () banked
 20856  0046C4  51BB               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 20857  0046C6  E10B               	bnz	u12660
 20858  0046C8  0E21               	movlw	33
 20859  0046CA  0100               	movlb	0	; () banked
 20860  0046CC  5DB8               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 20861  0046CE  0EA1               	movlw	161
 20862  0046D0  0100               	movlb	0	; () banked
 20863  0046D2  59B9               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 20864  0046D4  0E07               	movlw	7
 20865  0046D6  0100               	movlb	0	; () banked
 20866  0046D8  59BA               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 20867  0046DA  A0D8               	btfss	status,0,c
 20868  0046DC  D00B               	goto	l11322
 20869  0046DE                     u12660:
 20870                           
 20871                           ; BSR set to: 0
 20872                           ;drv_mrf_miwi_89xa.c: 870: {
 20873                           ;drv_mrf_miwi_89xa.c: 871: AckInfo[i].Valid = 0;
 20874  0046DE  0100               	movlb	0	; () banked
 20875  0046E0  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20876  0046E2  0D06               	mullw	6
 20877  0046E4  0E28               	movlw	low _AckInfo
 20878  0046E6  24F3               	addwf	prodl,w,c
 20879  0046E8  6ED9               	movwf	fsr2l,c
 20880  0046EA  0E02               	movlw	high _AckInfo
 20881  0046EC  20F4               	addwfc	prodh,w,c
 20882  0046EE  6EDA               	movwf	fsr2h,c
 20883  0046F0  0E00               	movlw	0
 20884  0046F2  6EDF               	movwf	indf2,c
 20885  0046F4                     l11322:
 20886                           
 20887                           ; BSR set to: 0
 20888  0046F4  0100               	movlb	0	; () banked
 20889  0046F6  2BC7               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 20890  0046F8  D777               	goto	l11308
 20891  0046FA                     l11326:
 20892                           
 20893                           ; BSR set to: 0
 20894                           ;drv_mrf_miwi_89xa.c: 872: }
 20895                           ;drv_mrf_miwi_89xa.c: 873: }
 20896                           ;drv_mrf_miwi_89xa.c: 876: if( ReceivedBankIndex != 0xFF )
 20897  0046FA  2845               	incf	_ReceivedBankIndex,w,c
 20898  0046FC  B4D8               	btfsc	status,2,c
 20899  0046FE  D002               	goto	l11332
 20900                           
 20901                           ; BSR set to: 0
 20902                           ;drv_mrf_miwi_89xa.c: 877: {
 20903                           ;drv_mrf_miwi_89xa.c: 878: return 0;
 20904  004700  0E00               	movlw	0
 20905                           
 20906                           ; BSR set to: 0
 20907  004702  0012               	return	
 20908  004704                     l11332:
 20909                           
 20910                           ; BSR set to: 0
 20911                           ;drv_mrf_miwi_89xa.c: 879: }
 20912                           ;drv_mrf_miwi_89xa.c: 881: for(i = 0; i < 2; i++)
 20913  004704  0E00               	movlw	0
 20914  004706  0100               	movlb	0	; () banked
 20915  004708  6FC7               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 20916  00470A                     l11334:
 20917                           
 20918                           ; BSR set to: 0
 20919  00470A  0E01               	movlw	1
 20920  00470C  0100               	movlb	0	; () banked
 20921  00470E  65C7               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 20922  004710  D001               	goto	l11338
 20923  004712  D1B2               	goto	l11436
 20924  004714                     l11338:
 20925                           
 20926                           ; BSR set to: 0
 20927                           ;drv_mrf_miwi_89xa.c: 882: {
 20928                           ;drv_mrf_miwi_89xa.c: 883: if( RxPacket[i].flags.bits.Valid )
 20929  004714  0100               	movlb	0	; () banked
 20930  004716  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20931  004718  0D42               	mullw	66
 20932  00471A  0E50               	movlw	low _RxPacket
 20933  00471C  24F3               	addwf	prodl,w,c
 20934  00471E  6ED9               	movwf	fsr2l,c
 20935  004720  0E03               	movlw	high _RxPacket
 20936  004722  20F4               	addwfc	prodh,w,c
 20937  004724  6EDA               	movwf	fsr2h,c
 20938  004726  0103               	movlb	3	; () banked
 20939  004728  A0DF               	btfss	indf2,0,c
 20940  00472A  D1A3               	goto	l11432
 20941                           
 20942                           ; BSR set to: 3
 20943                           ;drv_mrf_miwi_89xa.c: 884: {
 20944                           ;drv_mrf_miwi_89xa.c: 885: uint8_t PayloadIndex;
 20945                           ;drv_mrf_miwi_89xa.c: 886: uint8_t j;
 20946                           ;drv_mrf_miwi_89xa.c: 888: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 20947  00472C  0100               	movlb	0	; () banked
 20948  00472E  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20949  004730  0D42               	mullw	66
 20950  004732  0E01               	movlw	1
 20951  004734  26F3               	addwf	prodl,f,c
 20952  004736  0E00               	movlw	0
 20953  004738  22F4               	addwfc	prodh,f,c
 20954  00473A  0E50               	movlw	low _RxPacket
 20955  00473C  24F3               	addwf	prodl,w,c
 20956  00473E  6ED9               	movwf	fsr2l,c
 20957  004740  0E03               	movlw	high _RxPacket
 20958  004742  20F4               	addwfc	prodh,w,c
 20959  004744  6EDA               	movwf	fsr2h,c
 20960  004746  50DF               	movf	indf2,w,c
 20961  004748  6E34               	movwf	_MACRxPacket,c
 20962                           
 20963                           ;drv_mrf_miwi_89xa.c: 889: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 20964  00474A  0100               	movlb	0	; () banked
 20965  00474C  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20966  00474E  0D42               	mullw	66
 20967  004750  0E41               	movlw	65
 20968  004752  26F3               	addwf	prodl,f,c
 20969  004754  0E00               	movlw	0
 20970  004756  22F4               	addwfc	prodh,f,c
 20971  004758  0E50               	movlw	low _RxPacket
 20972  00475A  24F3               	addwf	prodl,w,c
 20973  00475C  6ED9               	movwf	fsr2l,c
 20974  00475E  0E03               	movlw	high _RxPacket
 20975  004760  20F4               	addwfc	prodh,w,c
 20976  004762  6EDA               	movwf	fsr2h,c
 20977  004764  50DF               	movf	indf2,w,c
 20978  004766  6E39               	movwf	_MACRxPacket+5,c
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;drv_mrf_miwi_89xa.c: 890: PayloadIndex = 2;
 20982  004768  0E02               	movlw	2
 20983  00476A  0100               	movlb	0	; () banked
 20984  00476C  6FC6               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;drv_mrf_miwi_89xa.c: 892: if( MACRxPacket.flags.bits.destPrsnt )
 20988  00476E  AC34               	btfss	_MACRxPacket,6,c
 20989  004770  D006               	goto	l11348
 20990                           
 20991                           ; BSR set to: 0
 20992                           ;drv_mrf_miwi_89xa.c: 893: {
 20993                           ;drv_mrf_miwi_89xa.c: 894: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 20994  004772  303C               	rrcf	_MACInitParams,w,c
 20995  004774  32E8               	rrcf	wreg,f,c
 20996  004776  32E8               	rrcf	wreg,f,c
 20997  004778  0B0F               	andlw	15
 20998  00477A  0100               	movlb	0	; () banked
 20999  00477C  27C6               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21000  00477E                     l11348:
 21001                           
 21002                           ; BSR set to: 0
 21003                           ;drv_mrf_miwi_89xa.c: 895: }
 21004                           ;drv_mrf_miwi_89xa.c: 897: if( MACRxPacket.flags.bits.sourcePrsnt )
 21005  00477E  AE34               	btfss	_MACRxPacket,7,c
 21006  004780  D025               	goto	l11354
 21007                           
 21008                           ; BSR set to: 0
 21009                           ;drv_mrf_miwi_89xa.c: 898: {
 21010                           ;drv_mrf_miwi_89xa.c: 899: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 21011  004782  0100               	movlb	0	; () banked
 21012  004784  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21013  004786  0D01               	mullw	1
 21014  004788  0E01               	movlw	1
 21015  00478A  26F3               	addwf	prodl,f,c
 21016  00478C  0E00               	movlw	0
 21017  00478E  22F4               	addwfc	prodh,f,c
 21018  004790  0E50               	movlw	low _RxPacket
 21019  004792  0100               	movlb	0	; () banked
 21020  004794  6FB4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21021  004796  0E03               	movlw	high _RxPacket
 21022  004798  0100               	movlb	0	; () banked
 21023  00479A  6FB5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21024  00479C  50F3               	movf	prodl,w,c
 21025  00479E  0100               	movlb	0	; () banked
 21026  0047A0  27B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21027  0047A2  50F4               	movf	prodh,w,c
 21028  0047A4  0100               	movlb	0	; () banked
 21029  0047A6  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21030  0047A8  0100               	movlb	0	; () banked
 21031  0047AA  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21032  0047AC  0D42               	mullw	66
 21033  0047AE  50F3               	movf	prodl,w,c
 21034  0047B0  0100               	movlb	0	; () banked
 21035  0047B2  25B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21036  0047B4  6E35               	movwf	_MACRxPacket+1,c
 21037  0047B6  50F4               	movf	prodh,w,c
 21038  0047B8  0100               	movlb	0	; () banked
 21039  0047BA  21B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21040  0047BC  6E36               	movwf	_MACRxPacket+2,c
 21041                           
 21042                           ; BSR set to: 0
 21043                           ;drv_mrf_miwi_89xa.c: 900: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 21044  0047BE  303C               	rrcf	_MACInitParams,w,c
 21045  0047C0  32E8               	rrcf	wreg,f,c
 21046  0047C2  32E8               	rrcf	wreg,f,c
 21047  0047C4  0B0F               	andlw	15
 21048  0047C6  0100               	movlb	0	; () banked
 21049  0047C8  27C6               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21050                           
 21051                           ;drv_mrf_miwi_89xa.c: 901: }
 21052  0047CA  D004               	goto	l11356
 21053  0047CC                     l11354:
 21054                           
 21055                           ; BSR set to: 0
 21056                           ;drv_mrf_miwi_89xa.c: 902: else
 21057                           ;drv_mrf_miwi_89xa.c: 903: {
 21058                           ;drv_mrf_miwi_89xa.c: 904: MACRxPacket.SourceAddress = (0);
 21059  0047CC  0E00               	movlw	0
 21060  0047CE  6E35               	movwf	_MACRxPacket+1,c
 21061  0047D0  0E00               	movlw	0
 21062  0047D2  6E36               	movwf	_MACRxPacket+2,c
 21063  0047D4                     l11356:
 21064                           
 21065                           ; BSR set to: 0
 21066                           ;drv_mrf_miwi_89xa.c: 905: }
 21067                           ;drv_mrf_miwi_89xa.c: 909: if( MACRxPacket.flags.bits.secEn )
 21068  0047D4  A634               	btfss	_MACRxPacket,3,c
 21069  0047D6  D126               	goto	l11420
 21070                           
 21071                           ; BSR set to: 0
 21072                           ;drv_mrf_miwi_89xa.c: 910: {
 21073                           ;drv_mrf_miwi_89xa.c: 912: if( 0x00 != RxPacket[i].Payload[PayloadIndex+4] )
 21074  0047D8  0100               	movlb	0	; () banked
 21075  0047DA  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21076  0047DC  0D42               	mullw	66
 21077  0047DE  0100               	movlb	0	; () banked
 21078  0047E0  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21079  0047E2  0100               	movlb	0	; () banked
 21080  0047E4  6FB4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21081  0047E6  6BB5               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21082  0047E8  0E05               	movlw	5
 21083  0047EA  0100               	movlb	0	; () banked
 21084  0047EC  27B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21085  0047EE  0E00               	movlw	0
 21086  0047F0  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21087  0047F2  0E50               	movlw	low _RxPacket
 21088  0047F4  0100               	movlb	0	; () banked
 21089  0047F6  6FB6               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 21090  0047F8  0E03               	movlw	high _RxPacket
 21091  0047FA  0100               	movlb	0	; () banked
 21092  0047FC  6FB7               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 21093  0047FE  0100               	movlb	0	; () banked
 21094  004800  51B4               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21095  004802  0100               	movlb	0	; () banked
 21096  004804  27B6               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21097  004806  0100               	movlb	0	; () banked
 21098  004808  51B5               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21099  00480A  0100               	movlb	0	; () banked
 21100  00480C  23B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21101  00480E  50F3               	movf	prodl,w,c
 21102  004810  0100               	movlb	0	; () banked
 21103  004812  25B6               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21104  004814  6ED9               	movwf	fsr2l,c
 21105  004816  50F4               	movf	prodh,w,c
 21106  004818  0100               	movlb	0	; () banked
 21107  00481A  21B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21108  00481C  6EDA               	movwf	fsr2h,c
 21109  00481E  50DF               	movf	indf2,w,c
 21110  004820  B4D8               	btfsc	status,2,c
 21111  004822  D00D               	goto	l352
 21112                           
 21113                           ; BSR set to: 0
 21114                           ;drv_mrf_miwi_89xa.c: 913: {
 21115                           ;drv_mrf_miwi_89xa.c: 914: RxPacket[i].flags.Val = 0;
 21116  004824  0100               	movlb	0	; () banked
 21117  004826  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21118  004828  0D42               	mullw	66
 21119  00482A  0E50               	movlw	low _RxPacket
 21120  00482C  24F3               	addwf	prodl,w,c
 21121  00482E  6ED9               	movwf	fsr2l,c
 21122  004830  0E03               	movlw	high _RxPacket
 21123  004832  20F4               	addwfc	prodh,w,c
 21124  004834  6EDA               	movwf	fsr2h,c
 21125  004836  0E00               	movlw	0
 21126  004838  6EDF               	movwf	indf2,c
 21127                           
 21128                           ; BSR set to: 0
 21129                           ;drv_mrf_miwi_89xa.c: 915: return 0;
 21130  00483A  0E00               	movlw	0
 21131                           
 21132                           ; BSR set to: 0
 21133  00483C  0012               	return	
 21134  00483E                     l352:
 21135                           
 21136                           ; BSR set to: 0
 21137                           ;drv_mrf_miwi_89xa.c: 916: }
 21138                           ;drv_mrf_miwi_89xa.c: 919: if( MACRxPacket.flags.bits.sourcePrsnt )
 21139  00483E  AE34               	btfss	_MACRxPacket,7,c
 21140  004840  D0AA               	goto	l11408
 21141                           
 21142                           ; BSR set to: 0
 21143                           ;drv_mrf_miwi_89xa.c: 920: {
 21144                           ;drv_mrf_miwi_89xa.c: 922: for(j = 0; j < 10; j++)
 21145  004842  0E00               	movlw	0
 21146  004844  0100               	movlb	0	; () banked
 21147  004846  6FC5               	movwf	MiMAC_ReceivedPacket@j& (0+255),b
 21148  004848                     l11368:
 21149                           
 21150                           ; BSR set to: 0
 21151  004848  0E09               	movlw	9
 21152  00484A  0100               	movlb	0	; () banked
 21153  00484C  65C5               	cpfsgt	MiMAC_ReceivedPacket@j& (0+255),b
 21154  00484E  D001               	goto	l11372
 21155  004850  D02B               	goto	l11382
 21156  004852                     l11372:
 21157                           
 21158                           ; BSR set to: 0
 21159                           ;drv_mrf_miwi_89xa.c: 923: {
 21160                           ;drv_mrf_miwi_89xa.c: 924: if( (ConnectionTable[j].status.bits.isValid) &&
 21161                           ;drv_mrf_miwi_89xa.c: 925: isSameAddress(ConnectionTable[j].Address, MACRxPacket.SourceA
      +                          ddress) )
 21162  004852  0100               	movlb	0	; () banked
 21163  004854  51C5               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21164  004856  0D09               	mullw	9
 21165  004858  0E08               	movlw	8
 21166  00485A  26F3               	addwf	prodl,f,c
 21167  00485C  0E00               	movlw	0
 21168  00485E  22F4               	addwfc	prodh,f,c
 21169  004860  0E46               	movlw	low _ConnectionTable
 21170  004862  24F3               	addwf	prodl,w,c
 21171  004864  6ED9               	movwf	fsr2l,c
 21172  004866  0E02               	movlw	high _ConnectionTable
 21173  004868  20F4               	addwfc	prodh,w,c
 21174  00486A  6EDA               	movwf	fsr2h,c
 21175  00486C  0102               	movlb	2	; () banked
 21176  00486E  AEDF               	btfss	indf2,7,c
 21177  004870  D018               	goto	l11378
 21178                           
 21179                           ; BSR set to: 2
 21180  004872  0100               	movlb	0	; () banked
 21181  004874  51C5               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21182  004876  0D09               	mullw	9
 21183  004878  0E04               	movlw	4
 21184  00487A  26F3               	addwf	prodl,f,c
 21185  00487C  0E00               	movlw	0
 21186  00487E  22F4               	addwfc	prodh,f,c
 21187  004880  0E46               	movlw	low _ConnectionTable
 21188  004882  24F3               	addwf	prodl,w,c
 21189  004884  0100               	movlb	0	; () banked
 21190  004886  6F81               	movwf	isSameAddress@Address1& (0+255),b
 21191  004888  0E02               	movlw	high _ConnectionTable
 21192  00488A  20F4               	addwfc	prodh,w,c
 21193  00488C  0100               	movlb	0	; () banked
 21194  00488E  6F82               	movwf	(isSameAddress@Address1+1)& (0+255),b
 21195  004890  C035  F083         	movff	_MACRxPacket+1,isSameAddress@Address2
 21196  004894  C036  F084         	movff	_MACRxPacket+2,isSameAddress@Address2+1
 21197  004898  ECE8  F043         	call	_isSameAddress	;wreg free
 21198  00489C  0900               	iorlw	0
 21199  00489E  A4D8               	btfss	status,2,c
 21200  0048A0  D003               	goto	l11382
 21201  0048A2                     l11378:
 21202  0048A2  0100               	movlb	0	; () banked
 21203  0048A4  2BC5               	incf	MiMAC_ReceivedPacket@j& (0+255),f,b
 21204  0048A6  D7D0               	goto	l11368
 21205  0048A8                     l11382:
 21206                           
 21207                           ;drv_mrf_miwi_89xa.c: 928: }
 21208                           ;drv_mrf_miwi_89xa.c: 929: }
 21209                           ;drv_mrf_miwi_89xa.c: 930: if( j < 10 )
 21210  0048A8  0E0A               	movlw	10
 21211  0048AA  0100               	movlb	0	; () banked
 21212  0048AC  61C5               	cpfslt	MiMAC_ReceivedPacket@j& (0+255),b
 21213  0048AE  D073               	goto	l11408
 21214                           
 21215                           ; BSR set to: 0
 21216                           ;drv_mrf_miwi_89xa.c: 931: {
 21217                           ;drv_mrf_miwi_89xa.c: 932: API_UINT32_UNION FrameCounter;
 21218                           ;drv_mrf_miwi_89xa.c: 933: uint8_t k;
 21219                           ;drv_mrf_miwi_89xa.c: 935: for(k = 0; k < 4; k++)
 21220  0048B0  0E00               	movlw	0
 21221  0048B2  0100               	movlb	0	; () banked
 21222  0048B4  6FC4               	movwf	MiMAC_ReceivedPacket@k& (0+255),b
 21223  0048B6                     l11386:
 21224                           
 21225                           ; BSR set to: 0
 21226  0048B6  0E03               	movlw	3
 21227  0048B8  0100               	movlb	0	; () banked
 21228  0048BA  65C4               	cpfsgt	MiMAC_ReceivedPacket@k& (0+255),b
 21229  0048BC  D001               	goto	l11390
 21230  0048BE  D036               	goto	l11396
 21231  0048C0                     l11390:
 21232                           
 21233                           ; BSR set to: 0
 21234                           ;drv_mrf_miwi_89xa.c: 936: {
 21235                           ;drv_mrf_miwi_89xa.c: 937: FrameCounter.v[k] = RxPacket[i].Payload[PayloadIndex+k];
 21236  0048C0  0100               	movlb	0	; () banked
 21237  0048C2  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21238  0048C4  0D42               	mullw	66
 21239  0048C6  0100               	movlb	0	; () banked
 21240  0048C8  51C4               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 21241  0048CA  C0C6  F0B4         	movff	MiMAC_ReceivedPacket@PayloadIndex,??_MiMAC_ReceivedPacket
 21242  0048CE  0100               	movlb	0	; () banked
 21243  0048D0  6BB5               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21244  0048D2  0100               	movlb	0	; () banked
 21245  0048D4  27B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21246  0048D6  0E00               	movlw	0
 21247  0048D8  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21248  0048DA  0E01               	movlw	1
 21249  0048DC  0100               	movlb	0	; () banked
 21250  0048DE  27B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21251  0048E0  0E00               	movlw	0
 21252  0048E2  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21253  0048E4  0E50               	movlw	low _RxPacket
 21254  0048E6  0100               	movlb	0	; () banked
 21255  0048E8  6FB6               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 21256  0048EA  0E03               	movlw	high _RxPacket
 21257  0048EC  0100               	movlb	0	; () banked
 21258  0048EE  6FB7               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 21259  0048F0  0100               	movlb	0	; () banked
 21260  0048F2  51B4               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21261  0048F4  0100               	movlb	0	; () banked
 21262  0048F6  27B6               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21263  0048F8  0100               	movlb	0	; () banked
 21264  0048FA  51B5               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21265  0048FC  0100               	movlb	0	; () banked
 21266  0048FE  23B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21267  004900  50F3               	movf	prodl,w,c
 21268  004902  0100               	movlb	0	; () banked
 21269  004904  25B6               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21270  004906  6ED9               	movwf	fsr2l,c
 21271  004908  50F4               	movf	prodh,w,c
 21272  00490A  0100               	movlb	0	; () banked
 21273  00490C  21B7               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21274  00490E  6EDA               	movwf	fsr2h,c
 21275  004910  0100               	movlb	0	; () banked
 21276  004912  51C4               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 21277  004914  0D01               	mullw	1
 21278  004916  0EC0               	movlw	low MiMAC_ReceivedPacket@FrameCounter
 21279  004918  24F3               	addwf	prodl,w,c
 21280  00491A  6EE1               	movwf	fsr1l,c
 21281  00491C  0E00               	movlw	high MiMAC_ReceivedPacket@FrameCounter
 21282  00491E  20F4               	addwfc	prodh,w,c
 21283  004920  6EE2               	movwf	fsr1h,c
 21284  004922  CFDF FFE7          	movff	indf2,indf1
 21285                           
 21286                           ; BSR set to: 0
 21287  004926  0100               	movlb	0	; () banked
 21288  004928  2BC4               	incf	MiMAC_ReceivedPacket@k& (0+255),f,b
 21289  00492A  D7C5               	goto	l11386
 21290  00492C                     l11396:
 21291                           
 21292                           ; BSR set to: 0
 21293                           ;drv_mrf_miwi_89xa.c: 938: }
 21294                           ;drv_mrf_miwi_89xa.c: 940: if( IncomingFrameCounter[j].Val > FrameCounter.Val )
 21295  00492C  0100               	movlb	0	; () banked
 21296  00492E  51C5               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21297  004930  0D04               	mullw	4
 21298  004932  0E00               	movlw	low _IncomingFrameCounter
 21299  004934  24F3               	addwf	prodl,w,c
 21300  004936  6ED9               	movwf	fsr2l,c
 21301  004938  0E02               	movlw	high _IncomingFrameCounter
 21302  00493A  20F4               	addwfc	prodh,w,c
 21303  00493C  6EDA               	movwf	fsr2h,c
 21304  00493E  50DE               	movf	postinc2,w,c
 21305  004940  0100               	movlb	0	; () banked
 21306  004942  5DC0               	subwf	MiMAC_ReceivedPacket@FrameCounter& (0+255),w,b
 21307  004944  50DE               	movf	postinc2,w,c
 21308  004946  0100               	movlb	0	; () banked
 21309  004948  59C1               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+1)& (0+255),w,b
 21310  00494A  50DE               	movf	postinc2,w,c
 21311  00494C  0100               	movlb	0	; () banked
 21312  00494E  59C2               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+2)& (0+255),w,b
 21313  004950  50DE               	movf	postinc2,w,c
 21314  004952  0100               	movlb	0	; () banked
 21315  004954  59C3               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+3)& (0+255),w,b
 21316  004956  B0D8               	btfsc	status,0,c
 21317  004958  D00D               	goto	l11406
 21318                           
 21319                           ; BSR set to: 0
 21320                           ;drv_mrf_miwi_89xa.c: 941: {
 21321                           ;drv_mrf_miwi_89xa.c: 942: RxPacket[i].flags.Val = 0;
 21322  00495A  0100               	movlb	0	; () banked
 21323  00495C  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21324  00495E  0D42               	mullw	66
 21325  004960  0E50               	movlw	low _RxPacket
 21326  004962  24F3               	addwf	prodl,w,c
 21327  004964  6ED9               	movwf	fsr2l,c
 21328  004966  0E03               	movlw	high _RxPacket
 21329  004968  20F4               	addwfc	prodh,w,c
 21330  00496A  6EDA               	movwf	fsr2h,c
 21331  00496C  0E00               	movlw	0
 21332  00496E  6EDF               	movwf	indf2,c
 21333                           
 21334                           ; BSR set to: 0
 21335                           ;drv_mrf_miwi_89xa.c: 943: return 0;
 21336  004970  0E00               	movlw	0
 21337                           
 21338                           ; BSR set to: 0
 21339  004972  0012               	return	
 21340  004974                     l11406:
 21341                           
 21342                           ; BSR set to: 0
 21343                           ;drv_mrf_miwi_89xa.c: 945: else
 21344                           ;drv_mrf_miwi_89xa.c: 946: {
 21345                           ;drv_mrf_miwi_89xa.c: 947: IncomingFrameCounter[j].Val = FrameCounter.Val;
 21346  004974  0100               	movlb	0	; () banked
 21347  004976  51C5               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21348  004978  0D04               	mullw	4
 21349  00497A  0E00               	movlw	low _IncomingFrameCounter
 21350  00497C  24F3               	addwf	prodl,w,c
 21351  00497E  6ED9               	movwf	fsr2l,c
 21352  004980  0E02               	movlw	high _IncomingFrameCounter
 21353  004982  20F4               	addwfc	prodh,w,c
 21354  004984  6EDA               	movwf	fsr2h,c
 21355  004986  C0C0  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter,postinc2
 21356  00498A  C0C1  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+1,postinc2
 21357  00498E  C0C2  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+2,postinc2
 21358  004992  C0C3  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+3,postinc2
 21359  004996                     l11408:
 21360                           
 21361                           ; BSR set to: 0
 21362                           ;drv_mrf_miwi_89xa.c: 948: }
 21363                           ;drv_mrf_miwi_89xa.c: 949: }
 21364                           ;drv_mrf_miwi_89xa.c: 950: }
 21365                           ;drv_mrf_miwi_89xa.c: 953: PayloadIndex += 5;
 21366  004996  0E05               	movlw	5
 21367  004998  0100               	movlb	0	; () banked
 21368  00499A  27C6               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21369                           
 21370                           ; BSR set to: 0
 21371                           ;drv_mrf_miwi_89xa.c: 975: if(CCM_Dec((uint8_t *)RxPacket[i].Payload, PayloadIndex, RxPa
      +                          cket[i].PayloadLen-PayloadIndex, key) == 0)
 21372  00499C  0100               	movlb	0	; () banked
 21373  00499E  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21374  0049A0  0D42               	mullw	66
 21375  0049A2  0E01               	movlw	1
 21376  0049A4  26F3               	addwf	prodl,f,c
 21377  0049A6  0E00               	movlw	0
 21378  0049A8  22F4               	addwfc	prodh,f,c
 21379  0049AA  0E50               	movlw	low _RxPacket
 21380  0049AC  24F3               	addwf	prodl,w,c
 21381  0049AE  0100               	movlb	0	; () banked
 21382  0049B0  6FA5               	movwf	CCM_Dec@text& (0+255),b
 21383  0049B2  0E03               	movlw	high _RxPacket
 21384  0049B4  20F4               	addwfc	prodh,w,c
 21385  0049B6  0100               	movlb	0	; () banked
 21386  0049B8  6FA6               	movwf	(CCM_Dec@text+1)& (0+255),b
 21387  0049BA  C0C6  F0A7         	movff	MiMAC_ReceivedPacket@PayloadIndex,CCM_Dec@headerLen
 21388  0049BE  0100               	movlb	0	; () banked
 21389  0049C0  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21390  0049C2  0D42               	mullw	66
 21391  0049C4  0E41               	movlw	65
 21392  0049C6  26F3               	addwf	prodl,f,c
 21393  0049C8  0E00               	movlw	0
 21394  0049CA  22F4               	addwfc	prodh,f,c
 21395  0049CC  0E50               	movlw	low _RxPacket
 21396  0049CE  24F3               	addwf	prodl,w,c
 21397  0049D0  6ED9               	movwf	fsr2l,c
 21398  0049D2  0E03               	movlw	high _RxPacket
 21399  0049D4  20F4               	addwfc	prodh,w,c
 21400  0049D6  6EDA               	movwf	fsr2h,c
 21401  0049D8  50DF               	movf	indf2,w,c
 21402  0049DA  0100               	movlb	0	; () banked
 21403  0049DC  6FB4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21404  0049DE  0100               	movlb	0	; () banked
 21405  0049E0  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21406  0049E2  0800               	sublw	0
 21407  0049E4  0100               	movlb	0	; () banked
 21408  0049E6  25B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21409  0049E8  0100               	movlb	0	; () banked
 21410  0049EA  6FA8               	movwf	CCM_Dec@payloadLen& (0+255),b
 21411  0049EC  0EC0               	movlw	low _key
 21412  0049EE  0100               	movlb	0	; () banked
 21413  0049F0  6FA9               	movwf	CCM_Dec@key& (0+255),b
 21414  0049F2  0E01               	movlw	high _key
 21415  0049F4  0100               	movlb	0	; () banked
 21416  0049F6  6FAA               	movwf	(CCM_Dec@key+1)& (0+255),b
 21417  0049F8  EC42  F033         	call	_CCM_Dec	;wreg free
 21418  0049FC  0900               	iorlw	0
 21419  0049FE  A4D8               	btfss	status,2,c
 21420  004A00  D00D               	goto	l11418
 21421                           
 21422                           ;drv_mrf_miwi_89xa.c: 976: {
 21423                           ;drv_mrf_miwi_89xa.c: 977: RxPacket[i].flags.Val = 0;
 21424  004A02  0100               	movlb	0	; () banked
 21425  004A04  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21426  004A06  0D42               	mullw	66
 21427  004A08  0E50               	movlw	low _RxPacket
 21428  004A0A  24F3               	addwf	prodl,w,c
 21429  004A0C  6ED9               	movwf	fsr2l,c
 21430  004A0E  0E03               	movlw	high _RxPacket
 21431  004A10  20F4               	addwfc	prodh,w,c
 21432  004A12  6EDA               	movwf	fsr2h,c
 21433  004A14  0E00               	movlw	0
 21434  004A16  6EDF               	movwf	indf2,c
 21435                           
 21436                           ; BSR set to: 0
 21437                           ;drv_mrf_miwi_89xa.c: 978: return 0;
 21438  004A18  0E00               	movlw	0
 21439                           
 21440                           ; BSR set to: 0
 21441  004A1A  0012               	return	
 21442  004A1C                     l11418:
 21443                           
 21444                           ;drv_mrf_miwi_89xa.c: 979: }
 21445                           ;drv_mrf_miwi_89xa.c: 996: MACRxPacket.PayloadLen -= (PayloadIndex + 2);
 21446  004A1C  0100               	movlb	0	; () banked
 21447  004A1E  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21448  004A20  0F02               	addlw	2
 21449  004A22  D002               	goto	L12
 21450  004A24                     l11420:
 21451                           
 21452                           ; BSR set to: 0
 21453                           ;drv_mrf_miwi_89xa.c: 998: else
 21454                           ;drv_mrf_miwi_89xa.c: 999: {
 21455                           ;drv_mrf_miwi_89xa.c: 1000: MACRxPacket.PayloadLen -= PayloadIndex;
 21456  004A24  0100               	movlb	0	; () banked
 21457  004A26  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21458  004A28                     L12:
 21459  004A28  5E39               	subwf	_MACRxPacket+5,f,c
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;drv_mrf_miwi_89xa.c: 1001: }
 21463                           ;drv_mrf_miwi_89xa.c: 1009: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
 21464                           
 21465                           ; BSR set to: 0
 21466  004A2A  0100               	movlb	0	; () banked
 21467  004A2C  51C6               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21468  004A2E  0D01               	mullw	1
 21469  004A30  0E01               	movlw	1
 21470  004A32  26F3               	addwf	prodl,f,c
 21471  004A34  0E00               	movlw	0
 21472  004A36  22F4               	addwfc	prodh,f,c
 21473  004A38  0E50               	movlw	low _RxPacket
 21474  004A3A  0100               	movlb	0	; () banked
 21475  004A3C  6FB4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21476  004A3E  0E03               	movlw	high _RxPacket
 21477  004A40  0100               	movlb	0	; () banked
 21478  004A42  6FB5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21479  004A44  50F3               	movf	prodl,w,c
 21480  004A46  0100               	movlb	0	; () banked
 21481  004A48  27B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21482  004A4A  50F4               	movf	prodh,w,c
 21483  004A4C  0100               	movlb	0	; () banked
 21484  004A4E  23B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21485  004A50  0100               	movlb	0	; () banked
 21486  004A52  51C7               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21487  004A54  0D42               	mullw	66
 21488  004A56  50F3               	movf	prodl,w,c
 21489  004A58  0100               	movlb	0	; () banked
 21490  004A5A  25B4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21491  004A5C  6E37               	movwf	_MACRxPacket+3,c
 21492  004A5E  50F4               	movf	prodh,w,c
 21493  004A60  0100               	movlb	0	; () banked
 21494  004A62  21B5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21495  004A64  6E38               	movwf	_MACRxPacket+4,c
 21496                           
 21497                           ; BSR set to: 0
 21498                           ;drv_mrf_miwi_89xa.c: 1011: MACRxPacket.RSSIValue = RSSILock;
 21499  004A66  C165  F03A         	movff	_RSSILock,_MACRxPacket+6
 21500                           
 21501                           ; BSR set to: 0
 21502                           ;drv_mrf_miwi_89xa.c: 1014: ReceivedBankIndex = i;
 21503  004A6A  C0C7  F045         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;drv_mrf_miwi_89xa.c: 1015: return 1;
 21507  004A6E  0E01               	movlw	1
 21508                           
 21509                           ; BSR set to: 0
 21510  004A70  0012               	return	
 21511  004A72                     l11432:
 21512  004A72  0100               	movlb	0	; () banked
 21513  004A74  2BC7               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 21514  004A76  D649               	goto	l11334
 21515  004A78                     l11436:
 21516                           
 21517                           ; BSR set to: 0
 21518                           ;drv_mrf_miwi_89xa.c: 1016: }
 21519                           ;drv_mrf_miwi_89xa.c: 1017: }
 21520                           ;drv_mrf_miwi_89xa.c: 1019: return 0;
 21521  004A78  0E00               	movlw	0
 21522  004A7A  0012               	return	
 21523  004A7C                     __end_of_MiMAC_ReceivedPacket:
 21524                           	opt stack 0
 21525                           tblptru	equ	0xFF8
 21526                           tblptrh	equ	0xFF7
 21527                           tblptrl	equ	0xFF6
 21528                           tablat	equ	0xFF5
 21529                           prodh	equ	0xFF4
 21530                           prodl	equ	0xFF3
 21531                           intcon	equ	0xFF2
 21532                           intcon2	equ	0xFF1
 21533                           intcon3	equ	0xFF0
 21534                           indf0	equ	0xFEF
 21535                           postinc0	equ	0xFEE
 21536                           plusw0	equ	0xFEB
 21537                           fsr0h	equ	0xFEA
 21538                           fsr0l	equ	0xFE9
 21539                           wreg	equ	0xFE8
 21540                           indf1	equ	0xFE7
 21541                           postinc1	equ	0xFE6
 21542                           postdec1	equ	0xFE5
 21543                           fsr1h	equ	0xFE2
 21544                           fsr1l	equ	0xFE1
 21545                           indf2	equ	0xFDF
 21546                           postinc2	equ	0xFDE
 21547                           postdec2	equ	0xFDD
 21548                           plusw2	equ	0xFDB
 21549                           fsr2h	equ	0xFDA
 21550                           fsr2l	equ	0xFD9
 21551                           status	equ	0xFD8
 21552                           
 21553 ;; *************** function _isSameAddress *****************
 21554 ;; Defined at:
 21555 ;;		line 3442 in file "src/miwi/miwi_mesh.c"
 21556 ;; Parameters:    Size  Location     Type
 21557 ;;  Address1        2   33[BANK0 ] PTR unsigned char 
 21558 ;;		 -> ConnectionTable(90), 
 21559 ;;  Address2        2   35[BANK0 ] PTR unsigned char 
 21560 ;;		 -> NULL(0), RxPacket.Payload(64), RxPacket(132), 
 21561 ;; Auto vars:     Size  Location     Type
 21562 ;;  i               1   39[BANK0 ] unsigned char 
 21563 ;; Return value:  Size  Location     Type
 21564 ;;                  1    wreg      unsigned char 
 21565 ;; Registers used:
 21566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21567 ;; Tracked objects:
 21568 ;;		On entry : 0/0
 21569 ;;		On exit  : 0/0
 21570 ;;		Unchanged: 0/0
 21571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21572 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21575 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21576 ;;Total ram usage:        7 bytes
 21577 ;; Hardware stack levels used:    1
 21578 ;; Hardware stack levels required when called:    7
 21579 ;; This function calls:
 21580 ;;		Nothing
 21581 ;; This function is called by:
 21582 ;;		_MiMAC_ReceivedPacket
 21583 ;; This function uses a non-reentrant model
 21584 ;;
 21585                           
 21586                           	psect	text66
 21587  0087D0                     __ptext66:
 21588                           	opt stack 0
 21589  0087D0                     _isSameAddress:
 21590                           	opt stack 17
 21591                           
 21592                           ;miwi_mesh.c: 3444: uint8_t i;
 21593                           ;miwi_mesh.c: 3446: for(i = 0; i < 4; i++)
 21594                           
 21595                           ; BSR set to: 0
 21596                           ;incstack = 0
 21597  0087D0  0E00               	movlw	0
 21598  0087D2  0100               	movlb	0	; () banked
 21599  0087D4  6F87               	movwf	isSameAddress@i& (0+255),b
 21600  0087D6                     l11080:
 21601                           
 21602                           ; BSR set to: 0
 21603  0087D6  0E03               	movlw	3
 21604  0087D8  0100               	movlb	0	; () banked
 21605  0087DA  6587               	cpfsgt	isSameAddress@i& (0+255),b
 21606  0087DC  D001               	goto	l11084
 21607  0087DE  D01F               	goto	l11094
 21608  0087E0                     l11084:
 21609                           
 21610                           ; BSR set to: 0
 21611                           ;miwi_mesh.c: 3447: {
 21612                           ;miwi_mesh.c: 3448: if( Address1[i] != Address2[i] )
 21613  0087E0  0100               	movlb	0	; () banked
 21614  0087E2  5187               	movf	isSameAddress@i& (0+255),w,b
 21615  0087E4  0D01               	mullw	1
 21616  0087E6  50F3               	movf	prodl,w,c
 21617  0087E8  0100               	movlb	0	; () banked
 21618  0087EA  2583               	addwf	isSameAddress@Address2& (0+255),w,b
 21619  0087EC  6ED9               	movwf	fsr2l,c
 21620  0087EE  50F4               	movf	prodh,w,c
 21621  0087F0  0100               	movlb	0	; () banked
 21622  0087F2  2184               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 21623  0087F4  6EDA               	movwf	fsr2h,c
 21624  0087F6  0100               	movlb	0	; () banked
 21625  0087F8  5187               	movf	isSameAddress@i& (0+255),w,b
 21626  0087FA  0D01               	mullw	1
 21627  0087FC  50F3               	movf	prodl,w,c
 21628  0087FE  0100               	movlb	0	; () banked
 21629  008800  2581               	addwf	isSameAddress@Address1& (0+255),w,b
 21630  008802  6EE1               	movwf	fsr1l,c
 21631  008804  50F4               	movf	prodh,w,c
 21632  008806  0100               	movlb	0	; () banked
 21633  008808  2182               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 21634  00880A  6EE2               	movwf	fsr1h,c
 21635  00880C  50DE               	movf	postinc2,w,c
 21636  00880E  18E6               	xorwf	postinc1,w,c
 21637  008810  B4D8               	btfsc	status,2,c
 21638  008812  D002               	goto	l11090
 21639                           
 21640                           ; BSR set to: 0
 21641                           ;miwi_mesh.c: 3449: {
 21642                           ;miwi_mesh.c: 3450: return 0;
 21643  008814  0E00               	movlw	0
 21644                           
 21645                           ; BSR set to: 0
 21646  008816  0012               	return	
 21647  008818                     l11090:
 21648                           
 21649                           ; BSR set to: 0
 21650  008818  0100               	movlb	0	; () banked
 21651  00881A  2B87               	incf	isSameAddress@i& (0+255),f,b
 21652  00881C  D7DC               	goto	l11080
 21653  00881E                     l11094:
 21654                           
 21655                           ; BSR set to: 0
 21656                           ;miwi_mesh.c: 3451: }
 21657                           ;miwi_mesh.c: 3452: }
 21658                           ;miwi_mesh.c: 3453: return 1;
 21659  00881E  0E01               	movlw	1
 21660  008820  0012               	return	
 21661  008822                     __end_of_isSameAddress:
 21662                           	opt stack 0
 21663                           tblptru	equ	0xFF8
 21664                           tblptrh	equ	0xFF7
 21665                           tblptrl	equ	0xFF6
 21666                           tablat	equ	0xFF5
 21667                           prodh	equ	0xFF4
 21668                           prodl	equ	0xFF3
 21669                           intcon	equ	0xFF2
 21670                           intcon2	equ	0xFF1
 21671                           intcon3	equ	0xFF0
 21672                           indf0	equ	0xFEF
 21673                           postinc0	equ	0xFEE
 21674                           plusw0	equ	0xFEB
 21675                           fsr0h	equ	0xFEA
 21676                           fsr0l	equ	0xFE9
 21677                           wreg	equ	0xFE8
 21678                           indf1	equ	0xFE7
 21679                           postinc1	equ	0xFE6
 21680                           postdec1	equ	0xFE5
 21681                           fsr1h	equ	0xFE2
 21682                           fsr1l	equ	0xFE1
 21683                           indf2	equ	0xFDF
 21684                           postinc2	equ	0xFDE
 21685                           postdec2	equ	0xFDD
 21686                           plusw2	equ	0xFDB
 21687                           fsr2h	equ	0xFDA
 21688                           fsr2l	equ	0xFD9
 21689                           status	equ	0xFD8
 21690                           
 21691 ;; *************** function _MiWi_TickGet *****************
 21692 ;; Defined at:
 21693 ;;		line 104 in file "src/18F27J53/symbol.c"
 21694 ;; Parameters:    Size  Location     Type
 21695 ;;		None
 21696 ;; Auto vars:     Size  Location     Type
 21697 ;;  currentTime     4   39[BANK0 ] struct _MIWI_TICK
 21698 ;;  failureCount    1   38[BANK0 ] unsigned char 
 21699 ;; Return value:  Size  Location     Type
 21700 ;;                  4   33[BANK0 ] struct _MIWI_TICK
 21701 ;; Registers used:
 21702 ;;		wreg, status,2, status,0
 21703 ;; Tracked objects:
 21704 ;;		On entry : 0/0
 21705 ;;		On exit  : 0/0
 21706 ;;		Unchanged: 0/0
 21707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21708 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21709 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21711 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21712 ;;Total ram usage:       10 bytes
 21713 ;; Hardware stack levels used:    1
 21714 ;; Hardware stack levels required when called:    7
 21715 ;; This function calls:
 21716 ;;		Nothing
 21717 ;; This function is called by:
 21718 ;;		_TxPacket
 21719 ;;		_MiMAC_ReceivedPacket
 21720 ;;		_MiWiTasks
 21721 ;;		_OpenSocket
 21722 ;;		_MiApp_SearchConnection
 21723 ;;		_MiApp_EstablishConnection
 21724 ;;		_MiApp_UnicastAddress
 21725 ;;		_BroadcastJitter
 21726 ;;		_MiApp_UnicastConnection
 21727 ;; This function uses a non-reentrant model
 21728 ;;
 21729                           
 21730                           	psect	text67
 21731  0084AE                     __ptext67:
 21732                           	opt stack 0
 21733  0084AE                     _MiWi_TickGet:
 21734                           	opt stack 20
 21735                           
 21736                           ;symbol.c: 106: MIWI_TICK currentTime;
 21737                           ;symbol.c: 109: uint8_t failureCounter;
 21738                           ;symbol.c: 112: PIE1bits.TMR1IE = 0;
 21739                           
 21740                           ; BSR set to: 0
 21741                           ;incstack = 0
 21742  0084AE  909D               	bcf	3997,0,c	;volatile
 21743                           
 21744                           ;symbol.c: 115: currentTime.byte.b2 = 0;
 21745  0084B0  0E00               	movlw	0
 21746  0084B2  0100               	movlb	0	; () banked
 21747  0084B4  6F89               	movwf	(MiWi_TickGet@currentTime+2)& (0+255),b
 21748                           
 21749                           ;symbol.c: 116: currentTime.byte.b3 = 0;
 21750  0084B6  0E00               	movlw	0
 21751  0084B8  0100               	movlb	0	; () banked
 21752  0084BA  6F8A               	movwf	(MiWi_TickGet@currentTime+3)& (0+255),b
 21753                           
 21754                           ;symbol.c: 118: failureCounter = 0;
 21755  0084BC  0E00               	movlw	0
 21756  0084BE  0100               	movlb	0	; () banked
 21757  0084C0  6F86               	movwf	MiWi_TickGet@failureCounter& (0+255),b
 21758  0084C2                     l10816:
 21759                           
 21760                           ; BSR set to: 0
 21761                           ;symbol.c: 121: {
 21762                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 21763  0084C2  CFCE F087          	movff	4046,MiWi_TickGet@currentTime	;volatile
 21764                           
 21765                           ; BSR set to: 0
 21766                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 21767  0084C6  CFCF F088          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 21768                           
 21769                           ; BSR set to: 0
 21770                           ;symbol.c: 124: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 21771  0084CA  0100               	movlb	0	; () banked
 21772  0084CC  2987               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 21773  0084CE  E10D               	bnz	l62
 21774  0084D0  0100               	movlb	0	; () banked
 21775  0084D2  2988               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 21776  0084D4  A4D8               	btfss	status,2,c
 21777  0084D6  D009               	goto	l62
 21778                           
 21779                           ; BSR set to: 0
 21780  0084D8  0100               	movlb	0	; () banked
 21781  0084DA  2B86               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 21782  0084DC  0586               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 21783  0084DE  0100               	movlb	0	; () banked
 21784  0084E0  6F85               	movwf	??_MiWi_TickGet& (0+255),b
 21785  0084E2  0E02               	movlw	2
 21786  0084E4  0100               	movlb	0	; () banked
 21787  0084E6  6585               	cpfsgt	??_MiWi_TickGet& (0+255),b
 21788  0084E8  D7EC               	goto	l10816
 21789  0084EA                     l62:
 21790                           
 21791                           ; BSR set to: 0
 21792                           ;symbol.c: 128: if(PIR1bits.TMR1IF)
 21793  0084EA  A09E               	btfss	3998,0,c	;volatile
 21794  0084EC  D008               	goto	l10830
 21795                           
 21796                           ; BSR set to: 0
 21797                           ;symbol.c: 129: {
 21798                           ;symbol.c: 131: {
 21799                           ;symbol.c: 134: currentTime.byte.b2++;
 21800  0084EE  0100               	movlb	0	; () banked
 21801  0084F0  2B89               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 21802                           
 21803                           ; BSR set to: 0
 21804                           ;symbol.c: 135: if(timerExtension1 == 0xFF)
 21805  0084F2  0100               	movlb	0	; () banked
 21806  0084F4  29DA               	incf	_timerExtension1& (0+255),w,b	;volatile
 21807  0084F6  A4D8               	btfss	status,2,c
 21808  0084F8  D002               	goto	l10830
 21809                           
 21810                           ; BSR set to: 0
 21811                           ;symbol.c: 136: {
 21812                           ;symbol.c: 137: currentTime.byte.b3++;
 21813  0084FA  0100               	movlb	0	; () banked
 21814  0084FC  2B8A               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 21815  0084FE                     l10830:
 21816                           
 21817                           ; BSR set to: 0
 21818                           ;symbol.c: 138: }
 21819                           ;symbol.c: 139: }
 21820                           ;symbol.c: 140: }
 21821                           ;symbol.c: 143: currentTime.byte.b2 += timerExtension1;
 21822  0084FE  0100               	movlb	0	; () banked
 21823  008500  51DA               	movf	_timerExtension1& (0+255),w,b	;volatile
 21824  008502  0100               	movlb	0	; () banked
 21825  008504  2789               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 21826                           
 21827                           ; BSR set to: 0
 21828                           ;symbol.c: 144: currentTime.byte.b3 += timerExtension2;
 21829  008506  5049               	movf	_timerExtension2,w,c	;volatile
 21830  008508  0100               	movlb	0	; () banked
 21831  00850A  278A               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 21832                           
 21833                           ; BSR set to: 0
 21834                           ;symbol.c: 147: PIE1bits.TMR1IE = 1;
 21835  00850C  809D               	bsf	3997,0,c	;volatile
 21836                           
 21837                           ; BSR set to: 0
 21838                           ;symbol.c: 149: return currentTime;
 21839  00850E  C087  F081         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 21840  008512  C088  F082         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 21841  008516  C089  F083         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 21842  00851A  C08A  F084         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 21843  00851E  0012               	return	
 21844  008520                     __end_of_MiWi_TickGet:
 21845                           	opt stack 0
 21846                           tblptru	equ	0xFF8
 21847                           tblptrh	equ	0xFF7
 21848                           tblptrl	equ	0xFF6
 21849                           tablat	equ	0xFF5
 21850                           prodh	equ	0xFF4
 21851                           prodl	equ	0xFF3
 21852                           intcon	equ	0xFF2
 21853                           intcon2	equ	0xFF1
 21854                           intcon3	equ	0xFF0
 21855                           indf0	equ	0xFEF
 21856                           postinc0	equ	0xFEE
 21857                           plusw0	equ	0xFEB
 21858                           fsr0h	equ	0xFEA
 21859                           fsr0l	equ	0xFE9
 21860                           wreg	equ	0xFE8
 21861                           indf1	equ	0xFE7
 21862                           postinc1	equ	0xFE6
 21863                           postdec1	equ	0xFE5
 21864                           fsr1h	equ	0xFE2
 21865                           fsr1l	equ	0xFE1
 21866                           indf2	equ	0xFDF
 21867                           postinc2	equ	0xFDE
 21868                           postdec2	equ	0xFDD
 21869                           plusw2	equ	0xFDB
 21870                           fsr2h	equ	0xFDA
 21871                           fsr2l	equ	0xFD9
 21872                           status	equ	0xFD8
 21873                           
 21874 ;; *************** function _CCM_Dec *****************
 21875 ;; Defined at:
 21876 ;;		line 299 in file "src/miwi/drv_mrf_miwi_security.c"
 21877 ;; Parameters:    Size  Location     Type
 21878 ;;  text            2   69[BANK0 ] PTR unsigned char 
 21879 ;;		 -> RxPacket.Payload(64), RxPacket(132), 
 21880 ;;  headerLen       1   71[BANK0 ] unsigned char 
 21881 ;;  payloadLen      1   72[BANK0 ] unsigned char 
 21882 ;;  key             2   73[BANK0 ] PTR unsigned char 
 21883 ;;		 -> key(8), 
 21884 ;; Auto vars:     Size  Location     Type
 21885 ;;  i               1   83[BANK0 ] unsigned char 
 21886 ;; Return value:  Size  Location     Type
 21887 ;;                  1    wreg      unsigned char 
 21888 ;; Registers used:
 21889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21890 ;; Tracked objects:
 21891 ;;		On entry : 0/0
 21892 ;;		On exit  : 0/0
 21893 ;;		Unchanged: 0/0
 21894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21895 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21896 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21897 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21898 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21899 ;;Total ram usage:       15 bytes
 21900 ;; Hardware stack levels used:    1
 21901 ;; Hardware stack levels required when called:    9
 21902 ;; This function calls:
 21903 ;;		_CBC_MAC
 21904 ;;		_CTR
 21905 ;; This function is called by:
 21906 ;;		_MiMAC_ReceivedPacket
 21907 ;; This function uses a non-reentrant model
 21908 ;;
 21909                           
 21910                           	psect	text68
 21911  006684                     __ptext68:
 21912                           	opt stack 0
 21913  006684                     _CCM_Dec:
 21914                           	opt stack 15
 21915                           
 21916                           ;drv_mrf_miwi_security.c: 301: uint8_t i;
 21917                           ;drv_mrf_miwi_security.c: 308: for(i = 0; i < 4-1; i++)
 21918                           
 21919                           ; BSR set to: 0
 21920                           ;incstack = 0
 21921  006684  0E00               	movlw	0
 21922  006686  0100               	movlb	0	; () banked
 21923  006688  6FB3               	movwf	CCM_Dec@i& (0+255),b
 21924  00668A                     l11100:
 21925                           
 21926                           ; BSR set to: 0
 21927  00668A  0E02               	movlw	2
 21928  00668C  0100               	movlb	0	; () banked
 21929  00668E  65B3               	cpfsgt	CCM_Dec@i& (0+255),b
 21930  006690  D001               	goto	l11104
 21931  006692  D02D               	goto	l11114
 21932  006694                     l11104:
 21933                           
 21934                           ; BSR set to: 0
 21935                           ;drv_mrf_miwi_security.c: 309: {
 21936                           ;drv_mrf_miwi_security.c: 310: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 21937  006694  0100               	movlb	0	; () banked
 21938  006696  51A7               	movf	CCM_Dec@headerLen& (0+255),w,b
 21939  006698  0100               	movlb	0	; () banked
 21940  00669A  5DB3               	subwf	CCM_Dec@i& (0+255),w,b
 21941  00669C  A0D8               	btfss	status,0,c
 21942  00669E  D006               	goto	l11108
 21943                           
 21944                           ; BSR set to: 0
 21945  0066A0  0E00               	movlw	0
 21946  0066A2  0100               	movlb	0	; () banked
 21947  0066A4  6FB2               	movwf	(_CCM_Dec$2093+1)& (0+255),b
 21948  0066A6  0E00               	movlw	0
 21949  0066A8  6FB1               	movwf	_CCM_Dec$2093& (0+255),b
 21950  0066AA  D013               	goto	l477
 21951  0066AC                     l11108:
 21952                           
 21953                           ; BSR set to: 0
 21954  0066AC  0100               	movlb	0	; () banked
 21955  0066AE  51B3               	movf	CCM_Dec@i& (0+255),w,b
 21956  0066B0  0D01               	mullw	1
 21957  0066B2  50F3               	movf	prodl,w,c
 21958  0066B4  0100               	movlb	0	; () banked
 21959  0066B6  25A5               	addwf	CCM_Dec@text& (0+255),w,b
 21960  0066B8  6ED9               	movwf	fsr2l,c
 21961  0066BA  50F4               	movf	prodh,w,c
 21962  0066BC  0100               	movlb	0	; () banked
 21963  0066BE  21A6               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 21964  0066C0  6EDA               	movwf	fsr2h,c
 21965  0066C2  50DF               	movf	indf2,w,c
 21966  0066C4  0100               	movlb	0	; () banked
 21967  0066C6  6FAB               	movwf	??_CCM_Dec& (0+255),b
 21968  0066C8  0100               	movlb	0	; () banked
 21969  0066CA  51AB               	movf	??_CCM_Dec& (0+255),w,b
 21970  0066CC  0100               	movlb	0	; () banked
 21971  0066CE  6FB1               	movwf	_CCM_Dec$2093& (0+255),b
 21972  0066D0  6BB2               	clrf	(_CCM_Dec$2093+1)& (0+255),b
 21973  0066D2                     l477:
 21974                           
 21975                           ; BSR set to: 0
 21976  0066D2  0100               	movlb	0	; () banked
 21977  0066D4  51B3               	movf	CCM_Dec@i& (0+255),w,b
 21978  0066D6  0D01               	mullw	1
 21979  0066D8  0ECC               	movlw	low _tmpBlock
 21980  0066DA  24F3               	addwf	prodl,w,c
 21981  0066DC  6ED9               	movwf	fsr2l,c
 21982  0066DE  0E01               	movlw	high _tmpBlock
 21983  0066E0  20F4               	addwfc	prodh,w,c
 21984  0066E2  6EDA               	movwf	fsr2h,c
 21985  0066E4  C0B1  FFDF         	movff	_CCM_Dec$2093,indf2
 21986                           
 21987                           ; BSR set to: 0
 21988  0066E8  0100               	movlb	0	; () banked
 21989  0066EA  2BB3               	incf	CCM_Dec@i& (0+255),f,b
 21990  0066EC  D7CE               	goto	l11100
 21991  0066EE                     l11114:
 21992                           
 21993                           ; BSR set to: 0
 21994                           ;drv_mrf_miwi_security.c: 311: }
 21995                           ;drv_mrf_miwi_security.c: 312: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
 21996  0066EE  0100               	movlb	0	; () banked
 21997  0066F0  51A7               	movf	CCM_Dec@headerLen& (0+255),w,b
 21998  0066F2  0D01               	mullw	1
 21999  0066F4  50F3               	movf	prodl,w,c
 22000  0066F6  0100               	movlb	0	; () banked
 22001  0066F8  25A5               	addwf	CCM_Dec@text& (0+255),w,b
 22002  0066FA  0100               	movlb	0	; () banked
 22003  0066FC  6F98               	movwf	CTR@text& (0+255),b
 22004  0066FE  50F4               	movf	prodh,w,c
 22005  006700  0100               	movlb	0	; () banked
 22006  006702  21A6               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 22007  006704  0100               	movlb	0	; () banked
 22008  006706  6F99               	movwf	(CTR@text+1)& (0+255),b
 22009  006708  C0A8  F09A         	movff	CCM_Dec@payloadLen,CTR@len
 22010  00670C  C0A9  F09B         	movff	CCM_Dec@key,CTR@key
 22011  006710  C0AA  F09C         	movff	CCM_Dec@key+1,CTR@key+1
 22012  006714  0ECC               	movlw	low _tmpBlock
 22013  006716  0100               	movlb	0	; () banked
 22014  006718  6F9D               	movwf	CTR@nounce& (0+255),b
 22015  00671A  0E01               	movlw	high _tmpBlock
 22016  00671C  0100               	movlb	0	; () banked
 22017  00671E  6F9E               	movwf	(CTR@nounce+1)& (0+255),b
 22018  006720  ECAA  F037         	call	_CTR	;wreg free
 22019                           
 22020                           ;drv_mrf_miwi_security.c: 314: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmpBlock
      +                          );
 22021  006724  C0A5  F098         	movff	CCM_Dec@text,CBC_MAC@text
 22022  006728  C0A6  F099         	movff	CCM_Dec@text+1,CBC_MAC@text+1
 22023  00672C  0100               	movlb	0	; () banked
 22024  00672E  51A7               	movf	CCM_Dec@headerLen& (0+255),w,b
 22025  006730  0100               	movlb	0	; () banked
 22026  006732  25A8               	addwf	CCM_Dec@payloadLen& (0+255),w,b
 22027  006734  0FFE               	addlw	254
 22028  006736  0100               	movlb	0	; () banked
 22029  006738  6F9A               	movwf	CBC_MAC@len& (0+255),b
 22030  00673A  C0A9  F09B         	movff	CCM_Dec@key,CBC_MAC@key
 22031  00673E  C0AA  F09C         	movff	CCM_Dec@key+1,CBC_MAC@key+1
 22032  006742  0ECC               	movlw	low _tmpBlock
 22033  006744  0100               	movlb	0	; () banked
 22034  006746  6F9D               	movwf	CBC_MAC@MIC& (0+255),b
 22035  006748  0E01               	movlw	high _tmpBlock
 22036  00674A  0100               	movlb	0	; () banked
 22037  00674C  6F9E               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 22038  00674E  ECDD  F039         	call	_CBC_MAC	;wreg free
 22039                           
 22040                           ;drv_mrf_miwi_security.c: 315: for(i = 0; i < 2; i++)
 22041  006752  0E00               	movlw	0
 22042  006754  0100               	movlb	0	; () banked
 22043  006756  6FB3               	movwf	CCM_Dec@i& (0+255),b
 22044  006758                     l11120:
 22045                           
 22046                           ; BSR set to: 0
 22047  006758  0E01               	movlw	1
 22048  00675A  0100               	movlb	0	; () banked
 22049  00675C  65B3               	cpfsgt	CCM_Dec@i& (0+255),b
 22050  00675E  D001               	goto	l11124
 22051  006760  D03A               	goto	l11134
 22052  006762                     l11124:
 22053                           
 22054                           ; BSR set to: 0
 22055                           ;drv_mrf_miwi_security.c: 316: {
 22056                           ;drv_mrf_miwi_security.c: 317: if( tmpBlock[i] != text[headerLen + payloadLen - 2 + i] )
 22057  006762  0EFE               	movlw	254
 22058  006764  0100               	movlb	0	; () banked
 22059  006766  6FAB               	movwf	??_CCM_Dec& (0+255),b
 22060  006768  0EFF               	movlw	255
 22061  00676A  0100               	movlb	0	; () banked
 22062  00676C  6FAC               	movwf	(??_CCM_Dec+1)& (0+255),b
 22063  00676E  0100               	movlb	0	; () banked
 22064  006770  51A8               	movf	CCM_Dec@payloadLen& (0+255),w,b
 22065  006772  C0A7  F0AD         	movff	CCM_Dec@headerLen,??_CCM_Dec+2
 22066  006776  0100               	movlb	0	; () banked
 22067  006778  6BAE               	clrf	(??_CCM_Dec+3)& (0+255),b
 22068  00677A  0100               	movlb	0	; () banked
 22069  00677C  27AD               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22070  00677E  0E00               	movlw	0
 22071  006780  23AE               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22072  006782  0100               	movlb	0	; () banked
 22073  006784  51B3               	movf	CCM_Dec@i& (0+255),w,b
 22074  006786  0100               	movlb	0	; () banked
 22075  006788  27AD               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22076  00678A  0E00               	movlw	0
 22077  00678C  23AE               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22078  00678E  0100               	movlb	0	; () banked
 22079  006790  51AB               	movf	??_CCM_Dec& (0+255),w,b
 22080  006792  0100               	movlb	0	; () banked
 22081  006794  27AD               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22082  006796  0100               	movlb	0	; () banked
 22083  006798  51AC               	movf	(??_CCM_Dec+1)& (0+255),w,b
 22084  00679A  0100               	movlb	0	; () banked
 22085  00679C  23AE               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22086  00679E  0100               	movlb	0	; () banked
 22087  0067A0  51AD               	movf	(??_CCM_Dec+2)& (0+255),w,b
 22088  0067A2  0100               	movlb	0	; () banked
 22089  0067A4  25A5               	addwf	CCM_Dec@text& (0+255),w,b
 22090  0067A6  6ED9               	movwf	fsr2l,c
 22091  0067A8  0100               	movlb	0	; () banked
 22092  0067AA  51AE               	movf	(??_CCM_Dec+3)& (0+255),w,b
 22093  0067AC  0100               	movlb	0	; () banked
 22094  0067AE  21A6               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 22095  0067B0  6EDA               	movwf	fsr2h,c
 22096  0067B2  0100               	movlb	0	; () banked
 22097  0067B4  51B3               	movf	CCM_Dec@i& (0+255),w,b
 22098  0067B6  0D01               	mullw	1
 22099  0067B8  0ECC               	movlw	low _tmpBlock
 22100  0067BA  24F3               	addwf	prodl,w,c
 22101  0067BC  6EE1               	movwf	fsr1l,c
 22102  0067BE  0E01               	movlw	high _tmpBlock
 22103  0067C0  20F4               	addwfc	prodh,w,c
 22104  0067C2  6EE2               	movwf	fsr1h,c
 22105  0067C4  50DE               	movf	postinc2,w,c
 22106  0067C6  18E6               	xorwf	postinc1,w,c
 22107  0067C8  B4D8               	btfsc	status,2,c
 22108  0067CA  D002               	goto	l11130
 22109                           
 22110                           ; BSR set to: 0
 22111                           ;drv_mrf_miwi_security.c: 318: {
 22112                           ;drv_mrf_miwi_security.c: 322: return 0;
 22113  0067CC  0E00               	movlw	0
 22114                           
 22115                           ; BSR set to: 0
 22116  0067CE  0012               	return	
 22117  0067D0                     l11130:
 22118                           
 22119                           ; BSR set to: 0
 22120  0067D0  0100               	movlb	0	; () banked
 22121  0067D2  2BB3               	incf	CCM_Dec@i& (0+255),f,b
 22122  0067D4  D7C1               	goto	l11120
 22123  0067D6                     l11134:
 22124                           
 22125                           ; BSR set to: 0
 22126                           ;drv_mrf_miwi_security.c: 323: }
 22127                           ;drv_mrf_miwi_security.c: 324: }
 22128                           ;drv_mrf_miwi_security.c: 328: return 1;
 22129  0067D6  0E01               	movlw	1
 22130  0067D8  0012               	return	
 22131  0067DA                     __end_of_CCM_Dec:
 22132                           	opt stack 0
 22133                           tblptru	equ	0xFF8
 22134                           tblptrh	equ	0xFF7
 22135                           tblptrl	equ	0xFF6
 22136                           tablat	equ	0xFF5
 22137                           prodh	equ	0xFF4
 22138                           prodl	equ	0xFF3
 22139                           intcon	equ	0xFF2
 22140                           intcon2	equ	0xFF1
 22141                           intcon3	equ	0xFF0
 22142                           indf0	equ	0xFEF
 22143                           postinc0	equ	0xFEE
 22144                           plusw0	equ	0xFEB
 22145                           fsr0h	equ	0xFEA
 22146                           fsr0l	equ	0xFE9
 22147                           wreg	equ	0xFE8
 22148                           indf1	equ	0xFE7
 22149                           postinc1	equ	0xFE6
 22150                           postdec1	equ	0xFE5
 22151                           fsr1h	equ	0xFE2
 22152                           fsr1l	equ	0xFE1
 22153                           indf2	equ	0xFDF
 22154                           postinc2	equ	0xFDE
 22155                           postdec2	equ	0xFDD
 22156                           plusw2	equ	0xFDB
 22157                           fsr2h	equ	0xFDA
 22158                           fsr2l	equ	0xFD9
 22159                           status	equ	0xFD8
 22160                           
 22161 ;; *************** function _CTR *****************
 22162 ;; Defined at:
 22163 ;;		line 118 in file "src/miwi/drv_mrf_miwi_security.c"
 22164 ;; Parameters:    Size  Location     Type
 22165 ;;  text            2   56[BANK0 ] PTR unsigned char 
 22166 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 22167 ;;  len             1   58[BANK0 ] unsigned char 
 22168 ;;  key             2   59[BANK0 ] PTR unsigned char 
 22169 ;;		 -> key(8), 
 22170 ;;  nounce          2   61[BANK0 ] PTR unsigned char 
 22171 ;;		 -> tmpBlock(4), 
 22172 ;; Auto vars:     Size  Location     Type
 22173 ;;  j               1   68[BANK0 ] unsigned char 
 22174 ;;  i               1   67[BANK0 ] unsigned char 
 22175 ;;  block           1   66[BANK0 ] unsigned char 
 22176 ;; Return value:  Size  Location     Type
 22177 ;;		None               void
 22178 ;; Registers used:
 22179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22180 ;; Tracked objects:
 22181 ;;		On entry : 0/0
 22182 ;;		On exit  : 0/0
 22183 ;;		Unchanged: 0/0
 22184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22185 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22186 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22187 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22188 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22189 ;;Total ram usage:       13 bytes
 22190 ;; Hardware stack levels used:    1
 22191 ;; Hardware stack levels required when called:    8
 22192 ;; This function calls:
 22193 ;;		___awdiv
 22194 ;;		_encode
 22195 ;; This function is called by:
 22196 ;;		_CCM_Enc
 22197 ;;		_CCM_Dec
 22198 ;; This function uses a non-reentrant model
 22199 ;;
 22200                           
 22201                           	psect	text69
 22202  006F54                     __ptext69:
 22203                           	opt stack 0
 22204  006F54                     _CTR:
 22205                           	opt stack 17
 22206                           
 22207                           ;drv_mrf_miwi_security.c: 120: uint8_t block = len/4+1;
 22208                           
 22209                           ; BSR set to: 0
 22210                           ;incstack = 0
 22211  006F54  C09A  F081         	movff	CTR@len,___awdiv@dividend
 22212  006F58  0100               	movlb	0	; () banked
 22213  006F5A  6B82               	clrf	(___awdiv@dividend+1)& (0+255),b
 22214  006F5C  0E00               	movlw	0
 22215  006F5E  0100               	movlb	0	; () banked
 22216  006F60  6F84               	movwf	(___awdiv@divisor+1)& (0+255),b
 22217  006F62  0E04               	movlw	4
 22218  006F64  6F83               	movwf	___awdiv@divisor& (0+255),b
 22219  006F66  EC76  F03D         	call	___awdiv	;wreg free
 22220  006F6A  0100               	movlb	0	; () banked
 22221  006F6C  2981               	incf	?___awdiv& (0+255),w,b
 22222  006F6E  0100               	movlb	0	; () banked
 22223  006F70  6FA2               	movwf	CTR@block& (0+255),b
 22224                           
 22225                           ; BSR set to: 0
 22226                           ;drv_mrf_miwi_security.c: 121: uint8_t i, j;
 22227                           ;drv_mrf_miwi_security.c: 128: for(i = 0; i < block; i++)
 22228  006F72  0E00               	movlw	0
 22229  006F74  0100               	movlb	0	; () banked
 22230  006F76  6FA3               	movwf	CTR@i& (0+255),b
 22231  006F78  D076               	goto	l10930
 22232  006F7A                     l10898:
 22233                           
 22234                           ; BSR set to: 0
 22235                           ;drv_mrf_miwi_security.c: 129: {
 22236                           ;drv_mrf_miwi_security.c: 130: for(j = 0; j < 4-1; j++)
 22237  006F7A  0E00               	movlw	0
 22238  006F7C  0100               	movlb	0	; () banked
 22239  006F7E  6FA4               	movwf	CTR@j& (0+255),b
 22240  006F80                     l10900:
 22241                           
 22242                           ; BSR set to: 0
 22243  006F80  0E02               	movlw	2
 22244  006F82  0100               	movlb	0	; () banked
 22245  006F84  65A4               	cpfsgt	CTR@j& (0+255),b
 22246  006F86  D001               	goto	l10904
 22247  006F88  D019               	goto	l442
 22248  006F8A                     l10904:
 22249                           
 22250                           ; BSR set to: 0
 22251                           ;drv_mrf_miwi_security.c: 131: {
 22252                           ;drv_mrf_miwi_security.c: 132: tmpBlock[j] = nounce[j];
 22253  006F8A  0100               	movlb	0	; () banked
 22254  006F8C  51A4               	movf	CTR@j& (0+255),w,b
 22255  006F8E  0D01               	mullw	1
 22256  006F90  50F3               	movf	prodl,w,c
 22257  006F92  0100               	movlb	0	; () banked
 22258  006F94  259D               	addwf	CTR@nounce& (0+255),w,b
 22259  006F96  6ED9               	movwf	fsr2l,c
 22260  006F98  50F4               	movf	prodh,w,c
 22261  006F9A  0100               	movlb	0	; () banked
 22262  006F9C  219E               	addwfc	(CTR@nounce+1)& (0+255),w,b
 22263  006F9E  6EDA               	movwf	fsr2h,c
 22264  006FA0  0100               	movlb	0	; () banked
 22265  006FA2  51A4               	movf	CTR@j& (0+255),w,b
 22266  006FA4  0D01               	mullw	1
 22267  006FA6  0ECC               	movlw	low _tmpBlock
 22268  006FA8  24F3               	addwf	prodl,w,c
 22269  006FAA  6EE1               	movwf	fsr1l,c
 22270  006FAC  0E01               	movlw	high _tmpBlock
 22271  006FAE  20F4               	addwfc	prodh,w,c
 22272  006FB0  6EE2               	movwf	fsr1h,c
 22273  006FB2  CFDF FFE7          	movff	indf2,indf1
 22274                           
 22275                           ; BSR set to: 0
 22276  006FB6  0100               	movlb	0	; () banked
 22277  006FB8  2BA4               	incf	CTR@j& (0+255),f,b
 22278  006FBA  D7E2               	goto	l10900
 22279  006FBC                     l442:
 22280                           
 22281                           ; BSR set to: 0
 22282                           ;drv_mrf_miwi_security.c: 133: }
 22283                           ;drv_mrf_miwi_security.c: 134: tmpBlock[4-1] = i;
 22284  006FBC  C0A3  F1CF         	movff	CTR@i,_tmpBlock+3
 22285                           
 22286                           ; BSR set to: 0
 22287                           ;drv_mrf_miwi_security.c: 135: encode((uint16_t *)tmpBlock, (uint16_t *)key);
 22288  006FC0  0ECC               	movlw	low _tmpBlock
 22289  006FC2  0100               	movlb	0	; () banked
 22290  006FC4  6F81               	movwf	encode@text& (0+255),b
 22291  006FC6  0E01               	movlw	high _tmpBlock
 22292  006FC8  0100               	movlb	0	; () banked
 22293  006FCA  6F82               	movwf	(encode@text+1)& (0+255),b
 22294  006FCC  C09B  F083         	movff	CTR@key,encode@key
 22295  006FD0  C09C  F084         	movff	CTR@key+1,encode@key+1
 22296  006FD4  EC94  F02C         	call	_encode	;wreg free
 22297                           
 22298                           ;drv_mrf_miwi_security.c: 136: for(j = 0; j < 4; j++)
 22299  006FD8  0E00               	movlw	0
 22300  006FDA  0100               	movlb	0	; () banked
 22301  006FDC  6FA4               	movwf	CTR@j& (0+255),b
 22302  006FDE                     l10914:
 22303                           
 22304                           ; BSR set to: 0
 22305  006FDE  0E03               	movlw	3
 22306  006FE0  0100               	movlb	0	; () banked
 22307  006FE2  65A4               	cpfsgt	CTR@j& (0+255),b
 22308  006FE4  D001               	goto	l10918
 22309  006FE6  D03D               	goto	l10928
 22310  006FE8                     l10918:
 22311                           
 22312                           ; BSR set to: 0
 22313                           ;drv_mrf_miwi_security.c: 137: {
 22314                           ;drv_mrf_miwi_security.c: 138: if( (i * 4 + j) >= len )
 22315  006FE8  0100               	movlb	0	; () banked
 22316  006FEA  519A               	movf	CTR@len& (0+255),w,b
 22317  006FEC  0100               	movlb	0	; () banked
 22318  006FEE  6F9F               	movwf	??_CTR& (0+255),b
 22319  006FF0  6BA0               	clrf	(??_CTR+1)& (0+255),b
 22320  006FF2  0100               	movlb	0	; () banked
 22321  006FF4  51A3               	movf	CTR@i& (0+255),w,b
 22322  006FF6  0D04               	mullw	4
 22323  006FF8  0100               	movlb	0	; () banked
 22324  006FFA  51A4               	movf	CTR@j& (0+255),w,b
 22325  006FFC  26F3               	addwf	prodl,f,c
 22326  006FFE  0E00               	movlw	0
 22327  007000  22F4               	addwfc	prodh,f,c
 22328  007002  0100               	movlb	0	; () banked
 22329  007004  519F               	movf	??_CTR& (0+255),w,b
 22330  007006  5CF3               	subwf	prodl,w,c
 22331  007008  50F4               	movf	prodh,w,c
 22332  00700A  0A80               	xorlw	128
 22333  00700C  0100               	movlb	0	; () banked
 22334  00700E  6FA1               	movwf	(??_CTR+2)& (0+255),b
 22335  007010  0100               	movlb	0	; () banked
 22336  007012  51A0               	movf	(??_CTR+1)& (0+255),w,b
 22337  007014  0A80               	xorlw	128
 22338  007016  0100               	movlb	0	; () banked
 22339  007018  59A1               	subwfb	(??_CTR+2)& (0+255),w,b
 22340  00701A  B0D8               	btfsc	status,0,c
 22341  00701C  D022               	goto	l10928
 22342                           
 22343                           ; BSR set to: 0
 22344                           ;drv_mrf_miwi_security.c: 141: }
 22345                           ;drv_mrf_miwi_security.c: 142: text[i * 4 + j] ^= tmpBlock[j];
 22346                           
 22347                           ; BSR set to: 0
 22348                           
 22349                           ; BSR set to: 0
 22350                           ;drv_mrf_miwi_security.c: 139: {
 22351                           ;drv_mrf_miwi_security.c: 140: break;
 22352  00701E  0100               	movlb	0	; () banked
 22353  007020  51A4               	movf	CTR@j& (0+255),w,b
 22354  007022  0D01               	mullw	1
 22355  007024  0ECC               	movlw	low _tmpBlock
 22356  007026  24F3               	addwf	prodl,w,c
 22357  007028  6ED9               	movwf	fsr2l,c
 22358  00702A  0E01               	movlw	high _tmpBlock
 22359  00702C  20F4               	addwfc	prodh,w,c
 22360  00702E  6EDA               	movwf	fsr2h,c
 22361  007030  50DF               	movf	indf2,w,c
 22362  007032  0100               	movlb	0	; () banked
 22363  007034  6F9F               	movwf	??_CTR& (0+255),b
 22364  007036  0100               	movlb	0	; () banked
 22365  007038  51A3               	movf	CTR@i& (0+255),w,b
 22366  00703A  0D04               	mullw	4
 22367  00703C  0100               	movlb	0	; () banked
 22368  00703E  51A4               	movf	CTR@j& (0+255),w,b
 22369  007040  26F3               	addwf	prodl,f,c
 22370  007042  0E00               	movlw	0
 22371  007044  22F4               	addwfc	prodh,f,c
 22372  007046  50F3               	movf	prodl,w,c
 22373  007048  0100               	movlb	0	; () banked
 22374  00704A  2598               	addwf	CTR@text& (0+255),w,b
 22375  00704C  6ED9               	movwf	fsr2l,c
 22376  00704E  50F4               	movf	prodh,w,c
 22377  007050  0100               	movlb	0	; () banked
 22378  007052  2199               	addwfc	(CTR@text+1)& (0+255),w,b
 22379  007054  6EDA               	movwf	fsr2h,c
 22380  007056  0100               	movlb	0	; () banked
 22381  007058  519F               	movf	??_CTR& (0+255),w,b
 22382  00705A  1ADF               	xorwf	indf2,f,c
 22383                           
 22384                           ; BSR set to: 0
 22385  00705C  0100               	movlb	0	; () banked
 22386  00705E  2BA4               	incf	CTR@j& (0+255),f,b
 22387  007060  D7BE               	goto	l10914
 22388  007062                     l10928:
 22389                           
 22390                           ; BSR set to: 0
 22391  007062  0100               	movlb	0	; () banked
 22392  007064  2BA3               	incf	CTR@i& (0+255),f,b
 22393  007066                     l10930:
 22394                           
 22395                           ; BSR set to: 0
 22396  007066  0100               	movlb	0	; () banked
 22397  007068  51A2               	movf	CTR@block& (0+255),w,b
 22398  00706A  0100               	movlb	0	; () banked
 22399  00706C  5DA3               	subwf	CTR@i& (0+255),w,b
 22400  00706E  B0D8               	btfsc	status,0,c
 22401  007070  0012               	return	
 22402  007072  D783               	goto	l10898
 22403  007074                     __end_of_CTR:
 22404                           	opt stack 0
 22405                           tblptru	equ	0xFF8
 22406                           tblptrh	equ	0xFF7
 22407                           tblptrl	equ	0xFF6
 22408                           tablat	equ	0xFF5
 22409                           prodh	equ	0xFF4
 22410                           prodl	equ	0xFF3
 22411                           intcon	equ	0xFF2
 22412                           intcon2	equ	0xFF1
 22413                           intcon3	equ	0xFF0
 22414                           indf0	equ	0xFEF
 22415                           postinc0	equ	0xFEE
 22416                           plusw0	equ	0xFEB
 22417                           fsr0h	equ	0xFEA
 22418                           fsr0l	equ	0xFE9
 22419                           wreg	equ	0xFE8
 22420                           indf1	equ	0xFE7
 22421                           postinc1	equ	0xFE6
 22422                           postdec1	equ	0xFE5
 22423                           fsr1h	equ	0xFE2
 22424                           fsr1l	equ	0xFE1
 22425                           indf2	equ	0xFDF
 22426                           postinc2	equ	0xFDE
 22427                           postdec2	equ	0xFDD
 22428                           plusw2	equ	0xFDB
 22429                           fsr2h	equ	0xFDA
 22430                           fsr2l	equ	0xFD9
 22431                           status	equ	0xFD8
 22432                           
 22433 ;; *************** function _CBC_MAC *****************
 22434 ;; Defined at:
 22435 ;;		line 175 in file "src/miwi/drv_mrf_miwi_security.c"
 22436 ;; Parameters:    Size  Location     Type
 22437 ;;  text            2   56[BANK0 ] PTR unsigned char 
 22438 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 22439 ;;  len             1   58[BANK0 ] unsigned char 
 22440 ;;  key             2   59[BANK0 ] PTR unsigned char 
 22441 ;;		 -> key(8), 
 22442 ;;  MIC             2   61[BANK0 ] PTR unsigned char 
 22443 ;;		 -> tmpBlock(4), 
 22444 ;; Auto vars:     Size  Location     Type
 22445 ;;  i               1   68[BANK0 ] unsigned char 
 22446 ;;  j               1   67[BANK0 ] unsigned char 
 22447 ;;  block           1   66[BANK0 ] unsigned char 
 22448 ;; Return value:  Size  Location     Type
 22449 ;;		None               void
 22450 ;; Registers used:
 22451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22452 ;; Tracked objects:
 22453 ;;		On entry : 0/0
 22454 ;;		On exit  : 0/0
 22455 ;;		Unchanged: 0/0
 22456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22457 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22458 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22459 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22460 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22461 ;;Total ram usage:       13 bytes
 22462 ;; Hardware stack levels used:    1
 22463 ;; Hardware stack levels required when called:    8
 22464 ;; This function calls:
 22465 ;;		___awdiv
 22466 ;;		_encode
 22467 ;; This function is called by:
 22468 ;;		_CCM_Enc
 22469 ;;		_CCM_Dec
 22470 ;; This function uses a non-reentrant model
 22471 ;;
 22472                           
 22473                           	psect	text70
 22474  0073BA                     __ptext70:
 22475                           	opt stack 0
 22476  0073BA                     _CBC_MAC:
 22477                           	opt stack 17
 22478                           
 22479                           ;drv_mrf_miwi_security.c: 180: uint8_t block = len / 4 + 1;
 22480                           
 22481                           ; BSR set to: 0
 22482                           ;incstack = 0
 22483  0073BA  C09A  F081         	movff	CBC_MAC@len,___awdiv@dividend
 22484  0073BE  0100               	movlb	0	; () banked
 22485  0073C0  6B82               	clrf	(___awdiv@dividend+1)& (0+255),b
 22486  0073C2  0E00               	movlw	0
 22487  0073C4  0100               	movlb	0	; () banked
 22488  0073C6  6F84               	movwf	(___awdiv@divisor+1)& (0+255),b
 22489  0073C8  0E04               	movlw	4
 22490  0073CA  6F83               	movwf	___awdiv@divisor& (0+255),b
 22491  0073CC  EC76  F03D         	call	___awdiv	;wreg free
 22492  0073D0  0100               	movlb	0	; () banked
 22493  0073D2  2981               	incf	?___awdiv& (0+255),w,b
 22494  0073D4  0100               	movlb	0	; () banked
 22495  0073D6  6FA2               	movwf	CBC_MAC@block& (0+255),b
 22496                           
 22497                           ; BSR set to: 0
 22498                           ;drv_mrf_miwi_security.c: 181: uint8_t i, j;
 22499                           ;drv_mrf_miwi_security.c: 188: for(i = 0; i < 4; i++)
 22500  0073D8  0E00               	movlw	0
 22501  0073DA  0100               	movlb	0	; () banked
 22502  0073DC  6FA4               	movwf	CBC_MAC@i& (0+255),b
 22503  0073DE                     l10936:
 22504                           
 22505                           ; BSR set to: 0
 22506  0073DE  0E03               	movlw	3
 22507  0073E0  0100               	movlb	0	; () banked
 22508  0073E2  65A4               	cpfsgt	CBC_MAC@i& (0+255),b
 22509  0073E4  D001               	goto	l10940
 22510  0073E6  D010               	goto	l10946
 22511  0073E8                     l10940:
 22512                           
 22513                           ; BSR set to: 0
 22514                           ;drv_mrf_miwi_security.c: 189: {
 22515                           ;drv_mrf_miwi_security.c: 190: MIC[i] = 0;
 22516  0073E8  0100               	movlb	0	; () banked
 22517  0073EA  51A4               	movf	CBC_MAC@i& (0+255),w,b
 22518  0073EC  0D01               	mullw	1
 22519  0073EE  50F3               	movf	prodl,w,c
 22520  0073F0  0100               	movlb	0	; () banked
 22521  0073F2  259D               	addwf	CBC_MAC@MIC& (0+255),w,b
 22522  0073F4  6ED9               	movwf	fsr2l,c
 22523  0073F6  50F4               	movf	prodh,w,c
 22524  0073F8  0100               	movlb	0	; () banked
 22525  0073FA  219E               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 22526  0073FC  6EDA               	movwf	fsr2h,c
 22527  0073FE  0E00               	movlw	0
 22528  007400  6EDF               	movwf	indf2,c
 22529                           
 22530                           ; BSR set to: 0
 22531  007402  0100               	movlb	0	; () banked
 22532  007404  2BA4               	incf	CBC_MAC@i& (0+255),f,b
 22533  007406  D7EB               	goto	l10936
 22534  007408                     l10946:
 22535                           
 22536                           ; BSR set to: 0
 22537                           ;drv_mrf_miwi_security.c: 191: }
 22538                           ;drv_mrf_miwi_security.c: 193: for(i = 0; i < block; i++)
 22539  007408  0E00               	movlw	0
 22540  00740A  0100               	movlb	0	; () banked
 22541  00740C  6FA4               	movwf	CBC_MAC@i& (0+255),b
 22542  00740E  D053               	goto	l10968
 22543  007410                     l10948:
 22544                           
 22545                           ; BSR set to: 0
 22546                           ;drv_mrf_miwi_security.c: 194: {
 22547                           ;drv_mrf_miwi_security.c: 195: for(j = 0; j < 4; j++)
 22548  007410  0E00               	movlw	0
 22549  007412  0100               	movlb	0	; () banked
 22550  007414  6FA3               	movwf	CBC_MAC@j& (0+255),b
 22551  007416                     l10950:
 22552                           
 22553                           ; BSR set to: 0
 22554  007416  0E03               	movlw	3
 22555  007418  0100               	movlb	0	; () banked
 22556  00741A  65A3               	cpfsgt	CBC_MAC@j& (0+255),b
 22557  00741C  D001               	goto	l10954
 22558  00741E  D03F               	goto	l10964
 22559  007420                     l10954:
 22560                           
 22561                           ; BSR set to: 0
 22562                           ;drv_mrf_miwi_security.c: 196: {
 22563                           ;drv_mrf_miwi_security.c: 197: if( (i * 4 + j) >= len )
 22564  007420  0100               	movlb	0	; () banked
 22565  007422  519A               	movf	CBC_MAC@len& (0+255),w,b
 22566  007424  0100               	movlb	0	; () banked
 22567  007426  6F9F               	movwf	??_CBC_MAC& (0+255),b
 22568  007428  6BA0               	clrf	(??_CBC_MAC+1)& (0+255),b
 22569  00742A  0100               	movlb	0	; () banked
 22570  00742C  51A4               	movf	CBC_MAC@i& (0+255),w,b
 22571  00742E  0D04               	mullw	4
 22572  007430  0100               	movlb	0	; () banked
 22573  007432  51A3               	movf	CBC_MAC@j& (0+255),w,b
 22574  007434  26F3               	addwf	prodl,f,c
 22575  007436  0E00               	movlw	0
 22576  007438  22F4               	addwfc	prodh,f,c
 22577  00743A  0100               	movlb	0	; () banked
 22578  00743C  519F               	movf	??_CBC_MAC& (0+255),w,b
 22579  00743E  5CF3               	subwf	prodl,w,c
 22580  007440  50F4               	movf	prodh,w,c
 22581  007442  0A80               	xorlw	128
 22582  007444  0100               	movlb	0	; () banked
 22583  007446  6FA1               	movwf	(??_CBC_MAC+2)& (0+255),b
 22584  007448  0100               	movlb	0	; () banked
 22585  00744A  51A0               	movf	(??_CBC_MAC+1)& (0+255),w,b
 22586  00744C  0A80               	xorlw	128
 22587  00744E  0100               	movlb	0	; () banked
 22588  007450  59A1               	subwfb	(??_CBC_MAC+2)& (0+255),w,b
 22589  007452  B0D8               	btfsc	status,0,c
 22590  007454  D024               	goto	l10964
 22591                           
 22592                           ; BSR set to: 0
 22593                           ;drv_mrf_miwi_security.c: 200: }
 22594                           ;drv_mrf_miwi_security.c: 201: MIC[j] ^= text[i * 4 + j];
 22595                           
 22596                           ; BSR set to: 0
 22597                           
 22598                           ; BSR set to: 0
 22599                           ;drv_mrf_miwi_security.c: 198: {
 22600                           ;drv_mrf_miwi_security.c: 199: break;
 22601  007456  0100               	movlb	0	; () banked
 22602  007458  51A4               	movf	CBC_MAC@i& (0+255),w,b
 22603  00745A  0D04               	mullw	4
 22604  00745C  0100               	movlb	0	; () banked
 22605  00745E  51A3               	movf	CBC_MAC@j& (0+255),w,b
 22606  007460  26F3               	addwf	prodl,f,c
 22607  007462  0E00               	movlw	0
 22608  007464  22F4               	addwfc	prodh,f,c
 22609  007466  50F3               	movf	prodl,w,c
 22610  007468  0100               	movlb	0	; () banked
 22611  00746A  2598               	addwf	CBC_MAC@text& (0+255),w,b
 22612  00746C  6ED9               	movwf	fsr2l,c
 22613  00746E  50F4               	movf	prodh,w,c
 22614  007470  0100               	movlb	0	; () banked
 22615  007472  2199               	addwfc	(CBC_MAC@text+1)& (0+255),w,b
 22616  007474  6EDA               	movwf	fsr2h,c
 22617  007476  50DF               	movf	indf2,w,c
 22618  007478  0100               	movlb	0	; () banked
 22619  00747A  6F9F               	movwf	??_CBC_MAC& (0+255),b
 22620  00747C  0100               	movlb	0	; () banked
 22621  00747E  51A3               	movf	CBC_MAC@j& (0+255),w,b
 22622  007480  0D01               	mullw	1
 22623  007482  50F3               	movf	prodl,w,c
 22624  007484  0100               	movlb	0	; () banked
 22625  007486  259D               	addwf	CBC_MAC@MIC& (0+255),w,b
 22626  007488  6ED9               	movwf	fsr2l,c
 22627  00748A  50F4               	movf	prodh,w,c
 22628  00748C  0100               	movlb	0	; () banked
 22629  00748E  219E               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 22630  007490  6EDA               	movwf	fsr2h,c
 22631  007492  0100               	movlb	0	; () banked
 22632  007494  519F               	movf	??_CBC_MAC& (0+255),w,b
 22633  007496  1ADF               	xorwf	indf2,f,c
 22634                           
 22635                           ; BSR set to: 0
 22636  007498  0100               	movlb	0	; () banked
 22637  00749A  2BA3               	incf	CBC_MAC@j& (0+255),f,b
 22638  00749C  D7BC               	goto	l10950
 22639  00749E                     l10964:
 22640                           
 22641                           ; BSR set to: 0
 22642                           ;drv_mrf_miwi_security.c: 202: }
 22643                           ;drv_mrf_miwi_security.c: 203: encode((uint16_t *)MIC, (uint16_t *)key);
 22644  00749E  C09D  F081         	movff	CBC_MAC@MIC,encode@text
 22645  0074A2  C09E  F082         	movff	CBC_MAC@MIC+1,encode@text+1
 22646  0074A6  C09B  F083         	movff	CBC_MAC@key,encode@key
 22647  0074AA  C09C  F084         	movff	CBC_MAC@key+1,encode@key+1
 22648  0074AE  EC94  F02C         	call	_encode	;wreg free
 22649  0074B2  0100               	movlb	0	; () banked
 22650  0074B4  2BA4               	incf	CBC_MAC@i& (0+255),f,b
 22651  0074B6                     l10968:
 22652                           
 22653                           ; BSR set to: 0
 22654  0074B6  0100               	movlb	0	; () banked
 22655  0074B8  51A2               	movf	CBC_MAC@block& (0+255),w,b
 22656  0074BA  0100               	movlb	0	; () banked
 22657  0074BC  5DA4               	subwf	CBC_MAC@i& (0+255),w,b
 22658  0074BE  B0D8               	btfsc	status,0,c
 22659  0074C0  0012               	return	
 22660  0074C2  D7A6               	goto	l10948
 22661  0074C4                     __end_of_CBC_MAC:
 22662                           	opt stack 0
 22663                           tblptru	equ	0xFF8
 22664                           tblptrh	equ	0xFF7
 22665                           tblptrl	equ	0xFF6
 22666                           tablat	equ	0xFF5
 22667                           prodh	equ	0xFF4
 22668                           prodl	equ	0xFF3
 22669                           intcon	equ	0xFF2
 22670                           intcon2	equ	0xFF1
 22671                           intcon3	equ	0xFF0
 22672                           indf0	equ	0xFEF
 22673                           postinc0	equ	0xFEE
 22674                           plusw0	equ	0xFEB
 22675                           fsr0h	equ	0xFEA
 22676                           fsr0l	equ	0xFE9
 22677                           wreg	equ	0xFE8
 22678                           indf1	equ	0xFE7
 22679                           postinc1	equ	0xFE6
 22680                           postdec1	equ	0xFE5
 22681                           fsr1h	equ	0xFE2
 22682                           fsr1l	equ	0xFE1
 22683                           indf2	equ	0xFDF
 22684                           postinc2	equ	0xFDE
 22685                           postdec2	equ	0xFDD
 22686                           plusw2	equ	0xFDB
 22687                           fsr2h	equ	0xFDA
 22688                           fsr2l	equ	0xFD9
 22689                           status	equ	0xFD8
 22690                           
 22691 ;; *************** function _encode *****************
 22692 ;; Defined at:
 22693 ;;		line 77 in file "src/miwi/drv_mrf_miwi_security.c"
 22694 ;; Parameters:    Size  Location     Type
 22695 ;;  text            2   33[BANK0 ] PTR unsigned int 
 22696 ;;		 -> tmpBlock(4), 
 22697 ;;  key             2   35[BANK0 ] PTR unsigned int 
 22698 ;;		 -> key(8), 
 22699 ;; Auto vars:     Size  Location     Type
 22700 ;;  sum             2   54[BANK0 ] unsigned int 
 22701 ;;  part2           2   52[BANK0 ] unsigned int 
 22702 ;;  part1           2   50[BANK0 ] unsigned int 
 22703 ;;  delta           2   47[BANK0 ] unsigned int 
 22704 ;;  i               1   49[BANK0 ] unsigned char 
 22705 ;; Return value:  Size  Location     Type
 22706 ;;		None               void
 22707 ;; Registers used:
 22708 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22709 ;; Tracked objects:
 22710 ;;		On entry : 0/0
 22711 ;;		On exit  : 0/0
 22712 ;;		Unchanged: 0/0
 22713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22714 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22715 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22716 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22717 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22718 ;;Total ram usage:       23 bytes
 22719 ;; Hardware stack levels used:    1
 22720 ;; Hardware stack levels required when called:    7
 22721 ;; This function calls:
 22722 ;;		Nothing
 22723 ;; This function is called by:
 22724 ;;		_CTR
 22725 ;;		_CBC_MAC
 22726 ;; This function uses a non-reentrant model
 22727 ;;
 22728                           
 22729                           	psect	text71
 22730  005928                     __ptext71:
 22731                           	opt stack 0
 22732  005928                     _encode:
 22733                           	opt stack 17
 22734                           
 22735                           ;drv_mrf_miwi_security.c: 79: uint16_t part1=text[0], part2=text[1];
 22736                           
 22737                           ; BSR set to: 0
 22738                           ;incstack = 0
 22739  005928  C081  FFD9         	movff	encode@text,fsr2l
 22740  00592C  C082  FFDA         	movff	encode@text+1,fsr2h
 22741  005930  CFDE F092          	movff	postinc2,encode@part1
 22742  005934  CFDD F093          	movff	postdec2,encode@part1+1
 22743  005938  0100               	movlb	0	; () banked
 22744  00593A  EE20 F002          	lfsr	2,2
 22745  00593E  5181               	movf	encode@text& (0+255),w,b
 22746  005940  26D9               	addwf	fsr2l,f,c
 22747  005942  5182               	movf	(encode@text+1)& (0+255),w,b
 22748  005944  22DA               	addwfc	fsr2h,f,c
 22749  005946  CFDE F094          	movff	postinc2,encode@part2
 22750  00594A  CFDD F095          	movff	postdec2,encode@part2+1
 22751                           
 22752                           ; BSR set to: 0
 22753                           ;drv_mrf_miwi_security.c: 80: uint16_t sum=0, delta=0x9E37;
 22754  00594E  0E00               	movlw	0
 22755  005950  0100               	movlb	0	; () banked
 22756  005952  6F97               	movwf	(encode@sum+1)& (0+255),b
 22757  005954  0E00               	movlw	0
 22758  005956  6F96               	movwf	encode@sum& (0+255),b
 22759                           
 22760                           ; BSR set to: 0
 22761  005958  0E9E               	movlw	158
 22762  00595A  0100               	movlb	0	; () banked
 22763  00595C  6F90               	movwf	(encode@delta+1)& (0+255),b
 22764  00595E  0E37               	movlw	55
 22765  005960  6F8F               	movwf	encode@delta& (0+255),b
 22766                           
 22767                           ; BSR set to: 0
 22768                           ;drv_mrf_miwi_security.c: 81: uint8_t i;
 22769                           ;drv_mrf_miwi_security.c: 83: for(i=0; i<32; i++)
 22770  005962  0E00               	movlw	0
 22771  005964  0100               	movlb	0	; () banked
 22772  005966  6F91               	movwf	encode@i& (0+255),b
 22773  005968                     l10750:
 22774                           
 22775                           ; BSR set to: 0
 22776  005968  0E1F               	movlw	31
 22777  00596A  0100               	movlb	0	; () banked
 22778  00596C  6591               	cpfsgt	encode@i& (0+255),b
 22779  00596E  D001               	goto	l10754
 22780  005970  D0D4               	goto	l10764
 22781  005972                     l10754:
 22782                           
 22783                           ; BSR set to: 0
 22784                           ;drv_mrf_miwi_security.c: 84: {
 22785                           ;drv_mrf_miwi_security.c: 85: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (sum + 
      +                          key[sum & 3]);
 22786  005972  0E03               	movlw	3
 22787  005974  0100               	movlb	0	; () banked
 22788  005976  1596               	andwf	encode@sum& (0+255),w,b
 22789  005978  0100               	movlb	0	; () banked
 22790  00597A  6F85               	movwf	??_encode& (0+255),b
 22791  00597C  0E00               	movlw	0
 22792  00597E  0100               	movlb	0	; () banked
 22793  005980  1597               	andwf	(encode@sum+1)& (0+255),w,b
 22794  005982  0100               	movlb	0	; () banked
 22795  005984  6F86               	movwf	(??_encode+1)& (0+255),b
 22796  005986  90D8               	bcf	status,0,c
 22797  005988  0100               	movlb	0	; () banked
 22798  00598A  3785               	rlcf	??_encode& (0+255),f,b
 22799  00598C  3786               	rlcf	(??_encode+1)& (0+255),f,b
 22800  00598E  0100               	movlb	0	; () banked
 22801  005990  5185               	movf	??_encode& (0+255),w,b
 22802  005992  0100               	movlb	0	; () banked
 22803  005994  2583               	addwf	encode@key& (0+255),w,b
 22804  005996  6ED9               	movwf	fsr2l,c
 22805  005998  0100               	movlb	0	; () banked
 22806  00599A  5186               	movf	(??_encode+1)& (0+255),w,b
 22807  00599C  0100               	movlb	0	; () banked
 22808  00599E  2184               	addwfc	(encode@key+1)& (0+255),w,b
 22809  0059A0  6EDA               	movwf	fsr2h,c
 22810  0059A2  CFDE F087          	movff	postinc2,??_encode+2
 22811  0059A6  CFDD F088          	movff	postdec2,??_encode+3
 22812  0059AA  0100               	movlb	0	; () banked
 22813  0059AC  5196               	movf	encode@sum& (0+255),w,b
 22814  0059AE  0100               	movlb	0	; () banked
 22815  0059B0  2787               	addwf	(??_encode+2)& (0+255),f,b
 22816  0059B2  0100               	movlb	0	; () banked
 22817  0059B4  5197               	movf	(encode@sum+1)& (0+255),w,b
 22818  0059B6  0100               	movlb	0	; () banked
 22819  0059B8  2388               	addwfc	(??_encode+3)& (0+255),f,b
 22820  0059BA  C094  F089         	movff	encode@part2,??_encode+4
 22821  0059BE  C095  F08A         	movff	encode@part2+1,??_encode+5
 22822  0059C2  0E05               	movlw	5
 22823  0059C4  0100               	movlb	0	; () banked
 22824  0059C6  6F8B               	movwf	(??_encode+6)& (0+255),b
 22825  0059C8                     u11805:
 22826  0059C8  0100               	movlb	0	; () banked
 22827  0059CA  90D8               	bcf	status,0,c
 22828  0059CC  338A               	rrcf	(??_encode+5)& (0+255),f,b
 22829  0059CE  3389               	rrcf	(??_encode+4)& (0+255),f,b
 22830  0059D0  0100               	movlb	0	; () banked
 22831  0059D2  2F8B               	decfsz	(??_encode+6)& (0+255),f,b
 22832  0059D4  D7F9               	goto	u11805
 22833  0059D6  C094  F08C         	movff	encode@part2,??_encode+7
 22834  0059DA  C095  F08D         	movff	encode@part2+1,??_encode+8
 22835  0059DE  0100               	movlb	0	; () banked
 22836  0059E0  3B8C               	swapf	(??_encode+7)& (0+255),f,b
 22837  0059E2  3B8D               	swapf	(??_encode+8)& (0+255),f,b
 22838  0059E4  0EF0               	movlw	240
 22839  0059E6  178D               	andwf	(??_encode+8)& (0+255),f,b
 22840  0059E8  518C               	movf	(??_encode+7)& (0+255),w,b
 22841  0059EA  0B0F               	andlw	15
 22842  0059EC  138D               	iorwf	(??_encode+8)& (0+255),f,b
 22843  0059EE  0EF0               	movlw	240
 22844  0059F0  178C               	andwf	(??_encode+7)& (0+255),f,b
 22845  0059F2  0100               	movlb	0	; () banked
 22846  0059F4  5189               	movf	(??_encode+4)& (0+255),w,b
 22847  0059F6  0100               	movlb	0	; () banked
 22848  0059F8  1B8C               	xorwf	(??_encode+7)& (0+255),f,b
 22849  0059FA  0100               	movlb	0	; () banked
 22850  0059FC  518A               	movf	(??_encode+5)& (0+255),w,b
 22851  0059FE  0100               	movlb	0	; () banked
 22852  005A00  1B8D               	xorwf	(??_encode+8)& (0+255),f,b
 22853  005A02  0100               	movlb	0	; () banked
 22854  005A04  5194               	movf	encode@part2& (0+255),w,b
 22855  005A06  0100               	movlb	0	; () banked
 22856  005A08  278C               	addwf	(??_encode+7)& (0+255),f,b
 22857  005A0A  0100               	movlb	0	; () banked
 22858  005A0C  5195               	movf	(encode@part2+1)& (0+255),w,b
 22859  005A0E  0100               	movlb	0	; () banked
 22860  005A10  238D               	addwfc	(??_encode+8)& (0+255),f,b
 22861  005A12  0100               	movlb	0	; () banked
 22862  005A14  5187               	movf	(??_encode+2)& (0+255),w,b
 22863  005A16  0100               	movlb	0	; () banked
 22864  005A18  1B8C               	xorwf	(??_encode+7)& (0+255),f,b
 22865  005A1A  0100               	movlb	0	; () banked
 22866  005A1C  5188               	movf	(??_encode+3)& (0+255),w,b
 22867  005A1E  0100               	movlb	0	; () banked
 22868  005A20  1B8D               	xorwf	(??_encode+8)& (0+255),f,b
 22869  005A22  0100               	movlb	0	; () banked
 22870  005A24  518C               	movf	(??_encode+7)& (0+255),w,b
 22871  005A26  0100               	movlb	0	; () banked
 22872  005A28  2792               	addwf	encode@part1& (0+255),f,b
 22873  005A2A  0100               	movlb	0	; () banked
 22874  005A2C  518D               	movf	(??_encode+8)& (0+255),w,b
 22875  005A2E  0100               	movlb	0	; () banked
 22876  005A30  2393               	addwfc	(encode@part1+1)& (0+255),f,b
 22877                           
 22878                           ; BSR set to: 0
 22879                           ;drv_mrf_miwi_security.c: 86: sum += delta;
 22880  005A32  0100               	movlb	0	; () banked
 22881  005A34  518F               	movf	encode@delta& (0+255),w,b
 22882  005A36  0100               	movlb	0	; () banked
 22883  005A38  2796               	addwf	encode@sum& (0+255),f,b
 22884  005A3A  0100               	movlb	0	; () banked
 22885  005A3C  5190               	movf	(encode@delta+1)& (0+255),w,b
 22886  005A3E  0100               	movlb	0	; () banked
 22887  005A40  2397               	addwfc	(encode@sum+1)& (0+255),f,b
 22888                           
 22889                           ; BSR set to: 0
 22890                           ;drv_mrf_miwi_security.c: 87: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (sum + 
      +                          key[(sum>>11) & 3]);
 22891  005A42  C096  F085         	movff	encode@sum,??_encode
 22892  005A46  C097  F086         	movff	encode@sum+1,??_encode+1
 22893  005A4A  0E0B               	movlw	11
 22894  005A4C  0100               	movlb	0	; () banked
 22895  005A4E  6F87               	movwf	(??_encode+2)& (0+255),b
 22896  005A50                     u11815:
 22897  005A50  0100               	movlb	0	; () banked
 22898  005A52  90D8               	bcf	status,0,c
 22899  005A54  3386               	rrcf	(??_encode+1)& (0+255),f,b
 22900  005A56  3385               	rrcf	??_encode& (0+255),f,b
 22901  005A58  0100               	movlb	0	; () banked
 22902  005A5A  2F87               	decfsz	(??_encode+2)& (0+255),f,b
 22903  005A5C  D7F9               	goto	u11815
 22904  005A5E  0E03               	movlw	3
 22905  005A60  0100               	movlb	0	; () banked
 22906  005A62  1785               	andwf	??_encode& (0+255),f,b
 22907  005A64  0E00               	movlw	0
 22908  005A66  1786               	andwf	(??_encode+1)& (0+255),f,b
 22909  005A68  90D8               	bcf	status,0,c
 22910  005A6A  0100               	movlb	0	; () banked
 22911  005A6C  3785               	rlcf	??_encode& (0+255),f,b
 22912  005A6E  3786               	rlcf	(??_encode+1)& (0+255),f,b
 22913  005A70  0100               	movlb	0	; () banked
 22914  005A72  5185               	movf	??_encode& (0+255),w,b
 22915  005A74  0100               	movlb	0	; () banked
 22916  005A76  2583               	addwf	encode@key& (0+255),w,b
 22917  005A78  6ED9               	movwf	fsr2l,c
 22918  005A7A  0100               	movlb	0	; () banked
 22919  005A7C  5186               	movf	(??_encode+1)& (0+255),w,b
 22920  005A7E  0100               	movlb	0	; () banked
 22921  005A80  2184               	addwfc	(encode@key+1)& (0+255),w,b
 22922  005A82  6EDA               	movwf	fsr2h,c
 22923  005A84  CFDE F088          	movff	postinc2,??_encode+3
 22924  005A88  CFDD F089          	movff	postdec2,??_encode+4
 22925  005A8C  0100               	movlb	0	; () banked
 22926  005A8E  5196               	movf	encode@sum& (0+255),w,b
 22927  005A90  0100               	movlb	0	; () banked
 22928  005A92  2788               	addwf	(??_encode+3)& (0+255),f,b
 22929  005A94  0100               	movlb	0	; () banked
 22930  005A96  5197               	movf	(encode@sum+1)& (0+255),w,b
 22931  005A98  0100               	movlb	0	; () banked
 22932  005A9A  2389               	addwfc	(??_encode+4)& (0+255),f,b
 22933  005A9C  C092  F08A         	movff	encode@part1,??_encode+5
 22934  005AA0  C093  F08B         	movff	encode@part1+1,??_encode+6
 22935  005AA4  0E05               	movlw	5
 22936  005AA6  0100               	movlb	0	; () banked
 22937  005AA8  6F8C               	movwf	(??_encode+7)& (0+255),b
 22938  005AAA                     u11825:
 22939  005AAA  0100               	movlb	0	; () banked
 22940  005AAC  90D8               	bcf	status,0,c
 22941  005AAE  338B               	rrcf	(??_encode+6)& (0+255),f,b
 22942  005AB0  338A               	rrcf	(??_encode+5)& (0+255),f,b
 22943  005AB2  0100               	movlb	0	; () banked
 22944  005AB4  2F8C               	decfsz	(??_encode+7)& (0+255),f,b
 22945  005AB6  D7F9               	goto	u11825
 22946  005AB8  C092  F08D         	movff	encode@part1,??_encode+8
 22947  005ABC  C093  F08E         	movff	encode@part1+1,??_encode+9
 22948  005AC0  0100               	movlb	0	; () banked
 22949  005AC2  3B8D               	swapf	(??_encode+8)& (0+255),f,b
 22950  005AC4  3B8E               	swapf	(??_encode+9)& (0+255),f,b
 22951  005AC6  0EF0               	movlw	240
 22952  005AC8  178E               	andwf	(??_encode+9)& (0+255),f,b
 22953  005ACA  518D               	movf	(??_encode+8)& (0+255),w,b
 22954  005ACC  0B0F               	andlw	15
 22955  005ACE  138E               	iorwf	(??_encode+9)& (0+255),f,b
 22956  005AD0  0EF0               	movlw	240
 22957  005AD2  178D               	andwf	(??_encode+8)& (0+255),f,b
 22958  005AD4  0100               	movlb	0	; () banked
 22959  005AD6  518A               	movf	(??_encode+5)& (0+255),w,b
 22960  005AD8  0100               	movlb	0	; () banked
 22961  005ADA  1B8D               	xorwf	(??_encode+8)& (0+255),f,b
 22962  005ADC  0100               	movlb	0	; () banked
 22963  005ADE  518B               	movf	(??_encode+6)& (0+255),w,b
 22964  005AE0  0100               	movlb	0	; () banked
 22965  005AE2  1B8E               	xorwf	(??_encode+9)& (0+255),f,b
 22966  005AE4  0100               	movlb	0	; () banked
 22967  005AE6  5192               	movf	encode@part1& (0+255),w,b
 22968  005AE8  0100               	movlb	0	; () banked
 22969  005AEA  278D               	addwf	(??_encode+8)& (0+255),f,b
 22970  005AEC  0100               	movlb	0	; () banked
 22971  005AEE  5193               	movf	(encode@part1+1)& (0+255),w,b
 22972  005AF0  0100               	movlb	0	; () banked
 22973  005AF2  238E               	addwfc	(??_encode+9)& (0+255),f,b
 22974  005AF4  0100               	movlb	0	; () banked
 22975  005AF6  5188               	movf	(??_encode+3)& (0+255),w,b
 22976  005AF8  0100               	movlb	0	; () banked
 22977  005AFA  1B8D               	xorwf	(??_encode+8)& (0+255),f,b
 22978  005AFC  0100               	movlb	0	; () banked
 22979  005AFE  5189               	movf	(??_encode+4)& (0+255),w,b
 22980  005B00  0100               	movlb	0	; () banked
 22981  005B02  1B8E               	xorwf	(??_encode+9)& (0+255),f,b
 22982  005B04  0100               	movlb	0	; () banked
 22983  005B06  518D               	movf	(??_encode+8)& (0+255),w,b
 22984  005B08  0100               	movlb	0	; () banked
 22985  005B0A  2794               	addwf	encode@part2& (0+255),f,b
 22986  005B0C  0100               	movlb	0	; () banked
 22987  005B0E  518E               	movf	(??_encode+9)& (0+255),w,b
 22988  005B10  0100               	movlb	0	; () banked
 22989  005B12  2395               	addwfc	(encode@part2+1)& (0+255),f,b
 22990                           
 22991                           ; BSR set to: 0
 22992  005B14  0100               	movlb	0	; () banked
 22993  005B16  2B91               	incf	encode@i& (0+255),f,b
 22994  005B18  D727               	goto	l10750
 22995  005B1A                     l10764:
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;drv_mrf_miwi_security.c: 88: }
 22999                           ;drv_mrf_miwi_security.c: 89: text[0]=part1; text[1]=part2;
 23000  005B1A  C081  FFD9         	movff	encode@text,fsr2l
 23001  005B1E  C082  FFDA         	movff	encode@text+1,fsr2h
 23002  005B22  C092  FFDE         	movff	encode@part1,postinc2
 23003  005B26  C093  FFDD         	movff	encode@part1+1,postdec2
 23004                           
 23005                           ; BSR set to: 0
 23006  005B2A  0100               	movlb	0	; () banked
 23007  005B2C  EE20 F002          	lfsr	2,2
 23008  005B30  5181               	movf	encode@text& (0+255),w,b
 23009  005B32  26D9               	addwf	fsr2l,f,c
 23010  005B34  5182               	movf	(encode@text+1)& (0+255),w,b
 23011  005B36  22DA               	addwfc	fsr2h,f,c
 23012  005B38  C094  FFDE         	movff	encode@part2,postinc2
 23013  005B3C  C095  FFDD         	movff	encode@part2+1,postdec2
 23014                           
 23015                           ; BSR set to: 0
 23016  005B40  0012               	return		;funcret
 23017  005B42                     __end_of_encode:
 23018                           	opt stack 0
 23019                           tblptru	equ	0xFF8
 23020                           tblptrh	equ	0xFF7
 23021                           tblptrl	equ	0xFF6
 23022                           tablat	equ	0xFF5
 23023                           prodh	equ	0xFF4
 23024                           prodl	equ	0xFF3
 23025                           intcon	equ	0xFF2
 23026                           intcon2	equ	0xFF1
 23027                           intcon3	equ	0xFF0
 23028                           indf0	equ	0xFEF
 23029                           postinc0	equ	0xFEE
 23030                           plusw0	equ	0xFEB
 23031                           fsr0h	equ	0xFEA
 23032                           fsr0l	equ	0xFE9
 23033                           wreg	equ	0xFE8
 23034                           indf1	equ	0xFE7
 23035                           postinc1	equ	0xFE6
 23036                           postdec1	equ	0xFE5
 23037                           fsr1h	equ	0xFE2
 23038                           fsr1l	equ	0xFE1
 23039                           indf2	equ	0xFDF
 23040                           postinc2	equ	0xFDE
 23041                           postdec2	equ	0xFDD
 23042                           plusw2	equ	0xFDB
 23043                           fsr2h	equ	0xFDA
 23044                           fsr2l	equ	0xFD9
 23045                           status	equ	0xFD8
 23046                           
 23047 ;; *************** function ___awdiv *****************
 23048 ;; Defined at:
 23049 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/awdiv.c"
 23050 ;; Parameters:    Size  Location     Type
 23051 ;;  dividend        2   33[BANK0 ] int 
 23052 ;;  divisor         2   35[BANK0 ] int 
 23053 ;; Auto vars:     Size  Location     Type
 23054 ;;  quotient        2   39[BANK0 ] int 
 23055 ;;  sign            1   38[BANK0 ] unsigned char 
 23056 ;;  counter         1   37[BANK0 ] unsigned char 
 23057 ;; Return value:  Size  Location     Type
 23058 ;;                  2   33[BANK0 ] int 
 23059 ;; Registers used:
 23060 ;;		wreg, status,2, status,0
 23061 ;; Tracked objects:
 23062 ;;		On entry : 0/0
 23063 ;;		On exit  : 0/0
 23064 ;;		Unchanged: 0/0
 23065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23067 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23069 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23070 ;;Total ram usage:        8 bytes
 23071 ;; Hardware stack levels used:    1
 23072 ;; Hardware stack levels required when called:    7
 23073 ;; This function calls:
 23074 ;;		Nothing
 23075 ;; This function is called by:
 23076 ;;		_CTR
 23077 ;;		_CBC_MAC
 23078 ;; This function uses a non-reentrant model
 23079 ;;
 23080                           
 23081                           	psect	text72
 23082  007AEC                     __ptext72:
 23083                           	opt stack 0
 23084  007AEC                     ___awdiv:
 23085                           	opt stack 17
 23086                           
 23087                           ; BSR set to: 0
 23088                           ;incstack = 0
 23089  007AEC  0E00               	movlw	0
 23090  007AEE  0100               	movlb	0	; () banked
 23091  007AF0  6F86               	movwf	___awdiv@sign& (0+255),b
 23092                           
 23093                           ; BSR set to: 0
 23094  007AF2  0100               	movlb	0	; () banked
 23095  007AF4  AF84               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23096  007AF6  D008               	goto	l10776
 23097                           
 23098                           ; BSR set to: 0
 23099  007AF8  0100               	movlb	0	; () banked
 23100  007AFA  6D83               	negf	___awdiv@divisor& (0+255),b
 23101  007AFC  1F84               	comf	(___awdiv@divisor+1)& (0+255),f,b
 23102  007AFE  B0D8               	btfsc	status,0,c
 23103  007B00  2B84               	incf	(___awdiv@divisor+1)& (0+255),f,b
 23104                           
 23105                           ; BSR set to: 0
 23106  007B02  0E01               	movlw	1
 23107  007B04  0100               	movlb	0	; () banked
 23108  007B06  6F86               	movwf	___awdiv@sign& (0+255),b
 23109  007B08                     l10776:
 23110                           
 23111                           ; BSR set to: 0
 23112  007B08  0100               	movlb	0	; () banked
 23113  007B0A  AF82               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 23114  007B0C  D008               	goto	l10782
 23115                           
 23116                           ; BSR set to: 0
 23117  007B0E  0100               	movlb	0	; () banked
 23118  007B10  6D81               	negf	___awdiv@dividend& (0+255),b
 23119  007B12  1F82               	comf	(___awdiv@dividend+1)& (0+255),f,b
 23120  007B14  B0D8               	btfsc	status,0,c
 23121  007B16  2B82               	incf	(___awdiv@dividend+1)& (0+255),f,b
 23122                           
 23123                           ; BSR set to: 0
 23124  007B18  0E01               	movlw	1
 23125  007B1A  0100               	movlb	0	; () banked
 23126  007B1C  1B86               	xorwf	___awdiv@sign& (0+255),f,b
 23127  007B1E                     l10782:
 23128                           
 23129                           ; BSR set to: 0
 23130  007B1E  0E00               	movlw	0
 23131  007B20  0100               	movlb	0	; () banked
 23132  007B22  6F88               	movwf	(___awdiv@quotient+1)& (0+255),b
 23133  007B24  0E00               	movlw	0
 23134  007B26  6F87               	movwf	___awdiv@quotient& (0+255),b
 23135                           
 23136                           ; BSR set to: 0
 23137  007B28  0100               	movlb	0	; () banked
 23138  007B2A  5183               	movf	___awdiv@divisor& (0+255),w,b
 23139  007B2C  0100               	movlb	0	; () banked
 23140  007B2E  1184               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 23141  007B30  B4D8               	btfsc	status,2,c
 23142  007B32  D02C               	goto	l10804
 23143                           
 23144                           ; BSR set to: 0
 23145  007B34  0E01               	movlw	1
 23146  007B36  0100               	movlb	0	; () banked
 23147  007B38  6F85               	movwf	___awdiv@counter& (0+255),b
 23148  007B3A  D006               	goto	l10790
 23149  007B3C                     l10788:
 23150                           
 23151                           ; BSR set to: 0
 23152  007B3C  0100               	movlb	0	; () banked
 23153  007B3E  90D8               	bcf	status,0,c
 23154  007B40  3783               	rlcf	___awdiv@divisor& (0+255),f,b
 23155  007B42  3784               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 23156  007B44  0100               	movlb	0	; () banked
 23157  007B46  2B85               	incf	___awdiv@counter& (0+255),f,b
 23158  007B48                     l10790:
 23159                           
 23160                           ; BSR set to: 0
 23161  007B48  0100               	movlb	0	; () banked
 23162  007B4A  AF84               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23163  007B4C  D7F7               	goto	l10788
 23164  007B4E                     l10792:
 23165                           
 23166                           ; BSR set to: 0
 23167  007B4E  0100               	movlb	0	; () banked
 23168  007B50  90D8               	bcf	status,0,c
 23169  007B52  3787               	rlcf	___awdiv@quotient& (0+255),f,b
 23170  007B54  3788               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 23171                           
 23172                           ; BSR set to: 0
 23173  007B56  0100               	movlb	0	; () banked
 23174  007B58  5183               	movf	___awdiv@divisor& (0+255),w,b
 23175  007B5A  0100               	movlb	0	; () banked
 23176  007B5C  5D81               	subwf	___awdiv@dividend& (0+255),w,b
 23177  007B5E  0100               	movlb	0	; () banked
 23178  007B60  5184               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23179  007B62  0100               	movlb	0	; () banked
 23180  007B64  5982               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 23181  007B66  A0D8               	btfss	status,0,c
 23182  007B68  D00A               	goto	l10800
 23183                           
 23184                           ; BSR set to: 0
 23185  007B6A  0100               	movlb	0	; () banked
 23186  007B6C  5183               	movf	___awdiv@divisor& (0+255),w,b
 23187  007B6E  0100               	movlb	0	; () banked
 23188  007B70  5F81               	subwf	___awdiv@dividend& (0+255),f,b
 23189  007B72  0100               	movlb	0	; () banked
 23190  007B74  5184               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23191  007B76  0100               	movlb	0	; () banked
 23192  007B78  5B82               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 23193                           
 23194                           ; BSR set to: 0
 23195  007B7A  0100               	movlb	0	; () banked
 23196  007B7C  8187               	bsf	___awdiv@quotient& (0+255),0,b
 23197  007B7E                     l10800:
 23198                           
 23199                           ; BSR set to: 0
 23200  007B7E  0100               	movlb	0	; () banked
 23201  007B80  90D8               	bcf	status,0,c
 23202  007B82  3384               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 23203  007B84  3383               	rrcf	___awdiv@divisor& (0+255),f,b
 23204                           
 23205                           ; BSR set to: 0
 23206  007B86  0100               	movlb	0	; () banked
 23207  007B88  2F85               	decfsz	___awdiv@counter& (0+255),f,b
 23208  007B8A  D7E1               	goto	l10792
 23209  007B8C                     l10804:
 23210                           
 23211                           ; BSR set to: 0
 23212  007B8C  0100               	movlb	0	; () banked
 23213  007B8E  5186               	movf	___awdiv@sign& (0+255),w,b
 23214  007B90  0100               	movlb	0	; () banked
 23215  007B92  B4D8               	btfsc	status,2,c
 23216  007B94  D005               	goto	l10808
 23217                           
 23218                           ; BSR set to: 0
 23219  007B96  0100               	movlb	0	; () banked
 23220  007B98  6D87               	negf	___awdiv@quotient& (0+255),b
 23221  007B9A  1F88               	comf	(___awdiv@quotient+1)& (0+255),f,b
 23222  007B9C  B0D8               	btfsc	status,0,c
 23223  007B9E  2B88               	incf	(___awdiv@quotient+1)& (0+255),f,b
 23224  007BA0                     l10808:
 23225                           
 23226                           ; BSR set to: 0
 23227  007BA0  C087  F081         	movff	___awdiv@quotient,?___awdiv
 23228  007BA4  C088  F082         	movff	___awdiv@quotient+1,?___awdiv+1
 23229  007BA8  0012               	return	
 23230  007BAA                     __end_of___awdiv:
 23231                           	opt stack 0
 23232                           tblptru	equ	0xFF8
 23233                           tblptrh	equ	0xFF7
 23234                           tblptrl	equ	0xFF6
 23235                           tablat	equ	0xFF5
 23236                           prodh	equ	0xFF4
 23237                           prodl	equ	0xFF3
 23238                           intcon	equ	0xFF2
 23239                           intcon2	equ	0xFF1
 23240                           intcon3	equ	0xFF0
 23241                           indf0	equ	0xFEF
 23242                           postinc0	equ	0xFEE
 23243                           plusw0	equ	0xFEB
 23244                           fsr0h	equ	0xFEA
 23245                           fsr0l	equ	0xFE9
 23246                           wreg	equ	0xFE8
 23247                           indf1	equ	0xFE7
 23248                           postinc1	equ	0xFE6
 23249                           postdec1	equ	0xFE5
 23250                           fsr1h	equ	0xFE2
 23251                           fsr1l	equ	0xFE1
 23252                           indf2	equ	0xFDF
 23253                           postinc2	equ	0xFDE
 23254                           postdec2	equ	0xFDD
 23255                           plusw2	equ	0xFDB
 23256                           fsr2h	equ	0xFDA
 23257                           fsr2l	equ	0xFD9
 23258                           status	equ	0xFD8
 23259                           
 23260 ;; *************** function _AddNodeToNetworkTable *****************
 23261 ;; Defined at:
 23262 ;;		line 3372 in file "src/miwi/miwi_mesh.c"
 23263 ;; Parameters:    Size  Location     Type
 23264 ;;		None
 23265 ;; Auto vars:     Size  Location     Type
 23266 ;;  i               1   41[BANK0 ] unsigned char 
 23267 ;;  handle          1   42[BANK0 ] unsigned char 
 23268 ;; Return value:  Size  Location     Type
 23269 ;;                  1    wreg      unsigned char 
 23270 ;; Registers used:
 23271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23272 ;; Tracked objects:
 23273 ;;		On entry : 0/0
 23274 ;;		On exit  : 0/0
 23275 ;;		Unchanged: 0/0
 23276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23278 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23280 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23281 ;;Total ram usage:        4 bytes
 23282 ;; Hardware stack levels used:    1
 23283 ;; Hardware stack levels required when called:    8
 23284 ;; This function calls:
 23285 ;;		_SearchForLongAddress
 23286 ;;		_SearchForShortAddress
 23287 ;;		_findNextNetworkEntry
 23288 ;; This function is called by:
 23289 ;;		_MiWiTasks
 23290 ;; This function uses a non-reentrant model
 23291 ;;
 23292                           
 23293                           	psect	text73
 23294  007192                     __ptext73:
 23295                           	opt stack 0
 23296  007192                     _AddNodeToNetworkTable:
 23297                           	opt stack 17
 23298                           
 23299                           ;miwi_mesh.c: 3374: uint8_t handle = 0xFF;
 23300                           
 23301                           ; BSR set to: 0
 23302                           ;incstack = 0
 23303  007192  0100               	movlb	0	; () banked
 23304  007194  698A               	setf	AddNodeToNetworkTable@handle& (0+255),b
 23305                           
 23306                           ;miwi_mesh.c: 3376: if(tempNodeStatus.bits.longAddressValid)
 23307  007196  A448               	btfss	_tempNodeStatus,2,c
 23308  007198  D003               	goto	l716
 23309                           
 23310                           ; BSR set to: 0
 23311                           ;miwi_mesh.c: 3377: {
 23312                           ;miwi_mesh.c: 3378: handle = SearchForLongAddress();
 23313  00719A  EC4C  F03C         	call	_SearchForLongAddress	;wreg free
 23314  00719E  D004               	goto	L13
 23315  0071A0                     l716:
 23316                           
 23317                           ; BSR set to: 0
 23318                           ;miwi_mesh.c: 3380: else
 23319                           ;miwi_mesh.c: 3381: {
 23320                           ;miwi_mesh.c: 3382: if(tempNodeStatus.bits.shortAddressValid)
 23321  0071A0  A648               	btfss	_tempNodeStatus,3,c
 23322  0071A2  D004               	goto	l11452
 23323                           
 23324                           ; BSR set to: 0
 23325                           ;miwi_mesh.c: 3383: {
 23326                           ;miwi_mesh.c: 3384: handle = SearchForShortAddress();
 23327  0071A4  EC5F  F040         	call	_SearchForShortAddress	;wreg free
 23328  0071A8                     L13:
 23329  0071A8  0100               	movlb	0	; () banked
 23330  0071AA  6F8A               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 23331  0071AC                     l11452:
 23332                           
 23333                           ; BSR set to: 0
 23334                           ;miwi_mesh.c: 3385: }
 23335                           ;miwi_mesh.c: 3386: }
 23336                           ;miwi_mesh.c: 3388: if(handle==0xFF)
 23337  0071AC  0100               	movlb	0	; () banked
 23338  0071AE  298A               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 23339  0071B0  A4D8               	btfss	status,2,c
 23340  0071B2  D004               	goto	l11456
 23341                           
 23342                           ; BSR set to: 0
 23343                           ;miwi_mesh.c: 3389: {
 23344                           ;miwi_mesh.c: 3390: handle = findNextNetworkEntry();
 23345  0071B4  EC9E  F044         	call	_findNextNetworkEntry	;wreg free
 23346  0071B8  0100               	movlb	0	; () banked
 23347  0071BA  6F8A               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 23348  0071BC                     l11456:
 23349                           
 23350                           ; BSR set to: 0
 23351                           ;miwi_mesh.c: 3391: }
 23352                           ;miwi_mesh.c: 3393: if(handle != 0xFF)
 23353  0071BC  0100               	movlb	0	; () banked
 23354  0071BE  298A               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 23355  0071C0  B4D8               	btfsc	status,2,c
 23356  0071C2  D072               	goto	l11476
 23357                           
 23358                           ; BSR set to: 0
 23359                           ;miwi_mesh.c: 3394: {
 23360                           ;miwi_mesh.c: 3400: ConnectionTable[handle].status.Val = tempNodeStatus.Val;
 23361  0071C4  0100               	movlb	0	; () banked
 23362  0071C6  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23363  0071C8  0D09               	mullw	9
 23364  0071CA  0E08               	movlw	8
 23365  0071CC  26F3               	addwf	prodl,f,c
 23366  0071CE  0E00               	movlw	0
 23367  0071D0  22F4               	addwfc	prodh,f,c
 23368  0071D2  0E46               	movlw	low _ConnectionTable
 23369  0071D4  24F3               	addwf	prodl,w,c
 23370  0071D6  6ED9               	movwf	fsr2l,c
 23371  0071D8  0E02               	movlw	high _ConnectionTable
 23372  0071DA  20F4               	addwfc	prodh,w,c
 23373  0071DC  6EDA               	movwf	fsr2h,c
 23374  0071DE  C048  FFDF         	movff	_tempNodeStatus,indf2
 23375                           
 23376                           ; BSR set to: 0
 23377                           ;miwi_mesh.c: 3401: if(tempNodeStatus.bits.longAddressValid)
 23378  0071E2  A448               	btfss	_tempNodeStatus,2,c
 23379  0071E4  D034               	goto	l721
 23380                           
 23381                           ; BSR set to: 0
 23382                           ;miwi_mesh.c: 3402: {
 23383                           ;miwi_mesh.c: 3403: uint8_t i;
 23384                           ;miwi_mesh.c: 3404: for(i = 0; i < 4; i++)
 23385  0071E6  0E00               	movlw	0
 23386  0071E8  0100               	movlb	0	; () banked
 23387  0071EA  6F89               	movwf	AddNodeToNetworkTable@i& (0+255),b
 23388  0071EC                     l11464:
 23389                           
 23390                           ; BSR set to: 0
 23391  0071EC  0E03               	movlw	3
 23392  0071EE  0100               	movlb	0	; () banked
 23393  0071F0  6589               	cpfsgt	AddNodeToNetworkTable@i& (0+255),b
 23394  0071F2  D001               	goto	l11468
 23395  0071F4  D02C               	goto	l721
 23396  0071F6                     l11468:
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;miwi_mesh.c: 3405: {
 23400                           ;miwi_mesh.c: 3406: ConnectionTable[handle].Address[i] = tempLongAddress[i];
 23401  0071F6  0100               	movlb	0	; () banked
 23402  0071F8  5189               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 23403  0071FA  0D01               	mullw	1
 23404  0071FC  0E4E               	movlw	low _tempLongAddress
 23405  0071FE  24F3               	addwf	prodl,w,c
 23406  007200  6ED9               	movwf	fsr2l,c
 23407  007202  0E01               	movlw	high _tempLongAddress
 23408  007204  20F4               	addwfc	prodh,w,c
 23409  007206  6EDA               	movwf	fsr2h,c
 23410  007208  0100               	movlb	0	; () banked
 23411  00720A  5189               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 23412  00720C  0D01               	mullw	1
 23413  00720E  0E04               	movlw	4
 23414  007210  26F3               	addwf	prodl,f,c
 23415  007212  0E00               	movlw	0
 23416  007214  22F4               	addwfc	prodh,f,c
 23417  007216  0E46               	movlw	low _ConnectionTable
 23418  007218  0100               	movlb	0	; () banked
 23419  00721A  6F87               	movwf	??_AddNodeToNetworkTable& (0+255),b
 23420  00721C  0E02               	movlw	high _ConnectionTable
 23421  00721E  0100               	movlb	0	; () banked
 23422  007220  6F88               	movwf	(??_AddNodeToNetworkTable+1)& (0+255),b
 23423  007222  50F3               	movf	prodl,w,c
 23424  007224  0100               	movlb	0	; () banked
 23425  007226  2787               	addwf	??_AddNodeToNetworkTable& (0+255),f,b
 23426  007228  50F4               	movf	prodh,w,c
 23427  00722A  0100               	movlb	0	; () banked
 23428  00722C  2388               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23429  00722E  0100               	movlb	0	; () banked
 23430  007230  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23431  007232  0D09               	mullw	9
 23432  007234  50F3               	movf	prodl,w,c
 23433  007236  0100               	movlb	0	; () banked
 23434  007238  2587               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23435  00723A  6EE1               	movwf	fsr1l,c
 23436  00723C  50F4               	movf	prodh,w,c
 23437  00723E  0100               	movlb	0	; () banked
 23438  007240  2188               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23439  007242  6EE2               	movwf	fsr1h,c
 23440  007244  CFDF FFE7          	movff	indf2,indf1
 23441                           
 23442                           ; BSR set to: 0
 23443  007248  0100               	movlb	0	; () banked
 23444  00724A  2B89               	incf	AddNodeToNetworkTable@i& (0+255),f,b
 23445  00724C  D7CF               	goto	l11464
 23446  00724E                     l721:
 23447                           
 23448                           ; BSR set to: 0
 23449                           ;miwi_mesh.c: 3407: }
 23450                           ;miwi_mesh.c: 3408: }
 23451                           ;miwi_mesh.c: 3410: if(tempNodeStatus.bits.shortAddressValid)
 23452  00724E  A648               	btfss	_tempNodeStatus,3,c
 23453  007250  D011               	goto	l724
 23454                           
 23455                           ; BSR set to: 0
 23456                           ;miwi_mesh.c: 3411: {
 23457                           ;miwi_mesh.c: 3412: ConnectionTable[handle].AltAddress.Val = tempShortAddress.Val;
 23458  007252  0100               	movlb	0	; () banked
 23459  007254  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23460  007256  0D09               	mullw	9
 23461  007258  0E02               	movlw	2
 23462  00725A  26F3               	addwf	prodl,f,c
 23463  00725C  0E00               	movlw	0
 23464  00725E  22F4               	addwfc	prodh,f,c
 23465  007260  0E46               	movlw	low _ConnectionTable
 23466  007262  24F3               	addwf	prodl,w,c
 23467  007264  6ED9               	movwf	fsr2l,c
 23468  007266  0E02               	movlw	high _ConnectionTable
 23469  007268  20F4               	addwfc	prodh,w,c
 23470  00726A  6EDA               	movwf	fsr2h,c
 23471  00726C  C1D0  FFDE         	movff	_tempShortAddress,postinc2
 23472  007270  C1D1  FFDD         	movff	_tempShortAddress+1,postdec2
 23473  007274                     l724:
 23474                           
 23475                           ; BSR set to: 0
 23476                           ;miwi_mesh.c: 3413: }
 23477                           ;miwi_mesh.c: 3415: ConnectionTable[handle].PANID.Val = tempPANID.Val;
 23478  007274  0100               	movlb	0	; () banked
 23479  007276  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23480  007278  0D09               	mullw	9
 23481  00727A  0E46               	movlw	low _ConnectionTable
 23482  00727C  24F3               	addwf	prodl,w,c
 23483  00727E  6ED9               	movwf	fsr2l,c
 23484  007280  0E02               	movlw	high _ConnectionTable
 23485  007282  20F4               	addwfc	prodh,w,c
 23486  007284  6EDA               	movwf	fsr2h,c
 23487  007286  C15E  FFDE         	movff	_tempPANID,postinc2
 23488  00728A  C15F  FFDD         	movff	_tempPANID+1,postdec2
 23489                           
 23490                           ;miwi_mesh.c: 3417: IncomingFrameCounter[handle].Val = 0;
 23491  00728E  0100               	movlb	0	; () banked
 23492  007290  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23493  007292  0D04               	mullw	4
 23494  007294  0E00               	movlw	low _IncomingFrameCounter
 23495  007296  24F3               	addwf	prodl,w,c
 23496  007298  6ED9               	movwf	fsr2l,c
 23497  00729A  0E02               	movlw	high _IncomingFrameCounter
 23498  00729C  20F4               	addwfc	prodh,w,c
 23499  00729E  6EDA               	movwf	fsr2h,c
 23500  0072A0  6ADE               	clrf	postinc2,c
 23501  0072A2  6ADE               	clrf	postinc2,c
 23502  0072A4  6ADE               	clrf	postinc2,c
 23503  0072A6  6ADD               	clrf	postdec2,c
 23504  0072A8                     l11476:
 23505                           
 23506                           ; BSR set to: 0
 23507                           ;miwi_mesh.c: 3419: }
 23508                           ;miwi_mesh.c: 3421: return handle;
 23509  0072A8  0100               	movlb	0	; () banked
 23510  0072AA  518A               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23511  0072AC  0012               	return	
 23512  0072AE                     __end_of_AddNodeToNetworkTable:
 23513                           	opt stack 0
 23514                           tblptru	equ	0xFF8
 23515                           tblptrh	equ	0xFF7
 23516                           tblptrl	equ	0xFF6
 23517                           tablat	equ	0xFF5
 23518                           prodh	equ	0xFF4
 23519                           prodl	equ	0xFF3
 23520                           intcon	equ	0xFF2
 23521                           intcon2	equ	0xFF1
 23522                           intcon3	equ	0xFF0
 23523                           indf0	equ	0xFEF
 23524                           postinc0	equ	0xFEE
 23525                           plusw0	equ	0xFEB
 23526                           fsr0h	equ	0xFEA
 23527                           fsr0l	equ	0xFE9
 23528                           wreg	equ	0xFE8
 23529                           indf1	equ	0xFE7
 23530                           postinc1	equ	0xFE6
 23531                           postdec1	equ	0xFE5
 23532                           fsr1h	equ	0xFE2
 23533                           fsr1l	equ	0xFE1
 23534                           indf2	equ	0xFDF
 23535                           postinc2	equ	0xFDE
 23536                           postdec2	equ	0xFDD
 23537                           plusw2	equ	0xFDB
 23538                           fsr2h	equ	0xFDA
 23539                           fsr2l	equ	0xFD9
 23540                           status	equ	0xFD8
 23541                           
 23542 ;; *************** function _findNextNetworkEntry *****************
 23543 ;; Defined at:
 23544 ;;		line 2583 in file "src/miwi/miwi_mesh.c"
 23545 ;; Parameters:    Size  Location     Type
 23546 ;;		None
 23547 ;; Auto vars:     Size  Location     Type
 23548 ;;  i               1   33[BANK0 ] unsigned char 
 23549 ;; Return value:  Size  Location     Type
 23550 ;;                  1    wreg      unsigned char 
 23551 ;; Registers used:
 23552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23553 ;; Tracked objects:
 23554 ;;		On entry : 0/0
 23555 ;;		On exit  : 0/0
 23556 ;;		Unchanged: 0/0
 23557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23561 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23562 ;;Total ram usage:        1 bytes
 23563 ;; Hardware stack levels used:    1
 23564 ;; Hardware stack levels required when called:    7
 23565 ;; This function calls:
 23566 ;;		Nothing
 23567 ;; This function is called by:
 23568 ;;		_AddNodeToNetworkTable
 23569 ;;		_MiApp_EstablishConnection
 23570 ;; This function uses a non-reentrant model
 23571 ;;
 23572                           
 23573                           	psect	text74
 23574  00893C                     __ptext74:
 23575                           	opt stack 0
 23576  00893C                     _findNextNetworkEntry:
 23577                           	opt stack 17
 23578                           
 23579                           ;miwi_mesh.c: 2585: uint8_t i;
 23580                           ;miwi_mesh.c: 2587: for(i=0;i<10;i++)
 23581                           
 23582                           ; BSR set to: 0
 23583                           ;incstack = 0
 23584  00893C  0E00               	movlw	0
 23585  00893E  0100               	movlb	0	; () banked
 23586  008940  6F81               	movwf	findNextNetworkEntry@i& (0+255),b
 23587  008942                     l11200:
 23588                           
 23589                           ; BSR set to: 0
 23590  008942  0E09               	movlw	9
 23591  008944  0100               	movlb	0	; () banked
 23592  008946  6581               	cpfsgt	findNextNetworkEntry@i& (0+255),b
 23593  008948  D001               	goto	l11204
 23594  00894A  D016               	goto	l11214
 23595  00894C                     l11204:
 23596                           
 23597                           ; BSR set to: 0
 23598                           ;miwi_mesh.c: 2588: {
 23599                           ;miwi_mesh.c: 2589: if(ConnectionTable[i].status.bits.isValid == 0)
 23600  00894C  0100               	movlb	0	; () banked
 23601  00894E  5181               	movf	findNextNetworkEntry@i& (0+255),w,b
 23602  008950  0D09               	mullw	9
 23603  008952  0E08               	movlw	8
 23604  008954  26F3               	addwf	prodl,f,c
 23605  008956  0E00               	movlw	0
 23606  008958  22F4               	addwfc	prodh,f,c
 23607  00895A  0E46               	movlw	low _ConnectionTable
 23608  00895C  24F3               	addwf	prodl,w,c
 23609  00895E  6ED9               	movwf	fsr2l,c
 23610  008960  0E02               	movlw	high _ConnectionTable
 23611  008962  20F4               	addwfc	prodh,w,c
 23612  008964  6EDA               	movwf	fsr2h,c
 23613  008966  0102               	movlb	2	; () banked
 23614  008968  BEDF               	btfsc	indf2,7,c
 23615  00896A  D003               	goto	l11210
 23616                           
 23617                           ; BSR set to: 2
 23618                           ;miwi_mesh.c: 2590: {
 23619                           ;miwi_mesh.c: 2591: return i;
 23620  00896C  0100               	movlb	0	; () banked
 23621  00896E  5181               	movf	findNextNetworkEntry@i& (0+255),w,b
 23622                           
 23623                           ; BSR set to: 0
 23624  008970  0012               	return	
 23625  008972                     l11210:
 23626  008972  0100               	movlb	0	; () banked
 23627  008974  2B81               	incf	findNextNetworkEntry@i& (0+255),f,b
 23628  008976  D7E5               	goto	l11200
 23629  008978                     l11214:
 23630                           
 23631                           ; BSR set to: 0
 23632                           ;miwi_mesh.c: 2592: }
 23633                           ;miwi_mesh.c: 2593: }
 23634                           ;miwi_mesh.c: 2594: return 0xFF;
 23635  008978  0EFF               	movlw	255
 23636  00897A  0012               	return	
 23637  00897C                     __end_of_findNextNetworkEntry:
 23638                           	opt stack 0
 23639                           tblptru	equ	0xFF8
 23640                           tblptrh	equ	0xFF7
 23641                           tblptrl	equ	0xFF6
 23642                           tablat	equ	0xFF5
 23643                           prodh	equ	0xFF4
 23644                           prodl	equ	0xFF3
 23645                           intcon	equ	0xFF2
 23646                           intcon2	equ	0xFF1
 23647                           intcon3	equ	0xFF0
 23648                           indf0	equ	0xFEF
 23649                           postinc0	equ	0xFEE
 23650                           plusw0	equ	0xFEB
 23651                           fsr0h	equ	0xFEA
 23652                           fsr0l	equ	0xFE9
 23653                           wreg	equ	0xFE8
 23654                           indf1	equ	0xFE7
 23655                           postinc1	equ	0xFE6
 23656                           postdec1	equ	0xFE5
 23657                           fsr1h	equ	0xFE2
 23658                           fsr1l	equ	0xFE1
 23659                           indf2	equ	0xFDF
 23660                           postinc2	equ	0xFDE
 23661                           postdec2	equ	0xFDD
 23662                           plusw2	equ	0xFDB
 23663                           fsr2h	equ	0xFDA
 23664                           fsr2l	equ	0xFD9
 23665                           status	equ	0xFD8
 23666                           
 23667 ;; *************** function _SearchForShortAddress *****************
 23668 ;; Defined at:
 23669 ;;		line 3245 in file "src/miwi/miwi_mesh.c"
 23670 ;; Parameters:    Size  Location     Type
 23671 ;;		None
 23672 ;; Auto vars:     Size  Location     Type
 23673 ;;  i               1   35[BANK0 ] unsigned char 
 23674 ;; Return value:  Size  Location     Type
 23675 ;;                  1    wreg      unsigned char 
 23676 ;; Registers used:
 23677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23678 ;; Tracked objects:
 23679 ;;		On entry : 0/0
 23680 ;;		On exit  : 0/0
 23681 ;;		Unchanged: 0/0
 23682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23686 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23687 ;;Total ram usage:        3 bytes
 23688 ;; Hardware stack levels used:    1
 23689 ;; Hardware stack levels required when called:    7
 23690 ;; This function calls:
 23691 ;;		Nothing
 23692 ;; This function is called by:
 23693 ;;		_MiWiTasks
 23694 ;;		_AddNodeToNetworkTable
 23695 ;; This function uses a non-reentrant model
 23696 ;;
 23697                           
 23698                           	psect	text75
 23699  0080BE                     __ptext75:
 23700                           	opt stack 0
 23701  0080BE                     _SearchForShortAddress:
 23702                           	opt stack 18
 23703                           
 23704                           ;miwi_mesh.c: 3247: uint8_t i;
 23705                           ;miwi_mesh.c: 3249: for(i=0;i<10;i++)
 23706                           
 23707                           ; BSR set to: 0
 23708                           ;incstack = 0
 23709  0080BE  0E00               	movlw	0
 23710  0080C0  0100               	movlb	0	; () banked
 23711  0080C2  6F83               	movwf	SearchForShortAddress@i& (0+255),b
 23712  0080C4                     l11140:
 23713                           
 23714                           ; BSR set to: 0
 23715  0080C4  0E09               	movlw	9
 23716  0080C6  0100               	movlb	0	; () banked
 23717  0080C8  6583               	cpfsgt	SearchForShortAddress@i& (0+255),b
 23718  0080CA  D001               	goto	l11144
 23719  0080CC  D03C               	goto	l11158
 23720  0080CE                     l11144:
 23721                           
 23722                           ; BSR set to: 0
 23723                           ;miwi_mesh.c: 3250: {
 23724                           ;miwi_mesh.c: 3251: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.shortAddressValid)
 23725  0080CE  0100               	movlb	0	; () banked
 23726  0080D0  5183               	movf	SearchForShortAddress@i& (0+255),w,b
 23727  0080D2  0D09               	mullw	9
 23728  0080D4  0E08               	movlw	8
 23729  0080D6  26F3               	addwf	prodl,f,c
 23730  0080D8  0E00               	movlw	0
 23731  0080DA  22F4               	addwfc	prodh,f,c
 23732  0080DC  0E46               	movlw	low _ConnectionTable
 23733  0080DE  24F3               	addwf	prodl,w,c
 23734  0080E0  6ED9               	movwf	fsr2l,c
 23735  0080E2  0E02               	movlw	high _ConnectionTable
 23736  0080E4  20F4               	addwfc	prodh,w,c
 23737  0080E6  6EDA               	movwf	fsr2h,c
 23738  0080E8  0102               	movlb	2	; () banked
 23739  0080EA  AEDF               	btfss	indf2,7,c
 23740  0080EC  D029               	goto	l11154
 23741                           
 23742                           ; BSR set to: 2
 23743  0080EE  0100               	movlb	0	; () banked
 23744  0080F0  5183               	movf	SearchForShortAddress@i& (0+255),w,b
 23745  0080F2  0D09               	mullw	9
 23746  0080F4  0E08               	movlw	8
 23747  0080F6  26F3               	addwf	prodl,f,c
 23748  0080F8  0E00               	movlw	0
 23749  0080FA  22F4               	addwfc	prodh,f,c
 23750  0080FC  0E46               	movlw	low _ConnectionTable
 23751  0080FE  24F3               	addwf	prodl,w,c
 23752  008100  6ED9               	movwf	fsr2l,c
 23753  008102  0E02               	movlw	high _ConnectionTable
 23754  008104  20F4               	addwfc	prodh,w,c
 23755  008106  6EDA               	movwf	fsr2h,c
 23756  008108  0102               	movlb	2	; () banked
 23757  00810A  A6DF               	btfss	indf2,3,c
 23758  00810C  D019               	goto	l11154
 23759                           
 23760                           ; BSR set to: 2
 23761                           ;miwi_mesh.c: 3252: {
 23762                           ;miwi_mesh.c: 3253: if(ConnectionTable[i].AltAddress.Val == tempShortAddress.Val)
 23763  00810E  0100               	movlb	0	; () banked
 23764  008110  5183               	movf	SearchForShortAddress@i& (0+255),w,b
 23765  008112  0D09               	mullw	9
 23766  008114  0E02               	movlw	2
 23767  008116  26F3               	addwf	prodl,f,c
 23768  008118  0E00               	movlw	0
 23769  00811A  22F4               	addwfc	prodh,f,c
 23770  00811C  0E46               	movlw	low _ConnectionTable
 23771  00811E  24F3               	addwf	prodl,w,c
 23772  008120  6ED9               	movwf	fsr2l,c
 23773  008122  0E02               	movlw	high _ConnectionTable
 23774  008124  20F4               	addwfc	prodh,w,c
 23775  008126  6EDA               	movwf	fsr2h,c
 23776  008128  0101               	movlb	1	; () banked
 23777  00812A  51D0               	movf	_tempShortAddress& (0+255),w,b
 23778  00812C  18DE               	xorwf	postinc2,w,c
 23779  00812E  E108               	bnz	l11154
 23780  008130  0101               	movlb	1	; () banked
 23781  008132  51D1               	movf	(_tempShortAddress+1)& (0+255),w,b
 23782  008134  18DE               	xorwf	postinc2,w,c
 23783  008136  A4D8               	btfss	status,2,c
 23784  008138  D003               	goto	l11154
 23785                           
 23786                           ; BSR set to: 1
 23787                           ;miwi_mesh.c: 3254: {
 23788                           ;miwi_mesh.c: 3255: return i;
 23789  00813A  0100               	movlb	0	; () banked
 23790  00813C  5183               	movf	SearchForShortAddress@i& (0+255),w,b
 23791                           
 23792                           ; BSR set to: 0
 23793  00813E  0012               	return	
 23794  008140                     l11154:
 23795  008140  0100               	movlb	0	; () banked
 23796  008142  2B83               	incf	SearchForShortAddress@i& (0+255),f,b
 23797  008144  D7BF               	goto	l11140
 23798  008146                     l11158:
 23799                           
 23800                           ; BSR set to: 0
 23801                           ;miwi_mesh.c: 3256: }
 23802                           ;miwi_mesh.c: 3257: }
 23803                           ;miwi_mesh.c: 3258: }
 23804                           ;miwi_mesh.c: 3259: return 0xFF;
 23805  008146  0EFF               	movlw	255
 23806  008148  0012               	return	
 23807  00814A                     __end_of_SearchForShortAddress:
 23808                           	opt stack 0
 23809                           tblptru	equ	0xFF8
 23810                           tblptrh	equ	0xFF7
 23811                           tblptrl	equ	0xFF6
 23812                           tablat	equ	0xFF5
 23813                           prodh	equ	0xFF4
 23814                           prodl	equ	0xFF3
 23815                           intcon	equ	0xFF2
 23816                           intcon2	equ	0xFF1
 23817                           intcon3	equ	0xFF0
 23818                           indf0	equ	0xFEF
 23819                           postinc0	equ	0xFEE
 23820                           plusw0	equ	0xFEB
 23821                           fsr0h	equ	0xFEA
 23822                           fsr0l	equ	0xFE9
 23823                           wreg	equ	0xFE8
 23824                           indf1	equ	0xFE7
 23825                           postinc1	equ	0xFE6
 23826                           postdec1	equ	0xFE5
 23827                           fsr1h	equ	0xFE2
 23828                           fsr1l	equ	0xFE1
 23829                           indf2	equ	0xFDF
 23830                           postinc2	equ	0xFDE
 23831                           postdec2	equ	0xFDD
 23832                           plusw2	equ	0xFDB
 23833                           fsr2h	equ	0xFDA
 23834                           fsr2l	equ	0xFD9
 23835                           status	equ	0xFD8
 23836                           
 23837 ;; *************** function _SearchForLongAddress *****************
 23838 ;; Defined at:
 23839 ;;		line 3326 in file "src/miwi/miwi_mesh.c"
 23840 ;; Parameters:    Size  Location     Type
 23841 ;;		None
 23842 ;; Auto vars:     Size  Location     Type
 23843 ;;  i               1   38[BANK0 ] unsigned char 
 23844 ;;  j               1   37[BANK0 ] unsigned char 
 23845 ;; Return value:  Size  Location     Type
 23846 ;;                  1    wreg      unsigned char 
 23847 ;; Registers used:
 23848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23849 ;; Tracked objects:
 23850 ;;		On entry : 0/0
 23851 ;;		On exit  : 0/0
 23852 ;;		Unchanged: 0/0
 23853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23855 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23856 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23857 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23858 ;;Total ram usage:        6 bytes
 23859 ;; Hardware stack levels used:    1
 23860 ;; Hardware stack levels required when called:    7
 23861 ;; This function calls:
 23862 ;;		Nothing
 23863 ;; This function is called by:
 23864 ;;		_MiWiTasks
 23865 ;;		_AddNodeToNetworkTable
 23866 ;;		_MiApp_EstablishConnection
 23867 ;;		_MiApp_UnicastAddress
 23868 ;; This function uses a non-reentrant model
 23869 ;;
 23870                           
 23871                           	psect	text76
 23872  007898                     __ptext76:
 23873                           	opt stack 0
 23874  007898                     _SearchForLongAddress:
 23875                           	opt stack 20
 23876                           
 23877                           ;miwi_mesh.c: 3328: uint8_t i,j;
 23878                           ;miwi_mesh.c: 3330: for(i=0;i<10;i++)
 23879                           
 23880                           ; BSR set to: 0
 23881                           ;incstack = 0
 23882  007898  0E00               	movlw	0
 23883  00789A  0100               	movlb	0	; () banked
 23884  00789C  6F86               	movwf	SearchForLongAddress@i& (0+255),b
 23885  00789E                     l11164:
 23886                           
 23887                           ; BSR set to: 0
 23888  00789E  0E09               	movlw	9
 23889  0078A0  0100               	movlb	0	; () banked
 23890  0078A2  6586               	cpfsgt	SearchForLongAddress@i& (0+255),b
 23891  0078A4  D001               	goto	l11168
 23892  0078A6  D05C               	goto	l11194
 23893  0078A8                     l11168:
 23894                           
 23895                           ; BSR set to: 0
 23896                           ;miwi_mesh.c: 3331: {
 23897                           ;miwi_mesh.c: 3332: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.longAddressValid)
 23898  0078A8  0100               	movlb	0	; () banked
 23899  0078AA  5186               	movf	SearchForLongAddress@i& (0+255),w,b
 23900  0078AC  0D09               	mullw	9
 23901  0078AE  0E08               	movlw	8
 23902  0078B0  26F3               	addwf	prodl,f,c
 23903  0078B2  0E00               	movlw	0
 23904  0078B4  22F4               	addwfc	prodh,f,c
 23905  0078B6  0E46               	movlw	low _ConnectionTable
 23906  0078B8  24F3               	addwf	prodl,w,c
 23907  0078BA  6ED9               	movwf	fsr2l,c
 23908  0078BC  0E02               	movlw	high _ConnectionTable
 23909  0078BE  20F4               	addwfc	prodh,w,c
 23910  0078C0  6EDA               	movwf	fsr2h,c
 23911  0078C2  0102               	movlb	2	; () banked
 23912  0078C4  AEDF               	btfss	indf2,7,c
 23913  0078C6  D049               	goto	l11190
 23914                           
 23915                           ; BSR set to: 2
 23916  0078C8  0100               	movlb	0	; () banked
 23917  0078CA  5186               	movf	SearchForLongAddress@i& (0+255),w,b
 23918  0078CC  0D09               	mullw	9
 23919  0078CE  0E08               	movlw	8
 23920  0078D0  26F3               	addwf	prodl,f,c
 23921  0078D2  0E00               	movlw	0
 23922  0078D4  22F4               	addwfc	prodh,f,c
 23923  0078D6  0E46               	movlw	low _ConnectionTable
 23924  0078D8  24F3               	addwf	prodl,w,c
 23925  0078DA  6ED9               	movwf	fsr2l,c
 23926  0078DC  0E02               	movlw	high _ConnectionTable
 23927  0078DE  20F4               	addwfc	prodh,w,c
 23928  0078E0  6EDA               	movwf	fsr2h,c
 23929  0078E2  0102               	movlb	2	; () banked
 23930  0078E4  A4DF               	btfss	indf2,2,c
 23931  0078E6  D039               	goto	l11190
 23932                           
 23933                           ; BSR set to: 2
 23934                           ;miwi_mesh.c: 3333: {
 23935                           ;miwi_mesh.c: 3334: for(j=0;j<4;j++)
 23936  0078E8  0E00               	movlw	0
 23937  0078EA  0100               	movlb	0	; () banked
 23938  0078EC  6F85               	movwf	SearchForLongAddress@j& (0+255),b
 23939  0078EE                     l11174:
 23940                           
 23941                           ; BSR set to: 0
 23942  0078EE  0E03               	movlw	3
 23943  0078F0  0100               	movlb	0	; () banked
 23944  0078F2  6585               	cpfsgt	SearchForLongAddress@j& (0+255),b
 23945  0078F4  D001               	goto	l11178
 23946  0078F6  D02E               	goto	l11186
 23947  0078F8                     l11178:
 23948                           
 23949                           ; BSR set to: 0
 23950                           ;miwi_mesh.c: 3335: {
 23951                           ;miwi_mesh.c: 3336: if(ConnectionTable[i].Address[j] != tempLongAddress[j])
 23952  0078F8  0100               	movlb	0	; () banked
 23953  0078FA  5185               	movf	SearchForLongAddress@j& (0+255),w,b
 23954  0078FC  0D01               	mullw	1
 23955  0078FE  0E4E               	movlw	low _tempLongAddress
 23956  007900  24F3               	addwf	prodl,w,c
 23957  007902  6ED9               	movwf	fsr2l,c
 23958  007904  0E01               	movlw	high _tempLongAddress
 23959  007906  20F4               	addwfc	prodh,w,c
 23960  007908  6EDA               	movwf	fsr2h,c
 23961  00790A  0100               	movlb	0	; () banked
 23962  00790C  5185               	movf	SearchForLongAddress@j& (0+255),w,b
 23963  00790E  0D01               	mullw	1
 23964  007910  0E04               	movlw	4
 23965  007912  26F3               	addwf	prodl,f,c
 23966  007914  0E00               	movlw	0
 23967  007916  22F4               	addwfc	prodh,f,c
 23968  007918  0E46               	movlw	low _ConnectionTable
 23969  00791A  0100               	movlb	0	; () banked
 23970  00791C  6F82               	movwf	(??_SearchForLongAddress+1)& (0+255),b
 23971  00791E  0E02               	movlw	high _ConnectionTable
 23972  007920  0100               	movlb	0	; () banked
 23973  007922  6F83               	movwf	(??_SearchForLongAddress+2)& (0+255),b
 23974  007924  50F3               	movf	prodl,w,c
 23975  007926  0100               	movlb	0	; () banked
 23976  007928  2782               	addwf	(??_SearchForLongAddress+1)& (0+255),f,b
 23977  00792A  50F4               	movf	prodh,w,c
 23978  00792C  0100               	movlb	0	; () banked
 23979  00792E  2383               	addwfc	(??_SearchForLongAddress+2)& (0+255),f,b
 23980  007930  0100               	movlb	0	; () banked
 23981  007932  5186               	movf	SearchForLongAddress@i& (0+255),w,b
 23982  007934  0D09               	mullw	9
 23983  007936  50F3               	movf	prodl,w,c
 23984  007938  0100               	movlb	0	; () banked
 23985  00793A  2582               	addwf	(??_SearchForLongAddress+1)& (0+255),w,b
 23986  00793C  6EE1               	movwf	fsr1l,c
 23987  00793E  50F4               	movf	prodh,w,c
 23988  007940  0100               	movlb	0	; () banked
 23989  007942  2183               	addwfc	(??_SearchForLongAddress+2)& (0+255),w,b
 23990  007944  6EE2               	movwf	fsr1h,c
 23991  007946  50DE               	movf	postinc2,w,c
 23992  007948  18E6               	xorwf	postinc1,w,c
 23993  00794A  A4D8               	btfss	status,2,c
 23994  00794C  D006               	goto	l11190
 23995                           
 23996                           ; BSR set to: 0
 23997                           
 23998                           ; BSR set to: 0
 23999                           
 24000                           ; BSR set to: 0
 24001                           ;miwi_mesh.c: 3337: {
 24002                           ;miwi_mesh.c: 3338: goto EndOfSearchLoop;
 24003  00794E  0100               	movlb	0	; () banked
 24004  007950  2B85               	incf	SearchForLongAddress@j& (0+255),f,b
 24005  007952  D7CD               	goto	l11174
 24006  007954                     l11186:
 24007                           
 24008                           ; BSR set to: 0
 24009                           ;miwi_mesh.c: 3339: }
 24010                           ;miwi_mesh.c: 3340: }
 24011                           ;miwi_mesh.c: 3341: return i;
 24012  007954  0100               	movlb	0	; () banked
 24013  007956  5186               	movf	SearchForLongAddress@i& (0+255),w,b
 24014                           
 24015                           ; BSR set to: 0
 24016  007958  0012               	return	
 24017  00795A                     l11190:
 24018                           
 24019                           ;miwi_mesh.c: 3344: ;
 24020  00795A  0100               	movlb	0	; () banked
 24021  00795C  2B86               	incf	SearchForLongAddress@i& (0+255),f,b
 24022  00795E  D79F               	goto	l11164
 24023  007960                     l11194:
 24024                           
 24025                           ; BSR set to: 0
 24026                           ;miwi_mesh.c: 3345: }
 24027                           ;miwi_mesh.c: 3346: return 0xFF;
 24028  007960  0EFF               	movlw	255
 24029  007962  0012               	return	
 24030  007964                     __end_of_SearchForLongAddress:
 24031                           	opt stack 0
 24032                           tblptru	equ	0xFF8
 24033                           tblptrh	equ	0xFF7
 24034                           tblptrl	equ	0xFF6
 24035                           tablat	equ	0xFF5
 24036                           prodh	equ	0xFF4
 24037                           prodl	equ	0xFF3
 24038                           intcon	equ	0xFF2
 24039                           intcon2	equ	0xFF1
 24040                           intcon3	equ	0xFF0
 24041                           indf0	equ	0xFEF
 24042                           postinc0	equ	0xFEE
 24043                           plusw0	equ	0xFEB
 24044                           fsr0h	equ	0xFEA
 24045                           fsr0l	equ	0xFE9
 24046                           wreg	equ	0xFE8
 24047                           indf1	equ	0xFE7
 24048                           postinc1	equ	0xFE6
 24049                           postdec1	equ	0xFE5
 24050                           fsr1h	equ	0xFE2
 24051                           fsr1l	equ	0xFE1
 24052                           indf2	equ	0xFDF
 24053                           postinc2	equ	0xFDE
 24054                           postdec2	equ	0xFDD
 24055                           plusw2	equ	0xFDB
 24056                           fsr2h	equ	0xFDA
 24057                           fsr2l	equ	0xFD9
 24058                           status	equ	0xFD8
 24059                           
 24060 ;; *************** function _MiApp_DiscardMessage *****************
 24061 ;; Defined at:
 24062 ;;		line 4242 in file "src/miwi/miwi_mesh.c"
 24063 ;; Parameters:    Size  Location     Type
 24064 ;;		None
 24065 ;; Auto vars:     Size  Location     Type
 24066 ;;		None
 24067 ;; Return value:  Size  Location     Type
 24068 ;;		None               void
 24069 ;; Registers used:
 24070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24071 ;; Tracked objects:
 24072 ;;		On entry : 0/0
 24073 ;;		On exit  : 0/0
 24074 ;;		Unchanged: 0/0
 24075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24080 ;;Total ram usage:        0 bytes
 24081 ;; Hardware stack levels used:    1
 24082 ;; Hardware stack levels required when called:    8
 24083 ;; This function calls:
 24084 ;;		_MiMAC_DiscardPacket
 24085 ;; This function is called by:
 24086 ;;		_MiApp_SearchConnection
 24087 ;;		_MiApp_EstablishConnection
 24088 ;;		_MiApp_UnicastAddress
 24089 ;;		_main
 24090 ;;		_process_update_answer
 24091 ;;		_do_NETWORK_REGISTER
 24092 ;;		_do_POWER_TEST
 24093 ;;		_do_UPDATE
 24094 ;;		_MiApp_UnicastConnection
 24095 ;;		_do_PING
 24096 ;; This function uses a non-reentrant model
 24097 ;;
 24098                           
 24099                           	psect	text77
 24100  008C2A                     __ptext77:
 24101                           	opt stack 0
 24102  008C2A                     _MiApp_DiscardMessage:
 24103                           	opt stack 19
 24104                           
 24105                           ;miwi_mesh.c: 4244: MiWiStateMachine.bits.RxHasUserData = 0;
 24106                           
 24107                           ; BSR set to: 0
 24108                           ;incstack = 0
 24109  008C2A  0100               	movlb	0	; () banked
 24110  008C2C  95D4               	bcf	_MiWiStateMachine& (0+255),2,b
 24111                           
 24112                           ; BSR set to: 0
 24113                           ;miwi_mesh.c: 4245: MiMAC_DiscardPacket();
 24114  008C2E  ECAE  F045         	call	_MiMAC_DiscardPacket	;wreg free
 24115  008C32  0012               	return		;funcret
 24116  008C34                     __end_of_MiApp_DiscardMessage:
 24117                           	opt stack 0
 24118                           tblptru	equ	0xFF8
 24119                           tblptrh	equ	0xFF7
 24120                           tblptrl	equ	0xFF6
 24121                           tablat	equ	0xFF5
 24122                           prodh	equ	0xFF4
 24123                           prodl	equ	0xFF3
 24124                           intcon	equ	0xFF2
 24125                           intcon2	equ	0xFF1
 24126                           intcon3	equ	0xFF0
 24127                           indf0	equ	0xFEF
 24128                           postinc0	equ	0xFEE
 24129                           plusw0	equ	0xFEB
 24130                           fsr0h	equ	0xFEA
 24131                           fsr0l	equ	0xFE9
 24132                           wreg	equ	0xFE8
 24133                           indf1	equ	0xFE7
 24134                           postinc1	equ	0xFE6
 24135                           postdec1	equ	0xFE5
 24136                           fsr1h	equ	0xFE2
 24137                           fsr1l	equ	0xFE1
 24138                           indf2	equ	0xFDF
 24139                           postinc2	equ	0xFDE
 24140                           postdec2	equ	0xFDD
 24141                           plusw2	equ	0xFDB
 24142                           fsr2h	equ	0xFDA
 24143                           fsr2l	equ	0xFD9
 24144                           status	equ	0xFD8
 24145                           
 24146 ;; *************** function _MiMAC_DiscardPacket *****************
 24147 ;; Defined at:
 24148 ;;		line 1057 in file "src/miwi/drv_mrf_miwi_89xa.c"
 24149 ;; Parameters:    Size  Location     Type
 24150 ;;		None
 24151 ;; Auto vars:     Size  Location     Type
 24152 ;;		None
 24153 ;; Return value:  Size  Location     Type
 24154 ;;		None               void
 24155 ;; Registers used:
 24156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24157 ;; Tracked objects:
 24158 ;;		On entry : 0/0
 24159 ;;		On exit  : 0/0
 24160 ;;		Unchanged: 0/0
 24161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24166 ;;Total ram usage:        0 bytes
 24167 ;; Hardware stack levels used:    1
 24168 ;; Hardware stack levels required when called:    7
 24169 ;; This function calls:
 24170 ;;		Nothing
 24171 ;; This function is called by:
 24172 ;;		_MiWiTasks
 24173 ;;		_MiApp_DiscardMessage
 24174 ;; This function uses a non-reentrant model
 24175 ;;
 24176                           
 24177                           	psect	text78
 24178  008B5C                     __ptext78:
 24179                           	opt stack 0
 24180  008B5C                     _MiMAC_DiscardPacket:
 24181                           	opt stack 18
 24182                           
 24183                           ;drv_mrf_miwi_89xa.c: 1059: if( ReceivedBankIndex < 2 )
 24184                           
 24185                           ;incstack = 0
 24186  008B5C  0E02               	movlw	2
 24187  008B5E  6045               	cpfslt	_ReceivedBankIndex,c
 24188  008B60  0012               	return	
 24189                           
 24190                           ;drv_mrf_miwi_89xa.c: 1060: {
 24191                           ;drv_mrf_miwi_89xa.c: 1061: RxPacket[ReceivedBankIndex].flags.Val = 0;
 24192  008B62  5045               	movf	_ReceivedBankIndex,w,c
 24193  008B64  0D42               	mullw	66
 24194  008B66  0E50               	movlw	low _RxPacket
 24195  008B68  24F3               	addwf	prodl,w,c
 24196  008B6A  6ED9               	movwf	fsr2l,c
 24197  008B6C  0E03               	movlw	high _RxPacket
 24198  008B6E  20F4               	addwfc	prodh,w,c
 24199  008B70  6EDA               	movwf	fsr2h,c
 24200  008B72  0E00               	movlw	0
 24201  008B74  6EDF               	movwf	indf2,c
 24202                           
 24203                           ;drv_mrf_miwi_89xa.c: 1062: ReceivedBankIndex = 0xFF;
 24204  008B76  6845               	setf	_ReceivedBankIndex,c
 24205  008B78  0012               	return	
 24206  008B7A                     __end_of_MiMAC_DiscardPacket:
 24207                           	opt stack 0
 24208                           tblptru	equ	0xFF8
 24209                           tblptrh	equ	0xFF7
 24210                           tblptrl	equ	0xFF6
 24211                           tablat	equ	0xFF5
 24212                           prodh	equ	0xFF4
 24213                           prodl	equ	0xFF3
 24214                           intcon	equ	0xFF2
 24215                           intcon2	equ	0xFF1
 24216                           intcon3	equ	0xFF0
 24217                           indf0	equ	0xFEF
 24218                           postinc0	equ	0xFEE
 24219                           plusw0	equ	0xFEB
 24220                           fsr0h	equ	0xFEA
 24221                           fsr0l	equ	0xFE9
 24222                           wreg	equ	0xFE8
 24223                           indf1	equ	0xFE7
 24224                           postinc1	equ	0xFE6
 24225                           postdec1	equ	0xFE5
 24226                           fsr1h	equ	0xFE2
 24227                           fsr1l	equ	0xFE1
 24228                           indf2	equ	0xFDF
 24229                           postinc2	equ	0xFDE
 24230                           postdec2	equ	0xFDD
 24231                           plusw2	equ	0xFDB
 24232                           fsr2h	equ	0xFDA
 24233                           fsr2l	equ	0xFD9
 24234                           status	equ	0xFD8
 24235                           
 24236 ;; *************** function _MiApp_ConnectionMode *****************
 24237 ;; Defined at:
 24238 ;;		line 3921 in file "src/miwi/miwi_mesh.c"
 24239 ;; Parameters:    Size  Location     Type
 24240 ;;  Mode            1    wreg     unsigned char 
 24241 ;; Auto vars:     Size  Location     Type
 24242 ;;  Mode            1   34[BANK0 ] unsigned char 
 24243 ;; Return value:  Size  Location     Type
 24244 ;;		None               void
 24245 ;; Registers used:
 24246 ;;		wreg, status,2, status,0
 24247 ;; Tracked objects:
 24248 ;;		On entry : 0/0
 24249 ;;		On exit  : 0/0
 24250 ;;		Unchanged: 0/0
 24251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24254 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24255 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24256 ;;Total ram usage:        2 bytes
 24257 ;; Hardware stack levels used:    1
 24258 ;; Hardware stack levels required when called:    7
 24259 ;; This function calls:
 24260 ;;		Nothing
 24261 ;; This function is called by:
 24262 ;;		_main
 24263 ;; This function uses a non-reentrant model
 24264 ;;
 24265                           
 24266                           	psect	text79
 24267  008AC8                     __ptext79:
 24268                           	opt stack 0
 24269  008AC8                     _MiApp_ConnectionMode:
 24270                           	opt stack 23
 24271                           
 24272                           ;incstack = 0
 24273                           ;MiApp_ConnectionMode@Mode stored from wreg
 24274  008AC8  0100               	movlb	0	; () banked
 24275  008ACA  6F82               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 24276                           
 24277                           ;miwi_mesh.c: 3923: if( Mode > 3 )
 24278  008ACC  0E03               	movlw	3
 24279  008ACE  0100               	movlb	0	; () banked
 24280  008AD0  6582               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 24281  008AD2  D001               	goto	l755
 24282  008AD4  0012               	return	
 24283  008AD6                     l755:
 24284                           
 24285                           ; BSR set to: 0
 24286                           ;miwi_mesh.c: 3926: }
 24287                           ;miwi_mesh.c: 3927: ConnMode = Mode;
 24288  008AD6  C082  F03F         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 24289                           
 24290                           ; BSR set to: 0
 24291                           ;miwi_mesh.c: 3928: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 24292  008ADA  C03F  F081         	movff	_ConnMode,??_MiApp_ConnectionMode
 24293  008ADE  0100               	movlb	0	; () banked
 24294  008AE0  3B81               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 24295  008AE2  0101               	movlb	1	; () banked
 24296  008AE4  5164               	movf	_MiWiCapacityInfo& (0+255),w,b
 24297  008AE6  0100               	movlb	0	; () banked
 24298  008AE8  1981               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 24299  008AEA  0BCF               	andlw	-49
 24300  008AEC  1981               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 24301  008AEE  0101               	movlb	1	; () banked
 24302  008AF0  6F64               	movwf	_MiWiCapacityInfo& (0+255),b
 24303  008AF2  0012               	return		;funcret
 24304  008AF4                     __end_of_MiApp_ConnectionMode:
 24305                           	opt stack 0
 24306                           tblptru	equ	0xFF8
 24307                           tblptrh	equ	0xFF7
 24308                           tblptrl	equ	0xFF6
 24309                           tablat	equ	0xFF5
 24310                           prodh	equ	0xFF4
 24311                           prodl	equ	0xFF3
 24312                           intcon	equ	0xFF2
 24313                           intcon2	equ	0xFF1
 24314                           intcon3	equ	0xFF0
 24315                           indf0	equ	0xFEF
 24316                           postinc0	equ	0xFEE
 24317                           plusw0	equ	0xFEB
 24318                           fsr0h	equ	0xFEA
 24319                           fsr0l	equ	0xFE9
 24320                           wreg	equ	0xFE8
 24321                           indf1	equ	0xFE7
 24322                           postinc1	equ	0xFE6
 24323                           postdec1	equ	0xFE5
 24324                           fsr1h	equ	0xFE2
 24325                           fsr1l	equ	0xFE1
 24326                           indf2	equ	0xFDF
 24327                           postinc2	equ	0xFDE
 24328                           postdec2	equ	0xFDD
 24329                           plusw2	equ	0xFDB
 24330                           fsr2h	equ	0xFDA
 24331                           fsr2l	equ	0xFD9
 24332                           status	equ	0xFD8
 24333                           
 24334 ;; *************** function _SYS_InterruptLow *****************
 24335 ;; Defined at:
 24336 ;;		line 735 in file "src/main.c"
 24337 ;; Parameters:    Size  Location     Type
 24338 ;;		None
 24339 ;; Auto vars:     Size  Location     Type
 24340 ;;		None
 24341 ;; Return value:  Size  Location     Type
 24342 ;;		None               void
 24343 ;; Registers used:
 24344 ;;		wreg, status,2, status,0
 24345 ;; Tracked objects:
 24346 ;;		On entry : 0/0
 24347 ;;		On exit  : 0/0
 24348 ;;		Unchanged: 0/0
 24349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24352 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24353 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24354 ;;Total ram usage:       17 bytes
 24355 ;; Hardware stack levels used:    1
 24356 ;; Hardware stack levels required when called:    6
 24357 ;; This function calls:
 24358 ;;		Nothing
 24359 ;; This function is called by:
 24360 ;;		Interrupt level 1
 24361 ;; This function uses a non-reentrant model
 24362 ;;
 24363                           
 24364                           	psect	intcodelo
 24365  000018                     __pintcodelo:
 24366                           	opt stack 0
 24367  000018                     _SYS_InterruptLow:
 24368                           	opt stack 13
 24369                           
 24370                           ;incstack = 0
 24371  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 24372  00001A  CFD8 F001          	movff	status,??_SYS_InterruptLow
 24373  00001E  CFE8 F002          	movff	wreg,??_SYS_InterruptLow+1
 24374  000022  CFE0 F003          	movff	bsr,??_SYS_InterruptLow+2
 24375  000026  CFFA F004          	movff	pclath,??_SYS_InterruptLow+3
 24376  00002A  CFFB F005          	movff	pclatu,??_SYS_InterruptLow+4
 24377  00002E  CFE9 F006          	movff	fsr0l,??_SYS_InterruptLow+5
 24378  000032  CFEA F007          	movff	fsr0h,??_SYS_InterruptLow+6
 24379  000036  CFE1 F008          	movff	fsr1l,??_SYS_InterruptLow+7
 24380  00003A  CFE2 F009          	movff	fsr1h,??_SYS_InterruptLow+8
 24381  00003E  CFD9 F00A          	movff	fsr2l,??_SYS_InterruptLow+9
 24382  000042  CFDA F00B          	movff	fsr2h,??_SYS_InterruptLow+10
 24383  000046  CFF3 F00C          	movff	prodl,??_SYS_InterruptLow+11
 24384  00004A  CFF4 F00D          	movff	prodh,??_SYS_InterruptLow+12
 24385  00004E  CFF6 F00E          	movff	tblptrl,??_SYS_InterruptLow+13
 24386  000052  CFF7 F00F          	movff	tblptrh,??_SYS_InterruptLow+14
 24387  000056  CFF8 F010          	movff	tblptru,??_SYS_InterruptLow+15
 24388  00005A  CFF5 F011          	movff	tablat,??_SYS_InterruptLow+16
 24389                           
 24390                           ;main.c: 738: if(PIR3bits.RTCCIF)
 24391  00005E  A0A4               	btfss	4004,0,c	;volatile
 24392  000060  D026               	goto	i1l1222
 24393                           
 24394                           ;main.c: 739: {
 24395                           ;main.c: 740: m_uptime_seconds = m_uptime_seconds + 60;
 24396  000062  0E3C               	movlw	60
 24397  000064  0101               	movlb	1	; () banked
 24398  000066  254A               	addwf	_m_uptime_seconds& (0+255),w,b	;volatile
 24399  000068  0101               	movlb	1	; () banked
 24400  00006A  6F4A               	movwf	_m_uptime_seconds& (0+255),b	;volatile
 24401  00006C  0E00               	movlw	0
 24402  00006E  0101               	movlb	1	; () banked
 24403  000070  214B               	addwfc	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
 24404  000072  0101               	movlb	1	; () banked
 24405  000074  6F4B               	movwf	(_m_uptime_seconds+1)& (0+255),b	;volatile
 24406  000076  0E00               	movlw	0
 24407  000078  0101               	movlb	1	; () banked
 24408  00007A  214C               	addwfc	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
 24409  00007C  0101               	movlb	1	; () banked
 24410  00007E  6F4C               	movwf	(_m_uptime_seconds+2)& (0+255),b	;volatile
 24411  000080  0E00               	movlw	0
 24412  000082  0101               	movlb	1	; () banked
 24413  000084  214D               	addwfc	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
 24414  000086  0101               	movlb	1	; () banked
 24415  000088  6F4D               	movwf	(_m_uptime_seconds+3)& (0+255),b	;volatile
 24416                           
 24417                           ;main.c: 741: timer_count = timer_count - 1;
 24418  00008A  044B               	decf	_timer_count,w,c	;volatile
 24419  00008C  6E4B               	movwf	_timer_count,c	;volatile
 24420                           
 24421                           ; BSR set to: 1
 24422                           ;main.c: 742: if (timer_count == 0)
 24423  00008E  504B               	movf	_timer_count,w,c	;volatile
 24424  000090  A4D8               	btfss	status,2,c
 24425  000092  D00C               	goto	i1l1219
 24426                           
 24427                           ; BSR set to: 1
 24428                           ;main.c: 743: {
 24429                           ;main.c: 744: timer_flag = 1;
 24430  000094  0E01               	movlw	1
 24431  000096  0101               	movlb	1	; () banked
 24432  000098  6F6B               	movwf	_timer_flag& (0+255),b	;volatile
 24433                           
 24434                           ;main.c: 745: if (m_update_frequency == 0)
 24435  00009A  0101               	movlb	1	; () banked
 24436  00009C  51FF               	movf	_m_update_frequency& (0+255),w,b	;volatile
 24437  00009E  A4D8               	btfss	status,2,c
 24438  0000A0  D003               	goto	i1l1220
 24439                           
 24440                           ; BSR set to: 1
 24441                           ;main.c: 746: timer_count = 1;
 24442  0000A2  0E01               	movlw	1
 24443  0000A4  6E4B               	movwf	_timer_count,c	;volatile
 24444  0000A6  D002               	goto	i1l1219
 24445  0000A8                     i1l1220:
 24446                           
 24447                           ; BSR set to: 1
 24448                           ;main.c: 747: else
 24449                           ;main.c: 748: timer_count = m_update_frequency;
 24450  0000A8  C1FF  F04B         	movff	_m_update_frequency,_timer_count	;volatile
 24451  0000AC                     i1l1219:
 24452                           
 24453                           ; BSR set to: 1
 24454                           ;main.c: 749: }
 24455                           ;main.c: 750: PIR3bits.RTCCIF = 0;
 24456  0000AC  90A4               	bcf	4004,0,c	;volatile
 24457  0000AE                     i1l1222:
 24458  0000AE  C011  FFF5         	movff	??_SYS_InterruptLow+16,tablat
 24459  0000B2  C010  FFF8         	movff	??_SYS_InterruptLow+15,tblptru
 24460  0000B6  C00F  FFF7         	movff	??_SYS_InterruptLow+14,tblptrh
 24461  0000BA  C00E  FFF6         	movff	??_SYS_InterruptLow+13,tblptrl
 24462  0000BE  C00D  FFF4         	movff	??_SYS_InterruptLow+12,prodh
 24463  0000C2  C00C  FFF3         	movff	??_SYS_InterruptLow+11,prodl
 24464  0000C6  C00B  FFDA         	movff	??_SYS_InterruptLow+10,fsr2h
 24465  0000CA  C00A  FFD9         	movff	??_SYS_InterruptLow+9,fsr2l
 24466  0000CE  C009  FFE2         	movff	??_SYS_InterruptLow+8,fsr1h
 24467  0000D2  C008  FFE1         	movff	??_SYS_InterruptLow+7,fsr1l
 24468  0000D6  C007  FFEA         	movff	??_SYS_InterruptLow+6,fsr0h
 24469  0000DA  C006  FFE9         	movff	??_SYS_InterruptLow+5,fsr0l
 24470  0000DE  C005  FFFB         	movff	??_SYS_InterruptLow+4,pclatu
 24471  0000E2  C004  FFFA         	movff	??_SYS_InterruptLow+3,pclath
 24472  0000E6  C003  FFE0         	movff	??_SYS_InterruptLow+2,bsr
 24473  0000EA  C002  FFE8         	movff	??_SYS_InterruptLow+1,wreg
 24474  0000EE  C001  FFD8         	movff	??_SYS_InterruptLow,status
 24475  0000F2  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 24476  0000F4  0010               	retfie	
 24477  0000F6                     __end_of_SYS_InterruptLow:
 24478                           	opt stack 0
 24479                           pclatu	equ	0xFFB
 24480                           pclath	equ	0xFFA
 24481                           tblptru	equ	0xFF8
 24482                           tblptrh	equ	0xFF7
 24483                           tblptrl	equ	0xFF6
 24484                           tablat	equ	0xFF5
 24485                           prodh	equ	0xFF4
 24486                           prodl	equ	0xFF3
 24487                           intcon	equ	0xFF2
 24488                           intcon2	equ	0xFF1
 24489                           intcon3	equ	0xFF0
 24490                           indf0	equ	0xFEF
 24491                           postinc0	equ	0xFEE
 24492                           plusw0	equ	0xFEB
 24493                           fsr0h	equ	0xFEA
 24494                           fsr0l	equ	0xFE9
 24495                           wreg	equ	0xFE8
 24496                           indf1	equ	0xFE7
 24497                           postinc1	equ	0xFE6
 24498                           postdec1	equ	0xFE5
 24499                           fsr1h	equ	0xFE2
 24500                           fsr1l	equ	0xFE1
 24501                           bsr	equ	0xFE0
 24502                           indf2	equ	0xFDF
 24503                           postinc2	equ	0xFDE
 24504                           postdec2	equ	0xFDD
 24505                           plusw2	equ	0xFDB
 24506                           fsr2h	equ	0xFDA
 24507                           fsr2l	equ	0xFD9
 24508                           status	equ	0xFD8
 24509                           
 24510 ;; *************** function _SYS_InterruptHigh *****************
 24511 ;; Defined at:
 24512 ;;		line 727 in file "src/main.c"
 24513 ;; Parameters:    Size  Location     Type
 24514 ;;		None
 24515 ;; Auto vars:     Size  Location     Type
 24516 ;;		None
 24517 ;; Return value:  Size  Location     Type
 24518 ;;		None               void
 24519 ;; Registers used:
 24520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24521 ;; Tracked objects:
 24522 ;;		On entry : 0/0
 24523 ;;		On exit  : 0/0
 24524 ;;		Unchanged: 0/0
 24525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24528 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24529 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24530 ;;Total ram usage:       14 bytes
 24531 ;; Hardware stack levels used:    1
 24532 ;; Hardware stack levels required when called:    5
 24533 ;; This function calls:
 24534 ;;		_MIWIInterruptHandler
 24535 ;; This function is called by:
 24536 ;;		Interrupt level 2
 24537 ;; This function uses a non-reentrant model
 24538 ;;
 24539                           
 24540                           	psect	intcode
 24541  000008                     __pintcode:
 24542                           	opt stack 0
 24543  000008                     _SYS_InterruptHigh:
 24544                           	opt stack 13
 24545                           
 24546                           ;incstack = 0
 24547  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24548  00000A  CFFA F073          	movff	pclath,??_SYS_InterruptHigh
 24549  00000E  CFFB F074          	movff	pclatu,??_SYS_InterruptHigh+1
 24550  000012  EF90  F042         	goto	int_func
 24551                           pclatu	equ	0xFFB
 24552                           pclath	equ	0xFFA
 24553                           tblptru	equ	0xFF8
 24554                           tblptrh	equ	0xFF7
 24555                           tblptrl	equ	0xFF6
 24556                           tablat	equ	0xFF5
 24557                           prodh	equ	0xFF4
 24558                           prodl	equ	0xFF3
 24559                           intcon	equ	0xFF2
 24560                           intcon2	equ	0xFF1
 24561                           intcon3	equ	0xFF0
 24562                           indf0	equ	0xFEF
 24563                           postinc0	equ	0xFEE
 24564                           plusw0	equ	0xFEB
 24565                           fsr0h	equ	0xFEA
 24566                           fsr0l	equ	0xFE9
 24567                           wreg	equ	0xFE8
 24568                           indf1	equ	0xFE7
 24569                           postinc1	equ	0xFE6
 24570                           postdec1	equ	0xFE5
 24571                           fsr1h	equ	0xFE2
 24572                           fsr1l	equ	0xFE1
 24573                           bsr	equ	0xFE0
 24574                           indf2	equ	0xFDF
 24575                           postinc2	equ	0xFDE
 24576                           postdec2	equ	0xFDD
 24577                           plusw2	equ	0xFDB
 24578                           fsr2h	equ	0xFDA
 24579                           fsr2l	equ	0xFD9
 24580                           status	equ	0xFD8
 24581                           
 24582                           	psect	intcode_body
 24583  008520                     __pintcode_body:
 24584                           	opt stack 13
 24585  008520                     int_func:
 24586                           	opt stack 13
 24587  008520  CFE9 F075          	movff	fsr0l,??_SYS_InterruptHigh+2
 24588  008524  CFEA F076          	movff	fsr0h,??_SYS_InterruptHigh+3
 24589  008528  CFE1 F077          	movff	fsr1l,??_SYS_InterruptHigh+4
 24590  00852C  CFE2 F078          	movff	fsr1h,??_SYS_InterruptHigh+5
 24591  008530  CFD9 F079          	movff	fsr2l,??_SYS_InterruptHigh+6
 24592  008534  CFDA F07A          	movff	fsr2h,??_SYS_InterruptHigh+7
 24593  008538  CFF3 F07B          	movff	prodl,??_SYS_InterruptHigh+8
 24594  00853C  CFF4 F07C          	movff	prodh,??_SYS_InterruptHigh+9
 24595  008540  CFF6 F07D          	movff	tblptrl,??_SYS_InterruptHigh+10
 24596  008544  CFF7 F07E          	movff	tblptrh,??_SYS_InterruptHigh+11
 24597  008548  CFF8 F07F          	movff	tblptru,??_SYS_InterruptHigh+12
 24598  00854C  CFF5 F080          	movff	tablat,??_SYS_InterruptHigh+13
 24599                           
 24600                           ;main.c: 729: MIWIInterruptHandler();
 24601  008550  EC13  F01E         	call	_MIWIInterruptHandler	;wreg free
 24602  008554  C080  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 24603  008558  C07F  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 24604  00855C  C07E  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 24605  008560  C07D  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 24606  008564  C07C  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 24607  008568  C07B  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 24608  00856C  C07A  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 24609  008570  C079  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 24610  008574  C078  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 24611  008578  C077  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 24612  00857C  C076  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 24613  008580  C075  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 24614  008584  C074  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 24615  008588  C073  FFFA         	movff	??_SYS_InterruptHigh,pclath
 24616  00858C  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24617  00858E  0011               	retfie		f
 24618  008590                     __end_of_SYS_InterruptHigh:
 24619                           	opt stack 0
 24620                           pclatu	equ	0xFFB
 24621                           pclath	equ	0xFFA
 24622                           tblptru	equ	0xFF8
 24623                           tblptrh	equ	0xFF7
 24624                           tblptrl	equ	0xFF6
 24625                           tablat	equ	0xFF5
 24626                           prodh	equ	0xFF4
 24627                           prodl	equ	0xFF3
 24628                           intcon	equ	0xFF2
 24629                           intcon2	equ	0xFF1
 24630                           intcon3	equ	0xFF0
 24631                           indf0	equ	0xFEF
 24632                           postinc0	equ	0xFEE
 24633                           plusw0	equ	0xFEB
 24634                           fsr0h	equ	0xFEA
 24635                           fsr0l	equ	0xFE9
 24636                           wreg	equ	0xFE8
 24637                           indf1	equ	0xFE7
 24638                           postinc1	equ	0xFE6
 24639                           postdec1	equ	0xFE5
 24640                           fsr1h	equ	0xFE2
 24641                           fsr1l	equ	0xFE1
 24642                           bsr	equ	0xFE0
 24643                           indf2	equ	0xFDF
 24644                           postinc2	equ	0xFDE
 24645                           postdec2	equ	0xFDD
 24646                           plusw2	equ	0xFDB
 24647                           fsr2h	equ	0xFDA
 24648                           fsr2l	equ	0xFD9
 24649                           status	equ	0xFD8
 24650                           
 24651 ;; *************** function _MIWIInterruptHandler *****************
 24652 ;; Defined at:
 24653 ;;		line 1258 in file "src/miwi/drv_mrf_miwi_89xa.c"
 24654 ;; Parameters:    Size  Location     Type
 24655 ;;		None
 24656 ;; Auto vars:     Size  Location     Type
 24657 ;;  ackInfoIndex    1   15[BANK0 ] unsigned char 
 24658 ;;  i               1   18[BANK0 ] unsigned char 
 24659 ;;  fifo_stat       1    8[BANK0 ] unsigned char 
 24660 ;;  ackPacket       4    9[BANK0 ] unsigned char [4]
 24661 ;;  counter         2    6[BANK0 ] unsigned int 
 24662 ;;  BankIndex       1   17[BANK0 ] unsigned char 
 24663 ;;  PacketLen       1   16[BANK0 ] unsigned char 
 24664 ;;  RxPacketPtr     1   14[BANK0 ] unsigned char 
 24665 ;;  bAck            1   13[BANK0 ] unsigned char 
 24666 ;; Return value:  Size  Location     Type
 24667 ;;		None               void
 24668 ;; Registers used:
 24669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24670 ;; Tracked objects:
 24671 ;;		On entry : 0/0
 24672 ;;		On exit  : 0/0
 24673 ;;		Unchanged: 0/0
 24674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24676 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24677 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24678 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24679 ;;Total ram usage:       19 bytes
 24680 ;; Hardware stack levels used:    1
 24681 ;; Hardware stack levels required when called:    4
 24682 ;; This function calls:
 24683 ;;		i2_MiWi_TickGet
 24684 ;;		i2_RegisterRead
 24685 ;;		i2_SPIGet
 24686 ;;		i2_TxPacket
 24687 ;; This function is called by:
 24688 ;;		_SYS_InterruptHigh
 24689 ;; This function uses a non-reentrant model
 24690 ;;
 24691                           
 24692                           	psect	text82
 24693  003C26                     __ptext82:
 24694                           	opt stack 0
 24695  003C26                     _MIWIInterruptHandler:
 24696                           	opt stack 13
 24697                           
 24698                           ;drv_mrf_miwi_89xa.c: 1260: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE)
 24699                           
 24700                           ;incstack = 0
 24701  003C26  B0F0               	btfsc	intcon3,0,c	;volatile
 24702  003C28  A6F0               	btfss	intcon3,3,c	;volatile
 24703  003C2A  D270               	goto	i2l13714
 24704                           
 24705                           ;drv_mrf_miwi_89xa.c: 1261: {
 24706                           ;drv_mrf_miwi_89xa.c: 1262: INTCON3bits.INT1IF = 0;
 24707  003C2C  90F0               	bcf	intcon3,0,c	;volatile
 24708                           
 24709                           ;drv_mrf_miwi_89xa.c: 1268: if(RF_Mode == 0x60)
 24710  003C2E  0E60               	movlw	96
 24711  003C30  1843               	xorwf	_RF_Mode,w,c
 24712  003C32  A4D8               	btfss	status,2,c
 24713  003C34  D267               	goto	i2l13708
 24714                           
 24715                           ;drv_mrf_miwi_89xa.c: 1269: {
 24716                           ;drv_mrf_miwi_89xa.c: 1270: uint8_t RxPacketPtr;
 24717                           ;drv_mrf_miwi_89xa.c: 1271: uint8_t PacketLen;
 24718                           ;drv_mrf_miwi_89xa.c: 1272: uint8_t BankIndex;
 24719                           ;drv_mrf_miwi_89xa.c: 1273: uint16_t counter;
 24720                           ;drv_mrf_miwi_89xa.c: 1274: bool bAck;
 24721                           ;drv_mrf_miwi_89xa.c: 1275: uint8_t ackPacket[4];
 24722                           ;drv_mrf_miwi_89xa.c: 1281: RSSILock = RSSIVal;
 24723  003C36  C044  F165         	movff	_RSSIVal,_RSSILock
 24724                           
 24725                           ;drv_mrf_miwi_89xa.c: 1283: LATCbits.LATC6 = 0;
 24726  003C3A  9C8B               	bcf	3979,6,c	;volatile
 24727                           
 24728                           ;drv_mrf_miwi_89xa.c: 1284: PacketLen = SPIGet();
 24729  003C3C  EC1A  F046         	call	i2_SPIGet	;wreg free
 24730  003C40  0100               	movlb	0	; () banked
 24731  003C42  6F70               	movwf	MIWIInterruptHandler@PacketLen& (0+255),b
 24732                           
 24733                           ; BSR set to: 0
 24734                           ;drv_mrf_miwi_89xa.c: 1285: LATCbits.LATC6 = 1;
 24735  003C44  8C8B               	bsf	3979,6,c	;volatile
 24736                           
 24737                           ; BSR set to: 0
 24738                           ;drv_mrf_miwi_89xa.c: 1288: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 24739  003C46  0E00               	movlw	0
 24740  003C48  0100               	movlb	0	; () banked
 24741  003C4A  6F71               	movwf	MIWIInterruptHandler@BankIndex& (0+255),b
 24742  003C4C                     i2l13548:
 24743                           
 24744                           ; BSR set to: 0
 24745  003C4C  0E01               	movlw	1
 24746  003C4E  0100               	movlb	0	; () banked
 24747  003C50  6571               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 24748  003C52  D001               	goto	i2l13552
 24749  003C54  D00F               	goto	i2l13560
 24750  003C56                     i2l13552:
 24751                           
 24752                           ; BSR set to: 0
 24753                           ;drv_mrf_miwi_89xa.c: 1289: {
 24754                           ;drv_mrf_miwi_89xa.c: 1290: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 24755  003C56  0100               	movlb	0	; () banked
 24756  003C58  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 24757  003C5A  0D42               	mullw	66
 24758  003C5C  0E50               	movlw	low _RxPacket
 24759  003C5E  24F3               	addwf	prodl,w,c
 24760  003C60  6ED9               	movwf	fsr2l,c
 24761  003C62  0E03               	movlw	high _RxPacket
 24762  003C64  20F4               	addwfc	prodh,w,c
 24763  003C66  6EDA               	movwf	fsr2h,c
 24764  003C68  0103               	movlb	3	; () banked
 24765  003C6A  A0DF               	btfss	indf2,0,c
 24766  003C6C  D003               	goto	i2l13560
 24767                           
 24768                           ; BSR set to: 3
 24769                           
 24770                           ; BSR set to: 3
 24771                           
 24772                           ; BSR set to: 3
 24773                           ;drv_mrf_miwi_89xa.c: 1291: {
 24774                           ;drv_mrf_miwi_89xa.c: 1292: break;
 24775  003C6E  0100               	movlb	0	; () banked
 24776  003C70  2B71               	incf	MIWIInterruptHandler@BankIndex& (0+255),f,b
 24777  003C72  D7EC               	goto	i2l13548
 24778  003C74                     i2l13560:
 24779                           
 24780                           ;drv_mrf_miwi_89xa.c: 1293: }
 24781                           ;drv_mrf_miwi_89xa.c: 1294: }
 24782                           ;drv_mrf_miwi_89xa.c: 1297: if( PacketLen == 2 )
 24783  003C74  0E02               	movlw	2
 24784  003C76  0100               	movlb	0	; () banked
 24785  003C78  1970               	xorwf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 24786  003C7A  A4D8               	btfss	status,2,c
 24787  003C7C  D002               	goto	i2l13564
 24788                           
 24789                           ; BSR set to: 0
 24790                           ;drv_mrf_miwi_89xa.c: 1298: {
 24791                           ;drv_mrf_miwi_89xa.c: 1299: bAck = 1;
 24792  003C7E  0E01               	movlw	1
 24793  003C80  D001               	goto	L14
 24794  003C82                     i2l13564:
 24795                           
 24796                           ; BSR set to: 0
 24797                           ;drv_mrf_miwi_89xa.c: 1301: else
 24798                           ;drv_mrf_miwi_89xa.c: 1302: {
 24799                           ;drv_mrf_miwi_89xa.c: 1303: bAck = 0;
 24800  003C82  0E00               	movlw	0
 24801  003C84                     L14:
 24802  003C84  0100               	movlb	0	; () banked
 24803  003C86  6F6D               	movwf	MIWIInterruptHandler@bAck& (0+255),b
 24804                           
 24805                           ; BSR set to: 0
 24806                           ;drv_mrf_miwi_89xa.c: 1304: }
 24807                           ;drv_mrf_miwi_89xa.c: 1307: if( PacketLen >= (32+11+4+4+4+9) || PacketLen == 0 || (BankI
      +                          ndex >= 2 && (bAck==0)) )
 24808                           
 24809                           ; BSR set to: 0
 24810  003C88  0E40               	movlw	64
 24811  003C8A  0100               	movlb	0	; () banked
 24812  003C8C  6170               	cpfslt	MIWIInterruptHandler@PacketLen& (0+255),b
 24813  003C8E  D00E               	goto	i2l13574
 24814                           
 24815                           ; BSR set to: 0
 24816  003C90  0100               	movlb	0	; () banked
 24817  003C92  5170               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 24818  003C94  0100               	movlb	0	; () banked
 24819  003C96  B4D8               	btfsc	status,2,c
 24820  003C98  D009               	goto	i2l13574
 24821                           
 24822                           ; BSR set to: 0
 24823  003C9A  0E01               	movlw	1
 24824  003C9C  0100               	movlb	0	; () banked
 24825  003C9E  6571               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 24826  003CA0  D016               	goto	i2l13584
 24827                           
 24828                           ; BSR set to: 0
 24829  003CA2  0100               	movlb	0	; () banked
 24830  003CA4  516D               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 24831  003CA6  0100               	movlb	0	; () banked
 24832  003CA8  A4D8               	btfss	status,2,c
 24833  003CAA  D011               	goto	i2l13584
 24834  003CAC                     i2l13574:
 24835                           
 24836                           ; BSR set to: 0
 24837                           ;drv_mrf_miwi_89xa.c: 1310: {
 24838                           ;drv_mrf_miwi_89xa.c: 1311: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 24839  003CAC  0E1A               	movlw	26
 24840  003CAE  EC5B  F044         	call	i2_RegisterRead
 24841  003CB2  D007               	goto	L15
 24842  003CB4                     i2l392:
 24843                           
 24844                           ; BSR set to: 0
 24845                           ;drv_mrf_miwi_89xa.c: 1313: {
 24846                           ;drv_mrf_miwi_89xa.c: 1314: LATCbits.LATC6 = 0;
 24847  003CB4  9C8B               	bcf	3979,6,c	;volatile
 24848                           
 24849                           ; BSR set to: 0
 24850                           ;drv_mrf_miwi_89xa.c: 1315: SPIGet();
 24851  003CB6  EC1A  F046         	call	i2_SPIGet	;wreg free
 24852                           
 24853                           ;drv_mrf_miwi_89xa.c: 1316: LATCbits.LATC6 = 1;
 24854  003CBA  8C8B               	bsf	3979,6,c	;volatile
 24855                           
 24856                           ;drv_mrf_miwi_89xa.c: 1317: fifo_stat = RegisterRead(0x1A00>>8);
 24857  003CBC  0E1A               	movlw	26
 24858  003CBE  EC5B  F044         	call	i2_RegisterRead
 24859  003CC2                     L15:
 24860  003CC2  0100               	movlb	0	; () banked
 24861  003CC4  6F68               	movwf	MIWIInterruptHandler@fifo_stat& (0+255),b
 24862                           
 24863                           ; BSR set to: 0
 24864                           
 24865                           ; BSR set to: 0
 24866  003CC6  0100               	movlb	0	; () banked
 24867  003CC8  A368               	btfss	MIWIInterruptHandler@fifo_stat& (0+255),1,b
 24868  003CCA  D21E               	goto	i2l13710
 24869  003CCC  D7F3               	goto	i2l392
 24870  003CCE                     i2l13584:
 24871                           
 24872                           ; BSR set to: 0
 24873                           ;drv_mrf_miwi_89xa.c: 1321: }
 24874                           ;drv_mrf_miwi_89xa.c: 1323: RxPacketPtr = 0;
 24875  003CCE  0E00               	movlw	0
 24876  003CD0  0100               	movlb	0	; () banked
 24877  003CD2  6F6E               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 24878                           
 24879                           ; BSR set to: 0
 24880                           ;drv_mrf_miwi_89xa.c: 1324: counter = PacketLen;
 24881  003CD4  C070  F066         	movff	MIWIInterruptHandler@PacketLen,MIWIInterruptHandler@counter
 24882  003CD8  0100               	movlb	0	; () banked
 24883  003CDA  6B67               	clrf	(MIWIInterruptHandler@counter+1)& (0+255),b
 24884                           
 24885                           ;drv_mrf_miwi_89xa.c: 1326: while(counter >= 1)
 24886  003CDC  D20C               	goto	i2l13706
 24887  003CDE                     i2l13588:
 24888                           
 24889                           ; BSR set to: 0
 24890                           ;drv_mrf_miwi_89xa.c: 1329: if(1)
 24891  003CDE  0100               	movlb	0	; () banked
 24892  003CE0  0766               	decf	MIWIInterruptHandler@counter& (0+255),f,b
 24893  003CE2  A0D8               	btfss	status,0,c
 24894  003CE4  0767               	decf	(MIWIInterruptHandler@counter+1)& (0+255),f,b
 24895                           
 24896                           ; BSR set to: 0
 24897                           ;drv_mrf_miwi_89xa.c: 1330: {
 24898                           ;drv_mrf_miwi_89xa.c: 1332: if( bAck )
 24899  003CE6  0100               	movlb	0	; () banked
 24900  003CE8  516D               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 24901  003CEA  0100               	movlb	0	; () banked
 24902  003CEC  B4D8               	btfsc	status,2,c
 24903  003CEE  D010               	goto	i2l398
 24904                           
 24905                           ; BSR set to: 0
 24906                           ;drv_mrf_miwi_89xa.c: 1333: {
 24907                           ;drv_mrf_miwi_89xa.c: 1334: LATCbits.LATC6 = 0;
 24908  003CF0  9C8B               	bcf	3979,6,c	;volatile
 24909                           
 24910                           ; BSR set to: 0
 24911                           ;drv_mrf_miwi_89xa.c: 1335: ackPacket[RxPacketPtr++] = SPIGet();
 24912  003CF2  0100               	movlb	0	; () banked
 24913  003CF4  516E               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 24914  003CF6  0D01               	mullw	1
 24915  003CF8  0E69               	movlw	low MIWIInterruptHandler@ackPacket
 24916  003CFA  24F3               	addwf	prodl,w,c
 24917  003CFC  6ED9               	movwf	fsr2l,c
 24918  003CFE  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 24919  003D00  20F4               	addwfc	prodh,w,c
 24920  003D02  6EDA               	movwf	fsr2h,c
 24921  003D04  EC1A  F046         	call	i2_SPIGet	;wreg free
 24922  003D08  D024               	goto	L16
 24923  003D0A                     i2l13596:
 24924  003D0A  0100               	movlb	0	; () banked
 24925  003D0C  2B6E               	incf	MIWIInterruptHandler@RxPacketPtr& (0+255),f,b
 24926  003D0E  D023               	goto	i2l13604
 24927  003D10                     i2l398:
 24928                           
 24929                           ; BSR set to: 0
 24930                           ;drv_mrf_miwi_89xa.c: 1339: else
 24931                           ;drv_mrf_miwi_89xa.c: 1340: {
 24932                           ;drv_mrf_miwi_89xa.c: 1341: LATCbits.LATC6 = 0;
 24933  003D10  9C8B               	bcf	3979,6,c	;volatile
 24934                           
 24935                           ; BSR set to: 0
 24936                           ;drv_mrf_miwi_89xa.c: 1342: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 24937  003D12  0100               	movlb	0	; () banked
 24938  003D14  516E               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 24939  003D16  0D01               	mullw	1
 24940  003D18  0E01               	movlw	1
 24941  003D1A  26F3               	addwf	prodl,f,c
 24942  003D1C  0E00               	movlw	0
 24943  003D1E  22F4               	addwfc	prodh,f,c
 24944  003D20  0E50               	movlw	low _RxPacket
 24945  003D22  0100               	movlb	0	; () banked
 24946  003D24  6F60               	movwf	??_MIWIInterruptHandler& (0+255),b
 24947  003D26  0E03               	movlw	high _RxPacket
 24948  003D28  0100               	movlb	0	; () banked
 24949  003D2A  6F61               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 24950  003D2C  50F3               	movf	prodl,w,c
 24951  003D2E  0100               	movlb	0	; () banked
 24952  003D30  2760               	addwf	??_MIWIInterruptHandler& (0+255),f,b
 24953  003D32  50F4               	movf	prodh,w,c
 24954  003D34  0100               	movlb	0	; () banked
 24955  003D36  2361               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),f,b
 24956  003D38  0100               	movlb	0	; () banked
 24957  003D3A  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 24958  003D3C  0D42               	mullw	66
 24959  003D3E  50F3               	movf	prodl,w,c
 24960  003D40  0100               	movlb	0	; () banked
 24961  003D42  2560               	addwf	??_MIWIInterruptHandler& (0+255),w,b
 24962  003D44  6ED9               	movwf	fsr2l,c
 24963  003D46  50F4               	movf	prodh,w,c
 24964  003D48  0100               	movlb	0	; () banked
 24965  003D4A  2161               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),w,b
 24966  003D4C  6EDA               	movwf	fsr2h,c
 24967  003D4E  EC1A  F046         	call	i2_SPIGet	;wreg free
 24968  003D52                     L16:
 24969  003D52  6EDF               	movwf	indf2,c
 24970  003D54  D7DA               	goto	i2l13596
 24971  003D56                     i2l13604:
 24972                           
 24973                           ; BSR set to: 0
 24974                           ;drv_mrf_miwi_89xa.c: 1343: LATCbits.LATC6 = 1;
 24975  003D56  8C8B               	bsf	3979,6,c	;volatile
 24976                           
 24977                           ; BSR set to: 0
 24978                           ;drv_mrf_miwi_89xa.c: 1344: }
 24979                           ;drv_mrf_miwi_89xa.c: 1347: if( RxPacketPtr >= PacketLen )
 24980                           
 24981                           ; BSR set to: 0
 24982  003D58  0100               	movlb	0	; () banked
 24983  003D5A  5170               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 24984  003D5C  0100               	movlb	0	; () banked
 24985  003D5E  5D6E               	subwf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 24986  003D60  A0D8               	btfss	status,0,c
 24987  003D62  D1C9               	goto	i2l13706
 24988                           
 24989                           ; BSR set to: 0
 24990                           ;drv_mrf_miwi_89xa.c: 1348: {
 24991                           ;drv_mrf_miwi_89xa.c: 1349: uint8_t i;
 24992                           ;drv_mrf_miwi_89xa.c: 1351: if( bAck )
 24993  003D64  0100               	movlb	0	; () banked
 24994  003D66  516D               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 24995  003D68  0100               	movlb	0	; () banked
 24996  003D6A  B4D8               	btfsc	status,2,c
 24997  003D6C  D037               	goto	i2l401
 24998                           
 24999                           ; BSR set to: 0
 25000                           ;drv_mrf_miwi_89xa.c: 1352: {
 25001                           ;drv_mrf_miwi_89xa.c: 1354: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 25002  003D6E  0100               	movlb	0	; () banked
 25003  003D70  5169               	movf	MIWIInterruptHandler@ackPacket& (0+255),w,b
 25004  003D72  0B03               	andlw	3
 25005  003D74  0A02               	xorlw	2
 25006  003D76  A4D8               	btfss	status,2,c
 25007  003D78  D00B               	goto	i2l13618
 25008                           
 25009                           ; BSR set to: 0
 25010                           ;drv_mrf_miwi_89xa.c: 1355: {
 25011                           ;drv_mrf_miwi_89xa.c: 1356: if( ackPacket[1] == TxMACSeq )
 25012  003D7A  5046               	movf	_TxMACSeq,w,c
 25013  003D7C  0100               	movlb	0	; () banked
 25014  003D7E  196A               	xorwf	(MIWIInterruptHandler@ackPacket+1)& (0+255),w,b
 25015  003D80  A4D8               	btfss	status,2,c
 25016  003D82  D002               	goto	i2l403
 25017                           
 25018                           ; BSR set to: 0
 25019                           ;drv_mrf_miwi_89xa.c: 1357: {
 25020                           ;drv_mrf_miwi_89xa.c: 1358: hasAck = 1;
 25021  003D84  0E01               	movlw	1
 25022  003D86  6E47               	movwf	_hasAck,c	;volatile
 25023  003D88                     i2l403:
 25024                           
 25025                           ; BSR set to: 0
 25026                           ;drv_mrf_miwi_89xa.c: 1359: }
 25027                           ;drv_mrf_miwi_89xa.c: 1360: RxPacketPtr = 0;
 25028  003D88  0E00               	movlw	0
 25029  003D8A  0100               	movlb	0	; () banked
 25030  003D8C  6F6E               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 25031                           
 25032                           ;drv_mrf_miwi_89xa.c: 1361: goto RETURN_HERE;
 25033  003D8E  D1BC               	goto	i2l13710
 25034  003D90                     i2l13618:
 25035                           
 25036                           ; BSR set to: 0
 25037                           ;drv_mrf_miwi_89xa.c: 1363: else
 25038                           ;drv_mrf_miwi_89xa.c: 1365: if( BankIndex >= 2 )
 25039  003D90  0E01               	movlw	1
 25040  003D92  0100               	movlb	0	; () banked
 25041  003D94  6571               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 25042  003D96  D004               	goto	i2l13622
 25043                           
 25044                           ; BSR set to: 0
 25045                           ;drv_mrf_miwi_89xa.c: 1366: {
 25046                           ;drv_mrf_miwi_89xa.c: 1367: RxPacketPtr = 0;
 25047  003D98  0E00               	movlw	0
 25048  003D9A  0100               	movlb	0	; () banked
 25049  003D9C  6F6E               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 25050                           
 25051                           ;drv_mrf_miwi_89xa.c: 1368: goto IGNORE_HERE;
 25052  003D9E  D786               	goto	i2l13574
 25053  003DA0                     i2l13622:
 25054                           
 25055                           ; BSR set to: 0
 25056                           ;drv_mrf_miwi_89xa.c: 1369: }
 25057                           ;drv_mrf_miwi_89xa.c: 1370: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 25058  003DA0  0100               	movlb	0	; () banked
 25059  003DA2  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25060  003DA4  0D42               	mullw	66
 25061  003DA6  0E01               	movlw	1
 25062  003DA8  26F3               	addwf	prodl,f,c
 25063  003DAA  0E00               	movlw	0
 25064  003DAC  22F4               	addwfc	prodh,f,c
 25065  003DAE  0E50               	movlw	low _RxPacket
 25066  003DB0  24F3               	addwf	prodl,w,c
 25067  003DB2  6ED9               	movwf	fsr2l,c
 25068  003DB4  0E03               	movlw	high _RxPacket
 25069  003DB6  20F4               	addwfc	prodh,w,c
 25070  003DB8  6EDA               	movwf	fsr2h,c
 25071  003DBA  C069  FFDF         	movff	MIWIInterruptHandler@ackPacket,indf2
 25072                           
 25073                           ;drv_mrf_miwi_89xa.c: 1371: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 25074  003DBE  0100               	movlb	0	; () banked
 25075  003DC0  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25076  003DC2  0D42               	mullw	66
 25077  003DC4  0E02               	movlw	2
 25078  003DC6  26F3               	addwf	prodl,f,c
 25079  003DC8  0E00               	movlw	0
 25080  003DCA  22F4               	addwfc	prodh,f,c
 25081  003DCC  0E50               	movlw	low _RxPacket
 25082  003DCE  24F3               	addwf	prodl,w,c
 25083  003DD0  6ED9               	movwf	fsr2l,c
 25084  003DD2  0E03               	movlw	high _RxPacket
 25085  003DD4  20F4               	addwfc	prodh,w,c
 25086  003DD6  6EDA               	movwf	fsr2h,c
 25087  003DD8  C06A  FFDF         	movff	MIWIInterruptHandler@ackPacket+1,indf2
 25088  003DDC                     i2l401:
 25089                           
 25090                           ; BSR set to: 0
 25091                           ;drv_mrf_miwi_89xa.c: 1373: }
 25092                           ;drv_mrf_miwi_89xa.c: 1375: RxPacket[BankIndex].PayloadLen = PacketLen;
 25093  003DDC  0100               	movlb	0	; () banked
 25094  003DDE  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25095  003DE0  0D42               	mullw	66
 25096  003DE2  0E41               	movlw	65
 25097  003DE4  26F3               	addwf	prodl,f,c
 25098  003DE6  0E00               	movlw	0
 25099  003DE8  22F4               	addwfc	prodh,f,c
 25100  003DEA  0E50               	movlw	low _RxPacket
 25101  003DEC  24F3               	addwf	prodl,w,c
 25102  003DEE  6ED9               	movwf	fsr2l,c
 25103  003DF0  0E03               	movlw	high _RxPacket
 25104  003DF2  20F4               	addwfc	prodh,w,c
 25105  003DF4  6EDA               	movwf	fsr2h,c
 25106  003DF6  C070  FFDF         	movff	MIWIInterruptHandler@PacketLen,indf2
 25107                           
 25108                           ; BSR set to: 0
 25109                           ;drv_mrf_miwi_89xa.c: 1392: {
 25110                           ;drv_mrf_miwi_89xa.c: 1393: uint8_t ackInfoIndex = 0xFF;
 25111  003DFA  0100               	movlb	0	; () banked
 25112  003DFC  696F               	setf	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 25113                           
 25114                           ;drv_mrf_miwi_89xa.c: 1395: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 25115  003DFE  0100               	movlb	0	; () banked
 25116  003E00  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25117  003E02  0D42               	mullw	66
 25118  003E04  0E01               	movlw	1
 25119  003E06  26F3               	addwf	prodl,f,c
 25120  003E08  0E00               	movlw	0
 25121  003E0A  22F4               	addwfc	prodh,f,c
 25122  003E0C  0E50               	movlw	low _RxPacket
 25123  003E0E  24F3               	addwf	prodl,w,c
 25124  003E10  6ED9               	movwf	fsr2l,c
 25125  003E12  0E03               	movlw	high _RxPacket
 25126  003E14  20F4               	addwfc	prodh,w,c
 25127  003E16  6EDA               	movwf	fsr2h,c
 25128  003E18  0103               	movlb	3	; () banked
 25129  003E1A  ACDF               	btfss	indf2,6,c
 25130  003E1C  D055               	goto	i2l13638
 25131                           
 25132                           ; BSR set to: 3
 25133                           ;drv_mrf_miwi_89xa.c: 1396: {
 25134                           ;drv_mrf_miwi_89xa.c: 1397: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 25135  003E1E  0E00               	movlw	0
 25136  003E20  0100               	movlb	0	; () banked
 25137  003E22  6F72               	movwf	MIWIInterruptHandler@i& (0+255),b
 25138  003E24  D045               	goto	i2l13636
 25139  003E26                     i2l13628:
 25140                           
 25141                           ; BSR set to: 0
 25142                           ;drv_mrf_miwi_89xa.c: 1398: {
 25143                           ;drv_mrf_miwi_89xa.c: 1399: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 25144  003E26  0100               	movlb	0	; () banked
 25145  003E28  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25146  003E2A  0D01               	mullw	1
 25147  003E2C  50F3               	movf	prodl,w,c
 25148  003E2E  243D               	addwf	_MACInitParams+1,w,c
 25149  003E30  6ED9               	movwf	fsr2l,c
 25150  003E32  50F4               	movf	prodh,w,c
 25151  003E34  203E               	addwfc	_MACInitParams+2,w,c
 25152  003E36  6EDA               	movwf	fsr2h,c
 25153  003E38  0100               	movlb	0	; () banked
 25154  003E3A  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25155  003E3C  0D42               	mullw	66
 25156  003E3E  0100               	movlb	0	; () banked
 25157  003E40  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25158  003E42  0100               	movlb	0	; () banked
 25159  003E44  6F61               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 25160  003E46  6B62               	clrf	(??_MIWIInterruptHandler+2)& (0+255),b
 25161  003E48  0E03               	movlw	3
 25162  003E4A  0100               	movlb	0	; () banked
 25163  003E4C  2761               	addwf	(??_MIWIInterruptHandler+1)& (0+255),f,b
 25164  003E4E  0E00               	movlw	0
 25165  003E50  2362               	addwfc	(??_MIWIInterruptHandler+2)& (0+255),f,b
 25166  003E52  0E50               	movlw	low _RxPacket
 25167  003E54  0100               	movlb	0	; () banked
 25168  003E56  6F63               	movwf	(??_MIWIInterruptHandler+3)& (0+255),b
 25169  003E58  0E03               	movlw	high _RxPacket
 25170  003E5A  0100               	movlb	0	; () banked
 25171  003E5C  6F64               	movwf	(??_MIWIInterruptHandler+4)& (0+255),b
 25172  003E5E  0100               	movlb	0	; () banked
 25173  003E60  5161               	movf	(??_MIWIInterruptHandler+1)& (0+255),w,b
 25174  003E62  0100               	movlb	0	; () banked
 25175  003E64  2763               	addwf	(??_MIWIInterruptHandler+3)& (0+255),f,b
 25176  003E66  0100               	movlb	0	; () banked
 25177  003E68  5162               	movf	(??_MIWIInterruptHandler+2)& (0+255),w,b
 25178  003E6A  0100               	movlb	0	; () banked
 25179  003E6C  2364               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),f,b
 25180  003E6E  50F3               	movf	prodl,w,c
 25181  003E70  0100               	movlb	0	; () banked
 25182  003E72  2563               	addwf	(??_MIWIInterruptHandler+3)& (0+255),w,b
 25183  003E74  6EE1               	movwf	fsr1l,c
 25184  003E76  50F4               	movf	prodh,w,c
 25185  003E78  0100               	movlb	0	; () banked
 25186  003E7A  2164               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),w,b
 25187  003E7C  6EE2               	movwf	fsr1h,c
 25188  003E7E  50DE               	movf	postinc2,w,c
 25189  003E80  18E6               	xorwf	postinc1,w,c
 25190  003E82  B4D8               	btfsc	status,2,c
 25191  003E84  D013               	goto	i2l13634
 25192                           
 25193                           ; BSR set to: 0
 25194                           ;drv_mrf_miwi_89xa.c: 1400: {
 25195                           ;drv_mrf_miwi_89xa.c: 1401: RxPacketPtr = 0;
 25196  003E86  0E00               	movlw	0
 25197  003E88  0100               	movlb	0	; () banked
 25198  003E8A  6F6E               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 25199                           
 25200                           ; BSR set to: 0
 25201                           ;drv_mrf_miwi_89xa.c: 1402: RxPacket[BankIndex].PayloadLen = 0;
 25202  003E8C  0100               	movlb	0	; () banked
 25203  003E8E  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25204  003E90  0D42               	mullw	66
 25205  003E92  0E41               	movlw	65
 25206  003E94  26F3               	addwf	prodl,f,c
 25207  003E96  0E00               	movlw	0
 25208  003E98  22F4               	addwfc	prodh,f,c
 25209  003E9A  0E50               	movlw	low _RxPacket
 25210  003E9C  24F3               	addwf	prodl,w,c
 25211  003E9E  6ED9               	movwf	fsr2l,c
 25212  003EA0  0E03               	movlw	high _RxPacket
 25213  003EA2  20F4               	addwfc	prodh,w,c
 25214  003EA4  6EDA               	movwf	fsr2h,c
 25215  003EA6  0E00               	movlw	0
 25216  003EA8  6EDF               	movwf	indf2,c
 25217                           
 25218                           ;drv_mrf_miwi_89xa.c: 1403: goto IGNORE_HERE;
 25219  003EAA  D700               	goto	i2l13574
 25220  003EAC                     i2l13634:
 25221                           
 25222                           ; BSR set to: 0
 25223  003EAC  0100               	movlb	0	; () banked
 25224  003EAE  2B72               	incf	MIWIInterruptHandler@i& (0+255),f,b
 25225  003EB0                     i2l13636:
 25226                           
 25227                           ; BSR set to: 0
 25228  003EB0  303C               	rrcf	_MACInitParams,w,c
 25229  003EB2  32E8               	rrcf	wreg,f,c
 25230  003EB4  32E8               	rrcf	wreg,f,c
 25231  003EB6  0B0F               	andlw	15
 25232  003EB8  0100               	movlb	0	; () banked
 25233  003EBA  6F60               	movwf	??_MIWIInterruptHandler& (0+255),b
 25234  003EBC  0100               	movlb	0	; () banked
 25235  003EBE  5160               	movf	??_MIWIInterruptHandler& (0+255),w,b
 25236  003EC0  0100               	movlb	0	; () banked
 25237  003EC2  5D72               	subwf	MIWIInterruptHandler@i& (0+255),w,b
 25238  003EC4  A0D8               	btfss	status,0,c
 25239  003EC6  D7AF               	goto	i2l13628
 25240  003EC8                     i2l13638:
 25241                           
 25242                           ;drv_mrf_miwi_89xa.c: 1404: }
 25243                           ;drv_mrf_miwi_89xa.c: 1405: }
 25244                           ;drv_mrf_miwi_89xa.c: 1406: }
 25245                           ;drv_mrf_miwi_89xa.c: 1409: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 25246  003EC8  0100               	movlb	0	; () banked
 25247  003ECA  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25248  003ECC  0D42               	mullw	66
 25249  003ECE  0E01               	movlw	1
 25250  003ED0  26F3               	addwf	prodl,f,c
 25251  003ED2  0E00               	movlw	0
 25252  003ED4  22F4               	addwfc	prodh,f,c
 25253  003ED6  0E50               	movlw	low _RxPacket
 25254  003ED8  24F3               	addwf	prodl,w,c
 25255  003EDA  6ED9               	movwf	fsr2l,c
 25256  003EDC  0E03               	movlw	high _RxPacket
 25257  003EDE  20F4               	addwfc	prodh,w,c
 25258  003EE0  6EDA               	movwf	fsr2h,c
 25259  003EE2  0103               	movlb	3	; () banked
 25260  003EE4  AADF               	btfss	indf2,5,c
 25261  003EE6  D057               	goto	i2l13672
 25262                           
 25263                           ; BSR set to: 3
 25264                           ;drv_mrf_miwi_89xa.c: 1410: {
 25265                           ;drv_mrf_miwi_89xa.c: 1412: for(i = 0; i < 2; i++)
 25266  003EE8  0E00               	movlw	0
 25267  003EEA  0100               	movlb	0	; () banked
 25268  003EEC  6F72               	movwf	MIWIInterruptHandler@i& (0+255),b
 25269  003EEE                     i2l13642:
 25270                           
 25271                           ; BSR set to: 0
 25272  003EEE  0E01               	movlw	1
 25273  003EF0  0100               	movlb	0	; () banked
 25274  003EF2  6572               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 25275  003EF4  D001               	goto	i2l13646
 25276  003EF6  D017               	goto	i2l13652
 25277  003EF8                     i2l13646:
 25278                           
 25279                           ; BSR set to: 0
 25280                           ;drv_mrf_miwi_89xa.c: 1413: {
 25281                           ;drv_mrf_miwi_89xa.c: 1414: ackPacket[i] = MACTxBuffer[i];
 25282  003EF8  0100               	movlb	0	; () banked
 25283  003EFA  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25284  003EFC  0D01               	mullw	1
 25285  003EFE  0EA0               	movlw	low _MACTxBuffer
 25286  003F00  24F3               	addwf	prodl,w,c
 25287  003F02  6ED9               	movwf	fsr2l,c
 25288  003F04  0E02               	movlw	high _MACTxBuffer
 25289  003F06  20F4               	addwfc	prodh,w,c
 25290  003F08  6EDA               	movwf	fsr2h,c
 25291  003F0A  0100               	movlb	0	; () banked
 25292  003F0C  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25293  003F0E  0D01               	mullw	1
 25294  003F10  0E69               	movlw	low MIWIInterruptHandler@ackPacket
 25295  003F12  24F3               	addwf	prodl,w,c
 25296  003F14  6EE1               	movwf	fsr1l,c
 25297  003F16  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 25298  003F18  20F4               	addwfc	prodh,w,c
 25299  003F1A  6EE2               	movwf	fsr1h,c
 25300  003F1C  CFDF FFE7          	movff	indf2,indf1
 25301                           
 25302                           ; BSR set to: 0
 25303  003F20  0100               	movlb	0	; () banked
 25304  003F22  2B72               	incf	MIWIInterruptHandler@i& (0+255),f,b
 25305  003F24  D7E4               	goto	i2l13642
 25306  003F26                     i2l13652:
 25307                           
 25308                           ; BSR set to: 0
 25309                           ;drv_mrf_miwi_89xa.c: 1415: }
 25310                           ;drv_mrf_miwi_89xa.c: 1416: MACTxBuffer[0] = 0x02 | 0x04;
 25311  003F26  0E06               	movlw	6
 25312  003F28  0102               	movlb	2	; () banked
 25313  003F2A  6FA0               	movwf	_MACTxBuffer& (0+255),b	;volatile
 25314                           
 25315                           ; BSR set to: 2
 25316                           ;drv_mrf_miwi_89xa.c: 1417: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 25317  003F2C  0100               	movlb	0	; () banked
 25318  003F2E  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25319  003F30  0D42               	mullw	66
 25320  003F32  0E02               	movlw	2
 25321  003F34  26F3               	addwf	prodl,f,c
 25322  003F36  0E00               	movlw	0
 25323  003F38  22F4               	addwfc	prodh,f,c
 25324  003F3A  0E50               	movlw	low _RxPacket
 25325  003F3C  24F3               	addwf	prodl,w,c
 25326  003F3E  6ED9               	movwf	fsr2l,c
 25327  003F40  0E03               	movlw	high _RxPacket
 25328  003F42  20F4               	addwfc	prodh,w,c
 25329  003F44  6EDA               	movwf	fsr2h,c
 25330  003F46  50DF               	movf	indf2,w,c
 25331  003F48  0102               	movlb	2	; () banked
 25332  003F4A  6FA1               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 25333                           
 25334                           ; BSR set to: 2
 25335                           ;drv_mrf_miwi_89xa.c: 1418: INTCON3bits.INT1IF = 0;
 25336  003F4C  90F0               	bcf	intcon3,0,c	;volatile
 25337                           
 25338                           ; BSR set to: 2
 25339                           ;drv_mrf_miwi_89xa.c: 1419: TxPacket(2, 0);
 25340  003F4E  0E00               	movlw	0
 25341  003F50  6E1C               	movwf	i2TxPacket@CCA,c
 25342  003F52  0E02               	movlw	2
 25343  003F54  ECED  F033         	call	i2_TxPacket
 25344                           
 25345                           ;drv_mrf_miwi_89xa.c: 1422: for(i = 0; i < 2; i++)
 25346  003F58  0E00               	movlw	0
 25347  003F5A  0100               	movlb	0	; () banked
 25348  003F5C  6F72               	movwf	MIWIInterruptHandler@i& (0+255),b
 25349  003F5E                     i2l13662:
 25350                           
 25351                           ; BSR set to: 0
 25352  003F5E  0E01               	movlw	1
 25353  003F60  0100               	movlb	0	; () banked
 25354  003F62  6572               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 25355  003F64  D001               	goto	i2l13666
 25356  003F66  D017               	goto	i2l13672
 25357  003F68                     i2l13666:
 25358                           
 25359                           ; BSR set to: 0
 25360                           ;drv_mrf_miwi_89xa.c: 1423: {
 25361                           ;drv_mrf_miwi_89xa.c: 1424: MACTxBuffer[i] = ackPacket[i];
 25362  003F68  0100               	movlb	0	; () banked
 25363  003F6A  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25364  003F6C  0D01               	mullw	1
 25365  003F6E  0E69               	movlw	low MIWIInterruptHandler@ackPacket
 25366  003F70  24F3               	addwf	prodl,w,c
 25367  003F72  6ED9               	movwf	fsr2l,c
 25368  003F74  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 25369  003F76  20F4               	addwfc	prodh,w,c
 25370  003F78  6EDA               	movwf	fsr2h,c
 25371  003F7A  0100               	movlb	0	; () banked
 25372  003F7C  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25373  003F7E  0D01               	mullw	1
 25374  003F80  0EA0               	movlw	low _MACTxBuffer
 25375  003F82  24F3               	addwf	prodl,w,c
 25376  003F84  6EE1               	movwf	fsr1l,c
 25377  003F86  0E02               	movlw	high _MACTxBuffer
 25378  003F88  20F4               	addwfc	prodh,w,c
 25379  003F8A  6EE2               	movwf	fsr1h,c
 25380  003F8C  CFDF FFE7          	movff	indf2,indf1
 25381                           
 25382                           ; BSR set to: 0
 25383  003F90  0100               	movlb	0	; () banked
 25384  003F92  2B72               	incf	MIWIInterruptHandler@i& (0+255),f,b
 25385  003F94  D7E4               	goto	i2l13662
 25386  003F96                     i2l13672:
 25387                           
 25388                           ;drv_mrf_miwi_89xa.c: 1425: }
 25389                           ;drv_mrf_miwi_89xa.c: 1426: }
 25390                           ;drv_mrf_miwi_89xa.c: 1430: for(i = 0; i < 5; i++)
 25391  003F96  0E00               	movlw	0
 25392  003F98  0100               	movlb	0	; () banked
 25393  003F9A  6F72               	movwf	MIWIInterruptHandler@i& (0+255),b
 25394  003F9C                     i2l13674:
 25395                           
 25396                           ; BSR set to: 0
 25397  003F9C  0E04               	movlw	4
 25398  003F9E  0100               	movlb	0	; () banked
 25399  003FA0  6572               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 25400  003FA2  D001               	goto	i2l13678
 25401  003FA4  D056               	goto	i2l13694
 25402  003FA6                     i2l13678:
 25403                           
 25404                           ; BSR set to: 0
 25405                           ;drv_mrf_miwi_89xa.c: 1431: {
 25406                           ;drv_mrf_miwi_89xa.c: 1432: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 25407  003FA6  0100               	movlb	0	; () banked
 25408  003FA8  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25409  003FAA  0D06               	mullw	6
 25410  003FAC  0E28               	movlw	low _AckInfo
 25411  003FAE  24F3               	addwf	prodl,w,c
 25412  003FB0  6ED9               	movwf	fsr2l,c
 25413  003FB2  0E02               	movlw	high _AckInfo
 25414  003FB4  20F4               	addwfc	prodh,w,c
 25415  003FB6  6EDA               	movwf	fsr2h,c
 25416  003FB8  50DF               	movf	indf2,w,c
 25417  003FBA  B4D8               	btfsc	status,2,c
 25418  003FBC  D036               	goto	i2l13684
 25419                           
 25420                           ; BSR set to: 0
 25421  003FBE  0100               	movlb	0	; () banked
 25422  003FC0  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25423  003FC2  0D42               	mullw	66
 25424  003FC4  0E02               	movlw	2
 25425  003FC6  26F3               	addwf	prodl,f,c
 25426  003FC8  0E00               	movlw	0
 25427  003FCA  22F4               	addwfc	prodh,f,c
 25428  003FCC  0E50               	movlw	low _RxPacket
 25429  003FCE  24F3               	addwf	prodl,w,c
 25430  003FD0  6ED9               	movwf	fsr2l,c
 25431  003FD2  0E03               	movlw	high _RxPacket
 25432  003FD4  20F4               	addwfc	prodh,w,c
 25433  003FD6  6EDA               	movwf	fsr2h,c
 25434  003FD8  0100               	movlb	0	; () banked
 25435  003FDA  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25436  003FDC  0D06               	mullw	6
 25437  003FDE  0E01               	movlw	1
 25438  003FE0  26F3               	addwf	prodl,f,c
 25439  003FE2  0E00               	movlw	0
 25440  003FE4  22F4               	addwfc	prodh,f,c
 25441  003FE6  0E28               	movlw	low _AckInfo
 25442  003FE8  24F3               	addwf	prodl,w,c
 25443  003FEA  6EE1               	movwf	fsr1l,c
 25444  003FEC  0E02               	movlw	high _AckInfo
 25445  003FEE  20F4               	addwfc	prodh,w,c
 25446  003FF0  6EE2               	movwf	fsr1h,c
 25447  003FF2  50DE               	movf	postinc2,w,c
 25448  003FF4  18E6               	xorwf	postinc1,w,c
 25449  003FF6  A4D8               	btfss	status,2,c
 25450  003FF8  D018               	goto	i2l13684
 25451                           
 25452                           ; BSR set to: 0
 25453                           ;drv_mrf_miwi_89xa.c: 1433: {
 25454                           ;drv_mrf_miwi_89xa.c: 1434: AckInfo[i].startTick = MiWi_TickGet();
 25455  003FFA  ECBC  F043         	call	i2_MiWi_TickGet	;wreg free
 25456  003FFE  0100               	movlb	0	; () banked
 25457  004000  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25458  004002  0D06               	mullw	6
 25459  004004  0E02               	movlw	2
 25460  004006  26F3               	addwf	prodl,f,c
 25461  004008  0E00               	movlw	0
 25462  00400A  22F4               	addwfc	prodh,f,c
 25463  00400C  0E28               	movlw	low _AckInfo
 25464  00400E  24F3               	addwf	prodl,w,c
 25465  004010  6ED9               	movwf	fsr2l,c
 25466  004012  0E02               	movlw	high _AckInfo
 25467  004014  20F4               	addwfc	prodh,w,c
 25468  004016  6EDA               	movwf	fsr2h,c
 25469  004018  C012  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 25470  00401C  C013  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 25471  004020  C014  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 25472  004024  C015  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 25473                           
 25474                           ;drv_mrf_miwi_89xa.c: 1435: break;
 25475  004028  D014               	goto	i2l13694
 25476  00402A                     i2l13684:
 25477                           
 25478                           ; BSR set to: 0
 25479                           ;drv_mrf_miwi_89xa.c: 1436: }
 25480                           ;drv_mrf_miwi_89xa.c: 1437: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 25481  00402A  0100               	movlb	0	; () banked
 25482  00402C  296F               	incf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 25483  00402E  A4D8               	btfss	status,2,c
 25484  004030  D00D               	goto	i2l13690
 25485                           
 25486                           ; BSR set to: 0
 25487  004032  0100               	movlb	0	; () banked
 25488  004034  5172               	movf	MIWIInterruptHandler@i& (0+255),w,b
 25489  004036  0D06               	mullw	6
 25490  004038  0E28               	movlw	low _AckInfo
 25491  00403A  24F3               	addwf	prodl,w,c
 25492  00403C  6ED9               	movwf	fsr2l,c
 25493  00403E  0E02               	movlw	high _AckInfo
 25494  004040  20F4               	addwfc	prodh,w,c
 25495  004042  6EDA               	movwf	fsr2h,c
 25496  004044  50DF               	movf	indf2,w,c
 25497  004046  B4D8               	btfsc	status,2,c
 25498                           
 25499                           ; BSR set to: 0
 25500                           ;drv_mrf_miwi_89xa.c: 1438: {
 25501                           ;drv_mrf_miwi_89xa.c: 1439: ackInfoIndex = i;
 25502  004048  C072  F06F         	movff	MIWIInterruptHandler@i,MIWIInterruptHandler@ackInfoIndex
 25503  00404C                     i2l13690:
 25504                           
 25505                           ; BSR set to: 0
 25506  00404C  0100               	movlb	0	; () banked
 25507  00404E  2B72               	incf	MIWIInterruptHandler@i& (0+255),f,b
 25508  004050  D7A5               	goto	i2l13674
 25509  004052                     i2l13694:
 25510                           
 25511                           ; BSR set to: 0
 25512                           ;drv_mrf_miwi_89xa.c: 1440: }
 25513                           ;drv_mrf_miwi_89xa.c: 1441: }
 25514                           ;drv_mrf_miwi_89xa.c: 1443: if( i >= 5 )
 25515  004052  0E04               	movlw	4
 25516  004054  0100               	movlb	0	; () banked
 25517  004056  6572               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 25518  004058  D057               	goto	i2l13710
 25519                           
 25520                           ; BSR set to: 0
 25521                           ;drv_mrf_miwi_89xa.c: 1444: {
 25522                           ;drv_mrf_miwi_89xa.c: 1445: if( ackInfoIndex < 5 )
 25523  00405A  0E05               	movlw	5
 25524  00405C  0100               	movlb	0	; () banked
 25525  00405E  616F               	cpfslt	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 25526  004060  D03E               	goto	i2l13704
 25527                           
 25528                           ; BSR set to: 0
 25529                           ;drv_mrf_miwi_89xa.c: 1446: {
 25530                           ;drv_mrf_miwi_89xa.c: 1447: AckInfo[ackInfoIndex].Valid = 1;
 25531  004062  0100               	movlb	0	; () banked
 25532  004064  516F               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 25533  004066  0D06               	mullw	6
 25534  004068  0E28               	movlw	low _AckInfo
 25535  00406A  24F3               	addwf	prodl,w,c
 25536  00406C  6ED9               	movwf	fsr2l,c
 25537  00406E  0E02               	movlw	high _AckInfo
 25538  004070  20F4               	addwfc	prodh,w,c
 25539  004072  6EDA               	movwf	fsr2h,c
 25540  004074  0E01               	movlw	1
 25541  004076  6EDF               	movwf	indf2,c
 25542                           
 25543                           ; BSR set to: 0
 25544                           ;drv_mrf_miwi_89xa.c: 1448: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 25545  004078  0100               	movlb	0	; () banked
 25546  00407A  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25547  00407C  0D42               	mullw	66
 25548  00407E  0E02               	movlw	2
 25549  004080  26F3               	addwf	prodl,f,c
 25550  004082  0E00               	movlw	0
 25551  004084  22F4               	addwfc	prodh,f,c
 25552  004086  0E50               	movlw	low _RxPacket
 25553  004088  24F3               	addwf	prodl,w,c
 25554  00408A  6ED9               	movwf	fsr2l,c
 25555  00408C  0E03               	movlw	high _RxPacket
 25556  00408E  20F4               	addwfc	prodh,w,c
 25557  004090  6EDA               	movwf	fsr2h,c
 25558  004092  0100               	movlb	0	; () banked
 25559  004094  516F               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 25560  004096  0D06               	mullw	6
 25561  004098  0E01               	movlw	1
 25562  00409A  26F3               	addwf	prodl,f,c
 25563  00409C  0E00               	movlw	0
 25564  00409E  22F4               	addwfc	prodh,f,c
 25565  0040A0  0E28               	movlw	low _AckInfo
 25566  0040A2  24F3               	addwf	prodl,w,c
 25567  0040A4  6EE1               	movwf	fsr1l,c
 25568  0040A6  0E02               	movlw	high _AckInfo
 25569  0040A8  20F4               	addwfc	prodh,w,c
 25570  0040AA  6EE2               	movwf	fsr1h,c
 25571  0040AC  CFDF FFE7          	movff	indf2,indf1
 25572                           
 25573                           ; BSR set to: 0
 25574                           ;drv_mrf_miwi_89xa.c: 1449: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 25575  0040B0  ECBC  F043         	call	i2_MiWi_TickGet	;wreg free
 25576  0040B4  0100               	movlb	0	; () banked
 25577  0040B6  516F               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 25578  0040B8  0D06               	mullw	6
 25579  0040BA  0E02               	movlw	2
 25580  0040BC  26F3               	addwf	prodl,f,c
 25581  0040BE  0E00               	movlw	0
 25582  0040C0  22F4               	addwfc	prodh,f,c
 25583  0040C2  0E28               	movlw	low _AckInfo
 25584  0040C4  24F3               	addwf	prodl,w,c
 25585  0040C6  6ED9               	movwf	fsr2l,c
 25586  0040C8  0E02               	movlw	high _AckInfo
 25587  0040CA  20F4               	addwfc	prodh,w,c
 25588  0040CC  6EDA               	movwf	fsr2h,c
 25589  0040CE  C012  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 25590  0040D2  C013  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 25591  0040D6  C014  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 25592  0040DA  C015  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 25593  0040DE                     i2l13704:
 25594                           
 25595                           ; BSR set to: 0
 25596                           ;drv_mrf_miwi_89xa.c: 1450: }
 25597                           ;drv_mrf_miwi_89xa.c: 1453: RxPacket[BankIndex].flags.bits.Valid = 1;
 25598  0040DE  0100               	movlb	0	; () banked
 25599  0040E0  5171               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25600  0040E2  0D42               	mullw	66
 25601  0040E4  0E50               	movlw	low _RxPacket
 25602  0040E6  24F3               	addwf	prodl,w,c
 25603  0040E8  6ED9               	movwf	fsr2l,c
 25604  0040EA  0E03               	movlw	high _RxPacket
 25605  0040EC  20F4               	addwfc	prodh,w,c
 25606  0040EE  6EDA               	movwf	fsr2h,c
 25607  0040F0  0103               	movlb	3	; () banked
 25608  0040F2  80DF               	bsf	indf2,0,c
 25609                           
 25610                           ; BSR set to: 3
 25611                           ;drv_mrf_miwi_89xa.c: 1454: }
 25612                           ;drv_mrf_miwi_89xa.c: 1461: }
 25613                           ;drv_mrf_miwi_89xa.c: 1462: goto RETURN_HERE;
 25614  0040F4  D009               	goto	i2l13710
 25615  0040F6                     i2l13706:
 25616  0040F6  0100               	movlb	0	; () banked
 25617  0040F8  5166               	movf	MIWIInterruptHandler@counter& (0+255),w,b
 25618  0040FA  0100               	movlb	0	; () banked
 25619  0040FC  1167               	iorwf	(MIWIInterruptHandler@counter+1)& (0+255),w,b
 25620  0040FE  B4D8               	btfsc	status,2,c
 25621  004100  D003               	goto	i2l13710
 25622  004102  D5ED               	goto	i2l13588
 25623  004104                     i2l13708:
 25624                           
 25625                           ;drv_mrf_miwi_89xa.c: 1468: else
 25626                           ;drv_mrf_miwi_89xa.c: 1469: {
 25627                           ;drv_mrf_miwi_89xa.c: 1471: IRQ1_Received = 1;
 25628  004104  0E01               	movlw	1
 25629  004106  6E40               	movwf	_IRQ1_Received,c	;volatile
 25630  004108                     i2l13710:
 25631                           
 25632                           ;drv_mrf_miwi_89xa.c: 1475: INTCON3bits.INT1IF = 0;
 25633  004108  90F0               	bcf	intcon3,0,c	;volatile
 25634                           
 25635                           ;drv_mrf_miwi_89xa.c: 1477: __nop();
 25636  00410A  F000               	nop	
 25637  00410C                     i2l13714:
 25638                           
 25639                           ;drv_mrf_miwi_89xa.c: 1478: }
 25640                           ;drv_mrf_miwi_89xa.c: 1482: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 25641  00410C  B2F2               	btfsc	intcon,1,c	;volatile
 25642  00410E  A8F2               	btfss	intcon,4,c	;volatile
 25643  004110  D00E               	goto	i2l13724
 25644                           
 25645                           ;drv_mrf_miwi_89xa.c: 1483: {
 25646                           ;drv_mrf_miwi_89xa.c: 1492: INTCONbits.INT0IF = 0;
 25647  004112  92F2               	bcf	intcon,1,c	;volatile
 25648                           
 25649                           ;drv_mrf_miwi_89xa.c: 1495: if(RF_Mode == 0x60)
 25650  004114  0E60               	movlw	96
 25651  004116  1843               	xorwf	_RF_Mode,w,c
 25652  004118  A4D8               	btfss	status,2,c
 25653  00411A  D009               	goto	i2l13724
 25654                           
 25655                           ;drv_mrf_miwi_89xa.c: 1496: {
 25656                           ;drv_mrf_miwi_89xa.c: 1497: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 25657  00411C  0E28               	movlw	40
 25658  00411E  EC5B  F044         	call	i2_RegisterRead
 25659  004122  0100               	movlb	0	; () banked
 25660  004124  6F60               	movwf	??_MIWIInterruptHandler& (0+255),b
 25661  004126  0100               	movlb	0	; () banked
 25662  004128  90D8               	bcf	status,0,c
 25663  00412A  3160               	rrcf	??_MIWIInterruptHandler& (0+255),w,b
 25664  00412C  6E44               	movwf	_RSSIVal,c
 25665  00412E                     i2l13724:
 25666                           
 25667                           ;drv_mrf_miwi_89xa.c: 1498: }
 25668                           ;drv_mrf_miwi_89xa.c: 1502: }
 25669                           ;drv_mrf_miwi_89xa.c: 1506: if(PIR1bits.TMR1IF)
 25670  00412E  A09E               	btfss	3998,0,c	;volatile
 25671  004130  0012               	return	
 25672                           
 25673                           ;drv_mrf_miwi_89xa.c: 1507: {
 25674                           ;drv_mrf_miwi_89xa.c: 1508: if(PIE1bits.TMR1IE)
 25675  004132  A09D               	btfss	3997,0,c	;volatile
 25676  004134  0012               	return	
 25677                           
 25678                           ;drv_mrf_miwi_89xa.c: 1509: {
 25679                           ;drv_mrf_miwi_89xa.c: 1511: PIR1bits.TMR1IF = 0;
 25680  004136  909E               	bcf	3998,0,c	;volatile
 25681                           
 25682                           ;drv_mrf_miwi_89xa.c: 1512: timerExtension1++;
 25683  004138  0100               	movlb	0	; () banked
 25684  00413A  2BDA               	incf	_timerExtension1& (0+255),f,b	;volatile
 25685                           
 25686                           ; BSR set to: 0
 25687                           ;drv_mrf_miwi_89xa.c: 1513: if(timerExtension1 == 0)
 25688  00413C  0100               	movlb	0	; () banked
 25689  00413E  51DA               	movf	_timerExtension1& (0+255),w,b	;volatile
 25690  004140  A4D8               	btfss	status,2,c
 25691  004142  0012               	return	
 25692                           
 25693                           ; BSR set to: 0
 25694                           ;drv_mrf_miwi_89xa.c: 1514: {
 25695                           ;drv_mrf_miwi_89xa.c: 1515: timerExtension2++;
 25696  004144  2A49               	incf	_timerExtension2,f,c	;volatile
 25697                           
 25698                           ; BSR set to: 0
 25699                           
 25700                           ; BSR set to: 0
 25701                           
 25702                           ; BSR set to: 0
 25703  004146  0012               	return	
 25704  004148                     __end_of_MIWIInterruptHandler:
 25705                           	opt stack 0
 25706                           pclatu	equ	0xFFB
 25707                           pclath	equ	0xFFA
 25708                           tblptru	equ	0xFF8
 25709                           tblptrh	equ	0xFF7
 25710                           tblptrl	equ	0xFF6
 25711                           tablat	equ	0xFF5
 25712                           prodh	equ	0xFF4
 25713                           prodl	equ	0xFF3
 25714                           intcon	equ	0xFF2
 25715                           intcon2	equ	0xFF1
 25716                           intcon3	equ	0xFF0
 25717                           indf0	equ	0xFEF
 25718                           postinc0	equ	0xFEE
 25719                           plusw0	equ	0xFEB
 25720                           fsr0h	equ	0xFEA
 25721                           fsr0l	equ	0xFE9
 25722                           wreg	equ	0xFE8
 25723                           indf1	equ	0xFE7
 25724                           postinc1	equ	0xFE6
 25725                           postdec1	equ	0xFE5
 25726                           fsr1h	equ	0xFE2
 25727                           fsr1l	equ	0xFE1
 25728                           bsr	equ	0xFE0
 25729                           indf2	equ	0xFDF
 25730                           postinc2	equ	0xFDE
 25731                           postdec2	equ	0xFDD
 25732                           plusw2	equ	0xFDB
 25733                           fsr2h	equ	0xFDA
 25734                           fsr2l	equ	0xFD9
 25735                           status	equ	0xFD8
 25736                           
 25737 ;; *************** function i2_TxPacket *****************
 25738 ;; Defined at:
 25739 ;;		line 295 in file "src/miwi/drv_mrf_miwi_89xa.c"
 25740 ;; Parameters:    Size  Location     Type
 25741 ;;  TxPacketLen     1    wreg     unsigned char 
 25742 ;;  CCA             1   27[COMRAM] unsigned char 
 25743 ;; Auto vars:     Size  Location     Type
 25744 ;;  TxPacketLen     1   48[COMRAM] unsigned char 
 25745 ;;  TxPacket        4   40[COMRAM] struct _MIWI_TICK
 25746 ;;  TxPacket        4   36[COMRAM] struct _MIWI_TICK
 25747 ;;  TxPacket        1   50[COMRAM] unsigned char 
 25748 ;;  TxPacket        1   49[COMRAM] unsigned char 
 25749 ;;  TxPacket        1   47[COMRAM] unsigned char 
 25750 ;;  TxPacket        1   46[COMRAM] unsigned char 
 25751 ;;  TxPacket        1   45[COMRAM] unsigned char 
 25752 ;;  TxPacket        1   44[COMRAM] unsigned char 
 25753 ;; Return value:  Size  Location     Type
 25754 ;;                  1    wreg      unsigned char 
 25755 ;; Registers used:
 25756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25757 ;; Tracked objects:
 25758 ;;		On entry : 0/0
 25759 ;;		On exit  : 0/0
 25760 ;;		Unchanged: 0/0
 25761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25762 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25763 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25764 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25765 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25766 ;;Total ram usage:       24 bytes
 25767 ;; Hardware stack levels used:    1
 25768 ;; Hardware stack levels required when called:    3
 25769 ;; This function calls:
 25770 ;;		i2_MiWi_TickGet
 25771 ;;		i2_RegisterRead
 25772 ;;		i2_RegisterSet
 25773 ;;		i2_SetRFMode
 25774 ;;		i2_WriteFIFO
 25775 ;; This function is called by:
 25776 ;;		_MIWIInterruptHandler
 25777 ;; This function uses a non-reentrant model
 25778 ;;
 25779                           
 25780                           	psect	text83
 25781  0067DA                     __ptext83:
 25782                           	opt stack 0
 25783  0067DA                     i2_TxPacket:
 25784                           	opt stack 13
 25785                           
 25786                           ;incstack = 0
 25787                           ;i2TxPacket@TxPacketLen stored from wreg
 25788  0067DA  6E31               	movwf	i2TxPacket@TxPacketLen,c
 25789                           
 25790                           ;drv_mrf_miwi_89xa.c: 297: bool status;
 25791                           ;drv_mrf_miwi_89xa.c: 298: uint8_t i;
 25792                           ;drv_mrf_miwi_89xa.c: 299: MIWI_TICK t1, t2;
 25793                           ;drv_mrf_miwi_89xa.c: 301: uint8_t CCARetries;
 25794                           ;drv_mrf_miwi_89xa.c: 302: uint8_t rssival;
 25795                           ;drv_mrf_miwi_89xa.c: 306: uint8_t reTry = 3;
 25796  0067DC  0E03               	movlw	3
 25797  0067DE  6E2F               	movwf	i2TxPacket@reTry,c
 25798                           
 25799                           ;drv_mrf_miwi_89xa.c: 310: while( reTry-- )
 25800  0067E0  D09C               	goto	i2l13372
 25801  0067E2                     i2l13306:
 25802                           
 25803                           ;drv_mrf_miwi_89xa.c: 312: {
 25804                           ;drv_mrf_miwi_89xa.c: 313: uint8_t allowedTxFailure;
 25805                           ;drv_mrf_miwi_89xa.c: 314: allowedTxFailure = 0;
 25806  0067E2  0E00               	movlw	0
 25807  0067E4  6E30               	movwf	i2TxPacket@allowedTxFailure,c
 25808  0067E6                     i2l258:
 25809                           
 25810                           ;drv_mrf_miwi_89xa.c: 319: hasAck = 0;
 25811  0067E6  0E00               	movlw	0
 25812  0067E8  6E47               	movwf	_hasAck,c	;volatile
 25813                           
 25814                           ;drv_mrf_miwi_89xa.c: 323: CCARetries = 0;
 25815  0067EA  0E00               	movlw	0
 25816  0067EC  6E2E               	movwf	i2TxPacket@CCARetries,c
 25817                           
 25818                           ;drv_mrf_miwi_89xa.c: 325: if( CCA )
 25819  0067EE  501C               	movf	i2TxPacket@CCA,w,c
 25820  0067F0  B4D8               	btfsc	status,2,c
 25821  0067F2  D011               	goto	i2l259
 25822  0067F4                     i2l13310:
 25823                           
 25824                           ;drv_mrf_miwi_89xa.c: 329: rssival = RegisterRead(0x2800>>8);
 25825  0067F4  0E28               	movlw	40
 25826  0067F6  EC5B  F044         	call	i2_RegisterRead
 25827  0067FA  6E33               	movwf	i2TxPacket@rssival,c
 25828                           
 25829                           ;drv_mrf_miwi_89xa.c: 330: rssival = (rssival>>1);
 25830  0067FC  90D8               	bcf	status,0,c
 25831  0067FE  3033               	rrcf	i2TxPacket@rssival,w,c
 25832  006800  6E33               	movwf	i2TxPacket@rssival,c
 25833                           
 25834                           ;drv_mrf_miwi_89xa.c: 332: if( rssival > 65 )
 25835  006802  0E41               	movlw	65
 25836  006804  6433               	cpfsgt	i2TxPacket@rssival,c
 25837  006806  D007               	goto	i2l259
 25838                           
 25839                           ;drv_mrf_miwi_89xa.c: 333: {
 25840                           ;drv_mrf_miwi_89xa.c: 334: if(CCARetries++ > 4 )
 25841  006808  2A2E               	incf	i2TxPacket@CCARetries,f,c
 25842  00680A  042E               	decf	i2TxPacket@CCARetries,w,c
 25843  00680C  6E1D               	movwf	??i2_TxPacket& (0+255),c
 25844  00680E  0E04               	movlw	4
 25845  006810  641D               	cpfsgt	??i2_TxPacket,c
 25846  006812  D7F0               	goto	i2l13310
 25847  006814  0012               	return	
 25848  006816                     i2l259:
 25849                           
 25850                           ;drv_mrf_miwi_89xa.c: 340: }
 25851                           ;drv_mrf_miwi_89xa.c: 341: }
 25852                           ;drv_mrf_miwi_89xa.c: 346: INTCONbits.INT0IE = 0;
 25853  006816  98F2               	bcf	intcon,4,c	;volatile
 25854                           
 25855                           ;drv_mrf_miwi_89xa.c: 348: INTCON3bits.INT1IE = 0;
 25856  006818  96F0               	bcf	intcon3,3,c	;volatile
 25857                           
 25858                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x20);
 25859  00681A  0E20               	movlw	32
 25860  00681C  ECEA  F040         	call	i2_SetRFMode
 25861                           
 25862                           ;drv_mrf_miwi_89xa.c: 350: RegisterSet(0x1A00 | (0xC8) | 0x01);
 25863  006820  0E1A               	movlw	26
 25864  006822  6E15               	movwf	i2RegisterSet@setting+1,c
 25865  006824  0EC9               	movlw	201
 25866  006826  6E14               	movwf	i2RegisterSet@setting,c
 25867  006828  ECF9  F044         	call	i2_RegisterSet	;wreg free
 25868                           
 25869                           ;drv_mrf_miwi_89xa.c: 351: WriteFIFO(TxPacketLen);
 25870  00682C  5031               	movf	i2TxPacket@TxPacketLen,w,c
 25871  00682E  EC31  F045         	call	i2_WriteFIFO
 25872                           
 25873                           ;drv_mrf_miwi_89xa.c: 352: for(i=0; i< TxPacketLen; i++)
 25874  006832  0E00               	movlw	0
 25875  006834  6E32               	movwf	i2TxPacket@i,c
 25876  006836  D00C               	goto	i2l13332
 25877  006838                     i2l13328:
 25878                           
 25879                           ;drv_mrf_miwi_89xa.c: 353: {
 25880                           ;drv_mrf_miwi_89xa.c: 354: WriteFIFO(MACTxBuffer[i]);
 25881  006838  5032               	movf	i2TxPacket@i,w,c
 25882  00683A  0D01               	mullw	1
 25883  00683C  0EA0               	movlw	low _MACTxBuffer
 25884  00683E  24F3               	addwf	prodl,w,c
 25885  006840  6ED9               	movwf	fsr2l,c
 25886  006842  0E02               	movlw	high _MACTxBuffer
 25887  006844  20F4               	addwfc	prodh,w,c
 25888  006846  6EDA               	movwf	fsr2h,c
 25889  006848  50DF               	movf	indf2,w,c
 25890  00684A  EC31  F045         	call	i2_WriteFIFO
 25891  00684E  2A32               	incf	i2TxPacket@i,f,c
 25892  006850                     i2l13332:
 25893  006850  5031               	movf	i2TxPacket@TxPacketLen,w,c
 25894  006852  5C32               	subwf	i2TxPacket@i,w,c
 25895  006854  A0D8               	btfss	status,0,c
 25896  006856  D7F0               	goto	i2l13328
 25897                           
 25898                           ;drv_mrf_miwi_89xa.c: 355: }
 25899                           ;drv_mrf_miwi_89xa.c: 356: SetRFMode(0x80);
 25900  006858  0E80               	movlw	128
 25901  00685A  ECEA  F040         	call	i2_SetRFMode
 25902                           
 25903                           ;drv_mrf_miwi_89xa.c: 358: INTCONbits.INT0IE = 1;
 25904  00685E  88F2               	bsf	intcon,4,c	;volatile
 25905                           
 25906                           ;drv_mrf_miwi_89xa.c: 360: INTCON3bits.INT1IE = 1;
 25907  006860  86F0               	bsf	intcon3,3,c	;volatile
 25908  006862                     i2l13340:
 25909  006862  5040               	movf	_IRQ1_Received,w,c	;volatile
 25910  006864  B4D8               	btfsc	status,2,c
 25911  006866  B0F0               	btfsc	intcon3,0,c	;volatile
 25912  006868  D001               	goto	i2l13344
 25913  00686A  D7FB               	goto	i2l13340
 25914  00686C                     i2l13344:
 25915                           
 25916                           ;drv_mrf_miwi_89xa.c: 364: };
 25917                           ;drv_mrf_miwi_89xa.c: 368: IRQ1_Received = 0;
 25918  00686C  0E00               	movlw	0
 25919  00686E  6E40               	movwf	_IRQ1_Received,c	;volatile
 25920                           
 25921                           ;drv_mrf_miwi_89xa.c: 369: SetRFMode(0x20);
 25922  006870  0E20               	movlw	32
 25923  006872  ECEA  F040         	call	i2_SetRFMode
 25924                           
 25925                           ;drv_mrf_miwi_89xa.c: 370: SetRFMode(0x60);
 25926  006876  0E60               	movlw	96
 25927  006878  ECEA  F040         	call	i2_SetRFMode
 25928                           
 25929                           ;drv_mrf_miwi_89xa.c: 373: if( (MACTxBuffer[0] & 0x20) > 0 )
 25930  00687C  0102               	movlb	2	; () banked
 25931  00687E  ABA0               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 25932  006880  D049               	goto	i2l13370
 25933                           
 25934                           ; BSR set to: 2
 25935                           ;drv_mrf_miwi_89xa.c: 374: {
 25936                           ;drv_mrf_miwi_89xa.c: 375: TxMACSeq = MACTxBuffer[1];
 25937  006882  C2A1  F046         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 25938                           
 25939                           ; BSR set to: 2
 25940                           ;drv_mrf_miwi_89xa.c: 376: t1 = MiWi_TickGet();
 25941  006886  ECBC  F043         	call	i2_MiWi_TickGet	;wreg free
 25942  00688A  C012  F025         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 25943  00688E  C013  F026         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 25944  006892  C014  F027         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 25945  006896  C015  F028         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 25946  00689A                     i2l13356:
 25947                           
 25948                           ;drv_mrf_miwi_89xa.c: 378: {
 25949                           ;drv_mrf_miwi_89xa.c: 379: if( hasAck )
 25950  00689A  5047               	movf	_hasAck,w,c	;volatile
 25951  00689C  B4D8               	btfsc	status,2,c
 25952  00689E  D003               	goto	i2l13360
 25953                           
 25954                           ;drv_mrf_miwi_89xa.c: 380: {
 25955                           ;drv_mrf_miwi_89xa.c: 381: status = 1;
 25956  0068A0  0E01               	movlw	1
 25957  0068A2  6E2D               	movwf	i2TxPacket@status,c
 25958                           
 25959                           ;drv_mrf_miwi_89xa.c: 382: goto TX_END_HERE;
 25960  0068A4  0012               	return	
 25961  0068A6                     i2l13360:
 25962                           
 25963                           ;drv_mrf_miwi_89xa.c: 383: }
 25964                           ;drv_mrf_miwi_89xa.c: 384: t2 = MiWi_TickGet();
 25965  0068A6  ECBC  F043         	call	i2_MiWi_TickGet	;wreg free
 25966  0068AA  C012  F029         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 25967  0068AE  C013  F02A         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 25968  0068B2  C014  F02B         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 25969  0068B6  C015  F02C         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 25970                           
 25971                           ;drv_mrf_miwi_89xa.c: 385: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 25972  0068BA  C025  F01D         	movff	i2TxPacket@t1,??i2_TxPacket
 25973  0068BE  C026  F01E         	movff	i2TxPacket@t1+1,??i2_TxPacket+1
 25974  0068C2  C027  F01F         	movff	i2TxPacket@t1+2,??i2_TxPacket+2
 25975  0068C6  C028  F020         	movff	i2TxPacket@t1+3,??i2_TxPacket+3
 25976  0068CA  1E1D               	comf	??i2_TxPacket,f,c
 25977  0068CC  1E1E               	comf	??i2_TxPacket+1,f,c
 25978  0068CE  1E1F               	comf	??i2_TxPacket+2,f,c
 25979  0068D0  1E20               	comf	??i2_TxPacket+3,f,c
 25980  0068D2  2A1D               	incf	??i2_TxPacket,f,c
 25981  0068D4  0E00               	movlw	0
 25982  0068D6  221E               	addwfc	??i2_TxPacket+1,f,c
 25983  0068D8  221F               	addwfc	??i2_TxPacket+2,f,c
 25984  0068DA  2220               	addwfc	??i2_TxPacket+3,f,c
 25985  0068DC  5029               	movf	i2TxPacket@t2,w,c
 25986  0068DE  241D               	addwf	??i2_TxPacket,w,c
 25987  0068E0  6E21               	movwf	(??i2_TxPacket+4)& (0+255),c
 25988  0068E2  502A               	movf	i2TxPacket@t2+1,w,c
 25989  0068E4  201E               	addwfc	??i2_TxPacket+1,w,c
 25990  0068E6  6E22               	movwf	(??i2_TxPacket+5)& (0+255),c
 25991  0068E8  502B               	movf	i2TxPacket@t2+2,w,c
 25992  0068EA  201F               	addwfc	??i2_TxPacket+2,w,c
 25993  0068EC  6E23               	movwf	(??i2_TxPacket+6)& (0+255),c
 25994  0068EE  502C               	movf	i2TxPacket@t2+3,w,c
 25995  0068F0  2020               	addwfc	??i2_TxPacket+3,w,c
 25996  0068F2  6E24               	movwf	(??i2_TxPacket+7)& (0+255),c
 25997  0068F4  5024               	movf	??i2_TxPacket+7,w,c
 25998  0068F6  1023               	iorwf	??i2_TxPacket+6,w,c
 25999  0068F8  E106               	bnz	i2l13366
 26000  0068FA  0EA9               	movlw	169
 26001  0068FC  5C21               	subwf	??i2_TxPacket+4,w,c
 26002  0068FE  0E61               	movlw	97
 26003  006900  5822               	subwfb	??i2_TxPacket+5,w,c
 26004  006902  A0D8               	btfss	status,0,c
 26005  006904  D7CA               	goto	i2l13356
 26006  006906                     i2l13366:
 26007                           
 26008                           ;drv_mrf_miwi_89xa.c: 388: }
 26009                           ;drv_mrf_miwi_89xa.c: 389: }
 26010                           ;drv_mrf_miwi_89xa.c: 391: if(allowedTxFailure++ <= 3)
 26011  006906  2A30               	incf	i2TxPacket@allowedTxFailure,f,c
 26012  006908  0430               	decf	i2TxPacket@allowedTxFailure,w,c
 26013  00690A  6E1D               	movwf	??i2_TxPacket& (0+255),c
 26014  00690C  0E04               	movlw	4
 26015  00690E  601D               	cpfslt	??i2_TxPacket,c
 26016  006910  D004               	goto	i2l13372
 26017  006912  D769               	goto	i2l258
 26018  006914                     i2l13370:
 26019                           
 26020                           ;drv_mrf_miwi_89xa.c: 395: else
 26021                           ;drv_mrf_miwi_89xa.c: 397: {
 26022                           ;drv_mrf_miwi_89xa.c: 398: status = 1;
 26023  006914  0E01               	movlw	1
 26024  006916  6E2D               	movwf	i2TxPacket@status,c
 26025                           
 26026                           ;drv_mrf_miwi_89xa.c: 399: goto TX_END_HERE;
 26027  006918  0012               	return	
 26028  00691A                     i2l13372:
 26029  00691A  062F               	decf	i2TxPacket@reTry,f,c
 26030  00691C  282F               	incf	i2TxPacket@reTry,w,c
 26031  00691E  A4D8               	btfss	status,2,c
 26032  006920  D760               	goto	i2l13306
 26033                           
 26034                           ;drv_mrf_miwi_89xa.c: 400: }
 26035                           ;drv_mrf_miwi_89xa.c: 401: }
 26036                           ;drv_mrf_miwi_89xa.c: 403: status = 0;
 26037  006922  0E00               	movlw	0
 26038  006924  6E2D               	movwf	i2TxPacket@status,c
 26039                           
 26040                           ;drv_mrf_miwi_89xa.c: 404: TX_END_HERE:
 26041  006926  0012               	return	
 26042  006928                     __end_ofi2_TxPacket:
 26043                           	opt stack 0
 26044                           pclatu	equ	0xFFB
 26045                           pclath	equ	0xFFA
 26046                           tblptru	equ	0xFF8
 26047                           tblptrh	equ	0xFF7
 26048                           tblptrl	equ	0xFF6
 26049                           tablat	equ	0xFF5
 26050                           prodh	equ	0xFF4
 26051                           prodl	equ	0xFF3
 26052                           intcon	equ	0xFF2
 26053                           intcon2	equ	0xFF1
 26054                           intcon3	equ	0xFF0
 26055                           indf0	equ	0xFEF
 26056                           postinc0	equ	0xFEE
 26057                           plusw0	equ	0xFEB
 26058                           fsr0h	equ	0xFEA
 26059                           fsr0l	equ	0xFE9
 26060                           wreg	equ	0xFE8
 26061                           indf1	equ	0xFE7
 26062                           postinc1	equ	0xFE6
 26063                           postdec1	equ	0xFE5
 26064                           fsr1h	equ	0xFE2
 26065                           fsr1l	equ	0xFE1
 26066                           bsr	equ	0xFE0
 26067                           indf2	equ	0xFDF
 26068                           postinc2	equ	0xFDE
 26069                           postdec2	equ	0xFDD
 26070                           plusw2	equ	0xFDB
 26071                           fsr2h	equ	0xFDA
 26072                           fsr2l	equ	0xFD9
 26073                           status	equ	0xFD8
 26074                           
 26075 ;; *************** function i2_WriteFIFO *****************
 26076 ;; Defined at:
 26077 ;;		line 251 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26078 ;; Parameters:    Size  Location     Type
 26079 ;;  Data            1    wreg     unsigned char 
 26080 ;; Auto vars:     Size  Location     Type
 26081 ;;  Data            1   19[COMRAM] unsigned char 
 26082 ;;  WriteFIFO       1   21[COMRAM] unsigned char 
 26083 ;;  WriteFIFO       1   20[COMRAM] unsigned char 
 26084 ;; Return value:  Size  Location     Type
 26085 ;;		None               void
 26086 ;; Registers used:
 26087 ;;		wreg, status,2, cstack
 26088 ;; Tracked objects:
 26089 ;;		On entry : 0/0
 26090 ;;		On exit  : 0/0
 26091 ;;		Unchanged: 0/0
 26092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26094 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26096 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26097 ;;Total ram usage:        3 bytes
 26098 ;; Hardware stack levels used:    1
 26099 ;; Hardware stack levels required when called:    1
 26100 ;; This function calls:
 26101 ;;		i2_SPIPut
 26102 ;; This function is called by:
 26103 ;;		i2_TxPacket
 26104 ;; This function uses a non-reentrant model
 26105 ;;
 26106                           
 26107                           	psect	text84
 26108  008A62                     __ptext84:
 26109                           	opt stack 0
 26110  008A62                     i2_WriteFIFO:
 26111                           	opt stack 14
 26112                           
 26113                           ;incstack = 0
 26114                           ;i2WriteFIFO@Data stored from wreg
 26115  008A62  6E14               	movwf	i2WriteFIFO@Data,c
 26116                           
 26117                           ;drv_mrf_miwi_89xa.c: 253: uint8_t IRQ1select = INTCON3bits.INT1IE;
 26118  008A64  0E00               	movlw	0
 26119  008A66  B6F0               	btfsc	intcon3,3,c	;volatile
 26120  008A68  0E01               	movlw	1
 26121  008A6A  6E15               	movwf	i2WriteFIFO@IRQ1select,c
 26122                           
 26123                           ;drv_mrf_miwi_89xa.c: 255: bool IRQ0select = INTCONbits.INT0IE;
 26124  008A6C  0E00               	movlw	0
 26125  008A6E  B8F2               	btfsc	intcon,4,c	;volatile
 26126  008A70  0E01               	movlw	1
 26127  008A72  6E16               	movwf	i2WriteFIFO@IRQ0select,c
 26128                           
 26129                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.INT0IE = 0;
 26130  008A74  98F2               	bcf	intcon,4,c	;volatile
 26131                           
 26132                           ;drv_mrf_miwi_89xa.c: 260: INTCON3bits.INT1IE = 0;
 26133  008A76  96F0               	bcf	intcon3,3,c	;volatile
 26134                           
 26135                           ;drv_mrf_miwi_89xa.c: 261: LATCbits.LATC6 = 0;
 26136  008A78  9C8B               	bcf	3979,6,c	;volatile
 26137                           
 26138                           ;drv_mrf_miwi_89xa.c: 262: SPIPut(Data);
 26139  008A7A  5014               	movf	i2WriteFIFO@Data,w,c
 26140  008A7C  ECE6  F045         	call	i2_SPIPut
 26141                           
 26142                           ;drv_mrf_miwi_89xa.c: 263: LATCbits.LATC6 = 1;
 26143  008A80  8C8B               	bsf	3979,6,c	;volatile
 26144                           
 26145                           ;drv_mrf_miwi_89xa.c: 264: INTCON3bits.INT1IE = IRQ1select;
 26146  008A82  B015               	btfsc	i2WriteFIFO@IRQ1select,0,c
 26147  008A84  D002               	bra	i2u1465_45
 26148  008A86  96F0               	bcf	intcon3,3,c	;volatile
 26149  008A88  D001               	bra	i2u1465_46
 26150  008A8A                     i2u1465_45:
 26151  008A8A  86F0               	bsf	intcon3,3,c	;volatile
 26152  008A8C                     i2u1465_46:
 26153                           
 26154                           ;drv_mrf_miwi_89xa.c: 267: INTCONbits.INT0IE = IRQ0select;
 26155  008A8C  B016               	btfsc	i2WriteFIFO@IRQ0select,0,c
 26156  008A8E  D002               	bra	i2u1466_45
 26157  008A90  98F2               	bcf	intcon,4,c	;volatile
 26158  008A92  D001               	bra	i2u1466_46
 26159  008A94                     i2u1466_45:
 26160  008A94  88F2               	bsf	intcon,4,c	;volatile
 26161  008A96                     i2u1466_46:
 26162  008A96  0012               	return		;funcret
 26163  008A98                     __end_ofi2_WriteFIFO:
 26164                           	opt stack 0
 26165                           pclatu	equ	0xFFB
 26166                           pclath	equ	0xFFA
 26167                           tblptru	equ	0xFF8
 26168                           tblptrh	equ	0xFF7
 26169                           tblptrl	equ	0xFF6
 26170                           tablat	equ	0xFF5
 26171                           prodh	equ	0xFF4
 26172                           prodl	equ	0xFF3
 26173                           intcon	equ	0xFF2
 26174                           intcon2	equ	0xFF1
 26175                           intcon3	equ	0xFF0
 26176                           indf0	equ	0xFEF
 26177                           postinc0	equ	0xFEE
 26178                           plusw0	equ	0xFEB
 26179                           fsr0h	equ	0xFEA
 26180                           fsr0l	equ	0xFE9
 26181                           wreg	equ	0xFE8
 26182                           indf1	equ	0xFE7
 26183                           postinc1	equ	0xFE6
 26184                           postdec1	equ	0xFE5
 26185                           fsr1h	equ	0xFE2
 26186                           fsr1l	equ	0xFE1
 26187                           bsr	equ	0xFE0
 26188                           indf2	equ	0xFDF
 26189                           postinc2	equ	0xFDE
 26190                           postdec2	equ	0xFDD
 26191                           plusw2	equ	0xFDB
 26192                           fsr2h	equ	0xFDA
 26193                           fsr2l	equ	0xFD9
 26194                           status	equ	0xFD8
 26195                           
 26196 ;; *************** function i2_SetRFMode *****************
 26197 ;; Defined at:
 26198 ;;		line 674 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26199 ;; Parameters:    Size  Location     Type
 26200 ;;  mode            1    wreg     unsigned char 
 26201 ;; Auto vars:     Size  Location     Type
 26202 ;;  mode            1   23[COMRAM] unsigned char 
 26203 ;; Return value:  Size  Location     Type
 26204 ;;		None               void
 26205 ;; Registers used:
 26206 ;;		wreg, status,2, status,0, cstack
 26207 ;; Tracked objects:
 26208 ;;		On entry : 0/0
 26209 ;;		On exit  : 0/0
 26210 ;;		Unchanged: 0/0
 26211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26215 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26216 ;;Total ram usage:        1 bytes
 26217 ;; Hardware stack levels used:    1
 26218 ;; Hardware stack levels required when called:    2
 26219 ;; This function calls:
 26220 ;;		i2_RegisterSet
 26221 ;; This function is called by:
 26222 ;;		i2_TxPacket
 26223 ;; This function uses a non-reentrant model
 26224 ;;
 26225                           
 26226                           	psect	text85
 26227  0081D4                     __ptext85:
 26228                           	opt stack 0
 26229  0081D4                     i2_SetRFMode:
 26230                           	opt stack 13
 26231                           
 26232                           ;incstack = 0
 26233                           ;i2SetRFMode@mode stored from wreg
 26234  0081D4  6E18               	movwf	i2SetRFMode@mode,c
 26235                           
 26236                           ;drv_mrf_miwi_89xa.c: 676: switch (mode) {
 26237  0081D6  D02D               	goto	i2l12638
 26238  0081D8                     i2l12616:
 26239                           
 26240                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 26241  0081D8  0E00               	movlw	0
 26242  0081DA  6E15               	movwf	i2RegisterSet@setting+1,c
 26243  0081DC  0E96               	movlw	150
 26244  0081DE  6E14               	movwf	i2RegisterSet@setting,c
 26245  0081E0  ECF9  F044         	call	i2_RegisterSet	;wreg free
 26246                           
 26247                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x80;
 26248  0081E4  0E80               	movlw	128
 26249  0081E6  6E43               	movwf	_RF_Mode,c
 26250                           
 26251                           ;drv_mrf_miwi_89xa.c: 680: break;
 26252  0081E8  0012               	return	
 26253  0081EA                     i2l12620:
 26254                           
 26255                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 26256  0081EA  0E00               	movlw	0
 26257  0081EC  6E15               	movwf	i2RegisterSet@setting+1,c
 26258  0081EE  0E76               	movlw	118
 26259  0081F0  6E14               	movwf	i2RegisterSet@setting,c
 26260  0081F2  ECF9  F044         	call	i2_RegisterSet	;wreg free
 26261                           
 26262                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x60;
 26263  0081F6  0E60               	movlw	96
 26264  0081F8  6E43               	movwf	_RF_Mode,c
 26265                           
 26266                           ;drv_mrf_miwi_89xa.c: 684: break;
 26267  0081FA  0012               	return	
 26268  0081FC                     i2l12624:
 26269                           
 26270                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 26271  0081FC  0E00               	movlw	0
 26272  0081FE  6E15               	movwf	i2RegisterSet@setting+1,c
 26273  008200  0E56               	movlw	86
 26274  008202  6E14               	movwf	i2RegisterSet@setting,c
 26275  008204  ECF9  F044         	call	i2_RegisterSet	;wreg free
 26276                           
 26277                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x40;
 26278  008208  0E40               	movlw	64
 26279  00820A  6E43               	movwf	_RF_Mode,c
 26280                           
 26281                           ;drv_mrf_miwi_89xa.c: 688: break;
 26282  00820C  0012               	return	
 26283  00820E                     i2l12628:
 26284                           
 26285                           ;drv_mrf_miwi_89xa.c: 690: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 26286  00820E  0E00               	movlw	0
 26287  008210  6E15               	movwf	i2RegisterSet@setting+1,c
 26288  008212  0E36               	movlw	54
 26289  008214  6E14               	movwf	i2RegisterSet@setting,c
 26290  008216  ECF9  F044         	call	i2_RegisterSet	;wreg free
 26291                           
 26292                           ;drv_mrf_miwi_89xa.c: 691: RF_Mode = 0x20;
 26293  00821A  0E20               	movlw	32
 26294  00821C  6E43               	movwf	_RF_Mode,c
 26295                           
 26296                           ;drv_mrf_miwi_89xa.c: 692: break;
 26297  00821E  0012               	return	
 26298  008220                     i2l12632:
 26299                           
 26300                           ;drv_mrf_miwi_89xa.c: 694: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 26301  008220  0E00               	movlw	0
 26302  008222  6E15               	movwf	i2RegisterSet@setting+1,c
 26303  008224  0E16               	movlw	22
 26304  008226  6E14               	movwf	i2RegisterSet@setting,c
 26305  008228  ECF9  F044         	call	i2_RegisterSet	;wreg free
 26306                           
 26307                           ;drv_mrf_miwi_89xa.c: 695: RF_Mode = 0x00;
 26308  00822C  0E00               	movlw	0
 26309  00822E  6E43               	movwf	_RF_Mode,c
 26310                           
 26311                           ;drv_mrf_miwi_89xa.c: 697: }
 26312                           
 26313                           ;drv_mrf_miwi_89xa.c: 696: break;
 26314  008230  0012               	return	
 26315  008232                     i2l12638:
 26316  008232  5018               	movf	i2SetRFMode@mode,w,c
 26317                           
 26318                           ; Switch size 1, requested type "space"
 26319                           ; Number of cases is 5, Range of values is 0 to 128
 26320                           ; switch strategies available:
 26321                           ; Name         Instructions Cycles
 26322                           ; simple_byte           16     9 (average)
 26323                           ;	Chosen strategy is simple_byte
 26324  008234  0A00               	xorlw	0	; case 0
 26325  008236  B4D8               	btfsc	status,2,c
 26326  008238  D7F3               	goto	i2l12632
 26327  00823A  0A20               	xorlw	32	; case 32
 26328  00823C  B4D8               	btfsc	status,2,c
 26329  00823E  D7E7               	goto	i2l12628
 26330  008240  0A60               	xorlw	96	; case 64
 26331  008242  B4D8               	btfsc	status,2,c
 26332  008244  D7DB               	goto	i2l12624
 26333  008246  0A20               	xorlw	32	; case 96
 26334  008248  B4D8               	btfsc	status,2,c
 26335  00824A  D7CF               	goto	i2l12620
 26336  00824C  0AE0               	xorlw	224	; case 128
 26337  00824E  A4D8               	btfss	status,2,c
 26338  008250  0012               	return	
 26339  008252  D7C2               	goto	i2l12616
 26340  008254                     __end_ofi2_SetRFMode:
 26341                           	opt stack 0
 26342                           pclatu	equ	0xFFB
 26343                           pclath	equ	0xFFA
 26344                           tblptru	equ	0xFF8
 26345                           tblptrh	equ	0xFF7
 26346                           tblptrl	equ	0xFF6
 26347                           tablat	equ	0xFF5
 26348                           prodh	equ	0xFF4
 26349                           prodl	equ	0xFF3
 26350                           intcon	equ	0xFF2
 26351                           intcon2	equ	0xFF1
 26352                           intcon3	equ	0xFF0
 26353                           indf0	equ	0xFEF
 26354                           postinc0	equ	0xFEE
 26355                           plusw0	equ	0xFEB
 26356                           fsr0h	equ	0xFEA
 26357                           fsr0l	equ	0xFE9
 26358                           wreg	equ	0xFE8
 26359                           indf1	equ	0xFE7
 26360                           postinc1	equ	0xFE6
 26361                           postdec1	equ	0xFE5
 26362                           fsr1h	equ	0xFE2
 26363                           fsr1l	equ	0xFE1
 26364                           bsr	equ	0xFE0
 26365                           indf2	equ	0xFDF
 26366                           postinc2	equ	0xFDE
 26367                           postdec2	equ	0xFDD
 26368                           plusw2	equ	0xFDB
 26369                           fsr2h	equ	0xFDA
 26370                           fsr2l	equ	0xFD9
 26371                           status	equ	0xFD8
 26372                           
 26373 ;; *************** function i2_RegisterSet *****************
 26374 ;; Defined at:
 26375 ;;		line 171 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26376 ;; Parameters:    Size  Location     Type
 26377 ;;  setting         2   19[COMRAM] unsigned int 
 26378 ;; Auto vars:     Size  Location     Type
 26379 ;;  RegisterSet     1   22[COMRAM] unsigned char 
 26380 ;;  RegisterSet     1   21[COMRAM] unsigned char 
 26381 ;; Return value:  Size  Location     Type
 26382 ;;		None               void
 26383 ;; Registers used:
 26384 ;;		wreg, status,2, cstack
 26385 ;; Tracked objects:
 26386 ;;		On entry : 0/0
 26387 ;;		On exit  : 0/0
 26388 ;;		Unchanged: 0/0
 26389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26394 ;;Total ram usage:        4 bytes
 26395 ;; Hardware stack levels used:    1
 26396 ;; Hardware stack levels required when called:    1
 26397 ;; This function calls:
 26398 ;;		i2_SPIPut
 26399 ;; This function is called by:
 26400 ;;		i2_TxPacket
 26401 ;;		i2_SetRFMode
 26402 ;; This function uses a non-reentrant model
 26403 ;;
 26404                           
 26405                           	psect	text86
 26406  0089F2                     __ptext86:
 26407                           	opt stack 0
 26408  0089F2                     i2_RegisterSet:
 26409                           	opt stack 13
 26410                           
 26411                           ;drv_mrf_miwi_89xa.c: 173: uint8_t IRQ1select = INTCON3bits.INT1IE;
 26412                           
 26413                           ;incstack = 0
 26414  0089F2  0E00               	movlw	0
 26415  0089F4  B6F0               	btfsc	intcon3,3,c	;volatile
 26416  0089F6  0E01               	movlw	1
 26417  0089F8  6E16               	movwf	i2RegisterSet@IRQ1select,c
 26418                           
 26419                           ;drv_mrf_miwi_89xa.c: 175: bool IRQ0select = INTCONbits.INT0IE;
 26420  0089FA  0E00               	movlw	0
 26421  0089FC  B8F2               	btfsc	intcon,4,c	;volatile
 26422  0089FE  0E01               	movlw	1
 26423  008A00  6E17               	movwf	i2RegisterSet@IRQ0select,c
 26424                           
 26425                           ;drv_mrf_miwi_89xa.c: 176: INTCONbits.INT0IE = 0;
 26426  008A02  98F2               	bcf	intcon,4,c	;volatile
 26427                           
 26428                           ;drv_mrf_miwi_89xa.c: 179: INTCON3bits.INT1IE = 0;
 26429  008A04  96F0               	bcf	intcon3,3,c	;volatile
 26430                           
 26431                           ;drv_mrf_miwi_89xa.c: 180: LATBbits.LATB3 = 0;
 26432  008A06  968A               	bcf	3978,3,c	;volatile
 26433                           
 26434                           ;drv_mrf_miwi_89xa.c: 181: SPIPut((uint8_t)(setting >> 8));
 26435  008A08  5015               	movf	i2RegisterSet@setting+1,w,c
 26436  008A0A  ECE6  F045         	call	i2_SPIPut
 26437                           
 26438                           ;drv_mrf_miwi_89xa.c: 182: SPIPut((uint8_t)setting);
 26439  008A0E  5014               	movf	i2RegisterSet@setting,w,c
 26440  008A10  ECE6  F045         	call	i2_SPIPut
 26441                           
 26442                           ;drv_mrf_miwi_89xa.c: 183: LATBbits.LATB3 = 1;
 26443  008A14  868A               	bsf	3978,3,c	;volatile
 26444                           
 26445                           ;drv_mrf_miwi_89xa.c: 184: INTCON3bits.INT1IE = IRQ1select;
 26446  008A16  B016               	btfsc	i2RegisterSet@IRQ1select,0,c
 26447  008A18  D002               	bra	i2u1403_45
 26448  008A1A  96F0               	bcf	intcon3,3,c	;volatile
 26449  008A1C  D001               	bra	i2u1403_46
 26450  008A1E                     i2u1403_45:
 26451  008A1E  86F0               	bsf	intcon3,3,c	;volatile
 26452  008A20                     i2u1403_46:
 26453                           
 26454                           ;drv_mrf_miwi_89xa.c: 187: INTCONbits.INT0IE = IRQ0select;
 26455  008A20  B017               	btfsc	i2RegisterSet@IRQ0select,0,c
 26456  008A22  D002               	bra	i2u1404_45
 26457  008A24  98F2               	bcf	intcon,4,c	;volatile
 26458  008A26  D001               	bra	i2u1404_46
 26459  008A28                     i2u1404_45:
 26460  008A28  88F2               	bsf	intcon,4,c	;volatile
 26461  008A2A                     i2u1404_46:
 26462  008A2A  0012               	return		;funcret
 26463  008A2C                     __end_ofi2_RegisterSet:
 26464                           	opt stack 0
 26465                           pclatu	equ	0xFFB
 26466                           pclath	equ	0xFFA
 26467                           tblptru	equ	0xFF8
 26468                           tblptrh	equ	0xFF7
 26469                           tblptrl	equ	0xFF6
 26470                           tablat	equ	0xFF5
 26471                           prodh	equ	0xFF4
 26472                           prodl	equ	0xFF3
 26473                           intcon	equ	0xFF2
 26474                           intcon2	equ	0xFF1
 26475                           intcon3	equ	0xFF0
 26476                           indf0	equ	0xFEF
 26477                           postinc0	equ	0xFEE
 26478                           plusw0	equ	0xFEB
 26479                           fsr0h	equ	0xFEA
 26480                           fsr0l	equ	0xFE9
 26481                           wreg	equ	0xFE8
 26482                           indf1	equ	0xFE7
 26483                           postinc1	equ	0xFE6
 26484                           postdec1	equ	0xFE5
 26485                           fsr1h	equ	0xFE2
 26486                           fsr1l	equ	0xFE1
 26487                           bsr	equ	0xFE0
 26488                           indf2	equ	0xFDF
 26489                           postinc2	equ	0xFDE
 26490                           postdec2	equ	0xFDD
 26491                           plusw2	equ	0xFDB
 26492                           fsr2h	equ	0xFDA
 26493                           fsr2l	equ	0xFD9
 26494                           status	equ	0xFD8
 26495                           
 26496 ;; *************** function i2_RegisterRead *****************
 26497 ;; Defined at:
 26498 ;;		line 207 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26499 ;; Parameters:    Size  Location     Type
 26500 ;;  address         1    wreg     unsigned char 
 26501 ;; Auto vars:     Size  Location     Type
 26502 ;;  address         1   22[COMRAM] unsigned char 
 26503 ;;  RegisterRead    1   21[COMRAM] unsigned char 
 26504 ;;  RegisterRead    1   20[COMRAM] unsigned char 
 26505 ;;  RegisterRead    1   19[COMRAM] unsigned char 
 26506 ;; Return value:  Size  Location     Type
 26507 ;;                  1    wreg      unsigned char 
 26508 ;; Registers used:
 26509 ;;		wreg, status,2, status,0, cstack
 26510 ;; Tracked objects:
 26511 ;;		On entry : 0/0
 26512 ;;		On exit  : 0/0
 26513 ;;		Unchanged: 0/0
 26514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26516 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26518 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26519 ;;Total ram usage:        4 bytes
 26520 ;; Hardware stack levels used:    1
 26521 ;; Hardware stack levels required when called:    2
 26522 ;; This function calls:
 26523 ;;		i2_SPIGet
 26524 ;;		i2_SPIPut
 26525 ;; This function is called by:
 26526 ;;		_MIWIInterruptHandler
 26527 ;;		i2_TxPacket
 26528 ;; This function uses a non-reentrant model
 26529 ;;
 26530                           
 26531                           	psect	text87
 26532  0088B6                     __ptext87:
 26533                           	opt stack 0
 26534  0088B6                     i2_RegisterRead:
 26535                           	opt stack 13
 26536                           
 26537                           ;incstack = 0
 26538                           ;i2RegisterRead@address stored from wreg
 26539  0088B6  6E17               	movwf	i2RegisterRead@address,c
 26540                           
 26541                           ;drv_mrf_miwi_89xa.c: 209: uint8_t value;
 26542                           ;drv_mrf_miwi_89xa.c: 210: uint8_t IRQ1select = INTCON3bits.INT1IE;
 26543  0088B8  0E00               	movlw	0
 26544  0088BA  B6F0               	btfsc	intcon3,3,c	;volatile
 26545  0088BC  0E01               	movlw	1
 26546  0088BE  6E15               	movwf	i2RegisterRead@IRQ1select,c
 26547                           
 26548                           ;drv_mrf_miwi_89xa.c: 212: bool IRQ0select = INTCONbits.INT0IE;
 26549  0088C0  0E00               	movlw	0
 26550  0088C2  B8F2               	btfsc	intcon,4,c	;volatile
 26551  0088C4  0E01               	movlw	1
 26552  0088C6  6E16               	movwf	i2RegisterRead@IRQ0select,c
 26553                           
 26554                           ;drv_mrf_miwi_89xa.c: 214: INTCONbits.INT0IE = 0;
 26555  0088C8  98F2               	bcf	intcon,4,c	;volatile
 26556                           
 26557                           ;drv_mrf_miwi_89xa.c: 217: INTCON3bits.INT1IE = 0;
 26558  0088CA  96F0               	bcf	intcon3,3,c	;volatile
 26559                           
 26560                           ;drv_mrf_miwi_89xa.c: 218: LATBbits.LATB3 = 0;
 26561  0088CC  968A               	bcf	3978,3,c	;volatile
 26562                           
 26563                           ;drv_mrf_miwi_89xa.c: 219: address = (address|0x40);
 26564  0088CE  5017               	movf	i2RegisterRead@address,w,c
 26565  0088D0  0940               	iorlw	64
 26566  0088D2  6E17               	movwf	i2RegisterRead@address,c
 26567                           
 26568                           ;drv_mrf_miwi_89xa.c: 220: SPIPut(address);
 26569  0088D4  5017               	movf	i2RegisterRead@address,w,c
 26570  0088D6  ECE6  F045         	call	i2_SPIPut
 26571                           
 26572                           ;drv_mrf_miwi_89xa.c: 221: value = SPIGet();
 26573  0088DA  EC1A  F046         	call	i2_SPIGet	;wreg free
 26574  0088DE  6E14               	movwf	i2RegisterRead@value,c
 26575                           
 26576                           ;drv_mrf_miwi_89xa.c: 222: LATBbits.LATB3 = 1;
 26577  0088E0  868A               	bsf	3978,3,c	;volatile
 26578                           
 26579                           ;drv_mrf_miwi_89xa.c: 223: INTCON3bits.INT1IE = IRQ1select;
 26580  0088E2  B015               	btfsc	i2RegisterRead@IRQ1select,0,c
 26581  0088E4  D002               	bra	i2u1463_45
 26582  0088E6  96F0               	bcf	intcon3,3,c	;volatile
 26583  0088E8  D001               	bra	i2u1463_46
 26584  0088EA                     i2u1463_45:
 26585  0088EA  86F0               	bsf	intcon3,3,c	;volatile
 26586  0088EC                     i2u1463_46:
 26587                           
 26588                           ;drv_mrf_miwi_89xa.c: 226: INTCONbits.INT0IE = IRQ0select;
 26589  0088EC  B016               	btfsc	i2RegisterRead@IRQ0select,0,c
 26590  0088EE  D002               	bra	i2u1464_45
 26591  0088F0  98F2               	bcf	intcon,4,c	;volatile
 26592  0088F2  D001               	bra	i2u1464_46
 26593  0088F4                     i2u1464_45:
 26594  0088F4  88F2               	bsf	intcon,4,c	;volatile
 26595  0088F6                     i2u1464_46:
 26596                           
 26597                           ;drv_mrf_miwi_89xa.c: 229: return value;
 26598  0088F6  5014               	movf	i2RegisterRead@value,w,c
 26599  0088F8  0012               	return	
 26600  0088FA                     __end_ofi2_RegisterRead:
 26601                           	opt stack 0
 26602                           pclatu	equ	0xFFB
 26603                           pclath	equ	0xFFA
 26604                           tblptru	equ	0xFF8
 26605                           tblptrh	equ	0xFF7
 26606                           tblptrl	equ	0xFF6
 26607                           tablat	equ	0xFF5
 26608                           prodh	equ	0xFF4
 26609                           prodl	equ	0xFF3
 26610                           intcon	equ	0xFF2
 26611                           intcon2	equ	0xFF1
 26612                           intcon3	equ	0xFF0
 26613                           indf0	equ	0xFEF
 26614                           postinc0	equ	0xFEE
 26615                           plusw0	equ	0xFEB
 26616                           fsr0h	equ	0xFEA
 26617                           fsr0l	equ	0xFE9
 26618                           wreg	equ	0xFE8
 26619                           indf1	equ	0xFE7
 26620                           postinc1	equ	0xFE6
 26621                           postdec1	equ	0xFE5
 26622                           fsr1h	equ	0xFE2
 26623                           fsr1l	equ	0xFE1
 26624                           bsr	equ	0xFE0
 26625                           indf2	equ	0xFDF
 26626                           postinc2	equ	0xFDE
 26627                           postdec2	equ	0xFDD
 26628                           plusw2	equ	0xFDB
 26629                           fsr2h	equ	0xFDA
 26630                           fsr2l	equ	0xFD9
 26631                           status	equ	0xFD8
 26632                           
 26633 ;; *************** function i2_SPIGet *****************
 26634 ;; Defined at:
 26635 ;;		line 104 in file "src/18F27J53/spi.c"
 26636 ;; Parameters:    Size  Location     Type
 26637 ;;		None
 26638 ;; Auto vars:     Size  Location     Type
 26639 ;;		None
 26640 ;; Return value:  Size  Location     Type
 26641 ;;                  1    wreg      unsigned char 
 26642 ;; Registers used:
 26643 ;;		wreg, status,2, cstack
 26644 ;; Tracked objects:
 26645 ;;		On entry : 0/0
 26646 ;;		On exit  : 0/0
 26647 ;;		Unchanged: 0/0
 26648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26653 ;;Total ram usage:        0 bytes
 26654 ;; Hardware stack levels used:    1
 26655 ;; Hardware stack levels required when called:    1
 26656 ;; This function calls:
 26657 ;;		i2_SPIPut
 26658 ;; This function is called by:
 26659 ;;		_MIWIInterruptHandler
 26660 ;;		i2_RegisterRead
 26661 ;; This function uses a non-reentrant model
 26662 ;;
 26663                           
 26664                           	psect	text88
 26665  008C34                     __ptext88:
 26666                           	opt stack 0
 26667  008C34                     i2_SPIGet:
 26668                           	opt stack 13
 26669                           
 26670                           ;spi.c: 128: SPIPut(0x00);
 26671                           
 26672                           ;incstack = 0
 26673  008C34  0E00               	movlw	0
 26674  008C36  ECE6  F045         	call	i2_SPIPut
 26675                           
 26676                           ;spi.c: 129: return SSP2BUF;
 26677  008C3A  5075               	movf	3957,w,c	;volatile
 26678  008C3C  0012               	return	
 26679  008C3E                     __end_ofi2_SPIGet:
 26680                           	opt stack 0
 26681                           pclatu	equ	0xFFB
 26682                           pclath	equ	0xFFA
 26683                           tblptru	equ	0xFF8
 26684                           tblptrh	equ	0xFF7
 26685                           tblptrl	equ	0xFF6
 26686                           tablat	equ	0xFF5
 26687                           prodh	equ	0xFF4
 26688                           prodl	equ	0xFF3
 26689                           intcon	equ	0xFF2
 26690                           intcon2	equ	0xFF1
 26691                           intcon3	equ	0xFF0
 26692                           indf0	equ	0xFEF
 26693                           postinc0	equ	0xFEE
 26694                           plusw0	equ	0xFEB
 26695                           fsr0h	equ	0xFEA
 26696                           fsr0l	equ	0xFE9
 26697                           wreg	equ	0xFE8
 26698                           indf1	equ	0xFE7
 26699                           postinc1	equ	0xFE6
 26700                           postdec1	equ	0xFE5
 26701                           fsr1h	equ	0xFE2
 26702                           fsr1l	equ	0xFE1
 26703                           bsr	equ	0xFE0
 26704                           indf2	equ	0xFDF
 26705                           postinc2	equ	0xFDE
 26706                           postdec2	equ	0xFDD
 26707                           plusw2	equ	0xFDB
 26708                           fsr2h	equ	0xFDA
 26709                           fsr2l	equ	0xFD9
 26710                           status	equ	0xFD8
 26711                           
 26712 ;; *************** function i2_SPIPut *****************
 26713 ;; Defined at:
 26714 ;;		line 45 in file "src/18F27J53/spi.c"
 26715 ;; Parameters:    Size  Location     Type
 26716 ;;  v               1    wreg     unsigned char 
 26717 ;; Auto vars:     Size  Location     Type
 26718 ;;  v               1   18[COMRAM] unsigned char 
 26719 ;;  SPIPut          1   17[COMRAM] unsigned char 
 26720 ;; Return value:  Size  Location     Type
 26721 ;;		None               void
 26722 ;; Registers used:
 26723 ;;		wreg
 26724 ;; Tracked objects:
 26725 ;;		On entry : 0/0
 26726 ;;		On exit  : 0/0
 26727 ;;		Unchanged: 0/0
 26728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26730 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26733 ;;Total ram usage:        2 bytes
 26734 ;; Hardware stack levels used:    1
 26735 ;; This function calls:
 26736 ;;		Nothing
 26737 ;; This function is called by:
 26738 ;;		i2_SPIGet
 26739 ;;		i2_RegisterSet
 26740 ;;		i2_RegisterRead
 26741 ;;		i2_WriteFIFO
 26742 ;; This function uses a non-reentrant model
 26743 ;;
 26744                           
 26745                           	psect	text89
 26746  008BCC                     __ptext89:
 26747                           	opt stack 0
 26748  008BCC                     i2_SPIPut:
 26749                           	opt stack 14
 26750                           
 26751                           ;incstack = 0
 26752                           ;i2SPIPut@v stored from wreg
 26753  008BCC  6E13               	movwf	i2SPIPut@v,c
 26754                           
 26755                           ;spi.c: 66: {
 26756                           ;spi.c: 68: uint8_t i;
 26757                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 26758  008BCE  9EA4               	bcf	4004,7,c	;volatile
 26759                           
 26760                           ;spi.c: 72: i = SSP2BUF;
 26761  008BD0  CF75 F012          	movff	3957,i2SPIPut@i	;volatile
 26762  008BD4                     i2l29:
 26763                           
 26764                           ;spi.c: 75: {
 26765                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 26766  008BD4  9E72               	bcf	3954,7,c	;volatile
 26767                           
 26768                           ;spi.c: 77: SSP2BUF = v;
 26769  008BD6  C013  FF75         	movff	i2SPIPut@v,3957	;volatile
 26770                           
 26771                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 26772  008BDA  BE72               	btfsc	3954,7,c	;volatile
 26773  008BDC  D7FB               	goto	i2l29
 26774  008BDE                     i2l31:
 26775  008BDE  AEA4               	btfss	4004,7,c	;volatile
 26776  008BE0  D7FE               	goto	i2l31
 26777                           
 26778                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 26779  008BE2  9EA4               	bcf	4004,7,c	;volatile
 26780  008BE4  0012               	return		;funcret
 26781  008BE6                     __end_ofi2_SPIPut:
 26782                           	opt stack 0
 26783                           pclatu	equ	0xFFB
 26784                           pclath	equ	0xFFA
 26785                           tblptru	equ	0xFF8
 26786                           tblptrh	equ	0xFF7
 26787                           tblptrl	equ	0xFF6
 26788                           tablat	equ	0xFF5
 26789                           prodh	equ	0xFF4
 26790                           prodl	equ	0xFF3
 26791                           intcon	equ	0xFF2
 26792                           intcon2	equ	0xFF1
 26793                           intcon3	equ	0xFF0
 26794                           indf0	equ	0xFEF
 26795                           postinc0	equ	0xFEE
 26796                           plusw0	equ	0xFEB
 26797                           fsr0h	equ	0xFEA
 26798                           fsr0l	equ	0xFE9
 26799                           wreg	equ	0xFE8
 26800                           indf1	equ	0xFE7
 26801                           postinc1	equ	0xFE6
 26802                           postdec1	equ	0xFE5
 26803                           fsr1h	equ	0xFE2
 26804                           fsr1l	equ	0xFE1
 26805                           bsr	equ	0xFE0
 26806                           indf2	equ	0xFDF
 26807                           postinc2	equ	0xFDE
 26808                           postdec2	equ	0xFDD
 26809                           plusw2	equ	0xFDB
 26810                           fsr2h	equ	0xFDA
 26811                           fsr2l	equ	0xFD9
 26812                           status	equ	0xFD8
 26813                           
 26814 ;; *************** function i2_MiWi_TickGet *****************
 26815 ;; Defined at:
 26816 ;;		line 104 in file "src/18F27J53/symbol.c"
 26817 ;; Parameters:    Size  Location     Type
 26818 ;;		None
 26819 ;; Auto vars:     Size  Location     Type
 26820 ;;  MiWi_TickGet    4   23[COMRAM] struct _MIWI_TICK
 26821 ;;  MiWi_TickGet    1   22[COMRAM] unsigned char 
 26822 ;; Return value:  Size  Location     Type
 26823 ;;                  4   17[COMRAM] struct _MIWI_TICK
 26824 ;; Registers used:
 26825 ;;		wreg, status,2, status,0
 26826 ;; Tracked objects:
 26827 ;;		On entry : 0/0
 26828 ;;		On exit  : 0/0
 26829 ;;		Unchanged: 0/0
 26830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26831 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26832 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26834 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26835 ;;Total ram usage:       10 bytes
 26836 ;; Hardware stack levels used:    1
 26837 ;; This function calls:
 26838 ;;		Nothing
 26839 ;; This function is called by:
 26840 ;;		_MIWIInterruptHandler
 26841 ;;		i2_TxPacket
 26842 ;; This function uses a non-reentrant model
 26843 ;;
 26844                           
 26845                           	psect	text90
 26846  008778                     __ptext90:
 26847                           	opt stack 0
 26848  008778                     i2_MiWi_TickGet:
 26849                           	opt stack 15
 26850                           
 26851                           ;symbol.c: 106: MIWI_TICK currentTime;
 26852                           ;symbol.c: 109: uint8_t failureCounter;
 26853                           ;symbol.c: 112: PIE1bits.TMR1IE = 0;
 26854                           
 26855                           ;incstack = 0
 26856  008778  909D               	bcf	3997,0,c	;volatile
 26857                           
 26858                           ;symbol.c: 115: currentTime.byte.b2 = 0;
 26859  00877A  0E00               	movlw	0
 26860  00877C  6E1A               	movwf	i2MiWi_TickGet@currentTime+2,c
 26861                           
 26862                           ;symbol.c: 116: currentTime.byte.b3 = 0;
 26863  00877E  0E00               	movlw	0
 26864  008780  6E1B               	movwf	i2MiWi_TickGet@currentTime+3,c
 26865                           
 26866                           ;symbol.c: 118: failureCounter = 0;
 26867  008782  0E00               	movlw	0
 26868  008784  6E17               	movwf	i2MiWi_TickGet@failureCounter,c
 26869  008786                     i2l12562:
 26870                           
 26871                           ;symbol.c: 121: {
 26872                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 26873  008786  CFCE F018          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 26874                           
 26875                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 26876  00878A  CFCF F019          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 26877                           
 26878                           ;symbol.c: 124: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 26879  00878E  2818               	incf	i2MiWi_TickGet@currentTime,w,c
 26880  008790  E109               	bnz	i2l62
 26881  008792  2819               	incf	i2MiWi_TickGet@currentTime+1,w,c
 26882  008794  A4D8               	btfss	status,2,c
 26883  008796  D006               	goto	i2l62
 26884  008798  2A17               	incf	i2MiWi_TickGet@failureCounter,f,c
 26885  00879A  0417               	decf	i2MiWi_TickGet@failureCounter,w,c
 26886  00879C  6E16               	movwf	??i2_MiWi_TickGet& (0+255),c
 26887  00879E  0E02               	movlw	2
 26888  0087A0  6416               	cpfsgt	??i2_MiWi_TickGet,c
 26889  0087A2  D7F1               	goto	i2l12562
 26890  0087A4                     i2l62:
 26891                           
 26892                           ;symbol.c: 128: if(PIR1bits.TMR1IF)
 26893  0087A4  A09E               	btfss	3998,0,c	;volatile
 26894  0087A6  D005               	goto	i2l12576
 26895                           
 26896                           ;symbol.c: 129: {
 26897                           ;symbol.c: 131: {
 26898                           ;symbol.c: 134: currentTime.byte.b2++;
 26899  0087A8  2A1A               	incf	i2MiWi_TickGet@currentTime+2,f,c
 26900                           
 26901                           ;symbol.c: 135: if(timerExtension1 == 0xFF)
 26902  0087AA  0100               	movlb	0	; () banked
 26903  0087AC  29DA               	incf	_timerExtension1& (0+255),w,b	;volatile
 26904  0087AE  B4D8               	btfsc	status,2,c
 26905                           
 26906                           ; BSR set to: 0
 26907                           ;symbol.c: 136: {
 26908                           ;symbol.c: 137: currentTime.byte.b3++;
 26909  0087B0  2A1B               	incf	i2MiWi_TickGet@currentTime+3,f,c
 26910  0087B2                     i2l12576:
 26911                           
 26912                           ;symbol.c: 138: }
 26913                           ;symbol.c: 139: }
 26914                           ;symbol.c: 140: }
 26915                           ;symbol.c: 143: currentTime.byte.b2 += timerExtension1;
 26916  0087B2  0100               	movlb	0	; () banked
 26917  0087B4  51DA               	movf	_timerExtension1& (0+255),w,b	;volatile
 26918  0087B6  261A               	addwf	i2MiWi_TickGet@currentTime+2,f,c
 26919                           
 26920                           ; BSR set to: 0
 26921                           ;symbol.c: 144: currentTime.byte.b3 += timerExtension2;
 26922  0087B8  5049               	movf	_timerExtension2,w,c	;volatile
 26923  0087BA  261B               	addwf	i2MiWi_TickGet@currentTime+3,f,c
 26924                           
 26925                           ; BSR set to: 0
 26926                           ;symbol.c: 147: PIE1bits.TMR1IE = 1;
 26927  0087BC  809D               	bsf	3997,0,c	;volatile
 26928                           
 26929                           ; BSR set to: 0
 26930                           ;symbol.c: 149: return currentTime;
 26931  0087BE  C018  F012         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 26932  0087C2  C019  F013         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 26933  0087C6  C01A  F014         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 26934  0087CA  C01B  F015         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 26935  0087CE  0012               	return	
 26936  0087D0                     __end_ofi2_MiWi_TickGet:
 26937                           	opt stack 0
 26938                           pclatu	equ	0xFFB
 26939                           pclath	equ	0xFFA
 26940                           tblptru	equ	0xFF8
 26941                           tblptrh	equ	0xFF7
 26942                           tblptrl	equ	0xFF6
 26943                           tablat	equ	0xFF5
 26944                           prodh	equ	0xFF4
 26945                           prodl	equ	0xFF3
 26946                           intcon	equ	0xFF2
 26947                           intcon2	equ	0xFF1
 26948                           intcon3	equ	0xFF0
 26949                           indf0	equ	0xFEF
 26950                           postinc0	equ	0xFEE
 26951                           plusw0	equ	0xFEB
 26952                           fsr0h	equ	0xFEA
 26953                           fsr0l	equ	0xFE9
 26954                           wreg	equ	0xFE8
 26955                           indf1	equ	0xFE7
 26956                           postinc1	equ	0xFE6
 26957                           postdec1	equ	0xFE5
 26958                           fsr1h	equ	0xFE2
 26959                           fsr1l	equ	0xFE1
 26960                           bsr	equ	0xFE0
 26961                           indf2	equ	0xFDF
 26962                           postinc2	equ	0xFDE
 26963                           postdec2	equ	0xFDD
 26964                           plusw2	equ	0xFDB
 26965                           fsr2h	equ	0xFDA
 26966                           fsr2l	equ	0xFD9
 26967                           status	equ	0xFD8
 26968                           pclatu	equ	0xFFB
 26969                           pclath	equ	0xFFA
 26970                           tblptru	equ	0xFF8
 26971                           tblptrh	equ	0xFF7
 26972                           tblptrl	equ	0xFF6
 26973                           tablat	equ	0xFF5
 26974                           prodh	equ	0xFF4
 26975                           prodl	equ	0xFF3
 26976                           intcon	equ	0xFF2
 26977                           intcon2	equ	0xFF1
 26978                           intcon3	equ	0xFF0
 26979                           indf0	equ	0xFEF
 26980                           postinc0	equ	0xFEE
 26981                           plusw0	equ	0xFEB
 26982                           fsr0h	equ	0xFEA
 26983                           fsr0l	equ	0xFE9
 26984                           wreg	equ	0xFE8
 26985                           indf1	equ	0xFE7
 26986                           postinc1	equ	0xFE6
 26987                           postdec1	equ	0xFE5
 26988                           fsr1h	equ	0xFE2
 26989                           fsr1l	equ	0xFE1
 26990                           bsr	equ	0xFE0
 26991                           indf2	equ	0xFDF
 26992                           postinc2	equ	0xFDE
 26993                           postdec2	equ	0xFDD
 26994                           plusw2	equ	0xFDB
 26995                           fsr2h	equ	0xFDA
 26996                           fsr2l	equ	0xFD9
 26997                           status	equ	0xFD8
 26998                           
 26999                           	psect	rparam
 27000  0000                     pclatu	equ	0xFFB
 27001                           pclath	equ	0xFFA
 27002                           tblptru	equ	0xFF8
 27003                           tblptrh	equ	0xFF7
 27004                           tblptrl	equ	0xFF6
 27005                           tablat	equ	0xFF5
 27006                           prodh	equ	0xFF4
 27007                           prodl	equ	0xFF3
 27008                           intcon	equ	0xFF2
 27009                           intcon2	equ	0xFF1
 27010                           intcon3	equ	0xFF0
 27011                           indf0	equ	0xFEF
 27012                           postinc0	equ	0xFEE
 27013                           plusw0	equ	0xFEB
 27014                           fsr0h	equ	0xFEA
 27015                           fsr0l	equ	0xFE9
 27016                           wreg	equ	0xFE8
 27017                           indf1	equ	0xFE7
 27018                           postinc1	equ	0xFE6
 27019                           postdec1	equ	0xFE5
 27020                           fsr1h	equ	0xFE2
 27021                           fsr1l	equ	0xFE1
 27022                           bsr	equ	0xFE0
 27023                           indf2	equ	0xFDF
 27024                           postinc2	equ	0xFDE
 27025                           postdec2	equ	0xFDD
 27026                           plusw2	equ	0xFDB
 27027                           fsr2h	equ	0xFDA
 27028                           fsr2l	equ	0xFD9
 27029                           status	equ	0xFD8
 27030                           
 27031                           	psect	temp
 27032  00004C                     btemp:
 27033                           	opt stack 0
 27034  00004C                     	ds	1
 27035  0000                     int$flags	set	btemp
 27036                           pclatu	equ	0xFFB
 27037                           pclath	equ	0xFFA
 27038                           tblptru	equ	0xFF8
 27039                           tblptrh	equ	0xFF7
 27040                           tblptrl	equ	0xFF6
 27041                           tablat	equ	0xFF5
 27042                           prodh	equ	0xFF4
 27043                           prodl	equ	0xFF3
 27044                           intcon	equ	0xFF2
 27045                           intcon2	equ	0xFF1
 27046                           intcon3	equ	0xFF0
 27047                           indf0	equ	0xFEF
 27048                           postinc0	equ	0xFEE
 27049                           plusw0	equ	0xFEB
 27050                           fsr0h	equ	0xFEA
 27051                           fsr0l	equ	0xFE9
 27052                           wreg	equ	0xFE8
 27053                           indf1	equ	0xFE7
 27054                           postinc1	equ	0xFE6
 27055                           postdec1	equ	0xFE5
 27056                           fsr1h	equ	0xFE2
 27057                           fsr1l	equ	0xFE1
 27058                           bsr	equ	0xFE0
 27059                           indf2	equ	0xFDF
 27060                           postinc2	equ	0xFDE
 27061                           postdec2	equ	0xFDD
 27062                           plusw2	equ	0xFDB
 27063                           fsr2h	equ	0xFDA
 27064                           fsr2l	equ	0xFD9
 27065                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    270
    Data        4
    BSS         683
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      75
    BANK0           160    113     127
    BANK1           256     43     256
    BANK2           256     32     256
    BANK3           256     27     239
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(2) Largest target is 2
		 -> myPANID(BANK0[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(2) Largest target is 2
		 -> tempShortAddress(BANK1[2]), myShortAddress(BANK0[2]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> m_var.label(BANK1[3]), m_var(BANK1[9]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 4
		 -> UPDATE_FREQUENCY_LABEL(CODE[4]), POWER_LABEL(CODE[4]), 

    memcpy@d1	PTR void  size(2) Largest target is 43
		 -> decode_variable@var(BANK0[9]), m_var(BANK1[9]), TxBuffer(BANK1[43]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 43
		 -> decode_variable@var(BANK0[9]), m_var(BANK1[9]), TxBuffer(BANK1[43]), 

    memcpy@s1	PTR const void  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), FAILEDMSG_LABEL(CODE[4]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), 
		 -> POWER_LABEL(CODE[4]), TEMPERATURE_LABEL(CODE[4]), LIGHT_LEVEL_LABEL(CODE[4]), BATTERY_VOLTAGE_LABEL(CODE[4]), 
		 -> m_buffer(BANK1[32]), myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), 
		 -> RxPacket(BANK3[132]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), FAILEDMSG_LABEL(CODE[4]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), 
		 -> POWER_LABEL(CODE[4]), TEMPERATURE_LABEL(CODE[4]), LIGHT_LEVEL_LABEL(CODE[4]), BATTERY_VOLTAGE_LABEL(CODE[4]), 
		 -> m_buffer(BANK1[32]), myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), 
		 -> RxPacket(BANK3[132]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    do_UPDATE@p_buff	PTR unsigned char  size(2) Largest target is 32
		 -> m_buffer(BANK1[32]), 

    do_NETWORK_REGISTER@p_uid	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    decode_variable@p_buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK1[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    encode_ufixed16_variable@buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK1[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    encode_uint16_variable@buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK1[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    encode_uint8_variable@buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK1[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    sp__dBm_to_mW	PTR const unsigned char  size(2) Largest target is 9
		 -> TX_POWER_INVALID(CODE[9]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), TX_POWER_N_2_DB_MW(CODE[6]), 
		 -> TX_POWER_1_DB_MW(CODE[6]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), TX_POWER_10_DB_MW(CODE[5]), 
		 -> TX_POWER_13_DB_MW(CODE[5]), 

    sp__memcpy	PTR void  size(2) Largest target is 43
		 -> decode_variable@var(BANK0[9]), m_var(BANK1[9]), TxBuffer(BANK1[43]), 

    p_buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK1[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    MiApp_UnicastAddress@DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> do_UPDATE@shortaddress(BANK1[2]), do_POWER_TEST@shortaddress(BANK1[2]), do_NETWORK_REGISTER@shortaddress(BANK1[2]), tempShortAddress(BANK1[2]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 90
		 -> ConnectionTable(BANK2[90]), 

    SendMACPacket@Address	PTR unsigned char  size(2) Largest target is 90
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK1[2]), do_POWER_TEST@shortaddress(BANK1[2]), do_NETWORK_REGISTER@shortaddress(BANK1[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable.Address(BANK2[4]), ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    S2117$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S2117$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Dec@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK1[8]), 

    CCM_Dec@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Enc@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK1[8]), 

    CCM_Enc@text	PTR unsigned char  size(2) Largest target is 64
		 -> MACTxBuffer(BANK2[64]), 

    CBC_MAC@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK1[8]), 

    CBC_MAC@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CBC_MAC@MIC	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    CTR@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CTR@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK1[8]), 

    CTR@nounce	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    encode@key	PTR unsigned int  size(2) Largest target is 8
		 -> key(BANK1[8]), 

    encode@text	PTR unsigned int  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 43
		 -> TxBuffer(BANK1[43]), 

    S1714$DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK1[2]), do_POWER_TEST@shortaddress(BANK1[2]), do_NETWORK_REGISTER@shortaddress(BANK1[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK1[2]), do_POWER_TEST@shortaddress(BANK1[2]), do_NETWORK_REGISTER@shortaddress(BANK1[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1512$PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1736$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S1736$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _MIWIInterruptHandler->i2_TxPacket
    i2_TxPacket->i2_MiWi_TickGet
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _SYS_InterruptLow in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_do_NETWORK_REGISTER
    _send_periodical_update->_do_UPDATE
    _send_initial_update->_do_UPDATE
    _floor->___altoft
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___lltoft->___lmul
    ___ftneg->_floor
    _read_sensors->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___ftneg
    ___ftdiv->___lltoft
    _update_variable->_MiMAC_SetPower
    _send_writables_update->_do_UPDATE
    _decode_variable->_memcpy
    _MiApp_TransceiverPowerState->_MiMAC_PowerState
    _MiMAC_PowerState->_DELAY_ms
    _adapt_power_level->_do_POWER_TEST
    _MiMAC_SetPower->_RegisterSet
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_DELAY_ms
    _DELAY_ms->___lmul
    _MiApp_EstablishConnection->_OpenSocket
    _SendMACPacket->_MiMAC_SendPacket
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _MiApp_MessageAvailable->_MiWiTasks
    _MiWiTasks->_MiMAC_ReceivedPacket
    _MiMAC_SendPacket->_CCM_Enc
    _TxPacket->_MiWi_TickGet
    _WriteFIFO->_SPIPut
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _CCM_Enc->_CBC_MAC
    _CCM_Enc->_CTR
    _MiMAC_ReceivedPacket->_CCM_Dec
    _CCM_Dec->_CBC_MAC
    _CCM_Dec->_CTR
    _CTR->_encode
    _CBC_MAC->_encode
    _AddNodeToNetworkTable->_SearchForLongAddress

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_MIWIInterruptHandler

Critical Paths under _SYS_InterruptLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MiApp_EstablishConnection
    _main->_send_initial_update
    _main->_send_periodical_update
    _send_periodical_update->_do_UPDATE
    _send_initial_update->_do_UPDATE
    _read_sensors->___ftmul
    _process_update_answer->_send_writables_update
    _send_writables_update->_do_UPDATE
    _do_UPDATE->_MiApp_UnicastAddress
    _do_NETWORK_REGISTER->_MiApp_UnicastAddress
    _adapt_power_level->_do_POWER_TEST
    _do_POWER_TEST->_MiApp_UnicastAddress
    _MiApp_EstablishConnection->_MiApp_SearchConnection
    _OpenSocket->_MiApp_UnicastAddress
    _MiApp_MessageAvailable->_MiWiTasks

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _SYS_InterruptLow in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_process_update_answer
    _do_UPDATE->_MiApp_UnicastAddress
    _do_NETWORK_REGISTER->_MiApp_UnicastAddress
    _do_POWER_TEST->_MiApp_UnicastAddress
    _OpenSocket->_MiApp_UnicastAddress

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _SYS_InterruptLow in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_send_initial_update
    _main->_send_periodical_update

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _SYS_InterruptLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _SYS_InterruptLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _SYS_InterruptLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _SYS_InterruptLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _SYS_InterruptLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _SYS_InterruptLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _SYS_InterruptLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _SYS_InterruptLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _SYS_InterruptLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _SYS_InterruptLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SYS_InterruptHigh in BANK13

    None.

Critical Paths under _SYS_InterruptLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Critical Paths under _SYS_InterruptLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  946647
                                             17 BANK3     10    10      0
               _MiApp_ConnectionMode
               _MiApp_DiscardMessage
          _MiApp_EstablishConnection
             _MiApp_MessageAvailable
                 _MiApp_ProtocolInit
             _MiApp_SearchConnection
        _MiApp_TransceiverPowerState
                     _MiMAC_SetPower
                          _MiWiTasks
                  _SYSTEM_Initialize
                  _adapt_power_level
                _do_NETWORK_REGISTER
              _process_update_answer
                       _read_sensors
          _security_force_key_update
                _send_initial_update
             _send_periodical_update
                        _timer_reset
                     _wait_for_1_sec
 ---------------------------------------------------------------------------------
 (1) _send_periodical_update                              42    42      0  149087
                                             42 BANK1      1     1      0
                                              0 BANK3     17    17      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                           ___lltoft
                             ___lmul
                          _do_UPDATE
           _encode_ufixed16_variable
             _encode_uint16_variable
              _encode_uint8_variable
                              _floor
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _send_initial_update                                 42    42      0  149087
                                             42 BANK1      1     1      0
                                              0 BANK3     17    17      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                           ___lltoft
                             ___lmul
                          _do_UPDATE
           _encode_ufixed16_variable
             _encode_uint16_variable
              _encode_uint8_variable
                              _floor
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _floor                                                8     5      3   15254
                                             94 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     506
                                             33 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     406
                                             33 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    6492
                                             41 BANK0     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3783
                                             84 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _encode_uint16_variable                              11     0     11    1555
                                             33 BANK0     11     0     11
 ---------------------------------------------------------------------------------
 (2) _encode_ufixed16_variable                            11     0     11    1971
                                             33 BANK0     11     0     11
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3993
                                             45 BANK0      9     5      4
                           ___ftpack
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1489
                                             33 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     689
                                            102 BANK0      3     0      3
                            ___ftadd (ARG)
                            ___fttol (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (1) _security_force_key_update                            2     2      0     130
                                             33 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _read_sensors                                         9     9      0   16944
                                              9 BANK1      9     9      0
                           _OpenI2C1
                           _ReadI2C1
                          _WriteI2C1
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    3818
                                             41 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4    1827
                                             69 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    6003
                                            105 BANK0      6     0      6
                                              0 BANK1      9     9      0
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4895
                                             54 BANK0     15     9      6
                           ___ftpack
                           ___lltoft (ARG)
                             ___lmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3475
                                             33 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _WriteI2C1                                            2     2      0      31
                                             33 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenI2C1                                             2     1      1     166
                                             33 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _process_update_answer                               13    13      0  147810
                                             19 BANK2     13    13      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
        _MiApp_TransceiverPowerState
                    _decode_variable
              _send_writables_update
                        _timer_reset
                    _update_variable
                     _wait_for_1_sec
 ---------------------------------------------------------------------------------
 (1) _wait_for_1_sec                                       3     3      0      68
                                             33 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _update_variable                                      0     0      0    2335
                     _MiMAC_SetPower
                           _RtccWrOn
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4     549
                                             33 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _timer_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _send_writables_update                                3     3      0  102333
                                             42 BANK1      1     1      0
                          _do_UPDATE
              _encode_uint8_variable
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _encode_uint8_variable                               11     0     11    2735
                                             33 BANK0     11     0     11
 ---------------------------------------------------------------------------------
 (2) _do_UPDATE                                           10     6      4   93808
                                            112 BANK0      1     1      0
                                             33 BANK1      9     5      4
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _decode_variable                                     20    11      9    6524
                                             43 BANK0     20    11      9
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _MiApp_TransceiverPowerState                          2     2      0    3365
                                             53 BANK0      1     1      0
                   _MiMAC_PowerState
 ---------------------------------------------------------------------------------
 (3) _MiMAC_PowerState                                     2     2      0    3334
                                             51 BANK0      2     2      0
                           _DELAY_ms
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (1) _do_NETWORK_REGISTER                                  9     6      3   92051
                                            112 BANK0      1     1      0
                                             33 BANK1      8     5      3
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6    5790
                                             33 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _adapt_power_level                                    6     5      1   88379
                                             40 BANK1      2     1      1
                                             19 BANK2      3     3      0
                     _MiMAC_SetPower
                      _do_POWER_TEST
 ---------------------------------------------------------------------------------
 (2) _do_POWER_TEST                                        8     8      0   86130
                                            112 BANK0      1     1      0
                                             33 BANK1      7     7      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetPower                                       3     3      0    1786
                                             39 BANK0      3     3      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   6     6      0   10993
                                             55 BANK0      6     6      0
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           4     1      3    5490
                                             51 BANK0      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (4) _DELAY_ms                                             6     4      2    1449
                                             45 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1136
                                             33 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_EstablishConnection                           20    19      1  165678
                                             34 BANK1      9     8      1
                                             19 BANK2     11    11      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
             _MiApp_SearchConnection
                   _MiApp_SetChannel
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                         _OpenSocket
               _SearchForLongAddress
                      _SendMACPacket
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _OpenSocket                                           1     1      0   53461
                                            112 BANK0      1     1      0
               _MiApp_UnicastAddress
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastAddress                                31    27      4   52962
                                             21 BANK1     12     8      4
                                              0 BANK2     19    19      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiMAC_SendPacket
                       _MiWi_TickGet
               _SearchForLongAddress
 ---------------------------------------------------------------------------------
 (1) _MiApp_SearchConnection                              28    24      4   55098
                                             21 BANK1     13     9      4
                                              0 BANK2     15    15      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiApp_SetChannel
                       _MiWi_TickGet
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (2) _SendMACPacket                                        4     1      3   17549
                                             90 BANK0      4     1      3
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0    3738
                                             43 BANK0      1     1      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3676
                                             40 BANK0      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0   32807
                          _MiWiTasks
 ---------------------------------------------------------------------------------
 (5) _MiWiTasks                                           29    29      0   32807
                                            104 BANK0      8     8      0
                                              0 BANK1     21    21      0
              _AddNodeToNetworkTable
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                   _MiMAC_SendPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
               _SearchForLongAddress
              _SearchForShortAddress
 ---------------------------------------------------------------------------------
 (6) _MiMAC_SetAltAddress                                  4     0      4    1456
                                             33 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _MiMAC_SendPacket                                    10     4      6   17040
                                             80 BANK0     10     4      6
                            _CCM_Enc
                           _TxPacket
 ---------------------------------------------------------------------------------
 (5) _TxPacket                                            24    23      1    4859
                                             43 BANK0     24    23      1
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (6) _WriteFIFO                                            3     3      0     133
                                             35 BANK0      3     3      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _SetRFMode                                            1     1      0    1755
                                             39 BANK0      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (7) _RegisterSet                                          4     2      2    1724
                                             35 BANK0      4     2      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _RegisterRead                                         4     4      0     235
                                             35 BANK0      4     4      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _SPIGet                                               0     0      0      34
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _SPIPut                                               2     2      0      34
                                             33 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _CCM_Enc                                             11     5      6    7941
                                             69 BANK0     11     5      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                20    20      0   10181
                                             84 BANK0     20    20      0
                            _CCM_Dec
                       _MiWi_TickGet
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (7) _isSameAddress                                        7     3      4     400
                                             33 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _MiWi_TickGet                                        10     6      4     400
                                             33 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (7) _CCM_Dec                                             15     9      6    7941
                                             69 BANK0     15     9      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (6) _CTR                                                 13     6      7    3397
                                             56 BANK0     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (6) _CBC_MAC                                             13     6      7    3397
                                             56 BANK0     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (7) _encode                                              23    19      4    1094
                                             33 BANK0     23    19      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     861
                                             33 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _AddNodeToNetworkTable                                4     4      0    1034
                                             39 BANK0      4     4      0
               _SearchForLongAddress
              _SearchForShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (7) _findNextNetworkEntry                                 1     1      0     130
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _SearchForShortAddress                                3     3      0     192
                                             33 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SearchForLongAddress                                 6     6      0     322
                                             33 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ConnectionMode                                 2     2      0      62
                                             33 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _SYS_InterruptLow                                   17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0    4516
                                             19 BANK0     14    14      0
               _MIWIInterruptHandler
 ---------------------------------------------------------------------------------
 (14) _MIWIInterruptHandler                               19    19      0    4516
                                              0 BANK0     19    19      0
                     i2_MiWi_TickGet
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (15) i2_TxPacket                                         24    23      1    1913
                                             27 COMRAM    24    23      1
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (16) i2_WriteFIFO                                         3     3      0     133
                                             19 COMRAM     3     3      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_SetRFMode                                         1     1      0     405
                                             23 COMRAM     1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (17) i2_RegisterSet                                       4     2      2     374
                                             19 COMRAM     4     2      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_RegisterRead                                      4     4      0     235
                                             19 COMRAM     4     4      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (17) i2_SPIGet                                            0     0      0      34
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (17) i2_SPIPut                                            2     2      0      34
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) i2_MiWi_TickGet                                     10     6      4     316
                                             17 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MiApp_ConnectionMode
   _MiApp_DiscardMessage
     _MiMAC_DiscardPacket
   _MiApp_EstablishConnection
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_SearchConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
       _MiWi_TickGet
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _OpenSocket
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _MiWi_TickGet
     _SearchForLongAddress
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
     _findNextNetworkEntry
   _MiApp_MessageAvailable
     _MiWiTasks
       _AddNodeToNetworkTable
         _SearchForLongAddress
         _SearchForShortAddress
         _findNextNetworkEntry
       _MiMAC_DiscardPacket
       _MiMAC_ReceivedPacket
         _CCM_Dec
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _MiWi_TickGet
         _isSameAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiMAC_SetAltAddress
       _MiWi_TickGet
       _SearchForLongAddress
       _SearchForShortAddress
   _MiApp_ProtocolInit
     _InitSymbolTimer
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_Init
       _DELAY_ms
         ___lmul
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_SearchConnection
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiWi_TickGet
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
   _MiApp_TransceiverPowerState
     _MiMAC_PowerState
       _DELAY_ms
         ___lmul
       _SetRFMode
         _RegisterSet
           _SPIPut
   _MiMAC_SetPower
     _RegisterSet
       _SPIPut
   _MiWiTasks
     _AddNodeToNetworkTable
       _SearchForLongAddress
       _SearchForShortAddress
       _findNextNetworkEntry
     _MiMAC_DiscardPacket
     _MiMAC_ReceivedPacket
       _CCM_Dec
         _CBC_MAC
           ___awdiv
           _encode
         _CTR
           ___awdiv
           _encode
       _MiWi_TickGet
       _isSameAddress
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
           _encode
         _CTR
           ___awdiv
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _SearchForLongAddress
     _SearchForShortAddress
   _SYSTEM_Initialize
     _RtccWrOn
   _adapt_power_level
     _MiMAC_SetPower
       _RegisterSet
         _SPIPut
     _do_POWER_TEST
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
   _do_NETWORK_REGISTER
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_UnicastAddress
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiWi_TickGet
       _SearchForLongAddress
     _memcpy
   _process_update_answer
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_TransceiverPowerState
       _MiMAC_PowerState
         _DELAY_ms
           ___lmul
         _SetRFMode
           _RegisterSet
             _SPIPut
     _decode_variable
       _memcpy
     _send_writables_update
       _do_UPDATE
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiApp_UnicastAddress
           _MiApp_DiscardMessage
             _MiMAC_DiscardPacket
           _MiApp_MessageAvailable
             _MiWiTasks
               _AddNodeToNetworkTable
                 _SearchForLongAddress
                 _SearchForShortAddress
                 _findNextNetworkEntry
               _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                 _CCM_Dec
                   _CBC_MAC
                     ___awdiv
                     _encode
                   _CTR
                     ___awdiv
                     _encode
                 _MiWi_TickGet
                 _isSameAddress
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                     _encode
                   _CTR
                     ___awdiv
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
               _MiMAC_SetAltAddress
               _MiWi_TickGet
               _SearchForLongAddress
               _SearchForShortAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiWi_TickGet
           _SearchForLongAddress
         _memcpy
       _encode_uint8_variable
       _memcpy
     _timer_reset
     _update_variable
       _MiMAC_SetPower
         _RegisterSet
           _SPIPut
       _RtccWrOn
       _strcmp
     _wait_for_1_sec
   _read_sensors
     _OpenI2C1
     _ReadI2C1
     _WriteI2C1
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _security_force_key_update
   _send_initial_update
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lldiv
     ___lltoft
       ___ftpack
       ___lmul (ARG)
     ___lmul
     _do_UPDATE
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _memcpy
     _encode_ufixed16_variable
     _encode_uint16_variable
     _encode_uint8_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _frexp
     _memcpy
   _send_periodical_update
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lldiv
     ___lltoft
       ___ftpack
       ___lmul (ARG)
     ___lmul
     _do_UPDATE
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _memcpy
     _encode_ufixed16_variable
     _encode_uint16_variable
     _encode_uint8_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _frexp
     _memcpy
   _timer_reset
   _wait_for_1_sec

 _SYS_InterruptLow (ROOT)

 _SYS_InterruptHigh (ROOT)
   _MIWIInterruptHandler
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_SPIGet
       i2_SPIPut
     i2_TxPacket
       i2_MiWi_TickGet
       i2_RegisterRead
         i2_SPIGet
           i2_SPIPut
         i2_SPIPut
       i2_RegisterSet
         i2_SPIPut
       i2_SetRFMode
         i2_RegisterSet
           i2_SPIPut
       i2_WriteFIFO
         i2_SPIPut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     1B      EF      12       93.4%
BITBANK2           100      0       0       9        0.0%
BANK2              100     20     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     2B     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      4B       1       79.8%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3B9       6        0.0%
DATA                 0      0     3B9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Aug  4 13:19:34 2016

                              i2_TxPacket 67DA                              ___altoft@exp 00BC  
                  send_initial_update@tmp 03E3                      ?_MiMAC_DiscardPacket 0001  
                            _UPTIME_LABEL 20FF                            ?_isSameAddress 0081  
                           ___altoft@sign 00BD                                        l31 8BAA  
                                      l18 7DAC                                        l19 7D98  
                                      l29 8BA0                                        l62 84EA  
        MiApp_SearchConnection@ChannelMap 01E8                              ___awdiv@sign 0086  
                                      bsr 000FE0                   send_initial_update@tmp2 03D4  
                     MiApp_ProtocolInit@i 009C                         _ActiveScanResults 0300  
                            __CFG_CP0$OFF 000000                              ___ftadd@exp1 0094  
                            ___ftadd@exp2 0093                                _MiMAC_Init 6BB8  
                            ___ftadd@sign 0092                                       l323 578E  
                                     l324 57E4                                       l237 886E  
                                     l318 5724                                       l352 483E  
                                     l601 2B7A                                       l442 6FBC  
                                     l258 5F20                                       l259 5F66  
                                     l721 724E                                       l641 2718  
                                     l634 2694                                       l627 25F2  
                                     l724 7274                                       l716 71A0  
                                     l468 6DD4                                       l628 25F6  
                                     l477 66D2                            ?i2_RegisterSet 0014  
                                     l654 2A48                                       l672 2C74  
                                     l657 2A12                                       l834 41CC  
                                     l755 8AD6                                       l667 2B18  
                                     l829 4170                                       l839 438E  
                                     l848 4522                                       l784 4ACA  
                                     _CTR 6F54                                       _MTP 00D1  
                                     _key 01C0                           __end_of_CBC_MAC 74C4  
             __end_of_MiMAC_SetAltAddress 8C44                                       prod 000FF3  
                                     wreg 000FE8                           __end_of_CCM_Dec 67DA  
                         __end_of_CCM_Enc 6E2E            __end_of_UPDATE_FREQUENCY_LABEL 20FF  
                             i2_WriteFIFO 8A62         __end_of_MiApp_EstablishConnection 4EB2  
                                    ?_CTR 0098                                      CTR@i 00A3  
                                    CTR@j 00A4                              ___ftdiv@cntr 009F  
                            ___ftdiv@sign 00A4                                      l1100 5D4A  
                                    l1210 8BC0                                      l1131 4F60  
                                    l1205 7786                                      l1125 4ECA  
                                    l1150 50A0                                      l1119 5EF0  
                                    l1128 4EDA                                      l1410 8B8E  
                                    l1138 5034                                      l1227 8A60  
                                    l1171 512C                                      l1156 50C4  
                                    l1165 5116                                      l1350 864A  
                                    l1168 5126                                      l1088 5414  
                                    l1409 8B8C                                      l1290 8196  
                                    l1434 85B2                                      l1443 85D2  
                                    l1294 7EB4                                      l1298 7F50  
                                    l1732 54DE                                      l1736 5518  
                                    l1834 7C54                                      l1738 5540  
                                    l1747 5616                                      l1684 7386  
                                    l1756 5640                                      l1767 6A3E  
                                    l1695 76B8                                      l1789 8ABA  
                         ?i2_RegisterRead 0001                                      i2l31 8BDE  
                                    i2l29 8BD4                                      i2l62 87A4  
                  _encode_uint16_variable 7E68                     _BATTERY_VOLTAGE_LABEL 20E3  
              MiMAC_SetChannel@offsetFreq 0088                                      _main 51B8  
                            ___ftpack@arg 0081                              ___ftpack@exp 0084  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                                      btemp 004C  
                                    pclat 000FFA                           _update_variable 76C6  
              MiApp_UnicastAddress@handle 02F2                     MiApp_ProtocolInit@MIP 0099  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00F6                             __CFG_IESO$OFF 000000  
             _send_periodical_update$5080 03D7               _send_periodical_update$5081 03DA  
             _send_periodical_update$5082 03DD               _send_periodical_update$5083 03E0  
                        __end_of_DELAY_ms 7DCA                 do_NETWORK_REGISTER@F10202 0160  
                           _m_light_level 0168                            _InitConfigRegs 1FF5  
                            ___ftmul@cntr 01DA                              ___param_bank 000010  
                            ___ftmul@sign 01DB                     ??_MiMAC_DiscardPacket 0081  
                                   ??_CTR 009F             adapt_power_level@minimal_rssi 01FB  
                 decode_variable@p_buffer 008B                          CCM_Enc@headerLen 00A7  
                            ___fttol@exp1 00B3                              ___fttol@lval 00AF  
            __end_of_MiApp_DiscardMessage 8C34                MiMAC_PowerState@PowerState 0093  
                                   l11000 5FAA                                     l11100 668A  
                                   l11012 5FCA                                     l11200 8942  
                                   l11120 6758                                     l11104 6694  
                                   l11024 5FF8                                     l11008 5FC0  
                                   l11040 6098                                     l11210 8972  
                                   l11130 67D0                                     l11114 66EE  
                                   l11050 6D2C                                     l11034 6080  
                                   l11140 80C4                                     l11204 894C  
                                   l11124 6762                                     l11108 66AC  
                                   l11060 6D86                                     l11300 5908  
                                   l11214 8978                                     l11134 67D6  
                                   l11070 6DAE                                     l11062 6D8C  
                                   l11054 6D36                                     l11038 6094  
                                   l11302 5914                                     l12110 453C  
                                   l11144 80CE                                     l11080 87D6  
                                   l11312 45F2                                     l12120 4552  
                                   l11154 8140                                     l11090 8818  
                                   l11322 46F4                                     l11066 6D96  
                                   l11226 56EA                                     l12130 45DE  
                                   l11164 789E                                     l11084 87E0  
                                   l11420 4A24                                     l11332 4704  
                                   l11308 45E8                                     l11076 6DF0  
                                   l11244 5776                                     l13020 7604  
                                   l11174 78EE                                     l11190 795A  
                                   l11158 8146                                     l11094 881E  
                                   l11406 4974                                     l11334 470A  
                                   l11326 46FA                                     l11270 582C  
                                   l11262 57FA                                     l11254 57CC  
                                   l11238 5742                                     l11502 2194  
                                   l12038 43A8                                     l12062 444E  
                                   l12142 8708                                     l12222 83C8  
                                   l11168 78A8                                     l10800 7B7E  
                                   l11408 4996                                     l11432 4A72  
                                   l11280 5860                                     l11248 579C  
                                   l11512 21AE                                     l12048 43BE  
                                   l12216 89C6                                     l12136 86D0  
                                   l12240 8402                                     l12320 628A  
                                   l12160 733A                                     l12152 72DC  
                                   l12400 7DF6                                     l13024 7618  
                                   l11186 7954                                     l11178 78F8  
                                   l11194 7960                                     l11418 4A1C  
                                   l11354 47CC                                     l11338 4714  
                                   l11258 57F0                                     l11530 22A0  
                                   l11522 226C                                     l12058 444A  
                                   l13122 642E                                     l12170 7390  
                                   l12162 736A                                     l12154 72EA  
                                   l13202 69FC                                     l12402 7E06  
                                   l11452 71AC                                     l10804 7B8C  
                                   l10900 6F80                                     l11372 4852  
                                   l11356 47D4                                     l11348 477E  
                                   l11436 4A78                                     l11292 58CC  
                                   l11620 24E6                                     l11508 21A4  
                                   l13116 6416                                     l12236 83F8  
                                   l12228 83D4                                     l12252 8422  
                                   l12324 62A2                                     l12164 7378  
                                   l12156 731A                                     l12148 72C8  
                                   l13028 7636                                     l10750 5968  
                                   l10830 84FE                                     l11390 48C0  
                                   l11382 48A8                                     l11294 58D4  
                                   l11286 5894                                     l11702 26BA  
                                   l11550 232E                                     l11542 231C  
                                   l11534 22AA                                     l13150 64D0  
                                   l13134 646A                                     l13118 6424  
                                   l12246 841E                                     l12254 8434  
                                   l12342 632E                                     l12318 6284  
                                   l13222 6560                                     l12422 5526  
                                   l12502 79E4                                     l11464 71EC  
                                   l11456 71BC                                     l10808 7BA0  
                                   l10904 6F8A                                     l10816 84C2  
                                   l11368 4848                                     l11632 251E  
                                   l11552 2334                                     l11528 229A  
                                   l13152 64D6                                     l13160 64F8  
                                   l13136 647A                                     l12176 73AC  
                                   l12416 54EC                                     l10754 5972  
                                   l10914 6FDE                                     l10930 7066  
                                   l11386 48B6                                     l11378 48A2  
                                   l11810 2AF4                                     l11626 250E  
                                   l11546 2322                                     l12266 82F6  
                                   l13402 70CC                                     l12362 6384  
                                   l12338 6314                                     l13242 65E8  
                                   l14042 4FF6                                     l12450 55CE  
                                   l11468 71F6                                     l11476 72A8  
                                   l10764 5B1A                                     l10940 73E8  
                                   l11396 492C                                     l11732 28C6  
                                   l11628 2514                                     l11564 2364  
                                   l11556 233E                                     l13164 6512  
                                   l13156 64F0                                     l12356 6374  
                                   l13252 6626                                     l13228 659A  
                                   l12540 6B54                                     l14060 50C8  
                                   l14052 505C                                     l12444 55A6  
                                   l12428 5536                                     l12508 7A28  
                                   l14220 330A                                     l10790 7B48  
                                   l10782 7B1E                                     l10950 7416  
                                   l10918 6FE8                                     l10870 8036  
                                   l11806 2AEA                                     l11750 2968  
                                   l11822 2B4A                                     l11742 2906  
                                   l11638 255E                                     l11574 2404  
                                   l11830 2B82                                     l11902 7C76  
                                   l12702 6C94                                     l13166 6520  
                                   l12366 639E                                     l12358 637C  
                                   l12374 63B2                                     l12382 865E  
                                   l13182 699C                                     l13246 6606  
                                   l12550 6B8A                                     l12518 6AAE  
                                   l14046 5014                                     l12446 55B4  
                                   l12438 5578                                     l10792 7B4E  
                                   l10776 7B08                                     l10936 73DE  
                                   l10928 7062                                     l11736 28F6  
                                   l11664 25DC                                     l11672 25FC  
                                   l11680 2644                                     l11576 2410  
                                   l12368 63AC                                     l12384 866A  
                                   l14312 5ED6                                     l14320 5EEC  
                                   l13176 6962                                     l13256 6644  
                                   l12536 6B40                                     l14064 50EC  
                                   l14056 5080                                     l14048 5038  
                                   l12464 566A                                     l12456 55FC  
                                   l12448 55C2                                     l10954 7420  
                                   l10946 7408                                     l10882 8072  
                                   l10874 804A                                     l11834 2B9C  
                                   l11762 29C8                                     l11738 28FC  
                                   l11658 25D2                                     l11674 2612  
                                   l11826 2B62                                     l12810 5C76  
                                   l11930 4166                                     l14314 5EDA  
                                   l14322 5EF6                                     l14250 5D50  
                                   l12554 6BA6                                     l12546 6B70  
                                   l14058 50A4                                     l13522 882C  
                                   l13274 7BD8                                     l12474 56B8  
                                   l12458 560A                                     l14146 3020  
                                   l10788 7B3C                                     l10964 749E  
                                   l10948 7410                                     l10892 809A  
                                   l10972 5F1A                                     l11844 2C6E  
                                   l11772 2A00                                     l11748 2962  
                                   l12820 5D26                                     l11940 418A  
                                   l12708 6CC2                                     l12388 86AE  
                                   l14324 5F08                                     l12548 6B80  
                                   l13276 7BE8                                     l13292 825C  
                                   l12484 7FC2                                     l10886 8086  
                                   l10878 805E                                     l11838 2BA6  
                                   l11766 29D2                                     l12822 5D2A  
                                   l12662 6BE2                                     l14254 5D5A  
                                   l13526 8842                                     l13286 7C42  
                                   l13278 7BEE                                     l13294 826C  
                                   l14422 39AE                                     l10968 74B6  
                                   l10976 5F34                                     l11792 2A86  
                                   l11696 26A8                                     l11936 4180  
                                   l12744 7A8E                                     l11872 8470  
                                   l12672 6C08                                     l12840 8A36  
                                   l14264 5D9E                                     l14192 31FA  
                                   l14168 3104                                     l14408 392C  
                                   l10898 6F7A                                     l11786 2A76  
                                   l11946 41BC                                     l13810 4A94  
                                   l12690 6C56                                     l12674 6C0E  
                                   l12666 6BEC                                     l12762 8982  
                                   l14290 5E2E                                     l14274 5DBA  
                                   l12498 79A4                                     l14178 3178  
                                   l10996 5F8E                                     l11788 2A7C  
                                   l12756 7ACA                                     l12748 7A98  
                                   l13820 4AB2                                     l11868 844A  
                                   l12684 6C34                                     l12772 89A6  
                                   l12836 8BC4                                     l14284 5DFE  
                                   l11798 2AB4                                     l12782 5B6C  
                                   l13814 4AA0                                     l12686 6C4C  
                                   l12678 6C18                                     l13742 6E48  
                                   l12766 8994                                     l12870 7866  
                                   l12792 5B9A                                     l13904 4DF4  
                                   l13840 4B1E                                     l12696 6C84  
                                   l13760 6E9C                                     l13752 6E76  
                                   l12778 5B62                                     l11994 428E  
                                   l11986 4246                                     l13922 4EAE  
                                   l13826 4AB6                                     l12698 6C8A  
                                   l13770 6EC6                                     l13746 6E52  
                                   l12858 780A                                     l14298 5EB2  
                                   l14386 383E                                     l14810 539C  
                                   l12788 5B88                                     l13916 4E88  
                                   l13844 4B46                                     l13836 4AD4  
                                   l13764 6EA6                                     l12876 787E  
                                   l12892 770C                                     l14820 53CE  
                                   l13870 4C24                                     l13854 4BA8  
                                   l14398 38B8                                     l14750 522A  
                                   l13880 4CB0                                     l13864 4BCC  
                                   l13848 4B50                                     l12992 85BE  
                                   l14840 5402                                     l14808 5392  
                                   l14760 5268                                     l13874 4C2E  
                                   l13970 61BA                                     l13954 6164  
                                   l14834 53F2                                     l14770 529E  
                                   l14746 5214                                     l13956 6174  
                                   l12996 85D6                                     l14860 543C  
                                   l14836 53F6                                     l14780 531C  
                                   l14772 52AC                                     l14756 525C  
                                   l13982 6228                                     l13974 6206  
                                   l14782 5320                                     l13992 8602  
                                   l13984 6236                                     l14848 5416  
                                   l14768 5294                                     l13978 620E  
                                   l14874 5460                                     l14794 5352  
                                   l14876 5464                                     l14796 535C  
                                   l14878 546E                                     ?_main 0001  
                         __end_of___awdiv 7BAA                           __end_of___ftadd 56DE  
           MiApp_EstablishConnection@Mode 01F5                           __end_of___ftdiv 6A74  
                         __end_of___ftneg 8AC8                           __end_of___lldiv 7C66  
                         __end_of___ftmul 6684                           ___awdiv@divisor 0083  
                                   u13015 2180                                     u13008 2160  
                                   _T1CON 000FCD                                     u13201 243A  
                                   u13017 2184                                     u13061 226A  
                                   u13045 224E                           __end_of___fttol 6BB8  
                                   u12510 56F8                                     u13311 263C  
                                   u13047 2252                                     u15011 7518  
                                   u14108 8308                                     u11805 59C8  
                                   u15021 7582                                     u15110 85E2  
                                   u11815 5A50                                     u13191 2424  
                                   u12528 56FC                                     u11825 5AAA  
                                   u14090 8304                                     u14251 548C  
                                   u12660 46DE                                     u14261 54AA  
                                   u13630 2CF0                                     u15118 85E6  
                                   u11775 88A6                                     u15311 693E  
                                   u14511 6A8A                                     u11776 88A8  
                                   u13640 8C1C                                     u11945 8764  
                                   u11785 88B2                                     u17001 3A06  
                                   u11946 8766                                     u11786 88B4  
                                   u14530 6AD4                                     u11955 8770  
                                   u15331 6978                                     u17011 3BE0  
                                   u11956 8772                                     u16300 61D2  
                                   u15180 7628                                     u11965 892C  
                                   u11966 892E                                     u13590 2C50  
                                   u16150 4AF6                                     u16310 61D4  
                                   u14470 7FF4                                     u11975 8938  
                                   u13815 433E                                     u14535 6ACA  
                                   u11976 893A                                     u13920 45D6  
                                   u13816 4342                                     u16240 4E84  
                                   u16400 5020                                     u15361 653C  
                                   u12970 2128                                     u14810 5BC0  
                                   u13930 86FA                                     u16155 4AEA  
                                   u16075 6EE6                                     u13860 4442  
                                   u16076 6EEA                                     u16500 50B0  
                                   u15381 6576                                     u12990 215C  
                                   u16430 5044                                     u14478 7FF8  
                                   u14815 5BB4                                     u16408 5024  
                                   u12985 2146                                     u13785 4214  
                                   u13937 86F0                                     u14905 7824  
                                   u12978 212C                                     u13786 4218  
                                   u16530 50D4                                     u16450 5068  
                                   u12987 214A                                     u13875 44D2  
                                   u14931 788E                                     u16611 2E24  
                                   u13876 44D6                                     u16508 50B4  
                                   u16605 5160                                     u16621 2E8E  
                                   u16550 50F8                                     u16470 508C  
                                   u16438 5048                                     u16711 31EC  
                                   u16631 2FD2                                     u16721 3252  
                                   u16538 50D8                                     u16458 506C  
                                   u16731 32BC                                     u16651 3074  
                                   u16901 3642                                     u16558 50FC  
                                   u16478 5090                                     u17607 5D62  
                                   u16751 34CE                                     u16671 30F6  
                                   u16911 36AC                                     u17617 8A4E  
                                   u16841 5E10                                     u16921 37F0  
                                   u17627 6346                                     u16691 316A  
                                   u17637 618C                                     u17647 8612  
                                   u16951 38AA                                     u17657 6492  
                                   u17587 4EBE                                     u16971 391E  
                                   u17597 4FFE                                     u16991 39A0  
                                   i2l401 3DDC                                     i2l403 3D88  
                                   i2l258 67E6                                     i2l259 6816  
                                   i2l392 3CB4                                     i2l398 3D10  
                         ___awdiv@counter 0085                                     _PLLEN 007CDE  
                __size_of_InitSymbolTimer 0016                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _RPOR4 000EC4  
                                   _RPOR5 000EC5                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _UPUEN 0079CC                          __end_ofi2_SPIGet 8C3E  
                     ___lmul@multiplicand 0085                                _MiWiSeqNum 00D7  
                            ___lltoft@exp 0095                          __end_ofi2_SPIPut 8BE6  
                          _myShortAddress 00DD                           _decode_variable 77BC  
                          __CFG_FCMEN$OFF 000000             __size_of_MIWIInterruptHandler 0522  
                         __end_of_myMODEL FFF6             __size_of_MiApp_ConnectionMode 002C  
                                   _myUID FFF6                                     _floor 75C8  
                                   _m_var 01B7                                     _frexp 7FA0  
           __size_of_MiApp_UnicastAddress 049A                                     _errno 015A  
                           ___ftpack@sign 0085                                     main@j 03ED  
                                   main@x 03EB                                     tablat 000FF5  
                __end_of_SYS_InterruptLow 00F6                 do_NETWORK_REGISTER@result 01FB  
                                   plusw0 000FEB                                     plusw2 000FDB  
                                   status 000FD8         __size_of_encode_ufixed16_variable 009C  
            encode_uint16_variable@buffer 0081       __end_of_MiApp_TransceiverPowerState 89B8  
             _MiApp_TransceiverPowerState 897C                 ?_encode_ufixed16_variable 0081  
                  __end_of_InitConfigRegs 2035                   MiApp_SearchConnection@i 02EE  
               __size_of_MiMAC_SetChannel 00BA                           __initialization 834C  
                         ??_isSameAddress 0085                               ?i2_TxPacket 001C  
                   _AddNodeToNetworkTable 7192                 __size_of_MiMAC_SendPacket 024A  
                            __end_of_main 5476                          __end_of_ReadI2C1 8B96  
                 __size_of_MiMAC_SetPower 003A           do_NETWORK_REGISTER@shortaddress 01F7  
                  __size_of_SendMACPacket 007C                            TxPacket@status 009F  
                  read_sensors@adc_result 01E1                           _FAILEDMSG_LABEL 20E7  
                           main@best_RSSI 03EA                                 ??_CBC_MAC 009F  
                        __end_of_ScanTime 2071                           ??i2_RegisterSet 0016  
                        __end_of_OpenI2C1 8B3E                         _LIGHT_LEVEL_LABEL 20EB  
                               ??_CCM_Dec 00AB                                 ??_CCM_Enc 00AB  
                           ??_RegisterSet 0085                                    ??_main 03E5  
                           ___fttol@sign1 00AE                               ?_MiMAC_Init 0093  
                           __activetblptr 000003         MiApp_SearchConnection@channelMask 02E0  
                ??_MiApp_SearchConnection 01EC                      __end_of_MiWi_TickGet 8520  
                                  CTR@len 009A                                    CTR@key 009B  
                           _IRQ1_Received 0040                      _SearchForLongAddress 7898  
                 MiApp_SetChannel@channel 008B                          __end_of_TxPacket 60B0  
                        __end_of_RtccWrOn 8C0E        __size_of_security_force_key_update 004E  
       MiApp_ProtocolInit@bNetworkFreezer 0098                      _MiMAC_ReceivedPacket 45E2  
                      __size_of_MiWiTasks 0BF2                           i2SetRFMode@mode 0018  
                 ??_encode_uint8_variable 008C                                    ?_floor 00BE  
                                  ?_frexp 0081                          __end_of___altoft 7E68  
                                  _EECON2 000FA7                   __end_of_update_variable 77BC  
             __end_of_do_NETWORK_REGISTER 623C                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 0081  
                        __end_of___ftpack 73BA                      _IncomingFrameCounter 0200  
                        __end_of___lltoft 82D0                                    i1l1220 00A8  
                                  i1l1222 00AE                                    i1l1219 00AC  
                                  _MACSeq 0041                            __CFG_WDTEN$OFF 000000  
                              _OpenSocket 7A2C                          __end_of___lwtoft 8B1E  
                                  _RTCCAL 000F3E                                    _RTCCFG 000F3F  
                                  _PVALUE 2071                                    _RPINR1 000EE1  
                                  _SVALUE 2091                                    _SPIGet 8C20  
                                  _SPIPut 8B96                   i2RegisterSet@IRQ0select 0017  
               __size_of_MiMAC_PowerState 0076                  ??_send_periodical_update 01FD  
                 i2RegisterSet@IRQ1select 0016                  __end_of_TX_POWER_1_DB_MW 20C7  
                __end_of_TX_POWER_4_DB_MW 20CD                                TxPacket@t1 0094  
                              TxPacket@t2 0098                         _StaticSecurityKey 1FEC  
                      __size_of_SetRFMode 008E                  __end_of_TX_POWER_7_DB_MW 20FB  
                          __CFG_XINST$OFF 000000                        _myUID_absconstaddr 01FFF6  
                                  _TxData 00D8                             _m_temperature 0155  
                                  ___ftge 7964                                    ___lmul 8438  
                               ??___awdiv 0085                      MiWiTasks@sourcePANID 01E3  
                               ??___ftadd 008F                                    _hasAck 0047  
                               ??___ftdiv 009C                                 ??___ftneg 00C9  
                               ??___lldiv 0089                                 ??___ftmul 01D3  
                               ??___fttol 00A9                 __size_of_MiApp_SetChannel 001E  
               __end_of_LIGHT_LEVEL_LABEL 20EF                                    _encode 5928  
                __end_of_TX_POWER_INVALID 20BA                             ?_read_sensors 0001  
                adapt_power_level@m_power 02F5                                    _memcpy 86BE  
                                  clear_0 8352                                    clear_1 835E  
                                  clear_2 836A                                    clear_3 8376  
                                  clear_4 8382                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0087                              _CCM_Dec$2093 00B1  
                 __end_of_decode_variable 7898                __p_StaticSecurityKey_const 1FEC  
          __size_of_SearchForShortAddress 008C             __end_of_SearchForShortAddress 814A  
                                  _strcmp 865C                        decode_variable@var 0096  
                                  floor@i 00C1                                    floor@x 00BE  
                   ___ftmul@f3_as_product 01D7                     ?_SearchForLongAddress 0001  
                            __pdataCOMRAM 004A                              _CCM_Enc$2085 00AD  
                  process_update_answer@i 02FC                            _openSocketInfo 0120  
                            __mediumconst 1FF4                     ?_MiMAC_ReceivedPacket 0001  
                  do_POWER_TEST@power_lvl 01F5                                    tblptrh 000FF7  
                                  tblptrl 000FF6                      _myMODEL_absconstaddr 01FFF4  
                                  tblptru 000FF8               ??_MiApp_EstablishConnection 01F6  
                               ?_DELAY_ms 008D                       __end_of_RegisterSet 88B6  
                   _process_update_answer 5D44                              ?_timer_reset 0001  
                           ?_RegisterRead 0001         __end_of_security_force_key_update 8870  
                     __size_ofi2_TxPacket 014E                         _ReceivedBankIndex 0045  
                           _SendMACPacket 82D0                         ??_InitSymbolTimer 0081  
                            ?i2_SetRFMode 0001      MiApp_UnicastAddress@MiWiFrameControl 02F0  
                       _SYSTEM_Initialize 7074                        __size_of_WriteI2C1 0068  
                    _MiApp_DiscardMessage 8C2A                                __accesstop 0060  
                      __size_of_WriteFIFO 0042                   __end_of__initialization 83B8  
                              ___altoft@c 00B4                  MiApp_SearchConnection@t1 02E4  
                MiApp_SearchConnection@t2 02E8                                ___ftadd@f1 0089  
                              ___ftadd@f2 008C                                ___ftge@ff1 0081  
                              ___ftge@ff2 0084                 __end_of_StaticSecurityKey 1FF4  
         MiMAC_ReceivedPacket@currentTick 00BC                        ?_SYSTEM_Initialize 0001  
                     __size_of_MiMAC_Init 0142                             ___rparam_used 000001  
                              ___ftdiv@f1 0096                                ___ftdiv@f2 0099  
                              ___ftdiv@f3 00A0                  MIWIInterruptHandler@bAck 006D  
                       CCM_Enc@payloadLen 00A8                                ___ftneg@f1 00C6  
                  __size_of_do_POWER_TEST 0162                   __end_of_FAILEDMSG_LABEL 20EB  
                  ?_AddNodeToNetworkTable 0001                                ___ftmul@f1 00C9  
                              ___ftmul@f2 00CC            __size_of_send_writables_update 0104  
                      __size_of_do_UPDATE 0188              __end_of_findNextNetworkEntry 897C  
           __end_of_send_writables_update 75C8                                ___fttol@f1 00A5  
                   _ActiveScanResultIndex 00D6                            __pcstackCOMRAM 0001  
                       __end_of_MiWiTasks 2CF6                                 ?i2_SPIGet 0001  
                               ?i2_SPIPut 0001                              __pidataBANK1 8C40  
                     ??_SYSTEM_Initialize 0081                                ___lltoft@c 008D  
                          ??_read_sensors 01DC                     i2RegisterRead@address 0017  
                           __end_of_myUID FFF8                             __end_of_floor 76C6  
                           __end_of_frexp 8030          MiMAC_ReceivedPacket@FrameCounter 00C0  
                               CTR@nounce 009D           MiApp_UnicastAddress@DestAddress 01E8  
                              ___lwtoft@c 0089                           TxPacket@rssival 00A2  
                             OpenSocket@i 00D0           __size_of_MiApp_SearchConnection 0202  
                         _ConnectionTable 0246                           __CFG_OSC$INTOSC 000000  
                        ??i2_RegisterRead 0014                         __end_of_SetRFMode 80BE  
                            ?i2_WriteFIFO 0001                                ??_DELAY_ms 008F  
                          ??_RegisterRead 0083                   ?_encode_uint16_variable 0081  
                          ?_SendMACPacket 00BA                                   ??_floor 00C1  
                                 ??_frexp 0086                 __end_of_SYSTEM_Initialize 7192  
         MiApp_TransceiverPowerState@Mode 0095                 MiWiTasks@destShortAddress 01DE  
                        ?_update_variable 0001                     isSameAddress@Address1 0081  
                   isSameAddress@Address2 0083                                 ?_ReadI2C1 0001  
            __size_of_send_initial_update 081E                                __pbssBANK0 00D1  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                     ?_MiApp_DiscardMessage 0001  
                             ?_OpenSocket 0001               __size_of_MiApp_ProtocolInit 0126  
                                 ?_SPIGet 0001          adapt_power_level@last_good_power 02F4  
                                 CTR@text 0098                                 ?_OpenI2C1 0081  
                                 ?_SPIPut 0001                        RegisterSet@setting 0083  
                          isSameAddress@i 0087                       i2RegisterRead@value 0014  
         __size_of_send_periodical_update 0712                         _m_failed_messages 0142  
                        _MiMAC_SetChannel 7C66                                CBC_MAC@MIC 009D  
               _MiApp_EstablishConnection 4A7C                  MiMAC_SetAltAddress@PANID 0083  
                            CBC_MAC@block 00A2                                CBC_MAC@len 009A  
                              CBC_MAC@key 009B                                 ?_TxPacket 008B  
                               ?_RtccWrOn 0001                          _MiMAC_SendPacket 56DE  
                              ??i2_SPIGet 0014                                   ?___ftge 0081  
                          _MiMAC_SetPower 89B8                                ??i2_SPIPut 0012  
                                 ?___lmul 0081                              OpenI2C1@slew 0081  
                                 ?_encode 0081                     __size_of_MiWi_TickGet 0072  
                               ?___altoft 00B4                                   ?_memcpy 0081  
                                 _CBC_MAC 73BA                            ___lmul@product 0089  
                                 SPIPut@i 0081                                   SPIPut@v 0082  
                               ?___ftpack 0081                         __end_of_WriteI2C1 85F8  
                        ?_decode_variable 008B                                   _CCM_Dec 6684  
                                 _CCM_Enc 6CFA                                 ?___lltoft 008D  
                  ??_SearchForLongAddress 0081                         __end_of_WriteFIFO 893C  
                                 ?_strcmp 0081                               _RegisterSet 8870  
     MiApp_SearchConnection@backupChannel 02ED                                 ?___lwtoft 0089  
                                 i2l13310 67F4                    ??_MiMAC_ReceivedPacket 00B4  
                                 i2l13306 67E2                                   i2l12620 81EA  
                                 i2l13340 6862                                   i2l13332 6850  
                                 i2l12632 8220                                   i2l12624 81FC  
                                 i2l12616 81D8                                   i2l13360 68A6  
                                 i2l13344 686C                                   i2l13328 6838  
                                 i2l12562 8786                                   i2l13370 6914  
                                 i2l12628 820E                                   i2l13356 689A  
                                 i2l13372 691A                                   i2l13604 3D56  
                                 i2l12638 8232                                   i2l13366 6906  
                                 i2l13622 3DA0                                   i2l13710 4108  
                                 i2l12576 87B2                                   i2l13704 40DE  
                                 i2l13560 3C74                                   i2l13552 3C56  
                                 i2l13642 3EEE                                   i2l13634 3EAC  
                                 i2l13618 3D90                                   i2l13706 40F6  
                                 i2l13714 410C                                   i2l13724 412E  
                                 i2l13652 3F26                                   i2l13628 3E26  
                                 i2l13636 3EB0                                   i2l13564 3C82  
                                 i2l13548 3C4C                                   i2l13708 4104  
                                 i2l13662 3F5E                                   i2l13646 3EF8  
                                 i2l13638 3EC8                                   i2l13574 3CAC  
                                 i2l13672 3F96                                   i2l13584 3CCE  
                                 i2l13690 404C                                   i2l13674 3F9C  
                                 i2l13666 3F68                                   i2l13684 402A  
                                 i2l13596 3D0A                                   i2l13588 3CDE  
                                 i2l13694 4052                                   i2l13678 3FA6  
                           _do_POWER_TEST 63C4                           MiWiTasks@cIndex 01D7  
          __end_of_encode_uint16_variable 7F04                    ?_process_update_answer 0001  
                   i2WriteFIFO@IRQ0select 0016                     i2WriteFIFO@IRQ1select 0015  
                       __end_of_do_UPDATE 63C4                                   _RPINR21 000EFC  
                                 _RPINR22 000EFD                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                                   _SSP2BUF 000F75  
        MIWIInterruptHandler@ackInfoIndex 006F                                do_UPDATE@i 01FA  
                                 _RF_Mode 0043                                   _AckInfo 0228  
                                 _RSSIVal 0044                                ??_ReadI2C1 0081  
            __size_of_MiMAC_SetAltAddress 0002               AddNodeToNetworkTable@handle 008A  
                       _adapt_power_level 85F8                         ?_SYS_InterruptLow 0001  
                         _timerExtension1 00DA                           _timerExtension2 0049  
                             TxPacket@CCA 008B                                ??_OpenI2C1 0082  
                MiApp_ConnectionMode@Mode 0082                           __size_of_SPIGet 000A  
                        _MiMAC_PowerState 83C2                           __size_of_SPIPut 001C  
             __end_of_MiMAC_DiscardPacket 8B7A                    _MiApp_SearchConnection 5B42  
                      ?_adapt_power_level 01FB                        ??_SYS_InterruptLow 0001  
                              DELAY_ms@ms 008D                       _AcknowledgementAddr 0158  
                            _MiWi_TickGet 84AE              __end_of_MIWIInterruptHandler 4148  
                  __end_of_MiMAC_SetPower 89F2                                   __Hparam 0000  
                                 __Lparam 0000              __end_of_MiApp_ConnectionMode 8AF4  
                            ??i2_TxPacket 001D                                ??_TxPacket 008C  
                              ??_RtccWrOn 0081                                CCM_Dec@key 00A9  
            __end_of_MiApp_UnicastAddress 45E2                       do_POWER_TEST@result 01F4  
                   adapt_power_level@rssi 02F3                            main@scanresult 03EE  
                         __size_of___ftge 00C8                   __size_ofi2_MiWi_TickGet 0058  
                                 ___awdiv 7AEC                           __size_of___lmul 0076  
                                 ___ftadd 5476                       ??_adapt_power_level 01FC  
                                 ___ftdiv 6928                     MIWIInterruptHandler@i 0072  
                              CCM_Enc@key 00A9                                   ___ftneg 8A98  
                                 ___lldiv 7BAA                                   ___ftmul 6526  
                              _myAppState 016A                          _MiApp_SetChannel 8B3E  
                                 ___fttol 6A74                           __size_of_encode 021A  
                              ??___altoft 00B8                           __CFG_STVREN$OFF 000000  
                   __CFG_RTCOSC$INTOSCREF 000000                            _tempNodeStatus 0048  
                 __size_of_wait_for_1_sec 0036                                   __pcinit 834C  
                         __size_of_memcpy 0062                                ??___ftpack 0086  
                                 __ramtop 0F00      __size_of_MiApp_TransceiverPowerState 003C  
               do_POWER_TEST@shortaddress 01F9                                ??___lltoft 0091  
                     __size_of_OpenSocket 00C0                      SendMACPacket@Address 00BA  
                                 __ptext0 51B8                                   __ptext1 3514  
                            ??_MiMAC_Init 0096                                   __ptext2 2CF6  
                                 __ptext3 75C8                                   __ptext4 7FA0  
                                 __ptext5 7964                                   __ptext6 5476  
                                 __ptext7 7DCA                                   __ptext8 7E68  
                                 __ptext9 7F04                                   _myPANID 00DB  
                                 _myMODEL FFF4                                ??___lwtoft 008C  
                            __size_of_CTR 0120                           __size_of_strcmp 0062  
                  _send_periodical_update 3514                            ?_do_POWER_TEST 0001  
                               _T1CONbits 000FCD                 process_update_answer@size 02FF  
                                 _m_power 0169                  ??_MiApp_MessageAvailable 00D0  
                           _myLongAddress 01C8                  _send_initial_update$5076 03D7  
                _send_initial_update$5077 03DA                  _send_initial_update$5078 03DD  
                _send_initial_update$5079 03E0                           ??_SendMACPacket 00BD  
                  RegisterRead@IRQ0select 0085                     MiApp_UnicastAddress@i 02F1  
                  RegisterRead@IRQ1select 0084                                   encode@i 0091  
                    _findNextNetworkEntry 893C                __size_of_SYSTEM_Initialize 011E  
                  ??_MiApp_DiscardMessage 0081                 __end_of_adapt_power_level 865C  
                          __pintcode_body 8520                        __end_ofi2_TxPacket 6928  
                    end_of_initialization 83B8                          _MiWiStateMachine 00D4  
          __size_of_encode_uint8_variable 008A                      __end_of_read_sensors 51B8  
           __end_of_encode_uint8_variable 81D4                      __size_of_timer_reset 001A  
                               i2SPIPut@i 0012                                 i2SPIPut@v 0013  
                                 memcpy@d 0087                                   memcpy@n 0085  
                                 memcpy@s 0089             MiMAC_SendPacket@MACPayloadLen 00B5  
           MIWIInterruptHandler@BankIndex 0071                                   int_func 8520  
                    __size_ofi2_SetRFMode 0080                   SendMACPacket@PacketType 00BC  
                               i2u1403_45 8A1E                                 i2u1403_46 8A20  
                               i2u1404_45 8A28                                 i2u1404_46 8A2A  
                               i2u1463_45 88EA                                 i2u1463_46 88EC  
                               i2u1464_45 88F4                                 i2u1464_46 88F6  
                               i2u1465_45 8A8A                                 i2u1465_46 8A8C  
                               i2u1466_45 8A94                                 i2u1466_46 8A96  
                         ___lldiv@divisor 0085                        __end_of_MiMAC_Init 6CFA  
                         ___lldiv@counter 008D                           ?_MiMAC_SetPower 0001  
             MIWIInterruptHandler@counter 0066               encode_uint8_variable@buffer 0081  
                 MiMAC_SetChannel@channel 008A                                   postdec1 000FE5  
                                 postdec2 000FDD                      __end_of_RegisterRead 8778  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                         _m_battery_voltage 0152  
                   __end_of_isSameAddress 8822      DELAY_ms@cyclesRequiredForEntireDelay 008F  
                     RegisterRead@address 0086                     MiWiTasks@CapacityByte 01E1  
                           WriteFIFO@Data 0083                                   strcmp@r 0086  
                              _timer_flag 016B                           _InitSymbolTimer 8BE6  
                   __end_ofi2_RegisterSet 8A2C            encode_ufixed16_variable@buffer 0081  
                               _TRISAbits 000F92                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                encode@text 0081  
                   ?_findNextNetworkEntry 0001                             _mySecurityKey 0136  
                 MiMAC_SendPacket@TxIndex 00B8             MIWIInterruptHandler@PacketLen 0070  
                    __size_ofi2_WriteFIFO 0036                  _encode_ufixed16_variable 7F04  
                       __size_of_DELAY_ms 00AA                                main@Status 03E9  
                       CCM_Dec@payloadLen 00A8                MiMAC_SendPacket@transParam 00B0  
                 ??_AddNodeToNetworkTable 0087                MiMAC_SetAltAddress@Address 0081  
                             ___ftdiv@exp 00A3                 MiApp_UnicastAddress@SecEn 01EB  
                          __end_of_PVALUE 2091                            __end_of_SVALUE 20B1  
            __size_of_do_NETWORK_REGISTER 018C                            __end_of_SPIGet 8C2A  
                              main@result 03E7                            __end_of_SPIPut 8BB2  
                         wait_for_1_sec@i 0082                    SearchForShortAddress@i 0083  
                             ___ftmul@exp 01D6         process_update_answer@shortaddress 02FD  
                          __end_of___ftge 7A2C                            __end_of___lmul 84AE  
                     _send_initial_update 2CF6                         __size_ofi2_SPIGet 000A  
                       __size_ofi2_SPIPut 001A                             __pidataCOMRAM 8C3E  
                               _MiWiTasks 2104                           ??_do_POWER_TEST 00D0  
                          __end_of_encode 5B42        __size_of_MiApp_EstablishConnection 0436  
                          __end_of_memcpy 8720                                floor@expon 00C4  
                          __end_of_strcmp 86BE           __size_of_MiApp_MessageAvailable 0012  
        MiMAC_ReceivedPacket@PayloadIndex 00C6                  __end_of_MiMAC_SetChannel 7D20  
                     start_initialization 834C                     _SearchForShortAddress 80BE  
                             __end_of_CTR 7074                      _MIWIInterruptHandler 3C26  
                     WriteFIFO@IRQ0select 0085                             TxPacket@reTry 009D  
                     WriteFIFO@IRQ1select 0084                  __end_of_MiMAC_SendPacket 5928  
                    _MiApp_ConnectionMode 8AC8                        TxPacket@CCARetries 009C  
              i2TxPacket@allowedTxFailure 0030                      _MiApp_UnicastAddress 4148  
              __size_of_adapt_power_level 0064             MIWIInterruptHandler@ackPacket 0069  
                    ?_send_initial_update 0001                                 _SetRFMode 8030  
              ?_security_force_key_update 0001                              ??_OpenSocket 00D0  
                                CBC_MAC@i 00A4                                  CBC_MAC@j 00A3  
                              frexp@value 0081                                  ??_SPIGet 0083  
                       __size_of_ReadI2C1 001C                                  ??_SPIPut 0081  
                          _currentChannel 01D2                 encode_uint16_variable@var 0083  
                       __size_of_OpenI2C1 0020                                 TxPacket@i 00A1  
                                CCM_Dec@i 00B3                                  CCM_Enc@i 00AF  
                                ??___ftge 0087                   __end_of_InitSymbolTimer 8BFC  
                          i2_MiWi_TickGet 8778                                  ??___lmul 0089  
       MiApp_UnicastAddress@PermanentAddr 01EA                          _m_uptime_seconds 014A  
                   _send_writables_update 74C4                      do_NETWORK_REGISTER@i 01F9  
                                ??_encode 0085                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK1 01FE                         __size_of_TxPacket 01A2  
                       __size_of_RtccWrOn 0012                            _wait_for_1_sec 8A2C  
               send_periodical_update@tmp 03E3                       _MiMAC_SetAltAddress 8C42  
                                ??_memcpy 0087                                  ?_CBC_MAC 0098  
                              ?_MiWiTasks 0001                                  ?_CCM_Dec 00A5  
                                ?_CCM_Enc 00A5                              ?_RegisterSet 0083  
                 ??_process_update_answer 02F3                                  ??_strcmp 0085  
                      __end_of_OpenSocket 7AEC                         __size_of___altoft 009E  
           MIWIInterruptHandler@fifo_stat 0068                  __end_of_MiMAC_PowerState 8438  
                             _ALRMCFGbits 000F47                         RegisterRead@value 0083  
                       __size_of___ftpack 010C        MiApp_SearchConnection@ScanDuration 02EC  
                 MiWi_TickGet@currentTime 0087                         __size_of___lltoft 007C  
                             __pbssCOMRAM 0034                    ??_findNextNetworkEntry 0081  
                               _WriteI2C1 8590                     ?_MIWIInterruptHandler 0001  
                       __size_of___lwtoft 002A                     __size_of_read_sensors 0306  
                               _WriteFIFO 88FA                             __pcstackBANK0 0060  
                           __pcstackBANK1 01D3                             __pcstackBANK2 02E0  
                           __pcstackBANK3 03D4                     ?_MiApp_ConnectionMode 0001  
                                CTR@block 00A2                               _defaultHops 004A  
                   ?_MiApp_UnicastAddress 01E8                __end_of_MiApp_ProtocolInit 6F54  
                   ??_send_initial_update 01FD                MiApp_EstablishConnection@i 02FD  
                       _consecutive_fails 0166                  __end_of_MiApp_SetChannel 8B5C  
                              ?_SetRFMode 0001                __end_of_TX_POWER_N_2_DB_MW 20D3  
                    ?_MiMAC_SetAltAddress 0081                   ?_MiApp_SearchConnection 01E8  
                        __p_myMODEL_const FFF4                                 _do_UPDATE 623C  
              __end_of_TX_POWER_N_5_DB_MW 20D9                               MiMAC_Init@i 0096  
              __end_of_TX_POWER_N_8_DB_MW 20C1                     __size_of_RegisterRead 0058  
                  _MiApp_MessageAvailable 8C0E              ?_MiApp_TransceiverPowerState 0001  
                __size_of_update_variable 00F6                    __end_ofi2_MiWi_TickGet 87D0  
                       MiMAC_SendPacket@i 00B9                          _MiWiCapacityInfo 0164  
                             CBC_MAC@text 0098                                 __pintcode 0008  
                  __end_of_wait_for_1_sec 8A62                             __pmediumconst 1FF4  
                                ?___awdiv 0081                                  ?___ftadd 0089  
               MiMAC_SendPacket@headerLen 00B7                                  ?___ftdiv 0096  
                                ?___ftneg 00C6                                  ?___lldiv 0081  
                                ?___ftmul 00C9                                  ?___fttol 00A5  
             MiApp_UnicastAddress@t1_2763 02E8               MiApp_UnicastAddress@t2_2774 02EC  
                 ?_send_periodical_update 0001                               __pintcodelo 0018  
                            _read_sensors 4EB2                 __size_of_SYS_InterruptLow 00DE  
              security_force_key_update@i 0081                    ?_SearchForShortAddress 0001  
           __size_of_SearchForLongAddress 00CC                                ?_WriteI2C1 0001  
                              ?_WriteFIFO 0001                        _AcknowledgementSeq 01FE  
           __size_of_MiMAC_ReceivedPacket 049A                                  _DELAY_ms 7D20  
                        CCM_Dec@headerLen 00A7                     do_UPDATE@shortaddress 01F8  
             MiWiTasks@sourceShortAddress 01E5                  __size_of_decode_variable 00DC  
                               _last_rssi 0167            __end_of_MiApp_SearchConnection 5D44  
                          __size_of_floor 00FE                            __size_of_frexp 0090  
                            _RegisterRead 8720             __end_of_BATTERY_VOLTAGE_LABEL 20E7  
                   ??_MiMAC_SetAltAddress 0085                                ?_do_UPDATE 01F4  
               MiMAC_SetPower@outputPower 0089                          ??_MiMAC_SetPower 0087  
             encode_ufixed16_variable@var 0083                    _UPDATE_FREQUENCY_LABEL 20FB  
                 __size_ofi2_RegisterRead 0044                                  _LATAbits 000F89  
                                _LATBbits 000F8A                      i2RegisterSet@setting 0014  
                                _LATCbits 000F8B                                 _tempPANID 015E  
                                _PIE1bits 000F9D                                  _IPR3bits 000FA5  
                                _PIE3bits 000FA3                           ?i2_MiWi_TickGet 0012  
                                _PIR1bits 000F9E                                  _PIR3bits 000FA4  
           ??_MiApp_TransceiverPowerState 0095                                 _rxMessage 012C  
                                _RCONbits 000FD0                                  i2_SPIGet 8C34  
                  ?_send_writables_update 0001                                  i2_SPIPut 8BCC  
                         ?_wait_for_1_sec 0001                          ?_InitSymbolTimer 0001  
          __end_of_send_periodical_update 3C26                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                                  _SSP2CON1 000F72  
                encode_uint8_variable@var 0083                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
            __size_of_MiMAC_DiscardPacket 001E           MIWIInterruptHandler@RxPacketPtr 006E  
       process_update_answer@ack_required 02FB  MiApp_EstablishConnection@ActiveScanIndex 02FC  
                             ??_MiWiTasks 00C8                               _MACRxPacket 0034  
                               encode@key 0083                                 encode@sum 0096  
                                _RSSILock 0165                               _MACTxBuffer 02A0  
                           SetRFMode@mode 0087                          __size_of_CBC_MAC 010A  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                         _m_sent_messages 0146                          MiWiTasks@rxIndex 01E0  
                        __size_of_CCM_Dec 0156                          __size_of_CCM_Enc 0134  
              ??_encode_ufixed16_variable 008C                    ??_MIWIInterruptHandler 0060  
                       _SYS_InterruptHigh 0008                       _do_NETWORK_REGISTER 60B0  
                do_NETWORK_REGISTER@p_uid 01F4                     i2TxPacket@TxPacketLen 0031  
                  ??_MiApp_ConnectionMode 0081                         __CFG_CFGPLLEN$OFF 000000  
                    _OutgoingFrameCounter 013E                    ??_MiApp_UnicastAddress 01EC  
                      ?_SYS_InterruptHigh 0001                           _MiWiAckRequired 0042  
                           ??_timer_reset 0081                     __end_of_SendMACPacket 834C  
                                _ConnMode 003F                      __end_of_UPTIME_LABEL 2103  
                       ___lmul@multiplier 0081                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0            MiApp_EstablishConnection@retry 02FB  
                           ??i2_SetRFMode 0018        do_NETWORK_REGISTER@sleeping_device 01F6  
                             ??_SetRFMode 0087                                  _ReadI2C1 8B7A  
                   SearchForLongAddress@i 0086                     SearchForLongAddress@j 0085  
           __size_of_MiApp_DiscardMessage 000A                                _ADRESHbits 000FC4  
                     ??_SYS_InterruptHigh 0073                                _ADRESLbits 000FC3  
                                _TxMACSeq 0046                                  _ScanTime 2035  
                                _OpenI2C1 8B1E                     _encode_uint8_variable 814A  
                               frexp@eptr 0084                      ?_do_NETWORK_REGISTER 01F4  
          __size_of_AddNodeToNetworkTable 011C             __end_of_AddNodeToNetworkTable 72AE  
                              _ANCON0bits 000F48                                _ANCON1bits 000F49  
                                __Hrparam 0000                                  _RxPacket 0350  
                                _TxBuffer 016C                                  __Lrparam 0000  
                                _TxPacket 5F0E                                  _RtccWrOn 8BFC  
                             CCM_Dec@text 00A5                    adapt_power_level@power 0001  
                   MiMAC_ReceivedPacket@i 00C7                     MiMAC_ReceivedPacket@j 00C5  
                   MiMAC_ReceivedPacket@k 00C4                       __end_of_POWER_LABEL 20F3  
                      main@best_candidate 03E8                          __size_of___awdiv 00BE  
                        __size_of___ftadd 0268                          __size_of___ftdiv 014C  
                        __size_of___ftneg 0030                          __size_of___lldiv 00BC  
                                ___altoft 7DCA                          __size_of___ftmul 015E  
                       ??_update_variable 008A                          __size_of___fttol 0144  
                         _tempLongAddress 014E                  ??_encode_uint16_variable 008C  
              send_periodical_update@tmp2 03D4                                  ___ftpack 72AE  
                             CCM_Enc@text 00A5                 __end_of_SYS_InterruptHigh 8590  
                                ___lltoft 8254                  i2RegisterRead@IRQ0select 0016  
                                ___lwtoft 8AF4                  i2RegisterRead@IRQ1select 0015  
                  AddNodeToNetworkTable@i 0089                               ??_WriteI2C1 0081  
                    __size_of_RegisterSet 0046                             ??i2_WriteFIFO 0014  
                             ??_WriteFIFO 0083                         ?_MiMAC_SetChannel 0088  
                                __ptext10 8254                                  __ptext11 7BAA  
                                __ptext20 8590                                  __ptext12 8A98  
                                __ptext21 8B7A                                  __ptext13 8822  
                                __ptext30 623C                                  __ptext22 8B1E  
                                __ptext14 4EB2                                  __ptext31 77BC  
                                __ptext23 5D44                                  __ptext15 8AF4  
                                __ptext40 8BFC                                  __ptext32 897C  
                                __ptext24 8A2C                                  __ptext16 6A74  
                                __ptext41 6E2E                                  __ptext33 83C2  
                                __ptext25 76C6                                  __ptext17 6526  
                                __ptext50 82D0                                  __ptext42 6BB8  
                                __ptext34 60B0                                  __ptext26 865C  
                                __ptext18 6928                                  __ptext51 8B3E  
                                __ptext43 7D20                                  __ptext35 86BE  
                                __ptext27 8BB2                                  __ptext19 72AE  
                                __ptext60 8870                                  __ptext52 7C66  
                                __ptext44 8438                                  __ptext36 85F8  
                                __ptext28 74C4                                  __ptext61 8720  
                                __ptext53 8C0E                                  __ptext45 8BE6  
                                __ptext37 63C4                                  __ptext29 814A  
                                __ptext70 73BA                                  __ptext62 8C20  
                                __ptext54 2104                                  __ptext46 4A7C  
                                __ptext38 89B8                                  __ptext71 5928  
                                __ptext63 8B96                                  __ptext55 8C42  
                                __ptext47 7A2C                                  __ptext39 7074  
                                __ptext72 7AEC                                  __ptext64 6CFA  
                                __ptext56 56DE                                  __ptext48 4148  
                                __ptext73 7192                                  __ptext65 45E2  
                                __ptext57 5F0E                                  __ptext49 5B42  
                                __ptext90 8778                                  __ptext82 3C26  
                                __ptext74 893C                                  __ptext66 87D0  
                                __ptext58 88FA                                  __ptext83 67DA  
                                __ptext75 80BE                                  __ptext67 84AE  
                                __ptext59 8030                                  __ptext84 8A62  
                                __ptext76 7898                                  __ptext68 6684  
                                __ptext85 81D4                                  __ptext77 8C2A  
                                __ptext69 6F54                                  __ptext86 89F2  
                                __ptext78 8B5C                                  __ptext87 88B6  
                                __ptext79 8AC8                                  __ptext88 8C34  
                                __ptext89 8BCC                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                  TxPacket@allowedTxFailure 009E  
                      ??_MiMAC_SetChannel 0089                         ?_MiMAC_SendPacket 00B0  
                            _SSP2CON1bits 000F72                                  _m_buffer 0197  
                             ??_do_UPDATE 00D0               ??_security_force_key_update 0081  
                  __size_of_isSameAddress 0052                        ??_MiMAC_SendPacket 00B6  
                                _p_buffer 015C                         do_POWER_TEST@rssi 01F8  
                           __size_of_main 02BE                       __end_of_timer_reset 8BCC  
                       ??_decode_variable 0094                     ??_do_NETWORK_REGISTER 00D0  
                                _myParent 00D9                    __size_ofi2_RegisterSet 003A  
                       _TEMPERATURE_LABEL 20F3                       __end_ofi2_SetRFMode 8254  
                       WriteI2C1@data_out 0082                    MiApp_UnicastAddress@t1 02E0  
                  MiApp_UnicastAddress@t2 02E4                                  _tmpBlock 01CC  
                        _tempShortAddress 01D0                                  int$flags 004C  
             MiApp_EstablishConnection@t1 02F3               MiApp_EstablishConnection@t2 02F7  
                       _TX_POWER_10_DB_MW 20D9              i2MiWi_TickGet@failureCounter 0017  
             process_update_answer@result 02FA                         MiMAC_PowerState@i 0094  
                       _TX_POWER_13_DB_MW 20DE                          _SYS_InterruptLow 0018  
                            _SSP1STATbits 000FC7                         read_sensors@value 01E3  
              MiMAC_SendPacket@MACPayload 00B3                         OpenI2C1@sync_mode 0082  
                   __end_of_do_POWER_TEST 6526                     findNextNetworkEntry@i 0081  
                       ?_MiMAC_PowerState 0001            __size_of_process_update_answer 01CA  
                              _INTCONbits 000FF2                           do_UPDATE@F10230 0162  
           __end_of_process_update_answer 5F0E                                  memcpy@d1 0081  
                         i2WriteFIFO@Data 0014                                  memcpy@s1 0083  
                      ??_MiMAC_PowerState 0093                     do_UPDATE@ack_required 01F7  
                                intlevel1 0000                                  intlevel2 0000  
                       ?_MiApp_SetChannel 0001                   ?_MiApp_MessageAvailable 0001  
                     __end_ofi2_WriteFIFO 8A98                    ?_encode_uint8_variable 0081  
                          i2_RegisterRead 88B6                 __end_of_TEMPERATURE_LABEL 20F7  
                        ___lldiv@dividend 0081                        ??_MiApp_SetChannel 008B  
                           ?_MiWi_TickGet 0081                               _POWER_LABEL 20EF  
                              _OSCCONbits 000FD3                        _m_update_frequency 01FF  
                      _MiApp_ProtocolInit 6E2E                 __end_of_TX_POWER_10_DB_MW 20DE  
                             _RTCVALHbits 000F3B                               _RTCVALLbits 000F3A  
               __end_of_TX_POWER_13_DB_MW 20E3                        _TX_POWER_N_2_DB_MW 20CD  
                           _MACInitParams 003C                       MiMAC_Init@initValue 0093  
                      _TX_POWER_N_5_DB_MW 20D3                           do_UPDATE@p_buff 01F4  
                      _TX_POWER_N_8_DB_MW 20BA                 _security_force_key_update 8822  
                           _isSameAddress 87D0                   ??_SearchForShortAddress 0081  
                         do_UPDATE@result 01FC                       ?_MiApp_ProtocolInit 0001  
              MiWi_TickGet@failureCounter 0086           __size_of_encode_uint16_variable 009C  
              __size_of_SYS_InterruptHigh 8588                                _RTCCFGbits 000F3F  
        __end_of_encode_ufixed16_variable 7FA0                            __p_myUID_const FFF6  
                        _BroadcastRecords 0100                        MiWiTasks@destPANID 01DC  
                        _TX_POWER_1_DB_MW 20C1                             i2_RegisterSet 89F2  
                                strcmp@s1 0081                                  strcmp@s2 0083  
                              _PPSCONbits 000EBF                          _TX_POWER_4_DB_MW 20C7  
             __end_of_send_initial_update 3514                          ___lldiv@quotient 0089  
                             MiWiTasks@t1 01D8                               MiWiTasks@t2 01D3  
                       i2TxPacket@rssival 0033                       TxPacket@TxPacketLen 00A0  
                        _TX_POWER_7_DB_MW 20F7                ?_MiApp_EstablishConnection 01F5  
                             _timer_count 004B                      i2TxPacket@CCARetries 002E  
           __size_of_findNextNetworkEntry 0040                               _timer_reset 8BB2  
          __end_of_MiApp_MessageAvailable 8C20                    __end_ofi2_RegisterRead 88FA  
                        _TX_POWER_INVALID 20B1                       _MiMAC_DiscardPacket 8B5C  
                             i2_SetRFMode 81D4                                MiWiTasks@i 01E7  
                              MiWiTasks@j 01E2                      ??_MiApp_ProtocolInit 0097  
                        i2TxPacket@status 002D                            do_POWER_TEST@i 01F6  
                        ??i2_MiWi_TickGet 0016                            read_sensors@t0 01DF  
                          read_sensors@t1 01E0                           i2TxPacket@reTry 002F  
                           do_UPDATE@size 01F6                            ??_MiWi_TickGet 0085  
            __end_of_SearchForLongAddress 7964                          ??_wait_for_1_sec 0081  
                           i2TxPacket@CCA 001C            _StaticSecurityKey_absconstaddr 001FEC  
               i2MiWi_TickGet@currentTime 0018                   ??_send_writables_update 01FD  
                             encode@delta 008F                     RegisterSet@IRQ0select 0086  
                   RegisterSet@IRQ1select 0085              __end_of_MiMAC_ReceivedPacket 4A7C  
                            i2TxPacket@t1 0025                              i2TxPacket@t2 0029  
                             encode@part1 0092                               encode@part2 0094  
                             i2TxPacket@i 0032  
