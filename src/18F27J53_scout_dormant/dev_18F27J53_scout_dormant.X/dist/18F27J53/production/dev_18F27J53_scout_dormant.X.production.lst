

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Dec 29 19:36:41 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	_StaticSecurityKey_const,global,ovrld,reloc=2,class=CODE,delta=1
     9                           	psect	_myUID_const,global,ovrld,reloc=2,class=CODE,delta=1
    10                           	psect	_myMODEL_const,global,ovrld,reloc=2,class=CODE,delta=1
    11                           	psect	_myMUTA_version_const,global,ovrld,reloc=2,class=CODE,delta=1
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   122                           	psect	param0,global,class=BANK0,space=1,delta=1
   123                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   124  0000                     
   125                           	psect	idataCOMRAM
   126  017006                     __pidataCOMRAM:
   127                           	opt stack 0
   128                           
   129                           ;initializer for _timer_count
   130  017006  01                 	db	1
   131                           
   132                           	psect	idataBANK1
   133  017000                     __pidataBANK1:
   134                           	opt stack 0
   135                           
   136                           ;initializer for _AcknowledgementSeq
   137  017000  FF                 	db	255
   138                           
   139                           ;initializer for _defaultHops
   140  017001  04                 	db	4
   141                           
   142                           ;initializer for _m_update_frequency
   143  017002  01                 	db	1
   144                           
   145                           	psect	mediumconst
   146  00FEF2                     __pmediumconst:
   147                           	opt stack 0
   148  00FEF2  00                 	db	0
   149  00FEF3                     _InitConfigRegs:
   150                           	opt stack 0
   151  00FEF3  0036               	dw	54
   152  00FEF5  0284               	dw	644
   153  00FEF7  0409               	dw	1033
   154  00FEF9  0609               	dw	1545
   155  00FEFB  080C               	dw	2060
   156  00FEFD  0AC1               	dw	2753
   157  00FEFF  0C7D               	dw	3197
   158  00FF01  0E64               	dw	3684
   159  00FF03  1014               	dw	4116
   160  00FF05  1200               	dw	4608
   161  00FF07  1400               	dw	5120
   162  00FF09  1600               	dw	5632
   163  00FF0B  1838               	dw	6200
   164  00FF0D  1AC8               	dw	6856
   165  00FF0F  1C0D               	dw	7181
   166  00FF11  1E00               	dw	7680
   167  00FF13  2072               	dw	8306
   168  00FF15  2238               	dw	8760
   169  00FF17  2438               	dw	9272
   170  00FF19  2607               	dw	9735
   171  00FF1B  2800               	dw	10240
   172  00FF1D  2A00               	dw	10752
   173  00FF1F  2C69               	dw	11369
   174  00FF21  2E81               	dw	11905
   175  00FF23  307E               	dw	12414
   176  00FF25  3296               	dw	12950
   177  00FF27  34F0               	dw	13552
   178  00FF29  3688               	dw	13960
   179  00FF2B  3840               	dw	14400
   180  00FF2D  3A00               	dw	14848
   181  00FF2F  3CE8               	dw	15592
   182  00FF31  3E00               	dw	15872
   183  00FF33                     __end_of_InitConfigRegs:
   184                           	opt stack 0
   185  00FF33                     _ScanTime:
   186                           	opt stack 0
   187  00FF33  03C0               	dw	960
   188  00FF35  0000               	dw	0
   189  00FF37  05A0               	dw	1440
   190  00FF39  0000               	dw	0
   191  00FF3B  0960               	dw	2400
   192  00FF3D  0000               	dw	0
   193  00FF3F  10E0               	dw	4320
   194  00FF41  0000               	dw	0
   195  00FF43  1FE0               	dw	8160
   196  00FF45  0000               	dw	0
   197  00FF47  3DE0               	dw	15840
   198  00FF49  0000               	dw	0
   199  00FF4B  79E0               	dw	31200
   200  00FF4D  0000               	dw	0
   201  00FF4F  F1E0               	dw	61920
   202  00FF51  0000               	dw	0
   203  00FF53  E1E0               	dw	57824
   204  00FF55  0001               	dw	1
   205  00FF57  C1E0               	dw	49632
   206  00FF59  0003               	dw	3
   207  00FF5B  81E0               	dw	33248
   208  00FF5D  0007               	dw	7
   209  00FF5F  01E0               	dw	480
   210  00FF61  000F               	dw	15
   211  00FF63  01E0               	dw	480
   212  00FF65  001E               	dw	30
   213  00FF67  3D44               	dw	15684
   214  00FF69  001B               	dw	27
   215  00FF6B  B40D               	dw	46093
   216  00FF6D  0015               	dw	21
   217  00FF6F                     __end_of_ScanTime:
   218                           	opt stack 0
   219  00FF6F                     _PVALUE:
   220                           	opt stack 0
   221  00FF6F  4F                 	db	79
   222  00FF70  4F                 	db	79
   223  00FF71  4F                 	db	79
   224  00FF72  4F                 	db	79
   225  00FF73  4F                 	db	79
   226  00FF74  4F                 	db	79
   227  00FF75  4F                 	db	79
   228  00FF76  4F                 	db	79
   229  00FF77  4F                 	db	79
   230  00FF78  4F                 	db	79
   231  00FF79  4F                 	db	79
   232  00FF7A  4F                 	db	79
   233  00FF7B  4F                 	db	79
   234  00FF7C  4F                 	db	79
   235  00FF7D  4F                 	db	79
   236  00FF7E  4F                 	db	79
   237  00FF7F  4F                 	db	79
   238  00FF80  4F                 	db	79
   239  00FF81  4F                 	db	79
   240  00FF82  4F                 	db	79
   241  00FF83  4F                 	db	79
   242  00FF84  4F                 	db	79
   243  00FF85  50                 	db	80
   244  00FF86  50                 	db	80
   245  00FF87  50                 	db	80
   246  00FF88  50                 	db	80
   247  00FF89  50                 	db	80
   248  00FF8A  50                 	db	80
   249  00FF8B  50                 	db	80
   250  00FF8C  50                 	db	80
   251  00FF8D  50                 	db	80
   252  00FF8E  50                 	db	80
   253  00FF8F                     __end_of_PVALUE:
   254                           	opt stack 0
   255  00FF8F                     _SVALUE:
   256                           	opt stack 0
   257  00FF8F  22                 	db	34
   258  00FF90  24                 	db	36
   259  00FF91  26                 	db	38
   260  00FF92  28                 	db	40
   261  00FF93  2A                 	db	42
   262  00FF94  2C                 	db	44
   263  00FF95  2E                 	db	46
   264  00FF96  30                 	db	48
   265  00FF97  32                 	db	50
   266  00FF98  34                 	db	52
   267  00FF99  37                 	db	55
   268  00FF9A  39                 	db	57
   269  00FF9B  3B                 	db	59
   270  00FF9C  3D                 	db	61
   271  00FF9D  3F                 	db	63
   272  00FF9E  41                 	db	65
   273  00FF9F  43                 	db	67
   274  00FFA0  45                 	db	69
   275  00FFA1  47                 	db	71
   276  00FFA2  4A                 	db	74
   277  00FFA3  4C                 	db	76
   278  00FFA4  4E                 	db	78
   279  00FFA5  05                 	db	5
   280  00FFA6  07                 	db	7
   281  00FFA7  09                 	db	9
   282  00FFA8  0B                 	db	11
   283  00FFA9  0D                 	db	13
   284  00FFAA  0F                 	db	15
   285  00FFAB  11                 	db	17
   286  00FFAC  14                 	db	20
   287  00FFAD  16                 	db	22
   288  00FFAE  18                 	db	24
   289  00FFAF                     __end_of_SVALUE:
   290                           	opt stack 0
   291  0000                     _StaticSecurityKey_absconstaddr	set	131052
   292  0000                     _myUID_absconstaddr	set	131062
   293  0000                     _myMODEL_absconstaddr	set	131060
   294  0000                     _myMUTA_version_absconstaddr	set	131058
   295  00FFAF  31                 	db	49
   296  00FFB0  2E                 	db	46
   297  00FFB1  32                 	db	50
   298  00FFB2  35                 	db	53
   299  00FFB3  6D                 	db	109
   300  00FFB4  57                 	db	87
   301  00FFB5  00                 	db	0
   302  00FFB6                     __end_of_TX_POWER_1_DB_MW:
   303                           	opt stack 0
   304  00FFB6  30                 	db	48
   305  00FFB7  2E                 	db	46
   306  00FFB8  31                 	db	49
   307  00FFB9  35                 	db	53
   308  00FFBA  6D                 	db	109
   309  00FFBB  57                 	db	87
   310  00FFBC  00                 	db	0
   311  00FFBD                     __end_of_TX_POWER_N_8_DB_MW:
   312                           	opt stack 0
   313  00FFBD  32                 	db	50
   314  00FFBE  2E                 	db	46
   315  00FFBF  35                 	db	53
   316  00FFC0  6D                 	db	109
   317  00FFC1  57                 	db	87
   318  00FFC2  00                 	db	0
   319  00FFC3                     __end_of_TX_POWER_4_DB_MW:
   320                           	opt stack 0
   321  00FFC3  30                 	db	48
   322  00FFC4  2E                 	db	46
   323  00FFC5  30                 	db	48
   324  00FFC6  6D                 	db	109
   325  00FFC7  57                 	db	87
   326  00FFC8  00                 	db	0
   327  00FFC9                     __end_of_TX_POWER_INVALID:
   328                           	opt stack 0
   329  00FFC9  30                 	db	48
   330  00FFCA  2E                 	db	46
   331  00FFCB  36                 	db	54
   332  00FFCC  6D                 	db	109
   333  00FFCD  57                 	db	87
   334  00FFCE  00                 	db	0
   335  00FFCF                     __end_of_TX_POWER_N_2_DB_MW:
   336                           	opt stack 0
   337  00FFCF  30                 	db	48
   338  00FFD0  2E                 	db	46
   339  00FFD1  33                 	db	51
   340  00FFD2  6D                 	db	109
   341  00FFD3  57                 	db	87
   342  00FFD4  00                 	db	0
   343  00FFD5                     __end_of_TX_POWER_N_5_DB_MW:
   344                           	opt stack 0
   345  00FFD5  31                 	db	49
   346  00FFD6  30                 	db	48
   347  00FFD7  6D                 	db	109
   348  00FFD8  57                 	db	87
   349  00FFD9  00                 	db	0
   350  00FFDA                     __end_of_TX_POWER_10_DB_MW:
   351                           	opt stack 0
   352  00FFDA  32                 	db	50
   353  00FFDB  30                 	db	48
   354  00FFDC  6D                 	db	109
   355  00FFDD  57                 	db	87
   356  00FFDE  00                 	db	0
   357  00FFDF                     __end_of_TX_POWER_13_DB_MW:
   358                           	opt stack 0
   359  00FFDF                     _BATTERY_VOLTAGE_LABEL:
   360                           	opt stack 0
   361  00FFDF  56                 	db	86
   362  00FFE0  42                 	db	66
   363  00FFE1  61                 	db	97
   364  00FFE2  00                 	db	0
   365  00FFE3                     __end_of_BATTERY_VOLTAGE_LABEL:
   366                           	opt stack 0
   367  00FFE3                     _FAILEDMSG_LABEL:
   368                           	opt stack 0
   369  00FFE3  46                 	db	70
   370  00FFE4  6C                 	db	108
   371  00FFE5  4D                 	db	77
   372  00FFE6  00                 	db	0
   373  00FFE7                     __end_of_FAILEDMSG_LABEL:
   374                           	opt stack 0
   375  00FFE7                     _LIGHT_LEVEL_LABEL:
   376                           	opt stack 0
   377  00FFE7  4C                 	db	76
   378  00FFE8  69                 	db	105
   379  00FFE9  74                 	db	116
   380  00FFEA  00                 	db	0
   381  00FFEB                     __end_of_LIGHT_LEVEL_LABEL:
   382                           	opt stack 0
   383  00FFEB                     _POWER_LABEL:
   384                           	opt stack 0
   385  00FFEB  50                 	db	80
   386  00FFEC  77                 	db	119
   387  00FFED  72                 	db	114
   388  00FFEE  00                 	db	0
   389  00FFEF                     __end_of_POWER_LABEL:
   390                           	opt stack 0
   391  00FFEF                     _TEMPERATURE_LABEL:
   392                           	opt stack 0
   393  00FFEF  54                 	db	84
   394  00FFF0  6D                 	db	109
   395  00FFF1  70                 	db	112
   396  00FFF2  00                 	db	0
   397  00FFF3                     __end_of_TEMPERATURE_LABEL:
   398                           	opt stack 0
   399  00FFF3  35                 	db	53
   400  00FFF4  6D                 	db	109
   401  00FFF5  57                 	db	87
   402  00FFF6  00                 	db	0
   403  00FFF7                     __end_of_TX_POWER_7_DB_MW:
   404                           	opt stack 0
   405  00FFF7                     _UPDATE_FREQUENCY_LABEL:
   406                           	opt stack 0
   407  00FFF7  55                 	db	85
   408  00FFF8  70                 	db	112
   409  00FFF9  46                 	db	70
   410  00FFFA  00                 	db	0
   411  00FFFB                     __end_of_UPDATE_FREQUENCY_LABEL:
   412                           	opt stack 0
   413  00FFFB                     _UPTIME_LABEL:
   414                           	opt stack 0
   415  00FFFB  55                 	db	85
   416  00FFFC  70                 	db	112
   417  00FFFD  74                 	db	116
   418  00FFFE  00                 	db	0
   419  00FFFF                     __end_of_UPTIME_LABEL:
   420                           	opt stack 0
   421  0000                     _StaticSecurityKey_absconstaddr	set	131052
   422  00FFFF  00                 	db	0	; dummy byte at the end
   423  0000                     
   424                           	psect	_StaticSecurityKey_const
   425  01FFEC                     __p_StaticSecurityKey_const:
   426                           	opt stack 0
   427  01FFEC                     _StaticSecurityKey:
   428                           	opt stack 0
   429  01FFEC  00                 	db	0
   430  01FFED  01                 	db	1
   431  01FFEE  02                 	db	2
   432  01FFEF  03                 	db	3
   433  01FFF0  04                 	db	4
   434  01FFF1  05                 	db	5
   435  01FFF2  06                 	db	6
   436  01FFF3  07                 	db	7
   437  01FFF4                     __end_of_StaticSecurityKey:
   438                           	opt stack 0
   439  0000                     _myUID_absconstaddr	set	131062
   440                           
   441                           	psect	_myUID_const
   442  01FFF6                     __p_myUID_const:
   443                           	opt stack 0
   444  01FFF6                     _myUID:
   445                           	opt stack 0
   446  01FFF6  00                 	db	0
   447  01FFF7  02                 	db	2
   448  01FFF8                     __end_of_myUID:
   449                           	opt stack 0
   450  0000                     _myMODEL_absconstaddr	set	131060
   451                           
   452                           	psect	_myMODEL_const
   453  01FFF4                     __p_myMODEL_const:
   454                           	opt stack 0
   455  01FFF4                     _myMODEL:
   456                           	opt stack 0
   457  01FFF4  01                 	db	1
   458  01FFF5                     __end_of_myMODEL:
   459                           	opt stack 0
   460  0000                     _myMUTA_version_absconstaddr	set	131058
   461                           
   462                           	psect	_myMUTA_version_const
   463  01FFF2                     __p_myMUTA_version_const:
   464                           	opt stack 0
   465  01FFF2                     _myMUTA_version:
   466                           	opt stack 0
   467  01FFF2  01                 	db	1
   468  01FFF3                     __end_of_myMUTA_version:
   469                           	opt stack 0
   470  0000                     _PPSCONbits	set	3775
   471  0000                     _RPINR1	set	3809
   472  0000                     _RPINR21	set	3836
   473  0000                     _RPINR22	set	3837
   474  0000                     _RPOR4	set	3780
   475  0000                     _RPOR5	set	3781
   476  0000                     _ALRMCFGbits	set	3911
   477  0000                     _ANCON0	set	3912
   478  0000                     _ANCON0bits	set	3912
   479  0000                     _ANCON1	set	3913
   480  0000                     _ANCON1bits	set	3913
   481  0000                     _RTCCAL	set	3902
   482  0000                     _RTCCFG	set	3903
   483  0000                     _RTCCFGbits	set	3903
   484  0000                     _RTCVALHbits	set	3899
   485  0000                     _RTCVALLbits	set	3898
   486  0000                     _UPUEN	set	31180
   487  0000                     _ADCON0bits	set	4034
   488  0000                     _ADCON1bits	set	4033
   489  0000                     _ADRESHbits	set	4036
   490  0000                     _ADRESLbits	set	4035
   491  0000                     _EECON2	set	4007
   492  0000                     _INTCON2bits	set	4081
   493  0000                     _INTCON3bits	set	4080
   494  0000                     _INTCONbits	set	4082
   495  0000                     _IPR3bits	set	4005
   496  0000                     _LATAbits	set	3977
   497  0000                     _LATBbits	set	3978
   498  0000                     _LATCbits	set	3979
   499  0000                     _OSCCONbits	set	4051
   500  0000                     _PIE1bits	set	3997
   501  0000                     _PIE3bits	set	4003
   502  0000                     _PIR1bits	set	3998
   503  0000                     _PIR3bits	set	4004
   504  0000                     _RCONbits	set	4048
   505  0000                     _SSP1ADD	set	4040
   506  0000                     _SSP1BUF	set	4041
   507  0000                     _SSP1CON1	set	4038
   508  0000                     _SSP1CON1bits	set	4038
   509  0000                     _SSP1CON2	set	4037
   510  0000                     _SSP1CON2bits	set	4037
   511  0000                     _SSP1STAT	set	4039
   512  0000                     _SSP1STATbits	set	4039
   513  0000                     _SSP2BUF	set	3957
   514  0000                     _SSP2CON1	set	3954
   515  0000                     _SSP2CON1bits	set	3954
   516  0000                     _SSP2STAT	set	3955
   517  0000                     _T1CON	set	4045
   518  0000                     _T1CONbits	set	4045
   519  0000                     _TMR1H	set	4047
   520  0000                     _TMR1L	set	4046
   521  0000                     _TRISA	set	3986
   522  0000                     _TRISAbits	set	3986
   523  0000                     _TRISB	set	3987
   524  0000                     _TRISBbits	set	3987
   525  0000                     _TRISC	set	3988
   526  0000                     _TRISCbits	set	3988
   527  0000                     _UCONbits	set	3941
   528  0000                     _PLLEN	set	31966
   529                           
   530                           ; #config settings
   531  0000                     
   532                           	psect	cinit
   533  0165DA                     __pcinit:
   534                           	opt stack 0
   535  0165DA                     start_initialization:
   536                           	opt stack 0
   537  0165DA                     __initialization:
   538                           	opt stack 0
   539                           
   540                           ; Clear objects allocated to BANK3 (212 bytes)
   541  0165DA  EE03  F000         	lfsr	0,__pbssBANK3
   542  0165DE  0ED4               	movlw	212
   543  0165E0                     clear_0:
   544  0165E0  6AEE               	clrf	postinc0,c
   545  0165E2  06E8               	decf	wreg,f,c
   546  0165E4  E1FD               	bnz	clear_0
   547                           
   548                           ; Clear objects allocated to BANK2 (256 bytes)
   549  0165E6  EE02  F000         	lfsr	0,__pbssBANK2
   550  0165EA  EE11 F000          	lfsr	1,256
   551  0165EE                     clear_1:
   552  0165EE  6AEE               	clrf	postinc0,c
   553  0165F0  50E5               	movf	postdec1,w,c
   554  0165F2  50E1               	movf	fsr1l,w,c
   555  0165F4  E1FC               	bnz	clear_1
   556  0165F6  50E2               	movf	fsr1h,w,c
   557  0165F8  E1FA               	bnz	clear_1
   558                           
   559                           ; Clear objects allocated to BANK1 (138 bytes)
   560  0165FA  EE01  F000         	lfsr	0,__pbssBANK1
   561  0165FE  0E8A               	movlw	138
   562  016600                     clear_2:
   563  016600  6AEE               	clrf	postinc0,c
   564  016602  06E8               	decf	wreg,f,c
   565  016604  E1FD               	bnz	clear_2
   566                           
   567                           ; Clear objects allocated to BANK0 (45 bytes)
   568  016606  EE00  F0A3         	lfsr	0,__pbssBANK0
   569  01660A  0E2D               	movlw	45
   570  01660C                     clear_3:
   571  01660C  6AEE               	clrf	postinc0,c
   572  01660E  06E8               	decf	wreg,f,c
   573  016610  E1FD               	bnz	clear_3
   574                           
   575                           ; Clear objects allocated to COMRAM (34 bytes)
   576  016612  EE00  F026         	lfsr	0,__pbssCOMRAM
   577  016616  0E22               	movlw	34
   578  016618                     clear_4:
   579  016618  6AEE               	clrf	postinc0,c
   580  01661A  06E8               	decf	wreg,f,c
   581  01661C  E1FD               	bnz	clear_4
   582                           
   583                           ; Initialize objects allocated to BANK1 (3 bytes)
   584                           ; load TBLPTR registers with __pidataBANK1
   585  01661E  0E00               	movlw	low __pidataBANK1
   586  016620  6EF6               	movwf	tblptrl,c
   587  016622  0E70               	movlw	high __pidataBANK1
   588  016624  6EF7               	movwf	tblptrh,c
   589  016626  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   590  016628  6EF8               	movwf	tblptru,c
   591  01662A  0009               	tblrd		*+	;fetch initializer
   592  01662C  CFF5 F1FD          	movff	tablat,__pdataBANK1
   593  016630  0009               	tblrd		*+	;fetch initializer
   594  016632  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
   595  016636  0009               	tblrd		*+	;fetch initializer
   596  016638  CFF5 F1FF          	movff	tablat,__pdataBANK1+2
   597                           
   598                           ; Initialize objects allocated to COMRAM (1 bytes)
   599                           ; load TBLPTR registers with __pidataCOMRAM
   600  01663C  0E06               	movlw	low __pidataCOMRAM
   601  01663E  6EF6               	movwf	tblptrl,c
   602  016640  0E70               	movlw	high __pidataCOMRAM
   603  016642  6EF7               	movwf	tblptrh,c
   604  016644  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   605  016646  6EF8               	movwf	tblptru,c
   606  016648  0009               	tblrd		*+	;fetch initializer
   607  01664A  CFF5 F048          	movff	tablat,__pdataCOMRAM
   608  01664E                     end_of_initialization:
   609                           	opt stack 0
   610  01664E                     __end_of__initialization:
   611                           	opt stack 0
   612  01664E  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   613  016650  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   614  016652  0100               	movlb	0
   615  016654  EF3D  F098         	goto	_main	;jump to C main() function
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           postdec1	equ	0xFE5
   623                           fsr1h	equ	0xFE2
   624                           fsr1l	equ	0xFE1
   625                           
   626                           	psect	bssCOMRAM
   627  000026                     __pbssCOMRAM:
   628                           	opt stack 0
   629  000026                     _BroadcastRecords:
   630                           	opt stack 0
   631  000026                     	ds	32
   632  000046                     _errno:
   633                           	opt stack 0
   634  000046                     	ds	2
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           postdec1	equ	0xFE5
   642                           fsr1h	equ	0xFE2
   643                           fsr1l	equ	0xFE1
   644                           
   645                           	psect	dataCOMRAM
   646  000048                     __pdataCOMRAM:
   647                           	opt stack 0
   648  000048                     _timer_count:
   649                           	opt stack 0
   650  000048                     	ds	1
   651                           tblptru	equ	0xFF8
   652                           tblptrh	equ	0xFF7
   653                           tblptrl	equ	0xFF6
   654                           tablat	equ	0xFF5
   655                           postinc0	equ	0xFEE
   656                           wreg	equ	0xFE8
   657                           postdec1	equ	0xFE5
   658                           fsr1h	equ	0xFE2
   659                           fsr1l	equ	0xFE1
   660                           
   661                           	psect	bssBANK0
   662  0000A3                     __pbssBANK0:
   663                           	opt stack 0
   664  0000A3                     _mySecurityKey:
   665                           	opt stack 0
   666  0000A3                     	ds	8
   667  0000AB                     _OutgoingFrameCounter:
   668                           	opt stack 0
   669  0000AB                     	ds	4
   670  0000AF                     _MACInitParams:
   671                           	opt stack 0
   672  0000AF                     	ds	3
   673  0000B2                     _ConnMode:
   674                           	opt stack 0
   675  0000B2                     	ds	1
   676  0000B3                     _IRQ1_Received:
   677                           	opt stack 0
   678  0000B3                     	ds	1
   679  0000B4                     _MACSeq:
   680                           	opt stack 0
   681  0000B4                     	ds	1
   682  0000B5                     _MiWiAckRequired:
   683                           	opt stack 0
   684  0000B5                     	ds	1
   685  0000B6                     _MiWiSeqNum:
   686                           	opt stack 0
   687  0000B6                     	ds	1
   688  0000B7                     _Pwr_updated:
   689                           	opt stack 0
   690  0000B7                     	ds	1
   691  0000B8                     _RF_Mode:
   692                           	opt stack 0
   693  0000B8                     	ds	1
   694  0000B9                     _RSSIVal:
   695                           	opt stack 0
   696  0000B9                     	ds	1
   697  0000BA                     _TxMACSeq:
   698                           	opt stack 0
   699  0000BA                     	ds	1
   700  0000BB                     _UpF_updated:
   701                           	opt stack 0
   702  0000BB                     	ds	1
   703  0000BC                     _hasAck:
   704                           	opt stack 0
   705  0000BC                     	ds	1
   706  0000BD                     _tempNodeStatus:
   707                           	opt stack 0
   708  0000BD                     	ds	1
   709  0000BE                     _timerExtension1:
   710                           	opt stack 0
   711  0000BE                     	ds	1
   712  0000BF                     _timerExtension2:
   713                           	opt stack 0
   714  0000BF                     	ds	1
   715  0000C0                     _key:
   716                           	opt stack 0
   717  0000C0                     	ds	8
   718  0000C8                     _myLongAddress:
   719                           	opt stack 0
   720  0000C8                     	ds	4
   721  0000CC                     _tmpBlock:
   722                           	opt stack 0
   723  0000CC                     	ds	4
   724                           tblptru	equ	0xFF8
   725                           tblptrh	equ	0xFF7
   726                           tblptrl	equ	0xFF6
   727                           tablat	equ	0xFF5
   728                           postinc0	equ	0xFEE
   729                           wreg	equ	0xFE8
   730                           postdec1	equ	0xFE5
   731                           fsr1h	equ	0xFE2
   732                           fsr1l	equ	0xFE1
   733                           
   734                           	psect	bssBANK1
   735  000100                     __pbssBANK1:
   736                           	opt stack 0
   737  000100                     _openSocketInfo:
   738                           	opt stack 0
   739  000100                     	ds	12
   740  00010C                     _rxMessage:
   741                           	opt stack 0
   742  00010C                     	ds	10
   743  000116                     _MACRxPacket:
   744                           	opt stack 0
   745  000116                     	ds	8
   746  00011E                     _m_failed_messages:
   747                           	opt stack 0
   748  00011E                     	ds	4
   749  000122                     _m_sent_messages:
   750                           	opt stack 0
   751  000122                     	ds	4
   752  000126                     _tempLongAddress:
   753                           	opt stack 0
   754  000126                     	ds	4
   755  00012A                     _MTP:
   756                           	opt stack 0
   757  00012A                     	ds	3
   758  00012D                     _m_battery_voltage:
   759                           	opt stack 0
   760  00012D                     	ds	3
   761  000130                     _m_temperature:
   762                           	opt stack 0
   763  000130                     	ds	3
   764  000133                     _m_uptime_days:
   765                           	opt stack 0
   766  000133                     	ds	3
   767  000136                     _AcknowledgementAddr:
   768                           	opt stack 0
   769  000136                     	ds	2
   770  000138                     _MiWiStateMachine:
   771                           	opt stack 0
   772  000138                     	ds	2
   773  00013A                     _p_buffer:
   774                           	opt stack 0
   775  00013A                     	ds	2
   776  00013C                     _tempPANID:
   777                           	opt stack 0
   778  00013C                     	ds	2
   779  00013E                     do_NETWORK_REGISTER@F10228:
   780                           	opt stack 0
   781  00013E                     	ds	2
   782  000140                     do_UPDATE@F10256:
   783                           	opt stack 0
   784  000140                     	ds	2
   785  000142                     _ActiveScanResultIndex:
   786                           	opt stack 0
   787  000142                     	ds	1
   788  000143                     _MiWiCapacityInfo:
   789                           	opt stack 0
   790  000143                     	ds	1
   791  000144                     _RSSILock:
   792                           	opt stack 0
   793  000144                     	ds	1
   794  000145                     _ReceivedBankIndex:
   795                           	opt stack 0
   796  000145                     	ds	1
   797  000146                     _TxData:
   798                           	opt stack 0
   799  000146                     	ds	1
   800  000147                     _consecutive_fails:
   801                           	opt stack 0
   802  000147                     	ds	1
   803  000148                     _last_rssi:
   804                           	opt stack 0
   805  000148                     	ds	1
   806  000149                     _m_light_level:
   807                           	opt stack 0
   808  000149                     	ds	1
   809  00014A                     _m_power:
   810                           	opt stack 0
   811  00014A                     	ds	1
   812  00014B                     _myAppState:
   813                           	opt stack 0
   814  00014B                     	ds	1
   815  00014C                     _myParent:
   816                           	opt stack 0
   817  00014C                     	ds	1
   818  00014D                     _timer_flag:
   819                           	opt stack 0
   820  00014D                     	ds	1
   821  00014E                     _TxBuffer:
   822                           	opt stack 0
   823  00014E                     	ds	43
   824  000179                     _m_var:
   825                           	opt stack 0
   826  000179                     	ds	10
   827  000183                     _myPANID:
   828                           	opt stack 0
   829  000183                     	ds	2
   830  000185                     _myShortAddress:
   831                           	opt stack 0
   832  000185                     	ds	2
   833  000187                     _tempShortAddress:
   834                           	opt stack 0
   835  000187                     	ds	2
   836  000189                     _currentChannel:
   837                           	opt stack 0
   838  000189                     	ds	1
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           postdec1	equ	0xFE5
   846                           fsr1h	equ	0xFE2
   847                           fsr1l	equ	0xFE1
   848                           
   849                           	psect	dataBANK1
   850  0001FD                     __pdataBANK1:
   851                           	opt stack 0
   852  0001FD                     _AcknowledgementSeq:
   853                           	opt stack 0
   854  0001FD                     	ds	1
   855  0001FE                     _defaultHops:
   856                           	opt stack 0
   857  0001FE                     	ds	1
   858  0001FF                     _m_update_frequency:
   859                           	opt stack 0
   860  0001FF                     	ds	1
   861                           tblptru	equ	0xFF8
   862                           tblptrh	equ	0xFF7
   863                           tblptrl	equ	0xFF6
   864                           tablat	equ	0xFF5
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           postdec1	equ	0xFE5
   868                           fsr1h	equ	0xFE2
   869                           fsr1l	equ	0xFE1
   870                           
   871                           	psect	bssBANK2
   872  000200                     __pbssBANK2:
   873                           	opt stack 0
   874  000200                     _IncomingFrameCounter:
   875                           	opt stack 0
   876  000200                     	ds	40
   877  000228                     _AckInfo:
   878                           	opt stack 0
   879  000228                     	ds	30
   880  000246                     _ConnectionTable:
   881                           	opt stack 0
   882  000246                     	ds	90
   883  0002A0                     _MACTxBuffer:
   884                           	opt stack 0
   885  0002A0                     	ds	64
   886  0002E0                     _m_buffer:
   887                           	opt stack 0
   888  0002E0                     	ds	32
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           postdec1	equ	0xFE5
   896                           fsr1h	equ	0xFE2
   897                           fsr1l	equ	0xFE1
   898                           
   899                           	psect	bssBANK3
   900  000300                     __pbssBANK3:
   901                           	opt stack 0
   902  000300                     _ActiveScanResults:
   903                           	opt stack 0
   904  000300                     	ds	80
   905  000350                     _RxPacket:
   906                           	opt stack 0
   907  000350                     	ds	132
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           postdec1	equ	0xFE5
   915                           fsr1h	equ	0xFE2
   916                           fsr1l	equ	0xFE1
   917                           
   918                           	psect	cstackBANK4
   919  000400                     __pcstackBANK4:
   920                           	opt stack 0
   921  000400                     
   922                           ; 0 bytes @ 0x0
   923  000400                     	ds	2
   924  000402                     main@result:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x2
   928  000402                     	ds	1
   929  000403                     main@best_candidate:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x3
   933  000403                     	ds	1
   934  000404                     main@Status:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0x4
   938  000404                     	ds	1
   939  000405                     main@best_RSSI:
   940                           	opt stack 0
   941                           
   942                           ; 1 bytes @ 0x5
   943  000405                     	ds	1
   944  000406                     main@x:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0x6
   948  000406                     	ds	2
   949  000408                     main@j:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x8
   953  000408                     	ds	1
   954  000409                     main@scanresult:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x9
   958  000409                     	ds	1
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           postinc0	equ	0xFEE
   964                           wreg	equ	0xFE8
   965                           postdec1	equ	0xFE5
   966                           fsr1h	equ	0xFE2
   967                           fsr1l	equ	0xFE1
   968                           
   969                           	psect	cstackBANK3
   970  0003D4                     __pcstackBANK3:
   971                           	opt stack 0
   972  0003D4                     MiApp_SearchConnection@channelMask:
   973                           	opt stack 0
   974  0003D4                     MiApp_UnicastAddress@t1:
   975                           	opt stack 0
   976                           
   977                           ; 4 bytes @ 0x0
   978  0003D4                     	ds	4
   979  0003D8                     MiApp_SearchConnection@t1:
   980                           	opt stack 0
   981  0003D8                     MiApp_UnicastAddress@t2:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x4
   985  0003D8                     	ds	4
   986  0003DC                     MiApp_SearchConnection@t2:
   987                           	opt stack 0
   988  0003DC                     MiApp_UnicastAddress@t1_2763:
   989                           	opt stack 0
   990                           
   991                           ; 4 bytes @ 0x8
   992  0003DC                     	ds	4
   993  0003E0                     MiApp_SearchConnection@ScanDuration:
   994                           	opt stack 0
   995  0003E0                     MiApp_UnicastAddress@t2_2774:
   996                           	opt stack 0
   997                           
   998                           ; 4 bytes @ 0xC
   999  0003E0                     	ds	1
  1000  0003E1                     MiApp_SearchConnection@backupChannel:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0xD
  1004  0003E1                     	ds	1
  1005  0003E2                     MiApp_SearchConnection@i:
  1006                           	opt stack 0
  1007                           
  1008                           ; 1 bytes @ 0xE
  1009  0003E2                     	ds	2
  1010  0003E4                     MiApp_UnicastAddress@MiWiFrameControl:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x10
  1014  0003E4                     	ds	1
  1015  0003E5                     MiApp_UnicastAddress@i:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x11
  1019  0003E5                     	ds	1
  1020  0003E6                     MiApp_UnicastAddress@handle:
  1021                           	opt stack 0
  1022                           
  1023                           ; 1 bytes @ 0x12
  1024  0003E6                     	ds	1
  1025  0003E7                     ??_do_NETWORK_REGISTER:
  1026  0003E7                     ??_MiApp_EstablishConnection:
  1027  0003E7                     do_POWER_TEST@result:
  1028                           	opt stack 0
  1029  0003E7                     do_UPDATE@p_buff:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x13
  1033  0003E7                     	ds	1
  1034  0003E8                     do_POWER_TEST@power_lvl:
  1035                           	opt stack 0
  1036  0003E8                     do_NETWORK_REGISTER@shortaddress:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0x14
  1040  0003E8                     	ds	1
  1041  0003E9                     do_UPDATE@size:
  1042                           	opt stack 0
  1043  0003E9                     do_POWER_TEST@i:
  1044                           	opt stack 0
  1045                           
  1046                           ; 2 bytes @ 0x15
  1047  0003E9                     	ds	1
  1048  0003EA                     do_UPDATE@ack_required:
  1049                           	opt stack 0
  1050  0003EA                     do_NETWORK_REGISTER@i:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x16
  1054  0003EA                     	ds	1
  1055  0003EB                     do_POWER_TEST@rssi:
  1056                           	opt stack 0
  1057  0003EB                     do_UPDATE@shortaddress:
  1058                           	opt stack 0
  1059                           
  1060                           ; 2 bytes @ 0x17
  1061  0003EB                     	ds	1
  1062  0003EC                     do_NETWORK_REGISTER@result:
  1063                           	opt stack 0
  1064  0003EC                     do_POWER_TEST@shortaddress:
  1065                           	opt stack 0
  1066                           
  1067                           ; 2 bytes @ 0x18
  1068  0003EC                     	ds	1
  1069  0003ED                     do_UPDATE@i:
  1070                           	opt stack 0
  1071                           
  1072                           ; 2 bytes @ 0x19
  1073  0003ED                     	ds	1
  1074  0003EE                     adapt_power_level@rssi:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x1A
  1078  0003EE                     	ds	1
  1079  0003EF                     adapt_power_level@last_good_power:
  1080                           	opt stack 0
  1081  0003EF                     do_UPDATE@result:
  1082                           	opt stack 0
  1083  0003EF                     MiApp_EstablishConnection@t1:
  1084                           	opt stack 0
  1085                           
  1086                           ; 4 bytes @ 0x1B
  1087  0003EF                     	ds	1
  1088  0003F0                     ??_process_update_answer:
  1089  0003F0                     adapt_power_level@m_power:
  1090                           	opt stack 0
  1091  0003F0                     send_initial_update@tmp2:
  1092                           	opt stack 0
  1093  0003F0                     send_periodical_update@tmp2:
  1094                           	opt stack 0
  1095                           
  1096                           ; 3 bytes @ 0x1C
  1097  0003F0                     	ds	3
  1098  0003F3                     _send_initial_update$5141:
  1099                           	opt stack 0
  1100  0003F3                     _send_periodical_update$5145:
  1101                           	opt stack 0
  1102  0003F3                     MiApp_EstablishConnection@t2:
  1103                           	opt stack 0
  1104                           
  1105                           ; 4 bytes @ 0x1F
  1106  0003F3                     	ds	3
  1107  0003F6                     _send_initial_update$5142:
  1108                           	opt stack 0
  1109  0003F6                     _send_periodical_update$5146:
  1110                           	opt stack 0
  1111                           
  1112                           ; 3 bytes @ 0x22
  1113  0003F6                     	ds	1
  1114  0003F7                     MiApp_EstablishConnection@retry:
  1115                           	opt stack 0
  1116  0003F7                     process_update_answer@result:
  1117                           	opt stack 0
  1118                           
  1119                           ; 1 bytes @ 0x23
  1120  0003F7                     	ds	1
  1121  0003F8                     MiApp_EstablishConnection@ActiveScanIndex:
  1122                           	opt stack 0
  1123  0003F8                     process_update_answer@ack_required:
  1124                           	opt stack 0
  1125                           
  1126                           ; 1 bytes @ 0x24
  1127  0003F8                     	ds	1
  1128  0003F9                     MiApp_EstablishConnection@i:
  1129                           	opt stack 0
  1130  0003F9                     process_update_answer@i:
  1131                           	opt stack 0
  1132  0003F9                     _send_initial_update$5143:
  1133                           	opt stack 0
  1134  0003F9                     _send_periodical_update$5147:
  1135                           	opt stack 0
  1136                           
  1137                           ; 3 bytes @ 0x25
  1138  0003F9                     	ds	1
  1139  0003FA                     process_update_answer@shortaddress:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x26
  1143  0003FA                     	ds	2
  1144  0003FC                     process_update_answer@size:
  1145                           	opt stack 0
  1146  0003FC                     _send_initial_update$5144:
  1147                           	opt stack 0
  1148  0003FC                     _send_periodical_update$5148:
  1149                           	opt stack 0
  1150                           
  1151                           ; 3 bytes @ 0x28
  1152  0003FC                     	ds	3
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           postinc0	equ	0xFEE
  1158                           wreg	equ	0xFE8
  1159                           postdec1	equ	0xFE5
  1160                           fsr1h	equ	0xFE2
  1161                           fsr1l	equ	0xFE1
  1162                           
  1163                           	psect	cstackBANK1
  1164  00018A                     __pcstackBANK1:
  1165                           	opt stack 0
  1166  00018A                     ??_SearchForLongAddress:
  1167  00018A                     ??_wait_for_1_sec:
  1168  00018A                     ??_WriteI2C1:
  1169  00018A                     ??_MiApp_ConnectionMode:
  1170  00018A                     ?___awdiv:
  1171                           	opt stack 0
  1172  00018A                     ?___ftpack:
  1173                           	opt stack 0
  1174  00018A                     ?_MiWi_TickGet:
  1175                           	opt stack 0
  1176  00018A                     ?___lmul:
  1177                           	opt stack 0
  1178  00018A                     SPIPut@i:
  1179                           	opt stack 0
  1180  00018A                     findNextNetworkEntry@i:
  1181                           	opt stack 0
  1182  00018A                     mW_ufixed16_to_dBm@value2:
  1183                           	opt stack 0
  1184  00018A                     OpenI2C1@slew:
  1185                           	opt stack 0
  1186  00018A                     security_force_key_update@i:
  1187                           	opt stack 0
  1188  00018A                     MiMAC_SetAltAddress@Address:
  1189                           	opt stack 0
  1190  00018A                     encode@text:
  1191                           	opt stack 0
  1192  00018A                     isSameAddress@Address1:
  1193                           	opt stack 0
  1194  00018A                     labelcmp@p1:
  1195                           	opt stack 0
  1196  00018A                     dBm_to_mW_ufixed16@value1:
  1197                           	opt stack 0
  1198  00018A                     encode_uint8_variable@buffer:
  1199                           	opt stack 0
  1200  00018A                     encode_ufixed16_variable@buffer:
  1201                           	opt stack 0
  1202  00018A                     ___awdiv@dividend:
  1203                           	opt stack 0
  1204  00018A                     memcpy@d1:
  1205                           	opt stack 0
  1206  00018A                     ___ftpack@arg:
  1207                           	opt stack 0
  1208  00018A                     frexp@value:
  1209                           	opt stack 0
  1210  00018A                     ___ftge@ff1:
  1211                           	opt stack 0
  1212  00018A                     ___lmul@multiplier:
  1213                           	opt stack 0
  1214                           
  1215                           ; 4 bytes @ 0x0
  1216  00018A                     	ds	1
  1217  00018B                     SPIPut@v:
  1218                           	opt stack 0
  1219  00018B                     MiApp_ConnectionMode@Mode:
  1220                           	opt stack 0
  1221  00018B                     mW_ufixed16_to_dBm@value1:
  1222                           	opt stack 0
  1223  00018B                     OpenI2C1@sync_mode:
  1224                           	opt stack 0
  1225  00018B                     WriteI2C1@data_out:
  1226                           	opt stack 0
  1227  00018B                     wait_for_1_sec@i:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x1
  1231  00018B                     	ds	1
  1232  00018C                     RegisterRead@value:
  1233                           	opt stack 0
  1234  00018C                     WriteFIFO@Data:
  1235                           	opt stack 0
  1236  00018C                     SearchForShortAddress@i:
  1237                           	opt stack 0
  1238  00018C                     RegisterSet@setting:
  1239                           	opt stack 0
  1240  00018C                     MiMAC_SetAltAddress@PANID:
  1241                           	opt stack 0
  1242  00018C                     encode@key:
  1243                           	opt stack 0
  1244  00018C                     isSameAddress@Address2:
  1245                           	opt stack 0
  1246  00018C                     labelcmp@p2:
  1247                           	opt stack 0
  1248  00018C                     dBm_to_mW_ufixed16@value2:
  1249                           	opt stack 0
  1250  00018C                     ___awdiv@divisor:
  1251                           	opt stack 0
  1252  00018C                     memcpy@s1:
  1253                           	opt stack 0
  1254  00018C                     encode_uint8_variable@var:
  1255                           	opt stack 0
  1256  00018C                     encode_ufixed16_variable@var:
  1257                           	opt stack 0
  1258                           
  1259                           ; 10 bytes @ 0x2
  1260  00018C                     	ds	1
  1261  00018D                     RegisterRead@IRQ1select:
  1262                           	opt stack 0
  1263  00018D                     WriteFIFO@IRQ1select:
  1264                           	opt stack 0
  1265  00018D                     ___ftpack@exp:
  1266                           	opt stack 0
  1267  00018D                     frexp@eptr:
  1268                           	opt stack 0
  1269  00018D                     ___ftge@ff2:
  1270                           	opt stack 0
  1271                           
  1272                           ; 3 bytes @ 0x3
  1273  00018D                     	ds	1
  1274  00018E                     ??_labelcmp:
  1275  00018E                     ??_MiWi_TickGet:
  1276  00018E                     ??_encode:
  1277  00018E                     RegisterSet@IRQ1select:
  1278                           	opt stack 0
  1279  00018E                     RegisterRead@IRQ0select:
  1280                           	opt stack 0
  1281  00018E                     WriteFIFO@IRQ0select:
  1282                           	opt stack 0
  1283  00018E                     SearchForLongAddress@j:
  1284                           	opt stack 0
  1285  00018E                     dBm_to_mW_ufixed16@power:
  1286                           	opt stack 0
  1287  00018E                     ___awdiv@counter:
  1288                           	opt stack 0
  1289  00018E                     ___ftpack@sign:
  1290                           	opt stack 0
  1291  00018E                     memcpy@n:
  1292                           	opt stack 0
  1293  00018E                     ___lmul@multiplicand:
  1294                           	opt stack 0
  1295                           
  1296                           ; 4 bytes @ 0x4
  1297  00018E                     	ds	1
  1298  00018F                     ??___ftpack:
  1299  00018F                     ??_frexp:
  1300  00018F                     MiWi_TickGet@failureCounter:
  1301                           	opt stack 0
  1302  00018F                     RegisterSet@IRQ0select:
  1303                           	opt stack 0
  1304  00018F                     RegisterRead@address:
  1305                           	opt stack 0
  1306  00018F                     SearchForLongAddress@i:
  1307                           	opt stack 0
  1308  00018F                     ___awdiv@sign:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x5
  1312  00018F                     	ds	1
  1313  000190                     ??_AddNodeToNetworkTable:
  1314  000190                     ??_MiMAC_SetPower:
  1315  000190                     ??___ftge:
  1316  000190                     SetRFMode@mode:
  1317                           	opt stack 0
  1318  000190                     isSameAddress@i:
  1319                           	opt stack 0
  1320  000190                     ___awdiv@quotient:
  1321                           	opt stack 0
  1322  000190                     memcpy@d:
  1323                           	opt stack 0
  1324  000190                     MiWi_TickGet@currentTime:
  1325                           	opt stack 0
  1326                           
  1327                           ; 4 bytes @ 0x6
  1328  000190                     	ds	1
  1329  000191                     MiMAC_SetChannel@offsetFreq:
  1330                           	opt stack 0
  1331  000191                     _labelcmp$3774:
  1332                           	opt stack 0
  1333                           
  1334                           ; 1 bytes @ 0x7
  1335  000191                     	ds	1
  1336  000192                     ??_MiMAC_SetChannel:
  1337  000192                     ?___ftadd:
  1338                           	opt stack 0
  1339  000192                     ?___lwtoft:
  1340                           	opt stack 0
  1341  000192                     MiMAC_SetPower@outputPower:
  1342                           	opt stack 0
  1343  000192                     AddNodeToNetworkTable@i:
  1344                           	opt stack 0
  1345  000192                     ___lwtoft@c:
  1346                           	opt stack 0
  1347  000192                     memcpy@s:
  1348                           	opt stack 0
  1349  000192                     ___ftadd@f1:
  1350                           	opt stack 0
  1351  000192                     ___lmul@product:
  1352                           	opt stack 0
  1353                           
  1354                           ; 4 bytes @ 0x8
  1355  000192                     	ds	1
  1356  000193                     MiMAC_SetChannel@channel:
  1357                           	opt stack 0
  1358  000193                     AddNodeToNetworkTable@handle:
  1359                           	opt stack 0
  1360                           
  1361                           ; 1 bytes @ 0x9
  1362  000193                     	ds	1
  1363  000194                     ?_decode_variable:
  1364                           	opt stack 0
  1365  000194                     TxPacket@CCA:
  1366                           	opt stack 0
  1367  000194                     MiApp_SetChannel@channel:
  1368                           	opt stack 0
  1369  000194                     decode_variable@p_buffer:
  1370                           	opt stack 0
  1371                           
  1372                           ; 2 bytes @ 0xA
  1373  000194                     	ds	1
  1374  000195                     ??_TxPacket:
  1375  000195                     ___ftadd@f2:
  1376                           	opt stack 0
  1377                           
  1378                           ; 3 bytes @ 0xB
  1379  000195                     	ds	1
  1380  000196                     ??_encode_ufixed16_variable:
  1381  000196                     ??_encode_uint8_variable:
  1382  000196                     ?___lltoft:
  1383                           	opt stack 0
  1384  000196                     DELAY_ms@ms:
  1385                           	opt stack 0
  1386  000196                     ___lltoft@c:
  1387                           	opt stack 0
  1388                           
  1389                           ; 4 bytes @ 0xC
  1390  000196                     	ds	1
  1391  000197                     encode_uint8_variable@m_signed:
  1392                           	opt stack 0
  1393  000197                     encode_ufixed16_variable@m_signed:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0xD
  1397  000197                     	ds	1
  1398  000198                     ??___ftadd:
  1399  000198                     encode_uint8_variable@m_writable:
  1400                           	opt stack 0
  1401  000198                     encode_ufixed16_variable@m_writable:
  1402                           	opt stack 0
  1403  000198                     encode@delta:
  1404                           	opt stack 0
  1405  000198                     DELAY_ms@cyclesRequiredForEntireDelay:
  1406                           	opt stack 0
  1407                           
  1408                           ; 4 bytes @ 0xE
  1409  000198                     	ds	2
  1410  00019A                     ??___lltoft:
  1411  00019A                     encode@i:
  1412                           	opt stack 0
  1413                           
  1414                           ; 1 bytes @ 0x10
  1415  00019A                     	ds	1
  1416  00019B                     ___ftadd@sign:
  1417                           	opt stack 0
  1418  00019B                     encode@part1:
  1419                           	opt stack 0
  1420                           
  1421                           ; 2 bytes @ 0x11
  1422  00019B                     	ds	1
  1423  00019C                     MiMAC_PowerState@PowerState:
  1424                           	opt stack 0
  1425  00019C                     ___ftadd@exp2:
  1426                           	opt stack 0
  1427  00019C                     MiMAC_Init@initValue:
  1428                           	opt stack 0
  1429                           
  1430                           ; 3 bytes @ 0x12
  1431  00019C                     	ds	1
  1432  00019D                     MiMAC_PowerState@i:
  1433                           	opt stack 0
  1434  00019D                     ___ftadd@exp1:
  1435                           	opt stack 0
  1436  00019D                     encode@part2:
  1437                           	opt stack 0
  1438  00019D                     TxPacket@t1:
  1439                           	opt stack 0
  1440                           
  1441                           ; 4 bytes @ 0x13
  1442  00019D                     	ds	1
  1443  00019E                     ??_decode_variable:
  1444  00019E                     MiApp_TransceiverPowerState@Mode:
  1445                           	opt stack 0
  1446  00019E                     ___lltoft@exp:
  1447                           	opt stack 0
  1448                           
  1449                           ; 1 bytes @ 0x14
  1450  00019E                     	ds	1
  1451  00019F                     ?___ftdiv:
  1452                           	opt stack 0
  1453  00019F                     MiMAC_Init@i:
  1454                           	opt stack 0
  1455  00019F                     encode@sum:
  1456                           	opt stack 0
  1457  00019F                     ___ftdiv@f1:
  1458                           	opt stack 0
  1459                           
  1460                           ; 3 bytes @ 0x15
  1461  00019F                     	ds	1
  1462  0001A0                     ??_MiApp_ProtocolInit:
  1463  0001A0                     decode_variable@var:
  1464                           	opt stack 0
  1465                           
  1466                           ; 10 bytes @ 0x16
  1467  0001A0                     	ds	1
  1468  0001A1                     MiApp_ProtocolInit@bNetworkFreezer:
  1469                           	opt stack 0
  1470  0001A1                     CTR@text:
  1471                           	opt stack 0
  1472  0001A1                     CBC_MAC@text:
  1473                           	opt stack 0
  1474  0001A1                     TxPacket@t2:
  1475                           	opt stack 0
  1476                           
  1477                           ; 4 bytes @ 0x17
  1478  0001A1                     	ds	1
  1479  0001A2                     MiApp_ProtocolInit@MIP:
  1480                           	opt stack 0
  1481  0001A2                     ___ftdiv@f2:
  1482                           	opt stack 0
  1483                           
  1484                           ; 3 bytes @ 0x18
  1485  0001A2                     	ds	1
  1486  0001A3                     CTR@len:
  1487                           	opt stack 0
  1488  0001A3                     CBC_MAC@len:
  1489                           	opt stack 0
  1490                           
  1491                           ; 1 bytes @ 0x19
  1492  0001A3                     	ds	1
  1493  0001A4                     CTR@key:
  1494                           	opt stack 0
  1495  0001A4                     CBC_MAC@key:
  1496                           	opt stack 0
  1497                           
  1498                           ; 2 bytes @ 0x1A
  1499  0001A4                     	ds	1
  1500  0001A5                     ??___ftdiv:
  1501  0001A5                     TxPacket@CCARetries:
  1502                           	opt stack 0
  1503  0001A5                     MiApp_ProtocolInit@i:
  1504                           	opt stack 0
  1505                           
  1506                           ; 1 bytes @ 0x1B
  1507  0001A5                     	ds	1
  1508  0001A6                     TxPacket@reTry:
  1509                           	opt stack 0
  1510  0001A6                     CTR@nounce:
  1511                           	opt stack 0
  1512  0001A6                     CBC_MAC@MIC:
  1513                           	opt stack 0
  1514                           
  1515                           ; 2 bytes @ 0x1C
  1516  0001A6                     	ds	1
  1517  0001A7                     TxPacket@allowedTxFailure:
  1518                           	opt stack 0
  1519                           
  1520                           ; 1 bytes @ 0x1D
  1521  0001A7                     	ds	1
  1522  0001A8                     ??_CTR:
  1523  0001A8                     ??_CBC_MAC:
  1524  0001A8                     TxPacket@status:
  1525                           	opt stack 0
  1526  0001A8                     ___ftdiv@cntr:
  1527                           	opt stack 0
  1528                           
  1529                           ; 1 bytes @ 0x1E
  1530  0001A8                     	ds	1
  1531  0001A9                     TxPacket@TxPacketLen:
  1532                           	opt stack 0
  1533  0001A9                     ___ftdiv@f3:
  1534                           	opt stack 0
  1535                           
  1536                           ; 3 bytes @ 0x1F
  1537  0001A9                     	ds	1
  1538  0001AA                     TxPacket@i:
  1539                           	opt stack 0
  1540                           
  1541                           ; 1 bytes @ 0x20
  1542  0001AA                     	ds	1
  1543  0001AB                     TxPacket@rssival:
  1544                           	opt stack 0
  1545  0001AB                     CTR@block:
  1546                           	opt stack 0
  1547  0001AB                     CBC_MAC@block:
  1548                           	opt stack 0
  1549                           
  1550                           ; 1 bytes @ 0x21
  1551  0001AB                     	ds	1
  1552  0001AC                     CTR@i:
  1553                           	opt stack 0
  1554  0001AC                     CBC_MAC@j:
  1555                           	opt stack 0
  1556  0001AC                     ___ftdiv@exp:
  1557                           	opt stack 0
  1558                           
  1559                           ; 1 bytes @ 0x22
  1560  0001AC                     	ds	1
  1561  0001AD                     CTR@j:
  1562                           	opt stack 0
  1563  0001AD                     CBC_MAC@i:
  1564                           	opt stack 0
  1565  0001AD                     ___ftdiv@sign:
  1566                           	opt stack 0
  1567                           
  1568                           ; 1 bytes @ 0x23
  1569  0001AD                     	ds	1
  1570  0001AE                     ?___fttol:
  1571                           	opt stack 0
  1572  0001AE                     CCM_Enc@text:
  1573                           	opt stack 0
  1574  0001AE                     CCM_Dec@text:
  1575                           	opt stack 0
  1576  0001AE                     ___fttol@f1:
  1577                           	opt stack 0
  1578                           
  1579                           ; 3 bytes @ 0x24
  1580  0001AE                     	ds	2
  1581  0001B0                     CCM_Enc@headerLen:
  1582                           	opt stack 0
  1583  0001B0                     CCM_Dec@headerLen:
  1584                           	opt stack 0
  1585                           
  1586                           ; 1 bytes @ 0x26
  1587  0001B0                     	ds	1
  1588  0001B1                     CCM_Enc@payloadLen:
  1589                           	opt stack 0
  1590  0001B1                     CCM_Dec@payloadLen:
  1591                           	opt stack 0
  1592                           
  1593                           ; 1 bytes @ 0x27
  1594  0001B1                     	ds	1
  1595  0001B2                     ??___fttol:
  1596  0001B2                     CCM_Enc@key:
  1597                           	opt stack 0
  1598  0001B2                     CCM_Dec@key:
  1599                           	opt stack 0
  1600                           
  1601                           ; 2 bytes @ 0x28
  1602  0001B2                     	ds	2
  1603  0001B4                     ??_CCM_Enc:
  1604  0001B4                     ??_CCM_Dec:
  1605                           
  1606                           ; 0 bytes @ 0x2A
  1607  0001B4                     	ds	2
  1608  0001B6                     _CCM_Enc$2085:
  1609                           	opt stack 0
  1610                           
  1611                           ; 2 bytes @ 0x2C
  1612  0001B6                     	ds	1
  1613  0001B7                     ___fttol@sign1:
  1614                           	opt stack 0
  1615                           
  1616                           ; 1 bytes @ 0x2D
  1617  0001B7                     	ds	1
  1618  0001B8                     CCM_Enc@i:
  1619                           	opt stack 0
  1620  0001B8                     ___fttol@lval:
  1621                           	opt stack 0
  1622                           
  1623                           ; 4 bytes @ 0x2E
  1624  0001B8                     	ds	1
  1625  0001B9                     MiMAC_SendPacket@transParam:
  1626                           	opt stack 0
  1627                           
  1628                           ; 3 bytes @ 0x2F
  1629  0001B9                     	ds	1
  1630  0001BA                     _CCM_Dec$2093:
  1631                           	opt stack 0
  1632                           
  1633                           ; 2 bytes @ 0x30
  1634  0001BA                     	ds	2
  1635  0001BC                     CCM_Dec@i:
  1636                           	opt stack 0
  1637  0001BC                     ___fttol@exp1:
  1638                           	opt stack 0
  1639  0001BC                     MiMAC_SendPacket@MACPayload:
  1640                           	opt stack 0
  1641                           
  1642                           ; 2 bytes @ 0x32
  1643  0001BC                     	ds	1
  1644  0001BD                     ??_MiMAC_ReceivedPacket:
  1645  0001BD                     ?___altoft:
  1646                           	opt stack 0
  1647  0001BD                     ___altoft@c:
  1648                           	opt stack 0
  1649                           
  1650                           ; 4 bytes @ 0x33
  1651  0001BD                     	ds	1
  1652  0001BE                     MiMAC_SendPacket@MACPayloadLen:
  1653                           	opt stack 0
  1654                           
  1655                           ; 1 bytes @ 0x34
  1656  0001BE                     	ds	1
  1657  0001BF                     ??_MiMAC_SendPacket:
  1658                           
  1659                           ; 0 bytes @ 0x35
  1660  0001BF                     	ds	1
  1661  0001C0                     MiMAC_SendPacket@headerLen:
  1662                           	opt stack 0
  1663                           
  1664                           ; 1 bytes @ 0x36
  1665  0001C0                     	ds	1
  1666  0001C1                     ??___altoft:
  1667  0001C1                     MiMAC_SendPacket@TxIndex:
  1668                           	opt stack 0
  1669                           
  1670                           ; 1 bytes @ 0x37
  1671  0001C1                     	ds	1
  1672  0001C2                     MiMAC_SendPacket@i:
  1673                           	opt stack 0
  1674                           
  1675                           ; 1 bytes @ 0x38
  1676  0001C2                     	ds	1
  1677  0001C3                     SendMACPacket@Address:
  1678                           	opt stack 0
  1679                           
  1680                           ; 2 bytes @ 0x39
  1681  0001C3                     	ds	2
  1682  0001C5                     SendMACPacket@PacketType:
  1683                           	opt stack 0
  1684  0001C5                     ___altoft@exp:
  1685                           	opt stack 0
  1686  0001C5                     MiMAC_ReceivedPacket@currentTick:
  1687                           	opt stack 0
  1688                           
  1689                           ; 4 bytes @ 0x3B
  1690  0001C5                     	ds	1
  1691  0001C6                     ??_SendMACPacket:
  1692  0001C6                     ___altoft@sign:
  1693                           	opt stack 0
  1694                           
  1695                           ; 1 bytes @ 0x3C
  1696  0001C6                     	ds	1
  1697  0001C7                     ?_floor:
  1698                           	opt stack 0
  1699  0001C7                     floor@x:
  1700                           	opt stack 0
  1701                           
  1702                           ; 3 bytes @ 0x3D
  1703  0001C7                     	ds	2
  1704  0001C9                     MiMAC_ReceivedPacket@FrameCounter:
  1705                           	opt stack 0
  1706                           
  1707                           ; 4 bytes @ 0x3F
  1708  0001C9                     	ds	1
  1709  0001CA                     floor@i:
  1710                           	opt stack 0
  1711                           
  1712                           ; 3 bytes @ 0x40
  1713  0001CA                     	ds	3
  1714  0001CD                     MiMAC_ReceivedPacket@k:
  1715                           	opt stack 0
  1716  0001CD                     floor@expon:
  1717                           	opt stack 0
  1718                           
  1719                           ; 2 bytes @ 0x43
  1720  0001CD                     	ds	1
  1721  0001CE                     MiMAC_ReceivedPacket@j:
  1722                           	opt stack 0
  1723                           
  1724                           ; 1 bytes @ 0x44
  1725  0001CE                     	ds	1
  1726  0001CF                     ?___ftneg:
  1727                           	opt stack 0
  1728  0001CF                     MiMAC_ReceivedPacket@PayloadIndex:
  1729                           	opt stack 0
  1730  0001CF                     ___ftneg@f1:
  1731                           	opt stack 0
  1732                           
  1733                           ; 3 bytes @ 0x45
  1734  0001CF                     	ds	1
  1735  0001D0                     MiMAC_ReceivedPacket@i:
  1736                           	opt stack 0
  1737                           
  1738                           ; 1 bytes @ 0x46
  1739  0001D0                     	ds	1
  1740  0001D1                     ??_MiWiTasks:
  1741                           
  1742                           ; 0 bytes @ 0x47
  1743  0001D1                     	ds	1
  1744  0001D2                     ?___ftmul:
  1745                           	opt stack 0
  1746  0001D2                     ___ftmul@f1:
  1747                           	opt stack 0
  1748                           
  1749                           ; 3 bytes @ 0x48
  1750  0001D2                     	ds	3
  1751  0001D5                     ___ftmul@f2:
  1752                           	opt stack 0
  1753                           
  1754                           ; 3 bytes @ 0x4B
  1755  0001D5                     	ds	3
  1756  0001D8                     ??___ftmul:
  1757                           
  1758                           ; 0 bytes @ 0x4E
  1759  0001D8                     	ds	1
  1760  0001D9                     MiWiTasks@t2:
  1761                           	opt stack 0
  1762                           
  1763                           ; 4 bytes @ 0x4F
  1764  0001D9                     	ds	2
  1765  0001DB                     ___ftmul@exp:
  1766                           	opt stack 0
  1767                           
  1768                           ; 1 bytes @ 0x51
  1769  0001DB                     	ds	1
  1770  0001DC                     ___ftmul@f3_as_product:
  1771                           	opt stack 0
  1772                           
  1773                           ; 3 bytes @ 0x52
  1774  0001DC                     	ds	1
  1775  0001DD                     MiWiTasks@cIndex:
  1776                           	opt stack 0
  1777                           
  1778                           ; 1 bytes @ 0x53
  1779  0001DD                     	ds	1
  1780  0001DE                     MiWiTasks@t1:
  1781                           	opt stack 0
  1782                           
  1783                           ; 4 bytes @ 0x54
  1784  0001DE                     	ds	1
  1785  0001DF                     ___ftmul@cntr:
  1786                           	opt stack 0
  1787                           
  1788                           ; 1 bytes @ 0x55
  1789  0001DF                     	ds	1
  1790  0001E0                     ___ftmul@sign:
  1791                           	opt stack 0
  1792                           
  1793                           ; 1 bytes @ 0x56
  1794  0001E0                     	ds	1
  1795  0001E1                     ??_read_sensors:
  1796                           
  1797                           ; 0 bytes @ 0x57
  1798  0001E1                     	ds	1
  1799  0001E2                     MiWiTasks@destPANID:
  1800                           	opt stack 0
  1801                           
  1802                           ; 2 bytes @ 0x58
  1803  0001E2                     	ds	2
  1804  0001E4                     read_sensors@t0:
  1805                           	opt stack 0
  1806  0001E4                     MiWiTasks@destShortAddress:
  1807                           	opt stack 0
  1808                           
  1809                           ; 2 bytes @ 0x5A
  1810  0001E4                     	ds	1
  1811  0001E5                     read_sensors@t1:
  1812                           	opt stack 0
  1813                           
  1814                           ; 1 bytes @ 0x5B
  1815  0001E5                     	ds	1
  1816  0001E6                     MiWiTasks@rxIndex:
  1817                           	opt stack 0
  1818  0001E6                     read_sensors@adc_result:
  1819                           	opt stack 0
  1820                           
  1821                           ; 2 bytes @ 0x5C
  1822  0001E6                     	ds	1
  1823  0001E7                     MiWiTasks@CapacityByte:
  1824                           	opt stack 0
  1825                           
  1826                           ; 1 bytes @ 0x5D
  1827  0001E7                     	ds	1
  1828  0001E8                     MiWiTasks@j:
  1829                           	opt stack 0
  1830  0001E8                     read_sensors@value:
  1831                           	opt stack 0
  1832                           
  1833                           ; 2 bytes @ 0x5E
  1834  0001E8                     	ds	1
  1835  0001E9                     MiWiTasks@sourcePANID:
  1836                           	opt stack 0
  1837                           
  1838                           ; 2 bytes @ 0x5F
  1839  0001E9                     	ds	2
  1840  0001EB                     MiWiTasks@sourceShortAddress:
  1841                           	opt stack 0
  1842                           
  1843                           ; 2 bytes @ 0x61
  1844  0001EB                     	ds	2
  1845  0001ED                     MiWiTasks@i:
  1846                           	opt stack 0
  1847                           
  1848                           ; 1 bytes @ 0x63
  1849  0001ED                     	ds	1
  1850  0001EE                     MiApp_UnicastAddress@DestAddress:
  1851                           	opt stack 0
  1852  0001EE                     MiApp_SearchConnection@ChannelMap:
  1853                           	opt stack 0
  1854                           
  1855                           ; 4 bytes @ 0x64
  1856  0001EE                     	ds	2
  1857  0001F0                     MiApp_UnicastAddress@PermanentAddr:
  1858                           	opt stack 0
  1859                           
  1860                           ; 1 bytes @ 0x66
  1861  0001F0                     	ds	1
  1862  0001F1                     MiApp_UnicastAddress@SecEn:
  1863                           	opt stack 0
  1864                           
  1865                           ; 1 bytes @ 0x67
  1866  0001F1                     	ds	1
  1867  0001F2                     ??_MiApp_UnicastAddress:
  1868  0001F2                     ??_MiApp_SearchConnection:
  1869                           
  1870                           ; 0 bytes @ 0x68
  1871  0001F2                     	ds	8
  1872  0001FA                     ??_do_UPDATE:
  1873  0001FA                     ??_do_POWER_TEST:
  1874  0001FA                     OpenSocket@i:
  1875                           	opt stack 0
  1876  0001FA                     do_NETWORK_REGISTER@p_uid:
  1877                           	opt stack 0
  1878                           
  1879                           ; 2 bytes @ 0x70
  1880  0001FA                     	ds	1
  1881  0001FB                     ??_send_initial_update:
  1882  0001FB                     ??_send_periodical_update:
  1883  0001FB                     ??_send_writables_update:
  1884  0001FB                     MiApp_EstablishConnection@Mode:
  1885                           	opt stack 0
  1886  0001FB                     adapt_power_level@minimal_rssi:
  1887                           	opt stack 0
  1888                           
  1889                           ; 1 bytes @ 0x71
  1890  0001FB                     	ds	1
  1891  0001FC                     ??_adapt_power_level:
  1892  0001FC                     do_NETWORK_REGISTER@sleeping_device:
  1893                           	opt stack 0
  1894                           
  1895                           ; 1 bytes @ 0x72
  1896  0001FC                     	ds	1
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           postinc0	equ	0xFEE
  1902                           wreg	equ	0xFE8
  1903                           postdec1	equ	0xFE5
  1904                           fsr1h	equ	0xFE2
  1905                           fsr1l	equ	0xFE1
  1906                           
  1907                           	psect	cstackBANK0
  1908  000060                     __pcstackBANK0:
  1909                           	opt stack 0
  1910  000060                     ?i2_MiWi_TickGet:
  1911                           	opt stack 0
  1912  000060                     i2SPIPut@i:
  1913                           	opt stack 0
  1914                           
  1915                           ; 1 bytes @ 0x0
  1916  000060                     	ds	1
  1917  000061                     i2SPIPut@v:
  1918                           	opt stack 0
  1919                           
  1920                           ; 1 bytes @ 0x1
  1921  000061                     	ds	1
  1922  000062                     i2RegisterRead@value:
  1923                           	opt stack 0
  1924  000062                     i2WriteFIFO@Data:
  1925                           	opt stack 0
  1926  000062                     i2RegisterSet@setting:
  1927                           	opt stack 0
  1928                           
  1929                           ; 2 bytes @ 0x2
  1930  000062                     	ds	1
  1931  000063                     i2RegisterRead@IRQ1select:
  1932                           	opt stack 0
  1933  000063                     i2WriteFIFO@IRQ1select:
  1934                           	opt stack 0
  1935                           
  1936                           ; 1 bytes @ 0x3
  1937  000063                     	ds	1
  1938  000064                     ??i2_MiWi_TickGet:
  1939  000064                     i2RegisterSet@IRQ1select:
  1940                           	opt stack 0
  1941  000064                     i2RegisterRead@IRQ0select:
  1942                           	opt stack 0
  1943  000064                     i2WriteFIFO@IRQ0select:
  1944                           	opt stack 0
  1945                           
  1946                           ; 1 bytes @ 0x4
  1947  000064                     	ds	1
  1948  000065                     i2MiWi_TickGet@failureCounter:
  1949                           	opt stack 0
  1950  000065                     i2RegisterSet@IRQ0select:
  1951                           	opt stack 0
  1952  000065                     i2RegisterRead@address:
  1953                           	opt stack 0
  1954                           
  1955                           ; 1 bytes @ 0x5
  1956  000065                     	ds	1
  1957  000066                     i2SetRFMode@mode:
  1958                           	opt stack 0
  1959  000066                     i2MiWi_TickGet@currentTime:
  1960                           	opt stack 0
  1961                           
  1962                           ; 4 bytes @ 0x6
  1963  000066                     	ds	4
  1964  00006A                     i2TxPacket@CCA:
  1965                           	opt stack 0
  1966                           
  1967                           ; 1 bytes @ 0xA
  1968  00006A                     	ds	1
  1969  00006B                     ??i2_TxPacket:
  1970                           
  1971                           ; 0 bytes @ 0xB
  1972  00006B                     	ds	8
  1973  000073                     i2TxPacket@t1:
  1974                           	opt stack 0
  1975                           
  1976                           ; 4 bytes @ 0x13
  1977  000073                     	ds	4
  1978  000077                     i2TxPacket@t2:
  1979                           	opt stack 0
  1980                           
  1981                           ; 4 bytes @ 0x17
  1982  000077                     	ds	4
  1983  00007B                     i2TxPacket@status:
  1984                           	opt stack 0
  1985                           
  1986                           ; 1 bytes @ 0x1B
  1987  00007B                     	ds	1
  1988  00007C                     i2TxPacket@CCARetries:
  1989                           	opt stack 0
  1990                           
  1991                           ; 1 bytes @ 0x1C
  1992  00007C                     	ds	1
  1993  00007D                     i2TxPacket@reTry:
  1994                           	opt stack 0
  1995                           
  1996                           ; 1 bytes @ 0x1D
  1997  00007D                     	ds	1
  1998  00007E                     i2TxPacket@allowedTxFailure:
  1999                           	opt stack 0
  2000                           
  2001                           ; 1 bytes @ 0x1E
  2002  00007E                     	ds	1
  2003  00007F                     i2TxPacket@TxPacketLen:
  2004                           	opt stack 0
  2005                           
  2006                           ; 1 bytes @ 0x1F
  2007  00007F                     	ds	1
  2008  000080                     i2TxPacket@i:
  2009                           	opt stack 0
  2010                           
  2011                           ; 1 bytes @ 0x20
  2012  000080                     	ds	1
  2013  000081                     i2TxPacket@rssival:
  2014                           	opt stack 0
  2015                           
  2016                           ; 1 bytes @ 0x21
  2017  000081                     	ds	1
  2018  000082                     ??_MIWIInterruptHandler:
  2019                           
  2020                           ; 0 bytes @ 0x22
  2021  000082                     	ds	6
  2022  000088                     MIWIInterruptHandler@counter:
  2023                           	opt stack 0
  2024                           
  2025                           ; 2 bytes @ 0x28
  2026  000088                     	ds	2
  2027  00008A                     MIWIInterruptHandler@fifo_stat:
  2028                           	opt stack 0
  2029                           
  2030                           ; 1 bytes @ 0x2A
  2031  00008A                     	ds	1
  2032  00008B                     MIWIInterruptHandler@ackPacket:
  2033                           	opt stack 0
  2034                           
  2035                           ; 4 bytes @ 0x2B
  2036  00008B                     	ds	4
  2037  00008F                     MIWIInterruptHandler@bAck:
  2038                           	opt stack 0
  2039                           
  2040                           ; 1 bytes @ 0x2F
  2041  00008F                     	ds	1
  2042  000090                     MIWIInterruptHandler@RxPacketPtr:
  2043                           	opt stack 0
  2044                           
  2045                           ; 1 bytes @ 0x30
  2046  000090                     	ds	1
  2047  000091                     MIWIInterruptHandler@ackInfoIndex:
  2048                           	opt stack 0
  2049                           
  2050                           ; 1 bytes @ 0x31
  2051  000091                     	ds	1
  2052  000092                     MIWIInterruptHandler@PacketLen:
  2053                           	opt stack 0
  2054                           
  2055                           ; 1 bytes @ 0x32
  2056  000092                     	ds	1
  2057  000093                     MIWIInterruptHandler@BankIndex:
  2058                           	opt stack 0
  2059                           
  2060                           ; 1 bytes @ 0x33
  2061  000093                     	ds	1
  2062  000094                     MIWIInterruptHandler@i:
  2063                           	opt stack 0
  2064                           
  2065                           ; 1 bytes @ 0x34
  2066  000094                     	ds	1
  2067  000095                     ??_SYS_InterruptHigh:
  2068                           
  2069                           ; 0 bytes @ 0x35
  2070  000095                     	ds	14
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           postinc0	equ	0xFEE
  2076                           wreg	equ	0xFE8
  2077                           postdec1	equ	0xFE5
  2078                           fsr1h	equ	0xFE2
  2079                           fsr1l	equ	0xFE1
  2080                           
  2081                           	psect	cstackCOMRAM
  2082  000001                     __pcstackCOMRAM:
  2083                           	opt stack 0
  2084  000001                     ?i1___ftpack:
  2085                           	opt stack 0
  2086  000001                     i1___ftpack@arg:
  2087                           	opt stack 0
  2088                           
  2089                           ; 3 bytes @ 0x0
  2090  000001                     	ds	3
  2091  000004                     i1___ftpack@exp:
  2092                           	opt stack 0
  2093                           
  2094                           ; 1 bytes @ 0x3
  2095  000004                     	ds	1
  2096  000005                     i1___ftpack@sign:
  2097                           	opt stack 0
  2098                           
  2099                           ; 1 bytes @ 0x4
  2100  000005                     	ds	1
  2101  000006                     ??i1___ftpack:
  2102                           
  2103                           ; 0 bytes @ 0x5
  2104  000006                     	ds	3
  2105  000009                     ?i1___ftadd:
  2106                           	opt stack 0
  2107  000009                     i1___ftadd@f1:
  2108                           	opt stack 0
  2109                           
  2110                           ; 3 bytes @ 0x8
  2111  000009                     	ds	3
  2112  00000C                     i1___ftadd@f2:
  2113                           	opt stack 0
  2114                           
  2115                           ; 3 bytes @ 0xB
  2116  00000C                     	ds	3
  2117  00000F                     ??i1___ftadd:
  2118                           
  2119                           ; 0 bytes @ 0xE
  2120  00000F                     	ds	3
  2121  000012                     i1___ftadd@sign:
  2122                           	opt stack 0
  2123                           
  2124                           ; 1 bytes @ 0x11
  2125  000012                     	ds	1
  2126  000013                     i1___ftadd@exp2:
  2127                           	opt stack 0
  2128                           
  2129                           ; 1 bytes @ 0x12
  2130  000013                     	ds	1
  2131  000014                     i1___ftadd@exp1:
  2132                           	opt stack 0
  2133                           
  2134                           ; 1 bytes @ 0x13
  2135  000014                     	ds	1
  2136  000015                     ??_SYS_InterruptLow:
  2137                           
  2138                           ; 0 bytes @ 0x14
  2139  000015                     	ds	17
  2140                           tblptru	equ	0xFF8
  2141                           tblptrh	equ	0xFF7
  2142                           tblptrl	equ	0xFF6
  2143                           tablat	equ	0xFF5
  2144                           postinc0	equ	0xFEE
  2145                           wreg	equ	0xFE8
  2146                           postdec1	equ	0xFE5
  2147                           fsr1h	equ	0xFE2
  2148                           fsr1l	equ	0xFE1
  2149                           
  2150 ;;
  2151 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2152 ;;
  2153 ;; *************** function _main *****************
  2154 ;; Defined at:
  2155 ;;		line 135 in file "src/main.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  j               1    8[BANK4 ] unsigned char 
  2160 ;;  x               2    6[BANK4 ] int 
  2161 ;;  scanresult      1    9[BANK4 ] volatile unsigned char 
  2162 ;;  best_RSSI       1    5[BANK4 ] unsigned char 
  2163 ;;  Status          1    4[BANK4 ] unsigned char 
  2164 ;;  best_candida    1    3[BANK4 ] unsigned char 
  2165 ;;  result          1    2[BANK4 ] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;		None               void
  2168 ;; Registers used:
  2169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0       8       0       0       0       0       0       0       
      +0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0      10       0       0       0       0       0       0       
      +0       0       0       0
  2179 ;;Total ram usage:       10 bytes
  2180 ;; Hardware stack levels required when called:   20
  2181 ;; This function calls:
  2182 ;;		_MiApp_ConnectionMode
  2183 ;;		_MiApp_DiscardMessage
  2184 ;;		_MiApp_EstablishConnection
  2185 ;;		_MiApp_MessageAvailable
  2186 ;;		_MiApp_ProtocolInit
  2187 ;;		_MiApp_SearchConnection
  2188 ;;		_MiApp_TransceiverPowerState
  2189 ;;		_MiMAC_SetPower
  2190 ;;		_MiWiTasks
  2191 ;;		_RTCC_reset
  2192 ;;		_SYSTEM_Initialize
  2193 ;;		_adapt_power_level
  2194 ;;		_do_NETWORK_REGISTER
  2195 ;;		_process_update_answer
  2196 ;;		_read_sensors
  2197 ;;		_security_force_key_update
  2198 ;;		_send_initial_update
  2199 ;;		_send_periodical_update
  2200 ;;		_sleep_and_reset
  2201 ;;		_timer_reset
  2202 ;;		_wait_for_1_sec
  2203 ;; This function is called by:
  2204 ;;		Startup code after reset
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text0
  2209  01307A                     __ptext0:
  2210                           	opt stack 0
  2211  01307A                     _main:
  2212                           	opt stack 11
  2213                           
  2214                           ;main.c: 137: SYSTEM_Initialize();
  2215                           
  2216                           ;incstack = 0
  2217  01307A  EC6E  F0AA         	call	_SYSTEM_Initialize	;wreg free
  2218                           
  2219                           ;main.c: 139: RTCC_reset();
  2220  01307E  EC7E  F0B7         	call	_RTCC_reset	;wreg free
  2221                           
  2222                           ;main.c: 140: timer_reset();
  2223  013082  ECC6  F0B7         	call	_timer_reset	;wreg free
  2224                           
  2225                           ;main.c: 142: myAppState = STATE_INIT;
  2226  013086  0E00               	movlw	0
  2227  013088  0101               	movlb	1	; () banked
  2228  01308A  6F4B               	movwf	_myAppState& (0+255),b
  2229                           
  2230                           ; BSR set to: 1
  2231                           ;main.c: 144: bool result;
  2232                           ;main.c: 146: myLongAddress[0] = myMUTA_version;
  2233  01308C  0EF2               	movlw	242
  2234  01308E  6EF6               	movwf	tblptrl,c
  2235  013090                     	if	1	;There is more than 1 active tblptr byte
  2236  013090  0EFF               	movlw	255
  2237  013092  6EF7               	movwf	tblptrh,c
  2238  013094                     	endif
  2239  013094                     	if	1	;There are 3 active tblptr bytes
  2240  013094  0E01               	movlw	1
  2241  013096  6EF8               	movwf	tblptru,c
  2242  013098                     	endif
  2243  013098  0008               	tblrd		*
  2244  01309A  CFF5 F0C8          	movff	tablat,_myLongAddress
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;main.c: 147: myLongAddress[1] = myMODEL;
  2248  01309E  0EF4               	movlw	244
  2249  0130A0  6EF6               	movwf	tblptrl,c
  2250  0130A2                     	if	1	;There is more than 1 active tblptr byte
  2251  0130A2  0EFF               	movlw	255
  2252  0130A4  6EF7               	movwf	tblptrh,c
  2253  0130A6                     	endif
  2254  0130A6                     	if	1	;There are 3 active tblptr bytes
  2255  0130A6  0E01               	movlw	1
  2256  0130A8  6EF8               	movwf	tblptru,c
  2257  0130AA                     	endif
  2258  0130AA  0008               	tblrd		*
  2259  0130AC  CFF5 F0C9          	movff	tablat,_myLongAddress+1
  2260                           
  2261                           ; BSR set to: 1
  2262                           ;main.c: 148: myLongAddress[2] = myUID[0];
  2263  0130B0  0EF6               	movlw	246
  2264  0130B2  6EF6               	movwf	tblptrl,c
  2265  0130B4                     	if	1	;There is more than 1 active tblptr byte
  2266  0130B4  0EFF               	movlw	255
  2267  0130B6  6EF7               	movwf	tblptrh,c
  2268  0130B8                     	endif
  2269  0130B8                     	if	1	;There are 3 active tblptr bytes
  2270  0130B8  0E01               	movlw	1
  2271  0130BA  6EF8               	movwf	tblptru,c
  2272  0130BC                     	endif
  2273  0130BC  0008               	tblrd		*
  2274  0130BE  CFF5 F0CA          	movff	tablat,_myLongAddress+2
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;main.c: 149: myLongAddress[3] = myUID[1];
  2278  0130C2  0EF7               	movlw	247
  2279  0130C4  6EF6               	movwf	tblptrl,c
  2280  0130C6  0EFF               	movlw	255
  2281  0130C8  6EF7               	movwf	tblptrh,c
  2282  0130CA  0E01               	movlw	1
  2283  0130CC  6EF8               	movwf	tblptru,c
  2284  0130CE  0008               	tblrd		*
  2285  0130D0  CFF5 F0CB          	movff	tablat,_myLongAddress+3
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;main.c: 152: for (int x=0; x<8; x++)
  2289  0130D4  0E00               	movlw	0
  2290  0130D6  0104               	movlb	4	; () banked
  2291  0130D8  6F07               	movwf	(main@x+1)& (0+255),b
  2292  0130DA  0E00               	movlw	0
  2293  0130DC  6F06               	movwf	main@x& (0+255),b
  2294  0130DE                     l15173:
  2295                           
  2296                           ; BSR set to: 4
  2297  0130DE  0104               	movlb	4	; () banked
  2298  0130E0  BF07               	btfsc	(main@x+1)& (0+255),7,b
  2299  0130E2  D008               	goto	l15177
  2300  0130E4  0104               	movlb	4	; () banked
  2301  0130E6  5107               	movf	(main@x+1)& (0+255),w,b
  2302  0130E8  E11E               	bnz	l15183
  2303  0130EA  0E08               	movlw	8
  2304  0130EC  0104               	movlb	4	; () banked
  2305  0130EE  5D06               	subwf	main@x& (0+255),w,b
  2306  0130F0  B0D8               	btfsc	status,0,c
  2307  0130F2  D019               	goto	l15183
  2308  0130F4                     l15177:
  2309                           
  2310                           ; BSR set to: 4
  2311                           ;main.c: 153: mySecurityKey[x] = StaticSecurityKey[x];
  2312  0130F4  0EEC               	movlw	236
  2313  0130F6  0104               	movlb	4	; () banked
  2314  0130F8  2506               	addwf	main@x& (0+255),w,b
  2315  0130FA  6EF6               	movwf	tblptrl,c
  2316  0130FC  0EFF               	movlw	255
  2317  0130FE  2107               	addwfc	(main@x+1)& (0+255),w,b
  2318  013100  6EF7               	movwf	tblptrh,c
  2319  013102  6AF8               	clrf	tblptru,c
  2320  013104  0E01               	movlw	1
  2321  013106  22F8               	addwfc	tblptru,f,c
  2322  013108  0EA3               	movlw	low _mySecurityKey
  2323  01310A  0104               	movlb	4	; () banked
  2324  01310C  2506               	addwf	main@x& (0+255),w,b
  2325  01310E  6ED9               	movwf	fsr2l,c
  2326  013110  0E00               	movlw	high _mySecurityKey
  2327  013112  0104               	movlb	4	; () banked
  2328  013114  2107               	addwfc	(main@x+1)& (0+255),w,b
  2329  013116  6EDA               	movwf	fsr2h,c
  2330  013118  0008               	tblrd		*
  2331  01311A  CFF5 FFDF          	movff	tablat,indf2
  2332                           
  2333                           ; BSR set to: 4
  2334  01311E  0104               	movlb	4	; () banked
  2335  013120  4B06               	infsnz	main@x& (0+255),f,b
  2336  013122  2B07               	incf	(main@x+1)& (0+255),f,b
  2337  013124  D7DC               	goto	l15173
  2338  013126                     l15183:
  2339                           
  2340                           ; BSR set to: 4
  2341                           ;main.c: 155: MiApp_ProtocolInit(0);
  2342  013126  0E00               	movlw	0
  2343  013128  ECB9  F0A8         	call	_MiApp_ProtocolInit
  2344                           
  2345                           ;main.c: 156: MiMAC_SetPower(0x00);
  2346  01312C  0E00               	movlw	0
  2347  01312E  ECCF  F0B6         	call	_MiMAC_SetPower
  2348  013132                     l15187:
  2349                           
  2350                           ;main.c: 162: {
  2351                           ;main.c: 163: scanresult = MiApp_SearchConnection(8, 0x11111111);
  2352  013132  0E11               	movlw	17
  2353  013134  0101               	movlb	1	; () banked
  2354  013136  6FEE               	movwf	MiApp_SearchConnection@ChannelMap& (0+255),b
  2355  013138  0E11               	movlw	17
  2356  01313A  6FEF               	movwf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),b
  2357  01313C  0E11               	movlw	17
  2358  01313E  6FF0               	movwf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),b
  2359  013140  0E11               	movlw	17
  2360  013142  6FF1               	movwf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),b
  2361  013144  0E08               	movlw	8
  2362  013146  EC06  F09D         	call	_MiApp_SearchConnection
  2363  01314A  0104               	movlb	4	; () banked
  2364  01314C  6F09               	movwf	main@scanresult& (0+255),b	;volatile
  2365                           
  2366                           ; BSR set to: 4
  2367                           ;main.c: 164: if (scanresult == 0)
  2368  01314E  0104               	movlb	4	; () banked
  2369  013150  5109               	movf	main@scanresult& (0+255),w,b	;volatile
  2370  013152  0104               	movlb	4	; () banked
  2371  013154  A4D8               	btfss	status,2,c
  2372  013156  D017               	goto	l15205
  2373                           
  2374                           ; BSR set to: 4
  2375                           ;main.c: 165: {
  2376                           ;main.c: 168: if (m_update_frequency<10)
  2377  013158  0E0A               	movlw	10
  2378  01315A  0101               	movlb	1	; () banked
  2379  01315C  61FF               	cpfslt	_m_update_frequency& (0+255),b	;volatile
  2380  01315E  D002               	goto	l15195
  2381                           
  2382                           ; BSR set to: 1
  2383                           ;main.c: 169: {
  2384                           ;main.c: 170: m_update_frequency++;
  2385  013160  0101               	movlb	1	; () banked
  2386  013162  2BFF               	incf	_m_update_frequency& (0+255),f,b	;volatile
  2387  013164                     l15195:
  2388                           
  2389                           ; BSR set to: 1
  2390                           ;main.c: 171: }
  2391                           ;main.c: 172: LATCbits.LATC0 = 0;
  2392  013164  908B               	bcf	3979,0,c	;volatile
  2393                           
  2394                           ; BSR set to: 1
  2395                           ;main.c: 173: timer_reset();
  2396  013166  ECC6  F0B7         	call	_timer_reset	;wreg free
  2397                           
  2398                           ;main.c: 174: MiApp_TransceiverPowerState(0x00);
  2399  01316A  0E00               	movlw	0
  2400  01316C  ECB1  F0B6         	call	_MiApp_TransceiverPowerState
  2401                           
  2402                           ;main.c: 176: while (!timer_flag)
  2403  013170  D002               	goto	l15201
  2404  013172                     l1080:
  2405                           
  2406                           ; BSR set to: 1
  2407                           ;main.c: 177: {
  2408                           ;main.c: 178: OSCCONbits.IDLEN = 0;
  2409  013172  9ED3               	bcf	4051,7,c	;volatile
  2410  013174  0003               	sleep		;# 
  2411  013176                     l15201:
  2412  013176  0101               	movlb	1	; () banked
  2413  013178  514D               	movf	_timer_flag& (0+255),w,b	;volatile
  2414  01317A  B4D8               	btfsc	status,2,c
  2415  01317C  D7FA               	goto	l1080
  2416                           
  2417                           ; BSR set to: 1
  2418                           ;main.c: 180: }
  2419                           ;main.c: 185: MiApp_TransceiverPowerState(0x01);
  2420                           
  2421                           ; BSR set to: 1
  2422  01317E  0E01               	movlw	1
  2423  013180  ECB1  F0B6         	call	_MiApp_TransceiverPowerState
  2424                           
  2425                           ;main.c: 189: }
  2426  013184  D7D6               	goto	l15187
  2427  013186                     l15205:
  2428                           
  2429                           ;main.c: 190: else
  2430                           ;main.c: 191: {
  2431                           ;main.c: 193: m_update_frequency = 1;
  2432  013186  0E01               	movlw	1
  2433  013188  0101               	movlb	1	; () banked
  2434  01318A  6FFF               	movwf	_m_update_frequency& (0+255),b	;volatile
  2435                           
  2436                           ; BSR set to: 1
  2437                           ;main.c: 195: }
  2438                           ;main.c: 196: }
  2439                           ;main.c: 197: uint8_t best_RSSI = 0;
  2440                           
  2441                           ; BSR set to: 1
  2442                           
  2443                           ; BSR set to: 1
  2444                           
  2445                           ; BSR set to: 1
  2446                           
  2447                           ;main.c: 194: break;
  2448  01318C  0E00               	movlw	0
  2449  01318E  0104               	movlb	4	; () banked
  2450  013190  6F05               	movwf	main@best_RSSI& (0+255),b
  2451                           
  2452                           ;main.c: 198: uint8_t best_candidate;
  2453                           ;main.c: 199: for(uint8_t j = 0; j < scanresult; j++)
  2454  013192  0E00               	movlw	0
  2455  013194  0104               	movlb	4	; () banked
  2456  013196  6F08               	movwf	main@j& (0+255),b
  2457  013198  D03A               	goto	l15219
  2458  01319A                     l15209:
  2459                           
  2460                           ; BSR set to: 4
  2461                           ;main.c: 200: {
  2462                           ;main.c: 201: if (ActiveScanResults[j].RSSIValue >= best_RSSI && ActiveScanResults[j].PA
      +                          NID.Val == 0x1337)
  2463  01319A  0104               	movlb	4	; () banked
  2464  01319C  5108               	movf	main@j& (0+255),w,b
  2465  01319E  0D0A               	mullw	10
  2466  0131A0  0E07               	movlw	7
  2467  0131A2  26F3               	addwf	prodl,f,c
  2468  0131A4  0E00               	movlw	0
  2469  0131A6  22F4               	addwfc	prodh,f,c
  2470  0131A8  0E00               	movlw	low _ActiveScanResults
  2471  0131AA  24F3               	addwf	prodl,w,c
  2472  0131AC  6ED9               	movwf	fsr2l,c
  2473  0131AE  0E03               	movlw	high _ActiveScanResults
  2474  0131B0  20F4               	addwfc	prodh,w,c
  2475  0131B2  6EDA               	movwf	fsr2h,c
  2476  0131B4  0104               	movlb	4	; () banked
  2477  0131B6  5105               	movf	main@best_RSSI& (0+255),w,b
  2478  0131B8  5CDE               	subwf	postinc2,w,c
  2479  0131BA  A0D8               	btfss	status,0,c
  2480  0131BC  D026               	goto	l15217
  2481                           
  2482                           ; BSR set to: 4
  2483  0131BE  0104               	movlb	4	; () banked
  2484  0131C0  5108               	movf	main@j& (0+255),w,b
  2485  0131C2  0D0A               	mullw	10
  2486  0131C4  0E05               	movlw	5
  2487  0131C6  26F3               	addwf	prodl,f,c
  2488  0131C8  0E00               	movlw	0
  2489  0131CA  22F4               	addwfc	prodh,f,c
  2490  0131CC  0E00               	movlw	low _ActiveScanResults
  2491  0131CE  24F3               	addwf	prodl,w,c
  2492  0131D0  6ED9               	movwf	fsr2l,c
  2493  0131D2  0E03               	movlw	high _ActiveScanResults
  2494  0131D4  20F4               	addwfc	prodh,w,c
  2495  0131D6  6EDA               	movwf	fsr2h,c
  2496  0131D8  0E37               	movlw	55
  2497  0131DA  18DE               	xorwf	postinc2,w,c
  2498  0131DC  E116               	bnz	l15217
  2499  0131DE  0E13               	movlw	19
  2500  0131E0  18DE               	xorwf	postinc2,w,c
  2501  0131E2  A4D8               	btfss	status,2,c
  2502  0131E4  D012               	goto	l15217
  2503                           
  2504                           ; BSR set to: 4
  2505                           ;main.c: 202: {
  2506                           ;main.c: 203: best_RSSI = ActiveScanResults[j].RSSIValue;
  2507  0131E6  0104               	movlb	4	; () banked
  2508  0131E8  5108               	movf	main@j& (0+255),w,b
  2509  0131EA  0D0A               	mullw	10
  2510  0131EC  0E07               	movlw	7
  2511  0131EE  26F3               	addwf	prodl,f,c
  2512  0131F0  0E00               	movlw	0
  2513  0131F2  22F4               	addwfc	prodh,f,c
  2514  0131F4  0E00               	movlw	low _ActiveScanResults
  2515  0131F6  24F3               	addwf	prodl,w,c
  2516  0131F8  6ED9               	movwf	fsr2l,c
  2517  0131FA  0E03               	movlw	high _ActiveScanResults
  2518  0131FC  20F4               	addwfc	prodh,w,c
  2519  0131FE  6EDA               	movwf	fsr2h,c
  2520  013200  50DF               	movf	indf2,w,c
  2521  013202  0104               	movlb	4	; () banked
  2522  013204  6F05               	movwf	main@best_RSSI& (0+255),b
  2523                           
  2524                           ; BSR set to: 4
  2525                           ;main.c: 204: best_candidate = j;
  2526  013206  C408  F403         	movff	main@j,main@best_candidate
  2527  01320A                     l15217:
  2528                           
  2529                           ; BSR set to: 4
  2530  01320A  0104               	movlb	4	; () banked
  2531  01320C  2B08               	incf	main@j& (0+255),f,b
  2532  01320E                     l15219:
  2533                           
  2534                           ; BSR set to: 4
  2535  01320E  0104               	movlb	4	; () banked
  2536  013210  5109               	movf	main@scanresult& (0+255),w,b	;volatile
  2537  013212  0104               	movlb	4	; () banked
  2538  013214  5D08               	subwf	main@j& (0+255),w,b
  2539  013216  A0D8               	btfss	status,0,c
  2540  013218  D7C0               	goto	l15209
  2541                           
  2542                           ; BSR set to: 4
  2543                           ;main.c: 205: }
  2544                           ;main.c: 206: }
  2545                           ;main.c: 210: uint8_t Status = MiApp_EstablishConnection(best_candidate, 0x00);
  2546                           
  2547                           ; BSR set to: 4
  2548  01321A  0E00               	movlw	0
  2549  01321C  0101               	movlb	1	; () banked
  2550  01321E  6FFB               	movwf	MiApp_EstablishConnection@Mode& (0+255),b
  2551  013220  0104               	movlb	4	; () banked
  2552  013222  5103               	movf	main@best_candidate& (0+255),w,b
  2553  013224  EC9F  F094         	call	_MiApp_EstablishConnection
  2554  013228  0104               	movlb	4	; () banked
  2555  01322A  6F04               	movwf	main@Status& (0+255),b
  2556                           
  2557                           ; BSR set to: 4
  2558                           ;main.c: 211: if(Status == 0xFF)
  2559  01322C  0104               	movlb	4	; () banked
  2560  01322E  2904               	incf	main@Status& (0+255),w,b
  2561  013230  A4D8               	btfss	status,2,c
  2562  013232  D005               	goto	l15229
  2563                           
  2564                           ; BSR set to: 4
  2565                           ;main.c: 212: {
  2566                           ;main.c: 215: myAppState = STATE_PROBLEM;
  2567  013234  0E02               	movlw	2
  2568  013236  0101               	movlb	1	; () banked
  2569  013238  6F4B               	movwf	_myAppState& (0+255),b
  2570                           
  2571                           ; BSR set to: 1
  2572                           ;main.c: 216: sleep_and_reset();
  2573  01323A  EC4A  F0B7         	call	_sleep_and_reset	;wreg free
  2574  01323E                     l15229:
  2575                           
  2576                           ;main.c: 217: }
  2577                           ;main.c: 218: MiApp_ConnectionMode(0x03);
  2578  01323E  0E03               	movlw	3
  2579  013240  EC1F  F0B7         	call	_MiApp_ConnectionMode
  2580                           
  2581                           ;main.c: 225: result = do_NETWORK_REGISTER(&myLongAddress[0],0xff);
  2582  013244  0EC8               	movlw	low _myLongAddress
  2583  013246  0101               	movlb	1	; () banked
  2584  013248  6FFA               	movwf	do_NETWORK_REGISTER@p_uid& (0+255),b
  2585  01324A  0E00               	movlw	high _myLongAddress
  2586  01324C  0101               	movlb	1	; () banked
  2587  01324E  6FFB               	movwf	(do_NETWORK_REGISTER@p_uid+1)& (0+255),b
  2588  013250  0EFF               	movlw	255
  2589  013252  0101               	movlb	1	; () banked
  2590  013254  6FFC               	movwf	do_NETWORK_REGISTER@sleeping_device& (0+255),b
  2591  013256  EC6F  F0A1         	call	_do_NETWORK_REGISTER	;wreg free
  2592  01325A  0104               	movlb	4	; () banked
  2593  01325C  6F02               	movwf	main@result& (0+255),b
  2594                           
  2595                           ; BSR set to: 4
  2596                           ;main.c: 229: if (!result)
  2597  01325E  0104               	movlb	4	; () banked
  2598  013260  5102               	movf	main@result& (0+255),w,b
  2599  013262  0104               	movlb	4	; () banked
  2600  013264  A4D8               	btfss	status,2,c
  2601  013266  D005               	goto	l15239
  2602                           
  2603                           ; BSR set to: 4
  2604                           ;main.c: 230: {
  2605                           ;main.c: 233: myAppState = STATE_PROBLEM;
  2606  013268  0E02               	movlw	2
  2607  01326A  0101               	movlb	1	; () banked
  2608  01326C  6F4B               	movwf	_myAppState& (0+255),b
  2609                           
  2610                           ; BSR set to: 1
  2611                           ;main.c: 234: sleep_and_reset();
  2612  01326E  EC4A  F0B7         	call	_sleep_and_reset	;wreg free
  2613  013272                     l15239:
  2614                           
  2615                           ;main.c: 235: }
  2616                           ;main.c: 238: security_force_key_update();
  2617  013272  ECE2  F0B5         	call	_security_force_key_update	;wreg free
  2618                           
  2619                           ;main.c: 240: myAppState = STATE_READY;
  2620  013276  0E01               	movlw	1
  2621  013278  0101               	movlb	1	; () banked
  2622  01327A  6F4B               	movwf	_myAppState& (0+255),b
  2623                           
  2624                           ; BSR set to: 1
  2625                           ;main.c: 244: m_power = adapt_power_level(0x00, 35);
  2626  01327C  0E23               	movlw	35
  2627  01327E  0101               	movlb	1	; () banked
  2628  013280  6FFB               	movwf	adapt_power_level@minimal_rssi& (0+255),b
  2629  013282  0E00               	movlw	0
  2630  013284  ECFE  F0B4         	call	_adapt_power_level
  2631  013288  0101               	movlb	1	; () banked
  2632  01328A  6F4A               	movwf	_m_power& (0+255),b
  2633                           
  2634                           ; BSR set to: 1
  2635                           ;main.c: 248: m_uptime_days = 0;
  2636  01328C  0E00               	movlw	0
  2637  01328E  0101               	movlb	1	; () banked
  2638  013290  6F33               	movwf	_m_uptime_days& (0+255),b	;volatile
  2639  013292  0E00               	movlw	0
  2640  013294  0101               	movlb	1	; () banked
  2641  013296  6F34               	movwf	(_m_uptime_days+1)& (0+255),b	;volatile
  2642  013298  0E00               	movlw	0
  2643  01329A  0101               	movlb	1	; () banked
  2644  01329C  6F35               	movwf	(_m_uptime_days+2)& (0+255),b	;volatile
  2645                           
  2646                           ; BSR set to: 1
  2647                           ;main.c: 250: RTCC_reset();
  2648  01329E  EC7E  F0B7         	call	_RTCC_reset	;wreg free
  2649                           
  2650                           ;main.c: 252: read_sensors();
  2651  0132A2  ECBA  F096         	call	_read_sensors	;wreg free
  2652                           
  2653                           ;main.c: 253: while (!send_initial_update())
  2654  0132A6  D00D               	goto	l15261
  2655  0132A8                     l15251:
  2656                           
  2657                           ;main.c: 254: {
  2658                           ;main.c: 256: consecutive_fails++;
  2659  0132A8  0101               	movlb	1	; () banked
  2660  0132AA  2B47               	incf	_consecutive_fails& (0+255),f,b
  2661                           
  2662                           ; BSR set to: 1
  2663                           ;main.c: 257: if (consecutive_fails >= 3)
  2664  0132AC  0E02               	movlw	2
  2665  0132AE  0101               	movlb	1	; () banked
  2666  0132B0  6547               	cpfsgt	_consecutive_fails& (0+255),b
  2667  0132B2  D005               	goto	l15259
  2668                           
  2669                           ; BSR set to: 1
  2670                           ;main.c: 258: {
  2671                           ;main.c: 260: myAppState = STATE_PROBLEM;
  2672  0132B4  0E02               	movlw	2
  2673  0132B6  0101               	movlb	1	; () banked
  2674  0132B8  6F4B               	movwf	_myAppState& (0+255),b
  2675                           
  2676                           ; BSR set to: 1
  2677                           ;main.c: 261: sleep_and_reset();
  2678  0132BA  EC4A  F0B7         	call	_sleep_and_reset	;wreg free
  2679  0132BE                     l15259:
  2680                           
  2681                           ;main.c: 262: }
  2682                           ;main.c: 263: wait_for_1_sec();
  2683  0132BE  ECEC  F0B6         	call	_wait_for_1_sec	;wreg free
  2684  0132C2                     l15261:
  2685  0132C2  EC3D  F086         	call	_send_initial_update	;wreg free
  2686  0132C6  0900               	iorlw	0
  2687  0132C8  A4D8               	btfss	status,2,c
  2688  0132CA  D031               	goto	l15297
  2689  0132CC  D7ED               	goto	l15251
  2690  0132CE                     l15265:
  2691                           
  2692                           ; BSR set to: 1
  2693                           ;main.c: 270: {
  2694                           ;main.c: 273: process_update_answer();
  2695  0132CE  EC07  F09E         	call	_process_update_answer	;wreg free
  2696                           
  2697                           ;main.c: 277: LATCbits.LATC0 = 0;
  2698  0132D2  908B               	bcf	3979,0,c	;volatile
  2699                           
  2700                           ;main.c: 278: MiApp_TransceiverPowerState(0x00);
  2701  0132D4  0E00               	movlw	0
  2702  0132D6  ECB1  F0B6         	call	_MiApp_TransceiverPowerState
  2703                           
  2704                           ;main.c: 279: timer_reset();
  2705  0132DA  ECC6  F0B7         	call	_timer_reset	;wreg free
  2706                           
  2707                           ;main.c: 281: while (!timer_flag)
  2708  0132DE  D002               	goto	l15273
  2709  0132E0                     l1097:
  2710                           
  2711                           ; BSR set to: 1
  2712                           ;main.c: 282: {
  2713                           ;main.c: 283: OSCCONbits.IDLEN = 0;
  2714  0132E0  9ED3               	bcf	4051,7,c	;volatile
  2715  0132E2  0003               	sleep		;# 
  2716  0132E4                     l15273:
  2717  0132E4  0101               	movlb	1	; () banked
  2718  0132E6  514D               	movf	_timer_flag& (0+255),w,b	;volatile
  2719  0132E8  B4D8               	btfsc	status,2,c
  2720  0132EA  D7FA               	goto	l1097
  2721                           
  2722                           ; BSR set to: 1
  2723                           ;main.c: 285: }
  2724                           ;main.c: 290: LATCbits.LATC0 = 1;
  2725  0132EC  808B               	bsf	3979,0,c	;volatile
  2726                           
  2727                           ; BSR set to: 1
  2728                           ;main.c: 291: read_sensors();
  2729  0132EE  ECBA  F096         	call	_read_sensors	;wreg free
  2730                           
  2731                           ;main.c: 292: MiApp_TransceiverPowerState(0x01);
  2732  0132F2  0E01               	movlw	1
  2733  0132F4  ECB1  F0B6         	call	_MiApp_TransceiverPowerState
  2734                           
  2735                           ;main.c: 293: if(MiApp_MessageAvailable())
  2736  0132F8  ECE8  F0B7         	call	_MiApp_MessageAvailable	;wreg free
  2737  0132FC  0900               	iorlw	0
  2738  0132FE  A4D8               	btfss	status,2,c
  2739                           
  2740                           ;main.c: 294: MiApp_DiscardMessage();
  2741  013300  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
  2742                           
  2743                           ;main.c: 295: MiWiTasks();
  2744  013304  EC00  F080         	call	_MiWiTasks	;wreg free
  2745                           
  2746                           ;main.c: 296: while (!send_periodical_update())
  2747  013308  D00D               	goto	l15295
  2748  01330A                     l15285:
  2749                           
  2750                           ;main.c: 297: {
  2751                           ;main.c: 299: consecutive_fails++;
  2752  01330A  0101               	movlb	1	; () banked
  2753  01330C  2B47               	incf	_consecutive_fails& (0+255),f,b
  2754                           
  2755                           ; BSR set to: 1
  2756                           ;main.c: 300: if (consecutive_fails >= 3)
  2757  01330E  0E02               	movlw	2
  2758  013310  0101               	movlb	1	; () banked
  2759  013312  6547               	cpfsgt	_consecutive_fails& (0+255),b
  2760  013314  D005               	goto	l15293
  2761                           
  2762                           ; BSR set to: 1
  2763                           ;main.c: 301: {
  2764                           ;main.c: 303: myAppState = STATE_PROBLEM;
  2765  013316  0E02               	movlw	2
  2766  013318  0101               	movlb	1	; () banked
  2767  01331A  6F4B               	movwf	_myAppState& (0+255),b
  2768                           
  2769                           ; BSR set to: 1
  2770                           ;main.c: 304: sleep_and_reset();
  2771  01331C  EC4A  F0B7         	call	_sleep_and_reset	;wreg free
  2772  013320                     l15293:
  2773                           
  2774                           ;main.c: 305: }
  2775                           ;main.c: 306: wait_for_1_sec();
  2776  013320  ECEC  F0B6         	call	_wait_for_1_sec	;wreg free
  2777  013324                     l15295:
  2778  013324  EC10  F08A         	call	_send_periodical_update	;wreg free
  2779  013328  0900               	iorlw	0
  2780  01332A  B4D8               	btfsc	status,2,c
  2781  01332C  D7EE               	goto	l15285
  2782  01332E                     l15297:
  2783                           
  2784                           ;main.c: 307: }
  2785                           ;main.c: 308: consecutive_fails = 0;
  2786  01332E  0E00               	movlw	0
  2787  013330  0101               	movlb	1	; () banked
  2788  013332  6F47               	movwf	_consecutive_fails& (0+255),b
  2789                           
  2790                           ; BSR set to: 1
  2791  013334  D7CC               	goto	l15265
  2792  013336                     __end_of_main:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           tblptrh	equ	0xFF7
  2796                           tblptrl	equ	0xFF6
  2797                           tablat	equ	0xFF5
  2798                           prodh	equ	0xFF4
  2799                           prodl	equ	0xFF3
  2800                           postinc0	equ	0xFEE
  2801                           wreg	equ	0xFE8
  2802                           postdec1	equ	0xFE5
  2803                           fsr1h	equ	0xFE2
  2804                           fsr1l	equ	0xFE1
  2805                           indf2	equ	0xFDF
  2806                           postinc2	equ	0xFDE
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function _sleep_and_reset *****************
  2812 ;; Defined at:
  2813 ;;		line 398 in file "src/main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;		None               void
  2820 ;; Registers used:
  2821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:   14
  2834 ;; This function calls:
  2835 ;;		_MiApp_TransceiverPowerState
  2836 ;;		_timer_reset
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text1
  2843  016E94                     __ptext1:
  2844                           	opt stack 0
  2845  016E94                     _sleep_and_reset:
  2846                           	opt stack 16
  2847                           
  2848                           ;main.c: 400: LATCbits.LATC0 = 0;
  2849                           
  2850                           ; BSR set to: 1
  2851                           ;incstack = 0
  2852  016E94  908B               	bcf	3979,0,c	;volatile
  2853                           
  2854                           ;main.c: 401: timer_reset();
  2855  016E96  ECC6  F0B7         	call	_timer_reset	;wreg free
  2856                           
  2857                           ;main.c: 402: MiApp_TransceiverPowerState(0x00);
  2858  016E9A  0E00               	movlw	0
  2859  016E9C  ECB1  F0B6         	call	_MiApp_TransceiverPowerState
  2860                           
  2861                           ;main.c: 404: while (!timer_flag)
  2862  016EA0  D002               	goto	l14397
  2863  016EA2                     l1135:
  2864                           
  2865                           ; BSR set to: 1
  2866                           ;main.c: 405: {
  2867                           ;main.c: 406: OSCCONbits.IDLEN = 0;
  2868  016EA2  9ED3               	bcf	4051,7,c	;volatile
  2869  016EA4  0003               	sleep		;# 
  2870  016EA6                     l14397:
  2871  016EA6  0101               	movlb	1	; () banked
  2872  016EA8  514D               	movf	_timer_flag& (0+255),w,b	;volatile
  2873  016EAA  B4D8               	btfsc	status,2,c
  2874  016EAC  D7FA               	goto	l1135
  2875                           
  2876                           ; BSR set to: 1
  2877                           ;main.c: 408: }
  2878                           ;main.c: 413: MiApp_TransceiverPowerState(0x01);
  2879                           
  2880                           ; BSR set to: 1
  2881  016EAE  0E01               	movlw	1
  2882  016EB0  ECB1  F0B6         	call	_MiApp_TransceiverPowerState
  2883  016EB4  00FF               	reset		;# 
  2884  016EB6  0012               	return		;funcret
  2885  016EB8                     __end_of_sleep_and_reset:
  2886                           	opt stack 0
  2887                           tblptru	equ	0xFF8
  2888                           tblptrh	equ	0xFF7
  2889                           tblptrl	equ	0xFF6
  2890                           tablat	equ	0xFF5
  2891                           prodh	equ	0xFF4
  2892                           prodl	equ	0xFF3
  2893                           postinc0	equ	0xFEE
  2894                           wreg	equ	0xFE8
  2895                           postdec1	equ	0xFE5
  2896                           fsr1h	equ	0xFE2
  2897                           fsr1l	equ	0xFE1
  2898                           indf2	equ	0xFDF
  2899                           postinc2	equ	0xFDE
  2900                           fsr2h	equ	0xFDA
  2901                           fsr2l	equ	0xFD9
  2902                           status	equ	0xFD8
  2903                           
  2904 ;; *************** function _send_periodical_update *****************
  2905 ;; Defined at:
  2906 ;;		line 598 in file "src/main.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  tmp2            3   28[BANK3 ] float 
  2911 ;;  tmp             2    0        unsigned int 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      unsigned char 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2922 ;;      Locals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  2923 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Totals:         0       0       1       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;Total ram usage:       16 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:   18
  2928 ;; This function calls:
  2929 ;;		___ftadd
  2930 ;;		___ftdiv
  2931 ;;		___ftmul
  2932 ;;		___ftneg
  2933 ;;		___fttol
  2934 ;;		___lltoft
  2935 ;;		___lmul
  2936 ;;		_do_UPDATE
  2937 ;;		_encode_ufixed16_variable
  2938 ;;		_encode_uint8_variable
  2939 ;;		_floor
  2940 ;;		_memcpy
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text2
  2947  011420                     __ptext2:
  2948                           	opt stack 0
  2949  011420                     _send_periodical_update:
  2950                           	opt stack 12
  2951                           
  2952                           ;main.c: 600: uint16_t tmp;
  2953                           ;main.c: 602: p_buffer = m_buffer;
  2954                           
  2955                           ;incstack = 0
  2956  011420  0EE0               	movlw	low _m_buffer
  2957  011422  0101               	movlb	1	; () banked
  2958  011424  6F3A               	movwf	_p_buffer& (0+255),b
  2959  011426  0E02               	movlw	high _m_buffer
  2960  011428  0101               	movlb	1	; () banked
  2961  01142A  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  2962                           
  2963                           ; BSR set to: 1
  2964                           ;main.c: 605: memcpy(m_var.label, BATTERY_VOLTAGE_LABEL, 3);
  2965  01142C  0E79               	movlw	low _m_var
  2966  01142E  0101               	movlb	1	; () banked
  2967  011430  6F8A               	movwf	memcpy@d1& (0+255),b
  2968  011432  0E01               	movlw	high _m_var
  2969  011434  0101               	movlb	1	; () banked
  2970  011436  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  2971  011438  0EDF               	movlw	low _BATTERY_VOLTAGE_LABEL
  2972  01143A  0101               	movlb	1	; () banked
  2973  01143C  6F8C               	movwf	memcpy@s1& (0+255),b
  2974  01143E  0EFF               	movlw	high _BATTERY_VOLTAGE_LABEL
  2975  011440  0101               	movlb	1	; () banked
  2976  011442  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  2977  011444  0E00               	movlw	0
  2978  011446  0101               	movlb	1	; () banked
  2979  011448  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  2980  01144A  0E03               	movlw	3
  2981  01144C  6F8E               	movwf	memcpy@n& (0+255),b
  2982  01144E  EC30  F0B5         	call	_memcpy	;wreg free
  2983                           
  2984                           ;main.c: 606: m_var.unit = 2;
  2985  011452  0E02               	movlw	2
  2986  011454  0101               	movlb	1	; () banked
  2987  011456  6F7F               	movwf	(_m_var+6)& (0+255),b
  2988                           
  2989                           ; BSR set to: 1
  2990                           ;main.c: 607: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  2991  011458  C12D  F1C7         	movff	_m_battery_voltage,floor@x
  2992  01145C  C12E  F1C8         	movff	_m_battery_voltage+1,floor@x+1
  2993  011460  C12F  F1C9         	movff	_m_battery_voltage+2,floor@x+2
  2994  011464  EC08  F0AC         	call	_floor	;wreg free
  2995  011468  C1C7  F3F3         	movff	?_floor,_send_periodical_update$5145
  2996  01146C  C1C8  F3F4         	movff	?_floor+1,_send_periodical_update$5145+1
  2997  011470  C1C9  F3F5         	movff	?_floor+2,_send_periodical_update$5145+2
  2998                           
  2999                           ;main.c: 607: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  3000  011474  C3F3  F1AE         	movff	_send_periodical_update$5145,___fttol@f1
  3001  011478  C3F4  F1AF         	movff	_send_periodical_update$5145+1,___fttol@f1+1
  3002  01147C  C3F5  F1B0         	movff	_send_periodical_update$5145+2,___fttol@f1+2
  3003  011480  ECAA  F0A5         	call	___fttol	;wreg free
  3004  011484  0101               	movlb	1	; () banked
  3005  011486  51AE               	movf	?___fttol& (0+255),w,b
  3006  011488  0101               	movlb	1	; () banked
  3007  01148A  6F7D               	movwf	(_m_var+4)& (0+255),b
  3008                           
  3009                           ; BSR set to: 1
  3010                           ;main.c: 608: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3011  01148C  C12D  F1C7         	movff	_m_battery_voltage,floor@x
  3012  011490  C12E  F1C8         	movff	_m_battery_voltage+1,floor@x+1
  3013  011494  C12F  F1C9         	movff	_m_battery_voltage+2,floor@x+2
  3014  011498  EC08  F0AC         	call	_floor	;wreg free
  3015  01149C  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  3016  0114A0  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  3017  0114A4  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  3018  0114A8  EC07  F0B7         	call	___ftneg	;wreg free
  3019  0114AC  C1CF  F3F6         	movff	?___ftneg,_send_periodical_update$5146
  3020  0114B0  C1D0  F3F7         	movff	?___ftneg+1,_send_periodical_update$5146+1
  3021  0114B4  C1D1  F3F8         	movff	?___ftneg+2,_send_periodical_update$5146+2
  3022                           
  3023                           ;main.c: 608: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3024  0114B8  0E00               	movlw	0
  3025  0114BA  0101               	movlb	1	; () banked
  3026  0114BC  6FD5               	movwf	___ftmul@f2& (0+255),b
  3027  0114BE  0EC8               	movlw	200
  3028  0114C0  0101               	movlb	1	; () banked
  3029  0114C2  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  3030  0114C4  0E42               	movlw	66
  3031  0114C6  0101               	movlb	1	; () banked
  3032  0114C8  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  3033  0114CA  C12D  F195         	movff	_m_battery_voltage,___ftadd@f2
  3034  0114CE  C12E  F196         	movff	_m_battery_voltage+1,___ftadd@f2+1
  3035  0114D2  C12F  F197         	movff	_m_battery_voltage+2,___ftadd@f2+2
  3036  0114D6  C3F6  F192         	movff	_send_periodical_update$5146,___ftadd@f1
  3037  0114DA  C3F7  F193         	movff	_send_periodical_update$5146+1,___ftadd@f1+1
  3038  0114DE  C3F8  F194         	movff	_send_periodical_update$5146+2,___ftadd@f1+2
  3039  0114E2  EC9B  F099         	call	___ftadd	;wreg free
  3040  0114E6  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  3041  0114EA  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  3042  0114EE  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  3043  0114F2  ECAA  F0A3         	call	___ftmul	;wreg free
  3044  0114F6  C1D2  F3F9         	movff	?___ftmul,_send_periodical_update$5147
  3045  0114FA  C1D3  F3FA         	movff	?___ftmul+1,_send_periodical_update$5147+1
  3046  0114FE  C1D4  F3FB         	movff	?___ftmul+2,_send_periodical_update$5147+2
  3047                           
  3048                           ;main.c: 608: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3049  011502  C3F9  F1C7         	movff	_send_periodical_update$5147,floor@x
  3050  011506  C3FA  F1C8         	movff	_send_periodical_update$5147+1,floor@x+1
  3051  01150A  C3FB  F1C9         	movff	_send_periodical_update$5147+2,floor@x+2
  3052  01150E  EC08  F0AC         	call	_floor	;wreg free
  3053  011512  C1C7  F3FC         	movff	?_floor,_send_periodical_update$5148
  3054  011516  C1C8  F3FD         	movff	?_floor+1,_send_periodical_update$5148+1
  3055  01151A  C1C9  F3FE         	movff	?_floor+2,_send_periodical_update$5148+2
  3056                           
  3057                           ;main.c: 608: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3058  01151E  C3FC  F1AE         	movff	_send_periodical_update$5148,___fttol@f1
  3059  011522  C3FD  F1AF         	movff	_send_periodical_update$5148+1,___fttol@f1+1
  3060  011526  C3FE  F1B0         	movff	_send_periodical_update$5148+2,___fttol@f1+2
  3061  01152A  ECAA  F0A5         	call	___fttol	;wreg free
  3062  01152E  0101               	movlb	1	; () banked
  3063  011530  51AE               	movf	?___fttol& (0+255),w,b
  3064  011532  0101               	movlb	1	; () banked
  3065  011534  6F7E               	movwf	(_m_var+5)& (0+255),b
  3066                           
  3067                           ; BSR set to: 1
  3068                           ;main.c: 609: m_var.writable = 0;
  3069  011536  0E00               	movlw	0
  3070  011538  0101               	movlb	1	; () banked
  3071  01153A  6F80               	movwf	(_m_var+7)& (0+255),b
  3072                           
  3073                           ; BSR set to: 1
  3074                           ;main.c: 610: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3075  01153C  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3076  011540  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3077  011544  EE21  F079         	lfsr	2,_m_var
  3078  011548  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  3079  01154C  0E09               	movlw	9
  3080  01154E                     u17701:
  3081  01154E  CFDB FFEB          	movff	plusw2,plusw0
  3082  011552  06E8               	decf	wreg,f,c
  3083  011554  E2FC               	bc	u17701
  3084  011556  EC63  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3085  01155A  0101               	movlb	1	; () banked
  3086  01155C  6FFB               	movwf	??_send_periodical_update& (0+255),b
  3087  01155E  0101               	movlb	1	; () banked
  3088  011560  51FB               	movf	??_send_periodical_update& (0+255),w,b
  3089  011562  0D01               	mullw	1
  3090  011564  50F3               	movf	prodl,w,c
  3091  011566  0101               	movlb	1	; () banked
  3092  011568  273A               	addwf	_p_buffer& (0+255),f,b
  3093  01156A  50F4               	movf	prodh,w,c
  3094  01156C  0101               	movlb	1	; () banked
  3095  01156E  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3096                           
  3097                           ; BSR set to: 1
  3098                           ;main.c: 612: memcpy(m_var.label, LIGHT_LEVEL_LABEL, 3);
  3099  011570  0E79               	movlw	low _m_var
  3100  011572  0101               	movlb	1	; () banked
  3101  011574  6F8A               	movwf	memcpy@d1& (0+255),b
  3102  011576  0E01               	movlw	high _m_var
  3103  011578  0101               	movlb	1	; () banked
  3104  01157A  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3105  01157C  0EE7               	movlw	low _LIGHT_LEVEL_LABEL
  3106  01157E  0101               	movlb	1	; () banked
  3107  011580  6F8C               	movwf	memcpy@s1& (0+255),b
  3108  011582  0EFF               	movlw	high _LIGHT_LEVEL_LABEL
  3109  011584  0101               	movlb	1	; () banked
  3110  011586  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3111  011588  0E00               	movlw	0
  3112  01158A  0101               	movlb	1	; () banked
  3113  01158C  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3114  01158E  0E03               	movlw	3
  3115  011590  6F8E               	movwf	memcpy@n& (0+255),b
  3116  011592  EC30  F0B5         	call	_memcpy	;wreg free
  3117                           
  3118                           ;main.c: 613: m_var.unit = 3;
  3119  011596  0E03               	movlw	3
  3120  011598  0101               	movlb	1	; () banked
  3121  01159A  6F7F               	movwf	(_m_var+6)& (0+255),b
  3122                           
  3123                           ; BSR set to: 1
  3124                           ;main.c: 614: m_var.value_byte1 = m_light_level;
  3125  01159C  C149  F17D         	movff	_m_light_level,_m_var+4
  3126                           
  3127                           ; BSR set to: 1
  3128                           ;main.c: 615: m_var.writable = 0;
  3129  0115A0  0E00               	movlw	0
  3130  0115A2  0101               	movlb	1	; () banked
  3131  0115A4  6F80               	movwf	(_m_var+7)& (0+255),b
  3132                           
  3133                           ; BSR set to: 1
  3134                           ;main.c: 616: p_buffer += encode_uint8_variable(p_buffer, m_var);
  3135  0115A6  C13A  F18A         	movff	_p_buffer,encode_uint8_variable@buffer
  3136  0115AA  C13B  F18B         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  3137  0115AE  EE21  F079         	lfsr	2,_m_var
  3138  0115B2  EE01  F08C         	lfsr	0,encode_uint8_variable@var
  3139  0115B6  0E09               	movlw	9
  3140  0115B8                     u17711:
  3141  0115B8  CFDB FFEB          	movff	plusw2,plusw0
  3142  0115BC  06E8               	decf	wreg,f,c
  3143  0115BE  E2FC               	bc	u17711
  3144  0115C0  EC25  F0B1         	call	_encode_uint8_variable	;wreg free
  3145  0115C4  0101               	movlb	1	; () banked
  3146  0115C6  6FFB               	movwf	??_send_periodical_update& (0+255),b
  3147  0115C8  0101               	movlb	1	; () banked
  3148  0115CA  51FB               	movf	??_send_periodical_update& (0+255),w,b
  3149  0115CC  0D01               	mullw	1
  3150  0115CE  50F3               	movf	prodl,w,c
  3151  0115D0  0101               	movlb	1	; () banked
  3152  0115D2  273A               	addwf	_p_buffer& (0+255),f,b
  3153  0115D4  50F4               	movf	prodh,w,c
  3154  0115D6  0101               	movlb	1	; () banked
  3155  0115D8  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3156                           
  3157                           ; BSR set to: 1
  3158                           ;main.c: 618: memcpy(m_var.label, TEMPERATURE_LABEL, 3);
  3159  0115DA  0E79               	movlw	low _m_var
  3160  0115DC  0101               	movlb	1	; () banked
  3161  0115DE  6F8A               	movwf	memcpy@d1& (0+255),b
  3162  0115E0  0E01               	movlw	high _m_var
  3163  0115E2  0101               	movlb	1	; () banked
  3164  0115E4  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3165  0115E6  0EEF               	movlw	low _TEMPERATURE_LABEL
  3166  0115E8  0101               	movlb	1	; () banked
  3167  0115EA  6F8C               	movwf	memcpy@s1& (0+255),b
  3168  0115EC  0EFF               	movlw	high _TEMPERATURE_LABEL
  3169  0115EE  0101               	movlb	1	; () banked
  3170  0115F0  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3171  0115F2  0E00               	movlw	0
  3172  0115F4  0101               	movlb	1	; () banked
  3173  0115F6  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3174  0115F8  0E03               	movlw	3
  3175  0115FA  6F8E               	movwf	memcpy@n& (0+255),b
  3176  0115FC  EC30  F0B5         	call	_memcpy	;wreg free
  3177                           
  3178                           ;main.c: 619: m_var.unit = 1;
  3179  011600  0E01               	movlw	1
  3180  011602  0101               	movlb	1	; () banked
  3181  011604  6F7F               	movwf	(_m_var+6)& (0+255),b
  3182                           
  3183                           ; BSR set to: 1
  3184                           ;main.c: 620: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3185  011606  C130  F1C7         	movff	_m_temperature,floor@x
  3186  01160A  C131  F1C8         	movff	_m_temperature+1,floor@x+1
  3187  01160E  C132  F1C9         	movff	_m_temperature+2,floor@x+2
  3188  011612  EC08  F0AC         	call	_floor	;wreg free
  3189  011616  C1C7  F3F3         	movff	?_floor,_send_periodical_update$5145
  3190  01161A  C1C8  F3F4         	movff	?_floor+1,_send_periodical_update$5145+1
  3191  01161E  C1C9  F3F5         	movff	?_floor+2,_send_periodical_update$5145+2
  3192                           
  3193                           ;main.c: 620: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3194  011622  C3F3  F1AE         	movff	_send_periodical_update$5145,___fttol@f1
  3195  011626  C3F4  F1AF         	movff	_send_periodical_update$5145+1,___fttol@f1+1
  3196  01162A  C3F5  F1B0         	movff	_send_periodical_update$5145+2,___fttol@f1+2
  3197  01162E  ECAA  F0A5         	call	___fttol	;wreg free
  3198  011632  0101               	movlb	1	; () banked
  3199  011634  51AE               	movf	?___fttol& (0+255),w,b
  3200  011636  0101               	movlb	1	; () banked
  3201  011638  6F7D               	movwf	(_m_var+4)& (0+255),b
  3202                           
  3203                           ; BSR set to: 1
  3204                           ;main.c: 621: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3205  01163A  C130  F1C7         	movff	_m_temperature,floor@x
  3206  01163E  C131  F1C8         	movff	_m_temperature+1,floor@x+1
  3207  011642  C132  F1C9         	movff	_m_temperature+2,floor@x+2
  3208  011646  EC08  F0AC         	call	_floor	;wreg free
  3209  01164A  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  3210  01164E  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  3211  011652  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  3212  011656  EC07  F0B7         	call	___ftneg	;wreg free
  3213  01165A  C1CF  F3F6         	movff	?___ftneg,_send_periodical_update$5146
  3214  01165E  C1D0  F3F7         	movff	?___ftneg+1,_send_periodical_update$5146+1
  3215  011662  C1D1  F3F8         	movff	?___ftneg+2,_send_periodical_update$5146+2
  3216                           
  3217                           ;main.c: 621: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3218  011666  0E00               	movlw	0
  3219  011668  0101               	movlb	1	; () banked
  3220  01166A  6FD5               	movwf	___ftmul@f2& (0+255),b
  3221  01166C  0EC8               	movlw	200
  3222  01166E  0101               	movlb	1	; () banked
  3223  011670  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  3224  011672  0E42               	movlw	66
  3225  011674  0101               	movlb	1	; () banked
  3226  011676  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  3227  011678  C130  F195         	movff	_m_temperature,___ftadd@f2
  3228  01167C  C131  F196         	movff	_m_temperature+1,___ftadd@f2+1
  3229  011680  C132  F197         	movff	_m_temperature+2,___ftadd@f2+2
  3230  011684  C3F6  F192         	movff	_send_periodical_update$5146,___ftadd@f1
  3231  011688  C3F7  F193         	movff	_send_periodical_update$5146+1,___ftadd@f1+1
  3232  01168C  C3F8  F194         	movff	_send_periodical_update$5146+2,___ftadd@f1+2
  3233  011690  EC9B  F099         	call	___ftadd	;wreg free
  3234  011694  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  3235  011698  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  3236  01169C  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  3237  0116A0  ECAA  F0A3         	call	___ftmul	;wreg free
  3238  0116A4  C1D2  F3F9         	movff	?___ftmul,_send_periodical_update$5147
  3239  0116A8  C1D3  F3FA         	movff	?___ftmul+1,_send_periodical_update$5147+1
  3240  0116AC  C1D4  F3FB         	movff	?___ftmul+2,_send_periodical_update$5147+2
  3241                           
  3242                           ;main.c: 621: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3243  0116B0  C3F9  F1C7         	movff	_send_periodical_update$5147,floor@x
  3244  0116B4  C3FA  F1C8         	movff	_send_periodical_update$5147+1,floor@x+1
  3245  0116B8  C3FB  F1C9         	movff	_send_periodical_update$5147+2,floor@x+2
  3246  0116BC  EC08  F0AC         	call	_floor	;wreg free
  3247  0116C0  C1C7  F3FC         	movff	?_floor,_send_periodical_update$5148
  3248  0116C4  C1C8  F3FD         	movff	?_floor+1,_send_periodical_update$5148+1
  3249  0116C8  C1C9  F3FE         	movff	?_floor+2,_send_periodical_update$5148+2
  3250                           
  3251                           ;main.c: 621: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3252  0116CC  C3FC  F1AE         	movff	_send_periodical_update$5148,___fttol@f1
  3253  0116D0  C3FD  F1AF         	movff	_send_periodical_update$5148+1,___fttol@f1+1
  3254  0116D4  C3FE  F1B0         	movff	_send_periodical_update$5148+2,___fttol@f1+2
  3255  0116D8  ECAA  F0A5         	call	___fttol	;wreg free
  3256  0116DC  0101               	movlb	1	; () banked
  3257  0116DE  51AE               	movf	?___fttol& (0+255),w,b
  3258  0116E0  0101               	movlb	1	; () banked
  3259  0116E2  6F7E               	movwf	(_m_var+5)& (0+255),b
  3260                           
  3261                           ; BSR set to: 1
  3262                           ;main.c: 622: m_var._signed = 1;
  3263  0116E4  0E01               	movlw	1
  3264  0116E6  0101               	movlb	1	; () banked
  3265  0116E8  6F81               	movwf	(_m_var+8)& (0+255),b
  3266                           
  3267                           ; BSR set to: 1
  3268                           ;main.c: 623: m_var.writable = 0;
  3269  0116EA  0E00               	movlw	0
  3270  0116EC  0101               	movlb	1	; () banked
  3271  0116EE  6F80               	movwf	(_m_var+7)& (0+255),b
  3272                           
  3273                           ; BSR set to: 1
  3274                           ;main.c: 624: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3275  0116F0  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3276  0116F4  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3277  0116F8  EE21  F079         	lfsr	2,_m_var
  3278  0116FC  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  3279  011700  0E09               	movlw	9
  3280  011702                     u17721:
  3281  011702  CFDB FFEB          	movff	plusw2,plusw0
  3282  011706  06E8               	decf	wreg,f,c
  3283  011708  E2FC               	bc	u17721
  3284  01170A  EC63  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3285  01170E  0101               	movlb	1	; () banked
  3286  011710  6FFB               	movwf	??_send_periodical_update& (0+255),b
  3287  011712  0101               	movlb	1	; () banked
  3288  011714  51FB               	movf	??_send_periodical_update& (0+255),w,b
  3289  011716  0D01               	mullw	1
  3290  011718  50F3               	movf	prodl,w,c
  3291  01171A  0101               	movlb	1	; () banked
  3292  01171C  273A               	addwf	_p_buffer& (0+255),f,b
  3293  01171E  50F4               	movf	prodh,w,c
  3294  011720  0101               	movlb	1	; () banked
  3295  011722  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3296                           
  3297                           ; BSR set to: 1
  3298                           ;main.c: 626: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  3299  011724  0EE0               	movlw	low _m_buffer
  3300  011726  0103               	movlb	3	; () banked
  3301  011728  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  3302  01172A  0E02               	movlw	high _m_buffer
  3303  01172C  0103               	movlb	3	; () banked
  3304  01172E  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  3305  011730  0EE0               	movlw	_m_buffer& (0+255)
  3306  011732  0800               	sublw	0
  3307  011734  0101               	movlb	1	; () banked
  3308  011736  253A               	addwf	_p_buffer& (0+255),w,b
  3309  011738  0103               	movlb	3	; () banked
  3310  01173A  6FE9               	movwf	do_UPDATE@size& (0+255),b
  3311  01173C  0E00               	movlw	0
  3312  01173E  0103               	movlb	3	; () banked
  3313  011740  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  3314  011742  EC35  F0A2         	call	_do_UPDATE	;wreg free
  3315  011746  0900               	iorlw	0
  3316  011748  A4D8               	btfss	status,2,c
  3317  01174A  D002               	goto	l14839
  3318                           
  3319                           ;main.c: 627: return 0;
  3320  01174C  0E00               	movlw	0
  3321  01174E  0012               	return	
  3322  011750                     l14839:
  3323                           
  3324                           ;main.c: 630: p_buffer = m_buffer;
  3325  011750  0EE0               	movlw	low _m_buffer
  3326  011752  0101               	movlb	1	; () banked
  3327  011754  6F3A               	movwf	_p_buffer& (0+255),b
  3328  011756  0E02               	movlw	high _m_buffer
  3329  011758  0101               	movlb	1	; () banked
  3330  01175A  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  3331                           
  3332                           ; BSR set to: 1
  3333                           ;main.c: 632: memcpy(m_var.label, UPTIME_LABEL, 3);
  3334  01175C  0E79               	movlw	low _m_var
  3335  01175E  0101               	movlb	1	; () banked
  3336  011760  6F8A               	movwf	memcpy@d1& (0+255),b
  3337  011762  0E01               	movlw	high _m_var
  3338  011764  0101               	movlb	1	; () banked
  3339  011766  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3340  011768  0EFB               	movlw	low _UPTIME_LABEL
  3341  01176A  0101               	movlb	1	; () banked
  3342  01176C  6F8C               	movwf	memcpy@s1& (0+255),b
  3343  01176E  0EFF               	movlw	high _UPTIME_LABEL
  3344  011770  0101               	movlb	1	; () banked
  3345  011772  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3346  011774  0E00               	movlw	0
  3347  011776  0101               	movlb	1	; () banked
  3348  011778  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3349  01177A  0E03               	movlw	3
  3350  01177C  6F8E               	movwf	memcpy@n& (0+255),b
  3351  01177E  EC30  F0B5         	call	_memcpy	;wreg free
  3352                           
  3353                           ;main.c: 633: m_var.unit = 7;
  3354  011782  0E07               	movlw	7
  3355  011784  0101               	movlb	1	; () banked
  3356  011786  6F7F               	movwf	(_m_var+6)& (0+255),b
  3357                           
  3358                           ; BSR set to: 1
  3359                           ;main.c: 634: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  3360  011788  C133  F1C7         	movff	_m_uptime_days,floor@x	;volatile
  3361  01178C  C134  F1C8         	movff	_m_uptime_days+1,floor@x+1	;volatile
  3362  011790  C135  F1C9         	movff	_m_uptime_days+2,floor@x+2	;volatile
  3363  011794  EC08  F0AC         	call	_floor	;wreg free
  3364  011798  C1C7  F3F3         	movff	?_floor,_send_periodical_update$5145
  3365  01179C  C1C8  F3F4         	movff	?_floor+1,_send_periodical_update$5145+1
  3366  0117A0  C1C9  F3F5         	movff	?_floor+2,_send_periodical_update$5145+2
  3367                           
  3368                           ;main.c: 634: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  3369  0117A4  C3F3  F1AE         	movff	_send_periodical_update$5145,___fttol@f1
  3370  0117A8  C3F4  F1AF         	movff	_send_periodical_update$5145+1,___fttol@f1+1
  3371  0117AC  C3F5  F1B0         	movff	_send_periodical_update$5145+2,___fttol@f1+2
  3372  0117B0  ECAA  F0A5         	call	___fttol	;wreg free
  3373  0117B4  0101               	movlb	1	; () banked
  3374  0117B6  51AE               	movf	?___fttol& (0+255),w,b
  3375  0117B8  0101               	movlb	1	; () banked
  3376  0117BA  6F7D               	movwf	(_m_var+4)& (0+255),b
  3377                           
  3378                           ; BSR set to: 1
  3379                           ;main.c: 635: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  3380  0117BC  C133  F1C7         	movff	_m_uptime_days,floor@x	;volatile
  3381  0117C0  C134  F1C8         	movff	_m_uptime_days+1,floor@x+1	;volatile
  3382  0117C4  C135  F1C9         	movff	_m_uptime_days+2,floor@x+2	;volatile
  3383  0117C8  EC08  F0AC         	call	_floor	;wreg free
  3384  0117CC  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  3385  0117D0  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  3386  0117D4  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  3387  0117D8  EC07  F0B7         	call	___ftneg	;wreg free
  3388  0117DC  C1CF  F3F6         	movff	?___ftneg,_send_periodical_update$5146
  3389  0117E0  C1D0  F3F7         	movff	?___ftneg+1,_send_periodical_update$5146+1
  3390  0117E4  C1D1  F3F8         	movff	?___ftneg+2,_send_periodical_update$5146+2
  3391                           
  3392                           ;main.c: 635: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  3393  0117E8  0E00               	movlw	0
  3394  0117EA  0101               	movlb	1	; () banked
  3395  0117EC  6FD5               	movwf	___ftmul@f2& (0+255),b
  3396  0117EE  0EC8               	movlw	200
  3397  0117F0  0101               	movlb	1	; () banked
  3398  0117F2  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  3399  0117F4  0E42               	movlw	66
  3400  0117F6  0101               	movlb	1	; () banked
  3401  0117F8  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  3402  0117FA  C133  F195         	movff	_m_uptime_days,___ftadd@f2	;volatile
  3403  0117FE  C134  F196         	movff	_m_uptime_days+1,___ftadd@f2+1	;volatile
  3404  011802  C135  F197         	movff	_m_uptime_days+2,___ftadd@f2+2	;volatile
  3405  011806  C3F6  F192         	movff	_send_periodical_update$5146,___ftadd@f1
  3406  01180A  C3F7  F193         	movff	_send_periodical_update$5146+1,___ftadd@f1+1
  3407  01180E  C3F8  F194         	movff	_send_periodical_update$5146+2,___ftadd@f1+2
  3408  011812  EC9B  F099         	call	___ftadd	;wreg free
  3409  011816  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  3410  01181A  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  3411  01181E  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  3412  011822  ECAA  F0A3         	call	___ftmul	;wreg free
  3413  011826  C1D2  F3F9         	movff	?___ftmul,_send_periodical_update$5147
  3414  01182A  C1D3  F3FA         	movff	?___ftmul+1,_send_periodical_update$5147+1
  3415  01182E  C1D4  F3FB         	movff	?___ftmul+2,_send_periodical_update$5147+2
  3416                           
  3417                           ;main.c: 635: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  3418  011832  C3F9  F1C7         	movff	_send_periodical_update$5147,floor@x
  3419  011836  C3FA  F1C8         	movff	_send_periodical_update$5147+1,floor@x+1
  3420  01183A  C3FB  F1C9         	movff	_send_periodical_update$5147+2,floor@x+2
  3421  01183E  EC08  F0AC         	call	_floor	;wreg free
  3422  011842  C1C7  F3FC         	movff	?_floor,_send_periodical_update$5148
  3423  011846  C1C8  F3FD         	movff	?_floor+1,_send_periodical_update$5148+1
  3424  01184A  C1C9  F3FE         	movff	?_floor+2,_send_periodical_update$5148+2
  3425                           
  3426                           ;main.c: 635: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  3427  01184E  C3FC  F1AE         	movff	_send_periodical_update$5148,___fttol@f1
  3428  011852  C3FD  F1AF         	movff	_send_periodical_update$5148+1,___fttol@f1+1
  3429  011856  C3FE  F1B0         	movff	_send_periodical_update$5148+2,___fttol@f1+2
  3430  01185A  ECAA  F0A5         	call	___fttol	;wreg free
  3431  01185E  0101               	movlb	1	; () banked
  3432  011860  51AE               	movf	?___fttol& (0+255),w,b
  3433  011862  0101               	movlb	1	; () banked
  3434  011864  6F7E               	movwf	(_m_var+5)& (0+255),b
  3435                           
  3436                           ; BSR set to: 1
  3437                           ;main.c: 636: m_var.writable = 0;
  3438  011866  0E00               	movlw	0
  3439  011868  0101               	movlb	1	; () banked
  3440  01186A  6F80               	movwf	(_m_var+7)& (0+255),b
  3441                           
  3442                           ; BSR set to: 1
  3443                           ;main.c: 637: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3444  01186C  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3445  011870  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3446  011874  EE21  F079         	lfsr	2,_m_var
  3447  011878  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  3448  01187C  0E09               	movlw	9
  3449  01187E                     u17741:
  3450  01187E  CFDB FFEB          	movff	plusw2,plusw0
  3451  011882  06E8               	decf	wreg,f,c
  3452  011884  E2FC               	bc	u17741
  3453  011886  EC63  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3454  01188A  0101               	movlb	1	; () banked
  3455  01188C  6FFB               	movwf	??_send_periodical_update& (0+255),b
  3456  01188E  0101               	movlb	1	; () banked
  3457  011890  51FB               	movf	??_send_periodical_update& (0+255),w,b
  3458  011892  0D01               	mullw	1
  3459  011894  50F3               	movf	prodl,w,c
  3460  011896  0101               	movlb	1	; () banked
  3461  011898  273A               	addwf	_p_buffer& (0+255),f,b
  3462  01189A  50F4               	movf	prodh,w,c
  3463  01189C  0101               	movlb	1	; () banked
  3464  01189E  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3465                           
  3466                           ; BSR set to: 1
  3467                           ;main.c: 639: memcpy(m_var.label, FAILEDMSG_LABEL, 3);
  3468  0118A0  0E79               	movlw	low _m_var
  3469  0118A2  0101               	movlb	1	; () banked
  3470  0118A4  6F8A               	movwf	memcpy@d1& (0+255),b
  3471  0118A6  0E01               	movlw	high _m_var
  3472  0118A8  0101               	movlb	1	; () banked
  3473  0118AA  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3474  0118AC  0EE3               	movlw	low _FAILEDMSG_LABEL
  3475  0118AE  0101               	movlb	1	; () banked
  3476  0118B0  6F8C               	movwf	memcpy@s1& (0+255),b
  3477  0118B2  0EFF               	movlw	high _FAILEDMSG_LABEL
  3478  0118B4  0101               	movlb	1	; () banked
  3479  0118B6  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3480  0118B8  0E00               	movlw	0
  3481  0118BA  0101               	movlb	1	; () banked
  3482  0118BC  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3483  0118BE  0E03               	movlw	3
  3484  0118C0  6F8E               	movwf	memcpy@n& (0+255),b
  3485  0118C2  EC30  F0B5         	call	_memcpy	;wreg free
  3486                           
  3487                           ;main.c: 640: m_var.unit = 3;
  3488  0118C6  0E03               	movlw	3
  3489  0118C8  0101               	movlb	1	; () banked
  3490  0118CA  6F7F               	movwf	(_m_var+6)& (0+255),b
  3491                           
  3492                           ; BSR set to: 1
  3493                           ;main.c: 641: float tmp2 = (float)(m_failed_messages*100)/(float)(m_failed_messages + m_
      +                          sent_messages);
  3494  0118CC  C11E  F18A         	movff	_m_failed_messages,___lmul@multiplier
  3495  0118D0  C11F  F18B         	movff	_m_failed_messages+1,___lmul@multiplier+1
  3496  0118D4  C120  F18C         	movff	_m_failed_messages+2,___lmul@multiplier+2
  3497  0118D8  C121  F18D         	movff	_m_failed_messages+3,___lmul@multiplier+3
  3498  0118DC  0E64               	movlw	100
  3499  0118DE  0101               	movlb	1	; () banked
  3500  0118E0  6F8E               	movwf	___lmul@multiplicand& (0+255),b
  3501  0118E2  0E00               	movlw	0
  3502  0118E4  6F8F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3503  0118E6  0E00               	movlw	0
  3504  0118E8  6F90               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3505  0118EA  0E00               	movlw	0
  3506  0118EC  6F91               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3507  0118EE  ECE3  F0B3         	call	___lmul	;wreg free
  3508  0118F2  C18A  F196         	movff	?___lmul,___lltoft@c
  3509  0118F6  C18B  F197         	movff	?___lmul+1,___lltoft@c+1
  3510  0118FA  C18C  F198         	movff	?___lmul+2,___lltoft@c+2
  3511  0118FE  C18D  F199         	movff	?___lmul+3,___lltoft@c+3
  3512  011902  EC2C  F0B3         	call	___lltoft	;wreg free
  3513  011906  C196  F19F         	movff	?___lltoft,___ftdiv@f1
  3514  01190A  C197  F1A0         	movff	?___lltoft+1,___ftdiv@f1+1
  3515  01190E  C198  F1A1         	movff	?___lltoft+2,___ftdiv@f1+2
  3516  011912  0101               	movlb	1	; () banked
  3517  011914  5122               	movf	_m_sent_messages& (0+255),w,b
  3518  011916  0101               	movlb	1	; () banked
  3519  011918  251E               	addwf	_m_failed_messages& (0+255),w,b
  3520  01191A  0101               	movlb	1	; () banked
  3521  01191C  6F96               	movwf	___lltoft@c& (0+255),b
  3522  01191E  0101               	movlb	1	; () banked
  3523  011920  5123               	movf	(_m_sent_messages+1)& (0+255),w,b
  3524  011922  0101               	movlb	1	; () banked
  3525  011924  211F               	addwfc	(_m_failed_messages+1)& (0+255),w,b
  3526  011926  0101               	movlb	1	; () banked
  3527  011928  6F97               	movwf	(___lltoft@c+1)& (0+255),b
  3528  01192A  0101               	movlb	1	; () banked
  3529  01192C  5124               	movf	(_m_sent_messages+2)& (0+255),w,b
  3530  01192E  0101               	movlb	1	; () banked
  3531  011930  2120               	addwfc	(_m_failed_messages+2)& (0+255),w,b
  3532  011932  0101               	movlb	1	; () banked
  3533  011934  6F98               	movwf	(___lltoft@c+2)& (0+255),b
  3534  011936  0101               	movlb	1	; () banked
  3535  011938  5125               	movf	(_m_sent_messages+3)& (0+255),w,b
  3536  01193A  0101               	movlb	1	; () banked
  3537  01193C  2121               	addwfc	(_m_failed_messages+3)& (0+255),w,b
  3538  01193E  0101               	movlb	1	; () banked
  3539  011940  6F99               	movwf	(___lltoft@c+3)& (0+255),b
  3540  011942  EC2C  F0B3         	call	___lltoft	;wreg free
  3541  011946  C196  F1A2         	movff	?___lltoft,___ftdiv@f2
  3542  01194A  C197  F1A3         	movff	?___lltoft+1,___ftdiv@f2+1
  3543  01194E  C198  F1A4         	movff	?___lltoft+2,___ftdiv@f2+2
  3544  011952  EC04  F0A5         	call	___ftdiv	;wreg free
  3545  011956  C19F  F3F0         	movff	?___ftdiv,send_periodical_update@tmp2
  3546  01195A  C1A0  F3F1         	movff	?___ftdiv+1,send_periodical_update@tmp2+1
  3547  01195E  C1A1  F3F2         	movff	?___ftdiv+2,send_periodical_update@tmp2+2
  3548                           
  3549                           ;main.c: 642: m_var.value_byte1 = (uint8_t)floor(tmp2);
  3550  011962  C3F0  F1C7         	movff	send_periodical_update@tmp2,floor@x
  3551  011966  C3F1  F1C8         	movff	send_periodical_update@tmp2+1,floor@x+1
  3552  01196A  C3F2  F1C9         	movff	send_periodical_update@tmp2+2,floor@x+2
  3553  01196E  EC08  F0AC         	call	_floor	;wreg free
  3554  011972  C1C7  F3F3         	movff	?_floor,_send_periodical_update$5145
  3555  011976  C1C8  F3F4         	movff	?_floor+1,_send_periodical_update$5145+1
  3556  01197A  C1C9  F3F5         	movff	?_floor+2,_send_periodical_update$5145+2
  3557                           
  3558                           ;main.c: 642: m_var.value_byte1 = (uint8_t)floor(tmp2);
  3559  01197E  C3F3  F1AE         	movff	_send_periodical_update$5145,___fttol@f1
  3560  011982  C3F4  F1AF         	movff	_send_periodical_update$5145+1,___fttol@f1+1
  3561  011986  C3F5  F1B0         	movff	_send_periodical_update$5145+2,___fttol@f1+2
  3562  01198A  ECAA  F0A5         	call	___fttol	;wreg free
  3563  01198E  0101               	movlb	1	; () banked
  3564  011990  51AE               	movf	?___fttol& (0+255),w,b
  3565  011992  0101               	movlb	1	; () banked
  3566  011994  6F7D               	movwf	(_m_var+4)& (0+255),b
  3567                           
  3568                           ; BSR set to: 1
  3569                           ;main.c: 643: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3570  011996  C3F0  F1C7         	movff	send_periodical_update@tmp2,floor@x
  3571  01199A  C3F1  F1C8         	movff	send_periodical_update@tmp2+1,floor@x+1
  3572  01199E  C3F2  F1C9         	movff	send_periodical_update@tmp2+2,floor@x+2
  3573  0119A2  EC08  F0AC         	call	_floor	;wreg free
  3574  0119A6  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  3575  0119AA  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  3576  0119AE  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  3577  0119B2  EC07  F0B7         	call	___ftneg	;wreg free
  3578  0119B6  C1CF  F3F6         	movff	?___ftneg,_send_periodical_update$5146
  3579  0119BA  C1D0  F3F7         	movff	?___ftneg+1,_send_periodical_update$5146+1
  3580  0119BE  C1D1  F3F8         	movff	?___ftneg+2,_send_periodical_update$5146+2
  3581                           
  3582                           ;main.c: 643: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3583  0119C2  0E00               	movlw	0
  3584  0119C4  0101               	movlb	1	; () banked
  3585  0119C6  6FD5               	movwf	___ftmul@f2& (0+255),b
  3586  0119C8  0EC8               	movlw	200
  3587  0119CA  0101               	movlb	1	; () banked
  3588  0119CC  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  3589  0119CE  0E42               	movlw	66
  3590  0119D0  0101               	movlb	1	; () banked
  3591  0119D2  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  3592  0119D4  C3F0  F195         	movff	send_periodical_update@tmp2,___ftadd@f2
  3593  0119D8  C3F1  F196         	movff	send_periodical_update@tmp2+1,___ftadd@f2+1
  3594  0119DC  C3F2  F197         	movff	send_periodical_update@tmp2+2,___ftadd@f2+2
  3595  0119E0  C3F6  F192         	movff	_send_periodical_update$5146,___ftadd@f1
  3596  0119E4  C3F7  F193         	movff	_send_periodical_update$5146+1,___ftadd@f1+1
  3597  0119E8  C3F8  F194         	movff	_send_periodical_update$5146+2,___ftadd@f1+2
  3598  0119EC  EC9B  F099         	call	___ftadd	;wreg free
  3599  0119F0  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  3600  0119F4  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  3601  0119F8  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  3602  0119FC  ECAA  F0A3         	call	___ftmul	;wreg free
  3603  011A00  C1D2  F3F9         	movff	?___ftmul,_send_periodical_update$5147
  3604  011A04  C1D3  F3FA         	movff	?___ftmul+1,_send_periodical_update$5147+1
  3605  011A08  C1D4  F3FB         	movff	?___ftmul+2,_send_periodical_update$5147+2
  3606                           
  3607                           ;main.c: 643: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3608  011A0C  C3F9  F1C7         	movff	_send_periodical_update$5147,floor@x
  3609  011A10  C3FA  F1C8         	movff	_send_periodical_update$5147+1,floor@x+1
  3610  011A14  C3FB  F1C9         	movff	_send_periodical_update$5147+2,floor@x+2
  3611  011A18  EC08  F0AC         	call	_floor	;wreg free
  3612  011A1C  C1C7  F3FC         	movff	?_floor,_send_periodical_update$5148
  3613  011A20  C1C8  F3FD         	movff	?_floor+1,_send_periodical_update$5148+1
  3614  011A24  C1C9  F3FE         	movff	?_floor+2,_send_periodical_update$5148+2
  3615                           
  3616                           ;main.c: 643: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  3617  011A28  C3FC  F1AE         	movff	_send_periodical_update$5148,___fttol@f1
  3618  011A2C  C3FD  F1AF         	movff	_send_periodical_update$5148+1,___fttol@f1+1
  3619  011A30  C3FE  F1B0         	movff	_send_periodical_update$5148+2,___fttol@f1+2
  3620  011A34  ECAA  F0A5         	call	___fttol	;wreg free
  3621  011A38  0101               	movlb	1	; () banked
  3622  011A3A  51AE               	movf	?___fttol& (0+255),w,b
  3623  011A3C  0101               	movlb	1	; () banked
  3624  011A3E  6F7E               	movwf	(_m_var+5)& (0+255),b
  3625                           
  3626                           ; BSR set to: 1
  3627                           ;main.c: 644: m_var.writable = 0;
  3628  011A40  0E00               	movlw	0
  3629  011A42  0101               	movlb	1	; () banked
  3630  011A44  6F80               	movwf	(_m_var+7)& (0+255),b
  3631                           
  3632                           ; BSR set to: 1
  3633                           ;main.c: 645: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3634  011A46  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3635  011A4A  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3636  011A4E  EE21  F079         	lfsr	2,_m_var
  3637  011A52  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  3638  011A56  0E09               	movlw	9
  3639  011A58                     u17751:
  3640  011A58  CFDB FFEB          	movff	plusw2,plusw0
  3641  011A5C  06E8               	decf	wreg,f,c
  3642  011A5E  E2FC               	bc	u17751
  3643  011A60  EC63  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3644  011A64  0101               	movlb	1	; () banked
  3645  011A66  6FFB               	movwf	??_send_periodical_update& (0+255),b
  3646  011A68  0101               	movlb	1	; () banked
  3647  011A6A  51FB               	movf	??_send_periodical_update& (0+255),w,b
  3648  011A6C  0D01               	mullw	1
  3649  011A6E  50F3               	movf	prodl,w,c
  3650  011A70  0101               	movlb	1	; () banked
  3651  011A72  273A               	addwf	_p_buffer& (0+255),f,b
  3652  011A74  50F4               	movf	prodh,w,c
  3653  011A76  0101               	movlb	1	; () banked
  3654  011A78  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3655                           
  3656                           ; BSR set to: 1
  3657                           ;main.c: 647: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  3658  011A7A  0EE0               	movlw	low _m_buffer
  3659  011A7C  0103               	movlb	3	; () banked
  3660  011A7E  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  3661  011A80  0E02               	movlw	high _m_buffer
  3662  011A82  0103               	movlb	3	; () banked
  3663  011A84  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  3664  011A86  0EE0               	movlw	_m_buffer& (0+255)
  3665  011A88  0800               	sublw	0
  3666  011A8A  0101               	movlb	1	; () banked
  3667  011A8C  253A               	addwf	_p_buffer& (0+255),w,b
  3668  011A8E  0103               	movlb	3	; () banked
  3669  011A90  6FE9               	movwf	do_UPDATE@size& (0+255),b
  3670  011A92  0E01               	movlw	1
  3671  011A94  0103               	movlb	3	; () banked
  3672  011A96  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  3673  011A98  EC35  F0A2         	call	_do_UPDATE	;wreg free
  3674  011A9C  0012               	return	
  3675  011A9E                     __end_of_send_periodical_update:
  3676                           	opt stack 0
  3677                           tblptru	equ	0xFF8
  3678                           tblptrh	equ	0xFF7
  3679                           tblptrl	equ	0xFF6
  3680                           tablat	equ	0xFF5
  3681                           prodh	equ	0xFF4
  3682                           prodl	equ	0xFF3
  3683                           postinc0	equ	0xFEE
  3684                           plusw0	equ	0xFEB
  3685                           wreg	equ	0xFE8
  3686                           postdec1	equ	0xFE5
  3687                           fsr1h	equ	0xFE2
  3688                           fsr1l	equ	0xFE1
  3689                           indf2	equ	0xFDF
  3690                           postinc2	equ	0xFDE
  3691                           plusw2	equ	0xFDB
  3692                           fsr2h	equ	0xFDA
  3693                           fsr2l	equ	0xFD9
  3694                           status	equ	0xFD8
  3695                           
  3696 ;; *************** function _send_initial_update *****************
  3697 ;; Defined at:
  3698 ;;		line 495 in file "src/main.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  tmp2            3   28[BANK3 ] float 
  3703 ;;  tmp             2    0        unsigned int 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      unsigned char 
  3706 ;; Registers used:
  3707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3714 ;;      Locals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  3715 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3716 ;;      Totals:         0       0       1       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  3717 ;;Total ram usage:       16 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:   18
  3720 ;; This function calls:
  3721 ;;		___ftadd
  3722 ;;		___ftdiv
  3723 ;;		___ftmul
  3724 ;;		___ftneg
  3725 ;;		___fttol
  3726 ;;		___lltoft
  3727 ;;		___lmul
  3728 ;;		_dBm_to_mW_ufixed16
  3729 ;;		_do_UPDATE
  3730 ;;		_encode_ufixed16_variable
  3731 ;;		_encode_uint8_variable
  3732 ;;		_floor
  3733 ;;		_memcpy
  3734 ;; This function is called by:
  3735 ;;		_main
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text3
  3740  010C7A                     __ptext3:
  3741                           	opt stack 0
  3742  010C7A                     _send_initial_update:
  3743                           	opt stack 12
  3744                           
  3745                           ;main.c: 497: uint16_t tmp;
  3746                           ;main.c: 499: p_buffer = m_buffer;
  3747                           
  3748                           ;incstack = 0
  3749  010C7A  0EE0               	movlw	low _m_buffer
  3750  010C7C  0101               	movlb	1	; () banked
  3751  010C7E  6F3A               	movwf	_p_buffer& (0+255),b
  3752  010C80  0E02               	movlw	high _m_buffer
  3753  010C82  0101               	movlb	1	; () banked
  3754  010C84  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  3755                           
  3756                           ; BSR set to: 1
  3757                           ;main.c: 502: memcpy(m_var.label, BATTERY_VOLTAGE_LABEL, 3);
  3758  010C86  0E79               	movlw	low _m_var
  3759  010C88  0101               	movlb	1	; () banked
  3760  010C8A  6F8A               	movwf	memcpy@d1& (0+255),b
  3761  010C8C  0E01               	movlw	high _m_var
  3762  010C8E  0101               	movlb	1	; () banked
  3763  010C90  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3764  010C92  0EDF               	movlw	low _BATTERY_VOLTAGE_LABEL
  3765  010C94  0101               	movlb	1	; () banked
  3766  010C96  6F8C               	movwf	memcpy@s1& (0+255),b
  3767  010C98  0EFF               	movlw	high _BATTERY_VOLTAGE_LABEL
  3768  010C9A  0101               	movlb	1	; () banked
  3769  010C9C  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3770  010C9E  0E00               	movlw	0
  3771  010CA0  0101               	movlb	1	; () banked
  3772  010CA2  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3773  010CA4  0E03               	movlw	3
  3774  010CA6  6F8E               	movwf	memcpy@n& (0+255),b
  3775  010CA8  EC30  F0B5         	call	_memcpy	;wreg free
  3776                           
  3777                           ;main.c: 503: m_var.unit = 2;
  3778  010CAC  0E02               	movlw	2
  3779  010CAE  0101               	movlb	1	; () banked
  3780  010CB0  6F7F               	movwf	(_m_var+6)& (0+255),b
  3781                           
  3782                           ; BSR set to: 1
  3783                           ;main.c: 504: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  3784  010CB2  C12D  F1C7         	movff	_m_battery_voltage,floor@x
  3785  010CB6  C12E  F1C8         	movff	_m_battery_voltage+1,floor@x+1
  3786  010CBA  C12F  F1C9         	movff	_m_battery_voltage+2,floor@x+2
  3787  010CBE  EC08  F0AC         	call	_floor	;wreg free
  3788  010CC2  C1C7  F3F3         	movff	?_floor,_send_initial_update$5141
  3789  010CC6  C1C8  F3F4         	movff	?_floor+1,_send_initial_update$5141+1
  3790  010CCA  C1C9  F3F5         	movff	?_floor+2,_send_initial_update$5141+2
  3791                           
  3792                           ;main.c: 504: m_var.value_byte1 = (uint8_t)floor(m_battery_voltage);
  3793  010CCE  C3F3  F1AE         	movff	_send_initial_update$5141,___fttol@f1
  3794  010CD2  C3F4  F1AF         	movff	_send_initial_update$5141+1,___fttol@f1+1
  3795  010CD6  C3F5  F1B0         	movff	_send_initial_update$5141+2,___fttol@f1+2
  3796  010CDA  ECAA  F0A5         	call	___fttol	;wreg free
  3797  010CDE  0101               	movlb	1	; () banked
  3798  010CE0  51AE               	movf	?___fttol& (0+255),w,b
  3799  010CE2  0101               	movlb	1	; () banked
  3800  010CE4  6F7D               	movwf	(_m_var+4)& (0+255),b
  3801                           
  3802                           ; BSR set to: 1
  3803                           ;main.c: 505: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3804  010CE6  C12D  F1C7         	movff	_m_battery_voltage,floor@x
  3805  010CEA  C12E  F1C8         	movff	_m_battery_voltage+1,floor@x+1
  3806  010CEE  C12F  F1C9         	movff	_m_battery_voltage+2,floor@x+2
  3807  010CF2  EC08  F0AC         	call	_floor	;wreg free
  3808  010CF6  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  3809  010CFA  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  3810  010CFE  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  3811  010D02  EC07  F0B7         	call	___ftneg	;wreg free
  3812  010D06  C1CF  F3F6         	movff	?___ftneg,_send_initial_update$5142
  3813  010D0A  C1D0  F3F7         	movff	?___ftneg+1,_send_initial_update$5142+1
  3814  010D0E  C1D1  F3F8         	movff	?___ftneg+2,_send_initial_update$5142+2
  3815                           
  3816                           ;main.c: 505: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3817  010D12  0E00               	movlw	0
  3818  010D14  0101               	movlb	1	; () banked
  3819  010D16  6FD5               	movwf	___ftmul@f2& (0+255),b
  3820  010D18  0EC8               	movlw	200
  3821  010D1A  0101               	movlb	1	; () banked
  3822  010D1C  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  3823  010D1E  0E42               	movlw	66
  3824  010D20  0101               	movlb	1	; () banked
  3825  010D22  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  3826  010D24  C12D  F195         	movff	_m_battery_voltage,___ftadd@f2
  3827  010D28  C12E  F196         	movff	_m_battery_voltage+1,___ftadd@f2+1
  3828  010D2C  C12F  F197         	movff	_m_battery_voltage+2,___ftadd@f2+2
  3829  010D30  C3F6  F192         	movff	_send_initial_update$5142,___ftadd@f1
  3830  010D34  C3F7  F193         	movff	_send_initial_update$5142+1,___ftadd@f1+1
  3831  010D38  C3F8  F194         	movff	_send_initial_update$5142+2,___ftadd@f1+2
  3832  010D3C  EC9B  F099         	call	___ftadd	;wreg free
  3833  010D40  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  3834  010D44  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  3835  010D48  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  3836  010D4C  ECAA  F0A3         	call	___ftmul	;wreg free
  3837  010D50  C1D2  F3F9         	movff	?___ftmul,_send_initial_update$5143
  3838  010D54  C1D3  F3FA         	movff	?___ftmul+1,_send_initial_update$5143+1
  3839  010D58  C1D4  F3FB         	movff	?___ftmul+2,_send_initial_update$5143+2
  3840                           
  3841                           ;main.c: 505: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3842  010D5C  C3F9  F1C7         	movff	_send_initial_update$5143,floor@x
  3843  010D60  C3FA  F1C8         	movff	_send_initial_update$5143+1,floor@x+1
  3844  010D64  C3FB  F1C9         	movff	_send_initial_update$5143+2,floor@x+2
  3845  010D68  EC08  F0AC         	call	_floor	;wreg free
  3846  010D6C  C1C7  F3FC         	movff	?_floor,_send_initial_update$5144
  3847  010D70  C1C8  F3FD         	movff	?_floor+1,_send_initial_update$5144+1
  3848  010D74  C1C9  F3FE         	movff	?_floor+2,_send_initial_update$5144+2
  3849                           
  3850                           ;main.c: 505: m_var.value_byte2 = (uint8_t)floor(((m_battery_voltage - floor(m_battery_v
      +                          oltage))*100));
  3851  010D78  C3FC  F1AE         	movff	_send_initial_update$5144,___fttol@f1
  3852  010D7C  C3FD  F1AF         	movff	_send_initial_update$5144+1,___fttol@f1+1
  3853  010D80  C3FE  F1B0         	movff	_send_initial_update$5144+2,___fttol@f1+2
  3854  010D84  ECAA  F0A5         	call	___fttol	;wreg free
  3855  010D88  0101               	movlb	1	; () banked
  3856  010D8A  51AE               	movf	?___fttol& (0+255),w,b
  3857  010D8C  0101               	movlb	1	; () banked
  3858  010D8E  6F7E               	movwf	(_m_var+5)& (0+255),b
  3859                           
  3860                           ; BSR set to: 1
  3861                           ;main.c: 506: m_var.writable = 0;
  3862  010D90  0E00               	movlw	0
  3863  010D92  0101               	movlb	1	; () banked
  3864  010D94  6F80               	movwf	(_m_var+7)& (0+255),b
  3865                           
  3866                           ; BSR set to: 1
  3867                           ;main.c: 507: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  3868  010D96  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  3869  010D9A  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  3870  010D9E  EE21  F079         	lfsr	2,_m_var
  3871  010DA2  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  3872  010DA6  0E09               	movlw	9
  3873  010DA8                     u17471:
  3874  010DA8  CFDB FFEB          	movff	plusw2,plusw0
  3875  010DAC  06E8               	decf	wreg,f,c
  3876  010DAE  E2FC               	bc	u17471
  3877  010DB0  EC63  F0AF         	call	_encode_ufixed16_variable	;wreg free
  3878  010DB4  0101               	movlb	1	; () banked
  3879  010DB6  6FFB               	movwf	??_send_initial_update& (0+255),b
  3880  010DB8  0101               	movlb	1	; () banked
  3881  010DBA  51FB               	movf	??_send_initial_update& (0+255),w,b
  3882  010DBC  0D01               	mullw	1
  3883  010DBE  50F3               	movf	prodl,w,c
  3884  010DC0  0101               	movlb	1	; () banked
  3885  010DC2  273A               	addwf	_p_buffer& (0+255),f,b
  3886  010DC4  50F4               	movf	prodh,w,c
  3887  010DC6  0101               	movlb	1	; () banked
  3888  010DC8  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3889                           
  3890                           ; BSR set to: 1
  3891                           ;main.c: 509: memcpy(m_var.label, LIGHT_LEVEL_LABEL, 3);
  3892  010DCA  0E79               	movlw	low _m_var
  3893  010DCC  0101               	movlb	1	; () banked
  3894  010DCE  6F8A               	movwf	memcpy@d1& (0+255),b
  3895  010DD0  0E01               	movlw	high _m_var
  3896  010DD2  0101               	movlb	1	; () banked
  3897  010DD4  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3898  010DD6  0EE7               	movlw	low _LIGHT_LEVEL_LABEL
  3899  010DD8  0101               	movlb	1	; () banked
  3900  010DDA  6F8C               	movwf	memcpy@s1& (0+255),b
  3901  010DDC  0EFF               	movlw	high _LIGHT_LEVEL_LABEL
  3902  010DDE  0101               	movlb	1	; () banked
  3903  010DE0  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3904  010DE2  0E00               	movlw	0
  3905  010DE4  0101               	movlb	1	; () banked
  3906  010DE6  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3907  010DE8  0E03               	movlw	3
  3908  010DEA  6F8E               	movwf	memcpy@n& (0+255),b
  3909  010DEC  EC30  F0B5         	call	_memcpy	;wreg free
  3910                           
  3911                           ;main.c: 510: m_var.unit = 3;
  3912  010DF0  0E03               	movlw	3
  3913  010DF2  0101               	movlb	1	; () banked
  3914  010DF4  6F7F               	movwf	(_m_var+6)& (0+255),b
  3915                           
  3916                           ; BSR set to: 1
  3917                           ;main.c: 511: m_var.value_byte1 = m_light_level;
  3918  010DF6  C149  F17D         	movff	_m_light_level,_m_var+4
  3919                           
  3920                           ; BSR set to: 1
  3921                           ;main.c: 512: m_var.writable = 0;
  3922  010DFA  0E00               	movlw	0
  3923  010DFC  0101               	movlb	1	; () banked
  3924  010DFE  6F80               	movwf	(_m_var+7)& (0+255),b
  3925                           
  3926                           ; BSR set to: 1
  3927                           ;main.c: 513: p_buffer += encode_uint8_variable(p_buffer, m_var);
  3928  010E00  C13A  F18A         	movff	_p_buffer,encode_uint8_variable@buffer
  3929  010E04  C13B  F18B         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  3930  010E08  EE21  F079         	lfsr	2,_m_var
  3931  010E0C  EE01  F08C         	lfsr	0,encode_uint8_variable@var
  3932  010E10  0E09               	movlw	9
  3933  010E12                     u17481:
  3934  010E12  CFDB FFEB          	movff	plusw2,plusw0
  3935  010E16  06E8               	decf	wreg,f,c
  3936  010E18  E2FC               	bc	u17481
  3937  010E1A  EC25  F0B1         	call	_encode_uint8_variable	;wreg free
  3938  010E1E  0101               	movlb	1	; () banked
  3939  010E20  6FFB               	movwf	??_send_initial_update& (0+255),b
  3940  010E22  0101               	movlb	1	; () banked
  3941  010E24  51FB               	movf	??_send_initial_update& (0+255),w,b
  3942  010E26  0D01               	mullw	1
  3943  010E28  50F3               	movf	prodl,w,c
  3944  010E2A  0101               	movlb	1	; () banked
  3945  010E2C  273A               	addwf	_p_buffer& (0+255),f,b
  3946  010E2E  50F4               	movf	prodh,w,c
  3947  010E30  0101               	movlb	1	; () banked
  3948  010E32  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  3949                           
  3950                           ; BSR set to: 1
  3951                           ;main.c: 515: memcpy(m_var.label, TEMPERATURE_LABEL, 3);
  3952  010E34  0E79               	movlw	low _m_var
  3953  010E36  0101               	movlb	1	; () banked
  3954  010E38  6F8A               	movwf	memcpy@d1& (0+255),b
  3955  010E3A  0E01               	movlw	high _m_var
  3956  010E3C  0101               	movlb	1	; () banked
  3957  010E3E  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  3958  010E40  0EEF               	movlw	low _TEMPERATURE_LABEL
  3959  010E42  0101               	movlb	1	; () banked
  3960  010E44  6F8C               	movwf	memcpy@s1& (0+255),b
  3961  010E46  0EFF               	movlw	high _TEMPERATURE_LABEL
  3962  010E48  0101               	movlb	1	; () banked
  3963  010E4A  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  3964  010E4C  0E00               	movlw	0
  3965  010E4E  0101               	movlb	1	; () banked
  3966  010E50  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  3967  010E52  0E03               	movlw	3
  3968  010E54  6F8E               	movwf	memcpy@n& (0+255),b
  3969  010E56  EC30  F0B5         	call	_memcpy	;wreg free
  3970                           
  3971                           ;main.c: 516: m_var.unit = 1;
  3972  010E5A  0E01               	movlw	1
  3973  010E5C  0101               	movlb	1	; () banked
  3974  010E5E  6F7F               	movwf	(_m_var+6)& (0+255),b
  3975                           
  3976                           ; BSR set to: 1
  3977                           ;main.c: 517: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3978  010E60  C130  F1C7         	movff	_m_temperature,floor@x
  3979  010E64  C131  F1C8         	movff	_m_temperature+1,floor@x+1
  3980  010E68  C132  F1C9         	movff	_m_temperature+2,floor@x+2
  3981  010E6C  EC08  F0AC         	call	_floor	;wreg free
  3982  010E70  C1C7  F3F3         	movff	?_floor,_send_initial_update$5141
  3983  010E74  C1C8  F3F4         	movff	?_floor+1,_send_initial_update$5141+1
  3984  010E78  C1C9  F3F5         	movff	?_floor+2,_send_initial_update$5141+2
  3985                           
  3986                           ;main.c: 517: m_var.value_byte1 = (uint8_t)floor(m_temperature);
  3987  010E7C  C3F3  F1AE         	movff	_send_initial_update$5141,___fttol@f1
  3988  010E80  C3F4  F1AF         	movff	_send_initial_update$5141+1,___fttol@f1+1
  3989  010E84  C3F5  F1B0         	movff	_send_initial_update$5141+2,___fttol@f1+2
  3990  010E88  ECAA  F0A5         	call	___fttol	;wreg free
  3991  010E8C  0101               	movlb	1	; () banked
  3992  010E8E  51AE               	movf	?___fttol& (0+255),w,b
  3993  010E90  0101               	movlb	1	; () banked
  3994  010E92  6F7D               	movwf	(_m_var+4)& (0+255),b
  3995                           
  3996                           ; BSR set to: 1
  3997                           ;main.c: 518: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  3998  010E94  C130  F1C7         	movff	_m_temperature,floor@x
  3999  010E98  C131  F1C8         	movff	_m_temperature+1,floor@x+1
  4000  010E9C  C132  F1C9         	movff	_m_temperature+2,floor@x+2
  4001  010EA0  EC08  F0AC         	call	_floor	;wreg free
  4002  010EA4  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  4003  010EA8  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  4004  010EAC  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  4005  010EB0  EC07  F0B7         	call	___ftneg	;wreg free
  4006  010EB4  C1CF  F3F6         	movff	?___ftneg,_send_initial_update$5142
  4007  010EB8  C1D0  F3F7         	movff	?___ftneg+1,_send_initial_update$5142+1
  4008  010EBC  C1D1  F3F8         	movff	?___ftneg+2,_send_initial_update$5142+2
  4009                           
  4010                           ;main.c: 518: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  4011  010EC0  0E00               	movlw	0
  4012  010EC2  0101               	movlb	1	; () banked
  4013  010EC4  6FD5               	movwf	___ftmul@f2& (0+255),b
  4014  010EC6  0EC8               	movlw	200
  4015  010EC8  0101               	movlb	1	; () banked
  4016  010ECA  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  4017  010ECC  0E42               	movlw	66
  4018  010ECE  0101               	movlb	1	; () banked
  4019  010ED0  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  4020  010ED2  C130  F195         	movff	_m_temperature,___ftadd@f2
  4021  010ED6  C131  F196         	movff	_m_temperature+1,___ftadd@f2+1
  4022  010EDA  C132  F197         	movff	_m_temperature+2,___ftadd@f2+2
  4023  010EDE  C3F6  F192         	movff	_send_initial_update$5142,___ftadd@f1
  4024  010EE2  C3F7  F193         	movff	_send_initial_update$5142+1,___ftadd@f1+1
  4025  010EE6  C3F8  F194         	movff	_send_initial_update$5142+2,___ftadd@f1+2
  4026  010EEA  EC9B  F099         	call	___ftadd	;wreg free
  4027  010EEE  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  4028  010EF2  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  4029  010EF6  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  4030  010EFA  ECAA  F0A3         	call	___ftmul	;wreg free
  4031  010EFE  C1D2  F3F9         	movff	?___ftmul,_send_initial_update$5143
  4032  010F02  C1D3  F3FA         	movff	?___ftmul+1,_send_initial_update$5143+1
  4033  010F06  C1D4  F3FB         	movff	?___ftmul+2,_send_initial_update$5143+2
  4034                           
  4035                           ;main.c: 518: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  4036  010F0A  C3F9  F1C7         	movff	_send_initial_update$5143,floor@x
  4037  010F0E  C3FA  F1C8         	movff	_send_initial_update$5143+1,floor@x+1
  4038  010F12  C3FB  F1C9         	movff	_send_initial_update$5143+2,floor@x+2
  4039  010F16  EC08  F0AC         	call	_floor	;wreg free
  4040  010F1A  C1C7  F3FC         	movff	?_floor,_send_initial_update$5144
  4041  010F1E  C1C8  F3FD         	movff	?_floor+1,_send_initial_update$5144+1
  4042  010F22  C1C9  F3FE         	movff	?_floor+2,_send_initial_update$5144+2
  4043                           
  4044                           ;main.c: 518: m_var.value_byte2 = (uint8_t)floor(((m_temperature - floor(m_temperature))
      +                          *100));
  4045  010F26  C3FC  F1AE         	movff	_send_initial_update$5144,___fttol@f1
  4046  010F2A  C3FD  F1AF         	movff	_send_initial_update$5144+1,___fttol@f1+1
  4047  010F2E  C3FE  F1B0         	movff	_send_initial_update$5144+2,___fttol@f1+2
  4048  010F32  ECAA  F0A5         	call	___fttol	;wreg free
  4049  010F36  0101               	movlb	1	; () banked
  4050  010F38  51AE               	movf	?___fttol& (0+255),w,b
  4051  010F3A  0101               	movlb	1	; () banked
  4052  010F3C  6F7E               	movwf	(_m_var+5)& (0+255),b
  4053                           
  4054                           ; BSR set to: 1
  4055                           ;main.c: 519: m_var._signed = 1;
  4056  010F3E  0E01               	movlw	1
  4057  010F40  0101               	movlb	1	; () banked
  4058  010F42  6F81               	movwf	(_m_var+8)& (0+255),b
  4059                           
  4060                           ; BSR set to: 1
  4061                           ;main.c: 520: m_var.writable = 0;
  4062  010F44  0E00               	movlw	0
  4063  010F46  0101               	movlb	1	; () banked
  4064  010F48  6F80               	movwf	(_m_var+7)& (0+255),b
  4065                           
  4066                           ; BSR set to: 1
  4067                           ;main.c: 521: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  4068  010F4A  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  4069  010F4E  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  4070  010F52  EE21  F079         	lfsr	2,_m_var
  4071  010F56  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  4072  010F5A  0E09               	movlw	9
  4073  010F5C                     u17491:
  4074  010F5C  CFDB FFEB          	movff	plusw2,plusw0
  4075  010F60  06E8               	decf	wreg,f,c
  4076  010F62  E2FC               	bc	u17491
  4077  010F64  EC63  F0AF         	call	_encode_ufixed16_variable	;wreg free
  4078  010F68  0101               	movlb	1	; () banked
  4079  010F6A  6FFB               	movwf	??_send_initial_update& (0+255),b
  4080  010F6C  0101               	movlb	1	; () banked
  4081  010F6E  51FB               	movf	??_send_initial_update& (0+255),w,b
  4082  010F70  0D01               	mullw	1
  4083  010F72  50F3               	movf	prodl,w,c
  4084  010F74  0101               	movlb	1	; () banked
  4085  010F76  273A               	addwf	_p_buffer& (0+255),f,b
  4086  010F78  50F4               	movf	prodh,w,c
  4087  010F7A  0101               	movlb	1	; () banked
  4088  010F7C  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  4089                           
  4090                           ; BSR set to: 1
  4091                           ;main.c: 523: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  4092  010F7E  0EE0               	movlw	low _m_buffer
  4093  010F80  0103               	movlb	3	; () banked
  4094  010F82  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  4095  010F84  0E02               	movlw	high _m_buffer
  4096  010F86  0103               	movlb	3	; () banked
  4097  010F88  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4098  010F8A  0EE0               	movlw	_m_buffer& (0+255)
  4099  010F8C  0800               	sublw	0
  4100  010F8E  0101               	movlb	1	; () banked
  4101  010F90  253A               	addwf	_p_buffer& (0+255),w,b
  4102  010F92  0103               	movlb	3	; () banked
  4103  010F94  6FE9               	movwf	do_UPDATE@size& (0+255),b
  4104  010F96  0E00               	movlw	0
  4105  010F98  0103               	movlb	3	; () banked
  4106  010F9A  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  4107  010F9C  EC35  F0A2         	call	_do_UPDATE	;wreg free
  4108  010FA0  0900               	iorlw	0
  4109  010FA2  A4D8               	btfss	status,2,c
  4110  010FA4  D002               	goto	l14623
  4111                           
  4112                           ;main.c: 524: return 0;
  4113  010FA6  0E00               	movlw	0
  4114  010FA8  0012               	return	
  4115  010FAA                     l14623:
  4116                           
  4117                           ;main.c: 527: p_buffer = m_buffer;
  4118  010FAA  0EE0               	movlw	low _m_buffer
  4119  010FAC  0101               	movlb	1	; () banked
  4120  010FAE  6F3A               	movwf	_p_buffer& (0+255),b
  4121  010FB0  0E02               	movlw	high _m_buffer
  4122  010FB2  0101               	movlb	1	; () banked
  4123  010FB4  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  4124                           
  4125                           ; BSR set to: 1
  4126                           ;main.c: 529: memcpy(m_var.label, POWER_LABEL, 3);
  4127  010FB6  0E79               	movlw	low _m_var
  4128  010FB8  0101               	movlb	1	; () banked
  4129  010FBA  6F8A               	movwf	memcpy@d1& (0+255),b
  4130  010FBC  0E01               	movlw	high _m_var
  4131  010FBE  0101               	movlb	1	; () banked
  4132  010FC0  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  4133  010FC2  0EEB               	movlw	low _POWER_LABEL
  4134  010FC4  0101               	movlb	1	; () banked
  4135  010FC6  6F8C               	movwf	memcpy@s1& (0+255),b
  4136  010FC8  0EFF               	movlw	high _POWER_LABEL
  4137  010FCA  0101               	movlb	1	; () banked
  4138  010FCC  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  4139  010FCE  0E00               	movlw	0
  4140  010FD0  0101               	movlb	1	; () banked
  4141  010FD2  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  4142  010FD4  0E03               	movlw	3
  4143  010FD6  6F8E               	movwf	memcpy@n& (0+255),b
  4144  010FD8  EC30  F0B5         	call	_memcpy	;wreg free
  4145                           
  4146                           ;main.c: 530: m_var.unit = 8;
  4147  010FDC  0E08               	movlw	8
  4148  010FDE  0101               	movlb	1	; () banked
  4149  010FE0  6F7F               	movwf	(_m_var+6)& (0+255),b
  4150                           
  4151                           ; BSR set to: 1
  4152                           ;main.c: 531: dBm_to_mW_ufixed16(m_power, &(m_var.value_byte1), &(m_var.value_byte2));
  4153  010FE2  0E7D               	movlw	low (_m_var+4)
  4154  010FE4  0101               	movlb	1	; () banked
  4155  010FE6  6F8A               	movwf	dBm_to_mW_ufixed16@value1& (0+255),b
  4156  010FE8  0E01               	movlw	high (_m_var+4)
  4157  010FEA  0101               	movlb	1	; () banked
  4158  010FEC  6F8B               	movwf	(dBm_to_mW_ufixed16@value1+1)& (0+255),b
  4159  010FEE  0E7E               	movlw	low (_m_var+5)
  4160  010FF0  0101               	movlb	1	; () banked
  4161  010FF2  6F8C               	movwf	dBm_to_mW_ufixed16@value2& (0+255),b
  4162  010FF4  0E01               	movlw	high (_m_var+5)
  4163  010FF6  0101               	movlb	1	; () banked
  4164  010FF8  6F8D               	movwf	(dBm_to_mW_ufixed16@value2+1)& (0+255),b
  4165  010FFA  0101               	movlb	1	; () banked
  4166  010FFC  514A               	movf	_m_power& (0+255),w,b
  4167  010FFE  EC26  F0A8         	call	_dBm_to_mW_ufixed16
  4168                           
  4169                           ;main.c: 532: m_var.writable = 1;
  4170  011002  0E01               	movlw	1
  4171  011004  0101               	movlb	1	; () banked
  4172  011006  6F80               	movwf	(_m_var+7)& (0+255),b
  4173                           
  4174                           ; BSR set to: 1
  4175                           ;main.c: 533: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  4176  011008  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  4177  01100C  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  4178  011010  EE21  F079         	lfsr	2,_m_var
  4179  011014  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  4180  011018  0E09               	movlw	9
  4181  01101A                     u17511:
  4182  01101A  CFDB FFEB          	movff	plusw2,plusw0
  4183  01101E  06E8               	decf	wreg,f,c
  4184  011020  E2FC               	bc	u17511
  4185  011022  EC63  F0AF         	call	_encode_ufixed16_variable	;wreg free
  4186  011026  0101               	movlb	1	; () banked
  4187  011028  6FFB               	movwf	??_send_initial_update& (0+255),b
  4188  01102A  0101               	movlb	1	; () banked
  4189  01102C  51FB               	movf	??_send_initial_update& (0+255),w,b
  4190  01102E  0D01               	mullw	1
  4191  011030  50F3               	movf	prodl,w,c
  4192  011032  0101               	movlb	1	; () banked
  4193  011034  273A               	addwf	_p_buffer& (0+255),f,b
  4194  011036  50F4               	movf	prodh,w,c
  4195  011038  0101               	movlb	1	; () banked
  4196  01103A  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  4197                           
  4198                           ; BSR set to: 1
  4199                           ;main.c: 535: memcpy(m_var.label, UPTIME_LABEL, 3);
  4200  01103C  0E79               	movlw	low _m_var
  4201  01103E  0101               	movlb	1	; () banked
  4202  011040  6F8A               	movwf	memcpy@d1& (0+255),b
  4203  011042  0E01               	movlw	high _m_var
  4204  011044  0101               	movlb	1	; () banked
  4205  011046  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  4206  011048  0EFB               	movlw	low _UPTIME_LABEL
  4207  01104A  0101               	movlb	1	; () banked
  4208  01104C  6F8C               	movwf	memcpy@s1& (0+255),b
  4209  01104E  0EFF               	movlw	high _UPTIME_LABEL
  4210  011050  0101               	movlb	1	; () banked
  4211  011052  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  4212  011054  0E00               	movlw	0
  4213  011056  0101               	movlb	1	; () banked
  4214  011058  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  4215  01105A  0E03               	movlw	3
  4216  01105C  6F8E               	movwf	memcpy@n& (0+255),b
  4217  01105E  EC30  F0B5         	call	_memcpy	;wreg free
  4218                           
  4219                           ;main.c: 536: m_var.unit = 7;
  4220  011062  0E07               	movlw	7
  4221  011064  0101               	movlb	1	; () banked
  4222  011066  6F7F               	movwf	(_m_var+6)& (0+255),b
  4223                           
  4224                           ; BSR set to: 1
  4225                           ;main.c: 537: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  4226  011068  C133  F1C7         	movff	_m_uptime_days,floor@x	;volatile
  4227  01106C  C134  F1C8         	movff	_m_uptime_days+1,floor@x+1	;volatile
  4228  011070  C135  F1C9         	movff	_m_uptime_days+2,floor@x+2	;volatile
  4229  011074  EC08  F0AC         	call	_floor	;wreg free
  4230  011078  C1C7  F3F3         	movff	?_floor,_send_initial_update$5141
  4231  01107C  C1C8  F3F4         	movff	?_floor+1,_send_initial_update$5141+1
  4232  011080  C1C9  F3F5         	movff	?_floor+2,_send_initial_update$5141+2
  4233                           
  4234                           ;main.c: 537: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  4235  011084  C3F3  F1AE         	movff	_send_initial_update$5141,___fttol@f1
  4236  011088  C3F4  F1AF         	movff	_send_initial_update$5141+1,___fttol@f1+1
  4237  01108C  C3F5  F1B0         	movff	_send_initial_update$5141+2,___fttol@f1+2
  4238  011090  ECAA  F0A5         	call	___fttol	;wreg free
  4239  011094  0101               	movlb	1	; () banked
  4240  011096  51AE               	movf	?___fttol& (0+255),w,b
  4241  011098  0101               	movlb	1	; () banked
  4242  01109A  6F7D               	movwf	(_m_var+4)& (0+255),b
  4243                           
  4244                           ; BSR set to: 1
  4245                           ;main.c: 538: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  4246  01109C  C133  F1C7         	movff	_m_uptime_days,floor@x	;volatile
  4247  0110A0  C134  F1C8         	movff	_m_uptime_days+1,floor@x+1	;volatile
  4248  0110A4  C135  F1C9         	movff	_m_uptime_days+2,floor@x+2	;volatile
  4249  0110A8  EC08  F0AC         	call	_floor	;wreg free
  4250  0110AC  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  4251  0110B0  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  4252  0110B4  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  4253  0110B8  EC07  F0B7         	call	___ftneg	;wreg free
  4254  0110BC  C1CF  F3F6         	movff	?___ftneg,_send_initial_update$5142
  4255  0110C0  C1D0  F3F7         	movff	?___ftneg+1,_send_initial_update$5142+1
  4256  0110C4  C1D1  F3F8         	movff	?___ftneg+2,_send_initial_update$5142+2
  4257                           
  4258                           ;main.c: 538: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  4259  0110C8  0E00               	movlw	0
  4260  0110CA  0101               	movlb	1	; () banked
  4261  0110CC  6FD5               	movwf	___ftmul@f2& (0+255),b
  4262  0110CE  0EC8               	movlw	200
  4263  0110D0  0101               	movlb	1	; () banked
  4264  0110D2  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  4265  0110D4  0E42               	movlw	66
  4266  0110D6  0101               	movlb	1	; () banked
  4267  0110D8  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  4268  0110DA  C133  F195         	movff	_m_uptime_days,___ftadd@f2	;volatile
  4269  0110DE  C134  F196         	movff	_m_uptime_days+1,___ftadd@f2+1	;volatile
  4270  0110E2  C135  F197         	movff	_m_uptime_days+2,___ftadd@f2+2	;volatile
  4271  0110E6  C3F6  F192         	movff	_send_initial_update$5142,___ftadd@f1
  4272  0110EA  C3F7  F193         	movff	_send_initial_update$5142+1,___ftadd@f1+1
  4273  0110EE  C3F8  F194         	movff	_send_initial_update$5142+2,___ftadd@f1+2
  4274  0110F2  EC9B  F099         	call	___ftadd	;wreg free
  4275  0110F6  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  4276  0110FA  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  4277  0110FE  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  4278  011102  ECAA  F0A3         	call	___ftmul	;wreg free
  4279  011106  C1D2  F3F9         	movff	?___ftmul,_send_initial_update$5143
  4280  01110A  C1D3  F3FA         	movff	?___ftmul+1,_send_initial_update$5143+1
  4281  01110E  C1D4  F3FB         	movff	?___ftmul+2,_send_initial_update$5143+2
  4282                           
  4283                           ;main.c: 538: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  4284  011112  C3F9  F1C7         	movff	_send_initial_update$5143,floor@x
  4285  011116  C3FA  F1C8         	movff	_send_initial_update$5143+1,floor@x+1
  4286  01111A  C3FB  F1C9         	movff	_send_initial_update$5143+2,floor@x+2
  4287  01111E  EC08  F0AC         	call	_floor	;wreg free
  4288  011122  C1C7  F3FC         	movff	?_floor,_send_initial_update$5144
  4289  011126  C1C8  F3FD         	movff	?_floor+1,_send_initial_update$5144+1
  4290  01112A  C1C9  F3FE         	movff	?_floor+2,_send_initial_update$5144+2
  4291                           
  4292                           ;main.c: 538: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  4293  01112E  C3FC  F1AE         	movff	_send_initial_update$5144,___fttol@f1
  4294  011132  C3FD  F1AF         	movff	_send_initial_update$5144+1,___fttol@f1+1
  4295  011136  C3FE  F1B0         	movff	_send_initial_update$5144+2,___fttol@f1+2
  4296  01113A  ECAA  F0A5         	call	___fttol	;wreg free
  4297  01113E  0101               	movlb	1	; () banked
  4298  011140  51AE               	movf	?___fttol& (0+255),w,b
  4299  011142  0101               	movlb	1	; () banked
  4300  011144  6F7E               	movwf	(_m_var+5)& (0+255),b
  4301                           
  4302                           ; BSR set to: 1
  4303                           ;main.c: 539: m_var.writable = 0;
  4304  011146  0E00               	movlw	0
  4305  011148  0101               	movlb	1	; () banked
  4306  01114A  6F80               	movwf	(_m_var+7)& (0+255),b
  4307                           
  4308                           ; BSR set to: 1
  4309                           ;main.c: 540: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  4310  01114C  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  4311  011150  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  4312  011154  EE21  F079         	lfsr	2,_m_var
  4313  011158  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  4314  01115C  0E09               	movlw	9
  4315  01115E                     u17521:
  4316  01115E  CFDB FFEB          	movff	plusw2,plusw0
  4317  011162  06E8               	decf	wreg,f,c
  4318  011164  E2FC               	bc	u17521
  4319  011166  EC63  F0AF         	call	_encode_ufixed16_variable	;wreg free
  4320  01116A  0101               	movlb	1	; () banked
  4321  01116C  6FFB               	movwf	??_send_initial_update& (0+255),b
  4322  01116E  0101               	movlb	1	; () banked
  4323  011170  51FB               	movf	??_send_initial_update& (0+255),w,b
  4324  011172  0D01               	mullw	1
  4325  011174  50F3               	movf	prodl,w,c
  4326  011176  0101               	movlb	1	; () banked
  4327  011178  273A               	addwf	_p_buffer& (0+255),f,b
  4328  01117A  50F4               	movf	prodh,w,c
  4329  01117C  0101               	movlb	1	; () banked
  4330  01117E  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  4331                           
  4332                           ; BSR set to: 1
  4333                           ;main.c: 542: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  4334  011180  0E79               	movlw	low _m_var
  4335  011182  0101               	movlb	1	; () banked
  4336  011184  6F8A               	movwf	memcpy@d1& (0+255),b
  4337  011186  0E01               	movlw	high _m_var
  4338  011188  0101               	movlb	1	; () banked
  4339  01118A  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  4340  01118C  0EF7               	movlw	low _UPDATE_FREQUENCY_LABEL
  4341  01118E  0101               	movlb	1	; () banked
  4342  011190  6F8C               	movwf	memcpy@s1& (0+255),b
  4343  011192  0EFF               	movlw	high _UPDATE_FREQUENCY_LABEL
  4344  011194  0101               	movlb	1	; () banked
  4345  011196  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  4346  011198  0E00               	movlw	0
  4347  01119A  0101               	movlb	1	; () banked
  4348  01119C  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  4349  01119E  0E03               	movlw	3
  4350  0111A0  6F8E               	movwf	memcpy@n& (0+255),b
  4351  0111A2  EC30  F0B5         	call	_memcpy	;wreg free
  4352                           
  4353                           ;main.c: 543: m_var.unit = 4;
  4354  0111A6  0E04               	movlw	4
  4355  0111A8  0101               	movlb	1	; () banked
  4356  0111AA  6F7F               	movwf	(_m_var+6)& (0+255),b
  4357                           
  4358                           ; BSR set to: 1
  4359                           ;main.c: 544: m_var.value_byte1 = m_update_frequency;
  4360  0111AC  C1FF  F17D         	movff	_m_update_frequency,_m_var+4	;volatile
  4361                           
  4362                           ; BSR set to: 1
  4363                           ;main.c: 545: m_var.writable = 1;
  4364  0111B0  0E01               	movlw	1
  4365  0111B2  0101               	movlb	1	; () banked
  4366  0111B4  6F80               	movwf	(_m_var+7)& (0+255),b
  4367                           
  4368                           ; BSR set to: 1
  4369                           ;main.c: 546: p_buffer += encode_uint8_variable(p_buffer, m_var);
  4370  0111B6  C13A  F18A         	movff	_p_buffer,encode_uint8_variable@buffer
  4371  0111BA  C13B  F18B         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  4372  0111BE  EE21  F079         	lfsr	2,_m_var
  4373  0111C2  EE01  F08C         	lfsr	0,encode_uint8_variable@var
  4374  0111C6  0E09               	movlw	9
  4375  0111C8                     u17531:
  4376  0111C8  CFDB FFEB          	movff	plusw2,plusw0
  4377  0111CC  06E8               	decf	wreg,f,c
  4378  0111CE  E2FC               	bc	u17531
  4379  0111D0  EC25  F0B1         	call	_encode_uint8_variable	;wreg free
  4380  0111D4  0101               	movlb	1	; () banked
  4381  0111D6  6FFB               	movwf	??_send_initial_update& (0+255),b
  4382  0111D8  0101               	movlb	1	; () banked
  4383  0111DA  51FB               	movf	??_send_initial_update& (0+255),w,b
  4384  0111DC  0D01               	mullw	1
  4385  0111DE  50F3               	movf	prodl,w,c
  4386  0111E0  0101               	movlb	1	; () banked
  4387  0111E2  273A               	addwf	_p_buffer& (0+255),f,b
  4388  0111E4  50F4               	movf	prodh,w,c
  4389  0111E6  0101               	movlb	1	; () banked
  4390  0111E8  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  4391                           
  4392                           ; BSR set to: 1
  4393                           ;main.c: 548: if (!do_UPDATE(m_buffer, p_buffer-m_buffer, 0))
  4394  0111EA  0EE0               	movlw	low _m_buffer
  4395  0111EC  0103               	movlb	3	; () banked
  4396  0111EE  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  4397  0111F0  0E02               	movlw	high _m_buffer
  4398  0111F2  0103               	movlb	3	; () banked
  4399  0111F4  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4400  0111F6  0EE0               	movlw	_m_buffer& (0+255)
  4401  0111F8  0800               	sublw	0
  4402  0111FA  0101               	movlb	1	; () banked
  4403  0111FC  253A               	addwf	_p_buffer& (0+255),w,b
  4404  0111FE  0103               	movlb	3	; () banked
  4405  011200  6FE9               	movwf	do_UPDATE@size& (0+255),b
  4406  011202  0E00               	movlw	0
  4407  011204  0103               	movlb	3	; () banked
  4408  011206  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  4409  011208  EC35  F0A2         	call	_do_UPDATE	;wreg free
  4410  01120C  0900               	iorlw	0
  4411  01120E  A4D8               	btfss	status,2,c
  4412  011210  D002               	goto	l14671
  4413                           
  4414                           ;main.c: 549: return 0;
  4415  011212  0E00               	movlw	0
  4416  011214  0012               	return	
  4417  011216                     l14671:
  4418                           
  4419                           ;main.c: 553: p_buffer = m_buffer;
  4420  011216  0EE0               	movlw	low _m_buffer
  4421  011218  0101               	movlb	1	; () banked
  4422  01121A  6F3A               	movwf	_p_buffer& (0+255),b
  4423  01121C  0E02               	movlw	high _m_buffer
  4424  01121E  0101               	movlb	1	; () banked
  4425  011220  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  4426                           
  4427                           ; BSR set to: 1
  4428                           ;main.c: 554: memcpy(m_var.label, FAILEDMSG_LABEL, 3);
  4429  011222  0E79               	movlw	low _m_var
  4430  011224  0101               	movlb	1	; () banked
  4431  011226  6F8A               	movwf	memcpy@d1& (0+255),b
  4432  011228  0E01               	movlw	high _m_var
  4433  01122A  0101               	movlb	1	; () banked
  4434  01122C  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  4435  01122E  0EE3               	movlw	low _FAILEDMSG_LABEL
  4436  011230  0101               	movlb	1	; () banked
  4437  011232  6F8C               	movwf	memcpy@s1& (0+255),b
  4438  011234  0EFF               	movlw	high _FAILEDMSG_LABEL
  4439  011236  0101               	movlb	1	; () banked
  4440  011238  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  4441  01123A  0E00               	movlw	0
  4442  01123C  0101               	movlb	1	; () banked
  4443  01123E  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  4444  011240  0E03               	movlw	3
  4445  011242  6F8E               	movwf	memcpy@n& (0+255),b
  4446  011244  EC30  F0B5         	call	_memcpy	;wreg free
  4447                           
  4448                           ;main.c: 555: m_var.unit = 3;
  4449  011248  0E03               	movlw	3
  4450  01124A  0101               	movlb	1	; () banked
  4451  01124C  6F7F               	movwf	(_m_var+6)& (0+255),b
  4452                           
  4453                           ; BSR set to: 1
  4454                           ;main.c: 556: float tmp2 = (float)(m_failed_messages*100)/(float)(m_failed_messages + m_
      +                          sent_messages);
  4455  01124E  C11E  F18A         	movff	_m_failed_messages,___lmul@multiplier
  4456  011252  C11F  F18B         	movff	_m_failed_messages+1,___lmul@multiplier+1
  4457  011256  C120  F18C         	movff	_m_failed_messages+2,___lmul@multiplier+2
  4458  01125A  C121  F18D         	movff	_m_failed_messages+3,___lmul@multiplier+3
  4459  01125E  0E64               	movlw	100
  4460  011260  0101               	movlb	1	; () banked
  4461  011262  6F8E               	movwf	___lmul@multiplicand& (0+255),b
  4462  011264  0E00               	movlw	0
  4463  011266  6F8F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4464  011268  0E00               	movlw	0
  4465  01126A  6F90               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4466  01126C  0E00               	movlw	0
  4467  01126E  6F91               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4468  011270  ECE3  F0B3         	call	___lmul	;wreg free
  4469  011274  C18A  F196         	movff	?___lmul,___lltoft@c
  4470  011278  C18B  F197         	movff	?___lmul+1,___lltoft@c+1
  4471  01127C  C18C  F198         	movff	?___lmul+2,___lltoft@c+2
  4472  011280  C18D  F199         	movff	?___lmul+3,___lltoft@c+3
  4473  011284  EC2C  F0B3         	call	___lltoft	;wreg free
  4474  011288  C196  F19F         	movff	?___lltoft,___ftdiv@f1
  4475  01128C  C197  F1A0         	movff	?___lltoft+1,___ftdiv@f1+1
  4476  011290  C198  F1A1         	movff	?___lltoft+2,___ftdiv@f1+2
  4477  011294  0101               	movlb	1	; () banked
  4478  011296  5122               	movf	_m_sent_messages& (0+255),w,b
  4479  011298  0101               	movlb	1	; () banked
  4480  01129A  251E               	addwf	_m_failed_messages& (0+255),w,b
  4481  01129C  0101               	movlb	1	; () banked
  4482  01129E  6F96               	movwf	___lltoft@c& (0+255),b
  4483  0112A0  0101               	movlb	1	; () banked
  4484  0112A2  5123               	movf	(_m_sent_messages+1)& (0+255),w,b
  4485  0112A4  0101               	movlb	1	; () banked
  4486  0112A6  211F               	addwfc	(_m_failed_messages+1)& (0+255),w,b
  4487  0112A8  0101               	movlb	1	; () banked
  4488  0112AA  6F97               	movwf	(___lltoft@c+1)& (0+255),b
  4489  0112AC  0101               	movlb	1	; () banked
  4490  0112AE  5124               	movf	(_m_sent_messages+2)& (0+255),w,b
  4491  0112B0  0101               	movlb	1	; () banked
  4492  0112B2  2120               	addwfc	(_m_failed_messages+2)& (0+255),w,b
  4493  0112B4  0101               	movlb	1	; () banked
  4494  0112B6  6F98               	movwf	(___lltoft@c+2)& (0+255),b
  4495  0112B8  0101               	movlb	1	; () banked
  4496  0112BA  5125               	movf	(_m_sent_messages+3)& (0+255),w,b
  4497  0112BC  0101               	movlb	1	; () banked
  4498  0112BE  2121               	addwfc	(_m_failed_messages+3)& (0+255),w,b
  4499  0112C0  0101               	movlb	1	; () banked
  4500  0112C2  6F99               	movwf	(___lltoft@c+3)& (0+255),b
  4501  0112C4  EC2C  F0B3         	call	___lltoft	;wreg free
  4502  0112C8  C196  F1A2         	movff	?___lltoft,___ftdiv@f2
  4503  0112CC  C197  F1A3         	movff	?___lltoft+1,___ftdiv@f2+1
  4504  0112D0  C198  F1A4         	movff	?___lltoft+2,___ftdiv@f2+2
  4505  0112D4  EC04  F0A5         	call	___ftdiv	;wreg free
  4506  0112D8  C19F  F3F0         	movff	?___ftdiv,send_initial_update@tmp2
  4507  0112DC  C1A0  F3F1         	movff	?___ftdiv+1,send_initial_update@tmp2+1
  4508  0112E0  C1A1  F3F2         	movff	?___ftdiv+2,send_initial_update@tmp2+2
  4509                           
  4510                           ;main.c: 557: m_var.value_byte1 = (uint8_t)floor(tmp2);
  4511  0112E4  C3F0  F1C7         	movff	send_initial_update@tmp2,floor@x
  4512  0112E8  C3F1  F1C8         	movff	send_initial_update@tmp2+1,floor@x+1
  4513  0112EC  C3F2  F1C9         	movff	send_initial_update@tmp2+2,floor@x+2
  4514  0112F0  EC08  F0AC         	call	_floor	;wreg free
  4515  0112F4  C1C7  F3F3         	movff	?_floor,_send_initial_update$5141
  4516  0112F8  C1C8  F3F4         	movff	?_floor+1,_send_initial_update$5141+1
  4517  0112FC  C1C9  F3F5         	movff	?_floor+2,_send_initial_update$5141+2
  4518                           
  4519                           ;main.c: 557: m_var.value_byte1 = (uint8_t)floor(tmp2);
  4520  011300  C3F3  F1AE         	movff	_send_initial_update$5141,___fttol@f1
  4521  011304  C3F4  F1AF         	movff	_send_initial_update$5141+1,___fttol@f1+1
  4522  011308  C3F5  F1B0         	movff	_send_initial_update$5141+2,___fttol@f1+2
  4523  01130C  ECAA  F0A5         	call	___fttol	;wreg free
  4524  011310  0101               	movlb	1	; () banked
  4525  011312  51AE               	movf	?___fttol& (0+255),w,b
  4526  011314  0101               	movlb	1	; () banked
  4527  011316  6F7D               	movwf	(_m_var+4)& (0+255),b
  4528                           
  4529                           ; BSR set to: 1
  4530                           ;main.c: 558: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4531  011318  C3F0  F1C7         	movff	send_initial_update@tmp2,floor@x
  4532  01131C  C3F1  F1C8         	movff	send_initial_update@tmp2+1,floor@x+1
  4533  011320  C3F2  F1C9         	movff	send_initial_update@tmp2+2,floor@x+2
  4534  011324  EC08  F0AC         	call	_floor	;wreg free
  4535  011328  C1C7  F1CF         	movff	?_floor,___ftneg@f1
  4536  01132C  C1C8  F1D0         	movff	?_floor+1,___ftneg@f1+1
  4537  011330  C1C9  F1D1         	movff	?_floor+2,___ftneg@f1+2
  4538  011334  EC07  F0B7         	call	___ftneg	;wreg free
  4539  011338  C1CF  F3F6         	movff	?___ftneg,_send_initial_update$5142
  4540  01133C  C1D0  F3F7         	movff	?___ftneg+1,_send_initial_update$5142+1
  4541  011340  C1D1  F3F8         	movff	?___ftneg+2,_send_initial_update$5142+2
  4542                           
  4543                           ;main.c: 558: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4544  011344  0E00               	movlw	0
  4545  011346  0101               	movlb	1	; () banked
  4546  011348  6FD5               	movwf	___ftmul@f2& (0+255),b
  4547  01134A  0EC8               	movlw	200
  4548  01134C  0101               	movlb	1	; () banked
  4549  01134E  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  4550  011350  0E42               	movlw	66
  4551  011352  0101               	movlb	1	; () banked
  4552  011354  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  4553  011356  C3F0  F195         	movff	send_initial_update@tmp2,___ftadd@f2
  4554  01135A  C3F1  F196         	movff	send_initial_update@tmp2+1,___ftadd@f2+1
  4555  01135E  C3F2  F197         	movff	send_initial_update@tmp2+2,___ftadd@f2+2
  4556  011362  C3F6  F192         	movff	_send_initial_update$5142,___ftadd@f1
  4557  011366  C3F7  F193         	movff	_send_initial_update$5142+1,___ftadd@f1+1
  4558  01136A  C3F8  F194         	movff	_send_initial_update$5142+2,___ftadd@f1+2
  4559  01136E  EC9B  F099         	call	___ftadd	;wreg free
  4560  011372  C192  F1D2         	movff	?___ftadd,___ftmul@f1
  4561  011376  C193  F1D3         	movff	?___ftadd+1,___ftmul@f1+1
  4562  01137A  C194  F1D4         	movff	?___ftadd+2,___ftmul@f1+2
  4563  01137E  ECAA  F0A3         	call	___ftmul	;wreg free
  4564  011382  C1D2  F3F9         	movff	?___ftmul,_send_initial_update$5143
  4565  011386  C1D3  F3FA         	movff	?___ftmul+1,_send_initial_update$5143+1
  4566  01138A  C1D4  F3FB         	movff	?___ftmul+2,_send_initial_update$5143+2
  4567                           
  4568                           ;main.c: 558: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4569  01138E  C3F9  F1C7         	movff	_send_initial_update$5143,floor@x
  4570  011392  C3FA  F1C8         	movff	_send_initial_update$5143+1,floor@x+1
  4571  011396  C3FB  F1C9         	movff	_send_initial_update$5143+2,floor@x+2
  4572  01139A  EC08  F0AC         	call	_floor	;wreg free
  4573  01139E  C1C7  F3FC         	movff	?_floor,_send_initial_update$5144
  4574  0113A2  C1C8  F3FD         	movff	?_floor+1,_send_initial_update$5144+1
  4575  0113A6  C1C9  F3FE         	movff	?_floor+2,_send_initial_update$5144+2
  4576                           
  4577                           ;main.c: 558: m_var.value_byte2 = (uint8_t)floor(((tmp2 - floor(tmp2))*100));
  4578  0113AA  C3FC  F1AE         	movff	_send_initial_update$5144,___fttol@f1
  4579  0113AE  C3FD  F1AF         	movff	_send_initial_update$5144+1,___fttol@f1+1
  4580  0113B2  C3FE  F1B0         	movff	_send_initial_update$5144+2,___fttol@f1+2
  4581  0113B6  ECAA  F0A5         	call	___fttol	;wreg free
  4582  0113BA  0101               	movlb	1	; () banked
  4583  0113BC  51AE               	movf	?___fttol& (0+255),w,b
  4584  0113BE  0101               	movlb	1	; () banked
  4585  0113C0  6F7E               	movwf	(_m_var+5)& (0+255),b
  4586                           
  4587                           ; BSR set to: 1
  4588                           ;main.c: 559: m_var.writable = 0;
  4589  0113C2  0E00               	movlw	0
  4590  0113C4  0101               	movlb	1	; () banked
  4591  0113C6  6F80               	movwf	(_m_var+7)& (0+255),b
  4592                           
  4593                           ; BSR set to: 1
  4594                           ;main.c: 560: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  4595  0113C8  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  4596  0113CC  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  4597  0113D0  EE21  F079         	lfsr	2,_m_var
  4598  0113D4  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  4599  0113D8  0E09               	movlw	9
  4600  0113DA                     u17551:
  4601  0113DA  CFDB FFEB          	movff	plusw2,plusw0
  4602  0113DE  06E8               	decf	wreg,f,c
  4603  0113E0  E2FC               	bc	u17551
  4604  0113E2  EC63  F0AF         	call	_encode_ufixed16_variable	;wreg free
  4605  0113E6  0101               	movlb	1	; () banked
  4606  0113E8  6FFB               	movwf	??_send_initial_update& (0+255),b
  4607  0113EA  0101               	movlb	1	; () banked
  4608  0113EC  51FB               	movf	??_send_initial_update& (0+255),w,b
  4609  0113EE  0D01               	mullw	1
  4610  0113F0  50F3               	movf	prodl,w,c
  4611  0113F2  0101               	movlb	1	; () banked
  4612  0113F4  273A               	addwf	_p_buffer& (0+255),f,b
  4613  0113F6  50F4               	movf	prodh,w,c
  4614  0113F8  0101               	movlb	1	; () banked
  4615  0113FA  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  4616                           
  4617                           ; BSR set to: 1
  4618                           ;main.c: 562: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  4619  0113FC  0EE0               	movlw	low _m_buffer
  4620  0113FE  0103               	movlb	3	; () banked
  4621  011400  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  4622  011402  0E02               	movlw	high _m_buffer
  4623  011404  0103               	movlb	3	; () banked
  4624  011406  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  4625  011408  0EE0               	movlw	_m_buffer& (0+255)
  4626  01140A  0800               	sublw	0
  4627  01140C  0101               	movlb	1	; () banked
  4628  01140E  253A               	addwf	_p_buffer& (0+255),w,b
  4629  011410  0103               	movlb	3	; () banked
  4630  011412  6FE9               	movwf	do_UPDATE@size& (0+255),b
  4631  011414  0E01               	movlw	1
  4632  011416  0103               	movlb	3	; () banked
  4633  011418  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  4634  01141A  EC35  F0A2         	call	_do_UPDATE	;wreg free
  4635  01141E  0012               	return	
  4636  011420                     __end_of_send_initial_update:
  4637                           	opt stack 0
  4638                           tblptru	equ	0xFF8
  4639                           tblptrh	equ	0xFF7
  4640                           tblptrl	equ	0xFF6
  4641                           tablat	equ	0xFF5
  4642                           prodh	equ	0xFF4
  4643                           prodl	equ	0xFF3
  4644                           postinc0	equ	0xFEE
  4645                           plusw0	equ	0xFEB
  4646                           wreg	equ	0xFE8
  4647                           postdec1	equ	0xFE5
  4648                           fsr1h	equ	0xFE2
  4649                           fsr1l	equ	0xFE1
  4650                           indf2	equ	0xFDF
  4651                           postinc2	equ	0xFDE
  4652                           plusw2	equ	0xFDB
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function _floor *****************
  4658 ;; Defined at:
  4659 ;;		line 13 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  x               3   61[BANK1 ] unsigned char 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  i               3   64[BANK1 ] unsigned char 
  4664 ;;  expon           2   67[BANK1 ] int 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  3   61[BANK1 ] int 
  4667 ;; Registers used:
  4668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4674 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4675 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4677 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4678 ;;Total ram usage:        8 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:   11
  4681 ;; This function calls:
  4682 ;;		___altoft
  4683 ;;		___ftadd
  4684 ;;		___ftge
  4685 ;;		___fttol
  4686 ;;		_frexp
  4687 ;; This function is called by:
  4688 ;;		_send_initial_update
  4689 ;;		_send_periodical_update
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text4
  4694  015810                     __ptext4:
  4695                           	opt stack 0
  4696  015810                     _floor:
  4697                           	opt stack 18
  4698                           
  4699                           ;incstack = 0
  4700  015810  C1C7  F18A         	movff	floor@x,frexp@value
  4701  015814  C1C8  F18B         	movff	floor@x+1,frexp@value+1
  4702  015818  C1C9  F18C         	movff	floor@x+2,frexp@value+2
  4703  01581C  0ECD               	movlw	low floor@expon
  4704  01581E  0101               	movlb	1	; () banked
  4705  015820  6F8D               	movwf	frexp@eptr& (0+255),b
  4706  015822  0E01               	movlw	high floor@expon
  4707  015824  0101               	movlb	1	; () banked
  4708  015826  6F8E               	movwf	(frexp@eptr+1)& (0+255),b
  4709  015828  EC5F  F0B2         	call	_frexp	;wreg free
  4710  01582C  0101               	movlb	1	; () banked
  4711  01582E  AFCE               	btfss	(floor@expon+1)& (0+255),7,b
  4712  015830  D017               	goto	l13563
  4713                           
  4714                           ; BSR set to: 1
  4715  015832  0101               	movlb	1	; () banked
  4716  015834  AFC9               	btfss	(floor@x+2)& (0+255),7,b
  4717  015836  D00A               	goto	l13559
  4718                           
  4719                           ; BSR set to: 1
  4720  015838  0E00               	movlw	0
  4721  01583A  0101               	movlb	1	; () banked
  4722  01583C  6FC7               	movwf	?_floor& (0+255),b
  4723  01583E  0E80               	movlw	128
  4724  015840  0101               	movlb	1	; () banked
  4725  015842  6FC8               	movwf	(?_floor+1)& (0+255),b
  4726  015844  0EBF               	movlw	191
  4727  015846  0101               	movlb	1	; () banked
  4728  015848  6FC9               	movwf	(?_floor+2)& (0+255),b
  4729                           
  4730                           ; BSR set to: 1
  4731  01584A  0012               	return	
  4732  01584C                     l13559:
  4733                           
  4734                           ; BSR set to: 1
  4735  01584C  0E00               	movlw	0
  4736  01584E  0101               	movlb	1	; () banked
  4737  015850  6FC7               	movwf	?_floor& (0+255),b
  4738  015852  0E00               	movlw	0
  4739  015854  0101               	movlb	1	; () banked
  4740  015856  6FC8               	movwf	(?_floor+1)& (0+255),b
  4741  015858  0E00               	movlw	0
  4742  01585A  0101               	movlb	1	; () banked
  4743  01585C  6FC9               	movwf	(?_floor+2)& (0+255),b
  4744                           
  4745                           ; BSR set to: 1
  4746  01585E  0012               	return	
  4747  015860                     l13563:
  4748                           
  4749                           ; BSR set to: 1
  4750  015860  0101               	movlb	1	; () banked
  4751  015862  51CE               	movf	(floor@expon+1)& (0+255),w,b
  4752  015864  E105               	bnz	u16080
  4753  015866  0E15               	movlw	21
  4754  015868  0101               	movlb	1	; () banked
  4755  01586A  5DCD               	subwf	floor@expon& (0+255),w,b
  4756  01586C  A0D8               	btfss	status,0,c
  4757  01586E  D007               	goto	l13567
  4758  015870                     u16080:
  4759                           
  4760                           ; BSR set to: 1
  4761  015870  C1C7  F1C7         	movff	floor@x,?_floor
  4762  015874  C1C8  F1C8         	movff	floor@x+1,?_floor+1
  4763  015878  C1C9  F1C9         	movff	floor@x+2,?_floor+2
  4764  01587C  0012               	return	
  4765  01587E                     l13567:
  4766                           
  4767                           ; BSR set to: 1
  4768  01587E  C1C7  F1AE         	movff	floor@x,___fttol@f1
  4769  015882  C1C8  F1AF         	movff	floor@x+1,___fttol@f1+1
  4770  015886  C1C9  F1B0         	movff	floor@x+2,___fttol@f1+2
  4771  01588A  ECAA  F0A5         	call	___fttol	;wreg free
  4772  01588E  C1AE  F1BD         	movff	?___fttol,___altoft@c
  4773  015892  C1AF  F1BE         	movff	?___fttol+1,___altoft@c+1
  4774  015896  C1B0  F1BF         	movff	?___fttol+2,___altoft@c+2
  4775  01589A  C1B1  F1C0         	movff	?___fttol+3,___altoft@c+3
  4776  01589E  EC78  F0B1         	call	___altoft	;wreg free
  4777  0158A2  C1BD  F1CA         	movff	?___altoft,floor@i
  4778  0158A6  C1BE  F1CB         	movff	?___altoft+1,floor@i+1
  4779  0158AA  C1BF  F1CC         	movff	?___altoft+2,floor@i+2
  4780  0158AE  C1C7  F18A         	movff	floor@x,___ftge@ff1
  4781  0158B2  C1C8  F18B         	movff	floor@x+1,___ftge@ff1+1
  4782  0158B6  C1C9  F18C         	movff	floor@x+2,___ftge@ff1+2
  4783  0158BA  C1CA  F18D         	movff	floor@i,___ftge@ff2
  4784  0158BE  C1CB  F18E         	movff	floor@i+1,___ftge@ff2+1
  4785  0158C2  C1CC  F18F         	movff	floor@i+2,___ftge@ff2+2
  4786  0158C6  ECDD  F0AD         	call	___ftge	;wreg free
  4787  0158CA  0101               	movlb	1	; () banked
  4788  0158CC  B0D8               	btfsc	status,0,c
  4789  0158CE  D018               	goto	l1746
  4790                           
  4791                           ; BSR set to: 1
  4792  0158D0  C1CA  F192         	movff	floor@i,___ftadd@f1
  4793  0158D4  C1CB  F193         	movff	floor@i+1,___ftadd@f1+1
  4794  0158D8  C1CC  F194         	movff	floor@i+2,___ftadd@f1+2
  4795  0158DC  0E00               	movlw	0
  4796  0158DE  0101               	movlb	1	; () banked
  4797  0158E0  6F95               	movwf	___ftadd@f2& (0+255),b
  4798  0158E2  0E80               	movlw	128
  4799  0158E4  0101               	movlb	1	; () banked
  4800  0158E6  6F96               	movwf	(___ftadd@f2+1)& (0+255),b
  4801  0158E8  0EBF               	movlw	191
  4802  0158EA  0101               	movlb	1	; () banked
  4803  0158EC  6F97               	movwf	(___ftadd@f2+2)& (0+255),b
  4804  0158EE  EC9B  F099         	call	___ftadd	;wreg free
  4805  0158F2  C192  F1C7         	movff	?___ftadd,?_floor
  4806  0158F6  C193  F1C8         	movff	?___ftadd+1,?_floor+1
  4807  0158FA  C194  F1C9         	movff	?___ftadd+2,?_floor+2
  4808  0158FE  0012               	return	
  4809  015900                     l1746:
  4810                           
  4811                           ; BSR set to: 1
  4812  015900  C1CA  F1C7         	movff	floor@i,?_floor
  4813  015904  C1CB  F1C8         	movff	floor@i+1,?_floor+1
  4814  015908  C1CC  F1C9         	movff	floor@i+2,?_floor+2
  4815  01590C  0012               	return		;funcret
  4816  01590E                     __end_of_floor:
  4817                           	opt stack 0
  4818                           tblptru	equ	0xFF8
  4819                           tblptrh	equ	0xFF7
  4820                           tblptrl	equ	0xFF6
  4821                           tablat	equ	0xFF5
  4822                           prodh	equ	0xFF4
  4823                           prodl	equ	0xFF3
  4824                           postinc0	equ	0xFEE
  4825                           plusw0	equ	0xFEB
  4826                           wreg	equ	0xFE8
  4827                           postdec1	equ	0xFE5
  4828                           fsr1h	equ	0xFE2
  4829                           fsr1l	equ	0xFE1
  4830                           indf2	equ	0xFDF
  4831                           postinc2	equ	0xFDE
  4832                           plusw2	equ	0xFDB
  4833                           fsr2h	equ	0xFDA
  4834                           fsr2l	equ	0xFD9
  4835                           status	equ	0xFD8
  4836                           
  4837 ;; *************** function _frexp *****************
  4838 ;; Defined at:
  4839 ;;		line 254 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  value           3    0[BANK1 ] int 
  4842 ;;  eptr            2    3[BANK1 ] PTR int 
  4843 ;;		 -> floor@expon(2), 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  3    0[BANK1 ] PTR int 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4855 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4857 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4858 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4859 ;;Total ram usage:        7 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    9
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_floor
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text5
  4870  0164BE                     __ptext5:
  4871                           	opt stack 0
  4872  0164BE                     _frexp:
  4873                           	opt stack 19
  4874                           
  4875                           ;incstack = 0
  4876  0164BE  0101               	movlb	1	; () banked
  4877  0164C0  518A               	movf	frexp@value& (0+255),w,b
  4878  0164C2  0101               	movlb	1	; () banked
  4879  0164C4  118B               	iorwf	(frexp@value+1)& (0+255),w,b
  4880  0164C6  0101               	movlb	1	; () banked
  4881  0164C8  118C               	iorwf	(frexp@value+2)& (0+255),w,b
  4882  0164CA  A4D8               	btfss	status,2,c
  4883  0164CC  D009               	goto	l13011
  4884                           
  4885                           ; BSR set to: 1
  4886  0164CE  C18D  FFD9         	movff	frexp@eptr,fsr2l
  4887  0164D2  C18E  FFDA         	movff	frexp@eptr+1,fsr2h
  4888  0164D6  0E00               	movlw	0
  4889  0164D8  6EDE               	movwf	postinc2,c
  4890  0164DA  0E00               	movlw	0
  4891  0164DC  6EDD               	movwf	postdec2,c
  4892                           
  4893                           ; BSR set to: 1
  4894                           ;	Return value of _frexp is never used
  4895  0164DE  0012               	return	
  4896  0164E0                     l13011:
  4897                           
  4898                           ; BSR set to: 1
  4899  0164E0  0101               	movlb	1	; () banked
  4900  0164E2  518C               	movf	(frexp@value+2)& (0+255),w,b
  4901  0164E4  0B7F               	andlw	127
  4902  0164E6  0101               	movlb	1	; () banked
  4903  0164E8  6F8F               	movwf	??_frexp& (0+255),b
  4904  0164EA  6B90               	clrf	(??_frexp+1)& (0+255),b
  4905  0164EC  90D8               	bcf	status,0,c
  4906  0164EE  0101               	movlb	1	; () banked
  4907  0164F0  378F               	rlcf	??_frexp& (0+255),f,b
  4908  0164F2  3790               	rlcf	(??_frexp+1)& (0+255),f,b
  4909  0164F4  C18D  FFD9         	movff	frexp@eptr,fsr2l
  4910  0164F8  C18E  FFDA         	movff	frexp@eptr+1,fsr2h
  4911  0164FC  C18F  FFDE         	movff	??_frexp,postinc2
  4912  016500  C190  FFDD         	movff	??_frexp+1,postdec2
  4913  016504  0101               	movlb	1	; () banked
  4914  016506  AF8B               	btfss	(frexp@value+1)& (0+255),7,b
  4915  016508  D004               	goto	u15360
  4916  01650A  0101               	movlb	1	; () banked
  4917  01650C  6B8F               	clrf	??_frexp& (0+255),b
  4918  01650E  2B8F               	incf	??_frexp& (0+255),f,b
  4919  016510  D002               	goto	u15368
  4920  016512                     u15360:
  4921  016512  0101               	movlb	1	; () banked
  4922  016514  6B8F               	clrf	??_frexp& (0+255),b
  4923  016516                     u15368:
  4924  016516  0101               	movlb	1	; () banked
  4925  016518  518F               	movf	??_frexp& (0+255),w,b
  4926  01651A  C18D  FFD9         	movff	frexp@eptr,fsr2l
  4927  01651E  C18E  FFDA         	movff	frexp@eptr+1,fsr2h
  4928  016522  12DE               	iorwf	postinc2,f,c
  4929  016524  0E00               	movlw	0
  4930  016526  12DD               	iorwf	postdec2,f,c
  4931                           
  4932                           ; BSR set to: 1
  4933  016528  C18D  FFD9         	movff	frexp@eptr,fsr2l
  4934  01652C  C18E  FFDA         	movff	frexp@eptr+1,fsr2h
  4935  016530  0E82               	movlw	130
  4936  016532  26DE               	addwf	postinc2,f,c
  4937  016534  0EFF               	movlw	255
  4938  016536  22DD               	addwfc	postdec2,f,c
  4939                           
  4940                           ; BSR set to: 1
  4941  016538  0101               	movlb	1	; () banked
  4942  01653A  818C               	bsf	(frexp@value+2)& (0+255),0,b
  4943  01653C  838C               	bsf	(frexp@value+2)& (0+255),1,b
  4944  01653E  858C               	bsf	(frexp@value+2)& (0+255),2,b
  4945  016540  878C               	bsf	(frexp@value+2)& (0+255),3,b
  4946  016542  898C               	bsf	(frexp@value+2)& (0+255),4,b
  4947  016544  8B8C               	bsf	(frexp@value+2)& (0+255),5,b
  4948  016546  9D8C               	bcf	(frexp@value+2)& (0+255),6,b
  4949                           
  4950                           ; BSR set to: 1
  4951  016548  0101               	movlb	1	; () banked
  4952  01654A  9F8B               	bcf	(frexp@value+1)& (0+255),7,b
  4953  01654C  0012               	return	
  4954  01654E                     __end_of_frexp:
  4955                           	opt stack 0
  4956                           tblptru	equ	0xFF8
  4957                           tblptrh	equ	0xFF7
  4958                           tblptrl	equ	0xFF6
  4959                           tablat	equ	0xFF5
  4960                           prodh	equ	0xFF4
  4961                           prodl	equ	0xFF3
  4962                           postinc0	equ	0xFEE
  4963                           plusw0	equ	0xFEB
  4964                           wreg	equ	0xFE8
  4965                           postdec1	equ	0xFE5
  4966                           fsr1h	equ	0xFE2
  4967                           fsr1l	equ	0xFE1
  4968                           indf2	equ	0xFDF
  4969                           postinc2	equ	0xFDE
  4970                           postdec2	equ	0xFDD
  4971                           plusw2	equ	0xFDB
  4972                           fsr2h	equ	0xFDA
  4973                           fsr2l	equ	0xFD9
  4974                           status	equ	0xFD8
  4975                           
  4976 ;; *************** function ___ftge *****************
  4977 ;; Defined at:
  4978 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;  ff1             3    0[BANK1 ] float 
  4981 ;;  ff2             3    3[BANK1 ] float 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;		None               void
  4986 ;; Registers used:
  4987 ;;		wreg, status,2, status,0
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4993 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4995 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4996 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4997 ;;Total ram usage:        9 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    9
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_floor
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text6
  5008  015BBA                     __ptext6:
  5009                           	opt stack 0
  5010  015BBA                     ___ftge:
  5011                           	opt stack 19
  5012                           
  5013                           ; BSR set to: 1
  5014                           ;incstack = 0
  5015  015BBA  0101               	movlb	1	; () banked
  5016  015BBC  AF8C               	btfss	(___ftge@ff1+2)& (0+255),7,b
  5017  015BBE  D01D               	goto	l13025
  5018                           
  5019                           ; BSR set to: 1
  5020  015BC0  C18A  F190         	movff	___ftge@ff1,??___ftge
  5021  015BC4  C18B  F191         	movff	___ftge@ff1+1,??___ftge+1
  5022  015BC8  C18C  F192         	movff	___ftge@ff1+2,??___ftge+2
  5023  015BCC  0101               	movlb	1	; () banked
  5024  015BCE  1F90               	comf	??___ftge& (0+255),f,b
  5025  015BD0  1F91               	comf	(??___ftge+1)& (0+255),f,b
  5026  015BD2  1F92               	comf	(??___ftge+2)& (0+255),f,b
  5027  015BD4  2B90               	incf	??___ftge& (0+255),f,b
  5028  015BD6  0E00               	movlw	0
  5029  015BD8  2391               	addwfc	(??___ftge+1)& (0+255),f,b
  5030  015BDA  2392               	addwfc	(??___ftge+2)& (0+255),f,b
  5031  015BDC  0E00               	movlw	0
  5032  015BDE  0101               	movlb	1	; () banked
  5033  015BE0  2590               	addwf	??___ftge& (0+255),w,b
  5034  015BE2  0101               	movlb	1	; () banked
  5035  015BE4  6F8A               	movwf	___ftge@ff1& (0+255),b
  5036  015BE6  0E00               	movlw	0
  5037  015BE8  0101               	movlb	1	; () banked
  5038  015BEA  2191               	addwfc	(??___ftge+1)& (0+255),w,b
  5039  015BEC  0101               	movlb	1	; () banked
  5040  015BEE  6F8B               	movwf	(___ftge@ff1+1)& (0+255),b
  5041  015BF0  0E80               	movlw	128
  5042  015BF2  0101               	movlb	1	; () banked
  5043  015BF4  2192               	addwfc	(??___ftge+2)& (0+255),w,b
  5044  015BF6  0101               	movlb	1	; () banked
  5045  015BF8  6F8C               	movwf	(___ftge@ff1+2)& (0+255),b
  5046  015BFA                     l13025:
  5047                           
  5048                           ; BSR set to: 1
  5049  015BFA  0101               	movlb	1	; () banked
  5050  015BFC  AF8F               	btfss	(___ftge@ff2+2)& (0+255),7,b
  5051  015BFE  D01D               	goto	l13029
  5052                           
  5053                           ; BSR set to: 1
  5054  015C00  C18D  F190         	movff	___ftge@ff2,??___ftge
  5055  015C04  C18E  F191         	movff	___ftge@ff2+1,??___ftge+1
  5056  015C08  C18F  F192         	movff	___ftge@ff2+2,??___ftge+2
  5057  015C0C  0101               	movlb	1	; () banked
  5058  015C0E  1F90               	comf	??___ftge& (0+255),f,b
  5059  015C10  1F91               	comf	(??___ftge+1)& (0+255),f,b
  5060  015C12  1F92               	comf	(??___ftge+2)& (0+255),f,b
  5061  015C14  2B90               	incf	??___ftge& (0+255),f,b
  5062  015C16  0E00               	movlw	0
  5063  015C18  2391               	addwfc	(??___ftge+1)& (0+255),f,b
  5064  015C1A  2392               	addwfc	(??___ftge+2)& (0+255),f,b
  5065  015C1C  0E00               	movlw	0
  5066  015C1E  0101               	movlb	1	; () banked
  5067  015C20  2590               	addwf	??___ftge& (0+255),w,b
  5068  015C22  0101               	movlb	1	; () banked
  5069  015C24  6F8D               	movwf	___ftge@ff2& (0+255),b
  5070  015C26  0E00               	movlw	0
  5071  015C28  0101               	movlb	1	; () banked
  5072  015C2A  2191               	addwfc	(??___ftge+1)& (0+255),w,b
  5073  015C2C  0101               	movlb	1	; () banked
  5074  015C2E  6F8E               	movwf	(___ftge@ff2+1)& (0+255),b
  5075  015C30  0E80               	movlw	128
  5076  015C32  0101               	movlb	1	; () banked
  5077  015C34  2192               	addwfc	(??___ftge+2)& (0+255),w,b
  5078  015C36  0101               	movlb	1	; () banked
  5079  015C38  6F8F               	movwf	(___ftge@ff2+2)& (0+255),b
  5080  015C3A                     l13029:
  5081                           
  5082                           ; BSR set to: 1
  5083  015C3A  0E00               	movlw	0
  5084  015C3C  0101               	movlb	1	; () banked
  5085  015C3E  1B8A               	xorwf	___ftge@ff1& (0+255),f,b
  5086  015C40  0E00               	movlw	0
  5087  015C42  0101               	movlb	1	; () banked
  5088  015C44  1B8B               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5089  015C46  0E80               	movlw	128
  5090  015C48  0101               	movlb	1	; () banked
  5091  015C4A  1B8C               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5092                           
  5093                           ; BSR set to: 1
  5094  015C4C  0E00               	movlw	0
  5095  015C4E  0101               	movlb	1	; () banked
  5096  015C50  1B8D               	xorwf	___ftge@ff2& (0+255),f,b
  5097  015C52  0E00               	movlw	0
  5098  015C54  0101               	movlb	1	; () banked
  5099  015C56  1B8E               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5100  015C58  0E80               	movlw	128
  5101  015C5A  0101               	movlb	1	; () banked
  5102  015C5C  1B8F               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5103  015C5E  0101               	movlb	1	; () banked
  5104  015C60  518D               	movf	___ftge@ff2& (0+255),w,b
  5105  015C62  0101               	movlb	1	; () banked
  5106  015C64  5D8A               	subwf	___ftge@ff1& (0+255),w,b
  5107  015C66  0101               	movlb	1	; () banked
  5108  015C68  518E               	movf	(___ftge@ff2+1)& (0+255),w,b
  5109  015C6A  0101               	movlb	1	; () banked
  5110  015C6C  598B               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5111  015C6E  0101               	movlb	1	; () banked
  5112  015C70  518F               	movf	(___ftge@ff2+2)& (0+255),w,b
  5113  015C72  0101               	movlb	1	; () banked
  5114  015C74  598C               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5115  015C76  B0D8               	btfsc	status,0,c
  5116  015C78  D002               	goto	l13035
  5117                           
  5118                           ; BSR set to: 1
  5119  015C7A  90D8               	bcf	status,0,c
  5120  015C7C  0012               	return	
  5121  015C7E                     l13035:
  5122                           
  5123                           ; BSR set to: 1
  5124  015C7E  80D8               	bsf	status,0,c
  5125                           
  5126                           ; BSR set to: 1
  5127  015C80  0012               	return	
  5128  015C82                     __end_of___ftge:
  5129                           	opt stack 0
  5130                           tblptru	equ	0xFF8
  5131                           tblptrh	equ	0xFF7
  5132                           tblptrl	equ	0xFF6
  5133                           tablat	equ	0xFF5
  5134                           prodh	equ	0xFF4
  5135                           prodl	equ	0xFF3
  5136                           postinc0	equ	0xFEE
  5137                           plusw0	equ	0xFEB
  5138                           wreg	equ	0xFE8
  5139                           postdec1	equ	0xFE5
  5140                           fsr1h	equ	0xFE2
  5141                           fsr1l	equ	0xFE1
  5142                           indf2	equ	0xFDF
  5143                           postinc2	equ	0xFDE
  5144                           postdec2	equ	0xFDD
  5145                           plusw2	equ	0xFDB
  5146                           fsr2h	equ	0xFDA
  5147                           fsr2l	equ	0xFD9
  5148                           status	equ	0xFD8
  5149                           
  5150 ;; *************** function ___ftadd *****************
  5151 ;; Defined at:
  5152 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  f1              3    8[BANK1 ] float 
  5155 ;;  f2              3   11[BANK1 ] float 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  exp1            1   19[BANK1 ] unsigned char 
  5158 ;;  exp2            1   18[BANK1 ] unsigned char 
  5159 ;;  sign            1   17[BANK1 ] unsigned char 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  3    8[BANK1 ] float 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0, cstack
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5169 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5170 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5171 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5172 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5173 ;;Total ram usage:       12 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:   10
  5176 ;; This function calls:
  5177 ;;		___ftpack
  5178 ;; This function is called by:
  5179 ;;		_send_initial_update
  5180 ;;		_send_periodical_update
  5181 ;;		_floor
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text7
  5186  013336                     __ptext7:
  5187                           	opt stack 0
  5188  013336                     ___ftadd:
  5189                           	opt stack 18
  5190                           
  5191                           ; BSR set to: 1
  5192                           ;incstack = 0
  5193  013336  C194  F198         	movff	___ftadd@f1+2,??___ftadd
  5194  01333A  0101               	movlb	1	; () banked
  5195  01333C  6B99               	clrf	(??___ftadd+1)& (0+255),b
  5196  01333E  6B9A               	clrf	(??___ftadd+2)& (0+255),b
  5197  013340  0101               	movlb	1	; () banked
  5198  013342  3593               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  5199  013344  0101               	movlb	1	; () banked
  5200  013346  3798               	rlcf	??___ftadd& (0+255),f,b
  5201  013348  E301               	bnc	u15141
  5202  01334A  8199               	bsf	(??___ftadd+1)& (0+255),0,b
  5203  01334C                     u15141:
  5204  01334C  0101               	movlb	1	; () banked
  5205  01334E  5198               	movf	??___ftadd& (0+255),w,b
  5206  013350  0101               	movlb	1	; () banked
  5207  013352  6F9D               	movwf	___ftadd@exp1& (0+255),b
  5208  013354  C197  F198         	movff	___ftadd@f2+2,??___ftadd
  5209  013358  0101               	movlb	1	; () banked
  5210  01335A  6B99               	clrf	(??___ftadd+1)& (0+255),b
  5211  01335C  6B9A               	clrf	(??___ftadd+2)& (0+255),b
  5212  01335E  0101               	movlb	1	; () banked
  5213  013360  3596               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  5214  013362  0101               	movlb	1	; () banked
  5215  013364  3798               	rlcf	??___ftadd& (0+255),f,b
  5216  013366  E301               	bnc	u15151
  5217  013368  8199               	bsf	(??___ftadd+1)& (0+255),0,b
  5218  01336A                     u15151:
  5219  01336A  0101               	movlb	1	; () banked
  5220  01336C  5198               	movf	??___ftadd& (0+255),w,b
  5221  01336E  0101               	movlb	1	; () banked
  5222  013370  6F9C               	movwf	___ftadd@exp2& (0+255),b
  5223                           
  5224                           ; BSR set to: 1
  5225  013372  0101               	movlb	1	; () banked
  5226  013374  519D               	movf	___ftadd@exp1& (0+255),w,b
  5227  013376  0101               	movlb	1	; () banked
  5228  013378  B4D8               	btfsc	status,2,c
  5229  01337A  D011               	goto	l1783
  5230                           
  5231                           ; BSR set to: 1
  5232  01337C  0101               	movlb	1	; () banked
  5233  01337E  519C               	movf	___ftadd@exp2& (0+255),w,b
  5234  013380  0101               	movlb	1	; () banked
  5235  013382  5D9D               	subwf	___ftadd@exp1& (0+255),w,b
  5236  013384  B0D8               	btfsc	status,0,c
  5237  013386  D012               	goto	l12943
  5238                           
  5239                           ; BSR set to: 1
  5240  013388  0101               	movlb	1	; () banked
  5241  01338A  519D               	movf	___ftadd@exp1& (0+255),w,b
  5242  01338C  0800               	sublw	0
  5243  01338E  0101               	movlb	1	; () banked
  5244  013390  259C               	addwf	___ftadd@exp2& (0+255),w,b
  5245  013392  0101               	movlb	1	; () banked
  5246  013394  6F98               	movwf	??___ftadd& (0+255),b
  5247  013396  0E18               	movlw	24
  5248  013398  0101               	movlb	1	; () banked
  5249  01339A  6598               	cpfsgt	??___ftadd& (0+255),b
  5250  01339C  D007               	goto	l12943
  5251  01339E                     l1783:
  5252                           
  5253                           ; BSR set to: 1
  5254  01339E  C195  F192         	movff	___ftadd@f2,?___ftadd
  5255  0133A2  C196  F193         	movff	___ftadd@f2+1,?___ftadd+1
  5256  0133A6  C197  F194         	movff	___ftadd@f2+2,?___ftadd+2
  5257  0133AA  0012               	return	
  5258  0133AC                     l12943:
  5259                           
  5260                           ; BSR set to: 1
  5261  0133AC  0101               	movlb	1	; () banked
  5262  0133AE  519C               	movf	___ftadd@exp2& (0+255),w,b
  5263  0133B0  0101               	movlb	1	; () banked
  5264  0133B2  B4D8               	btfsc	status,2,c
  5265  0133B4  D011               	goto	l1787
  5266                           
  5267                           ; BSR set to: 1
  5268  0133B6  0101               	movlb	1	; () banked
  5269  0133B8  519D               	movf	___ftadd@exp1& (0+255),w,b
  5270  0133BA  0101               	movlb	1	; () banked
  5271  0133BC  5D9C               	subwf	___ftadd@exp2& (0+255),w,b
  5272  0133BE  B0D8               	btfsc	status,0,c
  5273  0133C0  D012               	goto	l12949
  5274                           
  5275                           ; BSR set to: 1
  5276  0133C2  0101               	movlb	1	; () banked
  5277  0133C4  519C               	movf	___ftadd@exp2& (0+255),w,b
  5278  0133C6  0800               	sublw	0
  5279  0133C8  0101               	movlb	1	; () banked
  5280  0133CA  259D               	addwf	___ftadd@exp1& (0+255),w,b
  5281  0133CC  0101               	movlb	1	; () banked
  5282  0133CE  6F98               	movwf	??___ftadd& (0+255),b
  5283  0133D0  0E18               	movlw	24
  5284  0133D2  0101               	movlb	1	; () banked
  5285  0133D4  6598               	cpfsgt	??___ftadd& (0+255),b
  5286  0133D6  D007               	goto	l12949
  5287  0133D8                     l1787:
  5288                           
  5289                           ; BSR set to: 1
  5290  0133D8  C192  F192         	movff	___ftadd@f1,?___ftadd
  5291  0133DC  C193  F193         	movff	___ftadd@f1+1,?___ftadd+1
  5292  0133E0  C194  F194         	movff	___ftadd@f1+2,?___ftadd+2
  5293  0133E4  0012               	return	
  5294  0133E6                     l12949:
  5295                           
  5296                           ; BSR set to: 1
  5297  0133E6  0E06               	movlw	6
  5298  0133E8  0101               	movlb	1	; () banked
  5299  0133EA  6F9B               	movwf	___ftadd@sign& (0+255),b
  5300                           
  5301                           ; BSR set to: 1
  5302  0133EC  0101               	movlb	1	; () banked
  5303  0133EE  AF94               	btfss	(___ftadd@f1+2)& (0+255),7,b
  5304  0133F0  D002               	goto	l12955
  5305                           
  5306                           ; BSR set to: 1
  5307  0133F2  0101               	movlb	1	; () banked
  5308  0133F4  8F9B               	bsf	___ftadd@sign& (0+255),7,b
  5309  0133F6                     l12955:
  5310                           
  5311                           ; BSR set to: 1
  5312  0133F6  0101               	movlb	1	; () banked
  5313  0133F8  AF97               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5314  0133FA  D002               	goto	l1789
  5315                           
  5316                           ; BSR set to: 1
  5317  0133FC  0101               	movlb	1	; () banked
  5318  0133FE  8D9B               	bsf	___ftadd@sign& (0+255),6,b
  5319  013400                     l1789:
  5320                           
  5321                           ; BSR set to: 1
  5322  013400  0101               	movlb	1	; () banked
  5323  013402  8F93               	bsf	(___ftadd@f1+1)& (0+255),7,b
  5324                           
  5325                           ; BSR set to: 1
  5326  013404  0EFF               	movlw	255
  5327  013406  0101               	movlb	1	; () banked
  5328  013408  1792               	andwf	___ftadd@f1& (0+255),f,b
  5329  01340A  0EFF               	movlw	255
  5330  01340C  0101               	movlb	1	; () banked
  5331  01340E  1793               	andwf	(___ftadd@f1+1)& (0+255),f,b
  5332  013410  0E00               	movlw	0
  5333  013412  0101               	movlb	1	; () banked
  5334  013414  1794               	andwf	(___ftadd@f1+2)& (0+255),f,b
  5335  013416  0101               	movlb	1	; () banked
  5336  013418  8F96               	bsf	(___ftadd@f2+1)& (0+255),7,b
  5337                           
  5338                           ; BSR set to: 1
  5339  01341A  0EFF               	movlw	255
  5340  01341C  0101               	movlb	1	; () banked
  5341  01341E  1795               	andwf	___ftadd@f2& (0+255),f,b
  5342  013420  0EFF               	movlw	255
  5343  013422  0101               	movlb	1	; () banked
  5344  013424  1796               	andwf	(___ftadd@f2+1)& (0+255),f,b
  5345  013426  0E00               	movlw	0
  5346  013428  0101               	movlb	1	; () banked
  5347  01342A  1797               	andwf	(___ftadd@f2+2)& (0+255),f,b
  5348                           
  5349                           ; BSR set to: 1
  5350  01342C  0101               	movlb	1	; () banked
  5351  01342E  519C               	movf	___ftadd@exp2& (0+255),w,b
  5352  013430  0101               	movlb	1	; () banked
  5353  013432  5D9D               	subwf	___ftadd@exp1& (0+255),w,b
  5354  013434  B0D8               	btfsc	status,0,c
  5355  013436  D025               	goto	l12975
  5356  013438                     l12965:
  5357                           
  5358                           ; BSR set to: 1
  5359  013438  0101               	movlb	1	; () banked
  5360  01343A  90D8               	bcf	status,0,c
  5361  01343C  3795               	rlcf	___ftadd@f2& (0+255),f,b
  5362  01343E  3796               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  5363  013440  3797               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  5364  013442  0101               	movlb	1	; () banked
  5365  013444  079C               	decf	___ftadd@exp2& (0+255),f,b
  5366                           
  5367                           ; BSR set to: 1
  5368  013446  0101               	movlb	1	; () banked
  5369  013448  519D               	movf	___ftadd@exp1& (0+255),w,b
  5370  01344A  0101               	movlb	1	; () banked
  5371  01344C  199C               	xorwf	___ftadd@exp2& (0+255),w,b
  5372  01344E  B4D8               	btfsc	status,2,c
  5373  013450  D011               	goto	l12973
  5374                           
  5375                           ; BSR set to: 1
  5376  013452  0101               	movlb	1	; () banked
  5377  013454  079B               	decf	___ftadd@sign& (0+255),f,b
  5378  013456  C19B  F198         	movff	___ftadd@sign,??___ftadd
  5379  01345A  0E07               	movlw	7
  5380  01345C  0101               	movlb	1	; () banked
  5381  01345E  1798               	andwf	??___ftadd& (0+255),f,b
  5382  013460  B4D8               	btfsc	status,2,c
  5383  013462  D008               	goto	l12973
  5384  013464  D7E9               	goto	l12965
  5385  013466                     l12971:
  5386                           
  5387                           ; BSR set to: 1
  5388  013466  0101               	movlb	1	; () banked
  5389  013468  90D8               	bcf	status,0,c
  5390  01346A  3394               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  5391  01346C  3393               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  5392  01346E  3392               	rrcf	___ftadd@f1& (0+255),f,b
  5393  013470  0101               	movlb	1	; () banked
  5394  013472  2B9D               	incf	___ftadd@exp1& (0+255),f,b
  5395  013474                     l12973:
  5396                           
  5397                           ; BSR set to: 1
  5398  013474  0101               	movlb	1	; () banked
  5399  013476  519C               	movf	___ftadd@exp2& (0+255),w,b
  5400  013478  0101               	movlb	1	; () banked
  5401  01347A  199D               	xorwf	___ftadd@exp1& (0+255),w,b
  5402  01347C  B4D8               	btfsc	status,2,c
  5403  01347E  D02B               	goto	l1798
  5404  013480  D7F2               	goto	l12971
  5405  013482                     l12975:
  5406                           
  5407                           ; BSR set to: 1
  5408  013482  0101               	movlb	1	; () banked
  5409  013484  519D               	movf	___ftadd@exp1& (0+255),w,b
  5410  013486  0101               	movlb	1	; () banked
  5411  013488  5D9C               	subwf	___ftadd@exp2& (0+255),w,b
  5412  01348A  B0D8               	btfsc	status,0,c
  5413  01348C  D024               	goto	l1798
  5414  01348E                     l12977:
  5415                           
  5416                           ; BSR set to: 1
  5417  01348E  0101               	movlb	1	; () banked
  5418  013490  90D8               	bcf	status,0,c
  5419  013492  3792               	rlcf	___ftadd@f1& (0+255),f,b
  5420  013494  3793               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  5421  013496  3794               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  5422  013498  0101               	movlb	1	; () banked
  5423  01349A  079D               	decf	___ftadd@exp1& (0+255),f,b
  5424                           
  5425                           ; BSR set to: 1
  5426  01349C  0101               	movlb	1	; () banked
  5427  01349E  519D               	movf	___ftadd@exp1& (0+255),w,b
  5428  0134A0  0101               	movlb	1	; () banked
  5429  0134A2  199C               	xorwf	___ftadd@exp2& (0+255),w,b
  5430  0134A4  B4D8               	btfsc	status,2,c
  5431  0134A6  D011               	goto	l12985
  5432                           
  5433                           ; BSR set to: 1
  5434  0134A8  0101               	movlb	1	; () banked
  5435  0134AA  079B               	decf	___ftadd@sign& (0+255),f,b
  5436  0134AC  C19B  F198         	movff	___ftadd@sign,??___ftadd
  5437  0134B0  0E07               	movlw	7
  5438  0134B2  0101               	movlb	1	; () banked
  5439  0134B4  1798               	andwf	??___ftadd& (0+255),f,b
  5440  0134B6  B4D8               	btfsc	status,2,c
  5441  0134B8  D008               	goto	l12985
  5442  0134BA  D7E9               	goto	l12977
  5443  0134BC                     l12983:
  5444                           
  5445                           ; BSR set to: 1
  5446  0134BC  0101               	movlb	1	; () banked
  5447  0134BE  90D8               	bcf	status,0,c
  5448  0134C0  3397               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  5449  0134C2  3396               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  5450  0134C4  3395               	rrcf	___ftadd@f2& (0+255),f,b
  5451  0134C6  0101               	movlb	1	; () banked
  5452  0134C8  2B9C               	incf	___ftadd@exp2& (0+255),f,b
  5453  0134CA                     l12985:
  5454                           
  5455                           ; BSR set to: 1
  5456  0134CA  0101               	movlb	1	; () banked
  5457  0134CC  519C               	movf	___ftadd@exp2& (0+255),w,b
  5458  0134CE  0101               	movlb	1	; () banked
  5459  0134D0  199D               	xorwf	___ftadd@exp1& (0+255),w,b
  5460  0134D2  A4D8               	btfss	status,2,c
  5461  0134D4  D7F3               	goto	l12983
  5462  0134D6                     l1798:
  5463                           
  5464                           ; BSR set to: 1
  5465  0134D6  0101               	movlb	1	; () banked
  5466  0134D8  AF9B               	btfss	___ftadd@sign& (0+255),7,b
  5467  0134DA  D012               	goto	l1807
  5468                           
  5469                           ; BSR set to: 1
  5470  0134DC  0EFF               	movlw	255
  5471  0134DE  0101               	movlb	1	; () banked
  5472  0134E0  1B92               	xorwf	___ftadd@f1& (0+255),f,b
  5473  0134E2  0EFF               	movlw	255
  5474  0134E4  0101               	movlb	1	; () banked
  5475  0134E6  1B93               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  5476  0134E8  0EFF               	movlw	255
  5477  0134EA  0101               	movlb	1	; () banked
  5478  0134EC  1B94               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  5479  0134EE  0E01               	movlw	1
  5480  0134F0  0101               	movlb	1	; () banked
  5481  0134F2  2792               	addwf	___ftadd@f1& (0+255),f,b
  5482  0134F4  0E00               	movlw	0
  5483  0134F6  0101               	movlb	1	; () banked
  5484  0134F8  2393               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  5485  0134FA  0E00               	movlw	0
  5486  0134FC  0101               	movlb	1	; () banked
  5487  0134FE  2394               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  5488  013500                     l1807:
  5489                           
  5490                           ; BSR set to: 1
  5491  013500  0101               	movlb	1	; () banked
  5492  013502  AD9B               	btfss	___ftadd@sign& (0+255),6,b
  5493  013504  D012               	goto	l12991
  5494                           
  5495                           ; BSR set to: 1
  5496  013506  0EFF               	movlw	255
  5497  013508  0101               	movlb	1	; () banked
  5498  01350A  1B95               	xorwf	___ftadd@f2& (0+255),f,b
  5499  01350C  0EFF               	movlw	255
  5500  01350E  0101               	movlb	1	; () banked
  5501  013510  1B96               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5502  013512  0EFF               	movlw	255
  5503  013514  0101               	movlb	1	; () banked
  5504  013516  1B97               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5505  013518  0E01               	movlw	1
  5506  01351A  0101               	movlb	1	; () banked
  5507  01351C  2795               	addwf	___ftadd@f2& (0+255),f,b
  5508  01351E  0E00               	movlw	0
  5509  013520  0101               	movlb	1	; () banked
  5510  013522  2396               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5511  013524  0E00               	movlw	0
  5512  013526  0101               	movlb	1	; () banked
  5513  013528  2397               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5514  01352A                     l12991:
  5515                           
  5516                           ; BSR set to: 1
  5517  01352A  0E00               	movlw	0
  5518  01352C  0101               	movlb	1	; () banked
  5519  01352E  6F9B               	movwf	___ftadd@sign& (0+255),b
  5520                           
  5521                           ; BSR set to: 1
  5522  013530  0101               	movlb	1	; () banked
  5523  013532  5192               	movf	___ftadd@f1& (0+255),w,b
  5524  013534  0101               	movlb	1	; () banked
  5525  013536  2795               	addwf	___ftadd@f2& (0+255),f,b
  5526  013538  0101               	movlb	1	; () banked
  5527  01353A  5193               	movf	(___ftadd@f1+1)& (0+255),w,b
  5528  01353C  0101               	movlb	1	; () banked
  5529  01353E  2396               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5530  013540  0101               	movlb	1	; () banked
  5531  013542  5194               	movf	(___ftadd@f1+2)& (0+255),w,b
  5532  013544  0101               	movlb	1	; () banked
  5533  013546  2397               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5534                           
  5535                           ; BSR set to: 1
  5536  013548  0101               	movlb	1	; () banked
  5537  01354A  AF97               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5538  01354C  D015               	goto	l13001
  5539                           
  5540                           ; BSR set to: 1
  5541  01354E  0EFF               	movlw	255
  5542  013550  0101               	movlb	1	; () banked
  5543  013552  1B95               	xorwf	___ftadd@f2& (0+255),f,b
  5544  013554  0EFF               	movlw	255
  5545  013556  0101               	movlb	1	; () banked
  5546  013558  1B96               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5547  01355A  0EFF               	movlw	255
  5548  01355C  0101               	movlb	1	; () banked
  5549  01355E  1B97               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5550  013560  0E01               	movlw	1
  5551  013562  0101               	movlb	1	; () banked
  5552  013564  2795               	addwf	___ftadd@f2& (0+255),f,b
  5553  013566  0E00               	movlw	0
  5554  013568  0101               	movlb	1	; () banked
  5555  01356A  2396               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5556  01356C  0E00               	movlw	0
  5557  01356E  0101               	movlb	1	; () banked
  5558  013570  2397               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5559                           
  5560                           ; BSR set to: 1
  5561  013572  0E01               	movlw	1
  5562  013574  0101               	movlb	1	; () banked
  5563  013576  6F9B               	movwf	___ftadd@sign& (0+255),b
  5564  013578                     l13001:
  5565                           
  5566                           ; BSR set to: 1
  5567  013578  C195  F18A         	movff	___ftadd@f2,___ftpack@arg
  5568  01357C  C196  F18B         	movff	___ftadd@f2+1,___ftpack@arg+1
  5569  013580  C197  F18C         	movff	___ftadd@f2+2,___ftpack@arg+2
  5570  013584  C19D  F18D         	movff	___ftadd@exp1,___ftpack@exp
  5571  013588  C19B  F18E         	movff	___ftadd@sign,___ftpack@sign
  5572  01358C  ECFD  F0AA         	call	___ftpack	;wreg free
  5573  013590  C18A  F192         	movff	?___ftpack,?___ftadd
  5574  013594  C18B  F193         	movff	?___ftpack+1,?___ftadd+1
  5575  013598  C18C  F194         	movff	?___ftpack+2,?___ftadd+2
  5576  01359C  0012               	return	
  5577  01359E                     __end_of___ftadd:
  5578                           	opt stack 0
  5579                           tblptru	equ	0xFF8
  5580                           tblptrh	equ	0xFF7
  5581                           tblptrl	equ	0xFF6
  5582                           tablat	equ	0xFF5
  5583                           prodh	equ	0xFF4
  5584                           prodl	equ	0xFF3
  5585                           postinc0	equ	0xFEE
  5586                           plusw0	equ	0xFEB
  5587                           wreg	equ	0xFE8
  5588                           postdec1	equ	0xFE5
  5589                           fsr1h	equ	0xFE2
  5590                           fsr1l	equ	0xFE1
  5591                           indf2	equ	0xFDF
  5592                           postinc2	equ	0xFDE
  5593                           postdec2	equ	0xFDD
  5594                           plusw2	equ	0xFDB
  5595                           fsr2h	equ	0xFDA
  5596                           fsr2l	equ	0xFD9
  5597                           status	equ	0xFD8
  5598                           
  5599 ;; *************** function ___altoft *****************
  5600 ;; Defined at:
  5601 ;;		line 42 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  c               4   51[BANK1 ] long 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  sign            1   60[BANK1 ] unsigned char 
  5606 ;;  exp             1   59[BANK1 ] unsigned char 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  3   51[BANK1 ] float 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5616 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5617 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5618 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5619 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5620 ;;Total ram usage:       10 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; Hardware stack levels required when called:   10
  5623 ;; This function calls:
  5624 ;;		___ftpack
  5625 ;; This function is called by:
  5626 ;;		_floor
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text8
  5631  0162F0                     __ptext8:
  5632                           	opt stack 0
  5633  0162F0                     ___altoft:
  5634                           	opt stack 18
  5635                           
  5636                           ;incstack = 0
  5637  0162F0  0E00               	movlw	0
  5638  0162F2  0101               	movlb	1	; () banked
  5639  0162F4  6FC6               	movwf	___altoft@sign& (0+255),b
  5640  0162F6  0E8E               	movlw	142
  5641  0162F8  0101               	movlb	1	; () banked
  5642  0162FA  6FC5               	movwf	___altoft@exp& (0+255),b
  5643                           
  5644                           ; BSR set to: 1
  5645  0162FC  0101               	movlb	1	; () banked
  5646  0162FE  AFC0               	btfss	(___altoft@c+3)& (0+255),7,b
  5647  016300  D015               	goto	l12929
  5648                           
  5649                           ; BSR set to: 1
  5650  016302  0101               	movlb	1	; () banked
  5651  016304  1FC0               	comf	(___altoft@c+3)& (0+255),f,b
  5652  016306  1FBF               	comf	(___altoft@c+2)& (0+255),f,b
  5653  016308  1FBE               	comf	(___altoft@c+1)& (0+255),f,b
  5654  01630A  6DBD               	negf	___altoft@c& (0+255),b
  5655  01630C  0E00               	movlw	0
  5656  01630E  23BE               	addwfc	(___altoft@c+1)& (0+255),f,b
  5657  016310  23BF               	addwfc	(___altoft@c+2)& (0+255),f,b
  5658  016312  23C0               	addwfc	(___altoft@c+3)& (0+255),f,b
  5659                           
  5660                           ; BSR set to: 1
  5661  016314  0E01               	movlw	1
  5662  016316  0101               	movlb	1	; () banked
  5663  016318  6FC6               	movwf	___altoft@sign& (0+255),b
  5664                           
  5665                           ; BSR set to: 1
  5666  01631A  D008               	goto	l12929
  5667  01631C                     l12927:
  5668                           
  5669                           ; BSR set to: 1
  5670  01631C  0101               	movlb	1	; () banked
  5671  01631E  90D8               	bcf	status,0,c
  5672  016320  33C0               	rrcf	(___altoft@c+3)& (0+255),f,b
  5673  016322  33BF               	rrcf	(___altoft@c+2)& (0+255),f,b
  5674  016324  33BE               	rrcf	(___altoft@c+1)& (0+255),f,b
  5675  016326  33BD               	rrcf	___altoft@c& (0+255),f,b
  5676  016328  0101               	movlb	1	; () banked
  5677  01632A  2BC5               	incf	___altoft@exp& (0+255),f,b
  5678  01632C                     l12929:
  5679                           
  5680                           ; BSR set to: 1
  5681  01632C  0E00               	movlw	0
  5682  01632E  0101               	movlb	1	; () banked
  5683  016330  15BD               	andwf	___altoft@c& (0+255),w,b
  5684  016332  0101               	movlb	1	; () banked
  5685  016334  6FC1               	movwf	??___altoft& (0+255),b
  5686  016336  0E00               	movlw	0
  5687  016338  0101               	movlb	1	; () banked
  5688  01633A  15BE               	andwf	(___altoft@c+1)& (0+255),w,b
  5689  01633C  0101               	movlb	1	; () banked
  5690  01633E  6FC2               	movwf	(??___altoft+1)& (0+255),b
  5691  016340  0E00               	movlw	0
  5692  016342  0101               	movlb	1	; () banked
  5693  016344  15BF               	andwf	(___altoft@c+2)& (0+255),w,b
  5694  016346  0101               	movlb	1	; () banked
  5695  016348  6FC3               	movwf	(??___altoft+2)& (0+255),b
  5696  01634A  0EFF               	movlw	255
  5697  01634C  0101               	movlb	1	; () banked
  5698  01634E  15C0               	andwf	(___altoft@c+3)& (0+255),w,b
  5699  016350  0101               	movlb	1	; () banked
  5700  016352  6FC4               	movwf	(??___altoft+3)& (0+255),b
  5701  016354  0101               	movlb	1	; () banked
  5702  016356  51C1               	movf	??___altoft& (0+255),w,b
  5703  016358  0101               	movlb	1	; () banked
  5704  01635A  11C2               	iorwf	(??___altoft+1)& (0+255),w,b
  5705  01635C  0101               	movlb	1	; () banked
  5706  01635E  11C3               	iorwf	(??___altoft+2)& (0+255),w,b
  5707  016360  0101               	movlb	1	; () banked
  5708  016362  11C4               	iorwf	(??___altoft+3)& (0+255),w,b
  5709  016364  A4D8               	btfss	status,2,c
  5710  016366  D7DA               	goto	l12927
  5711                           
  5712                           ; BSR set to: 1
  5713                           
  5714                           ; BSR set to: 1
  5715  016368  C1BD  F18A         	movff	___altoft@c,___ftpack@arg
  5716  01636C  C1BE  F18B         	movff	___altoft@c+1,___ftpack@arg+1
  5717  016370  C1BF  F18C         	movff	___altoft@c+2,___ftpack@arg+2
  5718  016374  C1C5  F18D         	movff	___altoft@exp,___ftpack@exp
  5719  016378  C1C6  F18E         	movff	___altoft@sign,___ftpack@sign
  5720  01637C  ECFD  F0AA         	call	___ftpack	;wreg free
  5721  016380  C18A  F1BD         	movff	?___ftpack,?___altoft
  5722  016384  C18B  F1BE         	movff	?___ftpack+1,?___altoft+1
  5723  016388  C18C  F1BF         	movff	?___ftpack+2,?___altoft+2
  5724  01638C  0012               	return	
  5725  01638E                     __end_of___altoft:
  5726                           	opt stack 0
  5727                           tblptru	equ	0xFF8
  5728                           tblptrh	equ	0xFF7
  5729                           tblptrl	equ	0xFF6
  5730                           tablat	equ	0xFF5
  5731                           prodh	equ	0xFF4
  5732                           prodl	equ	0xFF3
  5733                           postinc0	equ	0xFEE
  5734                           plusw0	equ	0xFEB
  5735                           wreg	equ	0xFE8
  5736                           postdec1	equ	0xFE5
  5737                           fsr1h	equ	0xFE2
  5738                           fsr1l	equ	0xFE1
  5739                           indf2	equ	0xFDF
  5740                           postinc2	equ	0xFDE
  5741                           postdec2	equ	0xFDD
  5742                           plusw2	equ	0xFDB
  5743                           fsr2h	equ	0xFDA
  5744                           fsr2l	equ	0xFD9
  5745                           status	equ	0xFD8
  5746                           
  5747 ;; *************** function ___lltoft *****************
  5748 ;; Defined at:
  5749 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  c               4   12[BANK1 ] unsigned long 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  exp             1   20[BANK1 ] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  3   12[BANK1 ] float 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5763 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5764 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5765 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5766 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5767 ;;Total ram usage:        9 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:   10
  5770 ;; This function calls:
  5771 ;;		___ftpack
  5772 ;; This function is called by:
  5773 ;;		_send_initial_update
  5774 ;;		_send_periodical_update
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text9
  5779  016658                     __ptext9:
  5780                           	opt stack 0
  5781  016658                     ___lltoft:
  5782                           	opt stack 19
  5783                           
  5784                           ;incstack = 0
  5785  016658  0E8E               	movlw	142
  5786  01665A  0101               	movlb	1	; () banked
  5787  01665C  6F9E               	movwf	___lltoft@exp& (0+255),b
  5788  01665E  D008               	goto	l13747
  5789  016660                     l13745:
  5790                           
  5791                           ; BSR set to: 1
  5792  016660  0101               	movlb	1	; () banked
  5793  016662  90D8               	bcf	status,0,c
  5794  016664  3399               	rrcf	(___lltoft@c+3)& (0+255),f,b
  5795  016666  3398               	rrcf	(___lltoft@c+2)& (0+255),f,b
  5796  016668  3397               	rrcf	(___lltoft@c+1)& (0+255),f,b
  5797  01666A  3396               	rrcf	___lltoft@c& (0+255),f,b
  5798  01666C  0101               	movlb	1	; () banked
  5799  01666E  2B9E               	incf	___lltoft@exp& (0+255),f,b
  5800  016670                     l13747:
  5801                           
  5802                           ; BSR set to: 1
  5803  016670  0E00               	movlw	0
  5804  016672  0101               	movlb	1	; () banked
  5805  016674  1596               	andwf	___lltoft@c& (0+255),w,b
  5806  016676  0101               	movlb	1	; () banked
  5807  016678  6F9A               	movwf	??___lltoft& (0+255),b
  5808  01667A  0E00               	movlw	0
  5809  01667C  0101               	movlb	1	; () banked
  5810  01667E  1597               	andwf	(___lltoft@c+1)& (0+255),w,b
  5811  016680  0101               	movlb	1	; () banked
  5812  016682  6F9B               	movwf	(??___lltoft+1)& (0+255),b
  5813  016684  0E00               	movlw	0
  5814  016686  0101               	movlb	1	; () banked
  5815  016688  1598               	andwf	(___lltoft@c+2)& (0+255),w,b
  5816  01668A  0101               	movlb	1	; () banked
  5817  01668C  6F9C               	movwf	(??___lltoft+2)& (0+255),b
  5818  01668E  0EFF               	movlw	255
  5819  016690  0101               	movlb	1	; () banked
  5820  016692  1599               	andwf	(___lltoft@c+3)& (0+255),w,b
  5821  016694  0101               	movlb	1	; () banked
  5822  016696  6F9D               	movwf	(??___lltoft+3)& (0+255),b
  5823  016698  0101               	movlb	1	; () banked
  5824  01669A  519A               	movf	??___lltoft& (0+255),w,b
  5825  01669C  0101               	movlb	1	; () banked
  5826  01669E  119B               	iorwf	(??___lltoft+1)& (0+255),w,b
  5827  0166A0  0101               	movlb	1	; () banked
  5828  0166A2  119C               	iorwf	(??___lltoft+2)& (0+255),w,b
  5829  0166A4  0101               	movlb	1	; () banked
  5830  0166A6  119D               	iorwf	(??___lltoft+3)& (0+255),w,b
  5831  0166A8  A4D8               	btfss	status,2,c
  5832  0166AA  D7DA               	goto	l13745
  5833                           
  5834                           ; BSR set to: 1
  5835                           
  5836                           ; BSR set to: 1
  5837  0166AC  C196  F18A         	movff	___lltoft@c,___ftpack@arg
  5838  0166B0  C197  F18B         	movff	___lltoft@c+1,___ftpack@arg+1
  5839  0166B4  C198  F18C         	movff	___lltoft@c+2,___ftpack@arg+2
  5840  0166B8  C19E  F18D         	movff	___lltoft@exp,___ftpack@exp
  5841  0166BC  0E00               	movlw	0
  5842  0166BE  0101               	movlb	1	; () banked
  5843  0166C0  6F8E               	movwf	___ftpack@sign& (0+255),b
  5844  0166C2  ECFD  F0AA         	call	___ftpack	;wreg free
  5845  0166C6  C18A  F196         	movff	?___ftpack,?___lltoft
  5846  0166CA  C18B  F197         	movff	?___ftpack+1,?___lltoft+1
  5847  0166CE  C18C  F198         	movff	?___ftpack+2,?___lltoft+2
  5848  0166D2  0012               	return	
  5849  0166D4                     __end_of___lltoft:
  5850                           	opt stack 0
  5851                           tblptru	equ	0xFF8
  5852                           tblptrh	equ	0xFF7
  5853                           tblptrl	equ	0xFF6
  5854                           tablat	equ	0xFF5
  5855                           prodh	equ	0xFF4
  5856                           prodl	equ	0xFF3
  5857                           postinc0	equ	0xFEE
  5858                           plusw0	equ	0xFEB
  5859                           wreg	equ	0xFE8
  5860                           postdec1	equ	0xFE5
  5861                           fsr1h	equ	0xFE2
  5862                           fsr1l	equ	0xFE1
  5863                           indf2	equ	0xFDF
  5864                           postinc2	equ	0xFDE
  5865                           postdec2	equ	0xFDD
  5866                           plusw2	equ	0xFDB
  5867                           fsr2h	equ	0xFDA
  5868                           fsr2l	equ	0xFD9
  5869                           status	equ	0xFD8
  5870                           
  5871 ;; *************** function ___ftneg *****************
  5872 ;; Defined at:
  5873 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  f1              3   69[BANK1 ] float 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;		None
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  3   69[BANK1 ] float 
  5880 ;; Registers used:
  5881 ;;		wreg, status,2, status,0
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5887 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5890 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5891 ;;Total ram usage:        3 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:    9
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		_send_initial_update
  5898 ;;		_send_periodical_update
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text10
  5903  016E0E                     __ptext10:
  5904                           	opt stack 0
  5905  016E0E                     ___ftneg:
  5906                           	opt stack 20
  5907                           
  5908                           ;incstack = 0
  5909  016E0E  0101               	movlb	1	; () banked
  5910  016E10  51CF               	movf	___ftneg@f1& (0+255),w,b
  5911  016E12  0101               	movlb	1	; () banked
  5912  016E14  11D0               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  5913  016E16  0101               	movlb	1	; () banked
  5914  016E18  11D1               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  5915  016E1A  B4D8               	btfsc	status,2,c
  5916  016E1C  D009               	goto	l1840
  5917                           
  5918                           ; BSR set to: 1
  5919  016E1E  0E00               	movlw	0
  5920  016E20  0101               	movlb	1	; () banked
  5921  016E22  1BCF               	xorwf	___ftneg@f1& (0+255),f,b
  5922  016E24  0E00               	movlw	0
  5923  016E26  0101               	movlb	1	; () banked
  5924  016E28  1BD0               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  5925  016E2A  0E80               	movlw	128
  5926  016E2C  0101               	movlb	1	; () banked
  5927  016E2E  1BD1               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  5928  016E30                     l1840:
  5929                           
  5930                           ; BSR set to: 1
  5931  016E30  C1CF  F1CF         	movff	___ftneg@f1,?___ftneg
  5932  016E34  C1D0  F1D0         	movff	___ftneg@f1+1,?___ftneg+1
  5933  016E38  C1D1  F1D1         	movff	___ftneg@f1+2,?___ftneg+2
  5934                           
  5935                           ; BSR set to: 1
  5936  016E3C  0012               	return		;funcret
  5937  016E3E                     __end_of___ftneg:
  5938                           	opt stack 0
  5939                           tblptru	equ	0xFF8
  5940                           tblptrh	equ	0xFF7
  5941                           tblptrl	equ	0xFF6
  5942                           tablat	equ	0xFF5
  5943                           prodh	equ	0xFF4
  5944                           prodl	equ	0xFF3
  5945                           postinc0	equ	0xFEE
  5946                           plusw0	equ	0xFEB
  5947                           wreg	equ	0xFE8
  5948                           postdec1	equ	0xFE5
  5949                           fsr1h	equ	0xFE2
  5950                           fsr1l	equ	0xFE1
  5951                           indf2	equ	0xFDF
  5952                           postinc2	equ	0xFDE
  5953                           postdec2	equ	0xFDD
  5954                           plusw2	equ	0xFDB
  5955                           fsr2h	equ	0xFDA
  5956                           fsr2l	equ	0xFD9
  5957                           status	equ	0xFD8
  5958                           
  5959 ;; *************** function _security_force_key_update *****************
  5960 ;; Defined at:
  5961 ;;		line 71 in file "src/miwi/drv_mrf_miwi_89xa.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  i               2    0[BANK1 ] int 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;		None               void
  5968 ;; Registers used:
  5969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5976 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5978 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;Total ram usage:        2 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    9
  5982 ;; This function calls:
  5983 ;;		Nothing
  5984 ;; This function is called by:
  5985 ;;		_main
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text11
  5990  016BC4                     __ptext11:
  5991                           	opt stack 0
  5992  016BC4                     _security_force_key_update:
  5993                           	opt stack 21
  5994                           
  5995                           ;drv_mrf_miwi_89xa.c: 73: for(int i = 0; i < 8; i++)
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;incstack = 0
  5999  016BC4  0E00               	movlw	0
  6000  016BC6  0101               	movlb	1	; () banked
  6001  016BC8  6F8B               	movwf	(security_force_key_update@i+1)& (0+255),b
  6002  016BCA  0E00               	movlw	0
  6003  016BCC  6F8A               	movwf	security_force_key_update@i& (0+255),b
  6004  016BCE                     l13975:
  6005                           
  6006                           ; BSR set to: 1
  6007  016BCE  0101               	movlb	1	; () banked
  6008  016BD0  BF8B               	btfsc	(security_force_key_update@i+1)& (0+255),7,b
  6009  016BD2  D008               	goto	l13979
  6010  016BD4  0101               	movlb	1	; () banked
  6011  016BD6  518B               	movf	(security_force_key_update@i+1)& (0+255),w,b
  6012  016BD8  E11B               	bnz	l237
  6013  016BDA  0E08               	movlw	8
  6014  016BDC  0101               	movlb	1	; () banked
  6015  016BDE  5D8A               	subwf	security_force_key_update@i& (0+255),w,b
  6016  016BE0  B0D8               	btfsc	status,0,c
  6017  016BE2  0012               	return	
  6018  016BE4                     l13979:
  6019                           
  6020                           ; BSR set to: 1
  6021                           ;drv_mrf_miwi_89xa.c: 74: {
  6022                           ;drv_mrf_miwi_89xa.c: 75: key[i] = mySecurityKey[i];
  6023  016BE4  0EA3               	movlw	low _mySecurityKey
  6024  016BE6  0101               	movlb	1	; () banked
  6025  016BE8  258A               	addwf	security_force_key_update@i& (0+255),w,b
  6026  016BEA  6ED9               	movwf	fsr2l,c
  6027  016BEC  0E00               	movlw	high _mySecurityKey
  6028  016BEE  0101               	movlb	1	; () banked
  6029  016BF0  218B               	addwfc	(security_force_key_update@i+1)& (0+255),w,b
  6030  016BF2  6EDA               	movwf	fsr2h,c
  6031  016BF4  0EC0               	movlw	low _key
  6032  016BF6  0101               	movlb	1	; () banked
  6033  016BF8  258A               	addwf	security_force_key_update@i& (0+255),w,b
  6034  016BFA  6EE1               	movwf	fsr1l,c
  6035  016BFC  0E00               	movlw	high _key
  6036  016BFE  0101               	movlb	1	; () banked
  6037  016C00  218B               	addwfc	(security_force_key_update@i+1)& (0+255),w,b
  6038  016C02  6EE2               	movwf	fsr1h,c
  6039  016C04  CFDF FFE7          	movff	indf2,indf1
  6040                           
  6041                           ; BSR set to: 1
  6042  016C08  0101               	movlb	1	; () banked
  6043  016C0A  4B8A               	infsnz	security_force_key_update@i& (0+255),f,b
  6044  016C0C  2B8B               	incf	(security_force_key_update@i+1)& (0+255),f,b
  6045  016C0E  D7DF               	goto	l13975
  6046  016C10                     l237:
  6047                           
  6048                           ; BSR set to: 1
  6049  016C10  0012               	return		;funcret
  6050  016C12                     __end_of_security_force_key_update:
  6051                           	opt stack 0
  6052                           tblptru	equ	0xFF8
  6053                           tblptrh	equ	0xFF7
  6054                           tblptrl	equ	0xFF6
  6055                           tablat	equ	0xFF5
  6056                           prodh	equ	0xFF4
  6057                           prodl	equ	0xFF3
  6058                           postinc0	equ	0xFEE
  6059                           plusw0	equ	0xFEB
  6060                           wreg	equ	0xFE8
  6061                           indf1	equ	0xFE7
  6062                           postdec1	equ	0xFE5
  6063                           fsr1h	equ	0xFE2
  6064                           fsr1l	equ	0xFE1
  6065                           indf2	equ	0xFDF
  6066                           postinc2	equ	0xFDE
  6067                           postdec2	equ	0xFDD
  6068                           plusw2	equ	0xFDB
  6069                           fsr2h	equ	0xFDA
  6070                           fsr2l	equ	0xFD9
  6071                           status	equ	0xFD8
  6072                           
  6073 ;; *************** function _read_sensors *****************
  6074 ;; Defined at:
  6075 ;;		line 420 in file "src/main.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  value           2   94[BANK1 ] unsigned int 
  6080 ;;  adc_result      2   92[BANK1 ] unsigned int 
  6081 ;;  t1              1   91[BANK1 ] unsigned char 
  6082 ;;  t0              1   90[BANK1 ] unsigned char 
  6083 ;; Return value:  Size  Location     Type
  6084 ;;		None               void
  6085 ;; Registers used:
  6086 ;;		wreg, status,2, status,0, cstack
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6093 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6094 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6095 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6096 ;;Total ram usage:        9 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; Hardware stack levels required when called:   11
  6099 ;; This function calls:
  6100 ;;		_OpenI2C1
  6101 ;;		_ReadI2C1
  6102 ;;		_WriteI2C1
  6103 ;;		___ftdiv
  6104 ;;		___ftmul
  6105 ;;		___fttol
  6106 ;;		___lwtoft
  6107 ;; This function is called by:
  6108 ;;		_main
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text12
  6113  012D74                     __ptext12:
  6114                           	opt stack 0
  6115  012D74                     _read_sensors:
  6116                           	opt stack 19
  6117                           
  6118                           ;main.c: 423: ADCON0bits.ADON = 1;
  6119                           
  6120                           ; BSR set to: 1
  6121                           ;incstack = 0
  6122  012D74  80C2               	bsf	4034,0,c	;volatile
  6123                           
  6124                           ;main.c: 424: LATAbits.LATA6 = 1;
  6125  012D76  8C89               	bsf	3977,6,c	;volatile
  6126                           
  6127                           ;main.c: 425: _delay((unsigned long)((20)*(8000000/4000.0)));
  6128  012D78  0E34               	movlw	52
  6129  012D7A  0101               	movlb	1	; () banked
  6130  012D7C  6FE1               	movwf	??_read_sensors& (0+255),b
  6131  012D7E  0EF2               	movlw	242
  6132  012D80                     u18317:
  6133  012D80  2EE8               	decfsz	wreg,f,c
  6134  012D82  D7FE               	goto	u18317
  6135  012D84  2FE1               	decfsz	??_read_sensors& (0+255),f,b
  6136  012D86  D7FC               	goto	u18317
  6137                           
  6138                           ;main.c: 428: ADCON1bits.ADCAL = 1;
  6139  012D88  8CC1               	bsf	4033,6,c	;volatile
  6140                           
  6141                           ;main.c: 429: ADCON0bits.GO = 1;
  6142  012D8A  82C2               	bsf	4034,1,c	;volatile
  6143  012D8C                     l1140:
  6144  012D8C  B2C2               	btfsc	4034,1,c	;volatile
  6145  012D8E  D7FE               	goto	l1140
  6146                           
  6147                           ;main.c: 431: ADCON1bits.ADCAL = 0;
  6148  012D90  9CC1               	bcf	4033,6,c	;volatile
  6149                           
  6150                           ;main.c: 434: ADCON0bits.CHS = 0;
  6151  012D92  94C2               	bcf	4034,2,c	;volatile
  6152  012D94  96C2               	bcf	4034,3,c	;volatile
  6153  012D96  98C2               	bcf	4034,4,c	;volatile
  6154  012D98  9AC2               	bcf	4034,5,c	;volatile
  6155                           
  6156                           ;main.c: 435: ADCON0bits.GO = 1;
  6157  012D9A  82C2               	bsf	4034,1,c	;volatile
  6158  012D9C                     l1143:
  6159  012D9C  B2C2               	btfsc	4034,1,c	;volatile
  6160  012D9E  D7FE               	goto	l1143
  6161                           
  6162                           ;main.c: 438: uint16_t adc_result = (ADRESHbits.ADRESH << 8) + ADRESLbits.ADRESL;
  6163  012DA0  50C4               	movf	4036,w,c	;volatile
  6164  012DA2  0101               	movlb	1	; () banked
  6165  012DA4  6FE2               	movwf	(??_read_sensors+1)& (0+255),b
  6166  012DA6  6BE1               	clrf	??_read_sensors& (0+255),b
  6167  012DA8  50C3               	movf	4035,w,c	;volatile
  6168  012DAA  0101               	movlb	1	; () banked
  6169  012DAC  25E1               	addwf	??_read_sensors& (0+255),w,b
  6170  012DAE  0101               	movlb	1	; () banked
  6171  012DB0  6FE6               	movwf	read_sensors@adc_result& (0+255),b
  6172  012DB2  0E00               	movlw	0
  6173  012DB4  0101               	movlb	1	; () banked
  6174  012DB6  21E2               	addwfc	(??_read_sensors+1)& (0+255),w,b
  6175  012DB8  0101               	movlb	1	; () banked
  6176  012DBA  6FE7               	movwf	(read_sensors@adc_result+1)& (0+255),b
  6177                           
  6178                           ; BSR set to: 1
  6179                           ;main.c: 439: m_battery_voltage = (4096F / adc_result) * 1.24F;
  6180  012DBC  C1E6  F192         	movff	read_sensors@adc_result,___lwtoft@c
  6181  012DC0  C1E7  F193         	movff	read_sensors@adc_result+1,___lwtoft@c+1
  6182  012DC4  EC35  F0B7         	call	___lwtoft	;wreg free
  6183  012DC8  C192  F1A2         	movff	?___lwtoft,___ftdiv@f2
  6184  012DCC  C193  F1A3         	movff	?___lwtoft+1,___ftdiv@f2+1
  6185  012DD0  C194  F1A4         	movff	?___lwtoft+2,___ftdiv@f2+2
  6186  012DD4  0E00               	movlw	0
  6187  012DD6  0101               	movlb	1	; () banked
  6188  012DD8  6F9F               	movwf	___ftdiv@f1& (0+255),b
  6189  012DDA  0E80               	movlw	128
  6190  012DDC  0101               	movlb	1	; () banked
  6191  012DDE  6FA0               	movwf	(___ftdiv@f1+1)& (0+255),b
  6192  012DE0  0E45               	movlw	69
  6193  012DE2  0101               	movlb	1	; () banked
  6194  012DE4  6FA1               	movwf	(___ftdiv@f1+2)& (0+255),b
  6195  012DE6  EC04  F0A5         	call	___ftdiv	;wreg free
  6196  012DEA  C19F  F1D2         	movff	?___ftdiv,___ftmul@f1
  6197  012DEE  C1A0  F1D3         	movff	?___ftdiv+1,___ftmul@f1+1
  6198  012DF2  C1A1  F1D4         	movff	?___ftdiv+2,___ftmul@f1+2
  6199  012DF6  0EB8               	movlw	184
  6200  012DF8  0101               	movlb	1	; () banked
  6201  012DFA  6FD5               	movwf	___ftmul@f2& (0+255),b
  6202  012DFC  0E9E               	movlw	158
  6203  012DFE  0101               	movlb	1	; () banked
  6204  012E00  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  6205  012E02  0E3F               	movlw	63
  6206  012E04  0101               	movlb	1	; () banked
  6207  012E06  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  6208  012E08  ECAA  F0A3         	call	___ftmul	;wreg free
  6209  012E0C  C1D2  F12D         	movff	?___ftmul,_m_battery_voltage
  6210  012E10  C1D3  F12E         	movff	?___ftmul+1,_m_battery_voltage+1
  6211  012E14  C1D4  F12F         	movff	?___ftmul+2,_m_battery_voltage+2
  6212                           
  6213                           ;main.c: 442: ADCON0bits.CHS = 1;
  6214  012E18  50C2               	movf	4034,w,c	;volatile
  6215  012E1A  0BC3               	andlw	-61
  6216  012E1C  0904               	iorlw	4
  6217  012E1E  6EC2               	movwf	4034,c	;volatile
  6218                           
  6219                           ;main.c: 444: ADCON0bits.GO = 1;
  6220  012E20  82C2               	bsf	4034,1,c	;volatile
  6221  012E22                     l1146:
  6222  012E22  B2C2               	btfsc	4034,1,c	;volatile
  6223  012E24  D7FE               	goto	l1146
  6224                           
  6225                           ;main.c: 447: adc_result = (ADRESHbits.ADRESH << 8) + ADRESLbits.ADRESL;
  6226  012E26  50C4               	movf	4036,w,c	;volatile
  6227  012E28  0101               	movlb	1	; () banked
  6228  012E2A  6FE2               	movwf	(??_read_sensors+1)& (0+255),b
  6229  012E2C  6BE1               	clrf	??_read_sensors& (0+255),b
  6230  012E2E  50C3               	movf	4035,w,c	;volatile
  6231  012E30  0101               	movlb	1	; () banked
  6232  012E32  25E1               	addwf	??_read_sensors& (0+255),w,b
  6233  012E34  0101               	movlb	1	; () banked
  6234  012E36  6FE6               	movwf	read_sensors@adc_result& (0+255),b
  6235  012E38  0E00               	movlw	0
  6236  012E3A  0101               	movlb	1	; () banked
  6237  012E3C  21E2               	addwfc	(??_read_sensors+1)& (0+255),w,b
  6238  012E3E  0101               	movlb	1	; () banked
  6239  012E40  6FE7               	movwf	(read_sensors@adc_result+1)& (0+255),b
  6240                           
  6241                           ; BSR set to: 1
  6242                           ;main.c: 448: m_light_level = (uint8_t)((adc_result / 74F) * 100F);
  6243  012E42  0E00               	movlw	0
  6244  012E44  0101               	movlb	1	; () banked
  6245  012E46  6FD5               	movwf	___ftmul@f2& (0+255),b
  6246  012E48  0EC8               	movlw	200
  6247  012E4A  0101               	movlb	1	; () banked
  6248  012E4C  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  6249  012E4E  0E42               	movlw	66
  6250  012E50  0101               	movlb	1	; () banked
  6251  012E52  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  6252  012E54  0E00               	movlw	0
  6253  012E56  0101               	movlb	1	; () banked
  6254  012E58  6FA2               	movwf	___ftdiv@f2& (0+255),b
  6255  012E5A  0E94               	movlw	148
  6256  012E5C  0101               	movlb	1	; () banked
  6257  012E5E  6FA3               	movwf	(___ftdiv@f2+1)& (0+255),b
  6258  012E60  0E42               	movlw	66
  6259  012E62  0101               	movlb	1	; () banked
  6260  012E64  6FA4               	movwf	(___ftdiv@f2+2)& (0+255),b
  6261  012E66  C1E6  F192         	movff	read_sensors@adc_result,___lwtoft@c
  6262  012E6A  C1E7  F193         	movff	read_sensors@adc_result+1,___lwtoft@c+1
  6263  012E6E  EC35  F0B7         	call	___lwtoft	;wreg free
  6264  012E72  C192  F19F         	movff	?___lwtoft,___ftdiv@f1
  6265  012E76  C193  F1A0         	movff	?___lwtoft+1,___ftdiv@f1+1
  6266  012E7A  C194  F1A1         	movff	?___lwtoft+2,___ftdiv@f1+2
  6267  012E7E  EC04  F0A5         	call	___ftdiv	;wreg free
  6268  012E82  C19F  F1D2         	movff	?___ftdiv,___ftmul@f1
  6269  012E86  C1A0  F1D3         	movff	?___ftdiv+1,___ftmul@f1+1
  6270  012E8A  C1A1  F1D4         	movff	?___ftdiv+2,___ftmul@f1+2
  6271  012E8E  ECAA  F0A3         	call	___ftmul	;wreg free
  6272  012E92  C1D2  F1AE         	movff	?___ftmul,___fttol@f1
  6273  012E96  C1D3  F1AF         	movff	?___ftmul+1,___fttol@f1+1
  6274  012E9A  C1D4  F1B0         	movff	?___ftmul+2,___fttol@f1+2
  6275  012E9E  ECAA  F0A5         	call	___fttol	;wreg free
  6276  012EA2  0101               	movlb	1	; () banked
  6277  012EA4  51AE               	movf	?___fttol& (0+255),w,b
  6278  012EA6  0101               	movlb	1	; () banked
  6279  012EA8  6F49               	movwf	_m_light_level& (0+255),b
  6280                           
  6281                           ; BSR set to: 1
  6282                           ;main.c: 449: if (m_light_level > 100)
  6283  012EAA  0E64               	movlw	100
  6284  012EAC  0101               	movlb	1	; () banked
  6285  012EAE  6549               	cpfsgt	_m_light_level& (0+255),b
  6286  012EB0  D003               	goto	l14517
  6287                           
  6288                           ; BSR set to: 1
  6289                           ;main.c: 450: {
  6290                           ;main.c: 451: m_light_level = 100;
  6291  012EB2  0E64               	movlw	100
  6292  012EB4  0101               	movlb	1	; () banked
  6293  012EB6  6F49               	movwf	_m_light_level& (0+255),b
  6294  012EB8                     l14517:
  6295                           
  6296                           ; BSR set to: 1
  6297                           ;main.c: 452: }
  6298                           ;main.c: 457: _delay((unsigned long)((90)*(8000000/4000.0)));
  6299  012EB8  0EEA               	movlw	234
  6300  012EBA  0101               	movlb	1	; () banked
  6301  012EBC  6FE1               	movwf	??_read_sensors& (0+255),b
  6302  012EBE  0EC3               	movlw	195
  6303  012EC0                     u18327:
  6304  012EC0  2EE8               	decfsz	wreg,f,c
  6305  012EC2  D7FE               	goto	u18327
  6306  012EC4  2FE1               	decfsz	??_read_sensors& (0+255),f,b
  6307  012EC6  D7FC               	goto	u18327
  6308  012EC8  F000               	nop	
  6309                           
  6310                           ;main.c: 458: OpenI2C1(0b00001000, 0b10000000);
  6311  012ECA  0E80               	movlw	128
  6312  012ECC  0101               	movlb	1	; () banked
  6313  012ECE  6F8A               	movwf	OpenI2C1@slew& (0+255),b
  6314  012ED0  0E08               	movlw	8
  6315  012ED2  EC6E  F0B7         	call	_OpenI2C1
  6316  012ED6                     l14521:
  6317  012ED6  A4C7               	btfss	4039,2,c	;volatile
  6318  012ED8  D004               	goto	u17260
  6319  012EDA  0101               	movlb	1	; () banked
  6320  012EDC  6BE1               	clrf	??_read_sensors& (0+255),b
  6321  012EDE  2BE1               	incf	??_read_sensors& (0+255),f,b
  6322  012EE0  D002               	goto	u17268
  6323  012EE2                     u17260:
  6324  012EE2  0101               	movlb	1	; () banked
  6325  012EE4  6BE1               	clrf	??_read_sensors& (0+255),b
  6326  012EE6                     u17268:
  6327  012EE6  50C5               	movf	4037,w,c	;volatile
  6328  012EE8  0B1F               	andlw	31
  6329  012EEA  0101               	movlb	1	; () banked
  6330  012EEC  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6331  012EEE  0900               	iorlw	0
  6332  012EF0  A4D8               	btfss	status,2,c
  6333  012EF2  D7F1               	goto	l14521
  6334                           
  6335                           ; BSR set to: 1
  6336                           ;main.c: 464: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  6337  012EF4  80C5               	bsf	4037,0,c	;volatile
  6338  012EF6                     l1153:
  6339  012EF6  B0C5               	btfsc	4037,0,c	;volatile
  6340  012EF8  D7FE               	goto	l1153
  6341  012EFA                     l14523:
  6342  012EFA  A4C7               	btfss	4039,2,c	;volatile
  6343  012EFC  D004               	goto	u17290
  6344  012EFE  0101               	movlb	1	; () banked
  6345  012F00  6BE1               	clrf	??_read_sensors& (0+255),b
  6346  012F02  2BE1               	incf	??_read_sensors& (0+255),f,b
  6347  012F04  D002               	goto	u17298
  6348  012F06                     u17290:
  6349  012F06  0101               	movlb	1	; () banked
  6350  012F08  6BE1               	clrf	??_read_sensors& (0+255),b
  6351  012F0A                     u17298:
  6352  012F0A  50C5               	movf	4037,w,c	;volatile
  6353  012F0C  0B1F               	andlw	31
  6354  012F0E  0101               	movlb	1	; () banked
  6355  012F10  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6356  012F12  0900               	iorlw	0
  6357  012F14  A4D8               	btfss	status,2,c
  6358  012F16  D7F1               	goto	l14523
  6359                           
  6360                           ; BSR set to: 1
  6361                           ;main.c: 466: WriteI2C1( 0b10010000 & 0xfe );
  6362                           
  6363                           ; BSR set to: 1
  6364  012F18  0E90               	movlw	144
  6365  012F1A  ECCA  F0B4         	call	_WriteI2C1
  6366  012F1E                     l14527:
  6367  012F1E  A4C7               	btfss	4039,2,c	;volatile
  6368  012F20  D004               	goto	u17310
  6369  012F22  0101               	movlb	1	; () banked
  6370  012F24  6BE1               	clrf	??_read_sensors& (0+255),b
  6371  012F26  2BE1               	incf	??_read_sensors& (0+255),f,b
  6372  012F28  D002               	goto	u17318
  6373  012F2A                     u17310:
  6374  012F2A  0101               	movlb	1	; () banked
  6375  012F2C  6BE1               	clrf	??_read_sensors& (0+255),b
  6376  012F2E                     u17318:
  6377  012F2E  50C5               	movf	4037,w,c	;volatile
  6378  012F30  0B1F               	andlw	31
  6379  012F32  0101               	movlb	1	; () banked
  6380  012F34  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6381  012F36  0900               	iorlw	0
  6382  012F38  A4D8               	btfss	status,2,c
  6383  012F3A  D7F1               	goto	l14527
  6384                           
  6385                           ; BSR set to: 1
  6386                           ;main.c: 468: WriteI2C1( 0x00 );
  6387                           
  6388                           ; BSR set to: 1
  6389  012F3C  0E00               	movlw	0
  6390  012F3E  ECCA  F0B4         	call	_WriteI2C1
  6391  012F42                     l14531:
  6392  012F42  A4C7               	btfss	4039,2,c	;volatile
  6393  012F44  D004               	goto	u17330
  6394  012F46  0101               	movlb	1	; () banked
  6395  012F48  6BE1               	clrf	??_read_sensors& (0+255),b
  6396  012F4A  2BE1               	incf	??_read_sensors& (0+255),f,b
  6397  012F4C  D002               	goto	u17338
  6398  012F4E                     u17330:
  6399  012F4E  0101               	movlb	1	; () banked
  6400  012F50  6BE1               	clrf	??_read_sensors& (0+255),b
  6401  012F52                     u17338:
  6402  012F52  50C5               	movf	4037,w,c	;volatile
  6403  012F54  0B1F               	andlw	31
  6404  012F56  0101               	movlb	1	; () banked
  6405  012F58  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6406  012F5A  0900               	iorlw	0
  6407  012F5C  A4D8               	btfss	status,2,c
  6408  012F5E  D7F1               	goto	l14531
  6409                           
  6410                           ; BSR set to: 1
  6411                           ;main.c: 470: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  6412  012F60  84C5               	bsf	4037,2,c	;volatile
  6413  012F62                     l1165:
  6414  012F62  B4C5               	btfsc	4037,2,c	;volatile
  6415  012F64  D7FE               	goto	l1165
  6416  012F66                     l14533:
  6417  012F66  A4C7               	btfss	4039,2,c	;volatile
  6418  012F68  D004               	goto	u17360
  6419  012F6A  0101               	movlb	1	; () banked
  6420  012F6C  6BE1               	clrf	??_read_sensors& (0+255),b
  6421  012F6E  2BE1               	incf	??_read_sensors& (0+255),f,b
  6422  012F70  D002               	goto	u17368
  6423  012F72                     u17360:
  6424  012F72  0101               	movlb	1	; () banked
  6425  012F74  6BE1               	clrf	??_read_sensors& (0+255),b
  6426  012F76                     u17368:
  6427  012F76  50C5               	movf	4037,w,c	;volatile
  6428  012F78  0B1F               	andlw	31
  6429  012F7A  0101               	movlb	1	; () banked
  6430  012F7C  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6431  012F7E  0900               	iorlw	0
  6432  012F80  A4D8               	btfss	status,2,c
  6433  012F82  D7F1               	goto	l14533
  6434                           
  6435                           ; BSR set to: 1
  6436                           ;main.c: 474: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  6437  012F84  80C5               	bsf	4037,0,c	;volatile
  6438  012F86                     l1171:
  6439  012F86  B0C5               	btfsc	4037,0,c	;volatile
  6440  012F88  D7FE               	goto	l1171
  6441  012F8A                     l14535:
  6442  012F8A  A4C7               	btfss	4039,2,c	;volatile
  6443  012F8C  D004               	goto	u17390
  6444  012F8E  0101               	movlb	1	; () banked
  6445  012F90  6BE1               	clrf	??_read_sensors& (0+255),b
  6446  012F92  2BE1               	incf	??_read_sensors& (0+255),f,b
  6447  012F94  D002               	goto	u17398
  6448  012F96                     u17390:
  6449  012F96  0101               	movlb	1	; () banked
  6450  012F98  6BE1               	clrf	??_read_sensors& (0+255),b
  6451  012F9A                     u17398:
  6452  012F9A  50C5               	movf	4037,w,c	;volatile
  6453  012F9C  0B1F               	andlw	31
  6454  012F9E  0101               	movlb	1	; () banked
  6455  012FA0  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6456  012FA2  0900               	iorlw	0
  6457  012FA4  A4D8               	btfss	status,2,c
  6458  012FA6  D7F1               	goto	l14535
  6459                           
  6460                           ; BSR set to: 1
  6461                           ;main.c: 476: WriteI2C1( 0b10010000 | 0x01 );
  6462                           
  6463                           ; BSR set to: 1
  6464  012FA8  0E91               	movlw	145
  6465  012FAA  ECCA  F0B4         	call	_WriteI2C1
  6466  012FAE                     l14539:
  6467  012FAE  A4C7               	btfss	4039,2,c	;volatile
  6468  012FB0  D004               	goto	u17410
  6469  012FB2  0101               	movlb	1	; () banked
  6470  012FB4  6BE1               	clrf	??_read_sensors& (0+255),b
  6471  012FB6  2BE1               	incf	??_read_sensors& (0+255),f,b
  6472  012FB8  D002               	goto	u17418
  6473  012FBA                     u17410:
  6474  012FBA  0101               	movlb	1	; () banked
  6475  012FBC  6BE1               	clrf	??_read_sensors& (0+255),b
  6476  012FBE                     u17418:
  6477  012FBE  50C5               	movf	4037,w,c	;volatile
  6478  012FC0  0B1F               	andlw	31
  6479  012FC2  0101               	movlb	1	; () banked
  6480  012FC4  11E1               	iorwf	??_read_sensors& (0+255),w,b
  6481  012FC6  0900               	iorlw	0
  6482  012FC8  A4D8               	btfss	status,2,c
  6483  012FCA  D7F1               	goto	l14539
  6484                           
  6485                           ; BSR set to: 1
  6486                           ;main.c: 478: t1 = ReadI2C1();
  6487                           
  6488                           ; BSR set to: 1
  6489  012FCC  EC9C  F0B7         	call	_ReadI2C1	;wreg free
  6490  012FD0  0101               	movlb	1	; () banked
  6491  012FD2  6FE5               	movwf	read_sensors@t1& (0+255),b
  6492                           
  6493                           ; BSR set to: 1
  6494                           ;main.c: 479: SSP1CON2bits.ACKDT=0, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  6495  012FD4  9AC5               	bcf	4037,5,c	;volatile
  6496                           
  6497                           ; BSR set to: 1
  6498  012FD6  88C5               	bsf	4037,4,c	;volatile
  6499  012FD8                     l1180:
  6500  012FD8  B8C5               	btfsc	4037,4,c	;volatile
  6501  012FDA  D7FE               	goto	l1180
  6502                           
  6503                           ;main.c: 480: t0 = ReadI2C1();
  6504  012FDC  EC9C  F0B7         	call	_ReadI2C1	;wreg free
  6505  012FE0  0101               	movlb	1	; () banked
  6506  012FE2  6FE4               	movwf	read_sensors@t0& (0+255),b
  6507                           
  6508                           ; BSR set to: 1
  6509                           ;main.c: 481: SSP1CON2bits.ACKDT=1, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  6510  012FE4  8AC5               	bsf	4037,5,c	;volatile
  6511                           
  6512                           ; BSR set to: 1
  6513  012FE6  88C5               	bsf	4037,4,c	;volatile
  6514  012FE8                     l1183:
  6515  012FE8  B8C5               	btfsc	4037,4,c	;volatile
  6516  012FEA  D7FE               	goto	l1183
  6517                           
  6518                           ;main.c: 482: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  6519  012FEC  84C5               	bsf	4037,2,c	;volatile
  6520  012FEE                     l1186:
  6521  012FEE  B4C5               	btfsc	4037,2,c	;volatile
  6522  012FF0  D7FE               	goto	l1186
  6523                           
  6524                           ;main.c: 484: uint16_t value = (t1<<8) + t0;
  6525  012FF2  0101               	movlb	1	; () banked
  6526  012FF4  51E5               	movf	read_sensors@t1& (0+255),w,b
  6527  012FF6  0101               	movlb	1	; () banked
  6528  012FF8  6FE2               	movwf	(??_read_sensors+1)& (0+255),b
  6529  012FFA  6BE1               	clrf	??_read_sensors& (0+255),b
  6530  012FFC  0101               	movlb	1	; () banked
  6531  012FFE  51E4               	movf	read_sensors@t0& (0+255),w,b
  6532  013000  0101               	movlb	1	; () banked
  6533  013002  25E1               	addwf	??_read_sensors& (0+255),w,b
  6534  013004  0101               	movlb	1	; () banked
  6535  013006  6FE8               	movwf	read_sensors@value& (0+255),b
  6536  013008  0101               	movlb	1	; () banked
  6537  01300A  0E00               	movlw	0
  6538  01300C  0101               	movlb	1	; () banked
  6539  01300E  21E2               	addwfc	(??_read_sensors+1)& (0+255),w,b
  6540  013010  0101               	movlb	1	; () banked
  6541  013012  6FE9               	movwf	(read_sensors@value+1)& (0+255),b
  6542                           
  6543                           ;main.c: 485: value = (value>>4);
  6544  013014  C1E8  F1E1         	movff	read_sensors@value,??_read_sensors
  6545  013018  C1E9  F1E2         	movff	read_sensors@value+1,??_read_sensors+1
  6546  01301C  0E04               	movlw	4
  6547  01301E  0101               	movlb	1	; () banked
  6548  013020  6FE3               	movwf	(??_read_sensors+2)& (0+255),b
  6549  013022                     u17465:
  6550  013022  0101               	movlb	1	; () banked
  6551  013024  90D8               	bcf	status,0,c
  6552  013026  33E2               	rrcf	(??_read_sensors+1)& (0+255),f,b
  6553  013028  33E1               	rrcf	??_read_sensors& (0+255),f,b
  6554  01302A  0101               	movlb	1	; () banked
  6555  01302C  2FE3               	decfsz	(??_read_sensors+2)& (0+255),f,b
  6556  01302E  D7F9               	goto	u17465
  6557  013030  C1E1  F1E8         	movff	??_read_sensors,read_sensors@value
  6558  013034  C1E2  F1E9         	movff	??_read_sensors+1,read_sensors@value+1
  6559                           
  6560                           ; BSR set to: 1
  6561                           ;main.c: 486: m_temperature = ((float)value)*0.0625F;
  6562  013038  C1E8  F192         	movff	read_sensors@value,___lwtoft@c
  6563  01303C  C1E9  F193         	movff	read_sensors@value+1,___lwtoft@c+1
  6564  013040  EC35  F0B7         	call	___lwtoft	;wreg free
  6565  013044  C192  F1D2         	movff	?___lwtoft,___ftmul@f1
  6566  013048  C193  F1D3         	movff	?___lwtoft+1,___ftmul@f1+1
  6567  01304C  C194  F1D4         	movff	?___lwtoft+2,___ftmul@f1+2
  6568  013050  0E00               	movlw	0
  6569  013052  0101               	movlb	1	; () banked
  6570  013054  6FD5               	movwf	___ftmul@f2& (0+255),b
  6571  013056  0E80               	movlw	128
  6572  013058  0101               	movlb	1	; () banked
  6573  01305A  6FD6               	movwf	(___ftmul@f2+1)& (0+255),b
  6574  01305C  0E3D               	movlw	61
  6575  01305E  0101               	movlb	1	; () banked
  6576  013060  6FD7               	movwf	(___ftmul@f2+2)& (0+255),b
  6577  013062  ECAA  F0A3         	call	___ftmul	;wreg free
  6578  013066  C1D2  F130         	movff	?___ftmul,_m_temperature
  6579  01306A  C1D3  F131         	movff	?___ftmul+1,_m_temperature+1
  6580  01306E  C1D4  F132         	movff	?___ftmul+2,_m_temperature+2
  6581                           
  6582                           ;main.c: 488: ADCON0bits.ADON = 0;
  6583  013072  90C2               	bcf	4034,0,c	;volatile
  6584                           
  6585                           ;main.c: 489: SSP1CON1 &=0xDF;
  6586  013074  9AC6               	bcf	4038,5,c	;volatile
  6587                           
  6588                           ;main.c: 490: LATAbits.LATA6 = 0;
  6589  013076  9C89               	bcf	3977,6,c	;volatile
  6590  013078  0012               	return		;funcret
  6591  01307A                     __end_of_read_sensors:
  6592                           	opt stack 0
  6593                           tblptru	equ	0xFF8
  6594                           tblptrh	equ	0xFF7
  6595                           tblptrl	equ	0xFF6
  6596                           tablat	equ	0xFF5
  6597                           prodh	equ	0xFF4
  6598                           prodl	equ	0xFF3
  6599                           postinc0	equ	0xFEE
  6600                           plusw0	equ	0xFEB
  6601                           wreg	equ	0xFE8
  6602                           indf1	equ	0xFE7
  6603                           postdec1	equ	0xFE5
  6604                           fsr1h	equ	0xFE2
  6605                           fsr1l	equ	0xFE1
  6606                           indf2	equ	0xFDF
  6607                           postinc2	equ	0xFDE
  6608                           postdec2	equ	0xFDD
  6609                           plusw2	equ	0xFDB
  6610                           fsr2h	equ	0xFDA
  6611                           fsr2l	equ	0xFD9
  6612                           status	equ	0xFD8
  6613                           
  6614 ;; *************** function ___lwtoft *****************
  6615 ;; Defined at:
  6616 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwtoft.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;  c               2    8[BANK1 ] unsigned int 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;		None
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  3    8[BANK1 ] float 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0, cstack
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6630 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6633 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6634 ;;Total ram usage:        3 bytes
  6635 ;; Hardware stack levels used:    1
  6636 ;; Hardware stack levels required when called:   10
  6637 ;; This function calls:
  6638 ;;		___ftpack
  6639 ;; This function is called by:
  6640 ;;		_read_sensors
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text13
  6645  016E6A                     __ptext13:
  6646                           	opt stack 0
  6647  016E6A                     ___lwtoft:
  6648                           	opt stack 19
  6649                           
  6650                           ;incstack = 0
  6651  016E6A  C192  F18A         	movff	___lwtoft@c,___ftpack@arg
  6652  016E6E  C193  F18B         	movff	___lwtoft@c+1,___ftpack@arg+1
  6653  016E72  0101               	movlb	1	; () banked
  6654  016E74  6B8C               	clrf	(___ftpack@arg+2)& (0+255),b
  6655  016E76  0E8E               	movlw	142
  6656  016E78  0101               	movlb	1	; () banked
  6657  016E7A  6F8D               	movwf	___ftpack@exp& (0+255),b
  6658  016E7C  0E00               	movlw	0
  6659  016E7E  0101               	movlb	1	; () banked
  6660  016E80  6F8E               	movwf	___ftpack@sign& (0+255),b
  6661  016E82  ECFD  F0AA         	call	___ftpack	;wreg free
  6662  016E86  C18A  F192         	movff	?___ftpack,?___lwtoft
  6663  016E8A  C18B  F193         	movff	?___ftpack+1,?___lwtoft+1
  6664  016E8E  C18C  F194         	movff	?___ftpack+2,?___lwtoft+2
  6665  016E92  0012               	return	
  6666  016E94                     __end_of___lwtoft:
  6667                           	opt stack 0
  6668                           tblptru	equ	0xFF8
  6669                           tblptrh	equ	0xFF7
  6670                           tblptrl	equ	0xFF6
  6671                           tablat	equ	0xFF5
  6672                           prodh	equ	0xFF4
  6673                           prodl	equ	0xFF3
  6674                           postinc0	equ	0xFEE
  6675                           plusw0	equ	0xFEB
  6676                           wreg	equ	0xFE8
  6677                           indf1	equ	0xFE7
  6678                           postdec1	equ	0xFE5
  6679                           fsr1h	equ	0xFE2
  6680                           fsr1l	equ	0xFE1
  6681                           indf2	equ	0xFDF
  6682                           postinc2	equ	0xFDE
  6683                           postdec2	equ	0xFDD
  6684                           plusw2	equ	0xFDB
  6685                           fsr2h	equ	0xFDA
  6686                           fsr2l	equ	0xFD9
  6687                           status	equ	0xFD8
  6688                           
  6689 ;; *************** function ___fttol *****************
  6690 ;; Defined at:
  6691 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;  f1              3   36[BANK1 ] float 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;  lval            4   46[BANK1 ] unsigned long 
  6696 ;;  exp1            1   50[BANK1 ] unsigned char 
  6697 ;;  sign1           1   45[BANK1 ] unsigned char 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  4   36[BANK1 ] long 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6707 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6708 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6709 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6710 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6711 ;;Total ram usage:       15 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:    9
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_read_sensors
  6718 ;;		_send_initial_update
  6719 ;;		_send_periodical_update
  6720 ;;		_floor
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text14
  6725  014B54                     __ptext14:
  6726                           	opt stack 0
  6727  014B54                     ___fttol:
  6728                           	opt stack 19
  6729                           
  6730                           ;incstack = 0
  6731  014B54  C1B0  F1B2         	movff	___fttol@f1+2,??___fttol
  6732  014B58  0101               	movlb	1	; () banked
  6733  014B5A  6BB3               	clrf	(??___fttol+1)& (0+255),b
  6734  014B5C  6BB4               	clrf	(??___fttol+2)& (0+255),b
  6735  014B5E  0101               	movlb	1	; () banked
  6736  014B60  35AF               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6737  014B62  0101               	movlb	1	; () banked
  6738  014B64  37B2               	rlcf	??___fttol& (0+255),f,b
  6739  014B66  E301               	bnc	u15401
  6740  014B68  81B3               	bsf	(??___fttol+1)& (0+255),0,b
  6741  014B6A                     u15401:
  6742  014B6A  0101               	movlb	1	; () banked
  6743  014B6C  51B2               	movf	??___fttol& (0+255),w,b
  6744  014B6E  0101               	movlb	1	; () banked
  6745  014B70  6FBC               	movwf	___fttol@exp1& (0+255),b
  6746  014B72  0101               	movlb	1	; () banked
  6747  014B74  51BC               	movf	___fttol@exp1& (0+255),w,b
  6748  014B76  A4D8               	btfss	status,2,c
  6749  014B78  D00A               	goto	l13045
  6750                           
  6751                           ; BSR set to: 1
  6752  014B7A  0E00               	movlw	0
  6753  014B7C  0101               	movlb	1	; () banked
  6754  014B7E  6FAE               	movwf	?___fttol& (0+255),b
  6755  014B80  0E00               	movlw	0
  6756  014B82  6FAF               	movwf	(?___fttol+1)& (0+255),b
  6757  014B84  0E00               	movlw	0
  6758  014B86  6FB0               	movwf	(?___fttol+2)& (0+255),b
  6759  014B88  0E00               	movlw	0
  6760  014B8A  6FB1               	movwf	(?___fttol+3)& (0+255),b
  6761                           
  6762                           ; BSR set to: 1
  6763  014B8C  0012               	return	
  6764  014B8E                     l13045:
  6765                           
  6766                           ; BSR set to: 1
  6767  014B8E  0E17               	movlw	23
  6768  014B90  0101               	movlb	1	; () banked
  6769  014B92  6FB2               	movwf	??___fttol& (0+255),b
  6770  014B94  C1AE  F1B3         	movff	___fttol@f1,??___fttol+1
  6771  014B98  C1AF  F1B4         	movff	___fttol@f1+1,??___fttol+2
  6772  014B9C  C1B0  F1B5         	movff	___fttol@f1+2,??___fttol+3
  6773  014BA0  0101               	movlb	1	; () banked
  6774  014BA2  29B2               	incf	??___fttol& (0+255),w,b
  6775  014BA4  0101               	movlb	1	; () banked
  6776  014BA6  6FB6               	movwf	(??___fttol+4)& (0+255),b
  6777  014BA8  D005               	goto	u15420
  6778  014BAA                     u15425:
  6779  014BAA  0101               	movlb	1	; () banked
  6780  014BAC  90D8               	bcf	status,0,c
  6781  014BAE  33B5               	rrcf	(??___fttol+3)& (0+255),f,b
  6782  014BB0  33B4               	rrcf	(??___fttol+2)& (0+255),f,b
  6783  014BB2  33B3               	rrcf	(??___fttol+1)& (0+255),f,b
  6784  014BB4                     u15420:
  6785  014BB4  0101               	movlb	1	; () banked
  6786  014BB6  2FB6               	decfsz	(??___fttol+4)& (0+255),f,b
  6787  014BB8  D7F8               	goto	u15425
  6788  014BBA  0101               	movlb	1	; () banked
  6789  014BBC  51B3               	movf	(??___fttol+1)& (0+255),w,b
  6790  014BBE  0101               	movlb	1	; () banked
  6791  014BC0  6FB7               	movwf	___fttol@sign1& (0+255),b
  6792                           
  6793                           ; BSR set to: 1
  6794  014BC2  0101               	movlb	1	; () banked
  6795  014BC4  8FAF               	bsf	(___fttol@f1+1)& (0+255),7,b
  6796                           
  6797                           ; BSR set to: 1
  6798  014BC6  0EFF               	movlw	255
  6799  014BC8  0101               	movlb	1	; () banked
  6800  014BCA  17AE               	andwf	___fttol@f1& (0+255),f,b
  6801  014BCC  0EFF               	movlw	255
  6802  014BCE  0101               	movlb	1	; () banked
  6803  014BD0  17AF               	andwf	(___fttol@f1+1)& (0+255),f,b
  6804  014BD2  0E00               	movlw	0
  6805  014BD4  0101               	movlb	1	; () banked
  6806  014BD6  17B0               	andwf	(___fttol@f1+2)& (0+255),f,b
  6807                           
  6808                           ; BSR set to: 1
  6809  014BD8  0101               	movlb	1	; () banked
  6810  014BDA  51AE               	movf	___fttol@f1& (0+255),w,b
  6811  014BDC  0101               	movlb	1	; () banked
  6812  014BDE  6FB8               	movwf	___fttol@lval& (0+255),b
  6813  014BE0  0101               	movlb	1	; () banked
  6814  014BE2  51AF               	movf	(___fttol@f1+1)& (0+255),w,b
  6815  014BE4  0101               	movlb	1	; () banked
  6816  014BE6  6FB9               	movwf	(___fttol@lval+1)& (0+255),b
  6817  014BE8  0101               	movlb	1	; () banked
  6818  014BEA  51B0               	movf	(___fttol@f1+2)& (0+255),w,b
  6819  014BEC  0101               	movlb	1	; () banked
  6820  014BEE  6FBA               	movwf	(___fttol@lval+2)& (0+255),b
  6821  014BF0  0101               	movlb	1	; () banked
  6822  014BF2  6BBB               	clrf	(___fttol@lval+3)& (0+255),b
  6823                           
  6824                           ; BSR set to: 1
  6825  014BF4  0E8E               	movlw	142
  6826  014BF6  0101               	movlb	1	; () banked
  6827  014BF8  5FBC               	subwf	___fttol@exp1& (0+255),f,b
  6828                           
  6829                           ; BSR set to: 1
  6830  014BFA  0101               	movlb	1	; () banked
  6831  014BFC  AFBC               	btfss	___fttol@exp1& (0+255),7,b
  6832  014BFE  D01A               	goto	l13067
  6833                           
  6834                           ; BSR set to: 1
  6835  014C00  0101               	movlb	1	; () banked
  6836  014C02  51BC               	movf	___fttol@exp1& (0+255),w,b
  6837  014C04  0A80               	xorlw	128
  6838  014C06  0F8F               	addlw	143
  6839  014C08  B0D8               	btfsc	status,0,c
  6840  014C0A  D00A               	goto	l13063
  6841                           
  6842                           ; BSR set to: 1
  6843  014C0C  0E00               	movlw	0
  6844  014C0E  0101               	movlb	1	; () banked
  6845  014C10  6FAE               	movwf	?___fttol& (0+255),b
  6846  014C12  0E00               	movlw	0
  6847  014C14  6FAF               	movwf	(?___fttol+1)& (0+255),b
  6848  014C16  0E00               	movlw	0
  6849  014C18  6FB0               	movwf	(?___fttol+2)& (0+255),b
  6850  014C1A  0E00               	movlw	0
  6851  014C1C  6FB1               	movwf	(?___fttol+3)& (0+255),b
  6852                           
  6853                           ; BSR set to: 1
  6854  014C1E  0012               	return	
  6855  014C20                     l13063:
  6856                           
  6857                           ; BSR set to: 1
  6858  014C20  0101               	movlb	1	; () banked
  6859  014C22  90D8               	bcf	status,0,c
  6860  014C24  33BB               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6861  014C26  33BA               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6862  014C28  33B9               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6863  014C2A  33B8               	rrcf	___fttol@lval& (0+255),f,b
  6864                           
  6865                           ; BSR set to: 1
  6866  014C2C  0101               	movlb	1	; () banked
  6867  014C2E  3FBC               	incfsz	___fttol@exp1& (0+255),f,b
  6868  014C30  D7F7               	goto	l13063
  6869                           
  6870                           ; BSR set to: 1
  6871  014C32  D01B               	goto	l13077
  6872  014C34                     l13067:
  6873                           
  6874                           ; BSR set to: 1
  6875  014C34  0E17               	movlw	23
  6876  014C36  0101               	movlb	1	; () banked
  6877  014C38  65BC               	cpfsgt	___fttol@exp1& (0+255),b
  6878  014C3A  D012               	goto	l13075
  6879                           
  6880                           ; BSR set to: 1
  6881  014C3C  0E00               	movlw	0
  6882  014C3E  0101               	movlb	1	; () banked
  6883  014C40  6FAE               	movwf	?___fttol& (0+255),b
  6884  014C42  0E00               	movlw	0
  6885  014C44  6FAF               	movwf	(?___fttol+1)& (0+255),b
  6886  014C46  0E00               	movlw	0
  6887  014C48  6FB0               	movwf	(?___fttol+2)& (0+255),b
  6888  014C4A  0E00               	movlw	0
  6889  014C4C  6FB1               	movwf	(?___fttol+3)& (0+255),b
  6890                           
  6891                           ; BSR set to: 1
  6892  014C4E  0012               	return	
  6893  014C50                     l13073:
  6894                           
  6895                           ; BSR set to: 1
  6896  014C50  0101               	movlb	1	; () banked
  6897  014C52  90D8               	bcf	status,0,c
  6898  014C54  37B8               	rlcf	___fttol@lval& (0+255),f,b
  6899  014C56  37B9               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6900  014C58  37BA               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6901  014C5A  37BB               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6902  014C5C  0101               	movlb	1	; () banked
  6903  014C5E  07BC               	decf	___fttol@exp1& (0+255),f,b
  6904  014C60                     l13075:
  6905                           
  6906                           ; BSR set to: 1
  6907  014C60  0101               	movlb	1	; () banked
  6908  014C62  51BC               	movf	___fttol@exp1& (0+255),w,b
  6909  014C64  0101               	movlb	1	; () banked
  6910  014C66  A4D8               	btfss	status,2,c
  6911  014C68  D7F3               	goto	l13073
  6912  014C6A                     l13077:
  6913                           
  6914                           ; BSR set to: 1
  6915  014C6A  0101               	movlb	1	; () banked
  6916  014C6C  51B7               	movf	___fttol@sign1& (0+255),w,b
  6917  014C6E  0101               	movlb	1	; () banked
  6918  014C70  B4D8               	btfsc	status,2,c
  6919  014C72  D009               	goto	l13081
  6920                           
  6921                           ; BSR set to: 1
  6922  014C74  0101               	movlb	1	; () banked
  6923  014C76  1FBB               	comf	(___fttol@lval+3)& (0+255),f,b
  6924  014C78  1FBA               	comf	(___fttol@lval+2)& (0+255),f,b
  6925  014C7A  1FB9               	comf	(___fttol@lval+1)& (0+255),f,b
  6926  014C7C  6DB8               	negf	___fttol@lval& (0+255),b
  6927  014C7E  0E00               	movlw	0
  6928  014C80  23B9               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6929  014C82  23BA               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6930  014C84  23BB               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6931  014C86                     l13081:
  6932                           
  6933                           ; BSR set to: 1
  6934  014C86  C1B8  F1AE         	movff	___fttol@lval,?___fttol
  6935  014C8A  C1B9  F1AF         	movff	___fttol@lval+1,?___fttol+1
  6936  014C8E  C1BA  F1B0         	movff	___fttol@lval+2,?___fttol+2
  6937  014C92  C1BB  F1B1         	movff	___fttol@lval+3,?___fttol+3
  6938  014C96  0012               	return	
  6939  014C98                     __end_of___fttol:
  6940                           	opt stack 0
  6941                           tblptru	equ	0xFF8
  6942                           tblptrh	equ	0xFF7
  6943                           tblptrl	equ	0xFF6
  6944                           tablat	equ	0xFF5
  6945                           prodh	equ	0xFF4
  6946                           prodl	equ	0xFF3
  6947                           postinc0	equ	0xFEE
  6948                           plusw0	equ	0xFEB
  6949                           wreg	equ	0xFE8
  6950                           indf1	equ	0xFE7
  6951                           postdec1	equ	0xFE5
  6952                           fsr1h	equ	0xFE2
  6953                           fsr1l	equ	0xFE1
  6954                           indf2	equ	0xFDF
  6955                           postinc2	equ	0xFDE
  6956                           postdec2	equ	0xFDD
  6957                           plusw2	equ	0xFDB
  6958                           fsr2h	equ	0xFDA
  6959                           fsr2l	equ	0xFD9
  6960                           status	equ	0xFD8
  6961                           
  6962 ;; *************** function ___ftmul *****************
  6963 ;; Defined at:
  6964 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  f1              3   72[BANK1 ] float 
  6967 ;;  f2              3   75[BANK1 ] float 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  f3_as_produc    3   82[BANK1 ] unsigned um
  6970 ;;  sign            1   86[BANK1 ] unsigned char 
  6971 ;;  cntr            1   85[BANK1 ] unsigned char 
  6972 ;;  exp             1   81[BANK1 ] unsigned char 
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  3   72[BANK1 ] float 
  6975 ;; Registers used:
  6976 ;;		wreg, status,2, status,0, cstack
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6982 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6983 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6985 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;Total ram usage:       15 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:   10
  6989 ;; This function calls:
  6990 ;;		___ftpack
  6991 ;; This function is called by:
  6992 ;;		_read_sensors
  6993 ;;		_send_initial_update
  6994 ;;		_send_periodical_update
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text15
  6999  014754                     __ptext15:
  7000                           	opt stack 0
  7001  014754                     ___ftmul:
  7002                           	opt stack 19
  7003                           
  7004                           ; BSR set to: 1
  7005                           ;incstack = 0
  7006  014754  C1D4  F1D8         	movff	___ftmul@f1+2,??___ftmul
  7007  014758  0101               	movlb	1	; () banked
  7008  01475A  6BD9               	clrf	(??___ftmul+1)& (0+255),b
  7009  01475C  6BDA               	clrf	(??___ftmul+2)& (0+255),b
  7010  01475E  0101               	movlb	1	; () banked
  7011  014760  35D3               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7012  014762  0101               	movlb	1	; () banked
  7013  014764  37D8               	rlcf	??___ftmul& (0+255),f,b
  7014  014766  E301               	bnc	u16241
  7015  014768  81D9               	bsf	(??___ftmul+1)& (0+255),0,b
  7016  01476A                     u16241:
  7017  01476A  0101               	movlb	1	; () banked
  7018  01476C  51D8               	movf	??___ftmul& (0+255),w,b
  7019  01476E  0101               	movlb	1	; () banked
  7020  014770  6FDB               	movwf	___ftmul@exp& (0+255),b
  7021  014772  0101               	movlb	1	; () banked
  7022  014774  51DB               	movf	___ftmul@exp& (0+255),w,b
  7023  014776  A4D8               	btfss	status,2,c
  7024  014778  D00A               	goto	l13697
  7025                           
  7026                           ; BSR set to: 1
  7027  01477A  0E00               	movlw	0
  7028  01477C  0101               	movlb	1	; () banked
  7029  01477E  6FD2               	movwf	?___ftmul& (0+255),b
  7030  014780  0E00               	movlw	0
  7031  014782  0101               	movlb	1	; () banked
  7032  014784  6FD3               	movwf	(?___ftmul+1)& (0+255),b
  7033  014786  0E00               	movlw	0
  7034  014788  0101               	movlb	1	; () banked
  7035  01478A  6FD4               	movwf	(?___ftmul+2)& (0+255),b
  7036                           
  7037                           ; BSR set to: 1
  7038  01478C  0012               	return	
  7039  01478E                     l13697:
  7040                           
  7041                           ; BSR set to: 1
  7042  01478E  C1D7  F1D8         	movff	___ftmul@f2+2,??___ftmul
  7043  014792  0101               	movlb	1	; () banked
  7044  014794  6BD9               	clrf	(??___ftmul+1)& (0+255),b
  7045  014796  6BDA               	clrf	(??___ftmul+2)& (0+255),b
  7046  014798  0101               	movlb	1	; () banked
  7047  01479A  35D6               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7048  01479C  0101               	movlb	1	; () banked
  7049  01479E  37D8               	rlcf	??___ftmul& (0+255),f,b
  7050  0147A0  E301               	bnc	u16261
  7051  0147A2  81D9               	bsf	(??___ftmul+1)& (0+255),0,b
  7052  0147A4                     u16261:
  7053  0147A4  0101               	movlb	1	; () banked
  7054  0147A6  51D8               	movf	??___ftmul& (0+255),w,b
  7055  0147A8  0101               	movlb	1	; () banked
  7056  0147AA  6FE0               	movwf	___ftmul@sign& (0+255),b
  7057  0147AC  0101               	movlb	1	; () banked
  7058  0147AE  51E0               	movf	___ftmul@sign& (0+255),w,b
  7059  0147B0  A4D8               	btfss	status,2,c
  7060  0147B2  D00A               	goto	l13703
  7061                           
  7062                           ; BSR set to: 1
  7063  0147B4  0E00               	movlw	0
  7064  0147B6  0101               	movlb	1	; () banked
  7065  0147B8  6FD2               	movwf	?___ftmul& (0+255),b
  7066  0147BA  0E00               	movlw	0
  7067  0147BC  0101               	movlb	1	; () banked
  7068  0147BE  6FD3               	movwf	(?___ftmul+1)& (0+255),b
  7069  0147C0  0E00               	movlw	0
  7070  0147C2  0101               	movlb	1	; () banked
  7071  0147C4  6FD4               	movwf	(?___ftmul+2)& (0+255),b
  7072                           
  7073                           ; BSR set to: 1
  7074  0147C6  0012               	return	
  7075  0147C8                     l13703:
  7076                           
  7077                           ; BSR set to: 1
  7078  0147C8  0101               	movlb	1	; () banked
  7079  0147CA  51E0               	movf	___ftmul@sign& (0+255),w,b
  7080  0147CC  0F7B               	addlw	123
  7081  0147CE  0101               	movlb	1	; () banked
  7082  0147D0  27DB               	addwf	___ftmul@exp& (0+255),f,b
  7083                           
  7084                           ; BSR set to: 1
  7085  0147D2  C1D4  F1E0         	movff	___ftmul@f1+2,___ftmul@sign
  7086  0147D6  0101               	movlb	1	; () banked
  7087  0147D8  51D7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7088  0147DA  0101               	movlb	1	; () banked
  7089  0147DC  1BE0               	xorwf	___ftmul@sign& (0+255),f,b
  7090  0147DE  0E80               	movlw	128
  7091  0147E0  0101               	movlb	1	; () banked
  7092  0147E2  17E0               	andwf	___ftmul@sign& (0+255),f,b
  7093                           
  7094                           ; BSR set to: 1
  7095  0147E4  0101               	movlb	1	; () banked
  7096  0147E6  8FD3               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7097                           
  7098                           ; BSR set to: 1
  7099  0147E8  0101               	movlb	1	; () banked
  7100  0147EA  8FD6               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7101                           
  7102                           ; BSR set to: 1
  7103  0147EC  0EFF               	movlw	255
  7104  0147EE  0101               	movlb	1	; () banked
  7105  0147F0  17D5               	andwf	___ftmul@f2& (0+255),f,b
  7106  0147F2  0EFF               	movlw	255
  7107  0147F4  0101               	movlb	1	; () banked
  7108  0147F6  17D6               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7109  0147F8  0E00               	movlw	0
  7110  0147FA  0101               	movlb	1	; () banked
  7111  0147FC  17D7               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7112                           
  7113                           ; BSR set to: 1
  7114  0147FE  0E00               	movlw	0
  7115  014800  0101               	movlb	1	; () banked
  7116  014802  6FDC               	movwf	___ftmul@f3_as_product& (0+255),b
  7117  014804  0E00               	movlw	0
  7118  014806  0101               	movlb	1	; () banked
  7119  014808  6FDD               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7120  01480A  0E00               	movlw	0
  7121  01480C  0101               	movlb	1	; () banked
  7122  01480E  6FDE               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7123                           
  7124                           ; BSR set to: 1
  7125  014810  0E07               	movlw	7
  7126  014812  0101               	movlb	1	; () banked
  7127  014814  6FDF               	movwf	___ftmul@cntr& (0+255),b
  7128  014816                     l13717:
  7129                           
  7130                           ; BSR set to: 1
  7131  014816  0101               	movlb	1	; () banked
  7132  014818  A1D2               	btfss	___ftmul@f1& (0+255),0,b
  7133  01481A  D00C               	goto	l13721
  7134                           
  7135                           ; BSR set to: 1
  7136  01481C  0101               	movlb	1	; () banked
  7137  01481E  51D5               	movf	___ftmul@f2& (0+255),w,b
  7138  014820  0101               	movlb	1	; () banked
  7139  014822  27DC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7140  014824  0101               	movlb	1	; () banked
  7141  014826  51D6               	movf	(___ftmul@f2+1)& (0+255),w,b
  7142  014828  0101               	movlb	1	; () banked
  7143  01482A  23DD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7144  01482C  0101               	movlb	1	; () banked
  7145  01482E  51D7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7146  014830  0101               	movlb	1	; () banked
  7147  014832  23DE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7148  014834                     l13721:
  7149                           
  7150                           ; BSR set to: 1
  7151  014834  0101               	movlb	1	; () banked
  7152  014836  90D8               	bcf	status,0,c
  7153  014838  33D4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7154  01483A  33D3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7155  01483C  33D2               	rrcf	___ftmul@f1& (0+255),f,b
  7156  01483E  0101               	movlb	1	; () banked
  7157  014840  90D8               	bcf	status,0,c
  7158  014842  37D5               	rlcf	___ftmul@f2& (0+255),f,b
  7159  014844  37D6               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7160  014846  37D7               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7161                           
  7162                           ; BSR set to: 1
  7163  014848  0101               	movlb	1	; () banked
  7164  01484A  2FDF               	decfsz	___ftmul@cntr& (0+255),f,b
  7165  01484C  D7E4               	goto	l13717
  7166                           
  7167                           ; BSR set to: 1
  7168                           
  7169                           ; BSR set to: 1
  7170  01484E  0E09               	movlw	9
  7171  014850  0101               	movlb	1	; () banked
  7172  014852  6FDF               	movwf	___ftmul@cntr& (0+255),b
  7173  014854                     l13727:
  7174                           
  7175                           ; BSR set to: 1
  7176  014854  0101               	movlb	1	; () banked
  7177  014856  A1D2               	btfss	___ftmul@f1& (0+255),0,b
  7178  014858  D00C               	goto	l13731
  7179                           
  7180                           ; BSR set to: 1
  7181  01485A  0101               	movlb	1	; () banked
  7182  01485C  51D5               	movf	___ftmul@f2& (0+255),w,b
  7183  01485E  0101               	movlb	1	; () banked
  7184  014860  27DC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7185  014862  0101               	movlb	1	; () banked
  7186  014864  51D6               	movf	(___ftmul@f2+1)& (0+255),w,b
  7187  014866  0101               	movlb	1	; () banked
  7188  014868  23DD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7189  01486A  0101               	movlb	1	; () banked
  7190  01486C  51D7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7191  01486E  0101               	movlb	1	; () banked
  7192  014870  23DE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7193  014872                     l13731:
  7194                           
  7195                           ; BSR set to: 1
  7196  014872  0101               	movlb	1	; () banked
  7197  014874  90D8               	bcf	status,0,c
  7198  014876  33D4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7199  014878  33D3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7200  01487A  33D2               	rrcf	___ftmul@f1& (0+255),f,b
  7201  01487C  0101               	movlb	1	; () banked
  7202  01487E  90D8               	bcf	status,0,c
  7203  014880  33DE               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7204  014882  33DD               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7205  014884  33DC               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7206                           
  7207                           ; BSR set to: 1
  7208  014886  0101               	movlb	1	; () banked
  7209  014888  2FDF               	decfsz	___ftmul@cntr& (0+255),f,b
  7210  01488A  D7E4               	goto	l13727
  7211                           
  7212                           ; BSR set to: 1
  7213                           
  7214                           ; BSR set to: 1
  7215  01488C  C1DC  F18A         	movff	___ftmul@f3_as_product,___ftpack@arg
  7216  014890  C1DD  F18B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7217  014894  C1DE  F18C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7218  014898  C1DB  F18D         	movff	___ftmul@exp,___ftpack@exp
  7219  01489C  C1E0  F18E         	movff	___ftmul@sign,___ftpack@sign
  7220  0148A0  ECFD  F0AA         	call	___ftpack	;wreg free
  7221  0148A4  C18A  F1D2         	movff	?___ftpack,?___ftmul
  7222  0148A8  C18B  F1D3         	movff	?___ftpack+1,?___ftmul+1
  7223  0148AC  C18C  F1D4         	movff	?___ftpack+2,?___ftmul+2
  7224  0148B0  0012               	return	
  7225  0148B2                     __end_of___ftmul:
  7226                           	opt stack 0
  7227                           tblptru	equ	0xFF8
  7228                           tblptrh	equ	0xFF7
  7229                           tblptrl	equ	0xFF6
  7230                           tablat	equ	0xFF5
  7231                           prodh	equ	0xFF4
  7232                           prodl	equ	0xFF3
  7233                           postinc0	equ	0xFEE
  7234                           plusw0	equ	0xFEB
  7235                           wreg	equ	0xFE8
  7236                           indf1	equ	0xFE7
  7237                           postdec1	equ	0xFE5
  7238                           fsr1h	equ	0xFE2
  7239                           fsr1l	equ	0xFE1
  7240                           indf2	equ	0xFDF
  7241                           postinc2	equ	0xFDE
  7242                           postdec2	equ	0xFDD
  7243                           plusw2	equ	0xFDB
  7244                           fsr2h	equ	0xFDA
  7245                           fsr2l	equ	0xFD9
  7246                           status	equ	0xFD8
  7247                           
  7248 ;; *************** function ___ftdiv *****************
  7249 ;; Defined at:
  7250 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  f1              3   21[BANK1 ] float 
  7253 ;;  f2              3   24[BANK1 ] float 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  f3              3   31[BANK1 ] float 
  7256 ;;  sign            1   35[BANK1 ] unsigned char 
  7257 ;;  exp             1   34[BANK1 ] unsigned char 
  7258 ;;  cntr            1   30[BANK1 ] unsigned char 
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  3   21[BANK1 ] float 
  7261 ;; Registers used:
  7262 ;;		wreg, status,2, status,0, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7268 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7269 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7270 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7271 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7272 ;;Total ram usage:       15 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:   10
  7275 ;; This function calls:
  7276 ;;		___ftpack
  7277 ;; This function is called by:
  7278 ;;		_read_sensors
  7279 ;;		_send_initial_update
  7280 ;;		_send_periodical_update
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           	psect	text16
  7285  014A08                     __ptext16:
  7286                           	opt stack 0
  7287  014A08                     ___ftdiv:
  7288                           	opt stack 19
  7289                           
  7290                           ;incstack = 0
  7291  014A08  C1A1  F1A5         	movff	___ftdiv@f1+2,??___ftdiv
  7292  014A0C  0101               	movlb	1	; () banked
  7293  014A0E  6BA6               	clrf	(??___ftdiv+1)& (0+255),b
  7294  014A10  6BA7               	clrf	(??___ftdiv+2)& (0+255),b
  7295  014A12  0101               	movlb	1	; () banked
  7296  014A14  35A0               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  7297  014A16  0101               	movlb	1	; () banked
  7298  014A18  37A5               	rlcf	??___ftdiv& (0+255),f,b
  7299  014A1A  E301               	bnc	u16191
  7300  014A1C  81A6               	bsf	(??___ftdiv+1)& (0+255),0,b
  7301  014A1E                     u16191:
  7302  014A1E  0101               	movlb	1	; () banked
  7303  014A20  51A5               	movf	??___ftdiv& (0+255),w,b
  7304  014A22  0101               	movlb	1	; () banked
  7305  014A24  6FAC               	movwf	___ftdiv@exp& (0+255),b
  7306  014A26  0101               	movlb	1	; () banked
  7307  014A28  51AC               	movf	___ftdiv@exp& (0+255),w,b
  7308  014A2A  A4D8               	btfss	status,2,c
  7309  014A2C  D00A               	goto	l13651
  7310                           
  7311                           ; BSR set to: 1
  7312  014A2E  0E00               	movlw	0
  7313  014A30  0101               	movlb	1	; () banked
  7314  014A32  6F9F               	movwf	?___ftdiv& (0+255),b
  7315  014A34  0E00               	movlw	0
  7316  014A36  0101               	movlb	1	; () banked
  7317  014A38  6FA0               	movwf	(?___ftdiv+1)& (0+255),b
  7318  014A3A  0E00               	movlw	0
  7319  014A3C  0101               	movlb	1	; () banked
  7320  014A3E  6FA1               	movwf	(?___ftdiv+2)& (0+255),b
  7321                           
  7322                           ; BSR set to: 1
  7323  014A40  0012               	return	
  7324  014A42                     l13651:
  7325                           
  7326                           ; BSR set to: 1
  7327  014A42  C1A4  F1A5         	movff	___ftdiv@f2+2,??___ftdiv
  7328  014A46  0101               	movlb	1	; () banked
  7329  014A48  6BA6               	clrf	(??___ftdiv+1)& (0+255),b
  7330  014A4A  6BA7               	clrf	(??___ftdiv+2)& (0+255),b
  7331  014A4C  0101               	movlb	1	; () banked
  7332  014A4E  35A3               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  7333  014A50  0101               	movlb	1	; () banked
  7334  014A52  37A5               	rlcf	??___ftdiv& (0+255),f,b
  7335  014A54  E301               	bnc	u16211
  7336  014A56  81A6               	bsf	(??___ftdiv+1)& (0+255),0,b
  7337  014A58                     u16211:
  7338  014A58  0101               	movlb	1	; () banked
  7339  014A5A  51A5               	movf	??___ftdiv& (0+255),w,b
  7340  014A5C  0101               	movlb	1	; () banked
  7341  014A5E  6FAD               	movwf	___ftdiv@sign& (0+255),b
  7342  014A60  0101               	movlb	1	; () banked
  7343  014A62  51AD               	movf	___ftdiv@sign& (0+255),w,b
  7344  014A64  A4D8               	btfss	status,2,c
  7345  014A66  D00A               	goto	l13657
  7346                           
  7347                           ; BSR set to: 1
  7348  014A68  0E00               	movlw	0
  7349  014A6A  0101               	movlb	1	; () banked
  7350  014A6C  6F9F               	movwf	?___ftdiv& (0+255),b
  7351  014A6E  0E00               	movlw	0
  7352  014A70  0101               	movlb	1	; () banked
  7353  014A72  6FA0               	movwf	(?___ftdiv+1)& (0+255),b
  7354  014A74  0E00               	movlw	0
  7355  014A76  0101               	movlb	1	; () banked
  7356  014A78  6FA1               	movwf	(?___ftdiv+2)& (0+255),b
  7357                           
  7358                           ; BSR set to: 1
  7359  014A7A  0012               	return	
  7360  014A7C                     l13657:
  7361                           
  7362                           ; BSR set to: 1
  7363  014A7C  0E00               	movlw	0
  7364  014A7E  0101               	movlb	1	; () banked
  7365  014A80  6FA9               	movwf	___ftdiv@f3& (0+255),b
  7366  014A82  0E00               	movlw	0
  7367  014A84  0101               	movlb	1	; () banked
  7368  014A86  6FAA               	movwf	(___ftdiv@f3+1)& (0+255),b
  7369  014A88  0E00               	movlw	0
  7370  014A8A  0101               	movlb	1	; () banked
  7371  014A8C  6FAB               	movwf	(___ftdiv@f3+2)& (0+255),b
  7372                           
  7373                           ; BSR set to: 1
  7374  014A8E  0101               	movlb	1	; () banked
  7375  014A90  51AD               	movf	___ftdiv@sign& (0+255),w,b
  7376  014A92  0F89               	addlw	137
  7377  014A94  0101               	movlb	1	; () banked
  7378  014A96  5FAC               	subwf	___ftdiv@exp& (0+255),f,b
  7379                           
  7380                           ; BSR set to: 1
  7381  014A98  C1A1  F1AD         	movff	___ftdiv@f1+2,___ftdiv@sign
  7382                           
  7383                           ; BSR set to: 1
  7384  014A9C  0101               	movlb	1	; () banked
  7385  014A9E  51A4               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7386  014AA0  0101               	movlb	1	; () banked
  7387  014AA2  1BAD               	xorwf	___ftdiv@sign& (0+255),f,b
  7388                           
  7389                           ; BSR set to: 1
  7390  014AA4  0E80               	movlw	128
  7391  014AA6  0101               	movlb	1	; () banked
  7392  014AA8  17AD               	andwf	___ftdiv@sign& (0+255),f,b
  7393                           
  7394                           ; BSR set to: 1
  7395  014AAA  0101               	movlb	1	; () banked
  7396  014AAC  8FA0               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  7397                           
  7398                           ; BSR set to: 1
  7399  014AAE  0EFF               	movlw	255
  7400  014AB0  0101               	movlb	1	; () banked
  7401  014AB2  179F               	andwf	___ftdiv@f1& (0+255),f,b
  7402  014AB4  0EFF               	movlw	255
  7403  014AB6  0101               	movlb	1	; () banked
  7404  014AB8  17A0               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  7405  014ABA  0E00               	movlw	0
  7406  014ABC  0101               	movlb	1	; () banked
  7407  014ABE  17A1               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  7408                           
  7409                           ; BSR set to: 1
  7410  014AC0  0101               	movlb	1	; () banked
  7411  014AC2  8FA3               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  7412                           
  7413                           ; BSR set to: 1
  7414  014AC4  0EFF               	movlw	255
  7415  014AC6  0101               	movlb	1	; () banked
  7416  014AC8  17A2               	andwf	___ftdiv@f2& (0+255),f,b
  7417  014ACA  0EFF               	movlw	255
  7418  014ACC  0101               	movlb	1	; () banked
  7419  014ACE  17A3               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  7420  014AD0  0E00               	movlw	0
  7421  014AD2  0101               	movlb	1	; () banked
  7422  014AD4  17A4               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  7423                           
  7424                           ; BSR set to: 1
  7425  014AD6  0E18               	movlw	24
  7426  014AD8  0101               	movlb	1	; () banked
  7427  014ADA  6FA8               	movwf	___ftdiv@cntr& (0+255),b
  7428  014ADC                     l13677:
  7429                           
  7430                           ; BSR set to: 1
  7431  014ADC  0101               	movlb	1	; () banked
  7432  014ADE  90D8               	bcf	status,0,c
  7433  014AE0  37A9               	rlcf	___ftdiv@f3& (0+255),f,b
  7434  014AE2  37AA               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  7435  014AE4  37AB               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  7436                           
  7437                           ; BSR set to: 1
  7438  014AE6  0101               	movlb	1	; () banked
  7439  014AE8  51A2               	movf	___ftdiv@f2& (0+255),w,b
  7440  014AEA  0101               	movlb	1	; () banked
  7441  014AEC  5D9F               	subwf	___ftdiv@f1& (0+255),w,b
  7442  014AEE  0101               	movlb	1	; () banked
  7443  014AF0  51A3               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7444  014AF2  0101               	movlb	1	; () banked
  7445  014AF4  59A0               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  7446  014AF6  0101               	movlb	1	; () banked
  7447  014AF8  51A4               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7448  014AFA  0101               	movlb	1	; () banked
  7449  014AFC  59A1               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  7450  014AFE  A0D8               	btfss	status,0,c
  7451  014B00  D00E               	goto	l1818
  7452                           
  7453                           ; BSR set to: 1
  7454  014B02  0101               	movlb	1	; () banked
  7455  014B04  51A2               	movf	___ftdiv@f2& (0+255),w,b
  7456  014B06  0101               	movlb	1	; () banked
  7457  014B08  5F9F               	subwf	___ftdiv@f1& (0+255),f,b
  7458  014B0A  0101               	movlb	1	; () banked
  7459  014B0C  51A3               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7460  014B0E  0101               	movlb	1	; () banked
  7461  014B10  5BA0               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  7462  014B12  0101               	movlb	1	; () banked
  7463  014B14  51A4               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7464  014B16  0101               	movlb	1	; () banked
  7465  014B18  5BA1               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  7466                           
  7467                           ; BSR set to: 1
  7468  014B1A  0101               	movlb	1	; () banked
  7469  014B1C  81A9               	bsf	___ftdiv@f3& (0+255),0,b
  7470  014B1E                     l1818:
  7471                           
  7472                           ; BSR set to: 1
  7473  014B1E  0101               	movlb	1	; () banked
  7474  014B20  90D8               	bcf	status,0,c
  7475  014B22  379F               	rlcf	___ftdiv@f1& (0+255),f,b
  7476  014B24  37A0               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  7477  014B26  37A1               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  7478                           
  7479                           ; BSR set to: 1
  7480  014B28  0101               	movlb	1	; () banked
  7481  014B2A  2FA8               	decfsz	___ftdiv@cntr& (0+255),f,b
  7482  014B2C  D7D7               	goto	l13677
  7483                           
  7484                           ; BSR set to: 1
  7485                           
  7486                           ; BSR set to: 1
  7487  014B2E  C1A9  F18A         	movff	___ftdiv@f3,___ftpack@arg
  7488  014B32  C1AA  F18B         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7489  014B36  C1AB  F18C         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7490  014B3A  C1AC  F18D         	movff	___ftdiv@exp,___ftpack@exp
  7491  014B3E  C1AD  F18E         	movff	___ftdiv@sign,___ftpack@sign
  7492  014B42  ECFD  F0AA         	call	___ftpack	;wreg free
  7493  014B46  C18A  F19F         	movff	?___ftpack,?___ftdiv
  7494  014B4A  C18B  F1A0         	movff	?___ftpack+1,?___ftdiv+1
  7495  014B4E  C18C  F1A1         	movff	?___ftpack+2,?___ftdiv+2
  7496  014B52  0012               	return	
  7497  014B54                     __end_of___ftdiv:
  7498                           	opt stack 0
  7499                           tblptru	equ	0xFF8
  7500                           tblptrh	equ	0xFF7
  7501                           tblptrl	equ	0xFF6
  7502                           tablat	equ	0xFF5
  7503                           prodh	equ	0xFF4
  7504                           prodl	equ	0xFF3
  7505                           postinc0	equ	0xFEE
  7506                           plusw0	equ	0xFEB
  7507                           wreg	equ	0xFE8
  7508                           indf1	equ	0xFE7
  7509                           postdec1	equ	0xFE5
  7510                           fsr1h	equ	0xFE2
  7511                           fsr1l	equ	0xFE1
  7512                           indf2	equ	0xFDF
  7513                           postinc2	equ	0xFDE
  7514                           postdec2	equ	0xFDD
  7515                           plusw2	equ	0xFDB
  7516                           fsr2h	equ	0xFDA
  7517                           fsr2l	equ	0xFD9
  7518                           status	equ	0xFD8
  7519                           
  7520 ;; *************** function ___ftpack *****************
  7521 ;; Defined at:
  7522 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  arg             3    0[BANK1 ] unsigned um
  7525 ;;  exp             1    3[BANK1 ] unsigned char 
  7526 ;;  sign            1    4[BANK1 ] unsigned char 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;		None
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  3    0[BANK1 ] float 
  7531 ;; Registers used:
  7532 ;;		wreg, status,2, status,0
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7538 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7540 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7541 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7542 ;;Total ram usage:        8 bytes
  7543 ;; Hardware stack levels used:    1
  7544 ;; Hardware stack levels required when called:    9
  7545 ;; This function calls:
  7546 ;;		Nothing
  7547 ;; This function is called by:
  7548 ;;		___altoft
  7549 ;;		___ftadd
  7550 ;;		___ftdiv
  7551 ;;		___ftmul
  7552 ;;		___lltoft
  7553 ;;		___lwtoft
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text17
  7558  0155FA                     __ptext17:
  7559                           	opt stack 0
  7560  0155FA                     ___ftpack:
  7561                           	opt stack 18
  7562                           
  7563                           ;incstack = 0
  7564  0155FA  0101               	movlb	1	; () banked
  7565  0155FC  518D               	movf	___ftpack@exp& (0+255),w,b
  7566  0155FE  0101               	movlb	1	; () banked
  7567  015600  B4D8               	btfsc	status,2,c
  7568  015602  D008               	goto	l12523
  7569                           
  7570                           ; BSR set to: 1
  7571  015604  0101               	movlb	1	; () banked
  7572  015606  518A               	movf	___ftpack@arg& (0+255),w,b
  7573  015608  0101               	movlb	1	; () banked
  7574  01560A  118B               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  7575  01560C  0101               	movlb	1	; () banked
  7576  01560E  118C               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  7577  015610  A4D8               	btfss	status,2,c
  7578  015612  D011               	goto	l12529
  7579  015614                     l12523:
  7580                           
  7581                           ; BSR set to: 1
  7582  015614  0E00               	movlw	0
  7583  015616  0101               	movlb	1	; () banked
  7584  015618  6F8A               	movwf	?___ftpack& (0+255),b
  7585  01561A  0E00               	movlw	0
  7586  01561C  0101               	movlb	1	; () banked
  7587  01561E  6F8B               	movwf	(?___ftpack+1)& (0+255),b
  7588  015620  0E00               	movlw	0
  7589  015622  0101               	movlb	1	; () banked
  7590  015624  6F8C               	movwf	(?___ftpack+2)& (0+255),b
  7591                           
  7592                           ; BSR set to: 1
  7593  015626  0012               	return	
  7594  015628                     l12527:
  7595                           
  7596                           ; BSR set to: 1
  7597  015628  0101               	movlb	1	; () banked
  7598  01562A  2B8D               	incf	___ftpack@exp& (0+255),f,b
  7599  01562C  0101               	movlb	1	; () banked
  7600  01562E  90D8               	bcf	status,0,c
  7601  015630  338C               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  7602  015632  338B               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  7603  015634  338A               	rrcf	___ftpack@arg& (0+255),f,b
  7604  015636                     l12529:
  7605                           
  7606                           ; BSR set to: 1
  7607  015636  0E00               	movlw	0
  7608  015638  0101               	movlb	1	; () banked
  7609  01563A  158A               	andwf	___ftpack@arg& (0+255),w,b
  7610  01563C  0101               	movlb	1	; () banked
  7611  01563E  6F8F               	movwf	??___ftpack& (0+255),b
  7612  015640  0E00               	movlw	0
  7613  015642  0101               	movlb	1	; () banked
  7614  015644  158B               	andwf	(___ftpack@arg+1)& (0+255),w,b
  7615  015646  0101               	movlb	1	; () banked
  7616  015648  6F90               	movwf	(??___ftpack+1)& (0+255),b
  7617  01564A  0EFE               	movlw	254
  7618  01564C  0101               	movlb	1	; () banked
  7619  01564E  158C               	andwf	(___ftpack@arg+2)& (0+255),w,b
  7620  015650  0101               	movlb	1	; () banked
  7621  015652  6F91               	movwf	(??___ftpack+2)& (0+255),b
  7622  015654  0101               	movlb	1	; () banked
  7623  015656  518F               	movf	??___ftpack& (0+255),w,b
  7624  015658  0101               	movlb	1	; () banked
  7625  01565A  1190               	iorwf	(??___ftpack+1)& (0+255),w,b
  7626  01565C  0101               	movlb	1	; () banked
  7627  01565E  1191               	iorwf	(??___ftpack+2)& (0+255),w,b
  7628  015660  B4D8               	btfsc	status,2,c
  7629  015662  D011               	goto	l12535
  7630  015664  D7E1               	goto	l12527
  7631  015666                     l12531:
  7632                           
  7633                           ; BSR set to: 1
  7634  015666  0101               	movlb	1	; () banked
  7635  015668  2B8D               	incf	___ftpack@exp& (0+255),f,b
  7636                           
  7637                           ; BSR set to: 1
  7638  01566A  0E01               	movlw	1
  7639  01566C  0101               	movlb	1	; () banked
  7640  01566E  278A               	addwf	___ftpack@arg& (0+255),f,b
  7641  015670  0E00               	movlw	0
  7642  015672  0101               	movlb	1	; () banked
  7643  015674  238B               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  7644  015676  0E00               	movlw	0
  7645  015678  0101               	movlb	1	; () banked
  7646  01567A  238C               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  7647  01567C  0101               	movlb	1	; () banked
  7648  01567E  90D8               	bcf	status,0,c
  7649  015680  338C               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  7650  015682  338B               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  7651  015684  338A               	rrcf	___ftpack@arg& (0+255),f,b
  7652  015686                     l12535:
  7653                           
  7654                           ; BSR set to: 1
  7655  015686  0E00               	movlw	0
  7656  015688  0101               	movlb	1	; () banked
  7657  01568A  158A               	andwf	___ftpack@arg& (0+255),w,b
  7658  01568C  0101               	movlb	1	; () banked
  7659  01568E  6F8F               	movwf	??___ftpack& (0+255),b
  7660  015690  0E00               	movlw	0
  7661  015692  0101               	movlb	1	; () banked
  7662  015694  158B               	andwf	(___ftpack@arg+1)& (0+255),w,b
  7663  015696  0101               	movlb	1	; () banked
  7664  015698  6F90               	movwf	(??___ftpack+1)& (0+255),b
  7665  01569A  0EFF               	movlw	255
  7666  01569C  0101               	movlb	1	; () banked
  7667  01569E  158C               	andwf	(___ftpack@arg+2)& (0+255),w,b
  7668  0156A0  0101               	movlb	1	; () banked
  7669  0156A2  6F91               	movwf	(??___ftpack+2)& (0+255),b
  7670  0156A4  0101               	movlb	1	; () banked
  7671  0156A6  518F               	movf	??___ftpack& (0+255),w,b
  7672  0156A8  0101               	movlb	1	; () banked
  7673  0156AA  1190               	iorwf	(??___ftpack+1)& (0+255),w,b
  7674  0156AC  0101               	movlb	1	; () banked
  7675  0156AE  1191               	iorwf	(??___ftpack+2)& (0+255),w,b
  7676  0156B0  B4D8               	btfsc	status,2,c
  7677  0156B2  D008               	goto	l12539
  7678  0156B4  D7D8               	goto	l12531
  7679  0156B6                     l12537:
  7680                           
  7681                           ; BSR set to: 1
  7682  0156B6  0101               	movlb	1	; () banked
  7683  0156B8  078D               	decf	___ftpack@exp& (0+255),f,b
  7684  0156BA  0101               	movlb	1	; () banked
  7685  0156BC  90D8               	bcf	status,0,c
  7686  0156BE  378A               	rlcf	___ftpack@arg& (0+255),f,b
  7687  0156C0  378B               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  7688  0156C2  378C               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  7689  0156C4                     l12539:
  7690                           
  7691                           ; BSR set to: 1
  7692  0156C4  0101               	movlb	1	; () banked
  7693  0156C6  BF8B               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  7694  0156C8  D004               	goto	l1735
  7695                           
  7696                           ; BSR set to: 1
  7697  0156CA  0E02               	movlw	2
  7698  0156CC  0101               	movlb	1	; () banked
  7699  0156CE  618D               	cpfslt	___ftpack@exp& (0+255),b
  7700  0156D0  D7F2               	goto	l12537
  7701  0156D2                     l1735:
  7702                           
  7703                           ; BSR set to: 1
  7704  0156D2  0101               	movlb	1	; () banked
  7705  0156D4  B18D               	btfsc	___ftpack@exp& (0+255),0,b
  7706  0156D6  D002               	goto	l12545
  7707                           
  7708                           ; BSR set to: 1
  7709  0156D8  0101               	movlb	1	; () banked
  7710  0156DA  9F8B               	bcf	(___ftpack@arg+1)& (0+255),7,b
  7711  0156DC                     l12545:
  7712                           
  7713                           ; BSR set to: 1
  7714  0156DC  0101               	movlb	1	; () banked
  7715  0156DE  90D8               	bcf	status,0,c
  7716  0156E0  338D               	rrcf	___ftpack@exp& (0+255),f,b
  7717  0156E2  0101               	movlb	1	; () banked
  7718  0156E4  518D               	movf	___ftpack@exp& (0+255),w,b
  7719  0156E6  0101               	movlb	1	; () banked
  7720  0156E8  138C               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  7721                           
  7722                           ; BSR set to: 1
  7723  0156EA  0101               	movlb	1	; () banked
  7724  0156EC  518E               	movf	___ftpack@sign& (0+255),w,b
  7725  0156EE  0101               	movlb	1	; () banked
  7726  0156F0  B4D8               	btfsc	status,2,c
  7727  0156F2  D002               	goto	l12551
  7728                           
  7729                           ; BSR set to: 1
  7730  0156F4  0101               	movlb	1	; () banked
  7731  0156F6  8F8C               	bsf	(___ftpack@arg+2)& (0+255),7,b
  7732  0156F8                     l12551:
  7733                           
  7734                           ; BSR set to: 1
  7735  0156F8  C18A  F18A         	movff	___ftpack@arg,?___ftpack
  7736  0156FC  C18B  F18B         	movff	___ftpack@arg+1,?___ftpack+1
  7737  015700  C18C  F18C         	movff	___ftpack@arg+2,?___ftpack+2
  7738  015704  0012               	return	
  7739  015706                     __end_of___ftpack:
  7740                           	opt stack 0
  7741                           tblptru	equ	0xFF8
  7742                           tblptrh	equ	0xFF7
  7743                           tblptrl	equ	0xFF6
  7744                           tablat	equ	0xFF5
  7745                           prodh	equ	0xFF4
  7746                           prodl	equ	0xFF3
  7747                           postinc0	equ	0xFEE
  7748                           plusw0	equ	0xFEB
  7749                           wreg	equ	0xFE8
  7750                           indf1	equ	0xFE7
  7751                           postdec1	equ	0xFE5
  7752                           fsr1h	equ	0xFE2
  7753                           fsr1l	equ	0xFE1
  7754                           indf2	equ	0xFDF
  7755                           postinc2	equ	0xFDE
  7756                           postdec2	equ	0xFDD
  7757                           plusw2	equ	0xFDB
  7758                           fsr2h	equ	0xFDA
  7759                           fsr2l	equ	0xFD9
  7760                           status	equ	0xFD8
  7761                           
  7762 ;; *************** function _WriteI2C1 *****************
  7763 ;; Defined at:
  7764 ;;		line 12 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c1writ.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  data_out        1    wreg     unsigned char 
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  data_out        1    1[BANK1 ] unsigned char 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  1    wreg      char 
  7771 ;; Registers used:
  7772 ;;		wreg, status,2, status,0
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7779 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7780 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;Total ram usage:        2 bytes
  7783 ;; Hardware stack levels used:    1
  7784 ;; Hardware stack levels required when called:    9
  7785 ;; This function calls:
  7786 ;;		Nothing
  7787 ;; This function is called by:
  7788 ;;		_read_sensors
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text18
  7793  016994                     __ptext18:
  7794                           	opt stack 0
  7795  016994                     _WriteI2C1:
  7796                           	opt stack 20
  7797                           
  7798                           ; BSR set to: 1
  7799                           ;incstack = 0
  7800                           ;WriteI2C1@data_out stored from wreg
  7801  016994  0101               	movlb	1	; () banked
  7802  016996  6F8B               	movwf	WriteI2C1@data_out& (0+255),b
  7803  016998  C18B  FFC9         	movff	WriteI2C1@data_out,4041	;volatile
  7804  01699C  BEC6               	btfsc	4038,7,c	;volatile
  7805  01699E  0012               	return	
  7806                           
  7807                           ;	Return value of _WriteI2C1 is never used
  7808  0169A0  50C6               	movf	4038,w,c	;volatile
  7809  0169A2  0B0F               	andlw	15
  7810  0169A4  0A08               	xorlw	8
  7811  0169A6  B4D8               	btfsc	status,2,c
  7812  0169A8  D00C               	goto	l13531
  7813  0169AA  50C6               	movf	4038,w,c	;volatile
  7814  0169AC  0B0F               	andlw	15
  7815  0169AE  0A0B               	xorlw	11
  7816  0169B0  B4D8               	btfsc	status,2,c
  7817  0169B2  D007               	goto	l13531
  7818  0169B4  88C6               	bsf	4038,4,c	;volatile
  7819  0169B6                     l1485:
  7820  0169B6  A69E               	btfss	3998,3,c	;volatile
  7821  0169B8  D7FE               	goto	l1485
  7822  0169BA  B4C7               	btfsc	4039,2,c	;volatile
  7823  0169BC  0012               	return	
  7824  0169BE  50C7               	movf	4039,w,c	;volatile
  7825                           
  7826                           ;	Return value of _WriteI2C1 is never used
  7827                           
  7828                           ;	Return value of _WriteI2C1 is never used
  7829  0169C0  0012               	return	
  7830  0169C2                     l13531:
  7831  0169C2  50C6               	movf	4038,w,c	;volatile
  7832  0169C4  0B0F               	andlw	15
  7833  0169C6  0A08               	xorlw	8
  7834  0169C8  B4D8               	btfsc	status,2,c
  7835  0169CA  D005               	goto	l1494
  7836  0169CC  50C6               	movf	4038,w,c	;volatile
  7837  0169CE  0B0F               	andlw	15
  7838  0169D0  0A0B               	xorlw	11
  7839  0169D2  A4D8               	btfss	status,2,c
  7840  0169D4  0012               	return	
  7841  0169D6                     l1494:
  7842  0169D6  B0C7               	btfsc	4039,0,c	;volatile
  7843  0169D8  D7FE               	goto	l1494
  7844  0169DA                     l13535:
  7845  0169DA  A4C7               	btfss	4039,2,c	;volatile
  7846  0169DC  D004               	goto	u16010
  7847  0169DE  0101               	movlb	1	; () banked
  7848  0169E0  6B8A               	clrf	??_WriteI2C1& (0+255),b
  7849  0169E2  2B8A               	incf	??_WriteI2C1& (0+255),f,b
  7850  0169E4  D002               	goto	u16018
  7851  0169E6                     u16010:
  7852  0169E6  0101               	movlb	1	; () banked
  7853  0169E8  6B8A               	clrf	??_WriteI2C1& (0+255),b
  7854  0169EA                     u16018:
  7855  0169EA  50C5               	movf	4037,w,c	;volatile
  7856  0169EC  0B1F               	andlw	31
  7857  0169EE  0101               	movlb	1	; () banked
  7858  0169F0  118A               	iorwf	??_WriteI2C1& (0+255),w,b
  7859  0169F2  0900               	iorlw	0
  7860  0169F4  A4D8               	btfss	status,2,c
  7861  0169F6  D7F1               	goto	l13535
  7862                           
  7863                           ; BSR set to: 1
  7864  0169F8  50C5               	movf	4037,w,c	;volatile
  7865                           
  7866                           ; BSR set to: 1
  7867                           
  7868                           ; BSR set to: 1
  7869                           
  7870                           ; BSR set to: 1
  7871                           
  7872                           ; BSR set to: 1
  7873                           ;	Return value of _WriteI2C1 is never used
  7874                           
  7875                           ; BSR set to: 1
  7876                           
  7877                           ; BSR set to: 1
  7878                           ;	Return value of _WriteI2C1 is never used
  7879  0169FA  0012               	return	
  7880  0169FC                     __end_of_WriteI2C1:
  7881                           	opt stack 0
  7882                           tblptru	equ	0xFF8
  7883                           tblptrh	equ	0xFF7
  7884                           tblptrl	equ	0xFF6
  7885                           tablat	equ	0xFF5
  7886                           prodh	equ	0xFF4
  7887                           prodl	equ	0xFF3
  7888                           postinc0	equ	0xFEE
  7889                           plusw0	equ	0xFEB
  7890                           wreg	equ	0xFE8
  7891                           indf1	equ	0xFE7
  7892                           postdec1	equ	0xFE5
  7893                           fsr1h	equ	0xFE2
  7894                           fsr1l	equ	0xFE1
  7895                           indf2	equ	0xFDF
  7896                           postinc2	equ	0xFDE
  7897                           postdec2	equ	0xFDD
  7898                           plusw2	equ	0xFDB
  7899                           fsr2h	equ	0xFDA
  7900                           fsr2l	equ	0xFD9
  7901                           status	equ	0xFD8
  7902                           
  7903 ;; *************** function _ReadI2C1 *****************
  7904 ;; Defined at:
  7905 ;;		line 11 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c1read.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;		None
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      unsigned char 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7923 ;;Total ram usage:        0 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    9
  7926 ;; This function calls:
  7927 ;;		Nothing
  7928 ;; This function is called by:
  7929 ;;		_read_sensors
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text19
  7934  016F38                     __ptext19:
  7935                           	opt stack 0
  7936  016F38                     _ReadI2C1:
  7937                           	opt stack 20
  7938                           
  7939                           ;incstack = 0
  7940  016F38  50C6               	movf	4038,w,c	;volatile
  7941  016F3A  0B0F               	andlw	15
  7942  016F3C  0A08               	xorlw	8
  7943  016F3E  B4D8               	btfsc	status,2,c
  7944  016F40  D004               	goto	l1460
  7945  016F42  50C6               	movf	4038,w,c	;volatile
  7946  016F44  0B0F               	andlw	15
  7947  016F46  0A0B               	xorlw	11
  7948  016F48  B4D8               	btfsc	status,2,c
  7949  016F4A                     l1460:
  7950  016F4A  86C5               	bsf	4037,3,c	;volatile
  7951  016F4C                     l1461:
  7952  016F4C  A0C7               	btfss	4039,0,c	;volatile
  7953  016F4E  D7FE               	goto	l1461
  7954  016F50  50C9               	movf	4041,w,c	;volatile
  7955  016F52  0012               	return	
  7956  016F54                     __end_of_ReadI2C1:
  7957                           	opt stack 0
  7958                           tblptru	equ	0xFF8
  7959                           tblptrh	equ	0xFF7
  7960                           tblptrl	equ	0xFF6
  7961                           tablat	equ	0xFF5
  7962                           prodh	equ	0xFF4
  7963                           prodl	equ	0xFF3
  7964                           postinc0	equ	0xFEE
  7965                           plusw0	equ	0xFEB
  7966                           wreg	equ	0xFE8
  7967                           indf1	equ	0xFE7
  7968                           postdec1	equ	0xFE5
  7969                           fsr1h	equ	0xFE2
  7970                           fsr1l	equ	0xFE1
  7971                           indf2	equ	0xFDF
  7972                           postinc2	equ	0xFDE
  7973                           postdec2	equ	0xFDD
  7974                           plusw2	equ	0xFDB
  7975                           fsr2h	equ	0xFDA
  7976                           fsr2l	equ	0xFD9
  7977                           status	equ	0xFD8
  7978                           
  7979 ;; *************** function _OpenI2C1 *****************
  7980 ;; Defined at:
  7981 ;;		line 29 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c1open.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;  sync_mode       1    wreg     unsigned char 
  7984 ;;  slew            1    0[BANK1 ] unsigned char 
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;  sync_mode       1    1[BANK1 ] unsigned char 
  7987 ;; Return value:  Size  Location     Type
  7988 ;;		None               void
  7989 ;; Registers used:
  7990 ;;		wreg, status,2, status,0
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7996 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7997 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7999 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8000 ;;Total ram usage:        2 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; Hardware stack levels required when called:    9
  8003 ;; This function calls:
  8004 ;;		Nothing
  8005 ;; This function is called by:
  8006 ;;		_read_sensors
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text20
  8011  016EDC                     __ptext20:
  8012                           	opt stack 0
  8013  016EDC                     _OpenI2C1:
  8014                           	opt stack 20
  8015                           
  8016                           ;incstack = 0
  8017                           ;OpenI2C1@sync_mode stored from wreg
  8018  016EDC  0101               	movlb	1	; () banked
  8019  016EDE  6F8B               	movwf	OpenI2C1@sync_mode& (0+255),b
  8020  016EE0  0E3F               	movlw	63
  8021  016EE2  16C7               	andwf	4039,f,c	;volatile
  8022  016EE4  0E00               	movlw	0
  8023  016EE6  6EC6               	movwf	4038,c	;volatile
  8024  016EE8  0E00               	movlw	0
  8025  016EEA  6EC5               	movwf	4037,c	;volatile
  8026  016EEC  0101               	movlb	1	; () banked
  8027  016EEE  518B               	movf	OpenI2C1@sync_mode& (0+255),w,b
  8028  016EF0  12C6               	iorwf	4038,f,c	;volatile
  8029  016EF2  0101               	movlb	1	; () banked
  8030  016EF4  518A               	movf	OpenI2C1@slew& (0+255),w,b
  8031  016EF6  12C7               	iorwf	4039,f,c	;volatile
  8032                           
  8033                           ; BSR set to: 1
  8034  016EF8  8AC6               	bsf	4038,5,c	;volatile
  8035                           
  8036                           ; BSR set to: 1
  8037  016EFA  0012               	return		;funcret
  8038  016EFC                     __end_of_OpenI2C1:
  8039                           	opt stack 0
  8040                           tblptru	equ	0xFF8
  8041                           tblptrh	equ	0xFF7
  8042                           tblptrl	equ	0xFF6
  8043                           tablat	equ	0xFF5
  8044                           prodh	equ	0xFF4
  8045                           prodl	equ	0xFF3
  8046                           postinc0	equ	0xFEE
  8047                           plusw0	equ	0xFEB
  8048                           wreg	equ	0xFE8
  8049                           indf1	equ	0xFE7
  8050                           postdec1	equ	0xFE5
  8051                           fsr1h	equ	0xFE2
  8052                           fsr1l	equ	0xFE1
  8053                           indf2	equ	0xFDF
  8054                           postinc2	equ	0xFDE
  8055                           postdec2	equ	0xFDD
  8056                           plusw2	equ	0xFDB
  8057                           fsr2h	equ	0xFDA
  8058                           fsr2l	equ	0xFD9
  8059                           status	equ	0xFD8
  8060                           
  8061 ;; *************** function _process_update_answer *****************
  8062 ;; Defined at:
  8063 ;;		line 318 in file "src/main.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;  ack_required    1   36[BANK3 ] unsigned char 
  8068 ;;  size            1   40[BANK3 ] unsigned char 
  8069 ;;  shortaddress    2   38[BANK3 ] unsigned char [2]
  8070 ;;  i               1   37[BANK3 ] unsigned char 
  8071 ;;  result          1   35[BANK3 ] unsigned char 
  8072 ;; Return value:  Size  Location     Type
  8073 ;;                  1    wreg      unsigned char 
  8074 ;; Registers used:
  8075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8076 ;; Tracked objects:
  8077 ;;		On entry : 0/0
  8078 ;;		On exit  : 0/0
  8079 ;;		Unchanged: 0/0
  8080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8082 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0
  8083 ;;      Temps:          0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
  8084 ;;      Totals:         0       0       0       0      13       0       0       0       0       0       0       0       
      +0       0       0       0
  8085 ;;Total ram usage:       13 bytes
  8086 ;; Hardware stack levels used:    1
  8087 ;; Hardware stack levels required when called:   19
  8088 ;; This function calls:
  8089 ;;		_MiApp_DiscardMessage
  8090 ;;		_MiApp_MessageAvailable
  8091 ;;		_MiApp_TransceiverPowerState
  8092 ;;		_decode_variable
  8093 ;;		_send_writables_update
  8094 ;;		_timer_reset
  8095 ;;		_update_variable
  8096 ;;		_wait_for_1_sec
  8097 ;; This function is called by:
  8098 ;;		_main
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102                           	psect	text21
  8103  013C0E                     __ptext21:
  8104                           	opt stack 0
  8105  013C0E                     _process_update_answer:
  8106                           	opt stack 11
  8107                           
  8108                           ;main.c: 320: uint8_t shortaddress[2];
  8109                           ;main.c: 321: uint8_t result = 0;
  8110                           
  8111                           ; BSR set to: 1
  8112                           ;incstack = 0
  8113  013C0E  0E00               	movlw	0
  8114  013C10  0103               	movlb	3	; () banked
  8115  013C12  6FF7               	movwf	process_update_answer@result& (0+255),b
  8116  013C14                     l1109:
  8117                           
  8118                           ; BSR set to: 3
  8119                           ;main.c: 328: {
  8120                           ;main.c: 329: for (i=0; i<200; i++)
  8121  013C14  0E00               	movlw	0
  8122  013C16  0103               	movlb	3	; () banked
  8123  013C18  6FF9               	movwf	process_update_answer@i& (0+255),b
  8124  013C1A                     l14701:
  8125                           
  8126                           ; BSR set to: 3
  8127  013C1A  0EC7               	movlw	199
  8128  013C1C  0103               	movlb	3	; () banked
  8129  013C1E  65F9               	cpfsgt	process_update_answer@i& (0+255),b
  8130  013C20  D001               	goto	l14705
  8131  013C22  D7F8               	goto	l1109
  8132  013C24                     l14705:
  8133                           
  8134                           ; BSR set to: 3
  8135                           ;main.c: 330: {
  8136                           ;main.c: 331: _delay((unsigned long)((10)*(8000000/4000.0)));
  8137  013C24  0E1A               	movlw	26
  8138  013C26  0103               	movlb	3	; () banked
  8139  013C28  6FF0               	movwf	??_process_update_answer& (0+255),b
  8140  013C2A  0EF8               	movlw	248
  8141  013C2C                     u18337:
  8142  013C2C  2EE8               	decfsz	wreg,f,c
  8143  013C2E  D7FE               	goto	u18337
  8144  013C30  2FF0               	decfsz	??_process_update_answer& (0+255),f,b
  8145  013C32  D7FC               	goto	u18337
  8146  013C34  D000               	nop2	
  8147                           
  8148                           ;main.c: 332: if(MiApp_MessageAvailable())
  8149  013C36  ECE8  F0B7         	call	_MiApp_MessageAvailable	;wreg free
  8150  013C3A  0900               	iorlw	0
  8151  013C3C  B4D8               	btfsc	status,2,c
  8152  013C3E  D0C9               	goto	l14775
  8153                           
  8154                           ;main.c: 333: {
  8155                           ;main.c: 334: shortaddress[0] = rxMessage.SourceAddress[0];
  8156  013C40  C10F  FFD9         	movff	_rxMessage+3,fsr2l
  8157  013C44  C110  FFDA         	movff	_rxMessage+4,fsr2h
  8158  013C48  50DF               	movf	indf2,w,c
  8159  013C4A  0103               	movlb	3	; () banked
  8160  013C4C  6FFA               	movwf	process_update_answer@shortaddress& (0+255),b
  8161                           
  8162                           ; BSR set to: 3
  8163                           ;main.c: 335: shortaddress[1] = rxMessage.SourceAddress[1];
  8164  013C4E  0101               	movlb	1	; () banked
  8165  013C50  EE20 F001          	lfsr	2,1
  8166  013C54  510F               	movf	(_rxMessage+3)& (0+255),w,b
  8167  013C56  26D9               	addwf	fsr2l,f,c
  8168  013C58  5110               	movf	(_rxMessage+4)& (0+255),w,b
  8169  013C5A  22DA               	addwfc	fsr2h,f,c
  8170  013C5C  50DF               	movf	indf2,w,c
  8171  013C5E  0103               	movlb	3	; () banked
  8172  013C60  6FFB               	movwf	(process_update_answer@shortaddress+1)& (0+255),b
  8173                           
  8174                           ; BSR set to: 3
  8175                           ;main.c: 336: uint8_t size = rxMessage.PayloadSize;
  8176  013C62  C113  F3FC         	movff	_rxMessage+7,process_update_answer@size
  8177                           
  8178                           ;main.c: 337: switch(rxMessage.Payload[0])
  8179  013C66  D0AC               	goto	l14773
  8180  013C68                     l14715:
  8181                           
  8182                           ;main.c: 342: if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00) && (size == 2))
  8183  013C68  0103               	movlb	3	; () banked
  8184  013C6A  51FA               	movf	process_update_answer@shortaddress& (0+255),w,b
  8185  013C6C  0103               	movlb	3	; () banked
  8186  013C6E  A4D8               	btfss	status,2,c
  8187  013C70  D009               	goto	l14725
  8188                           
  8189                           ; BSR set to: 3
  8190  013C72  0103               	movlb	3	; () banked
  8191  013C74  51FB               	movf	(process_update_answer@shortaddress+1)& (0+255),w,b
  8192  013C76  A4D8               	btfss	status,2,c
  8193  013C78  D005               	goto	l14725
  8194                           
  8195                           ; BSR set to: 3
  8196  013C7A  0E02               	movlw	2
  8197  013C7C  0103               	movlb	3	; () banked
  8198  013C7E  19FC               	xorwf	process_update_answer@size& (0+255),w,b
  8199  013C80  B4D8               	btfsc	status,2,c
  8200  013C82  0012               	return	
  8201  013C84                     l14725:
  8202                           
  8203                           ; BSR set to: 3
  8204                           ;main.c: 348: else if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00) && (size >
      +                           2))
  8205  013C84  0103               	movlb	3	; () banked
  8206  013C86  51FA               	movf	process_update_answer@shortaddress& (0+255),w,b
  8207  013C88  0103               	movlb	3	; () banked
  8208  013C8A  A4D8               	btfss	status,2,c
  8209  013C8C  D094               	goto	l14771
  8210                           
  8211                           ; BSR set to: 3
  8212  013C8E  0103               	movlb	3	; () banked
  8213  013C90  51FB               	movf	(process_update_answer@shortaddress+1)& (0+255),w,b
  8214  013C92  A4D8               	btfss	status,2,c
  8215  013C94  D090               	goto	l14771
  8216                           
  8217                           ; BSR set to: 3
  8218  013C96  0E02               	movlw	2
  8219  013C98  0103               	movlb	3	; () banked
  8220  013C9A  65FC               	cpfsgt	process_update_answer@size& (0+255),b
  8221  013C9C  D08C               	goto	l14771
  8222                           
  8223                           ; BSR set to: 3
  8224                           ;main.c: 349: {
  8225                           ;main.c: 350: bool ack_required = rxMessage.Payload[1];
  8226  013C9E  0101               	movlb	1	; () banked
  8227  013CA0  EE20 F001          	lfsr	2,1
  8228  013CA4  5111               	movf	(_rxMessage+5)& (0+255),w,b
  8229  013CA6  26D9               	addwf	fsr2l,f,c
  8230  013CA8  5112               	movf	(_rxMessage+6)& (0+255),w,b
  8231  013CAA  22DA               	addwfc	fsr2h,f,c
  8232  013CAC  50DF               	movf	indf2,w,c
  8233  013CAE  0103               	movlb	3	; () banked
  8234  013CB0  6FF8               	movwf	process_update_answer@ack_required& (0+255),b
  8235                           
  8236                           ; BSR set to: 3
  8237                           ;main.c: 352: p_buffer = &rxMessage.Payload[2];
  8238  013CB2  0E02               	movlw	2
  8239  013CB4  0101               	movlb	1	; () banked
  8240  013CB6  2511               	addwf	(_rxMessage+5)& (0+255),w,b
  8241  013CB8  0101               	movlb	1	; () banked
  8242  013CBA  6F3A               	movwf	_p_buffer& (0+255),b
  8243  013CBC  0E00               	movlw	0
  8244  013CBE  0101               	movlb	1	; () banked
  8245  013CC0  2112               	addwfc	(_rxMessage+6)& (0+255),w,b
  8246  013CC2  0101               	movlb	1	; () banked
  8247  013CC4  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  8248                           
  8249                           ;main.c: 353: while ((p_buffer - &rxMessage.Payload[2]) < (size - 2))
  8250  013CC6  D018               	goto	l14741
  8251  013CC8                     l14735:
  8252                           
  8253                           ;main.c: 354: {
  8254                           ;main.c: 355: m_var = decode_variable(p_buffer);
  8255  013CC8  C13A  F194         	movff	_p_buffer,decode_variable@p_buffer
  8256  013CCC  C13B  F195         	movff	_p_buffer+1,decode_variable@p_buffer+1
  8257  013CD0  EC87  F0AC         	call	_decode_variable	;wreg free
  8258  013CD4  EE21  F079         	lfsr	2,_m_var
  8259  013CD8  0E09               	movlw	9
  8260  013CDA                     u17641:
  8261  013CDA  CFEB FFDB          	movff	plusw0,plusw2
  8262  013CDE  06E8               	decf	wreg,f,c
  8263  013CE0  E2FC               	bc	u17641
  8264                           
  8265                           ;main.c: 356: p_buffer += m_var.size;
  8266  013CE2  0101               	movlb	1	; () banked
  8267  013CE4  5182               	movf	(_m_var+9)& (0+255),w,b
  8268  013CE6  0D01               	mullw	1
  8269  013CE8  50F3               	movf	prodl,w,c
  8270  013CEA  0101               	movlb	1	; () banked
  8271  013CEC  273A               	addwf	_p_buffer& (0+255),f,b
  8272  013CEE  50F4               	movf	prodh,w,c
  8273  013CF0  0101               	movlb	1	; () banked
  8274  013CF2  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  8275                           
  8276                           ; BSR set to: 1
  8277                           ;main.c: 358: update_variable();
  8278  013CF4  EC01  F0AD         	call	_update_variable	;wreg free
  8279  013CF8                     l14741:
  8280  013CF8  0EFE               	movlw	254
  8281  013CFA  0103               	movlb	3	; () banked
  8282  013CFC  6FF0               	movwf	??_process_update_answer& (0+255),b
  8283  013CFE  0EFF               	movlw	255
  8284  013D00  0103               	movlb	3	; () banked
  8285  013D02  6FF1               	movwf	(??_process_update_answer+1)& (0+255),b
  8286  013D04  0103               	movlb	3	; () banked
  8287  013D06  51FC               	movf	process_update_answer@size& (0+255),w,b
  8288  013D08  0103               	movlb	3	; () banked
  8289  013D0A  6FF2               	movwf	(??_process_update_answer+2)& (0+255),b
  8290  013D0C  6BF3               	clrf	(??_process_update_answer+3)& (0+255),b
  8291  013D0E  0103               	movlb	3	; () banked
  8292  013D10  51F0               	movf	??_process_update_answer& (0+255),w,b
  8293  013D12  0103               	movlb	3	; () banked
  8294  013D14  27F2               	addwf	(??_process_update_answer+2)& (0+255),f,b
  8295  013D16  0103               	movlb	3	; () banked
  8296  013D18  51F1               	movf	(??_process_update_answer+1)& (0+255),w,b
  8297  013D1A  0103               	movlb	3	; () banked
  8298  013D1C  23F3               	addwfc	(??_process_update_answer+3)& (0+255),f,b
  8299  013D1E  0E02               	movlw	2
  8300  013D20  0101               	movlb	1	; () banked
  8301  013D22  2511               	addwf	(_rxMessage+5)& (0+255),w,b
  8302  013D24  0103               	movlb	3	; () banked
  8303  013D26  6FF4               	movwf	(??_process_update_answer+4)& (0+255),b
  8304  013D28  0E00               	movlw	0
  8305  013D2A  0101               	movlb	1	; () banked
  8306  013D2C  2112               	addwfc	(_rxMessage+6)& (0+255),w,b
  8307  013D2E  0103               	movlb	3	; () banked
  8308  013D30  6FF5               	movwf	(??_process_update_answer+5)& (0+255),b
  8309  013D32  0103               	movlb	3	; () banked
  8310  013D34  1FF4               	comf	(??_process_update_answer+4)& (0+255),f,b
  8311  013D36  1FF5               	comf	(??_process_update_answer+5)& (0+255),f,b
  8312  013D38  4BF4               	infsnz	(??_process_update_answer+4)& (0+255),f,b
  8313  013D3A  2BF5               	incf	(??_process_update_answer+5)& (0+255),f,b
  8314  013D3C  0101               	movlb	1	; () banked
  8315  013D3E  513A               	movf	_p_buffer& (0+255),w,b
  8316  013D40  0103               	movlb	3	; () banked
  8317  013D42  27F4               	addwf	(??_process_update_answer+4)& (0+255),f,b
  8318  013D44  0101               	movlb	1	; () banked
  8319  013D46  513B               	movf	(_p_buffer+1)& (0+255),w,b
  8320  013D48  0103               	movlb	3	; () banked
  8321  013D4A  23F5               	addwfc	(??_process_update_answer+5)& (0+255),f,b
  8322  013D4C  0103               	movlb	3	; () banked
  8323  013D4E  51F2               	movf	(??_process_update_answer+2)& (0+255),w,b
  8324  013D50  0103               	movlb	3	; () banked
  8325  013D52  5DF4               	subwf	(??_process_update_answer+4)& (0+255),w,b
  8326  013D54  0103               	movlb	3	; () banked
  8327  013D56  51F5               	movf	(??_process_update_answer+5)& (0+255),w,b
  8328  013D58  0A80               	xorlw	128
  8329  013D5A  0103               	movlb	3	; () banked
  8330  013D5C  6FF6               	movwf	(??_process_update_answer+6)& (0+255),b
  8331  013D5E  0103               	movlb	3	; () banked
  8332  013D60  51F3               	movf	(??_process_update_answer+3)& (0+255),w,b
  8333  013D62  0A80               	xorlw	128
  8334  013D64  0103               	movlb	3	; () banked
  8335  013D66  59F6               	subwfb	(??_process_update_answer+6)& (0+255),w,b
  8336  013D68  A0D8               	btfss	status,0,c
  8337  013D6A  D7AE               	goto	l14735
  8338                           
  8339                           ; BSR set to: 3
  8340                           ;main.c: 359: }
  8341                           ;main.c: 360: MiApp_DiscardMessage();
  8342                           
  8343                           ; BSR set to: 3
  8344  013D6C  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
  8345                           
  8346                           ;main.c: 361: if (ack_required)
  8347  013D70  0103               	movlb	3	; () banked
  8348  013D72  51F8               	movf	process_update_answer@ack_required& (0+255),w,b
  8349  013D74  0103               	movlb	3	; () banked
  8350  013D76  A4D8               	btfss	status,2,c
  8351  013D78  D015               	goto	l14765
  8352  013D7A  D01F               	goto	l1128
  8353  013D7C                     l14749:
  8354                           
  8355                           ;main.c: 364: {
  8356                           ;main.c: 366: consecutive_fails++;
  8357  013D7C  0101               	movlb	1	; () banked
  8358  013D7E  2B47               	incf	_consecutive_fails& (0+255),f,b
  8359                           
  8360                           ; BSR set to: 1
  8361                           ;main.c: 367: if (consecutive_fails >= 3)
  8362  013D80  0E02               	movlw	2
  8363  013D82  0101               	movlb	1	; () banked
  8364  013D84  6547               	cpfsgt	_consecutive_fails& (0+255),b
  8365  013D86  D00C               	goto	l14763
  8366                           
  8367                           ; BSR set to: 1
  8368                           ;main.c: 368: {
  8369                           ;main.c: 370: myAppState = STATE_PROBLEM;
  8370  013D88  0E02               	movlw	2
  8371  013D8A  0101               	movlb	1	; () banked
  8372  013D8C  6F4B               	movwf	_myAppState& (0+255),b
  8373                           
  8374                           ; BSR set to: 1
  8375                           ;main.c: 371: LATCbits.LATC0 = 0;
  8376  013D8E  908B               	bcf	3979,0,c	;volatile
  8377                           
  8378                           ; BSR set to: 1
  8379                           ;main.c: 372: MiApp_TransceiverPowerState(0x00);
  8380  013D90  0E00               	movlw	0
  8381  013D92  ECB1  F0B6         	call	_MiApp_TransceiverPowerState
  8382                           
  8383                           ;main.c: 373: timer_reset();
  8384  013D96  ECC6  F0B7         	call	_timer_reset	;wreg free
  8385                           
  8386                           ;main.c: 374: PIR3bits.RTCCIF = 0;
  8387  013D9A  90A4               	bcf	4004,0,c	;volatile
  8388  013D9C  0003               	sleep		;# 
  8389  013D9E  00FF               	reset		;# 
  8390  013DA0                     l14763:
  8391                           
  8392                           ;main.c: 378: }
  8393                           ;main.c: 379: wait_for_1_sec();
  8394  013DA0  ECEC  F0B6         	call	_wait_for_1_sec	;wreg free
  8395  013DA4                     l14765:
  8396  013DA4  ECEE  F0A6         	call	_send_writables_update	;wreg free
  8397  013DA8  0900               	iorlw	0
  8398  013DAA  B4D8               	btfsc	status,2,c
  8399  013DAC  D7E7               	goto	l14749
  8400                           
  8401                           ;main.c: 380: }
  8402                           ;main.c: 381: consecutive_fails = 0;
  8403  013DAE  0E00               	movlw	0
  8404  013DB0  0101               	movlb	1	; () banked
  8405  013DB2  6F47               	movwf	_consecutive_fails& (0+255),b
  8406                           
  8407                           ; BSR set to: 1
  8408                           ;main.c: 382: return 1;
  8409                           ;	Return value of _process_update_answer is never used
  8410  013DB4  0012               	return	
  8411  013DB6                     l14771:
  8412                           
  8413                           ;main.c: 385: else
  8414                           ;main.c: 386: MiApp_DiscardMessage();
  8415  013DB6  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
  8416  013DBA                     l1128:
  8417                           
  8418                           ;main.c: 389: MiApp_DiscardMessage();
  8419  013DBA  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
  8420                           
  8421                           ;main.c: 390: }
  8422  013DBE  D009               	goto	l14775
  8423  013DC0                     l14773:
  8424  013DC0  C111  FFD9         	movff	_rxMessage+5,fsr2l
  8425  013DC4  C112  FFDA         	movff	_rxMessage+6,fsr2h
  8426  013DC8  50DF               	movf	indf2,w,c
  8427                           
  8428                           ; Switch size 1, requested type "space"
  8429                           ; Number of cases is 1, Range of values is 4 to 4
  8430                           ; switch strategies available:
  8431                           ; Name         Instructions Cycles
  8432                           ; simple_byte            4     3 (average)
  8433                           ;	Chosen strategy is simple_byte
  8434  013DCA  0A04               	xorlw	4	; case 4
  8435  013DCC  B4D8               	btfsc	status,2,c
  8436  013DCE  D74C               	goto	l14715
  8437  013DD0  D7F4               	goto	l1128
  8438  013DD2                     l14775:
  8439  013DD2  0103               	movlb	3	; () banked
  8440  013DD4  2BF9               	incf	process_update_answer@i& (0+255),f,b
  8441  013DD6  D721               	goto	l14701
  8442  013DD8                     __end_of_process_update_answer:
  8443                           	opt stack 0
  8444                           tblptru	equ	0xFF8
  8445                           tblptrh	equ	0xFF7
  8446                           tblptrl	equ	0xFF6
  8447                           tablat	equ	0xFF5
  8448                           prodh	equ	0xFF4
  8449                           prodl	equ	0xFF3
  8450                           postinc0	equ	0xFEE
  8451                           plusw0	equ	0xFEB
  8452                           wreg	equ	0xFE8
  8453                           indf1	equ	0xFE7
  8454                           postdec1	equ	0xFE5
  8455                           fsr1h	equ	0xFE2
  8456                           fsr1l	equ	0xFE1
  8457                           indf2	equ	0xFDF
  8458                           postinc2	equ	0xFDE
  8459                           postdec2	equ	0xFDD
  8460                           plusw2	equ	0xFDB
  8461                           fsr2h	equ	0xFDA
  8462                           fsr2l	equ	0xFD9
  8463                           status	equ	0xFD8
  8464                           
  8465 ;; *************** function _wait_for_1_sec *****************
  8466 ;; Defined at:
  8467 ;;		line 742 in file "src/main.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;		None
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;  i               2    1[BANK1 ] unsigned int 
  8472 ;; Return value:  Size  Location     Type
  8473 ;;		None               void
  8474 ;; Registers used:
  8475 ;;		wreg, status,2, status,0
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8482 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8483 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8484 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8485 ;;Total ram usage:        3 bytes
  8486 ;; Hardware stack levels used:    1
  8487 ;; Hardware stack levels required when called:    9
  8488 ;; This function calls:
  8489 ;;		Nothing
  8490 ;; This function is called by:
  8491 ;;		_main
  8492 ;;		_process_update_answer
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           	psect	text22
  8497  016DD8                     __ptext22:
  8498                           	opt stack 0
  8499  016DD8                     _wait_for_1_sec:
  8500                           	opt stack 21
  8501                           
  8502                           ;main.c: 744: unsigned int i;
  8503                           ;main.c: 745: for (i=0; i<100; i++)
  8504                           
  8505                           ;incstack = 0
  8506  016DD8  0E00               	movlw	0
  8507  016DDA  0101               	movlb	1	; () banked
  8508  016DDC  6F8C               	movwf	(wait_for_1_sec@i+1)& (0+255),b
  8509  016DDE  0E00               	movlw	0
  8510  016DE0  6F8B               	movwf	wait_for_1_sec@i& (0+255),b
  8511  016DE2                     l13367:
  8512                           
  8513                           ; BSR set to: 1
  8514  016DE2  0101               	movlb	1	; () banked
  8515  016DE4  518C               	movf	(wait_for_1_sec@i+1)& (0+255),w,b
  8516  016DE6  E112               	bnz	l1234
  8517  016DE8  0E64               	movlw	100
  8518  016DEA  0101               	movlb	1	; () banked
  8519  016DEC  5D8B               	subwf	wait_for_1_sec@i& (0+255),w,b
  8520  016DEE  B0D8               	btfsc	status,0,c
  8521  016DF0  0012               	return	
  8522                           
  8523                           ; BSR set to: 1
  8524                           ;main.c: 746: {
  8525                           ;main.c: 747: _delay((unsigned long)((10)*(8000000/4000.0)));
  8526                           
  8527                           ; BSR set to: 1
  8528                           
  8529                           ; BSR set to: 1
  8530  016DF2  0E1A               	movlw	26
  8531  016DF4  0101               	movlb	1	; () banked
  8532  016DF6  6F8A               	movwf	??_wait_for_1_sec& (0+255),b
  8533  016DF8  0EF8               	movlw	248
  8534  016DFA                     u18347:
  8535  016DFA  2EE8               	decfsz	wreg,f,c
  8536  016DFC  D7FE               	goto	u18347
  8537  016DFE  2F8A               	decfsz	??_wait_for_1_sec& (0+255),f,b
  8538  016E00  D7FC               	goto	u18347
  8539  016E02  D000               	nop2	
  8540  016E04  0101               	movlb	1	; () banked
  8541  016E06  4B8B               	infsnz	wait_for_1_sec@i& (0+255),f,b
  8542  016E08  2B8C               	incf	(wait_for_1_sec@i+1)& (0+255),f,b
  8543  016E0A  D7EB               	goto	l13367
  8544  016E0C                     l1234:
  8545                           
  8546                           ; BSR set to: 1
  8547  016E0C  0012               	return		;funcret
  8548  016E0E                     __end_of_wait_for_1_sec:
  8549                           	opt stack 0
  8550                           tblptru	equ	0xFF8
  8551                           tblptrh	equ	0xFF7
  8552                           tblptrl	equ	0xFF6
  8553                           tablat	equ	0xFF5
  8554                           prodh	equ	0xFF4
  8555                           prodl	equ	0xFF3
  8556                           postinc0	equ	0xFEE
  8557                           plusw0	equ	0xFEB
  8558                           wreg	equ	0xFE8
  8559                           indf1	equ	0xFE7
  8560                           postdec1	equ	0xFE5
  8561                           fsr1h	equ	0xFE2
  8562                           fsr1l	equ	0xFE1
  8563                           indf2	equ	0xFDF
  8564                           postinc2	equ	0xFDE
  8565                           postdec2	equ	0xFDD
  8566                           plusw2	equ	0xFDB
  8567                           fsr2h	equ	0xFDA
  8568                           fsr2l	equ	0xFD9
  8569                           status	equ	0xFD8
  8570                           
  8571 ;; *************** function _update_variable *****************
  8572 ;; Defined at:
  8573 ;;		line 652 in file "src/main.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;		None
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;		None
  8578 ;; Return value:  Size  Location     Type
  8579 ;;		None               void
  8580 ;; Registers used:
  8581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8591 ;;Total ram usage:        0 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:   12
  8594 ;; This function calls:
  8595 ;;		_MiMAC_SetPower
  8596 ;;		_RtccWrOn
  8597 ;;		_labelcmp
  8598 ;;		_mW_ufixed16_to_dBm
  8599 ;; This function is called by:
  8600 ;;		_process_update_answer
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text23
  8605  015A02                     __ptext23:
  8606                           	opt stack 0
  8607  015A02                     _update_variable:
  8608                           	opt stack 17
  8609                           
  8610                           ;main.c: 654: if (labelcmp(m_var.label, (uint8_t*)POWER_LABEL) == 1)
  8611                           
  8612                           ; BSR set to: 1
  8613                           ;incstack = 0
  8614  015A02  0E79               	movlw	low _m_var
  8615  015A04  0101               	movlb	1	; () banked
  8616  015A06  6F8A               	movwf	labelcmp@p1& (0+255),b
  8617  015A08  0E01               	movlw	high _m_var
  8618  015A0A  0101               	movlb	1	; () banked
  8619  015A0C  6F8B               	movwf	(labelcmp@p1+1)& (0+255),b
  8620  015A0E  0EEB               	movlw	low _POWER_LABEL
  8621  015A10  0101               	movlb	1	; () banked
  8622  015A12  6F8C               	movwf	labelcmp@p2& (0+255),b
  8623  015A14  0EFF               	movlw	high _POWER_LABEL
  8624  015A16  0101               	movlb	1	; () banked
  8625  015A18  6F8D               	movwf	(labelcmp@p2+1)& (0+255),b
  8626  015A1A  EC1D  F0B0         	call	_labelcmp	;wreg free
  8627  015A1E  06E8               	decf	wreg,f,c
  8628  015A20  A4D8               	btfss	status,2,c
  8629  015A22  D010               	goto	l13421
  8630                           
  8631                           ;main.c: 655: {
  8632                           ;main.c: 656: m_power = mW_ufixed16_to_dBm(m_var.value_byte1, m_var.value_byte2);
  8633  015A24  C17E  F18A         	movff	_m_var+5,mW_ufixed16_to_dBm@value2
  8634  015A28  0101               	movlb	1	; () banked
  8635  015A2A  517D               	movf	(_m_var+4)& (0+255),w,b
  8636  015A2C  EC41  F0AE         	call	_mW_ufixed16_to_dBm
  8637  015A30  0101               	movlb	1	; () banked
  8638  015A32  6F4A               	movwf	_m_power& (0+255),b
  8639                           
  8640                           ;main.c: 657: MiMAC_SetPower(m_power);
  8641  015A34  0101               	movlb	1	; () banked
  8642  015A36  514A               	movf	_m_power& (0+255),w,b
  8643  015A38  ECCF  F0B6         	call	_MiMAC_SetPower
  8644                           
  8645                           ;main.c: 658: Pwr_updated = 1;
  8646  015A3C  0E01               	movlw	1
  8647  015A3E  0100               	movlb	0	; () banked
  8648  015A40  6FB7               	movwf	_Pwr_updated& (0+255),b
  8649                           
  8650                           ;main.c: 659: }
  8651  015A42  0012               	return	
  8652  015A44                     l13421:
  8653                           
  8654                           ;main.c: 660: else if ((labelcmp(m_var.label, (uint8_t*)UPDATE_FREQUENCY_LABEL) == 1) &&
      +                           (m_var.unit == 4) && (m_var.type == 0))
  8655  015A44  0E79               	movlw	low _m_var
  8656  015A46  0101               	movlb	1	; () banked
  8657  015A48  6F8A               	movwf	labelcmp@p1& (0+255),b
  8658  015A4A  0E01               	movlw	high _m_var
  8659  015A4C  0101               	movlb	1	; () banked
  8660  015A4E  6F8B               	movwf	(labelcmp@p1+1)& (0+255),b
  8661  015A50  0EF7               	movlw	low _UPDATE_FREQUENCY_LABEL
  8662  015A52  0101               	movlb	1	; () banked
  8663  015A54  6F8C               	movwf	labelcmp@p2& (0+255),b
  8664  015A56  0EFF               	movlw	high _UPDATE_FREQUENCY_LABEL
  8665  015A58  0101               	movlb	1	; () banked
  8666  015A5A  6F8D               	movwf	(labelcmp@p2+1)& (0+255),b
  8667  015A5C  EC1D  F0B0         	call	_labelcmp	;wreg free
  8668  015A60  06E8               	decf	wreg,f,c
  8669  015A62  A4D8               	btfss	status,2,c
  8670  015A64  0012               	return	
  8671  015A66  0E04               	movlw	4
  8672  015A68  0101               	movlb	1	; () banked
  8673  015A6A  197F               	xorwf	(_m_var+6)& (0+255),w,b
  8674  015A6C  A4D8               	btfss	status,2,c
  8675  015A6E  0012               	return	
  8676                           
  8677                           ; BSR set to: 1
  8678  015A70  0101               	movlb	1	; () banked
  8679  015A72  517C               	movf	(_m_var+3)& (0+255),w,b
  8680  015A74  A4D8               	btfss	status,2,c
  8681  015A76  0012               	return	
  8682                           
  8683                           ; BSR set to: 1
  8684                           ;main.c: 662: {
  8685                           ;main.c: 663: if (m_var.value_byte1 == 0)
  8686  015A78  0101               	movlb	1	; () banked
  8687  015A7A  517D               	movf	(_m_var+4)& (0+255),w,b
  8688  015A7C  A4D8               	btfss	status,2,c
  8689  015A7E  D019               	goto	l1209
  8690                           
  8691                           ; BSR set to: 1
  8692                           ;main.c: 664: {
  8693                           ;main.c: 665: m_update_frequency = 0;
  8694  015A80  0E00               	movlw	0
  8695  015A82  0101               	movlb	1	; () banked
  8696  015A84  6FFF               	movwf	_m_update_frequency& (0+255),b	;volatile
  8697                           
  8698                           ; BSR set to: 1
  8699                           ;main.c: 666: RtccWrOn();
  8700  015A86  ECDF  F0B7         	call	_RtccWrOn	;wreg free
  8701                           
  8702                           ;main.c: 667: RTCCFGbits.RTCPTR0 = 0;
  8703  015A8A  010F               	movlb	15	; () banked
  8704  015A8C  913F               	bcf	63,0,b	;volatile
  8705                           
  8706                           ; BSR set to: 15
  8707                           ;main.c: 668: RTCCFGbits.RTCPTR1 = 0;
  8708  015A8E  010F               	movlb	15	; () banked
  8709  015A90  933F               	bcf	63,1,b	;volatile
  8710                           
  8711                           ; BSR set to: 15
  8712                           ;main.c: 669: RTCVALHbits.RTCVALH = 0x00;
  8713  015A92  0E00               	movlw	0
  8714  015A94  010F               	movlb	15	; () banked
  8715  015A96  6F3B               	movwf	59,b	;volatile
  8716                           
  8717                           ; BSR set to: 15
  8718                           ;main.c: 670: RTCVALLbits.RTCVALL = 0x00;
  8719  015A98  0E00               	movlw	0
  8720  015A9A  010F               	movlb	15	; () banked
  8721  015A9C  6F3A               	movwf	58,b	;volatile
  8722                           
  8723                           ; BSR set to: 15
  8724                           ;main.c: 671: ALRMCFGbits.AMASK = 0b0010;
  8725  015A9E  010F               	movlb	15	; () banked
  8726  015AA0  5147               	movf	71,w,b	;volatile
  8727  015AA2  0BC3               	andlw	-61
  8728  015AA4  0908               	iorlw	8
  8729  015AA6  6F47               	movwf	71,b	;volatile
  8730                           
  8731                           ; BSR set to: 15
  8732                           ;main.c: 672: (RTCCFGbits.RTCWREN = 0);
  8733  015AA8  010F               	movlb	15	; () banked
  8734  015AAA  9B3F               	bcf	63,5,b	;volatile
  8735                           
  8736                           ; BSR set to: 15
  8737                           ;main.c: 673: timer_count = 1;
  8738  015AAC  0E01               	movlw	1
  8739  015AAE  6E48               	movwf	_timer_count,c	;volatile
  8740  015AB0  D017               	goto	l13465
  8741  015AB2                     l1209:
  8742                           
  8743                           ; BSR set to: 1
  8744                           ;main.c: 676: else
  8745                           ;main.c: 677: {
  8746                           ;main.c: 678: m_update_frequency = m_var.value_byte1;
  8747  015AB2  C17D  F1FF         	movff	_m_var+4,_m_update_frequency	;volatile
  8748                           
  8749                           ; BSR set to: 1
  8750                           ;main.c: 679: RtccWrOn();
  8751  015AB6  ECDF  F0B7         	call	_RtccWrOn	;wreg free
  8752                           
  8753                           ;main.c: 680: RTCCFGbits.RTCPTR0 = 0;
  8754  015ABA  010F               	movlb	15	; () banked
  8755  015ABC  913F               	bcf	63,0,b	;volatile
  8756                           
  8757                           ; BSR set to: 15
  8758                           ;main.c: 681: RTCCFGbits.RTCPTR1 = 0;
  8759  015ABE  010F               	movlb	15	; () banked
  8760  015AC0  933F               	bcf	63,1,b	;volatile
  8761                           
  8762                           ; BSR set to: 15
  8763                           ;main.c: 682: RTCVALHbits.RTCVALH = 0x00;
  8764  015AC2  0E00               	movlw	0
  8765  015AC4  010F               	movlb	15	; () banked
  8766  015AC6  6F3B               	movwf	59,b	;volatile
  8767                           
  8768                           ; BSR set to: 15
  8769                           ;main.c: 683: RTCVALLbits.RTCVALL = 0x00;
  8770  015AC8  0E00               	movlw	0
  8771  015ACA  010F               	movlb	15	; () banked
  8772  015ACC  6F3A               	movwf	58,b	;volatile
  8773                           
  8774                           ; BSR set to: 15
  8775                           ;main.c: 684: ALRMCFGbits.AMASK = 0b0011;
  8776  015ACE  010F               	movlb	15	; () banked
  8777  015AD0  5147               	movf	71,w,b	;volatile
  8778  015AD2  0BC3               	andlw	-61
  8779  015AD4  090C               	iorlw	12
  8780  015AD6  6F47               	movwf	71,b	;volatile
  8781                           
  8782                           ; BSR set to: 15
  8783                           ;main.c: 685: (RTCCFGbits.RTCWREN = 0);
  8784  015AD8  010F               	movlb	15	; () banked
  8785  015ADA  9B3F               	bcf	63,5,b	;volatile
  8786                           
  8787                           ; BSR set to: 15
  8788                           ;main.c: 686: timer_count = m_update_frequency;
  8789  015ADC  C1FF  F048         	movff	_m_update_frequency,_timer_count	;volatile
  8790  015AE0                     l13465:
  8791                           
  8792                           ; BSR set to: 15
  8793                           ;main.c: 687: timer_flag = 0;
  8794  015AE0  0E00               	movlw	0
  8795  015AE2  0101               	movlb	1	; () banked
  8796  015AE4  6F4D               	movwf	_timer_flag& (0+255),b	;volatile
  8797                           
  8798                           ; BSR set to: 1
  8799                           ;main.c: 688: }
  8800                           ;main.c: 689: UpF_updated = 1;
  8801                           
  8802                           ; BSR set to: 1
  8803  015AE6  0E01               	movlw	1
  8804  015AE8  0100               	movlb	0	; () banked
  8805  015AEA  6FBB               	movwf	_UpF_updated& (0+255),b
  8806                           
  8807                           ; BSR set to: 0
  8808  015AEC  0012               	return	
  8809  015AEE                     __end_of_update_variable:
  8810                           	opt stack 0
  8811                           tblptru	equ	0xFF8
  8812                           tblptrh	equ	0xFF7
  8813                           tblptrl	equ	0xFF6
  8814                           tablat	equ	0xFF5
  8815                           prodh	equ	0xFF4
  8816                           prodl	equ	0xFF3
  8817                           postinc0	equ	0xFEE
  8818                           plusw0	equ	0xFEB
  8819                           wreg	equ	0xFE8
  8820                           indf1	equ	0xFE7
  8821                           postdec1	equ	0xFE5
  8822                           fsr1h	equ	0xFE2
  8823                           fsr1l	equ	0xFE1
  8824                           indf2	equ	0xFDF
  8825                           postinc2	equ	0xFDE
  8826                           postdec2	equ	0xFDD
  8827                           plusw2	equ	0xFDB
  8828                           fsr2h	equ	0xFDA
  8829                           fsr2l	equ	0xFD9
  8830                           status	equ	0xFD8
  8831                           
  8832 ;; *************** function _mW_ufixed16_to_dBm *****************
  8833 ;; Defined at:
  8834 ;;		line 22 in file "../../muta/muta_messages.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;  value1          1    wreg     unsigned char 
  8837 ;;  value2          1    0[BANK1 ] unsigned char 
  8838 ;; Auto vars:     Size  Location     Type
  8839 ;;  value1          1    1[BANK1 ] unsigned char 
  8840 ;; Return value:  Size  Location     Type
  8841 ;;                  1    wreg      unsigned char 
  8842 ;; Registers used:
  8843 ;;		wreg, status,2, status,0
  8844 ;; Tracked objects:
  8845 ;;		On entry : 0/0
  8846 ;;		On exit  : 0/0
  8847 ;;		Unchanged: 0/0
  8848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8849 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8850 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8852 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8853 ;;Total ram usage:        2 bytes
  8854 ;; Hardware stack levels used:    1
  8855 ;; Hardware stack levels required when called:    9
  8856 ;; This function calls:
  8857 ;;		Nothing
  8858 ;; This function is called by:
  8859 ;;		_update_variable
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           	psect	text24
  8864  015C82                     __ptext24:
  8865                           	opt stack 0
  8866  015C82                     _mW_ufixed16_to_dBm:
  8867                           	opt stack 19
  8868                           
  8869                           ;incstack = 0
  8870                           ;mW_ufixed16_to_dBm@value1 stored from wreg
  8871  015C82  0101               	movlb	1	; () banked
  8872  015C84  6F8B               	movwf	mW_ufixed16_to_dBm@value1& (0+255),b
  8873                           
  8874                           ;muta_messages.c: 24: if (value1==20 && value2==0)
  8875  015C86  0E14               	movlw	20
  8876  015C88  0101               	movlb	1	; () banked
  8877  015C8A  198B               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  8878  015C8C  A4D8               	btfss	status,2,c
  8879  015C8E  D007               	goto	l12845
  8880                           
  8881                           ; BSR set to: 1
  8882  015C90  0101               	movlb	1	; () banked
  8883  015C92  518A               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  8884  015C94  0101               	movlb	1	; () banked
  8885  015C96  A4D8               	btfss	status,2,c
  8886  015C98  D002               	goto	l12845
  8887                           
  8888                           ; BSR set to: 1
  8889                           ;muta_messages.c: 25: return 0x00;
  8890  015C9A  0E00               	movlw	0
  8891                           
  8892                           ; BSR set to: 1
  8893                           
  8894                           ; BSR set to: 1
  8895  015C9C  0012               	return	
  8896  015C9E                     l12845:
  8897                           
  8898                           ; BSR set to: 1
  8899                           ;muta_messages.c: 26: else if (value1==10 && value2==0)
  8900  015C9E  0E0A               	movlw	10
  8901  015CA0  0101               	movlb	1	; () banked
  8902  015CA2  198B               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  8903  015CA4  A4D8               	btfss	status,2,c
  8904  015CA6  D007               	goto	l12855
  8905                           
  8906                           ; BSR set to: 1
  8907  015CA8  0101               	movlb	1	; () banked
  8908  015CAA  518A               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  8909  015CAC  0101               	movlb	1	; () banked
  8910  015CAE  A4D8               	btfss	status,2,c
  8911  015CB0  D002               	goto	l12855
  8912                           
  8913                           ; BSR set to: 1
  8914                           ;muta_messages.c: 27: return 0x01;
  8915  015CB2  0E01               	movlw	1
  8916                           
  8917                           ; BSR set to: 1
  8918                           
  8919                           ; BSR set to: 1
  8920  015CB4  0012               	return	
  8921  015CB6                     l12855:
  8922                           
  8923                           ; BSR set to: 1
  8924                           ;muta_messages.c: 28: else if (value1==5 && value2==0)
  8925  015CB6  0E05               	movlw	5
  8926  015CB8  0101               	movlb	1	; () banked
  8927  015CBA  198B               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  8928  015CBC  A4D8               	btfss	status,2,c
  8929  015CBE  D007               	goto	l12865
  8930                           
  8931                           ; BSR set to: 1
  8932  015CC0  0101               	movlb	1	; () banked
  8933  015CC2  518A               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  8934  015CC4  0101               	movlb	1	; () banked
  8935  015CC6  A4D8               	btfss	status,2,c
  8936  015CC8  D002               	goto	l12865
  8937                           
  8938                           ; BSR set to: 1
  8939                           ;muta_messages.c: 29: return 0x02;
  8940  015CCA  0E02               	movlw	2
  8941                           
  8942                           ; BSR set to: 1
  8943                           
  8944                           ; BSR set to: 1
  8945  015CCC  0012               	return	
  8946  015CCE                     l12865:
  8947                           
  8948                           ; BSR set to: 1
  8949                           ;muta_messages.c: 30: else if (value1==2 && value2==50)
  8950  015CCE  0E02               	movlw	2
  8951  015CD0  0101               	movlb	1	; () banked
  8952  015CD2  198B               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  8953  015CD4  A4D8               	btfss	status,2,c
  8954  015CD6  D007               	goto	l12875
  8955                           
  8956                           ; BSR set to: 1
  8957  015CD8  0E32               	movlw	50
  8958  015CDA  0101               	movlb	1	; () banked
  8959  015CDC  198A               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  8960  015CDE  A4D8               	btfss	status,2,c
  8961  015CE0  D002               	goto	l12875
  8962                           
  8963                           ; BSR set to: 1
  8964                           ;muta_messages.c: 31: return 0x03;
  8965  015CE2  0E03               	movlw	3
  8966                           
  8967                           ; BSR set to: 1
  8968                           
  8969                           ; BSR set to: 1
  8970  015CE4  0012               	return	
  8971  015CE6                     l12875:
  8972                           
  8973                           ; BSR set to: 1
  8974                           ;muta_messages.c: 32: else if (value1==1 && value2==25)
  8975  015CE6  0101               	movlb	1	; () banked
  8976  015CE8  058B               	decf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  8977  015CEA  A4D8               	btfss	status,2,c
  8978  015CEC  D007               	goto	l12885
  8979                           
  8980                           ; BSR set to: 1
  8981  015CEE  0E19               	movlw	25
  8982  015CF0  0101               	movlb	1	; () banked
  8983  015CF2  198A               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  8984  015CF4  A4D8               	btfss	status,2,c
  8985  015CF6  D002               	goto	l12885
  8986                           
  8987                           ; BSR set to: 1
  8988                           ;muta_messages.c: 33: return 0x04;
  8989  015CF8  0E04               	movlw	4
  8990                           
  8991                           ; BSR set to: 1
  8992                           
  8993                           ; BSR set to: 1
  8994  015CFA  0012               	return	
  8995  015CFC                     l12885:
  8996                           
  8997                           ; BSR set to: 1
  8998                           ;muta_messages.c: 34: else if (value1==0 && value2==60)
  8999  015CFC  0101               	movlb	1	; () banked
  9000  015CFE  518B               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  9001  015D00  0101               	movlb	1	; () banked
  9002  015D02  A4D8               	btfss	status,2,c
  9003  015D04  D007               	goto	l12895
  9004                           
  9005                           ; BSR set to: 1
  9006  015D06  0E3C               	movlw	60
  9007  015D08  0101               	movlb	1	; () banked
  9008  015D0A  198A               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  9009  015D0C  A4D8               	btfss	status,2,c
  9010  015D0E  D002               	goto	l12895
  9011                           
  9012                           ; BSR set to: 1
  9013                           ;muta_messages.c: 35: return 0x05;
  9014  015D10  0E05               	movlw	5
  9015                           
  9016                           ; BSR set to: 1
  9017                           
  9018                           ; BSR set to: 1
  9019  015D12  0012               	return	
  9020  015D14                     l12895:
  9021                           
  9022                           ; BSR set to: 1
  9023                           ;muta_messages.c: 36: else if (value1==0 && value2==30)
  9024  015D14  0101               	movlb	1	; () banked
  9025  015D16  518B               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  9026  015D18  0101               	movlb	1	; () banked
  9027  015D1A  A4D8               	btfss	status,2,c
  9028  015D1C  D007               	goto	l12905
  9029                           
  9030                           ; BSR set to: 1
  9031  015D1E  0E1E               	movlw	30
  9032  015D20  0101               	movlb	1	; () banked
  9033  015D22  198A               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  9034  015D24  A4D8               	btfss	status,2,c
  9035  015D26  D002               	goto	l12905
  9036                           
  9037                           ; BSR set to: 1
  9038                           ;muta_messages.c: 37: return 0x06;
  9039  015D28  0E06               	movlw	6
  9040                           
  9041                           ; BSR set to: 1
  9042                           
  9043                           ; BSR set to: 1
  9044  015D2A  0012               	return	
  9045  015D2C                     l12905:
  9046                           
  9047                           ; BSR set to: 1
  9048                           ;muta_messages.c: 38: else if (value1==0 && value2==15)
  9049  015D2C  0101               	movlb	1	; () banked
  9050  015D2E  518B               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  9051  015D30  0101               	movlb	1	; () banked
  9052  015D32  A4D8               	btfss	status,2,c
  9053  015D34  D007               	goto	l12915
  9054                           
  9055                           ; BSR set to: 1
  9056  015D36  0E0F               	movlw	15
  9057  015D38  0101               	movlb	1	; () banked
  9058  015D3A  198A               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  9059  015D3C  A4D8               	btfss	status,2,c
  9060  015D3E  D002               	goto	l12915
  9061                           
  9062                           ; BSR set to: 1
  9063                           ;muta_messages.c: 39: return 0x07;
  9064  015D40  0E07               	movlw	7
  9065                           
  9066                           ; BSR set to: 1
  9067                           
  9068                           ; BSR set to: 1
  9069  015D42  0012               	return	
  9070  015D44                     l12915:
  9071                           
  9072                           ; BSR set to: 1
  9073                           ;muta_messages.c: 40: else
  9074                           ;muta_messages.c: 41: return 0x07;
  9075  015D44  0E07               	movlw	7
  9076                           
  9077                           ; BSR set to: 1
  9078                           
  9079                           ; BSR set to: 1
  9080                           
  9081                           ; BSR set to: 1
  9082                           
  9083                           ; BSR set to: 1
  9084                           
  9085                           ; BSR set to: 1
  9086                           
  9087                           ; BSR set to: 1
  9088                           
  9089                           ; BSR set to: 1
  9090                           
  9091                           ; BSR set to: 1
  9092  015D46  0012               	return	
  9093  015D48                     __end_of_mW_ufixed16_to_dBm:
  9094                           	opt stack 0
  9095                           tblptru	equ	0xFF8
  9096                           tblptrh	equ	0xFF7
  9097                           tblptrl	equ	0xFF6
  9098                           tablat	equ	0xFF5
  9099                           prodh	equ	0xFF4
  9100                           prodl	equ	0xFF3
  9101                           postinc0	equ	0xFEE
  9102                           plusw0	equ	0xFEB
  9103                           wreg	equ	0xFE8
  9104                           indf1	equ	0xFE7
  9105                           postdec1	equ	0xFE5
  9106                           fsr1h	equ	0xFE2
  9107                           fsr1l	equ	0xFE1
  9108                           indf2	equ	0xFDF
  9109                           postinc2	equ	0xFDE
  9110                           postdec2	equ	0xFDD
  9111                           plusw2	equ	0xFDB
  9112                           fsr2h	equ	0xFDA
  9113                           fsr2l	equ	0xFD9
  9114                           status	equ	0xFD8
  9115                           
  9116 ;; *************** function _labelcmp *****************
  9117 ;; Defined at:
  9118 ;;		line 16 in file "../../muta/muta_messages.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;  p1              2    0[BANK1 ] PTR unsigned char 
  9121 ;;		 -> m_var(10), 
  9122 ;;  p2              2    2[BANK1 ] PTR unsigned char 
  9123 ;;		 -> UPDATE_FREQUENCY_LABEL(4), POWER_LABEL(4), 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;		None
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  1    wreg      unsigned char 
  9128 ;; Registers used:
  9129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9130 ;; Tracked objects:
  9131 ;;		On entry : 0/0
  9132 ;;		On exit  : 0/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9135 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9136 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9137 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9138 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9139 ;;Total ram usage:        8 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:    9
  9142 ;; This function calls:
  9143 ;;		Nothing
  9144 ;; This function is called by:
  9145 ;;		_update_variable
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           	psect	text25
  9150  01603A                     __ptext25:
  9151                           	opt stack 0
  9152  01603A                     _labelcmp:
  9153                           	opt stack 19
  9154                           
  9155                           ;muta_messages.c: 18: return (*p1==*p2)&&(*(p1+1)==*(p2+1))&&(*(p1+2)==*(p2+2));
  9156                           
  9157                           ; BSR set to: 1
  9158                           ;incstack = 0
  9159  01603A  0E00               	movlw	0
  9160  01603C  0101               	movlb	1	; () banked
  9161  01603E  6F91               	movwf	_labelcmp$3774& (0+255),b
  9162                           
  9163                           ; BSR set to: 1
  9164  016040  C18A  FFD9         	movff	labelcmp@p1,fsr2l
  9165  016044  C18B  FFDA         	movff	labelcmp@p1+1,fsr2h
  9166  016048  50DF               	movf	indf2,w,c
  9167  01604A  0101               	movlb	1	; () banked
  9168  01604C  6F8E               	movwf	??_labelcmp& (0+255),b
  9169  01604E  C18C  FFF6         	movff	labelcmp@p2,tblptrl
  9170  016052  C18D  FFF7         	movff	labelcmp@p2+1,tblptrh
  9171  016056                     	if	0	;tblptru may be non-zero
  9172  016056                     	endif
  9173  016056                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9174  016056  0E00               	movlw	low (__mediumconst shr (0+16))
  9175  016058  6EF8               	movwf	tblptru,c
  9176  01605A                     	endif
  9177  01605A  0008               	tblrd		*
  9178  01605C  50F5               	movf	tablat,w,c
  9179  01605E  0101               	movlb	1	; () banked
  9180  016060  198E               	xorwf	??_labelcmp& (0+255),w,b
  9181  016062  A4D8               	btfss	status,2,c
  9182  016064  D043               	goto	l1284
  9183                           
  9184                           ; BSR set to: 1
  9185  016066  0101               	movlb	1	; () banked
  9186  016068  EE20 F001          	lfsr	2,1
  9187  01606C  518A               	movf	labelcmp@p1& (0+255),w,b
  9188  01606E  26D9               	addwf	fsr2l,f,c
  9189  016070  518B               	movf	(labelcmp@p1+1)& (0+255),w,b
  9190  016072  22DA               	addwfc	fsr2h,f,c
  9191  016074  50DF               	movf	indf2,w,c
  9192  016076  0101               	movlb	1	; () banked
  9193  016078  6F8E               	movwf	??_labelcmp& (0+255),b
  9194  01607A  0E01               	movlw	1
  9195  01607C  0101               	movlb	1	; () banked
  9196  01607E  258C               	addwf	labelcmp@p2& (0+255),w,b
  9197  016080  0101               	movlb	1	; () banked
  9198  016082  6F8F               	movwf	(??_labelcmp+1)& (0+255),b
  9199  016084  0E00               	movlw	0
  9200  016086  0101               	movlb	1	; () banked
  9201  016088  218D               	addwfc	(labelcmp@p2+1)& (0+255),w,b
  9202  01608A  0101               	movlb	1	; () banked
  9203  01608C  6F90               	movwf	(??_labelcmp+2)& (0+255),b
  9204  01608E  C18F  FFF6         	movff	??_labelcmp+1,tblptrl
  9205  016092  C190  FFF7         	movff	??_labelcmp+2,tblptrh
  9206  016096                     	if	0	;tblptru may be non-zero
  9207  016096                     	endif
  9208  016096                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9209  016096  0E00               	movlw	low (__mediumconst shr (0+16))
  9210  016098  6EF8               	movwf	tblptru,c
  9211  01609A                     	endif
  9212  01609A  0008               	tblrd		*
  9213  01609C  50F5               	movf	tablat,w,c
  9214  01609E  0101               	movlb	1	; () banked
  9215  0160A0  198E               	xorwf	??_labelcmp& (0+255),w,b
  9216  0160A2  A4D8               	btfss	status,2,c
  9217  0160A4  D023               	goto	l1284
  9218                           
  9219                           ; BSR set to: 1
  9220  0160A6  0101               	movlb	1	; () banked
  9221  0160A8  EE20 F002          	lfsr	2,2
  9222  0160AC  518A               	movf	labelcmp@p1& (0+255),w,b
  9223  0160AE  26D9               	addwf	fsr2l,f,c
  9224  0160B0  518B               	movf	(labelcmp@p1+1)& (0+255),w,b
  9225  0160B2  22DA               	addwfc	fsr2h,f,c
  9226  0160B4  50DF               	movf	indf2,w,c
  9227  0160B6  0101               	movlb	1	; () banked
  9228  0160B8  6F8E               	movwf	??_labelcmp& (0+255),b
  9229  0160BA  0E02               	movlw	2
  9230  0160BC  0101               	movlb	1	; () banked
  9231  0160BE  258C               	addwf	labelcmp@p2& (0+255),w,b
  9232  0160C0  0101               	movlb	1	; () banked
  9233  0160C2  6F8F               	movwf	(??_labelcmp+1)& (0+255),b
  9234  0160C4  0E00               	movlw	0
  9235  0160C6  0101               	movlb	1	; () banked
  9236  0160C8  218D               	addwfc	(labelcmp@p2+1)& (0+255),w,b
  9237  0160CA  0101               	movlb	1	; () banked
  9238  0160CC  6F90               	movwf	(??_labelcmp+2)& (0+255),b
  9239  0160CE  C18F  FFF6         	movff	??_labelcmp+1,tblptrl
  9240  0160D2  C190  FFF7         	movff	??_labelcmp+2,tblptrh
  9241  0160D6                     	if	0	;tblptru may be non-zero
  9242  0160D6                     	endif
  9243  0160D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9244  0160D6  0E00               	movlw	low (__mediumconst shr (0+16))
  9245  0160D8  6EF8               	movwf	tblptru,c
  9246  0160DA                     	endif
  9247  0160DA  0008               	tblrd		*
  9248  0160DC  50F5               	movf	tablat,w,c
  9249  0160DE  0101               	movlb	1	; () banked
  9250  0160E0  198E               	xorwf	??_labelcmp& (0+255),w,b
  9251  0160E2  A4D8               	btfss	status,2,c
  9252  0160E4  D003               	goto	l1284
  9253                           
  9254                           ; BSR set to: 1
  9255  0160E6  0E01               	movlw	1
  9256  0160E8  0101               	movlb	1	; () banked
  9257  0160EA  6F91               	movwf	_labelcmp$3774& (0+255),b
  9258  0160EC                     l1284:
  9259                           
  9260                           ; BSR set to: 1
  9261  0160EC  0101               	movlb	1	; () banked
  9262  0160EE  5191               	movf	_labelcmp$3774& (0+255),w,b
  9263  0160F0  0012               	return	
  9264  0160F2                     __end_of_labelcmp:
  9265                           	opt stack 0
  9266                           tblptru	equ	0xFF8
  9267                           tblptrh	equ	0xFF7
  9268                           tblptrl	equ	0xFF6
  9269                           tablat	equ	0xFF5
  9270                           prodh	equ	0xFF4
  9271                           prodl	equ	0xFF3
  9272                           postinc0	equ	0xFEE
  9273                           plusw0	equ	0xFEB
  9274                           wreg	equ	0xFE8
  9275                           indf1	equ	0xFE7
  9276                           postdec1	equ	0xFE5
  9277                           fsr1h	equ	0xFE2
  9278                           fsr1l	equ	0xFE1
  9279                           indf2	equ	0xFDF
  9280                           postinc2	equ	0xFDE
  9281                           postdec2	equ	0xFDD
  9282                           plusw2	equ	0xFDB
  9283                           fsr2h	equ	0xFDA
  9284                           fsr2l	equ	0xFD9
  9285                           status	equ	0xFD8
  9286                           
  9287 ;; *************** function _timer_reset *****************
  9288 ;; Defined at:
  9289 ;;		line 704 in file "src/main.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;		None
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;		None
  9294 ;; Return value:  Size  Location     Type
  9295 ;;		None               void
  9296 ;; Registers used:
  9297 ;;		wreg, status,2
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9307 ;;Total ram usage:        0 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:    9
  9310 ;; This function calls:
  9311 ;;		Nothing
  9312 ;; This function is called by:
  9313 ;;		_main
  9314 ;;		_process_update_answer
  9315 ;;		_sleep_and_reset
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text26
  9320  016F8C                     __ptext26:
  9321                           	opt stack 0
  9322  016F8C                     _timer_reset:
  9323                           	opt stack 21
  9324                           
  9325                           ;main.c: 706: if (m_update_frequency == 0)
  9326                           
  9327                           ; BSR set to: 1
  9328                           ;incstack = 0
  9329  016F8C  0101               	movlb	1	; () banked
  9330  016F8E  51FF               	movf	_m_update_frequency& (0+255),w,b	;volatile
  9331  016F90  A4D8               	btfss	status,2,c
  9332  016F92  D003               	goto	l1217
  9333                           
  9334                           ; BSR set to: 1
  9335                           ;main.c: 707: timer_count = 1;
  9336  016F94  0E01               	movlw	1
  9337  016F96  6E48               	movwf	_timer_count,c	;volatile
  9338  016F98  D002               	goto	l13363
  9339  016F9A                     l1217:
  9340                           
  9341                           ; BSR set to: 1
  9342                           ;main.c: 708: else
  9343                           ;main.c: 709: timer_count = m_update_frequency;
  9344  016F9A  C1FF  F048         	movff	_m_update_frequency,_timer_count	;volatile
  9345  016F9E                     l13363:
  9346                           
  9347                           ; BSR set to: 1
  9348                           ;main.c: 710: timer_flag = 0;
  9349  016F9E  0E00               	movlw	0
  9350  016FA0  0101               	movlb	1	; () banked
  9351  016FA2  6F4D               	movwf	_timer_flag& (0+255),b	;volatile
  9352                           
  9353                           ; BSR set to: 1
  9354  016FA4  0012               	return		;funcret
  9355  016FA6                     __end_of_timer_reset:
  9356                           	opt stack 0
  9357                           tblptru	equ	0xFF8
  9358                           tblptrh	equ	0xFF7
  9359                           tblptrl	equ	0xFF6
  9360                           tablat	equ	0xFF5
  9361                           prodh	equ	0xFF4
  9362                           prodl	equ	0xFF3
  9363                           postinc0	equ	0xFEE
  9364                           plusw0	equ	0xFEB
  9365                           wreg	equ	0xFE8
  9366                           indf1	equ	0xFE7
  9367                           postdec1	equ	0xFE5
  9368                           fsr1h	equ	0xFE2
  9369                           fsr1l	equ	0xFE1
  9370                           indf2	equ	0xFDF
  9371                           postinc2	equ	0xFDE
  9372                           postdec2	equ	0xFDD
  9373                           plusw2	equ	0xFDB
  9374                           fsr2h	equ	0xFDA
  9375                           fsr2l	equ	0xFD9
  9376                           status	equ	0xFD8
  9377                           
  9378 ;; *************** function _send_writables_update *****************
  9379 ;; Defined at:
  9380 ;;		line 567 in file "src/main.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;		None
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;  tmp             2    0        unsigned int 
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  1    wreg      unsigned char 
  9387 ;; Registers used:
  9388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9396 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9397 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9398 ;;Total ram usage:        1 bytes
  9399 ;; Hardware stack levels used:    1
  9400 ;; Hardware stack levels required when called:   18
  9401 ;; This function calls:
  9402 ;;		_dBm_to_mW_ufixed16
  9403 ;;		_do_UPDATE
  9404 ;;		_encode_ufixed16_variable
  9405 ;;		_encode_uint8_variable
  9406 ;;		_memcpy
  9407 ;; This function is called by:
  9408 ;;		_process_update_answer
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text27
  9413  014DDC                     __ptext27:
  9414                           	opt stack 0
  9415  014DDC                     _send_writables_update:
  9416                           	opt stack 11
  9417                           
  9418                           ;main.c: 569: uint16_t tmp;
  9419                           ;main.c: 570: p_buffer = m_buffer;
  9420                           
  9421                           ; BSR set to: 1
  9422                           ;incstack = 0
  9423  014DDC  0EE0               	movlw	low _m_buffer
  9424  014DDE  0101               	movlb	1	; () banked
  9425  014DE0  6F3A               	movwf	_p_buffer& (0+255),b
  9426  014DE2  0E02               	movlw	high _m_buffer
  9427  014DE4  0101               	movlb	1	; () banked
  9428  014DE6  6F3B               	movwf	(_p_buffer+1)& (0+255),b
  9429                           
  9430                           ; BSR set to: 1
  9431                           ;main.c: 572: if (Pwr_updated)
  9432  014DE8  0100               	movlb	0	; () banked
  9433  014DEA  51B7               	movf	_Pwr_updated& (0+255),w,b
  9434  014DEC  B4D8               	btfsc	status,2,c
  9435  014DEE  D046               	goto	l13485
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;main.c: 573: {
  9439                           ;main.c: 575: memcpy(m_var.label, POWER_LABEL, 3);
  9440  014DF0  0E79               	movlw	low _m_var
  9441  014DF2  0101               	movlb	1	; () banked
  9442  014DF4  6F8A               	movwf	memcpy@d1& (0+255),b
  9443  014DF6  0E01               	movlw	high _m_var
  9444  014DF8  0101               	movlb	1	; () banked
  9445  014DFA  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  9446  014DFC  0EEB               	movlw	low _POWER_LABEL
  9447  014DFE  0101               	movlb	1	; () banked
  9448  014E00  6F8C               	movwf	memcpy@s1& (0+255),b
  9449  014E02  0EFF               	movlw	high _POWER_LABEL
  9450  014E04  0101               	movlb	1	; () banked
  9451  014E06  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  9452  014E08  0E00               	movlw	0
  9453  014E0A  0101               	movlb	1	; () banked
  9454  014E0C  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  9455  014E0E  0E03               	movlw	3
  9456  014E10  6F8E               	movwf	memcpy@n& (0+255),b
  9457  014E12  EC30  F0B5         	call	_memcpy	;wreg free
  9458                           
  9459                           ;main.c: 576: m_var.unit = 8;
  9460  014E16  0E08               	movlw	8
  9461  014E18  0101               	movlb	1	; () banked
  9462  014E1A  6F7F               	movwf	(_m_var+6)& (0+255),b
  9463                           
  9464                           ; BSR set to: 1
  9465                           ;main.c: 577: dBm_to_mW_ufixed16(m_power, &(m_var.value_byte1), &(m_var.value_byte2));
  9466  014E1C  0E7D               	movlw	low (_m_var+4)
  9467  014E1E  0101               	movlb	1	; () banked
  9468  014E20  6F8A               	movwf	dBm_to_mW_ufixed16@value1& (0+255),b
  9469  014E22  0E01               	movlw	high (_m_var+4)
  9470  014E24  0101               	movlb	1	; () banked
  9471  014E26  6F8B               	movwf	(dBm_to_mW_ufixed16@value1+1)& (0+255),b
  9472  014E28  0E7E               	movlw	low (_m_var+5)
  9473  014E2A  0101               	movlb	1	; () banked
  9474  014E2C  6F8C               	movwf	dBm_to_mW_ufixed16@value2& (0+255),b
  9475  014E2E  0E01               	movlw	high (_m_var+5)
  9476  014E30  0101               	movlb	1	; () banked
  9477  014E32  6F8D               	movwf	(dBm_to_mW_ufixed16@value2+1)& (0+255),b
  9478  014E34  0101               	movlb	1	; () banked
  9479  014E36  514A               	movf	_m_power& (0+255),w,b
  9480  014E38  EC26  F0A8         	call	_dBm_to_mW_ufixed16
  9481                           
  9482                           ;main.c: 578: m_var.writable = 1;
  9483  014E3C  0E01               	movlw	1
  9484  014E3E  0101               	movlb	1	; () banked
  9485  014E40  6F80               	movwf	(_m_var+7)& (0+255),b
  9486                           
  9487                           ; BSR set to: 1
  9488                           ;main.c: 579: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  9489  014E42  C13A  F18A         	movff	_p_buffer,encode_ufixed16_variable@buffer
  9490  014E46  C13B  F18B         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  9491  014E4A  EE21  F079         	lfsr	2,_m_var
  9492  014E4E  EE01  F08C         	lfsr	0,encode_ufixed16_variable@var
  9493  014E52  0E09               	movlw	9
  9494  014E54                     u15901:
  9495  014E54  CFDB FFEB          	movff	plusw2,plusw0
  9496  014E58  06E8               	decf	wreg,f,c
  9497  014E5A  E2FC               	bc	u15901
  9498  014E5C  EC63  F0AF         	call	_encode_ufixed16_variable	;wreg free
  9499  014E60  0101               	movlb	1	; () banked
  9500  014E62  6FFB               	movwf	??_send_writables_update& (0+255),b
  9501  014E64  0101               	movlb	1	; () banked
  9502  014E66  51FB               	movf	??_send_writables_update& (0+255),w,b
  9503  014E68  0D01               	mullw	1
  9504  014E6A  50F3               	movf	prodl,w,c
  9505  014E6C  0101               	movlb	1	; () banked
  9506  014E6E  273A               	addwf	_p_buffer& (0+255),f,b
  9507  014E70  50F4               	movf	prodh,w,c
  9508  014E72  0101               	movlb	1	; () banked
  9509  014E74  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  9510                           
  9511                           ; BSR set to: 1
  9512                           ;main.c: 580: Pwr_updated = 0;
  9513  014E76  0E00               	movlw	0
  9514  014E78  0100               	movlb	0	; () banked
  9515  014E7A  6FB7               	movwf	_Pwr_updated& (0+255),b
  9516  014E7C                     l13485:
  9517                           
  9518                           ; BSR set to: 0
  9519                           ;main.c: 581: }
  9520                           ;main.c: 582: if (UpF_updated)
  9521  014E7C  0100               	movlb	0	; () banked
  9522  014E7E  51BB               	movf	_UpF_updated& (0+255),w,b
  9523  014E80  B4D8               	btfsc	status,2,c
  9524  014E82  D038               	goto	l13499
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;main.c: 583: {
  9528                           ;main.c: 585: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  9529  014E84  0E79               	movlw	low _m_var
  9530  014E86  0101               	movlb	1	; () banked
  9531  014E88  6F8A               	movwf	memcpy@d1& (0+255),b
  9532  014E8A  0E01               	movlw	high _m_var
  9533  014E8C  0101               	movlb	1	; () banked
  9534  014E8E  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
  9535  014E90  0EF7               	movlw	low _UPDATE_FREQUENCY_LABEL
  9536  014E92  0101               	movlb	1	; () banked
  9537  014E94  6F8C               	movwf	memcpy@s1& (0+255),b
  9538  014E96  0EFF               	movlw	high _UPDATE_FREQUENCY_LABEL
  9539  014E98  0101               	movlb	1	; () banked
  9540  014E9A  6F8D               	movwf	(memcpy@s1+1)& (0+255),b
  9541  014E9C  0E00               	movlw	0
  9542  014E9E  0101               	movlb	1	; () banked
  9543  014EA0  6F8F               	movwf	(memcpy@n+1)& (0+255),b
  9544  014EA2  0E03               	movlw	3
  9545  014EA4  6F8E               	movwf	memcpy@n& (0+255),b
  9546  014EA6  EC30  F0B5         	call	_memcpy	;wreg free
  9547                           
  9548                           ;main.c: 586: m_var.unit = 4;
  9549  014EAA  0E04               	movlw	4
  9550  014EAC  0101               	movlb	1	; () banked
  9551  014EAE  6F7F               	movwf	(_m_var+6)& (0+255),b
  9552                           
  9553                           ; BSR set to: 1
  9554                           ;main.c: 587: m_var.value_byte1 = m_update_frequency;
  9555  014EB0  C1FF  F17D         	movff	_m_update_frequency,_m_var+4	;volatile
  9556                           
  9557                           ; BSR set to: 1
  9558                           ;main.c: 588: m_var.writable = 1;
  9559  014EB4  0E01               	movlw	1
  9560  014EB6  0101               	movlb	1	; () banked
  9561  014EB8  6F80               	movwf	(_m_var+7)& (0+255),b
  9562                           
  9563                           ; BSR set to: 1
  9564                           ;main.c: 589: p_buffer += encode_uint8_variable(p_buffer, m_var);
  9565  014EBA  C13A  F18A         	movff	_p_buffer,encode_uint8_variable@buffer
  9566  014EBE  C13B  F18B         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  9567  014EC2  EE21  F079         	lfsr	2,_m_var
  9568  014EC6  EE01  F08C         	lfsr	0,encode_uint8_variable@var
  9569  014ECA  0E09               	movlw	9
  9570  014ECC                     u15921:
  9571  014ECC  CFDB FFEB          	movff	plusw2,plusw0
  9572  014ED0  06E8               	decf	wreg,f,c
  9573  014ED2  E2FC               	bc	u15921
  9574  014ED4  EC25  F0B1         	call	_encode_uint8_variable	;wreg free
  9575  014ED8  0101               	movlb	1	; () banked
  9576  014EDA  6FFB               	movwf	??_send_writables_update& (0+255),b
  9577  014EDC  0101               	movlb	1	; () banked
  9578  014EDE  51FB               	movf	??_send_writables_update& (0+255),w,b
  9579  014EE0  0D01               	mullw	1
  9580  014EE2  50F3               	movf	prodl,w,c
  9581  014EE4  0101               	movlb	1	; () banked
  9582  014EE6  273A               	addwf	_p_buffer& (0+255),f,b
  9583  014EE8  50F4               	movf	prodh,w,c
  9584  014EEA  0101               	movlb	1	; () banked
  9585  014EEC  233B               	addwfc	(_p_buffer+1)& (0+255),f,b
  9586                           
  9587                           ; BSR set to: 1
  9588                           ;main.c: 590: UpF_updated = 0;
  9589  014EEE  0E00               	movlw	0
  9590  014EF0  0100               	movlb	0	; () banked
  9591  014EF2  6FBB               	movwf	_UpF_updated& (0+255),b
  9592  014EF4                     l13499:
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;main.c: 591: }
  9596                           ;main.c: 593: return do_UPDATE(m_buffer, p_buffer-m_buffer, 1);
  9597  014EF4  0EE0               	movlw	low _m_buffer
  9598  014EF6  0103               	movlb	3	; () banked
  9599  014EF8  6FE7               	movwf	do_UPDATE@p_buff& (0+255),b
  9600  014EFA  0E02               	movlw	high _m_buffer
  9601  014EFC  0103               	movlb	3	; () banked
  9602  014EFE  6FE8               	movwf	(do_UPDATE@p_buff+1)& (0+255),b
  9603  014F00  0EE0               	movlw	_m_buffer& (0+255)
  9604  014F02  0800               	sublw	0
  9605  014F04  0101               	movlb	1	; () banked
  9606  014F06  253A               	addwf	_p_buffer& (0+255),w,b
  9607  014F08  0103               	movlb	3	; () banked
  9608  014F0A  6FE9               	movwf	do_UPDATE@size& (0+255),b
  9609  014F0C  0E01               	movlw	1
  9610  014F0E  0103               	movlb	3	; () banked
  9611  014F10  6FEA               	movwf	do_UPDATE@ack_required& (0+255),b
  9612  014F12  EC35  F0A2         	call	_do_UPDATE	;wreg free
  9613  014F16  0012               	return	
  9614  014F18                     __end_of_send_writables_update:
  9615                           	opt stack 0
  9616                           tblptru	equ	0xFF8
  9617                           tblptrh	equ	0xFF7
  9618                           tblptrl	equ	0xFF6
  9619                           tablat	equ	0xFF5
  9620                           prodh	equ	0xFF4
  9621                           prodl	equ	0xFF3
  9622                           postinc0	equ	0xFEE
  9623                           plusw0	equ	0xFEB
  9624                           wreg	equ	0xFE8
  9625                           indf1	equ	0xFE7
  9626                           postdec1	equ	0xFE5
  9627                           fsr1h	equ	0xFE2
  9628                           fsr1l	equ	0xFE1
  9629                           indf2	equ	0xFDF
  9630                           postinc2	equ	0xFDE
  9631                           postdec2	equ	0xFDD
  9632                           plusw2	equ	0xFDB
  9633                           fsr2h	equ	0xFDA
  9634                           fsr2l	equ	0xFD9
  9635                           status	equ	0xFD8
  9636                           
  9637 ;; *************** function _encode_uint8_variable *****************
  9638 ;; Defined at:
  9639 ;;		line 118 in file "../../muta/muta_messages.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
  9642 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
  9643 ;;  var            10    2[BANK1 ] struct .
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;  m_writable      1   14[BANK1 ] unsigned char 
  9646 ;;  m_signed        1   13[BANK1 ] unsigned char 
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      unsigned char 
  9649 ;; Registers used:
  9650 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9656 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9657 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9658 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9659 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9660 ;;Total ram usage:       15 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:    9
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		_send_initial_update
  9667 ;;		_send_writables_update
  9668 ;;		_send_periodical_update
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           	psect	text28
  9673  01624A                     __ptext28:
  9674                           	opt stack 0
  9675  01624A                     _encode_uint8_variable:
  9676                           	opt stack 20
  9677                           
  9678                           ;muta_messages.c: 120: *(buffer++) = var.label[0];
  9679                           
  9680                           ;incstack = 0
  9681  01624A  C18A  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9682  01624E  C18B  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9683  016252  C18C  FFDF         	movff	encode_uint8_variable@var,indf2
  9684  016256  0101               	movlb	1	; () banked
  9685  016258  4B8A               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9686  01625A  2B8B               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9687                           
  9688                           ; BSR set to: 1
  9689                           ;muta_messages.c: 121: *(buffer++) = var.label[1];
  9690  01625C  C18A  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9691  016260  C18B  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9692  016264  C18D  FFDF         	movff	encode_uint8_variable@var+1,indf2
  9693  016268  0101               	movlb	1	; () banked
  9694  01626A  4B8A               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9695  01626C  2B8B               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9696                           
  9697                           ; BSR set to: 1
  9698                           ;muta_messages.c: 122: *(buffer++) = var.label[2];
  9699  01626E  C18A  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9700  016272  C18B  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9701  016276  C18E  FFDF         	movff	encode_uint8_variable@var+2,indf2
  9702                           
  9703                           ; BSR set to: 1
  9704  01627A  0101               	movlb	1	; () banked
  9705  01627C  4B8A               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9706  01627E  2B8B               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9707                           
  9708                           ; BSR set to: 1
  9709                           ;muta_messages.c: 123: uint8_t m_signed = 0;
  9710  016280  0E00               	movlw	0
  9711  016282  0101               	movlb	1	; () banked
  9712  016284  6F97               	movwf	encode_uint8_variable@m_signed& (0+255),b
  9713                           
  9714                           ; BSR set to: 1
  9715                           ;muta_messages.c: 124: uint8_t m_writable = 0;
  9716  016286  0E00               	movlw	0
  9717  016288  0101               	movlb	1	; () banked
  9718  01628A  6F98               	movwf	encode_uint8_variable@m_writable& (0+255),b
  9719                           
  9720                           ; BSR set to: 1
  9721                           ;muta_messages.c: 125: if (var._signed)
  9722  01628C  0101               	movlb	1	; () banked
  9723  01628E  5194               	movf	(encode_uint8_variable@var+8)& (0+255),w,b
  9724  016290  B4D8               	btfsc	status,2,c
  9725  016292  D003               	goto	l1335
  9726                           
  9727                           ; BSR set to: 1
  9728                           ;muta_messages.c: 126: { m_signed = 1; }
  9729  016294  0E01               	movlw	1
  9730  016296  0101               	movlb	1	; () banked
  9731  016298  6F97               	movwf	encode_uint8_variable@m_signed& (0+255),b
  9732  01629A                     l1335:
  9733                           
  9734                           ; BSR set to: 1
  9735                           ;muta_messages.c: 127: if (var.writable)
  9736  01629A  0101               	movlb	1	; () banked
  9737  01629C  5193               	movf	(encode_uint8_variable@var+7)& (0+255),w,b
  9738  01629E  B4D8               	btfsc	status,2,c
  9739  0162A0  D003               	goto	l12711
  9740                           
  9741                           ; BSR set to: 1
  9742                           ;muta_messages.c: 128: { m_writable = 1; }
  9743  0162A2  0E01               	movlw	1
  9744  0162A4  0101               	movlb	1	; () banked
  9745  0162A6  6F98               	movwf	encode_uint8_variable@m_writable& (0+255),b
  9746  0162A8                     l12711:
  9747                           
  9748                           ; BSR set to: 1
  9749                           ;muta_messages.c: 129: var.type = (0 << 6)+ (m_signed << 5) + (m_writable << 4) + var.un
      +                          it;
  9750  0162A8  C198  F196         	movff	encode_uint8_variable@m_writable,??_encode_uint8_variable
  9751  0162AC  0101               	movlb	1	; () banked
  9752  0162AE  3B96               	swapf	??_encode_uint8_variable& (0+255),f,b
  9753  0162B0  0EF0               	movlw	240
  9754  0162B2  1796               	andwf	??_encode_uint8_variable& (0+255),f,b
  9755  0162B4  0101               	movlb	1	; () banked
  9756  0162B6  3997               	swapf	encode_uint8_variable@m_signed& (0+255),w,b
  9757  0162B8  46E8               	rlncf	wreg,f,c
  9758  0162BA  0BE0               	andlw	224
  9759  0162BC  0101               	movlb	1	; () banked
  9760  0162BE  2596               	addwf	??_encode_uint8_variable& (0+255),w,b
  9761  0162C0  0101               	movlb	1	; () banked
  9762  0162C2  2592               	addwf	(encode_uint8_variable@var+6)& (0+255),w,b
  9763  0162C4  0101               	movlb	1	; () banked
  9764  0162C6  6F8F               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9765                           
  9766                           ; BSR set to: 1
  9767                           ;muta_messages.c: 130: *(buffer++) = var.type;
  9768  0162C8  C18A  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9769  0162CC  C18B  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9770  0162D0  C18F  FFDF         	movff	encode_uint8_variable@var+3,indf2
  9771                           
  9772                           ; BSR set to: 1
  9773  0162D4  0101               	movlb	1	; () banked
  9774  0162D6  4B8A               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9775  0162D8  2B8B               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9776                           
  9777                           ; BSR set to: 1
  9778                           ;muta_messages.c: 131: *(buffer++) = var.value_byte1;
  9779  0162DA  C18A  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9780  0162DE  C18B  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9781  0162E2  C190  FFDF         	movff	encode_uint8_variable@var+4,indf2
  9782                           
  9783                           ; BSR set to: 1
  9784  0162E6  0101               	movlb	1	; () banked
  9785  0162E8  4B8A               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9786  0162EA  2B8B               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9787                           
  9788                           ; BSR set to: 1
  9789                           ;muta_messages.c: 132: return 5;
  9790  0162EC  0E05               	movlw	5
  9791  0162EE  0012               	return	
  9792  0162F0                     __end_of_encode_uint8_variable:
  9793                           	opt stack 0
  9794                           tblptru	equ	0xFF8
  9795                           tblptrh	equ	0xFF7
  9796                           tblptrl	equ	0xFF6
  9797                           tablat	equ	0xFF5
  9798                           prodh	equ	0xFF4
  9799                           prodl	equ	0xFF3
  9800                           postinc0	equ	0xFEE
  9801                           plusw0	equ	0xFEB
  9802                           wreg	equ	0xFE8
  9803                           indf1	equ	0xFE7
  9804                           postdec1	equ	0xFE5
  9805                           fsr1h	equ	0xFE2
  9806                           fsr1l	equ	0xFE1
  9807                           indf2	equ	0xFDF
  9808                           postinc2	equ	0xFDE
  9809                           postdec2	equ	0xFDD
  9810                           plusw2	equ	0xFDB
  9811                           fsr2h	equ	0xFDA
  9812                           fsr2l	equ	0xFD9
  9813                           status	equ	0xFD8
  9814                           
  9815 ;; *************** function _encode_ufixed16_variable *****************
  9816 ;; Defined at:
  9817 ;;		line 153 in file "../../muta/muta_messages.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
  9820 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
  9821 ;;  var            10    2[BANK1 ] struct .
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  m_writable      1   14[BANK1 ] unsigned char 
  9824 ;;  m_signed        1   13[BANK1 ] unsigned char 
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      unsigned char 
  9827 ;; Registers used:
  9828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9834 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9835 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9836 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9837 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9838 ;;Total ram usage:       15 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; Hardware stack levels required when called:    9
  9841 ;; This function calls:
  9842 ;;		Nothing
  9843 ;; This function is called by:
  9844 ;;		_send_initial_update
  9845 ;;		_send_writables_update
  9846 ;;		_send_periodical_update
  9847 ;; This function uses a non-reentrant model
  9848 ;;
  9849                           
  9850                           	psect	text29
  9851  015EC6                     __ptext29:
  9852                           	opt stack 0
  9853  015EC6                     _encode_ufixed16_variable:
  9854                           	opt stack 20
  9855                           
  9856                           ;muta_messages.c: 155: *(buffer++) = var.label[0];
  9857                           
  9858                           ; BSR set to: 1
  9859                           ;incstack = 0
  9860  015EC6  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9861  015ECA  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9862  015ECE  C18C  FFDF         	movff	encode_ufixed16_variable@var,indf2
  9863  015ED2  0101               	movlb	1	; () banked
  9864  015ED4  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9865  015ED6  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9866                           
  9867                           ; BSR set to: 1
  9868                           ;muta_messages.c: 156: *(buffer++) = var.label[1];
  9869  015ED8  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9870  015EDC  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9871  015EE0  C18D  FFDF         	movff	encode_ufixed16_variable@var+1,indf2
  9872  015EE4  0101               	movlb	1	; () banked
  9873  015EE6  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9874  015EE8  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9875                           
  9876                           ; BSR set to: 1
  9877                           ;muta_messages.c: 157: *(buffer++) = var.label[2];
  9878  015EEA  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9879  015EEE  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9880  015EF2  C18E  FFDF         	movff	encode_ufixed16_variable@var+2,indf2
  9881                           
  9882                           ; BSR set to: 1
  9883  015EF6  0101               	movlb	1	; () banked
  9884  015EF8  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9885  015EFA  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9886                           
  9887                           ; BSR set to: 1
  9888                           ;muta_messages.c: 158: uint8_t m_signed = 0;
  9889  015EFC  0E00               	movlw	0
  9890  015EFE  0101               	movlb	1	; () banked
  9891  015F00  6F97               	movwf	encode_ufixed16_variable@m_signed& (0+255),b
  9892                           
  9893                           ; BSR set to: 1
  9894                           ;muta_messages.c: 159: uint8_t m_writable = 0;
  9895  015F02  0E00               	movlw	0
  9896  015F04  0101               	movlb	1	; () banked
  9897  015F06  6F98               	movwf	encode_ufixed16_variable@m_writable& (0+255),b
  9898                           
  9899                           ; BSR set to: 1
  9900                           ;muta_messages.c: 160: if (var._signed)
  9901  015F08  0101               	movlb	1	; () banked
  9902  015F0A  5194               	movf	(encode_ufixed16_variable@var+8)& (0+255),w,b
  9903  015F0C  B4D8               	btfsc	status,2,c
  9904  015F0E  D003               	goto	l1345
  9905                           
  9906                           ; BSR set to: 1
  9907                           ;muta_messages.c: 161: m_signed = 1;
  9908  015F10  0E01               	movlw	1
  9909  015F12  0101               	movlb	1	; () banked
  9910  015F14  6F97               	movwf	encode_ufixed16_variable@m_signed& (0+255),b
  9911  015F16                     l1345:
  9912                           
  9913                           ; BSR set to: 1
  9914                           ;muta_messages.c: 162: if (var.writable)
  9915  015F16  0101               	movlb	1	; () banked
  9916  015F18  5193               	movf	(encode_ufixed16_variable@var+7)& (0+255),w,b
  9917  015F1A  B4D8               	btfsc	status,2,c
  9918  015F1C  D003               	goto	l12673
  9919                           
  9920                           ; BSR set to: 1
  9921                           ;muta_messages.c: 163: m_writable = 1;
  9922  015F1E  0E01               	movlw	1
  9923  015F20  0101               	movlb	1	; () banked
  9924  015F22  6F98               	movwf	encode_ufixed16_variable@m_writable& (0+255),b
  9925  015F24                     l12673:
  9926                           
  9927                           ; BSR set to: 1
  9928                           ;muta_messages.c: 164: var.type = (2 << 6)+ (m_signed << 5) + (m_writable << 4) + var.un
      +                          it;
  9929  015F24  C198  F196         	movff	encode_ufixed16_variable@m_writable,??_encode_ufixed16_variable
  9930  015F28  0101               	movlb	1	; () banked
  9931  015F2A  3B96               	swapf	??_encode_ufixed16_variable& (0+255),f,b
  9932  015F2C  0EF0               	movlw	240
  9933  015F2E  1796               	andwf	??_encode_ufixed16_variable& (0+255),f,b
  9934  015F30  0101               	movlb	1	; () banked
  9935  015F32  3997               	swapf	encode_ufixed16_variable@m_signed& (0+255),w,b
  9936  015F34  46E8               	rlncf	wreg,f,c
  9937  015F36  0BE0               	andlw	224
  9938  015F38  0101               	movlb	1	; () banked
  9939  015F3A  2596               	addwf	??_encode_ufixed16_variable& (0+255),w,b
  9940  015F3C  0101               	movlb	1	; () banked
  9941  015F3E  2592               	addwf	(encode_ufixed16_variable@var+6)& (0+255),w,b
  9942  015F40  0F80               	addlw	128
  9943  015F42  0101               	movlb	1	; () banked
  9944  015F44  6F8F               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
  9945                           
  9946                           ; BSR set to: 1
  9947                           ;muta_messages.c: 165: *(buffer++) = var.type;
  9948  015F46  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9949  015F4A  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9950  015F4E  C18F  FFDF         	movff	encode_ufixed16_variable@var+3,indf2
  9951                           
  9952                           ; BSR set to: 1
  9953  015F52  0101               	movlb	1	; () banked
  9954  015F54  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9955  015F56  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9956                           
  9957                           ; BSR set to: 1
  9958                           ;muta_messages.c: 166: *(buffer++) = var.value_byte2;
  9959  015F58  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9960  015F5C  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9961  015F60  C191  FFDF         	movff	encode_ufixed16_variable@var+5,indf2
  9962                           
  9963                           ; BSR set to: 1
  9964  015F64  0101               	movlb	1	; () banked
  9965  015F66  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9966  015F68  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9967                           
  9968                           ; BSR set to: 1
  9969                           ;muta_messages.c: 167: *(buffer++) = var.value_byte1;
  9970  015F6A  C18A  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
  9971  015F6E  C18B  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
  9972  015F72  C190  FFDF         	movff	encode_ufixed16_variable@var+4,indf2
  9973                           
  9974                           ; BSR set to: 1
  9975  015F76  0101               	movlb	1	; () banked
  9976  015F78  4B8A               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
  9977  015F7A  2B8B               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
  9978                           
  9979                           ; BSR set to: 1
  9980                           ;muta_messages.c: 168: return 6;
  9981  015F7C  0E06               	movlw	6
  9982  015F7E  0012               	return	
  9983  015F80                     __end_of_encode_ufixed16_variable:
  9984                           	opt stack 0
  9985                           tblptru	equ	0xFF8
  9986                           tblptrh	equ	0xFF7
  9987                           tblptrl	equ	0xFF6
  9988                           tablat	equ	0xFF5
  9989                           prodh	equ	0xFF4
  9990                           prodl	equ	0xFF3
  9991                           postinc0	equ	0xFEE
  9992                           plusw0	equ	0xFEB
  9993                           wreg	equ	0xFE8
  9994                           indf1	equ	0xFE7
  9995                           postdec1	equ	0xFE5
  9996                           fsr1h	equ	0xFE2
  9997                           fsr1l	equ	0xFE1
  9998                           indf2	equ	0xFDF
  9999                           postinc2	equ	0xFDE
 10000                           postdec2	equ	0xFDD
 10001                           plusw2	equ	0xFDB
 10002                           fsr2h	equ	0xFDA
 10003                           fsr2l	equ	0xFD9
 10004                           status	equ	0xFD8
 10005                           
 10006 ;; *************** function _do_UPDATE *****************
 10007 ;; Defined at:
 10008 ;;		line 413 in file "../../muta/muta_messages.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;  p_buff          2   19[BANK3 ] PTR unsigned char 
 10011 ;;		 -> m_buffer(32), 
 10012 ;;  size            1   21[BANK3 ] unsigned char 
 10013 ;;  ack_required    1   22[BANK3 ] unsigned char 
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;  i               2   25[BANK3 ] unsigned int 
 10016 ;;  shortaddress    2   23[BANK3 ] unsigned char [2]
 10017 ;;  result          1   27[BANK3 ] unsigned char 
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1    wreg      unsigned char 
 10020 ;; Registers used:
 10021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/0
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10027 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
 10028 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0
 10029 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10030 ;;      Totals:         0       0       1       0       9       0       0       0       0       0       0       0       
      +0       0       0       0
 10031 ;;Total ram usage:       10 bytes
 10032 ;; Hardware stack levels used:    1
 10033 ;; Hardware stack levels required when called:   17
 10034 ;; This function calls:
 10035 ;;		_MiApp_DiscardMessage
 10036 ;;		_MiApp_MessageAvailable
 10037 ;;		_MiApp_UnicastAddress
 10038 ;;		_memcpy
 10039 ;; This function is called by:
 10040 ;;		_send_initial_update
 10041 ;;		_send_writables_update
 10042 ;;		_send_periodical_update
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           
 10046                           	psect	text30
 10047  01446A                     __ptext30:
 10048                           	opt stack 0
 10049  01446A                     _do_UPDATE:
 10050                           	opt stack 12
 10051                           
 10052                           ;muta_messages.c: 415: uint8_t shortaddress[2] = { 0x00, 0x00 };
 10053                           
 10054                           ; BSR set to: 1
 10055                           ;incstack = 0
 10056  01446A  C140  F3EB         	movff	do_UPDATE@F10256,do_UPDATE@shortaddress
 10057  01446E  C141  F3EC         	movff	do_UPDATE@F10256+1,do_UPDATE@shortaddress+1
 10058                           
 10059                           ;muta_messages.c: 416: {TxData = 11;};
 10060  014472  0E0B               	movlw	11
 10061  014474  0101               	movlb	1	; () banked
 10062  014476  6F46               	movwf	_TxData& (0+255),b
 10063                           
 10064                           ; BSR set to: 1
 10065                           ;muta_messages.c: 417: TxBuffer[TxData++] = 04;
 10066  014478  0101               	movlb	1	; () banked
 10067  01447A  5146               	movf	_TxData& (0+255),w,b
 10068  01447C  0D01               	mullw	1
 10069  01447E  0E4E               	movlw	low _TxBuffer
 10070  014480  24F3               	addwf	prodl,w,c
 10071  014482  6ED9               	movwf	fsr2l,c
 10072  014484  0E01               	movlw	high _TxBuffer
 10073  014486  20F4               	addwfc	prodh,w,c
 10074  014488  6EDA               	movwf	fsr2h,c
 10075  01448A  0E04               	movlw	4
 10076  01448C  6EDF               	movwf	indf2,c
 10077                           
 10078                           ; BSR set to: 1
 10079  01448E  0101               	movlb	1	; () banked
 10080  014490  2B46               	incf	_TxData& (0+255),f,b
 10081                           
 10082                           ; BSR set to: 1
 10083                           ;muta_messages.c: 418: if (ack_required)
 10084  014492  0103               	movlb	3	; () banked
 10085  014494  51EA               	movf	do_UPDATE@ack_required& (0+255),w,b
 10086  014496  0103               	movlb	3	; () banked
 10087  014498  B4D8               	btfsc	status,2,c
 10088  01449A  D00E               	goto	l12739
 10089                           
 10090                           ; BSR set to: 3
 10091                           ;muta_messages.c: 419: TxBuffer[TxData++] = 0xff;
 10092  01449C  0101               	movlb	1	; () banked
 10093  01449E  5146               	movf	_TxData& (0+255),w,b
 10094  0144A0  0D01               	mullw	1
 10095  0144A2  0E4E               	movlw	low _TxBuffer
 10096  0144A4  24F3               	addwf	prodl,w,c
 10097  0144A6  6ED9               	movwf	fsr2l,c
 10098  0144A8  0E01               	movlw	high _TxBuffer
 10099  0144AA  20F4               	addwfc	prodh,w,c
 10100  0144AC  6EDA               	movwf	fsr2h,c
 10101  0144AE  0EFF               	movlw	255
 10102  0144B0  D00D               	goto	L1
 10103  0144B2                     l12737:
 10104                           
 10105                           ; BSR set to: 1
 10106  0144B2  0101               	movlb	1	; () banked
 10107  0144B4  2B46               	incf	_TxData& (0+255),f,b
 10108  0144B6  D00C               	goto	l12743
 10109  0144B8                     l12739:
 10110                           
 10111                           ;muta_messages.c: 420: else
 10112                           ;muta_messages.c: 421: TxBuffer[TxData++] = 0xf0;
 10113  0144B8  0101               	movlb	1	; () banked
 10114  0144BA  5146               	movf	_TxData& (0+255),w,b
 10115  0144BC  0D01               	mullw	1
 10116  0144BE  0E4E               	movlw	low _TxBuffer
 10117  0144C0  24F3               	addwf	prodl,w,c
 10118  0144C2  6ED9               	movwf	fsr2l,c
 10119  0144C4  0E01               	movlw	high _TxBuffer
 10120  0144C6  20F4               	addwfc	prodh,w,c
 10121  0144C8  6EDA               	movwf	fsr2h,c
 10122  0144CA  0EF0               	movlw	240
 10123  0144CC                     L1:
 10124  0144CC  6EDF               	movwf	indf2,c
 10125  0144CE  D7F1               	goto	l12737
 10126  0144D0                     l12743:
 10127                           
 10128                           ; BSR set to: 1
 10129                           ;muta_messages.c: 422: memcpy(&TxBuffer[TxData], p_buff, size);
 10130  0144D0  0101               	movlb	1	; () banked
 10131  0144D2  5146               	movf	_TxData& (0+255),w,b
 10132  0144D4  0D01               	mullw	1
 10133  0144D6  0E4E               	movlw	low _TxBuffer
 10134  0144D8  24F3               	addwf	prodl,w,c
 10135  0144DA  0101               	movlb	1	; () banked
 10136  0144DC  6F8A               	movwf	memcpy@d1& (0+255),b
 10137  0144DE  0E01               	movlw	high _TxBuffer
 10138  0144E0  20F4               	addwfc	prodh,w,c
 10139  0144E2  0101               	movlb	1	; () banked
 10140  0144E4  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
 10141  0144E6  C3E7  F18C         	movff	do_UPDATE@p_buff,memcpy@s1
 10142  0144EA  C3E8  F18D         	movff	do_UPDATE@p_buff+1,memcpy@s1+1
 10143  0144EE  C3E9  F18E         	movff	do_UPDATE@size,memcpy@n
 10144  0144F2  0101               	movlb	1	; () banked
 10145  0144F4  6B8F               	clrf	(memcpy@n+1)& (0+255),b
 10146  0144F6  EC30  F0B5         	call	_memcpy	;wreg free
 10147                           
 10148                           ;muta_messages.c: 423: TxData = TxData + size;
 10149  0144FA  0101               	movlb	1	; () banked
 10150  0144FC  5146               	movf	_TxData& (0+255),w,b
 10151  0144FE  0103               	movlb	3	; () banked
 10152  014500  25E9               	addwf	do_UPDATE@size& (0+255),w,b
 10153  014502  0101               	movlb	1	; () banked
 10154  014504  6F46               	movwf	_TxData& (0+255),b
 10155                           
 10156                           ; BSR set to: 1
 10157                           ;muta_messages.c: 424: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 1);
 10158  014506  0EEB               	movlw	low do_UPDATE@shortaddress
 10159  014508  0101               	movlb	1	; () banked
 10160  01450A  6FEE               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 10161  01450C  0E03               	movlw	high do_UPDATE@shortaddress
 10162  01450E  0101               	movlb	1	; () banked
 10163  014510  6FEF               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 10164  014512  0E00               	movlw	0
 10165  014514  0101               	movlb	1	; () banked
 10166  014516  6FF0               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 10167  014518  0E01               	movlw	1
 10168  01451A  0101               	movlb	1	; () banked
 10169  01451C  6FF1               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 10170  01451E  EC50  F092         	call	_MiApp_UnicastAddress	;wreg free
 10171  014522  0103               	movlb	3	; () banked
 10172  014524  6FEF               	movwf	do_UPDATE@result& (0+255),b
 10173                           
 10174                           ; BSR set to: 3
 10175                           ;muta_messages.c: 425: if (!result)
 10176  014526  0103               	movlb	3	; () banked
 10177  014528  51EF               	movf	do_UPDATE@result& (0+255),w,b
 10178  01452A  0103               	movlb	3	; () banked
 10179  01452C  A4D8               	btfss	status,2,c
 10180  01452E  D009               	goto	l12757
 10181                           
 10182                           ; BSR set to: 3
 10183                           ;muta_messages.c: 426: {
 10184                           ;muta_messages.c: 427: m_failed_messages++;
 10185  014530  0E01               	movlw	1
 10186  014532  0101               	movlb	1	; () banked
 10187  014534  271E               	addwf	_m_failed_messages& (0+255),f,b
 10188  014536  0E00               	movlw	0
 10189  014538  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 10190  01453A  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 10191  01453C  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 10192                           
 10193                           ; BSR set to: 1
 10194                           ;muta_messages.c: 428: return 0;
 10195  01453E  0E00               	movlw	0
 10196                           
 10197                           ; BSR set to: 1
 10198  014540  0012               	return	
 10199  014542                     l12757:
 10200                           
 10201                           ;muta_messages.c: 429: }
 10202                           ;muta_messages.c: 430: if (ack_required)
 10203  014542  0103               	movlb	3	; () banked
 10204  014544  51EA               	movf	do_UPDATE@ack_required& (0+255),w,b
 10205  014546  0103               	movlb	3	; () banked
 10206  014548  B4D8               	btfsc	status,2,c
 10207  01454A  D04A               	goto	l12793
 10208                           
 10209                           ; BSR set to: 3
 10210                           ;muta_messages.c: 431: {
 10211                           ;muta_messages.c: 432: unsigned int i;
 10212                           ;muta_messages.c: 433: result = 0;
 10213  01454C  0E00               	movlw	0
 10214  01454E  0103               	movlb	3	; () banked
 10215  014550  6FEF               	movwf	do_UPDATE@result& (0+255),b
 10216                           
 10217                           ;muta_messages.c: 434: for (i=0; i<100; i++)
 10218  014552  0E00               	movlw	0
 10219  014554  0103               	movlb	3	; () banked
 10220  014556  6FEE               	movwf	(do_UPDATE@i+1)& (0+255),b
 10221  014558  0E00               	movlw	0
 10222  01455A  6FED               	movwf	do_UPDATE@i& (0+255),b
 10223  01455C                     l12761:
 10224                           
 10225                           ; BSR set to: 3
 10226  01455C  0103               	movlb	3	; () banked
 10227  01455E  51EE               	movf	(do_UPDATE@i+1)& (0+255),w,b
 10228  014560  E128               	bnz	l12781
 10229  014562  0E64               	movlw	100
 10230  014564  0103               	movlb	3	; () banked
 10231  014566  5DED               	subwf	do_UPDATE@i& (0+255),w,b
 10232  014568  B0D8               	btfsc	status,0,c
 10233  01456A  D023               	goto	l12781
 10234                           
 10235                           ; BSR set to: 3
 10236                           ;muta_messages.c: 435: {
 10237                           ;muta_messages.c: 436: _delay((unsigned long)((10)*(8000000/4000.0)));
 10238                           
 10239                           ; BSR set to: 3
 10240                           
 10241                           ; BSR set to: 3
 10242  01456C  0E1A               	movlw	26
 10243  01456E  0101               	movlb	1	; () banked
 10244  014570  6FFA               	movwf	??_do_UPDATE& (0+255),b
 10245  014572  0EF8               	movlw	248
 10246  014574                     u18357:
 10247  014574  2EE8               	decfsz	wreg,f,c
 10248  014576  D7FE               	goto	u18357
 10249  014578  2FFA               	decfsz	??_do_UPDATE& (0+255),f,b
 10250  01457A  D7FC               	goto	u18357
 10251  01457C  D000               	nop2	
 10252                           
 10253                           ;muta_messages.c: 437: if(MiApp_MessageAvailable())
 10254  01457E  ECE8  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 10255  014582  0900               	iorlw	0
 10256  014584  B4D8               	btfsc	status,2,c
 10257  014586  D011               	goto	l12777
 10258                           
 10259                           ;muta_messages.c: 438: {
 10260                           ;muta_messages.c: 440: last_rssi = rxMessage.PacketRSSI;
 10261  014588  C114  F148         	movff	_rxMessage+8,_last_rssi
 10262                           
 10263                           ;muta_messages.c: 441: if (rxMessage.Payload[0] != 04)
 10264  01458C  C111  FFD9         	movff	_rxMessage+5,fsr2l
 10265  014590  C112  FFDA         	movff	_rxMessage+6,fsr2h
 10266  014594  0E04               	movlw	4
 10267  014596  18DE               	xorwf	postinc2,w,c
 10268  014598  B4D8               	btfsc	status,2,c
 10269  01459A  D003               	goto	l12775
 10270                           
 10271                           ;muta_messages.c: 442: {
 10272                           ;muta_messages.c: 443: MiApp_DiscardMessage();
 10273  01459C  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 10274                           
 10275                           ;muta_messages.c: 444: }
 10276  0145A0  D008               	goto	l12781
 10277  0145A2                     l12775:
 10278                           
 10279                           ;muta_messages.c: 445: else
 10280                           ;muta_messages.c: 446: result = 1;
 10281  0145A2  0E01               	movlw	1
 10282  0145A4  0103               	movlb	3	; () banked
 10283  0145A6  6FEF               	movwf	do_UPDATE@result& (0+255),b
 10284                           
 10285                           ; BSR set to: 3
 10286                           ;muta_messages.c: 449: break;
 10287  0145A8  D004               	goto	l12781
 10288  0145AA                     l12777:
 10289  0145AA  0103               	movlb	3	; () banked
 10290  0145AC  4BED               	infsnz	do_UPDATE@i& (0+255),f,b
 10291  0145AE  2BEE               	incf	(do_UPDATE@i+1)& (0+255),f,b
 10292  0145B0  D7D5               	goto	l12761
 10293  0145B2                     l12781:
 10294                           
 10295                           ;muta_messages.c: 450: }
 10296                           ;muta_messages.c: 451: }
 10297                           ;muta_messages.c: 452: if (!result)
 10298  0145B2  0103               	movlb	3	; () banked
 10299  0145B4  51EF               	movf	do_UPDATE@result& (0+255),w,b
 10300  0145B6  0103               	movlb	3	; () banked
 10301  0145B8  A4D8               	btfss	status,2,c
 10302  0145BA  D008               	goto	l12785
 10303                           
 10304                           ; BSR set to: 3
 10305                           ;muta_messages.c: 453: m_failed_messages++;
 10306  0145BC  0E01               	movlw	1
 10307  0145BE  0101               	movlb	1	; () banked
 10308  0145C0  271E               	addwf	_m_failed_messages& (0+255),f,b
 10309  0145C2  0E00               	movlw	0
 10310  0145C4  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 10311  0145C6  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 10312  0145C8  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 10313  0145CA  D007               	goto	l12787
 10314  0145CC                     l12785:
 10315                           
 10316                           ;muta_messages.c: 454: else
 10317                           ;muta_messages.c: 455: m_sent_messages++;
 10318  0145CC  0E01               	movlw	1
 10319  0145CE  0101               	movlb	1	; () banked
 10320  0145D0  2722               	addwf	_m_sent_messages& (0+255),f,b
 10321  0145D2  0E00               	movlw	0
 10322  0145D4  2323               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 10323  0145D6  2324               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 10324  0145D8  2325               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 10325  0145DA                     l12787:
 10326                           
 10327                           ; BSR set to: 1
 10328                           ;muta_messages.c: 456: return result;
 10329  0145DA  0103               	movlb	3	; () banked
 10330  0145DC  51EF               	movf	do_UPDATE@result& (0+255),w,b
 10331                           
 10332                           ; BSR set to: 3
 10333                           ;muta_messages.c: 457: }
 10334                           
 10335                           ; BSR set to: 3
 10336  0145DE  0012               	return	
 10337  0145E0                     l12793:
 10338                           
 10339                           ; BSR set to: 3
 10340                           ;muta_messages.c: 458: else
 10341                           ;muta_messages.c: 459: {
 10342                           ;muta_messages.c: 460: m_sent_messages++;
 10343  0145E0  0E01               	movlw	1
 10344  0145E2  0101               	movlb	1	; () banked
 10345  0145E4  2722               	addwf	_m_sent_messages& (0+255),f,b
 10346  0145E6  0E00               	movlw	0
 10347  0145E8  2323               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 10348  0145EA  2324               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 10349  0145EC  2325               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 10350                           
 10351                           ; BSR set to: 1
 10352                           ;muta_messages.c: 461: return 1;
 10353  0145EE  0E01               	movlw	1
 10354                           
 10355                           ; BSR set to: 1
 10356  0145F0  0012               	return	
 10357  0145F2                     __end_of_do_UPDATE:
 10358                           	opt stack 0
 10359                           tblptru	equ	0xFF8
 10360                           tblptrh	equ	0xFF7
 10361                           tblptrl	equ	0xFF6
 10362                           tablat	equ	0xFF5
 10363                           prodh	equ	0xFF4
 10364                           prodl	equ	0xFF3
 10365                           postinc0	equ	0xFEE
 10366                           plusw0	equ	0xFEB
 10367                           wreg	equ	0xFE8
 10368                           indf1	equ	0xFE7
 10369                           postdec1	equ	0xFE5
 10370                           fsr1h	equ	0xFE2
 10371                           fsr1l	equ	0xFE1
 10372                           indf2	equ	0xFDF
 10373                           postinc2	equ	0xFDE
 10374                           postdec2	equ	0xFDD
 10375                           plusw2	equ	0xFDB
 10376                           fsr2h	equ	0xFDA
 10377                           fsr2l	equ	0xFD9
 10378                           status	equ	0xFD8
 10379                           
 10380 ;; *************** function _dBm_to_mW_ufixed16 *****************
 10381 ;; Defined at:
 10382 ;;		line 45 in file "../../muta/muta_messages.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;  power           1    wreg     unsigned char 
 10385 ;;  value1          2    0[BANK1 ] PTR unsigned char 
 10386 ;;		 -> m_var(10), 
 10387 ;;  value2          2    2[BANK1 ] PTR unsigned char 
 10388 ;;		 -> m_var(10), 
 10389 ;; Auto vars:     Size  Location     Type
 10390 ;;  power           1    4[BANK1 ] unsigned char 
 10391 ;; Return value:  Size  Location     Type
 10392 ;;		None               void
 10393 ;; Registers used:
 10394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10395 ;; Tracked objects:
 10396 ;;		On entry : 0/0
 10397 ;;		On exit  : 0/0
 10398 ;;		Unchanged: 0/0
 10399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10400 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10401 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10403 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10404 ;;Total ram usage:        5 bytes
 10405 ;; Hardware stack levels used:    1
 10406 ;; Hardware stack levels required when called:    9
 10407 ;; This function calls:
 10408 ;;		Nothing
 10409 ;; This function is called by:
 10410 ;;		_send_initial_update
 10411 ;;		_send_writables_update
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           
 10415                           	psect	text31
 10416  01504C                     __ptext31:
 10417                           	opt stack 0
 10418  01504C                     _dBm_to_mW_ufixed16:
 10419                           	opt stack 20
 10420                           
 10421                           ;incstack = 0
 10422                           ;dBm_to_mW_ufixed16@power stored from wreg
 10423  01504C  0101               	movlb	1	; () banked
 10424  01504E  6F8E               	movwf	dBm_to_mW_ufixed16@power& (0+255),b
 10425                           
 10426                           ;muta_messages.c: 47: switch(power)
 10427  015050  D075               	goto	l12821
 10428  015052                     l12801:
 10429                           
 10430                           ;muta_messages.c: 50: *value1 = 20;
 10431  015052  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10432  015056  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10433  01505A  0E14               	movlw	20
 10434  01505C  6EDF               	movwf	indf2,c
 10435                           
 10436                           ;muta_messages.c: 51: *value2 = 0;
 10437  01505E  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10438  015062  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10439  015066  0E00               	movlw	0
 10440  015068  6EDF               	movwf	indf2,c
 10441                           
 10442                           ;muta_messages.c: 52: break;
 10443  01506A  0012               	return	
 10444  01506C                     l12803:
 10445                           
 10446                           ;muta_messages.c: 54: *value1 = 10;
 10447  01506C  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10448  015070  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10449  015074  0E0A               	movlw	10
 10450  015076  6EDF               	movwf	indf2,c
 10451                           
 10452                           ;muta_messages.c: 55: *value2 = 0;
 10453  015078  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10454  01507C  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10455  015080  0E00               	movlw	0
 10456  015082  6EDF               	movwf	indf2,c
 10457                           
 10458                           ;muta_messages.c: 56: break;
 10459  015084  0012               	return	
 10460  015086                     l12805:
 10461                           
 10462                           ;muta_messages.c: 58: *value1 = 5;
 10463  015086  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10464  01508A  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10465  01508E  0E05               	movlw	5
 10466  015090  6EDF               	movwf	indf2,c
 10467                           
 10468                           ;muta_messages.c: 59: *value2 = 0;
 10469  015092  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10470  015096  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10471  01509A  0E00               	movlw	0
 10472  01509C  6EDF               	movwf	indf2,c
 10473                           
 10474                           ;muta_messages.c: 60: break;
 10475  01509E  0012               	return	
 10476  0150A0                     l12807:
 10477                           
 10478                           ;muta_messages.c: 62: *value1 = 2;
 10479  0150A0  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10480  0150A4  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10481  0150A8  0E02               	movlw	2
 10482  0150AA  6EDF               	movwf	indf2,c
 10483                           
 10484                           ;muta_messages.c: 63: *value2 = 50;
 10485  0150AC  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10486  0150B0  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10487  0150B4  0E32               	movlw	50
 10488  0150B6  6EDF               	movwf	indf2,c
 10489                           
 10490                           ;muta_messages.c: 64: break;
 10491  0150B8  0012               	return	
 10492  0150BA                     l12809:
 10493                           
 10494                           ;muta_messages.c: 66: *value1 = 1;
 10495  0150BA  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10496  0150BE  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10497  0150C2  0E01               	movlw	1
 10498  0150C4  6EDF               	movwf	indf2,c
 10499                           
 10500                           ;muta_messages.c: 67: *value2 = 25;
 10501  0150C6  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10502  0150CA  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10503  0150CE  0E19               	movlw	25
 10504  0150D0  6EDF               	movwf	indf2,c
 10505                           
 10506                           ;muta_messages.c: 68: break;
 10507  0150D2  0012               	return	
 10508  0150D4                     l12811:
 10509                           
 10510                           ;muta_messages.c: 70: *value1 = 0;
 10511  0150D4  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10512  0150D8  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10513  0150DC  0E00               	movlw	0
 10514  0150DE  6EDF               	movwf	indf2,c
 10515                           
 10516                           ;muta_messages.c: 71: *value2 = 60;
 10517  0150E0  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10518  0150E4  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10519  0150E8  0E3C               	movlw	60
 10520  0150EA  6EDF               	movwf	indf2,c
 10521                           
 10522                           ;muta_messages.c: 72: break;
 10523  0150EC  0012               	return	
 10524  0150EE                     l12813:
 10525                           
 10526                           ;muta_messages.c: 74: *value1 = 0;
 10527  0150EE  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10528  0150F2  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10529  0150F6  0E00               	movlw	0
 10530  0150F8  6EDF               	movwf	indf2,c
 10531                           
 10532                           ;muta_messages.c: 75: *value2 = 30;
 10533  0150FA  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10534  0150FE  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10535  015102  0E1E               	movlw	30
 10536  015104  6EDF               	movwf	indf2,c
 10537                           
 10538                           ;muta_messages.c: 76: break;
 10539  015106  0012               	return	
 10540  015108                     l12815:
 10541                           
 10542                           ;muta_messages.c: 78: *value1 = 0;
 10543  015108  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10544  01510C  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10545  015110  0E00               	movlw	0
 10546  015112  6EDF               	movwf	indf2,c
 10547                           
 10548                           ;muta_messages.c: 79: *value2 = 15;
 10549  015114  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10550  015118  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10551  01511C  0E0F               	movlw	15
 10552  01511E  6EDF               	movwf	indf2,c
 10553                           
 10554                           ;muta_messages.c: 80: break;
 10555  015120  0012               	return	
 10556  015122                     l12817:
 10557                           
 10558                           ;muta_messages.c: 82: *value1 = 0;
 10559  015122  C18A  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 10560  015126  C18B  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 10561  01512A  0E00               	movlw	0
 10562  01512C  6EDF               	movwf	indf2,c
 10563                           
 10564                           ;muta_messages.c: 83: *value2 = 0;
 10565  01512E  C18C  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 10566  015132  C18D  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 10567  015136  0E00               	movlw	0
 10568  015138  6EDF               	movwf	indf2,c
 10569                           
 10570                           ;muta_messages.c: 85: }
 10571                           
 10572                           ;muta_messages.c: 84: break;
 10573  01513A  0012               	return	
 10574  01513C                     l12821:
 10575  01513C  0101               	movlb	1	; () banked
 10576  01513E  518E               	movf	dBm_to_mW_ufixed16@power& (0+255),w,b
 10577                           
 10578                           ; Switch size 1, requested type "space"
 10579                           ; Number of cases is 8, Range of values is 0 to 7
 10580                           ; switch strategies available:
 10581                           ; Name         Instructions Cycles
 10582                           ; simple_byte           25    13 (average)
 10583                           ;	Chosen strategy is simple_byte
 10584  015140  0A00               	xorlw	0	; case 0
 10585  015142  B4D8               	btfsc	status,2,c
 10586  015144  D786               	goto	l12801
 10587  015146  0A01               	xorlw	1	; case 1
 10588  015148  B4D8               	btfsc	status,2,c
 10589  01514A  D790               	goto	l12803
 10590  01514C  0A03               	xorlw	3	; case 2
 10591  01514E  B4D8               	btfsc	status,2,c
 10592  015150  D79A               	goto	l12805
 10593  015152  0A01               	xorlw	1	; case 3
 10594  015154  B4D8               	btfsc	status,2,c
 10595  015156  D7A4               	goto	l12807
 10596  015158  0A07               	xorlw	7	; case 4
 10597  01515A  B4D8               	btfsc	status,2,c
 10598  01515C  D7AE               	goto	l12809
 10599  01515E  0A01               	xorlw	1	; case 5
 10600  015160  B4D8               	btfsc	status,2,c
 10601  015162  D7B8               	goto	l12811
 10602  015164  0A03               	xorlw	3	; case 6
 10603  015166  B4D8               	btfsc	status,2,c
 10604  015168  D7C2               	goto	l12813
 10605  01516A  0A01               	xorlw	1	; case 7
 10606  01516C  B4D8               	btfsc	status,2,c
 10607  01516E  D7CC               	goto	l12815
 10608  015170  D7D8               	goto	l12817
 10609  015172                     __end_of_dBm_to_mW_ufixed16:
 10610                           	opt stack 0
 10611                           tblptru	equ	0xFF8
 10612                           tblptrh	equ	0xFF7
 10613                           tblptrl	equ	0xFF6
 10614                           tablat	equ	0xFF5
 10615                           prodh	equ	0xFF4
 10616                           prodl	equ	0xFF3
 10617                           postinc0	equ	0xFEE
 10618                           plusw0	equ	0xFEB
 10619                           wreg	equ	0xFE8
 10620                           indf1	equ	0xFE7
 10621                           postdec1	equ	0xFE5
 10622                           fsr1h	equ	0xFE2
 10623                           fsr1l	equ	0xFE1
 10624                           indf2	equ	0xFDF
 10625                           postinc2	equ	0xFDE
 10626                           postdec2	equ	0xFDD
 10627                           plusw2	equ	0xFDB
 10628                           fsr2h	equ	0xFDA
 10629                           fsr2l	equ	0xFD9
 10630                           status	equ	0xFD8
 10631                           
 10632 ;; *************** function _decode_variable *****************
 10633 ;; Defined at:
 10634 ;;		line 195 in file "../../muta/muta_messages.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;  p_buffer        2   10[BANK1 ] PTR unsigned char 
 10637 ;;		 -> m_buffer(32), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;  var            10   22[BANK1 ] struct .
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  10   10[BANK1 ] struct .
 10642 ;; Registers used:
 10643 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10649 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10650 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10651 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10652 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10653 ;;Total ram usage:       22 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:   10
 10656 ;; This function calls:
 10657 ;;		_memcpy
 10658 ;; This function is called by:
 10659 ;;		_process_update_answer
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           	psect	text32
 10664  01590E                     __ptext32:
 10665                           	opt stack 0
 10666  01590E                     _decode_variable:
 10667                           	opt stack 19
 10668                           
 10669                           ;muta_messages.c: 197: MUTA_VARIABLE var;
 10670                           ;muta_messages.c: 198: memcpy(var.label, p_buffer, 3);
 10671                           
 10672                           ;incstack = 0
 10673  01590E  0EA0               	movlw	low decode_variable@var
 10674  015910  0101               	movlb	1	; () banked
 10675  015912  6F8A               	movwf	memcpy@d1& (0+255),b
 10676  015914  0E01               	movlw	high decode_variable@var
 10677  015916  0101               	movlb	1	; () banked
 10678  015918  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
 10679  01591A  C194  F18C         	movff	decode_variable@p_buffer,memcpy@s1
 10680  01591E  C195  F18D         	movff	decode_variable@p_buffer+1,memcpy@s1+1
 10681  015922  0E00               	movlw	0
 10682  015924  0101               	movlb	1	; () banked
 10683  015926  6F8F               	movwf	(memcpy@n+1)& (0+255),b
 10684  015928  0E03               	movlw	3
 10685  01592A  6F8E               	movwf	memcpy@n& (0+255),b
 10686  01592C  EC30  F0B5         	call	_memcpy	;wreg free
 10687                           
 10688                           ;muta_messages.c: 199: p_buffer += 3;
 10689  015930  0E03               	movlw	3
 10690  015932  0101               	movlb	1	; () banked
 10691  015934  2794               	addwf	decode_variable@p_buffer& (0+255),f,b
 10692  015936  0E00               	movlw	0
 10693  015938  2395               	addwfc	(decode_variable@p_buffer+1)& (0+255),f,b
 10694                           
 10695                           ; BSR set to: 1
 10696                           ;muta_messages.c: 201: var.unit = *p_buffer & 0b00001111;
 10697  01593A  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10698  01593E  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10699  015942  50DF               	movf	indf2,w,c
 10700  015944  0B0F               	andlw	15
 10701  015946  0101               	movlb	1	; () banked
 10702  015948  6FA6               	movwf	(decode_variable@var+6)& (0+255),b
 10703                           
 10704                           ; BSR set to: 1
 10705                           ;muta_messages.c: 202: if (*p_buffer & 0b00010000)
 10706  01594A  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10707  01594E  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10708  015952  0101               	movlb	1	; () banked
 10709  015954  A8DF               	btfss	indf2,4,c
 10710  015956  D002               	goto	l13385
 10711                           
 10712                           ; BSR set to: 1
 10713                           ;muta_messages.c: 203: var.writable = 1;
 10714  015958  0E01               	movlw	1
 10715  01595A  D001               	goto	L2
 10716  01595C                     l13385:
 10717                           
 10718                           ; BSR set to: 1
 10719                           ;muta_messages.c: 204: else
 10720                           ;muta_messages.c: 205: var.writable = 0;
 10721  01595C  0E00               	movlw	0
 10722  01595E                     L2:
 10723  01595E  0101               	movlb	1	; () banked
 10724  015960  6FA7               	movwf	(decode_variable@var+7)& (0+255),b
 10725                           
 10726                           ; BSR set to: 1
 10727                           ;muta_messages.c: 206: if (*p_buffer & 0b00100000)
 10728                           
 10729                           ; BSR set to: 1
 10730  015962  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10731  015966  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10732  01596A  0101               	movlb	1	; () banked
 10733  01596C  AADF               	btfss	indf2,5,c
 10734  01596E  D002               	goto	l13391
 10735                           
 10736                           ; BSR set to: 1
 10737                           ;muta_messages.c: 207: var._signed = 1;
 10738  015970  0E01               	movlw	1
 10739  015972  D001               	goto	L3
 10740  015974                     l13391:
 10741                           
 10742                           ; BSR set to: 1
 10743                           ;muta_messages.c: 208: else
 10744                           ;muta_messages.c: 209: var._signed = 0;
 10745  015974  0E00               	movlw	0
 10746  015976                     L3:
 10747  015976  0101               	movlb	1	; () banked
 10748  015978  6FA8               	movwf	(decode_variable@var+8)& (0+255),b
 10749                           
 10750                           ; BSR set to: 1
 10751                           ;muta_messages.c: 211: var.type = (*p_buffer++ & 0b11000000) >> 6;
 10752                           
 10753                           ; BSR set to: 1
 10754  01597A  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10755  01597E  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10756  015982  50DF               	movf	indf2,w,c
 10757  015984  0101               	movlb	1	; () banked
 10758  015986  6F9E               	movwf	??_decode_variable& (0+255),b
 10759  015988  0E06               	movlw	6
 10760  01598A  0101               	movlb	1	; () banked
 10761  01598C  6F9F               	movwf	(??_decode_variable+1)& (0+255),b
 10762  01598E                     u15805:
 10763  01598E  0101               	movlb	1	; () banked
 10764  015990  90D8               	bcf	status,0,c
 10765  015992  339E               	rrcf	??_decode_variable& (0+255),f,b
 10766  015994  0101               	movlb	1	; () banked
 10767  015996  2F9F               	decfsz	(??_decode_variable+1)& (0+255),f,b
 10768  015998  D7FA               	goto	u15805
 10769  01599A  0101               	movlb	1	; () banked
 10770  01599C  519E               	movf	??_decode_variable& (0+255),w,b
 10771  01599E  0B03               	andlw	3
 10772  0159A0  0101               	movlb	1	; () banked
 10773  0159A2  6FA3               	movwf	(decode_variable@var+3)& (0+255),b
 10774                           
 10775                           ; BSR set to: 1
 10776  0159A4  0101               	movlb	1	; () banked
 10777  0159A6  4B94               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10778  0159A8  2B95               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10779                           
 10780                           ; BSR set to: 1
 10781                           ;muta_messages.c: 212: var.value_byte1 = *p_buffer++;
 10782  0159AA  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10783  0159AE  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10784  0159B2  50DF               	movf	indf2,w,c
 10785  0159B4  0101               	movlb	1	; () banked
 10786  0159B6  6FA4               	movwf	(decode_variable@var+4)& (0+255),b
 10787                           
 10788                           ; BSR set to: 1
 10789  0159B8  0101               	movlb	1	; () banked
 10790  0159BA  4B94               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10791  0159BC  2B95               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10792                           
 10793                           ;muta_messages.c: 213: if ((var.type == 1) || (var.type == 2))
 10794  0159BE  0101               	movlb	1	; () banked
 10795  0159C0  05A3               	decf	(decode_variable@var+3)& (0+255),w,b
 10796  0159C2  B4D8               	btfsc	status,2,c
 10797  0159C4  D005               	goto	l13403
 10798                           
 10799                           ; BSR set to: 1
 10800  0159C6  0E02               	movlw	2
 10801  0159C8  0101               	movlb	1	; () banked
 10802  0159CA  19A3               	xorwf	(decode_variable@var+3)& (0+255),w,b
 10803  0159CC  A4D8               	btfss	status,2,c
 10804  0159CE  D00C               	goto	l13409
 10805  0159D0                     l13403:
 10806                           
 10807                           ; BSR set to: 1
 10808                           ;muta_messages.c: 214: {
 10809                           ;muta_messages.c: 215: var.value_byte2 = *p_buffer++;
 10810  0159D0  C194  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10811  0159D4  C195  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10812  0159D8  50DF               	movf	indf2,w,c
 10813  0159DA  0101               	movlb	1	; () banked
 10814  0159DC  6FA5               	movwf	(decode_variable@var+5)& (0+255),b
 10815                           
 10816                           ; BSR set to: 1
 10817  0159DE  0101               	movlb	1	; () banked
 10818  0159E0  4B94               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10819  0159E2  2B95               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10820                           
 10821                           ; BSR set to: 1
 10822                           ;muta_messages.c: 216: var.size = 6;
 10823  0159E4  0E06               	movlw	6
 10824  0159E6  D001               	goto	L4
 10825  0159E8                     l13409:
 10826                           
 10827                           ; BSR set to: 1
 10828                           ;muta_messages.c: 218: else
 10829                           ;muta_messages.c: 219: var.size = 5;
 10830  0159E8  0E05               	movlw	5
 10831  0159EA                     L4:
 10832  0159EA  0101               	movlb	1	; () banked
 10833  0159EC  6FA9               	movwf	(decode_variable@var+9)& (0+255),b
 10834                           
 10835                           ; BSR set to: 1
 10836                           ;muta_messages.c: 220: return var;
 10837                           
 10838                           ; BSR set to: 1
 10839  0159EE  EE21  F0A0         	lfsr	2,decode_variable@var
 10840  0159F2  EE01  F094         	lfsr	0,?_decode_variable
 10841  0159F6  0E09               	movlw	9
 10842  0159F8                     u15831:
 10843  0159F8  CFDB FFEB          	movff	plusw2,plusw0
 10844  0159FC  06E8               	decf	wreg,f,c
 10845  0159FE  E2FC               	bc	u15831
 10846  015A00  0012               	return	
 10847  015A02                     __end_of_decode_variable:
 10848                           	opt stack 0
 10849                           tblptru	equ	0xFF8
 10850                           tblptrh	equ	0xFF7
 10851                           tblptrl	equ	0xFF6
 10852                           tablat	equ	0xFF5
 10853                           prodh	equ	0xFF4
 10854                           prodl	equ	0xFF3
 10855                           postinc0	equ	0xFEE
 10856                           plusw0	equ	0xFEB
 10857                           wreg	equ	0xFE8
 10858                           indf1	equ	0xFE7
 10859                           postdec1	equ	0xFE5
 10860                           fsr1h	equ	0xFE2
 10861                           fsr1l	equ	0xFE1
 10862                           indf2	equ	0xFDF
 10863                           postinc2	equ	0xFDE
 10864                           postdec2	equ	0xFDD
 10865                           plusw2	equ	0xFDB
 10866                           fsr2h	equ	0xFDA
 10867                           fsr2l	equ	0xFD9
 10868                           status	equ	0xFD8
 10869                           
 10870 ;; *************** function _MiApp_TransceiverPowerState *****************
 10871 ;; Defined at:
 10872 ;;		line 3805 in file "src/miwi/miwi_mesh.c"
 10873 ;; Parameters:    Size  Location     Type
 10874 ;;  Mode            1    wreg     unsigned char 
 10875 ;; Auto vars:     Size  Location     Type
 10876 ;;  Mode            1   20[BANK1 ] unsigned char 
 10877 ;;  status          1    0        unsigned char 
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  1    wreg      unsigned char 
 10880 ;; Registers used:
 10881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10888 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10890 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10891 ;;Total ram usage:        1 bytes
 10892 ;; Hardware stack levels used:    1
 10893 ;; Hardware stack levels required when called:   13
 10894 ;; This function calls:
 10895 ;;		_MiMAC_PowerState
 10896 ;; This function is called by:
 10897 ;;		_main
 10898 ;;		_process_update_answer
 10899 ;;		_sleep_and_reset
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text33
 10904  016D62                     __ptext33:
 10905                           	opt stack 0
 10906  016D62                     _MiApp_TransceiverPowerState:
 10907                           	opt stack 16
 10908                           
 10909                           ; BSR set to: 1
 10910                           ;incstack = 0
 10911                           ;MiApp_TransceiverPowerState@Mode stored from wreg
 10912  016D62  0101               	movlb	1	; () banked
 10913  016D64  6F9E               	movwf	MiApp_TransceiverPowerState@Mode& (0+255),b
 10914                           
 10915                           ;miwi_mesh.c: 3807: uint8_t status;
 10916                           ;miwi_mesh.c: 3809: switch(Mode)
 10917  016D66  D012               	goto	l13299
 10918  016D68                     l13289:
 10919                           
 10920                           ;miwi_mesh.c: 3812: {
 10921                           ;miwi_mesh.c: 3820: if( MiMAC_PowerState(0x00) )
 10922  016D68  0E00               	movlw	0
 10923  016D6A  ECA8  F0B3         	call	_MiMAC_PowerState
 10924  016D6E  0900               	iorlw	0
 10925  016D70  B4D8               	btfsc	status,2,c
 10926  016D72  0012               	return	
 10927                           
 10928                           ;miwi_mesh.c: 3821: {
 10929                           ;miwi_mesh.c: 3822: MiWiStateMachine.bits.Sleeping = 1;
 10930  016D74  0101               	movlb	1	; () banked
 10931  016D76  8139               	bsf	(_MiWiStateMachine+1)& (0+255),0,b
 10932                           
 10933                           ; BSR set to: 1
 10934                           ;miwi_mesh.c: 3824: }
 10935                           ;miwi_mesh.c: 3825: return 0x01;
 10936                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10937                           
 10938                           ;miwi_mesh.c: 3823: return 0x00;
 10939                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10940  016D78  0012               	return	
 10941  016D7A                     l13293:
 10942                           
 10943                           ; BSR set to: 1
 10944                           ;miwi_mesh.c: 3829: {
 10945                           ;miwi_mesh.c: 3830: if( MiMAC_PowerState(0xFF) )
 10946  016D7A  0EFF               	movlw	255
 10947  016D7C  ECA8  F0B3         	call	_MiMAC_PowerState
 10948  016D80  0900               	iorlw	0
 10949  016D82  B4D8               	btfsc	status,2,c
 10950  016D84  0012               	return	
 10951                           
 10952                           ;miwi_mesh.c: 3831: {
 10953                           ;miwi_mesh.c: 3832: MiWiStateMachine.bits.Sleeping = 0;
 10954  016D86  0101               	movlb	1	; () banked
 10955  016D88  9139               	bcf	(_MiWiStateMachine+1)& (0+255),0,b
 10956                           
 10957                           ; BSR set to: 1
 10958                           ;miwi_mesh.c: 3860: }
 10959                           
 10960                           ; BSR set to: 1
 10961                           ;miwi_mesh.c: 3859: break;
 10962                           
 10963                           ;miwi_mesh.c: 3836: }
 10964                           ;miwi_mesh.c: 3858: default:
 10965                           
 10966                           ; BSR set to: 1
 10967                           ;miwi_mesh.c: 3834: }
 10968                           ;miwi_mesh.c: 3835: return 0x01;
 10969                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10970                           
 10971                           ;miwi_mesh.c: 3833: return 0x00;
 10972                           ;	Return value of _MiApp_TransceiverPowerState is never used
 10973  016D8A  0012               	return	
 10974  016D8C                     l13299:
 10975  016D8C  0101               	movlb	1	; () banked
 10976  016D8E  519E               	movf	MiApp_TransceiverPowerState@Mode& (0+255),w,b
 10977                           
 10978                           ; Switch size 1, requested type "space"
 10979                           ; Number of cases is 2, Range of values is 0 to 1
 10980                           ; switch strategies available:
 10981                           ; Name         Instructions Cycles
 10982                           ; simple_byte            7     4 (average)
 10983                           ;	Chosen strategy is simple_byte
 10984  016D90  0A00               	xorlw	0	; case 0
 10985  016D92  B4D8               	btfsc	status,2,c
 10986  016D94  D7E9               	goto	l13289
 10987  016D96  0A01               	xorlw	1	; case 1
 10988  016D98  A4D8               	btfss	status,2,c
 10989  016D9A  0012               	return	
 10990  016D9C  D7EE               	goto	l13293
 10991  016D9E                     __end_of_MiApp_TransceiverPowerState:
 10992                           	opt stack 0
 10993                           tblptru	equ	0xFF8
 10994                           tblptrh	equ	0xFF7
 10995                           tblptrl	equ	0xFF6
 10996                           tablat	equ	0xFF5
 10997                           prodh	equ	0xFF4
 10998                           prodl	equ	0xFF3
 10999                           postinc0	equ	0xFEE
 11000                           plusw0	equ	0xFEB
 11001                           wreg	equ	0xFE8
 11002                           indf1	equ	0xFE7
 11003                           postdec1	equ	0xFE5
 11004                           fsr1h	equ	0xFE2
 11005                           fsr1l	equ	0xFE1
 11006                           indf2	equ	0xFDF
 11007                           postinc2	equ	0xFDE
 11008                           postdec2	equ	0xFDD
 11009                           plusw2	equ	0xFDB
 11010                           fsr2h	equ	0xFDA
 11011                           fsr2l	equ	0xFD9
 11012                           status	equ	0xFD8
 11013                           
 11014 ;; *************** function _MiMAC_PowerState *****************
 11015 ;; Defined at:
 11016 ;;		line 1174 in file "src/miwi/drv_mrf_miwi_89xa.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;  PowerState      1    wreg     unsigned char 
 11019 ;; Auto vars:     Size  Location     Type
 11020 ;;  PowerState      1   18[BANK1 ] unsigned char 
 11021 ;;  i               1   19[BANK1 ] unsigned char 
 11022 ;; Return value:  Size  Location     Type
 11023 ;;                  1    wreg      unsigned char 
 11024 ;; Registers used:
 11025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11026 ;; Tracked objects:
 11027 ;;		On entry : 0/0
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11032 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11034 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11035 ;;Total ram usage:        2 bytes
 11036 ;; Hardware stack levels used:    1
 11037 ;; Hardware stack levels required when called:   12
 11038 ;; This function calls:
 11039 ;;		_DELAY_ms
 11040 ;;		_SetRFMode
 11041 ;; This function is called by:
 11042 ;;		_MiApp_TransceiverPowerState
 11043 ;; This function uses a non-reentrant model
 11044 ;;
 11045                           
 11046                           	psect	text34
 11047  016750                     __ptext34:
 11048                           	opt stack 0
 11049  016750                     _MiMAC_PowerState:
 11050                           	opt stack 16
 11051                           
 11052                           ;incstack = 0
 11053                           ;MiMAC_PowerState@PowerState stored from wreg
 11054  016750  0101               	movlb	1	; () banked
 11055  016752  6F9C               	movwf	MiMAC_PowerState@PowerState& (0+255),b
 11056                           
 11057                           ;drv_mrf_miwi_89xa.c: 1176: switch(PowerState)
 11058  016754  D02D               	goto	l12627
 11059  016756                     l12597:
 11060                           
 11061                           ;drv_mrf_miwi_89xa.c: 1179: {
 11062                           ;drv_mrf_miwi_89xa.c: 1180: SetRFMode(0x00);
 11063  016756  0E00               	movlw	0
 11064  016758  ECC7  F0B1         	call	_SetRFMode
 11065                           
 11066                           ;drv_mrf_miwi_89xa.c: 1182: INTCONbits.INT0IE = 0;
 11067  01675C  98F2               	bcf	intcon,4,c	;volatile
 11068                           
 11069                           ;drv_mrf_miwi_89xa.c: 1184: INTCON3bits.INT1IE = 0;
 11070  01675E  96F0               	bcf	intcon3,3,c	;volatile
 11071                           
 11072                           ;drv_mrf_miwi_89xa.c: 1185: }
 11073                           ;drv_mrf_miwi_89xa.c: 1186: break;
 11074  016760  D030               	goto	l12629
 11075  016762                     l12603:
 11076                           
 11077                           ;drv_mrf_miwi_89xa.c: 1189: {
 11078                           ;drv_mrf_miwi_89xa.c: 1190: uint8_t i;
 11079                           ;drv_mrf_miwi_89xa.c: 1192: SetRFMode(0x20);
 11080  016762  0E20               	movlw	32
 11081  016764  ECC7  F0B1         	call	_SetRFMode
 11082                           
 11083                           ;drv_mrf_miwi_89xa.c: 1193: SetRFMode(0x60);
 11084  016768  0E60               	movlw	96
 11085  01676A  ECC7  F0B1         	call	_SetRFMode
 11086                           
 11087                           ;drv_mrf_miwi_89xa.c: 1195: INTCONbits.INT0IE = 1;
 11088  01676E  88F2               	bsf	intcon,4,c	;volatile
 11089                           
 11090                           ;drv_mrf_miwi_89xa.c: 1197: INTCON3bits.INT1IE = 1;
 11091  016770  86F0               	bsf	intcon3,3,c	;volatile
 11092                           
 11093                           ;drv_mrf_miwi_89xa.c: 1198: DELAY_ms(10);
 11094  016772  0E00               	movlw	0
 11095  016774  0101               	movlb	1	; () banked
 11096  016776  6F97               	movwf	(DELAY_ms@ms+1)& (0+255),b
 11097  016778  0E0A               	movlw	10
 11098  01677A  6F96               	movwf	DELAY_ms@ms& (0+255),b
 11099  01677C  ECD0  F0B0         	call	_DELAY_ms	;wreg free
 11100                           
 11101                           ;drv_mrf_miwi_89xa.c: 1200: for(i = 0; i < 5; i++)
 11102  016780  0E00               	movlw	0
 11103  016782  0101               	movlb	1	; () banked
 11104  016784  6F9D               	movwf	MiMAC_PowerState@i& (0+255),b
 11105  016786                     l12611:
 11106                           
 11107                           ; BSR set to: 1
 11108  016786  0E04               	movlw	4
 11109  016788  0101               	movlb	1	; () banked
 11110  01678A  659D               	cpfsgt	MiMAC_PowerState@i& (0+255),b
 11111  01678C  D001               	goto	l12615
 11112  01678E  D019               	goto	l12629
 11113  016790                     l12615:
 11114                           
 11115                           ; BSR set to: 1
 11116                           ;drv_mrf_miwi_89xa.c: 1201: {
 11117                           ;drv_mrf_miwi_89xa.c: 1202: AckInfo[i].Valid = 0;
 11118  016790  0101               	movlb	1	; () banked
 11119  016792  519D               	movf	MiMAC_PowerState@i& (0+255),w,b
 11120  016794  0D06               	mullw	6
 11121  016796  0E28               	movlw	low _AckInfo
 11122  016798  24F3               	addwf	prodl,w,c
 11123  01679A  6ED9               	movwf	fsr2l,c
 11124  01679C  0E02               	movlw	high _AckInfo
 11125  01679E  20F4               	addwfc	prodh,w,c
 11126  0167A0  6EDA               	movwf	fsr2h,c
 11127  0167A2  0E00               	movlw	0
 11128  0167A4  6EDF               	movwf	indf2,c
 11129                           
 11130                           ; BSR set to: 1
 11131  0167A6  0101               	movlb	1	; () banked
 11132  0167A8  2B9D               	incf	MiMAC_PowerState@i& (0+255),f,b
 11133  0167AA  D7ED               	goto	l12611
 11134  0167AC                     l12621:
 11135                           
 11136                           ; BSR set to: 1
 11137                           ;drv_mrf_miwi_89xa.c: 1209: return 0;
 11138  0167AC  0E00               	movlw	0
 11139                           
 11140                           ; BSR set to: 1
 11141  0167AE  0012               	return	
 11142  0167B0                     l12627:
 11143  0167B0  0101               	movlb	1	; () banked
 11144  0167B2  519C               	movf	MiMAC_PowerState@PowerState& (0+255),w,b
 11145                           
 11146                           ; Switch size 1, requested type "space"
 11147                           ; Number of cases is 2, Range of values is 0 to 255
 11148                           ; switch strategies available:
 11149                           ; Name         Instructions Cycles
 11150                           ; simple_byte            7     4 (average)
 11151                           ;	Chosen strategy is simple_byte
 11152  0167B4  0A00               	xorlw	0	; case 0
 11153  0167B6  B4D8               	btfsc	status,2,c
 11154  0167B8  D7CE               	goto	l12597
 11155  0167BA  0AFF               	xorlw	255	; case 255
 11156  0167BC  B4D8               	btfsc	status,2,c
 11157  0167BE  D7D1               	goto	l12603
 11158  0167C0  D7F5               	goto	l12621
 11159  0167C2                     l12629:
 11160                           
 11161                           ;drv_mrf_miwi_89xa.c: 1211: return 1;
 11162  0167C2  0E01               	movlw	1
 11163  0167C4  0012               	return	
 11164  0167C6                     __end_of_MiMAC_PowerState:
 11165                           	opt stack 0
 11166                           tblptru	equ	0xFF8
 11167                           tblptrh	equ	0xFF7
 11168                           tblptrl	equ	0xFF6
 11169                           tablat	equ	0xFF5
 11170                           prodh	equ	0xFF4
 11171                           prodl	equ	0xFF3
 11172                           intcon	equ	0xFF2
 11173                           intcon3	equ	0xFF0
 11174                           postinc0	equ	0xFEE
 11175                           plusw0	equ	0xFEB
 11176                           wreg	equ	0xFE8
 11177                           indf1	equ	0xFE7
 11178                           postdec1	equ	0xFE5
 11179                           fsr1h	equ	0xFE2
 11180                           fsr1l	equ	0xFE1
 11181                           indf2	equ	0xFDF
 11182                           postinc2	equ	0xFDE
 11183                           postdec2	equ	0xFDD
 11184                           plusw2	equ	0xFDB
 11185                           fsr2h	equ	0xFDA
 11186                           fsr2l	equ	0xFD9
 11187                           status	equ	0xFD8
 11188                           
 11189 ;; *************** function _do_NETWORK_REGISTER *****************
 11190 ;; Defined at:
 11191 ;;		line 226 in file "../../muta/muta_messages.c"
 11192 ;; Parameters:    Size  Location     Type
 11193 ;;  p_uid           2  112[BANK1 ] PTR unsigned char 
 11194 ;;		 -> myLongAddress(4), 
 11195 ;;  sleeping_dev    1  114[BANK1 ] unsigned char 
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;  i               2   22[BANK3 ] unsigned int 
 11198 ;;  shortaddress    2   20[BANK3 ] unsigned char [2]
 11199 ;;  result          1   24[BANK3 ] unsigned char 
 11200 ;; Return value:  Size  Location     Type
 11201 ;;                  1    wreg      unsigned char 
 11202 ;; Registers used:
 11203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11204 ;; Tracked objects:
 11205 ;;		On entry : 0/0
 11206 ;;		On exit  : 0/0
 11207 ;;		Unchanged: 0/0
 11208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11209 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11210 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0
 11211 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
 11212 ;;      Totals:         0       0       3       0       6       0       0       0       0       0       0       0       
      +0       0       0       0
 11213 ;;Total ram usage:        9 bytes
 11214 ;; Hardware stack levels used:    1
 11215 ;; Hardware stack levels required when called:   17
 11216 ;; This function calls:
 11217 ;;		_MiApp_DiscardMessage
 11218 ;;		_MiApp_MessageAvailable
 11219 ;;		_MiApp_UnicastAddress
 11220 ;;		_memcpy
 11221 ;; This function is called by:
 11222 ;;		_main
 11223 ;; This function uses a non-reentrant model
 11224 ;;
 11225                           
 11226                           	psect	text35
 11227  0142DE                     __ptext35:
 11228                           	opt stack 0
 11229  0142DE                     _do_NETWORK_REGISTER:
 11230                           	opt stack 13
 11231                           
 11232                           ;muta_messages.c: 228: uint8_t shortaddress[2] = { 0x00, 0x00 };
 11233                           
 11234                           ;incstack = 0
 11235  0142DE  C13E  F3E8         	movff	do_NETWORK_REGISTER@F10228,do_NETWORK_REGISTER@shortaddress
 11236  0142E2  C13F  F3E9         	movff	do_NETWORK_REGISTER@F10228+1,do_NETWORK_REGISTER@shortaddress+1
 11237                           
 11238                           ;muta_messages.c: 229: {TxData = 11;};
 11239  0142E6  0E0B               	movlw	11
 11240  0142E8  0101               	movlb	1	; () banked
 11241  0142EA  6F46               	movwf	_TxData& (0+255),b
 11242                           
 11243                           ; BSR set to: 1
 11244                           ;muta_messages.c: 230: TxBuffer[TxData++] = 02;
 11245  0142EC  0101               	movlb	1	; () banked
 11246  0142EE  5146               	movf	_TxData& (0+255),w,b
 11247  0142F0  0D01               	mullw	1
 11248  0142F2  0E4E               	movlw	low _TxBuffer
 11249  0142F4  24F3               	addwf	prodl,w,c
 11250  0142F6  6ED9               	movwf	fsr2l,c
 11251  0142F8  0E01               	movlw	high _TxBuffer
 11252  0142FA  20F4               	addwfc	prodh,w,c
 11253  0142FC  6EDA               	movwf	fsr2h,c
 11254  0142FE  0E02               	movlw	2
 11255  014300  6EDF               	movwf	indf2,c
 11256                           
 11257                           ; BSR set to: 1
 11258  014302  0101               	movlb	1	; () banked
 11259  014304  2B46               	incf	_TxData& (0+255),f,b
 11260                           
 11261                           ; BSR set to: 1
 11262                           ;muta_messages.c: 231: memcpy(&TxBuffer[TxData], p_uid, 4);
 11263  014306  0101               	movlb	1	; () banked
 11264  014308  5146               	movf	_TxData& (0+255),w,b
 11265  01430A  0D01               	mullw	1
 11266  01430C  0E4E               	movlw	low _TxBuffer
 11267  01430E  24F3               	addwf	prodl,w,c
 11268  014310  0101               	movlb	1	; () banked
 11269  014312  6F8A               	movwf	memcpy@d1& (0+255),b
 11270  014314  0E01               	movlw	high _TxBuffer
 11271  014316  20F4               	addwfc	prodh,w,c
 11272  014318  0101               	movlb	1	; () banked
 11273  01431A  6F8B               	movwf	(memcpy@d1+1)& (0+255),b
 11274  01431C  C1FA  F18C         	movff	do_NETWORK_REGISTER@p_uid,memcpy@s1
 11275  014320  C1FB  F18D         	movff	do_NETWORK_REGISTER@p_uid+1,memcpy@s1+1
 11276  014324  0E00               	movlw	0
 11277  014326  0101               	movlb	1	; () banked
 11278  014328  6F8F               	movwf	(memcpy@n+1)& (0+255),b
 11279  01432A  0E04               	movlw	4
 11280  01432C  6F8E               	movwf	memcpy@n& (0+255),b
 11281  01432E  EC30  F0B5         	call	_memcpy	;wreg free
 11282                           
 11283                           ;muta_messages.c: 232: TxData = TxData + 4;
 11284  014332  0101               	movlb	1	; () banked
 11285  014334  5146               	movf	_TxData& (0+255),w,b
 11286  014336  0F04               	addlw	4
 11287  014338  0101               	movlb	1	; () banked
 11288  01433A  6F46               	movwf	_TxData& (0+255),b
 11289                           
 11290                           ; BSR set to: 1
 11291                           ;muta_messages.c: 233: TxBuffer[TxData++] = sleeping_device;
 11292  01433C  0101               	movlb	1	; () banked
 11293  01433E  5146               	movf	_TxData& (0+255),w,b
 11294  014340  0D01               	mullw	1
 11295  014342  0E4E               	movlw	low _TxBuffer
 11296  014344  24F3               	addwf	prodl,w,c
 11297  014346  6ED9               	movwf	fsr2l,c
 11298  014348  0E01               	movlw	high _TxBuffer
 11299  01434A  20F4               	addwfc	prodh,w,c
 11300  01434C  6EDA               	movwf	fsr2h,c
 11301  01434E  C1FC  FFDF         	movff	do_NETWORK_REGISTER@sleeping_device,indf2
 11302                           
 11303                           ; BSR set to: 1
 11304  014352  0101               	movlb	1	; () banked
 11305  014354  2B46               	incf	_TxData& (0+255),f,b
 11306                           
 11307                           ; BSR set to: 1
 11308                           ;muta_messages.c: 234: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 0);
 11309  014356  0EE8               	movlw	low do_NETWORK_REGISTER@shortaddress
 11310  014358  0101               	movlb	1	; () banked
 11311  01435A  6FEE               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 11312  01435C  0E03               	movlw	high do_NETWORK_REGISTER@shortaddress
 11313  01435E  0101               	movlb	1	; () banked
 11314  014360  6FEF               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 11315  014362  0E00               	movlw	0
 11316  014364  0101               	movlb	1	; () banked
 11317  014366  6FF0               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 11318  014368  0E00               	movlw	0
 11319  01436A  0101               	movlb	1	; () banked
 11320  01436C  6FF1               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 11321  01436E  EC50  F092         	call	_MiApp_UnicastAddress	;wreg free
 11322  014372  0103               	movlb	3	; () banked
 11323  014374  6FEC               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 11324                           
 11325                           ; BSR set to: 3
 11326                           ;muta_messages.c: 235: if (!result)
 11327  014376  0103               	movlb	3	; () banked
 11328  014378  51EC               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 11329  01437A  0103               	movlb	3	; () banked
 11330  01437C  A4D8               	btfss	status,2,c
 11331  01437E  D009               	goto	l14429
 11332                           
 11333                           ; BSR set to: 3
 11334                           ;muta_messages.c: 236: {
 11335                           ;muta_messages.c: 237: m_failed_messages++;
 11336  014380  0E01               	movlw	1
 11337  014382  0101               	movlb	1	; () banked
 11338  014384  271E               	addwf	_m_failed_messages& (0+255),f,b
 11339  014386  0E00               	movlw	0
 11340  014388  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 11341  01438A  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 11342  01438C  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 11343                           
 11344                           ; BSR set to: 1
 11345                           ;muta_messages.c: 238: return 0;
 11346  01438E  0E00               	movlw	0
 11347                           
 11348                           ; BSR set to: 1
 11349                           ;muta_messages.c: 239: }
 11350                           
 11351                           ; BSR set to: 1
 11352  014390  0012               	return	
 11353  014392                     l14429:
 11354                           
 11355                           ;muta_messages.c: 240: else
 11356                           ;muta_messages.c: 241: {
 11357                           ;muta_messages.c: 242: unsigned int i;
 11358                           ;muta_messages.c: 243: result = 0;
 11359  014392  0E00               	movlw	0
 11360  014394  0103               	movlb	3	; () banked
 11361  014396  6FEC               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 11362                           
 11363                           ;muta_messages.c: 244: for (i=0; i<100; i++)
 11364  014398  0E00               	movlw	0
 11365  01439A  0103               	movlb	3	; () banked
 11366  01439C  6FEB               	movwf	(do_NETWORK_REGISTER@i+1)& (0+255),b
 11367  01439E  0E00               	movlw	0
 11368  0143A0  6FEA               	movwf	do_NETWORK_REGISTER@i& (0+255),b
 11369  0143A2                     l14431:
 11370                           
 11371                           ; BSR set to: 3
 11372  0143A2  0103               	movlb	3	; () banked
 11373  0143A4  51EB               	movf	(do_NETWORK_REGISTER@i+1)& (0+255),w,b
 11374  0143A6  E14A               	bnz	l14453
 11375  0143A8  0E64               	movlw	100
 11376  0143AA  0103               	movlb	3	; () banked
 11377  0143AC  5DEA               	subwf	do_NETWORK_REGISTER@i& (0+255),w,b
 11378  0143AE  B0D8               	btfsc	status,0,c
 11379  0143B0  D045               	goto	l14453
 11380                           
 11381                           ; BSR set to: 3
 11382                           ;muta_messages.c: 245: {
 11383                           ;muta_messages.c: 246: _delay((unsigned long)((10)*(8000000/4000.0)));
 11384                           
 11385                           ; BSR set to: 3
 11386                           
 11387                           ; BSR set to: 3
 11388  0143B2  0E1A               	movlw	26
 11389  0143B4  0103               	movlb	3	; () banked
 11390  0143B6  6FE7               	movwf	??_do_NETWORK_REGISTER& (0+255),b
 11391  0143B8  0EF8               	movlw	248
 11392  0143BA                     u18367:
 11393  0143BA  2EE8               	decfsz	wreg,f,c
 11394  0143BC  D7FE               	goto	u18367
 11395  0143BE  2FE7               	decfsz	??_do_NETWORK_REGISTER& (0+255),f,b
 11396  0143C0  D7FC               	goto	u18367
 11397  0143C2  D000               	nop2	
 11398                           
 11399                           ;muta_messages.c: 247: if(MiApp_MessageAvailable())
 11400  0143C4  ECE8  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 11401  0143C8  0900               	iorlw	0
 11402  0143CA  B4D8               	btfsc	status,2,c
 11403  0143CC  D033               	goto	l14449
 11404                           
 11405                           ;muta_messages.c: 248: {
 11406                           ;muta_messages.c: 250: last_rssi = rxMessage.PacketRSSI;
 11407  0143CE  C114  F148         	movff	_rxMessage+8,_last_rssi
 11408                           
 11409                           ;muta_messages.c: 251: if (rxMessage.Payload[0] != 02)
 11410  0143D2  C111  FFD9         	movff	_rxMessage+5,fsr2l
 11411  0143D6  C112  FFDA         	movff	_rxMessage+6,fsr2h
 11412  0143DA  0E02               	movlw	2
 11413  0143DC  18DE               	xorwf	postinc2,w,c
 11414  0143DE  B4D8               	btfsc	status,2,c
 11415  0143E0  D003               	goto	l14445
 11416                           
 11417                           ;muta_messages.c: 252: {
 11418                           ;muta_messages.c: 253: MiApp_DiscardMessage();
 11419  0143E2  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 11420                           
 11421                           ;muta_messages.c: 254: }
 11422  0143E6  D026               	goto	l14449
 11423  0143E8                     l14445:
 11424                           
 11425                           ;muta_messages.c: 255: else
 11426                           ;muta_messages.c: 256: {
 11427                           ;muta_messages.c: 257: result = (rxMessage.Payload[1] == 0xff);
 11428  0143E8  0101               	movlb	1	; () banked
 11429  0143EA  EE20 F001          	lfsr	2,1
 11430  0143EE  5111               	movf	(_rxMessage+5)& (0+255),w,b
 11431  0143F0  26D9               	addwf	fsr2l,f,c
 11432  0143F2  5112               	movf	(_rxMessage+6)& (0+255),w,b
 11433  0143F4  22DA               	addwfc	fsr2h,f,c
 11434  0143F6  28DE               	incf	postinc2,w,c
 11435  0143F8  A4D8               	btfss	status,2,c
 11436  0143FA  D002               	goto	u17160
 11437  0143FC  0E01               	movlw	1
 11438  0143FE  D001               	goto	u17170
 11439  014400                     u17160:
 11440  014400  0E00               	movlw	0
 11441  014402                     u17170:
 11442  014402  0103               	movlb	3	; () banked
 11443  014404  6FEC               	movwf	do_NETWORK_REGISTER@result& (0+255),b
 11444                           
 11445                           ;muta_messages.c: 258: mySecurityKey[2] = rxMessage.Payload[2];
 11446  014406  0101               	movlb	1	; () banked
 11447  014408  EE20 F002          	lfsr	2,2
 11448  01440C  5111               	movf	(_rxMessage+5)& (0+255),w,b
 11449  01440E  26D9               	addwf	fsr2l,f,c
 11450  014410  5112               	movf	(_rxMessage+6)& (0+255),w,b
 11451  014412  22DA               	addwfc	fsr2h,f,c
 11452  014414  50DF               	movf	indf2,w,c
 11453  014416  0100               	movlb	0	; () banked
 11454  014418  6FA5               	movwf	(_mySecurityKey+2)& (0+255),b
 11455                           
 11456                           ;muta_messages.c: 259: mySecurityKey[6] = rxMessage.Payload[3];
 11457  01441A  0101               	movlb	1	; () banked
 11458  01441C  EE20 F003          	lfsr	2,3
 11459  014420  5111               	movf	(_rxMessage+5)& (0+255),w,b
 11460  014422  26D9               	addwf	fsr2l,f,c
 11461  014424  5112               	movf	(_rxMessage+6)& (0+255),w,b
 11462  014426  22DA               	addwfc	fsr2h,f,c
 11463  014428  50DF               	movf	indf2,w,c
 11464  01442A  0100               	movlb	0	; () banked
 11465  01442C  6FA9               	movwf	(_mySecurityKey+6)& (0+255),b
 11466                           
 11467                           ; BSR set to: 0
 11468                           ;muta_messages.c: 260: MiApp_DiscardMessage();
 11469  01442E  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 11470                           
 11471                           ;muta_messages.c: 261: break;
 11472  014432  D004               	goto	l14453
 11473  014434                     l14449:
 11474  014434  0103               	movlb	3	; () banked
 11475  014436  4BEA               	infsnz	do_NETWORK_REGISTER@i& (0+255),f,b
 11476  014438  2BEB               	incf	(do_NETWORK_REGISTER@i+1)& (0+255),f,b
 11477  01443A  D7B3               	goto	l14431
 11478  01443C                     l14453:
 11479                           
 11480                           ;muta_messages.c: 262: }
 11481                           ;muta_messages.c: 263: }
 11482                           ;muta_messages.c: 264: }
 11483                           ;muta_messages.c: 266: if (!result)
 11484  01443C  0103               	movlb	3	; () banked
 11485  01443E  51EC               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 11486  014440  0103               	movlb	3	; () banked
 11487  014442  A4D8               	btfss	status,2,c
 11488  014444  D008               	goto	l14457
 11489                           
 11490                           ; BSR set to: 3
 11491                           ;muta_messages.c: 267: m_failed_messages++;
 11492  014446  0E01               	movlw	1
 11493  014448  0101               	movlb	1	; () banked
 11494  01444A  271E               	addwf	_m_failed_messages& (0+255),f,b
 11495  01444C  0E00               	movlw	0
 11496  01444E  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 11497  014450  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 11498  014452  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 11499  014454  D007               	goto	l14459
 11500  014456                     l14457:
 11501                           
 11502                           ;muta_messages.c: 268: else
 11503                           ;muta_messages.c: 269: m_sent_messages++;
 11504  014456  0E01               	movlw	1
 11505  014458  0101               	movlb	1	; () banked
 11506  01445A  2722               	addwf	_m_sent_messages& (0+255),f,b
 11507  01445C  0E00               	movlw	0
 11508  01445E  2323               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 11509  014460  2324               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 11510  014462  2325               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 11511  014464                     l14459:
 11512                           
 11513                           ; BSR set to: 1
 11514                           ;muta_messages.c: 270: return result;
 11515  014464  0103               	movlb	3	; () banked
 11516  014466  51EC               	movf	do_NETWORK_REGISTER@result& (0+255),w,b
 11517                           
 11518                           ; BSR set to: 3
 11519  014468  0012               	return	
 11520  01446A                     __end_of_do_NETWORK_REGISTER:
 11521                           	opt stack 0
 11522                           tblptru	equ	0xFF8
 11523                           tblptrh	equ	0xFF7
 11524                           tblptrl	equ	0xFF6
 11525                           tablat	equ	0xFF5
 11526                           prodh	equ	0xFF4
 11527                           prodl	equ	0xFF3
 11528                           intcon	equ	0xFF2
 11529                           intcon3	equ	0xFF0
 11530                           postinc0	equ	0xFEE
 11531                           plusw0	equ	0xFEB
 11532                           wreg	equ	0xFE8
 11533                           indf1	equ	0xFE7
 11534                           postdec1	equ	0xFE5
 11535                           fsr1h	equ	0xFE2
 11536                           fsr1l	equ	0xFE1
 11537                           indf2	equ	0xFDF
 11538                           postinc2	equ	0xFDE
 11539                           postdec2	equ	0xFDD
 11540                           plusw2	equ	0xFDB
 11541                           fsr2h	equ	0xFDA
 11542                           fsr2l	equ	0xFD9
 11543                           status	equ	0xFD8
 11544                           
 11545 ;; *************** function _memcpy *****************
 11546 ;; Defined at:
 11547 ;;		line 11 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcpy.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;  d1              2    0[BANK1 ] PTR void 
 11550 ;;		 -> decode_variable@var(10), m_var(10), TxBuffer(43), 
 11551 ;;  s1              2    2[BANK1 ] PTR const void 
 11552 ;;		 -> do_PING@buffer(21), FAILEDMSG_LABEL(4), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), 
 11553 ;;		 -> POWER_LABEL(4), TEMPERATURE_LABEL(4), LIGHT_LEVEL_LABEL(4), BATTERY_VOLTAGE_LABEL(4), 
 11554 ;;		 -> m_buffer(32), myLongAddress(4), NULL(0), RxPacket.Payload(64), 
 11555 ;;		 -> RxPacket(132), 
 11556 ;;  n               2    4[BANK1 ] unsigned int 
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;  s               2    8[BANK1 ] PTR const unsigned char 
 11559 ;;		 -> do_PING@buffer(21), FAILEDMSG_LABEL(4), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), 
 11560 ;;		 -> POWER_LABEL(4), TEMPERATURE_LABEL(4), LIGHT_LEVEL_LABEL(4), BATTERY_VOLTAGE_LABEL(4), 
 11561 ;;		 -> m_buffer(32), myLongAddress(4), NULL(0), RxPacket.Payload(64), 
 11562 ;;		 -> RxPacket(132), 
 11563 ;;  d               2    6[BANK1 ] PTR unsigned char 
 11564 ;;		 -> decode_variable@var(10), m_var(10), TxBuffer(43), 
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  2    0[BANK1 ] PTR void 
 11567 ;; Registers used:
 11568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11569 ;; Tracked objects:
 11570 ;;		On entry : 0/0
 11571 ;;		On exit  : 0/0
 11572 ;;		Unchanged: 0/0
 11573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11574 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11575 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11577 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11578 ;;Total ram usage:       10 bytes
 11579 ;; Hardware stack levels used:    1
 11580 ;; Hardware stack levels required when called:    9
 11581 ;; This function calls:
 11582 ;;		Nothing
 11583 ;; This function is called by:
 11584 ;;		_send_initial_update
 11585 ;;		_send_writables_update
 11586 ;;		_send_periodical_update
 11587 ;;		_decode_variable
 11588 ;;		_do_NETWORK_REGISTER
 11589 ;;		_do_UPDATE
 11590 ;;		_do_PING
 11591 ;; This function uses a non-reentrant model
 11592 ;;
 11593                           
 11594                           	psect	text36
 11595  016A60                     __ptext36:
 11596                           	opt stack 0
 11597  016A60                     _memcpy:
 11598                           	opt stack 20
 11599                           
 11600                           ;incstack = 0
 11601  016A60  C18C  F192         	movff	memcpy@s1,memcpy@s
 11602  016A64  C18D  F193         	movff	memcpy@s1+1,memcpy@s+1
 11603  016A68  C18A  F190         	movff	memcpy@d1,memcpy@d
 11604  016A6C  C18B  F191         	movff	memcpy@d1+1,memcpy@d+1
 11605  016A70  D01C               	goto	l12517
 11606  016A72                     l12511:
 11607  016A72  C192  FFF6         	movff	memcpy@s,tblptrl
 11608  016A76  C193  FFF7         	movff	memcpy@s+1,tblptrh
 11609  016A7A  0E00               	movlw	low (__mediumconst shr (0+16))
 11610  016A7C  6EF8               	movwf	tblptru,c
 11611  016A7E  C190  FFD9         	movff	memcpy@d,fsr2l
 11612  016A82  C191  FFDA         	movff	memcpy@d+1,fsr2h
 11613  016A86  0E0E               	movlw	(high __ramtop+-1)
 11614  016A88  64F7               	cpfsgt	tblptrh,c
 11615  016A8A  D003               	bra	u14627
 11616  016A8C  0008               	tblrd		*
 11617  016A8E  50F5               	movf	tablat,w,c
 11618  016A90  D005               	bra	u14620
 11619  016A92                     u14627:
 11620  016A92  CFF6 FFE9          	movff	tblptrl,fsr0l
 11621  016A96  CFF7 FFEA          	movff	tblptrh,fsr0h
 11622  016A9A  50EF               	movf	indf0,w,c
 11623  016A9C                     u14620:
 11624  016A9C  6EDF               	movwf	indf2,c
 11625  016A9E  0101               	movlb	1	; () banked
 11626  016AA0  4B92               	infsnz	memcpy@s& (0+255),f,b
 11627  016AA2  2B93               	incf	(memcpy@s+1)& (0+255),f,b
 11628                           
 11629                           ; BSR set to: 1
 11630  016AA4  0101               	movlb	1	; () banked
 11631  016AA6  4B90               	infsnz	memcpy@d& (0+255),f,b
 11632  016AA8  2B91               	incf	(memcpy@d+1)& (0+255),f,b
 11633  016AAA                     l12517:
 11634  016AAA  0101               	movlb	1	; () banked
 11635  016AAC  078E               	decf	memcpy@n& (0+255),f,b
 11636  016AAE  A0D8               	btfss	status,0,c
 11637  016AB0  078F               	decf	(memcpy@n+1)& (0+255),f,b
 11638  016AB2  0101               	movlb	1	; () banked
 11639  016AB4  298E               	incf	memcpy@n& (0+255),w,b
 11640  016AB6  E1DD               	bnz	l12511
 11641  016AB8  0101               	movlb	1	; () banked
 11642  016ABA  298F               	incf	(memcpy@n+1)& (0+255),w,b
 11643  016ABC  B4D8               	btfsc	status,2,c
 11644  016ABE  0012               	return	
 11645  016AC0  D7D8               	goto	l12511
 11646  016AC2                     __end_of_memcpy:
 11647                           	opt stack 0
 11648                           tblptru	equ	0xFF8
 11649                           tblptrh	equ	0xFF7
 11650                           tblptrl	equ	0xFF6
 11651                           tablat	equ	0xFF5
 11652                           prodh	equ	0xFF4
 11653                           prodl	equ	0xFF3
 11654                           intcon	equ	0xFF2
 11655                           intcon3	equ	0xFF0
 11656                           indf0	equ	0xFEF
 11657                           postinc0	equ	0xFEE
 11658                           plusw0	equ	0xFEB
 11659                           fsr0h	equ	0xFEA
 11660                           fsr0l	equ	0xFE9
 11661                           wreg	equ	0xFE8
 11662                           indf1	equ	0xFE7
 11663                           postdec1	equ	0xFE5
 11664                           fsr1h	equ	0xFE2
 11665                           fsr1l	equ	0xFE1
 11666                           indf2	equ	0xFDF
 11667                           postinc2	equ	0xFDE
 11668                           postdec2	equ	0xFDD
 11669                           plusw2	equ	0xFDB
 11670                           fsr2h	equ	0xFDA
 11671                           fsr2l	equ	0xFD9
 11672                           status	equ	0xFD8
 11673                           
 11674 ;; *************** function _adapt_power_level *****************
 11675 ;; Defined at:
 11676 ;;		line 332 in file "../../muta/muta_messages.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;  power           1    wreg     unsigned char 
 11679 ;;  minimal_rssi    1  113[BANK1 ] unsigned char 
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;  power           1    0[COMRAM] unsigned char 
 11682 ;;  m_power         1   28[BANK3 ] unsigned char 
 11683 ;;  last_good_po    1   27[BANK3 ] unsigned char 
 11684 ;;  rssi            1   26[BANK3 ] unsigned char 
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  1    wreg      unsigned char 
 11687 ;; Registers used:
 11688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11694 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11695 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0
 11696 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11697 ;;      Totals:         0       0       2       0       3       0       0       0       0       0       0       0       
      +0       0       0       0
 11698 ;;Total ram usage:        5 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; Hardware stack levels required when called:   18
 11701 ;; This function calls:
 11702 ;;		_MiMAC_SetPower
 11703 ;;		_do_POWER_TEST
 11704 ;; This function is called by:
 11705 ;;		_main
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           	psect	text37
 11710  0169FC                     __ptext37:
 11711                           	opt stack 0
 11712  0169FC                     _adapt_power_level:
 11713                           	opt stack 12
 11714                           
 11715                           ;muta_messages.c: 334: uint8_t m_power = 0x00;
 11716                           
 11717                           ; BSR set to: 1
 11718                           ;incstack = 0
 11719  0169FC  0E00               	movlw	0
 11720  0169FE  0103               	movlb	3	; () banked
 11721  016A00  6FF0               	movwf	adapt_power_level@m_power& (0+255),b
 11722                           
 11723                           ; BSR set to: 3
 11724                           ;muta_messages.c: 335: uint8_t last_good_power = m_power;
 11725  016A02  C3F0  F3EF         	movff	adapt_power_level@m_power,adapt_power_level@last_good_power
 11726  016A06                     l14467:
 11727                           
 11728                           ; BSR set to: 3
 11729                           ;muta_messages.c: 338: {
 11730                           ;muta_messages.c: 339: MiMAC_SetPower(m_power);
 11731  016A06  0103               	movlb	3	; () banked
 11732  016A08  51F0               	movf	adapt_power_level@m_power& (0+255),w,b
 11733  016A0A  ECCF  F0B6         	call	_MiMAC_SetPower
 11734                           
 11735                           ;muta_messages.c: 340: _delay((unsigned long)((20)*(8000000/4000.0)));
 11736  016A0E  0E34               	movlw	52
 11737  016A10  0101               	movlb	1	; () banked
 11738  016A12  6FFC               	movwf	??_adapt_power_level& (0+255),b
 11739  016A14  0EF2               	movlw	242
 11740  016A16                     u18377:
 11741  016A16  2EE8               	decfsz	wreg,f,c
 11742  016A18  D7FE               	goto	u18377
 11743  016A1A  2FFC               	decfsz	??_adapt_power_level& (0+255),f,b
 11744  016A1C  D7FC               	goto	u18377
 11745                           
 11746                           ;muta_messages.c: 341: rssi = do_POWER_TEST(m_power);
 11747  016A1E  0103               	movlb	3	; () banked
 11748  016A20  51F0               	movf	adapt_power_level@m_power& (0+255),w,b
 11749  016A22  ECF9  F0A2         	call	_do_POWER_TEST
 11750  016A26  0103               	movlb	3	; () banked
 11751  016A28  6FEE               	movwf	adapt_power_level@rssi& (0+255),b
 11752                           
 11753                           ; BSR set to: 3
 11754                           ;muta_messages.c: 342: if (rssi < minimal_rssi)
 11755  016A2A  0101               	movlb	1	; () banked
 11756  016A2C  51FB               	movf	adapt_power_level@minimal_rssi& (0+255),w,b
 11757  016A2E  0103               	movlb	3	; () banked
 11758  016A30  5DEE               	subwf	adapt_power_level@rssi& (0+255),w,b
 11759  016A32  A0D8               	btfss	status,0,c
 11760  016A34  D00C               	goto	l1401
 11761                           
 11762                           ; BSR set to: 3
 11763                           ;muta_messages.c: 346: else
 11764                           ;muta_messages.c: 347: {
 11765                           ;muta_messages.c: 348: last_good_power = m_power;
 11766                           
 11767                           ; BSR set to: 3
 11768                           ;muta_messages.c: 345: }
 11769                           
 11770                           ; BSR set to: 3
 11771                           ;muta_messages.c: 343: {
 11772                           ;muta_messages.c: 344: break;
 11773  016A36  C3F0  F3EF         	movff	adapt_power_level@m_power,adapt_power_level@last_good_power
 11774                           
 11775                           ; BSR set to: 3
 11776                           ;muta_messages.c: 349: if (m_power == 0x07)
 11777  016A3A  0E07               	movlw	7
 11778  016A3C  0103               	movlb	3	; () banked
 11779  016A3E  19F0               	xorwf	adapt_power_level@m_power& (0+255),w,b
 11780  016A40  B4D8               	btfsc	status,2,c
 11781  016A42  D005               	goto	l1401
 11782                           
 11783                           ; BSR set to: 3
 11784                           ;muta_messages.c: 353: else
 11785                           ;muta_messages.c: 354: {
 11786                           ;muta_messages.c: 355: m_power = m_power + 1;
 11787                           
 11788                           ; BSR set to: 3
 11789                           
 11790                           ; BSR set to: 3
 11791                           ;muta_messages.c: 352: }
 11792                           
 11793                           ; BSR set to: 3
 11794                           ;muta_messages.c: 350: {
 11795                           ;muta_messages.c: 351: break;
 11796  016A44  0103               	movlb	3	; () banked
 11797  016A46  29F0               	incf	adapt_power_level@m_power& (0+255),w,b
 11798  016A48  0103               	movlb	3	; () banked
 11799  016A4A  6FF0               	movwf	adapt_power_level@m_power& (0+255),b
 11800                           
 11801                           ; BSR set to: 3
 11802                           
 11803                           ; BSR set to: 3
 11804                           
 11805                           ; BSR set to: 3
 11806  016A4C  D7DC               	goto	l14467
 11807  016A4E                     l1401:
 11808                           
 11809                           ; BSR set to: 3
 11810                           ;muta_messages.c: 356: }
 11811                           ;muta_messages.c: 357: }
 11812                           ;muta_messages.c: 358: }
 11813                           ;muta_messages.c: 359: m_power = last_good_power;
 11814  016A4E  C3EF  F3F0         	movff	adapt_power_level@last_good_power,adapt_power_level@m_power
 11815                           
 11816                           ; BSR set to: 3
 11817                           ;muta_messages.c: 360: MiMAC_SetPower(m_power);
 11818  016A52  0103               	movlb	3	; () banked
 11819  016A54  51F0               	movf	adapt_power_level@m_power& (0+255),w,b
 11820  016A56  ECCF  F0B6         	call	_MiMAC_SetPower
 11821                           
 11822                           ;muta_messages.c: 361: return m_power;
 11823  016A5A  0103               	movlb	3	; () banked
 11824  016A5C  51F0               	movf	adapt_power_level@m_power& (0+255),w,b
 11825  016A5E  0012               	return	
 11826  016A60                     __end_of_adapt_power_level:
 11827                           	opt stack 0
 11828                           tblptru	equ	0xFF8
 11829                           tblptrh	equ	0xFF7
 11830                           tblptrl	equ	0xFF6
 11831                           tablat	equ	0xFF5
 11832                           prodh	equ	0xFF4
 11833                           prodl	equ	0xFF3
 11834                           intcon	equ	0xFF2
 11835                           intcon3	equ	0xFF0
 11836                           indf0	equ	0xFEF
 11837                           postinc0	equ	0xFEE
 11838                           plusw0	equ	0xFEB
 11839                           fsr0h	equ	0xFEA
 11840                           fsr0l	equ	0xFE9
 11841                           wreg	equ	0xFE8
 11842                           indf1	equ	0xFE7
 11843                           postdec1	equ	0xFE5
 11844                           fsr1h	equ	0xFE2
 11845                           fsr1l	equ	0xFE1
 11846                           indf2	equ	0xFDF
 11847                           postinc2	equ	0xFDE
 11848                           postdec2	equ	0xFDD
 11849                           plusw2	equ	0xFDB
 11850                           fsr2h	equ	0xFDA
 11851                           fsr2l	equ	0xFD9
 11852                           status	equ	0xFD8
 11853                           
 11854 ;; *************** function _do_POWER_TEST *****************
 11855 ;; Defined at:
 11856 ;;		line 274 in file "../../muta/muta_messages.c"
 11857 ;; Parameters:    Size  Location     Type
 11858 ;;  power_lvl       1    wreg     unsigned char 
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;  power_lvl       1   20[BANK3 ] unsigned char 
 11861 ;;  i               2   21[BANK3 ] unsigned int 
 11862 ;;  rssi            1   23[BANK3 ] unsigned char 
 11863 ;;  shortaddress    2   24[BANK3 ] unsigned char [2]
 11864 ;;  result          1   19[BANK3 ] unsigned char 
 11865 ;; Return value:  Size  Location     Type
 11866 ;;                  1    wreg      unsigned char 
 11867 ;; Registers used:
 11868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11869 ;; Tracked objects:
 11870 ;;		On entry : 0/0
 11871 ;;		On exit  : 0/0
 11872 ;;		Unchanged: 0/0
 11873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11875 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 11876 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11877 ;;      Totals:         0       0       1       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 11878 ;;Total ram usage:        8 bytes
 11879 ;; Hardware stack levels used:    1
 11880 ;; Hardware stack levels required when called:   17
 11881 ;; This function calls:
 11882 ;;		_MiApp_DiscardMessage
 11883 ;;		_MiApp_MessageAvailable
 11884 ;;		_MiApp_UnicastAddress
 11885 ;; This function is called by:
 11886 ;;		_adapt_power_level
 11887 ;; This function uses a non-reentrant model
 11888 ;;
 11889                           
 11890                           	psect	text38
 11891  0145F2                     __ptext38:
 11892                           	opt stack 0
 11893  0145F2                     _do_POWER_TEST:
 11894                           	opt stack 12
 11895                           
 11896                           ; BSR set to: 3
 11897                           ;incstack = 0
 11898                           ;do_POWER_TEST@power_lvl stored from wreg
 11899  0145F2  0103               	movlb	3	; () banked
 11900  0145F4  6FE8               	movwf	do_POWER_TEST@power_lvl& (0+255),b
 11901                           
 11902                           ;muta_messages.c: 276: uint8_t shortaddress[2];
 11903                           ;muta_messages.c: 277: {TxData = 11;};
 11904  0145F6  0E0B               	movlw	11
 11905  0145F8  0101               	movlb	1	; () banked
 11906  0145FA  6F46               	movwf	_TxData& (0+255),b
 11907                           
 11908                           ; BSR set to: 1
 11909                           ;muta_messages.c: 278: TxBuffer[TxData++] = 01;
 11910  0145FC  0101               	movlb	1	; () banked
 11911  0145FE  5146               	movf	_TxData& (0+255),w,b
 11912  014600  0D01               	mullw	1
 11913  014602  0E4E               	movlw	low _TxBuffer
 11914  014604  24F3               	addwf	prodl,w,c
 11915  014606  6ED9               	movwf	fsr2l,c
 11916  014608  0E01               	movlw	high _TxBuffer
 11917  01460A  20F4               	addwfc	prodh,w,c
 11918  01460C  6EDA               	movwf	fsr2h,c
 11919  01460E  0E01               	movlw	1
 11920  014610  6EDF               	movwf	indf2,c
 11921                           
 11922                           ; BSR set to: 1
 11923  014612  0101               	movlb	1	; () banked
 11924  014614  2B46               	incf	_TxData& (0+255),f,b
 11925                           
 11926                           ; BSR set to: 1
 11927                           ;muta_messages.c: 279: TxBuffer[TxData++] = power_lvl;
 11928  014616  0101               	movlb	1	; () banked
 11929  014618  5146               	movf	_TxData& (0+255),w,b
 11930  01461A  0D01               	mullw	1
 11931  01461C  0E4E               	movlw	low _TxBuffer
 11932  01461E  24F3               	addwf	prodl,w,c
 11933  014620  6ED9               	movwf	fsr2l,c
 11934  014622  0E01               	movlw	high _TxBuffer
 11935  014624  20F4               	addwfc	prodh,w,c
 11936  014626  6EDA               	movwf	fsr2h,c
 11937  014628  C3E8  FFDF         	movff	do_POWER_TEST@power_lvl,indf2
 11938                           
 11939                           ; BSR set to: 1
 11940  01462C  0101               	movlb	1	; () banked
 11941  01462E  2B46               	incf	_TxData& (0+255),f,b
 11942                           
 11943                           ; BSR set to: 1
 11944                           ;muta_messages.c: 280: if (myShortAddress.v[0] == 0x00)
 11945  014630  0101               	movlb	1	; () banked
 11946  014632  5185               	movf	_myShortAddress& (0+255),w,b
 11947  014634  A4D8               	btfss	status,2,c
 11948  014636  D00D               	goto	l13593
 11949                           
 11950                           ; BSR set to: 1
 11951                           ;muta_messages.c: 281: {
 11952                           ;muta_messages.c: 282: if (myShortAddress.v[1] == 0x00)
 11953  014638  0101               	movlb	1	; () banked
 11954  01463A  5186               	movf	(_myShortAddress+1)& (0+255),w,b
 11955  01463C  A4D8               	btfss	status,2,c
 11956  01463E  D002               	goto	l13591
 11957                           
 11958                           ; BSR set to: 1
 11959                           ;muta_messages.c: 283: {
 11960                           ;muta_messages.c: 284: return 0;
 11961  014640  0E00               	movlw	0
 11962                           
 11963                           ; BSR set to: 1
 11964  014642  0012               	return	
 11965  014644                     l13591:
 11966                           
 11967                           ; BSR set to: 1
 11968                           ;muta_messages.c: 285: }
 11969                           ;muta_messages.c: 286: shortaddress[0] = 0x00;
 11970  014644  0E00               	movlw	0
 11971  014646  0103               	movlb	3	; () banked
 11972  014648  6FEC               	movwf	do_POWER_TEST@shortaddress& (0+255),b
 11973                           
 11974                           ;muta_messages.c: 287: shortaddress[1] = 0x00;
 11975  01464A  0E00               	movlw	0
 11976  01464C  0103               	movlb	3	; () banked
 11977  01464E  6FED               	movwf	(do_POWER_TEST@shortaddress+1)& (0+255),b
 11978                           
 11979                           ;muta_messages.c: 288: }
 11980  014650  D005               	goto	l13597
 11981  014652                     l13593:
 11982                           
 11983                           ;muta_messages.c: 289: else
 11984                           ;muta_messages.c: 290: {
 11985                           ;muta_messages.c: 291: shortaddress[0] = 0x00;
 11986  014652  0E00               	movlw	0
 11987  014654  0103               	movlb	3	; () banked
 11988  014656  6FEC               	movwf	do_POWER_TEST@shortaddress& (0+255),b
 11989                           
 11990                           ; BSR set to: 3
 11991                           ;muta_messages.c: 292: shortaddress[1] = myShortAddress.v[1];
 11992  014658  C186  F3ED         	movff	_myShortAddress+1,do_POWER_TEST@shortaddress+1
 11993  01465C                     l13597:
 11994                           
 11995                           ; BSR set to: 3
 11996                           ;muta_messages.c: 293: }
 11997                           ;muta_messages.c: 294: bool result = MiApp_UnicastAddress(&shortaddress[0], 0, 1);
 11998  01465C  0EEC               	movlw	low do_POWER_TEST@shortaddress
 11999  01465E  0101               	movlb	1	; () banked
 12000  014660  6FEE               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 12001  014662  0E03               	movlw	high do_POWER_TEST@shortaddress
 12002  014664  0101               	movlb	1	; () banked
 12003  014666  6FEF               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 12004  014668  0E00               	movlw	0
 12005  01466A  0101               	movlb	1	; () banked
 12006  01466C  6FF0               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 12007  01466E  0E01               	movlw	1
 12008  014670  0101               	movlb	1	; () banked
 12009  014672  6FF1               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 12010  014674  EC50  F092         	call	_MiApp_UnicastAddress	;wreg free
 12011  014678  0103               	movlb	3	; () banked
 12012  01467A  6FE7               	movwf	do_POWER_TEST@result& (0+255),b
 12013                           
 12014                           ; BSR set to: 3
 12015                           ;muta_messages.c: 295: if (!result)
 12016  01467C  0103               	movlb	3	; () banked
 12017  01467E  51E7               	movf	do_POWER_TEST@result& (0+255),w,b
 12018  014680  0103               	movlb	3	; () banked
 12019  014682  A4D8               	btfss	status,2,c
 12020  014684  D009               	goto	l13609
 12021                           
 12022                           ; BSR set to: 3
 12023                           ;muta_messages.c: 296: {
 12024                           ;muta_messages.c: 297: m_failed_messages++;
 12025  014686  0E01               	movlw	1
 12026  014688  0101               	movlb	1	; () banked
 12027  01468A  271E               	addwf	_m_failed_messages& (0+255),f,b
 12028  01468C  0E00               	movlw	0
 12029  01468E  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 12030  014690  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 12031  014692  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 12032                           
 12033                           ; BSR set to: 1
 12034                           ;muta_messages.c: 298: return 0;
 12035  014694  0E00               	movlw	0
 12036                           
 12037                           ; BSR set to: 1
 12038                           ;muta_messages.c: 299: }
 12039                           
 12040                           ; BSR set to: 1
 12041  014696  0012               	return	
 12042  014698                     l13609:
 12043                           
 12044                           ;muta_messages.c: 300: else
 12045                           ;muta_messages.c: 301: {
 12046                           ;muta_messages.c: 302: unsigned int i;
 12047                           ;muta_messages.c: 303: uint8_t rssi = 0;
 12048  014698  0E00               	movlw	0
 12049  01469A  0103               	movlb	3	; () banked
 12050  01469C  6FEB               	movwf	do_POWER_TEST@rssi& (0+255),b
 12051                           
 12052                           ;muta_messages.c: 304: for (i=0; i<100; i++)
 12053  01469E  0E00               	movlw	0
 12054  0146A0  0103               	movlb	3	; () banked
 12055  0146A2  6FEA               	movwf	(do_POWER_TEST@i+1)& (0+255),b
 12056  0146A4  0E00               	movlw	0
 12057  0146A6  6FE9               	movwf	do_POWER_TEST@i& (0+255),b
 12058  0146A8                     l13611:
 12059                           
 12060                           ; BSR set to: 3
 12061  0146A8  0103               	movlb	3	; () banked
 12062  0146AA  51EA               	movf	(do_POWER_TEST@i+1)& (0+255),w,b
 12063  0146AC  E13C               	bnz	l13635
 12064  0146AE  0E64               	movlw	100
 12065  0146B0  0103               	movlb	3	; () banked
 12066  0146B2  5DE9               	subwf	do_POWER_TEST@i& (0+255),w,b
 12067  0146B4  B0D8               	btfsc	status,0,c
 12068  0146B6  D037               	goto	l13635
 12069                           
 12070                           ; BSR set to: 3
 12071                           ;muta_messages.c: 305: {
 12072                           ;muta_messages.c: 306: _delay((unsigned long)((10)*(8000000/4000.0)));
 12073                           
 12074                           ; BSR set to: 3
 12075                           
 12076                           ; BSR set to: 3
 12077  0146B8  0E1A               	movlw	26
 12078  0146BA  0101               	movlb	1	; () banked
 12079  0146BC  6FFA               	movwf	??_do_POWER_TEST& (0+255),b
 12080  0146BE  0EF8               	movlw	248
 12081  0146C0                     u18387:
 12082  0146C0  2EE8               	decfsz	wreg,f,c
 12083  0146C2  D7FE               	goto	u18387
 12084  0146C4  2FFA               	decfsz	??_do_POWER_TEST& (0+255),f,b
 12085  0146C6  D7FC               	goto	u18387
 12086  0146C8  D000               	nop2	
 12087                           
 12088                           ;muta_messages.c: 307: if(MiApp_MessageAvailable())
 12089  0146CA  ECE8  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 12090  0146CE  0900               	iorlw	0
 12091  0146D0  B4D8               	btfsc	status,2,c
 12092  0146D2  D025               	goto	l13631
 12093                           
 12094                           ;muta_messages.c: 308: {
 12095                           ;muta_messages.c: 310: last_rssi = rxMessage.PacketRSSI;
 12096  0146D4  C114  F148         	movff	_rxMessage+8,_last_rssi
 12097                           
 12098                           ;muta_messages.c: 311: if (rxMessage.Payload[0] != 01 || rxMessage.Payload[1] != power_l
      +                          vl)
 12099  0146D8  C111  FFD9         	movff	_rxMessage+5,fsr2l
 12100  0146DC  C112  FFDA         	movff	_rxMessage+6,fsr2h
 12101  0146E0  04DE               	decf	postinc2,w,c
 12102  0146E2  A4D8               	btfss	status,2,c
 12103  0146E4  D00C               	goto	l13625
 12104  0146E6  0101               	movlb	1	; () banked
 12105  0146E8  EE20 F001          	lfsr	2,1
 12106  0146EC  5111               	movf	(_rxMessage+5)& (0+255),w,b
 12107  0146EE  26D9               	addwf	fsr2l,f,c
 12108  0146F0  5112               	movf	(_rxMessage+6)& (0+255),w,b
 12109  0146F2  22DA               	addwfc	fsr2h,f,c
 12110  0146F4  0103               	movlb	3	; () banked
 12111  0146F6  51E8               	movf	do_POWER_TEST@power_lvl& (0+255),w,b
 12112  0146F8  18DE               	xorwf	postinc2,w,c
 12113  0146FA  B4D8               	btfsc	status,2,c
 12114  0146FC  D003               	goto	l13627
 12115  0146FE                     l13625:
 12116                           
 12117                           ;muta_messages.c: 312: {
 12118                           ;muta_messages.c: 313: MiApp_DiscardMessage();
 12119  0146FE  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 12120                           
 12121                           ;muta_messages.c: 314: }
 12122  014702  D00D               	goto	l13631
 12123  014704                     l13627:
 12124                           
 12125                           ;muta_messages.c: 315: else
 12126                           ;muta_messages.c: 316: {
 12127                           ;muta_messages.c: 317: rssi = (rxMessage.Payload[2]);
 12128  014704  0101               	movlb	1	; () banked
 12129  014706  EE20 F002          	lfsr	2,2
 12130  01470A  5111               	movf	(_rxMessage+5)& (0+255),w,b
 12131  01470C  26D9               	addwf	fsr2l,f,c
 12132  01470E  5112               	movf	(_rxMessage+6)& (0+255),w,b
 12133  014710  22DA               	addwfc	fsr2h,f,c
 12134  014712  50DF               	movf	indf2,w,c
 12135  014714  0103               	movlb	3	; () banked
 12136  014716  6FEB               	movwf	do_POWER_TEST@rssi& (0+255),b
 12137                           
 12138                           ; BSR set to: 3
 12139                           ;muta_messages.c: 318: MiApp_DiscardMessage();
 12140  014718  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 12141                           
 12142                           ;muta_messages.c: 319: break;
 12143  01471C  D004               	goto	l13635
 12144  01471E                     l13631:
 12145  01471E  0103               	movlb	3	; () banked
 12146  014720  4BE9               	infsnz	do_POWER_TEST@i& (0+255),f,b
 12147  014722  2BEA               	incf	(do_POWER_TEST@i+1)& (0+255),f,b
 12148  014724  D7C1               	goto	l13611
 12149  014726                     l13635:
 12150                           
 12151                           ;muta_messages.c: 320: }
 12152                           ;muta_messages.c: 321: }
 12153                           ;muta_messages.c: 322: }
 12154                           ;muta_messages.c: 324: if (rssi == 0)
 12155  014726  0103               	movlb	3	; () banked
 12156  014728  51EB               	movf	do_POWER_TEST@rssi& (0+255),w,b
 12157  01472A  0103               	movlb	3	; () banked
 12158  01472C  A4D8               	btfss	status,2,c
 12159  01472E  D008               	goto	l13639
 12160                           
 12161                           ; BSR set to: 3
 12162                           ;muta_messages.c: 325: m_failed_messages++;
 12163  014730  0E01               	movlw	1
 12164  014732  0101               	movlb	1	; () banked
 12165  014734  271E               	addwf	_m_failed_messages& (0+255),f,b
 12166  014736  0E00               	movlw	0
 12167  014738  231F               	addwfc	(_m_failed_messages+1)& (0+255),f,b
 12168  01473A  2320               	addwfc	(_m_failed_messages+2)& (0+255),f,b
 12169  01473C  2321               	addwfc	(_m_failed_messages+3)& (0+255),f,b
 12170  01473E  D007               	goto	l13641
 12171  014740                     l13639:
 12172                           
 12173                           ;muta_messages.c: 326: else
 12174                           ;muta_messages.c: 327: m_sent_messages++;
 12175  014740  0E01               	movlw	1
 12176  014742  0101               	movlb	1	; () banked
 12177  014744  2722               	addwf	_m_sent_messages& (0+255),f,b
 12178  014746  0E00               	movlw	0
 12179  014748  2323               	addwfc	(_m_sent_messages+1)& (0+255),f,b
 12180  01474A  2324               	addwfc	(_m_sent_messages+2)& (0+255),f,b
 12181  01474C  2325               	addwfc	(_m_sent_messages+3)& (0+255),f,b
 12182  01474E                     l13641:
 12183                           
 12184                           ; BSR set to: 1
 12185                           ;muta_messages.c: 328: return rssi;
 12186  01474E  0103               	movlb	3	; () banked
 12187  014750  51EB               	movf	do_POWER_TEST@rssi& (0+255),w,b
 12188                           
 12189                           ; BSR set to: 3
 12190  014752  0012               	return	
 12191  014754                     __end_of_do_POWER_TEST:
 12192                           	opt stack 0
 12193                           tblptru	equ	0xFF8
 12194                           tblptrh	equ	0xFF7
 12195                           tblptrl	equ	0xFF6
 12196                           tablat	equ	0xFF5
 12197                           prodh	equ	0xFF4
 12198                           prodl	equ	0xFF3
 12199                           intcon	equ	0xFF2
 12200                           intcon3	equ	0xFF0
 12201                           indf0	equ	0xFEF
 12202                           postinc0	equ	0xFEE
 12203                           plusw0	equ	0xFEB
 12204                           fsr0h	equ	0xFEA
 12205                           fsr0l	equ	0xFE9
 12206                           wreg	equ	0xFE8
 12207                           indf1	equ	0xFE7
 12208                           postdec1	equ	0xFE5
 12209                           fsr1h	equ	0xFE2
 12210                           fsr1l	equ	0xFE1
 12211                           indf2	equ	0xFDF
 12212                           postinc2	equ	0xFDE
 12213                           postdec2	equ	0xFDD
 12214                           plusw2	equ	0xFDB
 12215                           fsr2h	equ	0xFDA
 12216                           fsr2l	equ	0xFD9
 12217                           status	equ	0xFD8
 12218                           
 12219 ;; *************** function _MiMAC_SetPower *****************
 12220 ;; Defined at:
 12221 ;;		line 544 in file "src/miwi/drv_mrf_miwi_89xa.c"
 12222 ;; Parameters:    Size  Location     Type
 12223 ;;  outputPower     1    wreg     unsigned char 
 12224 ;; Auto vars:     Size  Location     Type
 12225 ;;  outputPower     1    8[BANK1 ] unsigned char 
 12226 ;; Return value:  Size  Location     Type
 12227 ;;                  1    wreg      unsigned char 
 12228 ;; Registers used:
 12229 ;;		wreg, status,2, status,0, cstack
 12230 ;; Tracked objects:
 12231 ;;		On entry : 0/0
 12232 ;;		On exit  : 0/0
 12233 ;;		Unchanged: 0/0
 12234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12236 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12237 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12238 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12239 ;;Total ram usage:        3 bytes
 12240 ;; Hardware stack levels used:    1
 12241 ;; Hardware stack levels required when called:   11
 12242 ;; This function calls:
 12243 ;;		_RegisterSet
 12244 ;; This function is called by:
 12245 ;;		_main
 12246 ;;		_update_variable
 12247 ;;		_adapt_power_level
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251                           	psect	text39
 12252  016D9E                     __ptext39:
 12253                           	opt stack 0
 12254  016D9E                     _MiMAC_SetPower:
 12255                           	opt stack 17
 12256                           
 12257                           ;incstack = 0
 12258                           ;MiMAC_SetPower@outputPower stored from wreg
 12259  016D9E  0101               	movlb	1	; () banked
 12260  016DA0  6F92               	movwf	MiMAC_SetPower@outputPower& (0+255),b
 12261                           
 12262                           ;drv_mrf_miwi_89xa.c: 546: if( outputPower > 0x07 )
 12263  016DA2  0E07               	movlw	7
 12264  016DA4  0101               	movlb	1	; () banked
 12265  016DA6  6592               	cpfsgt	MiMAC_SetPower@outputPower& (0+255),b
 12266  016DA8  D001               	goto	l12591
 12267  016DAA  0012               	return	
 12268  016DAC                     l12591:
 12269                           
 12270                           ; BSR set to: 1
 12271                           ;drv_mrf_miwi_89xa.c: 549: }
 12272                           ;drv_mrf_miwi_89xa.c: 550: RegisterSet(0x3400 | ((0xF0 | (0x00<<1)) & 0xF0) | (outputPow
      +                          er<<1));
 12273  016DAC  0101               	movlb	1	; () banked
 12274  016DAE  5192               	movf	MiMAC_SetPower@outputPower& (0+255),w,b
 12275  016DB0  0101               	movlb	1	; () banked
 12276  016DB2  6F90               	movwf	??_MiMAC_SetPower& (0+255),b
 12277  016DB4  6B91               	clrf	(??_MiMAC_SetPower+1)& (0+255),b
 12278  016DB6  90D8               	bcf	status,0,c
 12279  016DB8  0101               	movlb	1	; () banked
 12280  016DBA  3790               	rlcf	??_MiMAC_SetPower& (0+255),f,b
 12281  016DBC  3791               	rlcf	(??_MiMAC_SetPower+1)& (0+255),f,b
 12282  016DBE  0EF0               	movlw	240
 12283  016DC0  0101               	movlb	1	; () banked
 12284  016DC2  1190               	iorwf	??_MiMAC_SetPower& (0+255),w,b
 12285  016DC4  0101               	movlb	1	; () banked
 12286  016DC6  6F8C               	movwf	RegisterSet@setting& (0+255),b
 12287  016DC8  0E34               	movlw	52
 12288  016DCA  0101               	movlb	1	; () banked
 12289  016DCC  1191               	iorwf	(??_MiMAC_SetPower+1)& (0+255),w,b
 12290  016DCE  0101               	movlb	1	; () banked
 12291  016DD0  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 12292  016DD2  EC09  F0B6         	call	_RegisterSet	;wreg free
 12293  016DD6  0012               	return	
 12294  016DD8                     __end_of_MiMAC_SetPower:
 12295                           	opt stack 0
 12296                           tblptru	equ	0xFF8
 12297                           tblptrh	equ	0xFF7
 12298                           tblptrl	equ	0xFF6
 12299                           tablat	equ	0xFF5
 12300                           prodh	equ	0xFF4
 12301                           prodl	equ	0xFF3
 12302                           intcon	equ	0xFF2
 12303                           intcon3	equ	0xFF0
 12304                           indf0	equ	0xFEF
 12305                           postinc0	equ	0xFEE
 12306                           plusw0	equ	0xFEB
 12307                           fsr0h	equ	0xFEA
 12308                           fsr0l	equ	0xFE9
 12309                           wreg	equ	0xFE8
 12310                           indf1	equ	0xFE7
 12311                           postdec1	equ	0xFE5
 12312                           fsr1h	equ	0xFE2
 12313                           fsr1l	equ	0xFE1
 12314                           indf2	equ	0xFDF
 12315                           postinc2	equ	0xFDE
 12316                           postdec2	equ	0xFDD
 12317                           plusw2	equ	0xFDB
 12318                           fsr2h	equ	0xFDA
 12319                           fsr2l	equ	0xFD9
 12320                           status	equ	0xFD8
 12321                           
 12322 ;; *************** function _SYSTEM_Initialize *****************
 12323 ;; Defined at:
 12324 ;;		line 58 in file "src/18F27J53/system.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;		None
 12327 ;; Auto vars:     Size  Location     Type
 12328 ;;		None
 12329 ;; Return value:  Size  Location     Type
 12330 ;;		None               void
 12331 ;; Registers used:
 12332 ;;		wreg, status,2, cstack
 12333 ;; Tracked objects:
 12334 ;;		On entry : 0/0
 12335 ;;		On exit  : 0/0
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12342 ;;Total ram usage:        0 bytes
 12343 ;; Hardware stack levels used:    1
 12344 ;; Hardware stack levels required when called:   10
 12345 ;; This function calls:
 12346 ;;		_RtccWrOn
 12347 ;; This function is called by:
 12348 ;;		_main
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           	psect	text40
 12353  0154DC                     __ptext40:
 12354                           	opt stack 0
 12355  0154DC                     _SYSTEM_Initialize:
 12356                           	opt stack 20
 12357                           
 12358                           ;system.c: 61: PLLEN = 0;
 12359                           
 12360                           ;incstack = 0
 12361  0154DC  9C9B               	bcf	3995,6,c	;volatile
 12362                           
 12363                           ;system.c: 64: OSCCONbits.IRCF = 0b111;
 12364  0154DE  88D3               	bsf	4051,4,c	;volatile
 12365  0154E0  8AD3               	bsf	4051,5,c	;volatile
 12366  0154E2  8CD3               	bsf	4051,6,c	;volatile
 12367                           
 12368                           ;system.c: 67: ANCON0 = 0xFF;
 12369  0154E4  010F               	movlb	15	; () banked
 12370  0154E6  6948               	setf	72,b	;volatile
 12371                           
 12372                           ; BSR set to: 15
 12373                           ;system.c: 68: ANCON1 = 0x1F;
 12374  0154E8  0E1F               	movlw	31
 12375  0154EA  010F               	movlb	15	; () banked
 12376  0154EC  6F49               	movwf	73,b	;volatile
 12377                           
 12378                           ;system.c: 71: TRISA = 0;
 12379  0154EE  0E00               	movlw	0
 12380  0154F0  6E92               	movwf	3986,c	;volatile
 12381                           
 12382                           ;system.c: 72: TRISB = 0;
 12383  0154F2  0E00               	movlw	0
 12384  0154F4  6E93               	movwf	3987,c	;volatile
 12385                           
 12386                           ;system.c: 73: TRISC = 0;
 12387  0154F6  0E00               	movlw	0
 12388  0154F8  6E94               	movwf	3988,c	;volatile
 12389                           
 12390                           ; BSR set to: 15
 12391                           ;system.c: 75: LATCbits.LATC0 = 1;
 12392  0154FA  808B               	bsf	3979,0,c	;volatile
 12393                           
 12394                           ; BSR set to: 15
 12395                           ;system.c: 77: UPUEN = 0;
 12396  0154FC  010F               	movlb	15	; () banked
 12397  0154FE  9939               	bcf	57,4,b	;volatile
 12398                           
 12399                           ; BSR set to: 15
 12400                           ;system.c: 78: UCONbits.USBEN = 0;
 12401  015500  9665               	bcf	3941,3,c	;volatile
 12402                           
 12403                           ; BSR set to: 15
 12404                           ;system.c: 80: RCONbits.IPEN = 1;
 12405  015502  8ED0               	bsf	4048,7,c	;volatile
 12406                           
 12407                           ;system.c: 83: ALRMCFGbits.AMASK = 0b0011;
 12408  015504  010F               	movlb	15	; () banked
 12409  015506  5147               	movf	71,w,b	;volatile
 12410  015508  0BC3               	andlw	-61
 12411  01550A  090C               	iorlw	12
 12412  01550C  6F47               	movwf	71,b	;volatile
 12413                           
 12414                           ; BSR set to: 15
 12415                           ;system.c: 85: ALRMCFGbits.CHIME = 1;
 12416  01550E  010F               	movlb	15	; () banked
 12417  015510  8D47               	bsf	71,6,b	;volatile
 12418                           
 12419                           ; BSR set to: 15
 12420                           ;system.c: 86: ALRMCFGbits.ALRMEN = 1;
 12421  015512  010F               	movlb	15	; () banked
 12422  015514  8F47               	bsf	71,7,b	;volatile
 12423                           
 12424                           ;system.c: 91: RTCCFG = 0x0;
 12425  015516  0E00               	movlw	0
 12426  015518  010F               	movlb	15	; () banked
 12427  01551A  6F3F               	movwf	63,b	;volatile
 12428                           
 12429                           ;system.c: 92: RTCCAL = 0x00;
 12430  01551C  0E00               	movlw	0
 12431  01551E  010F               	movlb	15	; () banked
 12432  015520  6F3E               	movwf	62,b	;volatile
 12433                           
 12434                           ; BSR set to: 15
 12435                           ;system.c: 93: if((RTCCFGbits.RTCEN))
 12436  015522  010F               	movlb	15	; () banked
 12437  015524  AF3F               	btfss	63,7,b	;volatile
 12438  015526  D006               	goto	l13855
 12439                           
 12440                           ; BSR set to: 15
 12441                           ;system.c: 94: {
 12442                           ;system.c: 95: if(!(RTCCFGbits.RTCWREN))
 12443  015528  010F               	movlb	15	; () banked
 12444  01552A  AB3F               	btfss	63,5,b	;volatile
 12445                           
 12446                           ; BSR set to: 15
 12447                           ;system.c: 96: {
 12448                           ;system.c: 97: RtccWrOn();
 12449  01552C  ECDF  F0B7         	call	_RtccWrOn	;wreg free
 12450                           
 12451                           ;system.c: 98: }
 12452                           ;system.c: 99: (RTCCFGbits.RTCEN=0);
 12453  015530  010F               	movlb	15	; () banked
 12454  015532  9F3F               	bcf	63,7,b	;volatile
 12455  015534                     l13855:
 12456                           
 12457                           ; BSR set to: 15
 12458                           ;system.c: 100: }
 12459                           ;system.c: 101: (RTCCFGbits.RTCWREN = 0);
 12460  015534  010F               	movlb	15	; () banked
 12461  015536  9B3F               	bcf	63,5,b	;volatile
 12462                           
 12463                           ;system.c: 102: RtccWrOn();
 12464  015538  ECDF  F0B7         	call	_RtccWrOn	;wreg free
 12465                           
 12466                           ;system.c: 103: (RTCCFGbits.RTCEN=1);
 12467  01553C  010F               	movlb	15	; () banked
 12468  01553E  8F3F               	bsf	63,7,b	;volatile
 12469                           
 12470                           ; BSR set to: 15
 12471                           ;system.c: 104: (ALRMCFGbits.ALRMEN=1);
 12472  015540  010F               	movlb	15	; () banked
 12473  015542  8F47               	bsf	71,7,b	;volatile
 12474                           
 12475                           ; BSR set to: 15
 12476                           ;system.c: 105: RTCCFGbits.RTCPTR0 = 0;
 12477  015544  010F               	movlb	15	; () banked
 12478  015546  913F               	bcf	63,0,b	;volatile
 12479                           
 12480                           ; BSR set to: 15
 12481                           ;system.c: 106: RTCCFGbits.RTCPTR1 = 0;
 12482  015548  010F               	movlb	15	; () banked
 12483  01554A  933F               	bcf	63,1,b	;volatile
 12484                           
 12485                           ; BSR set to: 15
 12486                           ;system.c: 107: RTCVALHbits.RTCVALH = 0x00;
 12487  01554C  0E00               	movlw	0
 12488  01554E  010F               	movlb	15	; () banked
 12489  015550  6F3B               	movwf	59,b	;volatile
 12490                           
 12491                           ; BSR set to: 15
 12492                           ;system.c: 108: RTCVALLbits.RTCVALL = 0x00;
 12493  015552  0E00               	movlw	0
 12494  015554  010F               	movlb	15	; () banked
 12495  015556  6F3A               	movwf	58,b	;volatile
 12496                           
 12497                           ; BSR set to: 15
 12498                           ;system.c: 109: (RTCCFGbits.RTCWREN = 0);
 12499  015558  010F               	movlb	15	; () banked
 12500  01555A  9B3F               	bcf	63,5,b	;volatile
 12501                           
 12502                           ; BSR set to: 15
 12503                           ;system.c: 112: IPR3bits.RTCCIP = 0;
 12504  01555C  90A5               	bcf	4005,0,c	;volatile
 12505                           
 12506                           ; BSR set to: 15
 12507                           ;system.c: 113: PIR3bits.RTCCIF = 0;
 12508  01555E  90A4               	bcf	4004,0,c	;volatile
 12509                           
 12510                           ; BSR set to: 15
 12511                           ;system.c: 114: PIE3bits.RTCCIE = 1;
 12512  015560  80A3               	bsf	4003,0,c	;volatile
 12513                           
 12514                           ; BSR set to: 15
 12515                           ;system.c: 119: TRISBbits.TRISB4 = 1;
 12516  015562  8893               	bsf	3987,4,c	;volatile
 12517                           
 12518                           ; BSR set to: 15
 12519                           ;system.c: 120: TRISBbits.TRISB5 = 1;
 12520  015564  8A93               	bsf	3987,5,c	;volatile
 12521                           
 12522                           ; BSR set to: 15
 12523                           ;system.c: 122: SSP1ADD = 19;
 12524  015566  0E13               	movlw	19
 12525  015568  6EC8               	movwf	4040,c	;volatile
 12526                           
 12527                           ; BSR set to: 15
 12528                           ;system.c: 128: LATAbits.LATA6 = 0;
 12529  01556A  9C89               	bcf	3977,6,c	;volatile
 12530                           
 12531                           ; BSR set to: 15
 12532                           ;system.c: 131: ADCON0bits.ADON = 0;
 12533  01556C  90C2               	bcf	4034,0,c	;volatile
 12534                           
 12535                           ; BSR set to: 15
 12536                           ;system.c: 134: TRISAbits.TRISA0 = 1;
 12537  01556E  8092               	bsf	3986,0,c	;volatile
 12538                           
 12539                           ; BSR set to: 15
 12540                           ;system.c: 136: ANCON0bits.PCFG0 = 0;
 12541  015570  010F               	movlb	15	; () banked
 12542  015572  9148               	bcf	72,0,b	;volatile
 12543                           
 12544                           ; BSR set to: 15
 12545                           ;system.c: 139: TRISAbits.TRISA1 = 1;
 12546  015574  8292               	bsf	3986,1,c	;volatile
 12547                           
 12548                           ; BSR set to: 15
 12549                           ;system.c: 141: ANCON0bits.PCFG1 = 0;
 12550  015576  010F               	movlb	15	; () banked
 12551  015578  9348               	bcf	72,1,b	;volatile
 12552                           
 12553                           ; BSR set to: 15
 12554                           ;system.c: 143: ANCON1bits.VBGEN = 0;
 12555  01557A  010F               	movlb	15	; () banked
 12556  01557C  9F49               	bcf	73,7,b	;volatile
 12557                           
 12558                           ; BSR set to: 15
 12559                           ;system.c: 148: ADCON0bits.VCFG0 = 0;
 12560  01557E  9CC2               	bcf	4034,6,c	;volatile
 12561                           
 12562                           ; BSR set to: 15
 12563                           ;system.c: 149: ADCON0bits.VCFG1 = 0;
 12564  015580  9EC2               	bcf	4034,7,c	;volatile
 12565                           
 12566                           ; BSR set to: 15
 12567                           ;system.c: 151: ADCON1bits.ADCS = 0b001;
 12568  015582  50C1               	movf	4033,w,c	;volatile
 12569  015584  0BF8               	andlw	-8
 12570  015586  0901               	iorlw	1
 12571  015588  6EC1               	movwf	4033,c	;volatile
 12572                           
 12573                           ; BSR set to: 15
 12574                           ;system.c: 153: ADCON1bits.ACQT = 0b111;
 12575  01558A  86C1               	bsf	4033,3,c	;volatile
 12576  01558C  88C1               	bsf	4033,4,c	;volatile
 12577  01558E  8AC1               	bsf	4033,5,c	;volatile
 12578                           
 12579                           ; BSR set to: 15
 12580                           ;system.c: 154: ADCON1bits.ADFM = 1;
 12581  015590  8EC1               	bsf	4033,7,c	;volatile
 12582                           
 12583                           ; BSR set to: 15
 12584                           ;system.c: 160: EECON2 = 0x55;
 12585  015592  0E55               	movlw	85
 12586  015594  6EA7               	movwf	4007,c	;volatile
 12587                           
 12588                           ; BSR set to: 15
 12589                           ;system.c: 161: EECON2 = 0xAA;
 12590  015596  0EAA               	movlw	170
 12591  015598  6EA7               	movwf	4007,c	;volatile
 12592                           
 12593                           ; BSR set to: 15
 12594                           ;system.c: 162: PPSCONbits.IOLOCK = 0;
 12595  01559A  010E               	movlb	14	; () banked
 12596  01559C  91BF               	bcf	191,0,b	;volatile
 12597                           
 12598                           ; BSR set to: 14
 12599                           ;system.c: 165: RPINR1 = 13;
 12600  01559E  0E0D               	movlw	13
 12601  0155A0  010E               	movlb	14	; () banked
 12602  0155A2  6FE1               	movwf	225,b	;volatile
 12603                           
 12604                           ; BSR set to: 14
 12605                           ;system.c: 166: RPINR21 = 12;
 12606  0155A4  0E0C               	movlw	12
 12607  0155A6  010E               	movlb	14	; () banked
 12608  0155A8  6FFC               	movwf	252,b	;volatile
 12609                           
 12610                           ; BSR set to: 14
 12611                           ;system.c: 167: RPINR22 = 5;
 12612  0155AA  0E05               	movlw	5
 12613  0155AC  010E               	movlb	14	; () banked
 12614  0155AE  6FFD               	movwf	253,b	;volatile
 12615                           
 12616                           ; BSR set to: 14
 12617                           ;system.c: 170: RPOR4 = 10;
 12618  0155B0  0E0A               	movlw	10
 12619  0155B2  010E               	movlb	14	; () banked
 12620  0155B4  6FC4               	movwf	196,b	;volatile
 12621                           
 12622                           ; BSR set to: 14
 12623                           ;system.c: 171: RPOR5 = 11;
 12624  0155B6  0E0B               	movlw	11
 12625  0155B8  010E               	movlb	14	; () banked
 12626  0155BA  6FC5               	movwf	197,b	;volatile
 12627                           
 12628                           ; BSR set to: 14
 12629                           ;system.c: 175: EECON2 = 0x55;
 12630  0155BC  0E55               	movlw	85
 12631  0155BE  6EA7               	movwf	4007,c	;volatile
 12632                           
 12633                           ; BSR set to: 14
 12634                           ;system.c: 176: EECON2 = 0xAA;
 12635  0155C0  0EAA               	movlw	170
 12636  0155C2  6EA7               	movwf	4007,c	;volatile
 12637                           
 12638                           ; BSR set to: 14
 12639                           ;system.c: 177: PPSCONbits.IOLOCK = 1;
 12640  0155C4  010E               	movlb	14	; () banked
 12641  0155C6  81BF               	bsf	191,0,b	;volatile
 12642                           
 12643                           ; BSR set to: 14
 12644                           ;system.c: 189: LATCbits.LATC6 = 1;
 12645  0155C8  8C8B               	bsf	3979,6,c	;volatile
 12646                           
 12647                           ; BSR set to: 14
 12648                           ;system.c: 190: LATBbits.LATB3 = 1;
 12649  0155CA  868A               	bsf	3978,3,c	;volatile
 12650                           
 12651                           ; BSR set to: 14
 12652                           ;system.c: 192: TRISCbits.TRISC6 = 0;
 12653  0155CC  9C94               	bcf	3988,6,c	;volatile
 12654                           
 12655                           ; BSR set to: 14
 12656                           ;system.c: 193: TRISBbits.TRISB3 = 0;
 12657  0155CE  9693               	bcf	3987,3,c	;volatile
 12658                           
 12659                           ; BSR set to: 14
 12660                           ;system.c: 196: TRISBbits.TRISB0 = 1;
 12661  0155D0  8093               	bsf	3987,0,c	;volatile
 12662                           
 12663                           ; BSR set to: 14
 12664                           ;system.c: 197: TRISCbits.TRISC2 = 1;
 12665  0155D2  8494               	bsf	3988,2,c	;volatile
 12666                           
 12667                           ; BSR set to: 14
 12668                           ;system.c: 200: INTCON2bits.INTEDG1 = 1;
 12669  0155D4  8AF1               	bsf	intcon2,5,c	;volatile
 12670                           
 12671                           ; BSR set to: 14
 12672                           ;system.c: 203: INTCON2bits.INTEDG0 = 1;
 12673  0155D6  8CF1               	bsf	intcon2,6,c	;volatile
 12674                           
 12675                           ; BSR set to: 14
 12676                           ;system.c: 205: INTCONbits.INT0IF = 0;
 12677  0155D8  92F2               	bcf	intcon,1,c	;volatile
 12678                           
 12679                           ; BSR set to: 14
 12680                           ;system.c: 206: INTCONbits.INT0IE = 1;
 12681  0155DA  88F2               	bsf	intcon,4,c	;volatile
 12682                           
 12683                           ; BSR set to: 14
 12684                           ;system.c: 208: INTCON3bits.INT1IF = 0;
 12685  0155DC  90F0               	bcf	intcon3,0,c	;volatile
 12686                           
 12687                           ; BSR set to: 14
 12688                           ;system.c: 209: INTCON3bits.INT1IP = 1;
 12689  0155DE  8CF0               	bsf	intcon3,6,c	;volatile
 12690                           
 12691                           ; BSR set to: 14
 12692                           ;system.c: 210: INTCON3bits.INT1IE = 1;
 12693  0155E0  86F0               	bsf	intcon3,3,c	;volatile
 12694                           
 12695                           ; BSR set to: 14
 12696                           ;system.c: 216: TRISCbits.TRISC1 = 1;
 12697  0155E2  8294               	bsf	3988,1,c	;volatile
 12698                           
 12699                           ; BSR set to: 14
 12700                           ;system.c: 217: TRISBbits.TRISB1 = 0;
 12701  0155E4  9293               	bcf	3987,1,c	;volatile
 12702                           
 12703                           ; BSR set to: 14
 12704                           ;system.c: 218: TRISBbits.TRISB2 = 0;
 12705  0155E6  9493               	bcf	3987,2,c	;volatile
 12706                           
 12707                           ; BSR set to: 14
 12708                           ;system.c: 220: SSP2STAT = 0xC0;
 12709  0155E8  0EC0               	movlw	192
 12710  0155EA  6E73               	movwf	3955,c	;volatile
 12711                           
 12712                           ; BSR set to: 14
 12713                           ;system.c: 221: SSP2CON1 = 0b00101010;
 12714  0155EC  0E2A               	movlw	42
 12715  0155EE  6E72               	movwf	3954,c	;volatile
 12716                           
 12717                           ; BSR set to: 14
 12718                           ;system.c: 225: LATAbits.LATA5 = 0;
 12719  0155F0  9A89               	bcf	3977,5,c	;volatile
 12720                           
 12721                           ; BSR set to: 14
 12722                           ;system.c: 226: TRISAbits.TRISA5 = 1;
 12723  0155F2  8A92               	bsf	3986,5,c	;volatile
 12724                           
 12725                           ; BSR set to: 14
 12726                           ;system.c: 231: INTCONbits.GIEH = 1;
 12727  0155F4  8EF2               	bsf	intcon,7,c	;volatile
 12728                           
 12729                           ; BSR set to: 14
 12730                           ;system.c: 232: INTCONbits.GIEL = 1;
 12731  0155F6  8CF2               	bsf	intcon,6,c	;volatile
 12732                           
 12733                           ; BSR set to: 14
 12734  0155F8  0012               	return		;funcret
 12735  0155FA                     __end_of_SYSTEM_Initialize:
 12736                           	opt stack 0
 12737                           tblptru	equ	0xFF8
 12738                           tblptrh	equ	0xFF7
 12739                           tblptrl	equ	0xFF6
 12740                           tablat	equ	0xFF5
 12741                           prodh	equ	0xFF4
 12742                           prodl	equ	0xFF3
 12743                           intcon	equ	0xFF2
 12744                           intcon2	equ	0xFF1
 12745                           intcon3	equ	0xFF0
 12746                           indf0	equ	0xFEF
 12747                           postinc0	equ	0xFEE
 12748                           plusw0	equ	0xFEB
 12749                           fsr0h	equ	0xFEA
 12750                           fsr0l	equ	0xFE9
 12751                           wreg	equ	0xFE8
 12752                           indf1	equ	0xFE7
 12753                           postdec1	equ	0xFE5
 12754                           fsr1h	equ	0xFE2
 12755                           fsr1l	equ	0xFE1
 12756                           indf2	equ	0xFDF
 12757                           postinc2	equ	0xFDE
 12758                           postdec2	equ	0xFDD
 12759                           plusw2	equ	0xFDB
 12760                           fsr2h	equ	0xFDA
 12761                           fsr2l	equ	0xFD9
 12762                           status	equ	0xFD8
 12763                           
 12764 ;; *************** function _RTCC_reset *****************
 12765 ;; Defined at:
 12766 ;;		line 693 in file "src/main.c"
 12767 ;; Parameters:    Size  Location     Type
 12768 ;;		None
 12769 ;; Auto vars:     Size  Location     Type
 12770 ;;		None
 12771 ;; Return value:  Size  Location     Type
 12772 ;;		None               void
 12773 ;; Registers used:
 12774 ;;		wreg, status,2, cstack
 12775 ;; Tracked objects:
 12776 ;;		On entry : 0/0
 12777 ;;		On exit  : 0/0
 12778 ;;		Unchanged: 0/0
 12779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12784 ;;Total ram usage:        0 bytes
 12785 ;; Hardware stack levels used:    1
 12786 ;; Hardware stack levels required when called:   10
 12787 ;; This function calls:
 12788 ;;		_RtccWrOn
 12789 ;; This function is called by:
 12790 ;;		_main
 12791 ;; This function uses a non-reentrant model
 12792 ;;
 12793                           
 12794                           	psect	text41
 12795  016EFC                     __ptext41:
 12796                           	opt stack 0
 12797  016EFC                     _RTCC_reset:
 12798                           	opt stack 20
 12799                           
 12800                           ;main.c: 695: RtccWrOn();
 12801                           
 12802                           ; BSR set to: 14
 12803                           ;incstack = 0
 12804  016EFC  ECDF  F0B7         	call	_RtccWrOn	;wreg free
 12805                           
 12806                           ;main.c: 696: RTCCFGbits.RTCPTR0 = 0;
 12807  016F00  010F               	movlb	15	; () banked
 12808  016F02  913F               	bcf	63,0,b	;volatile
 12809                           
 12810                           ; BSR set to: 15
 12811                           ;main.c: 697: RTCCFGbits.RTCPTR1 = 0;
 12812  016F04  010F               	movlb	15	; () banked
 12813  016F06  933F               	bcf	63,1,b	;volatile
 12814                           
 12815                           ; BSR set to: 15
 12816                           ;main.c: 698: RTCVALHbits.RTCVALH = 0x00;
 12817  016F08  0E00               	movlw	0
 12818  016F0A  010F               	movlb	15	; () banked
 12819  016F0C  6F3B               	movwf	59,b	;volatile
 12820                           
 12821                           ; BSR set to: 15
 12822                           ;main.c: 699: RTCVALLbits.RTCVALL = 0x00;
 12823  016F0E  0E00               	movlw	0
 12824  016F10  010F               	movlb	15	; () banked
 12825  016F12  6F3A               	movwf	58,b	;volatile
 12826                           
 12827                           ; BSR set to: 15
 12828                           ;main.c: 700: (RTCCFGbits.RTCWREN = 0);
 12829  016F14  010F               	movlb	15	; () banked
 12830  016F16  9B3F               	bcf	63,5,b	;volatile
 12831                           
 12832                           ; BSR set to: 15
 12833  016F18  0012               	return		;funcret
 12834  016F1A                     __end_of_RTCC_reset:
 12835                           	opt stack 0
 12836                           tblptru	equ	0xFF8
 12837                           tblptrh	equ	0xFF7
 12838                           tblptrl	equ	0xFF6
 12839                           tablat	equ	0xFF5
 12840                           prodh	equ	0xFF4
 12841                           prodl	equ	0xFF3
 12842                           intcon	equ	0xFF2
 12843                           intcon2	equ	0xFF1
 12844                           intcon3	equ	0xFF0
 12845                           indf0	equ	0xFEF
 12846                           postinc0	equ	0xFEE
 12847                           plusw0	equ	0xFEB
 12848                           fsr0h	equ	0xFEA
 12849                           fsr0l	equ	0xFE9
 12850                           wreg	equ	0xFE8
 12851                           indf1	equ	0xFE7
 12852                           postdec1	equ	0xFE5
 12853                           fsr1h	equ	0xFE2
 12854                           fsr1l	equ	0xFE1
 12855                           indf2	equ	0xFDF
 12856                           postinc2	equ	0xFDE
 12857                           postdec2	equ	0xFDD
 12858                           plusw2	equ	0xFDB
 12859                           fsr2h	equ	0xFDA
 12860                           fsr2l	equ	0xFD9
 12861                           status	equ	0xFD8
 12862                           
 12863 ;; *************** function _RtccWrOn *****************
 12864 ;; Defined at:
 12865 ;;		line 21 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\rtcc\RtccWrOn.c"
 12866 ;; Parameters:    Size  Location     Type
 12867 ;;		None
 12868 ;; Auto vars:     Size  Location     Type
 12869 ;;  data            2    0        unsigned int 
 12870 ;; Return value:  Size  Location     Type
 12871 ;;		None               void
 12872 ;; Registers used:
 12873 ;;		wreg, status,2
 12874 ;; Tracked objects:
 12875 ;;		On entry : 0/0
 12876 ;;		On exit  : 0/0
 12877 ;;		Unchanged: 0/0
 12878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12883 ;;Total ram usage:        0 bytes
 12884 ;; Hardware stack levels used:    1
 12885 ;; Hardware stack levels required when called:    9
 12886 ;; This function calls:
 12887 ;;		Nothing
 12888 ;; This function is called by:
 12889 ;;		_SYSTEM_Initialize
 12890 ;;		_update_variable
 12891 ;;		_RTCC_reset
 12892 ;; This function uses a non-reentrant model
 12893 ;;
 12894                           
 12895                           	psect	text42
 12896  016FBE                     __ptext42:
 12897                           	opt stack 0
 12898  016FBE                     _RtccWrOn:
 12899                           	opt stack 19
 12900                           
 12901                           ; BSR set to: 15
 12902                           ;incstack = 0
 12903  016FBE  9CF2               	bcf	intcon,6,c	;volatile
 12904  016FC0  0E55               	movlw	85
 12905  016FC2  6EA7               	movwf	4007,c	;volatile
 12906  016FC4  0EAA               	movlw	170
 12907  016FC6  6EA7               	movwf	4007,c	;volatile
 12908  016FC8  010F               	movlb	15	; () banked
 12909  016FCA  8B3F               	bsf	63,5,b	;volatile
 12910                           
 12911                           ; BSR set to: 15
 12912  016FCC  8CF2               	bsf	intcon,6,c	;volatile
 12913                           
 12914                           ; BSR set to: 15
 12915  016FCE  0012               	return		;funcret
 12916  016FD0                     __end_of_RtccWrOn:
 12917                           	opt stack 0
 12918                           tblptru	equ	0xFF8
 12919                           tblptrh	equ	0xFF7
 12920                           tblptrl	equ	0xFF6
 12921                           tablat	equ	0xFF5
 12922                           prodh	equ	0xFF4
 12923                           prodl	equ	0xFF3
 12924                           intcon	equ	0xFF2
 12925                           intcon2	equ	0xFF1
 12926                           intcon3	equ	0xFF0
 12927                           indf0	equ	0xFEF
 12928                           postinc0	equ	0xFEE
 12929                           plusw0	equ	0xFEB
 12930                           fsr0h	equ	0xFEA
 12931                           fsr0l	equ	0xFE9
 12932                           wreg	equ	0xFE8
 12933                           indf1	equ	0xFE7
 12934                           postdec1	equ	0xFE5
 12935                           fsr1h	equ	0xFE2
 12936                           fsr1l	equ	0xFE1
 12937                           indf2	equ	0xFDF
 12938                           postinc2	equ	0xFDE
 12939                           postdec2	equ	0xFDD
 12940                           plusw2	equ	0xFDB
 12941                           fsr2h	equ	0xFDA
 12942                           fsr2l	equ	0xFD9
 12943                           status	equ	0xFD8
 12944                           
 12945 ;; *************** function _MiApp_ProtocolInit *****************
 12946 ;; Defined at:
 12947 ;;		line 3563 in file "src/miwi/miwi_mesh.c"
 12948 ;; Parameters:    Size  Location     Type
 12949 ;;  bNetworkFree    1    wreg     unsigned char 
 12950 ;; Auto vars:     Size  Location     Type
 12951 ;;  bNetworkFree    1   23[BANK1 ] unsigned char 
 12952 ;;  MIP             3   24[BANK1 ] struct .
 12953 ;;  i               1   27[BANK1 ] unsigned char 
 12954 ;; Return value:  Size  Location     Type
 12955 ;;                  1    wreg      unsigned char 
 12956 ;; Registers used:
 12957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12958 ;; Tracked objects:
 12959 ;;		On entry : 0/0
 12960 ;;		On exit  : 0/0
 12961 ;;		Unchanged: 0/0
 12962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12964 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12965 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12966 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12967 ;;Total ram usage:        6 bytes
 12968 ;; Hardware stack levels used:    1
 12969 ;; Hardware stack levels required when called:   14
 12970 ;; This function calls:
 12971 ;;		_InitSymbolTimer
 12972 ;;		_MiApp_SetChannel
 12973 ;;		_MiMAC_Init
 12974 ;;		_MiMAC_SetAltAddress
 12975 ;; This function is called by:
 12976 ;;		_main
 12977 ;; This function uses a non-reentrant model
 12978 ;;
 12979                           
 12980                           	psect	text43
 12981  015172                     __ptext43:
 12982                           	opt stack 0
 12983  015172                     _MiApp_ProtocolInit:
 12984                           	opt stack 16
 12985                           
 12986                           ; BSR set to: 15
 12987                           ;incstack = 0
 12988                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
 12989  015172  0101               	movlb	1	; () banked
 12990  015174  6FA1               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
 12991                           
 12992                           ;miwi_mesh.c: 3565: MACINIT_PARAM MIP;
 12993                           ;miwi_mesh.c: 3566: uint8_t i;
 12994                           ;miwi_mesh.c: 3601: myShortAddress.Val = 0xFFFF;
 12995  015176  0101               	movlb	1	; () banked
 12996  015178  6985               	setf	_myShortAddress& (0+255),b
 12997  01517A  6986               	setf	(_myShortAddress+1)& (0+255),b
 12998                           
 12999                           ; BSR set to: 1
 13000                           ;miwi_mesh.c: 3602: myPANID.Val = 0x1337;
 13001  01517C  0E13               	movlw	19
 13002  01517E  0101               	movlb	1	; () banked
 13003  015180  6F84               	movwf	(_myPANID+1)& (0+255),b
 13004  015182  0E37               	movlw	55
 13005  015184  6F83               	movwf	_myPANID& (0+255),b
 13006                           
 13007                           ;miwi_mesh.c: 3607: for(i = 0; i < 10; i++)
 13008  015186  0E00               	movlw	0
 13009  015188  0101               	movlb	1	; () banked
 13010  01518A  6FA5               	movwf	MiApp_ProtocolInit@i& (0+255),b
 13011  01518C                     l14195:
 13012                           
 13013                           ; BSR set to: 1
 13014  01518C  0E09               	movlw	9
 13015  01518E  0101               	movlb	1	; () banked
 13016  015190  65A5               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 13017  015192  D001               	goto	l14199
 13018  015194  D012               	goto	l14205
 13019  015196                     l14199:
 13020                           
 13021                           ; BSR set to: 1
 13022                           ;miwi_mesh.c: 3608: {
 13023                           ;miwi_mesh.c: 3609: ConnectionTable[i].status.Val = 0;
 13024  015196  0101               	movlb	1	; () banked
 13025  015198  51A5               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 13026  01519A  0D09               	mullw	9
 13027  01519C  0E08               	movlw	8
 13028  01519E  26F3               	addwf	prodl,f,c
 13029  0151A0  0E00               	movlw	0
 13030  0151A2  22F4               	addwfc	prodh,f,c
 13031  0151A4  0E46               	movlw	low _ConnectionTable
 13032  0151A6  24F3               	addwf	prodl,w,c
 13033  0151A8  6ED9               	movwf	fsr2l,c
 13034  0151AA  0E02               	movlw	high _ConnectionTable
 13035  0151AC  20F4               	addwfc	prodh,w,c
 13036  0151AE  6EDA               	movwf	fsr2h,c
 13037  0151B0  0E00               	movlw	0
 13038  0151B2  6EDF               	movwf	indf2,c
 13039                           
 13040                           ; BSR set to: 1
 13041  0151B4  0101               	movlb	1	; () banked
 13042  0151B6  2BA5               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 13043  0151B8  D7E9               	goto	l14195
 13044  0151BA                     l14205:
 13045                           
 13046                           ; BSR set to: 1
 13047                           ;miwi_mesh.c: 3610: }
 13048                           ;miwi_mesh.c: 3621: MiWiStateMachine.Val = 0;
 13049  0151BA  0E00               	movlw	0
 13050  0151BC  0101               	movlb	1	; () banked
 13051  0151BE  6F39               	movwf	(_MiWiStateMachine+1)& (0+255),b
 13052  0151C0  0E00               	movlw	0
 13053  0151C2  6F38               	movwf	_MiWiStateMachine& (0+255),b
 13054                           
 13055                           ;miwi_mesh.c: 3623: openSocketInfo.status.Val = 0;
 13056  0151C4  0E00               	movlw	0
 13057  0151C6  0101               	movlb	1	; () banked
 13058  0151C8  6F00               	movwf	_openSocketInfo& (0+255),b
 13059                           
 13060                           ;miwi_mesh.c: 3624: MiWiCapacityInfo.Val = 0;
 13061  0151CA  0E00               	movlw	0
 13062  0151CC  0101               	movlb	1	; () banked
 13063  0151CE  6F43               	movwf	_MiWiCapacityInfo& (0+255),b
 13064                           
 13065                           ; BSR set to: 1
 13066                           ;miwi_mesh.c: 3626: InitSymbolTimer();
 13067  0151D0  ECD3  F0B7         	call	_InitSymbolTimer	;wreg free
 13068                           
 13069                           ;miwi_mesh.c: 3628: TxData = 0;
 13070  0151D4  0E00               	movlw	0
 13071  0151D6  0101               	movlb	1	; () banked
 13072  0151D8  6F46               	movwf	_TxData& (0+255),b
 13073                           
 13074                           ; BSR set to: 1
 13075                           ;miwi_mesh.c: 3644: for(i = 0; i < 10; i++)
 13076  0151DA  0E00               	movlw	0
 13077  0151DC  0101               	movlb	1	; () banked
 13078  0151DE  6FA5               	movwf	MiApp_ProtocolInit@i& (0+255),b
 13079  0151E0                     l14213:
 13080                           
 13081                           ; BSR set to: 1
 13082  0151E0  0E09               	movlw	9
 13083  0151E2  0101               	movlb	1	; () banked
 13084  0151E4  65A5               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 13085  0151E6  D001               	goto	l14217
 13086  0151E8  D010               	goto	l14223
 13087  0151EA                     l14217:
 13088                           
 13089                           ; BSR set to: 1
 13090                           ;miwi_mesh.c: 3645: {
 13091                           ;miwi_mesh.c: 3646: IncomingFrameCounter[i].Val = 0;
 13092  0151EA  0101               	movlb	1	; () banked
 13093  0151EC  51A5               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 13094  0151EE  0D04               	mullw	4
 13095  0151F0  0E00               	movlw	low _IncomingFrameCounter
 13096  0151F2  24F3               	addwf	prodl,w,c
 13097  0151F4  6ED9               	movwf	fsr2l,c
 13098  0151F6  0E02               	movlw	high _IncomingFrameCounter
 13099  0151F8  20F4               	addwfc	prodh,w,c
 13100  0151FA  6EDA               	movwf	fsr2h,c
 13101  0151FC  6ADE               	clrf	postinc2,c
 13102  0151FE  6ADE               	clrf	postinc2,c
 13103  015200  6ADE               	clrf	postinc2,c
 13104  015202  6ADD               	clrf	postdec2,c
 13105                           
 13106                           ; BSR set to: 1
 13107  015204  0101               	movlb	1	; () banked
 13108  015206  2BA5               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 13109  015208  D7EB               	goto	l14213
 13110  01520A                     l14223:
 13111                           
 13112                           ; BSR set to: 1
 13113                           ;miwi_mesh.c: 3647: }
 13114                           ;miwi_mesh.c: 3708: MIP.actionFlags.Val = 0;
 13115  01520A  0E00               	movlw	0
 13116  01520C  0101               	movlb	1	; () banked
 13117  01520E  6FA2               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 13118                           
 13119                           ;miwi_mesh.c: 3709: MIP.actionFlags.bits.PAddrLength = 4;
 13120  015210  0101               	movlb	1	; () banked
 13121  015212  51A2               	movf	MiApp_ProtocolInit@MIP& (0+255),w,b
 13122  015214  0B87               	andlw	-121
 13123  015216  0920               	iorlw	32
 13124  015218  6FA2               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 13125                           
 13126                           ; BSR set to: 1
 13127                           ;miwi_mesh.c: 3710: MIP.actionFlags.bits.CCAEnable = 1;
 13128  01521A  0101               	movlb	1	; () banked
 13129  01521C  83A2               	bsf	MiApp_ProtocolInit@MIP& (0+255),1,b
 13130                           
 13131                           ; BSR set to: 1
 13132                           ;miwi_mesh.c: 3711: MIP.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
 13133  01521E  0101               	movlb	1	; () banked
 13134  015220  B1A1               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
 13135  015222  D003               	bra	u16925
 13136  015224  0101               	movlb	1	; () banked
 13137  015226  95A2               	bcf	MiApp_ProtocolInit@MIP& (0+255),2,b
 13138  015228  D002               	bra	u16926
 13139  01522A                     u16925:
 13140  01522A  0101               	movlb	1	; () banked
 13141  01522C  85A2               	bsf	MiApp_ProtocolInit@MIP& (0+255),2,b
 13142  01522E                     u16926:
 13143                           
 13144                           ; BSR set to: 1
 13145                           ;miwi_mesh.c: 3712: MIP.PAddress = myLongAddress;
 13146  01522E  0EC8               	movlw	low _myLongAddress
 13147  015230  0101               	movlb	1	; () banked
 13148  015232  6FA3               	movwf	(MiApp_ProtocolInit@MIP+1)& (0+255),b
 13149  015234  0E00               	movlw	high _myLongAddress
 13150  015236  0101               	movlb	1	; () banked
 13151  015238  6FA4               	movwf	(MiApp_ProtocolInit@MIP+2)& (0+255),b
 13152                           
 13153                           ; BSR set to: 1
 13154                           ;miwi_mesh.c: 3714: MiMAC_Init(MIP);
 13155  01523A  C1A2  F19C         	movff	MiApp_ProtocolInit@MIP,MiMAC_Init@initValue
 13156  01523E  C1A3  F19D         	movff	MiApp_ProtocolInit@MIP+1,MiMAC_Init@initValue+1
 13157  015242  C1A4  F19E         	movff	MiApp_ProtocolInit@MIP+2,MiMAC_Init@initValue+2
 13158  015246  EC4C  F0A6         	call	_MiMAC_Init	;wreg free
 13159                           
 13160                           ;miwi_mesh.c: 3716: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 13161  01524A  0E85               	movlw	low _myShortAddress
 13162  01524C  0101               	movlb	1	; () banked
 13163  01524E  6F8A               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 13164  015250  0E01               	movlw	high _myShortAddress
 13165  015252  0101               	movlb	1	; () banked
 13166  015254  6F8B               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 13167  015256  0E83               	movlw	low _myPANID
 13168  015258  0101               	movlb	1	; () banked
 13169  01525A  6F8C               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 13170  01525C  0E01               	movlw	high _myPANID
 13171  01525E  0101               	movlb	1	; () banked
 13172  015260  6F8D               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 13173  015262  EC02  F0B8         	call	_MiMAC_SetAltAddress	;wreg free
 13174                           
 13175                           ;miwi_mesh.c: 3717: MiApp_SetChannel(currentChannel);
 13176  015266  0101               	movlb	1	; () banked
 13177  015268  5189               	movf	_currentChannel& (0+255),w,b
 13178  01526A  EC8D  F0B7         	call	_MiApp_SetChannel
 13179                           
 13180                           ;miwi_mesh.c: 3722: MiWiCapacityInfo.bits.Sleep = 1;
 13181  01526E  0101               	movlb	1	; () banked
 13182  015270  8143               	bsf	_MiWiCapacityInfo& (0+255),0,b
 13183                           
 13184                           ; BSR set to: 1
 13185                           ;miwi_mesh.c: 3725: MiWiCapacityInfo.bits.Security = 1;
 13186  015272  0101               	movlb	1	; () banked
 13187  015274  8743               	bsf	_MiWiCapacityInfo& (0+255),3,b
 13188                           
 13189                           ; BSR set to: 1
 13190                           ;miwi_mesh.c: 3727: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 13191  015276  C0B2  F1A0         	movff	_ConnMode,??_MiApp_ProtocolInit
 13192  01527A  0101               	movlb	1	; () banked
 13193  01527C  3BA0               	swapf	??_MiApp_ProtocolInit& (0+255),f,b
 13194  01527E  0101               	movlb	1	; () banked
 13195  015280  5143               	movf	_MiWiCapacityInfo& (0+255),w,b
 13196  015282  0101               	movlb	1	; () banked
 13197  015284  19A0               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 13198  015286  0BCF               	andlw	-49
 13199  015288  19A0               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 13200  01528A  0101               	movlb	1	; () banked
 13201  01528C  6F43               	movwf	_MiWiCapacityInfo& (0+255),b
 13202                           
 13203                           ; BSR set to: 1
 13204                           ;miwi_mesh.c: 3742: MiWiSeqNum = TMR1L;
 13205  01528E  CFCE F0B6          	movff	4046,_MiWiSeqNum	;volatile
 13206                           
 13207                           ; BSR set to: 1
 13208                           ;miwi_mesh.c: 3744: INTCON3bits.INT1IF = 0;
 13209  015292  90F0               	bcf	intcon3,0,c	;volatile
 13210                           
 13211                           ; BSR set to: 1
 13212                           ;miwi_mesh.c: 3745: INTCON3bits.INT1IE = 1;
 13213  015294  86F0               	bsf	intcon3,3,c	;volatile
 13214  015296  0012               	return	
 13215  015298                     __end_of_MiApp_ProtocolInit:
 13216                           	opt stack 0
 13217                           tblptru	equ	0xFF8
 13218                           tblptrh	equ	0xFF7
 13219                           tblptrl	equ	0xFF6
 13220                           tablat	equ	0xFF5
 13221                           prodh	equ	0xFF4
 13222                           prodl	equ	0xFF3
 13223                           intcon	equ	0xFF2
 13224                           intcon2	equ	0xFF1
 13225                           intcon3	equ	0xFF0
 13226                           indf0	equ	0xFEF
 13227                           postinc0	equ	0xFEE
 13228                           plusw0	equ	0xFEB
 13229                           fsr0h	equ	0xFEA
 13230                           fsr0l	equ	0xFE9
 13231                           wreg	equ	0xFE8
 13232                           indf1	equ	0xFE7
 13233                           postdec1	equ	0xFE5
 13234                           fsr1h	equ	0xFE2
 13235                           fsr1l	equ	0xFE1
 13236                           indf2	equ	0xFDF
 13237                           postinc2	equ	0xFDE
 13238                           postdec2	equ	0xFDD
 13239                           plusw2	equ	0xFDB
 13240                           fsr2h	equ	0xFDA
 13241                           fsr2l	equ	0xFD9
 13242                           status	equ	0xFD8
 13243                           
 13244 ;; *************** function _MiMAC_Init *****************
 13245 ;; Defined at:
 13246 ;;		line 585 in file "src/miwi/drv_mrf_miwi_89xa.c"
 13247 ;; Parameters:    Size  Location     Type
 13248 ;;  initValue       3   18[BANK1 ] struct .
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;  i               1   21[BANK1 ] unsigned char 
 13251 ;; Return value:  Size  Location     Type
 13252 ;;                  1    wreg      unsigned char 
 13253 ;; Registers used:
 13254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13255 ;; Tracked objects:
 13256 ;;		On entry : 0/0
 13257 ;;		On exit  : 0/0
 13258 ;;		Unchanged: 0/0
 13259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13260 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13261 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13263 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13264 ;;Total ram usage:        4 bytes
 13265 ;; Hardware stack levels used:    1
 13266 ;; Hardware stack levels required when called:   12
 13267 ;; This function calls:
 13268 ;;		_DELAY_ms
 13269 ;;		_RegisterSet
 13270 ;;		_SetRFMode
 13271 ;; This function is called by:
 13272 ;;		_MiApp_ProtocolInit
 13273 ;; This function uses a non-reentrant model
 13274 ;;
 13275                           
 13276                           	psect	text44
 13277  014C98                     __ptext44:
 13278                           	opt stack 0
 13279  014C98                     _MiMAC_Init:
 13280                           	opt stack 17
 13281                           
 13282                           ;drv_mrf_miwi_89xa.c: 587: uint8_t i;
 13283                           ;drv_mrf_miwi_89xa.c: 589: MACInitParams = initValue;
 13284                           
 13285                           ; BSR set to: 1
 13286                           ;incstack = 0
 13287  014C98  C19C  F0AF         	movff	MiMAC_Init@initValue,_MACInitParams
 13288  014C9C  C19D  F0B0         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
 13289  014CA0  C19E  F0B1         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
 13290                           
 13291                           ;drv_mrf_miwi_89xa.c: 591: DELAY_ms(20);
 13292  014CA4  0E00               	movlw	0
 13293  014CA6  0101               	movlb	1	; () banked
 13294  014CA8  6F97               	movwf	(DELAY_ms@ms+1)& (0+255),b
 13295  014CAA  0E14               	movlw	20
 13296  014CAC  6F96               	movwf	DELAY_ms@ms& (0+255),b
 13297  014CAE  ECD0  F0B0         	call	_DELAY_ms	;wreg free
 13298                           
 13299                           ;drv_mrf_miwi_89xa.c: 592: LATBbits.LATB3 = 1;
 13300  014CB2  868A               	bsf	3978,3,c	;volatile
 13301                           
 13302                           ;drv_mrf_miwi_89xa.c: 593: LATCbits.LATC6 = 1;
 13303  014CB4  8C8B               	bsf	3979,6,c	;volatile
 13304                           
 13305                           ;drv_mrf_miwi_89xa.c: 596: MACSeq = TMR1L;
 13306  014CB6  CFCE F0B4          	movff	4046,_MACSeq	;volatile
 13307                           
 13308                           ;drv_mrf_miwi_89xa.c: 597: ReceivedBankIndex = 0xFF;
 13309  014CBA  0101               	movlb	1	; () banked
 13310  014CBC  6945               	setf	_ReceivedBankIndex& (0+255),b
 13311                           
 13312                           ; BSR set to: 1
 13313                           ;drv_mrf_miwi_89xa.c: 599: for(i = 0; i < 2; i++)
 13314  014CBE  0E00               	movlw	0
 13315  014CC0  0101               	movlb	1	; () banked
 13316  014CC2  6F9F               	movwf	MiMAC_Init@i& (0+255),b
 13317  014CC4                     l13189:
 13318                           
 13319                           ; BSR set to: 1
 13320  014CC4  0E01               	movlw	1
 13321  014CC6  0101               	movlb	1	; () banked
 13322  014CC8  659F               	cpfsgt	MiMAC_Init@i& (0+255),b
 13323  014CCA  D001               	goto	l13193
 13324  014CCC  D00E               	goto	l13199
 13325  014CCE                     l13193:
 13326                           
 13327                           ; BSR set to: 1
 13328                           ;drv_mrf_miwi_89xa.c: 600: {
 13329                           ;drv_mrf_miwi_89xa.c: 601: RxPacket[i].flags.Val = 0;
 13330  014CCE  0101               	movlb	1	; () banked
 13331  014CD0  519F               	movf	MiMAC_Init@i& (0+255),w,b
 13332  014CD2  0D42               	mullw	66
 13333  014CD4  0E50               	movlw	low _RxPacket
 13334  014CD6  24F3               	addwf	prodl,w,c
 13335  014CD8  6ED9               	movwf	fsr2l,c
 13336  014CDA  0E03               	movlw	high _RxPacket
 13337  014CDC  20F4               	addwfc	prodh,w,c
 13338  014CDE  6EDA               	movwf	fsr2h,c
 13339  014CE0  0E00               	movlw	0
 13340  014CE2  6EDF               	movwf	indf2,c
 13341                           
 13342                           ; BSR set to: 1
 13343  014CE4  0101               	movlb	1	; () banked
 13344  014CE6  2B9F               	incf	MiMAC_Init@i& (0+255),f,b
 13345  014CE8  D7ED               	goto	l13189
 13346  014CEA                     l13199:
 13347                           
 13348                           ; BSR set to: 1
 13349                           ;drv_mrf_miwi_89xa.c: 602: }
 13350                           ;drv_mrf_miwi_89xa.c: 605: for(i = 0; i < 5; i++)
 13351  014CEA  0E00               	movlw	0
 13352  014CEC  0101               	movlb	1	; () banked
 13353  014CEE  6F9F               	movwf	MiMAC_Init@i& (0+255),b
 13354  014CF0                     l13201:
 13355                           
 13356                           ; BSR set to: 1
 13357  014CF0  0E04               	movlw	4
 13358  014CF2  0101               	movlb	1	; () banked
 13359  014CF4  659F               	cpfsgt	MiMAC_Init@i& (0+255),b
 13360  014CF6  D001               	goto	l13205
 13361  014CF8  D00E               	goto	l13211
 13362  014CFA                     l13205:
 13363                           
 13364                           ; BSR set to: 1
 13365                           ;drv_mrf_miwi_89xa.c: 606: {
 13366                           ;drv_mrf_miwi_89xa.c: 607: AckInfo[i].Valid = FALSE;
 13367  014CFA  0101               	movlb	1	; () banked
 13368  014CFC  519F               	movf	MiMAC_Init@i& (0+255),w,b
 13369  014CFE  0D06               	mullw	6
 13370  014D00  0E28               	movlw	low _AckInfo
 13371  014D02  24F3               	addwf	prodl,w,c
 13372  014D04  6ED9               	movwf	fsr2l,c
 13373  014D06  0E02               	movlw	high _AckInfo
 13374  014D08  20F4               	addwfc	prodh,w,c
 13375  014D0A  6EDA               	movwf	fsr2h,c
 13376  014D0C  0E00               	movlw	0
 13377  014D0E  6EDF               	movwf	indf2,c
 13378                           
 13379                           ; BSR set to: 1
 13380  014D10  0101               	movlb	1	; () banked
 13381  014D12  2B9F               	incf	MiMAC_Init@i& (0+255),f,b
 13382  014D14  D7ED               	goto	l13201
 13383  014D16                     l13211:
 13384                           
 13385                           ; BSR set to: 1
 13386                           ;drv_mrf_miwi_89xa.c: 608: }
 13387                           ;drv_mrf_miwi_89xa.c: 626: OutgoingFrameCounter.Val = 1;
 13388  014D16  0E01               	movlw	1
 13389  014D18  0100               	movlb	0	; () banked
 13390  014D1A  6FAB               	movwf	_OutgoingFrameCounter& (0+255),b
 13391  014D1C  0E00               	movlw	0
 13392  014D1E  6FAC               	movwf	(_OutgoingFrameCounter+1)& (0+255),b
 13393  014D20  0E00               	movlw	0
 13394  014D22  6FAD               	movwf	(_OutgoingFrameCounter+2)& (0+255),b
 13395  014D24  0E00               	movlw	0
 13396  014D26  6FAE               	movwf	(_OutgoingFrameCounter+3)& (0+255),b
 13397                           
 13398                           ;drv_mrf_miwi_89xa.c: 628: for(i = 0; i < 8; i++)
 13399  014D28  0E00               	movlw	0
 13400  014D2A  0101               	movlb	1	; () banked
 13401  014D2C  6F9F               	movwf	MiMAC_Init@i& (0+255),b
 13402  014D2E                     l13213:
 13403                           
 13404                           ; BSR set to: 1
 13405  014D2E  0E07               	movlw	7
 13406  014D30  0101               	movlb	1	; () banked
 13407  014D32  659F               	cpfsgt	MiMAC_Init@i& (0+255),b
 13408  014D34  D001               	goto	l13217
 13409  014D36  D017               	goto	l13223
 13410  014D38                     l13217:
 13411                           
 13412                           ; BSR set to: 1
 13413                           ;drv_mrf_miwi_89xa.c: 629: {
 13414                           ;drv_mrf_miwi_89xa.c: 630: key[i] = mySecurityKey[i];
 13415  014D38  0101               	movlb	1	; () banked
 13416  014D3A  519F               	movf	MiMAC_Init@i& (0+255),w,b
 13417  014D3C  0D01               	mullw	1
 13418  014D3E  0EA3               	movlw	low _mySecurityKey
 13419  014D40  24F3               	addwf	prodl,w,c
 13420  014D42  6ED9               	movwf	fsr2l,c
 13421  014D44  0E00               	movlw	high _mySecurityKey
 13422  014D46  20F4               	addwfc	prodh,w,c
 13423  014D48  6EDA               	movwf	fsr2h,c
 13424  014D4A  0101               	movlb	1	; () banked
 13425  014D4C  519F               	movf	MiMAC_Init@i& (0+255),w,b
 13426  014D4E  0D01               	mullw	1
 13427  014D50  0EC0               	movlw	low _key
 13428  014D52  24F3               	addwf	prodl,w,c
 13429  014D54  6EE1               	movwf	fsr1l,c
 13430  014D56  0E00               	movlw	high _key
 13431  014D58  20F4               	addwfc	prodh,w,c
 13432  014D5A  6EE2               	movwf	fsr1h,c
 13433  014D5C  CFDF FFE7          	movff	indf2,indf1
 13434                           
 13435                           ; BSR set to: 1
 13436  014D60  0101               	movlb	1	; () banked
 13437  014D62  2B9F               	incf	MiMAC_Init@i& (0+255),f,b
 13438  014D64  D7E4               	goto	l13213
 13439  014D66                     l13223:
 13440                           
 13441                           ; BSR set to: 1
 13442                           ;drv_mrf_miwi_89xa.c: 631: }
 13443                           ;drv_mrf_miwi_89xa.c: 636: for (i = 0 ; i <= 31; i++)
 13444  014D66  0E00               	movlw	0
 13445  014D68  0101               	movlb	1	; () banked
 13446  014D6A  6F9F               	movwf	MiMAC_Init@i& (0+255),b
 13447  014D6C                     l13225:
 13448                           
 13449                           ; BSR set to: 1
 13450  014D6C  0E1F               	movlw	31
 13451  014D6E  0101               	movlb	1	; () banked
 13452  014D70  659F               	cpfsgt	MiMAC_Init@i& (0+255),b
 13453  014D72  D001               	goto	l13229
 13454  014D74  D017               	goto	l13235
 13455  014D76                     l13229:
 13456                           
 13457                           ; BSR set to: 1
 13458                           ;drv_mrf_miwi_89xa.c: 637: {
 13459                           ;drv_mrf_miwi_89xa.c: 638: RegisterSet(InitConfigRegs[i]);
 13460  014D76  0101               	movlb	1	; () banked
 13461  014D78  519F               	movf	MiMAC_Init@i& (0+255),w,b
 13462  014D7A  0D02               	mullw	2
 13463  014D7C  0EF3               	movlw	low _InitConfigRegs
 13464  014D7E  24F3               	addwf	prodl,w,c
 13465  014D80  6EF6               	movwf	tblptrl,c
 13466  014D82  0EFE               	movlw	high _InitConfigRegs
 13467  014D84  20F4               	addwfc	prodh,w,c
 13468  014D86  6EF7               	movwf	tblptrh,c
 13469  014D88                     	if	1	;There are 3 active tblptr bytes
 13470  014D88  6AF8               	clrf	tblptru,c
 13471  014D8A  0E00               	movlw	low (__mediumconst shr (0+16))
 13472  014D8C  22F8               	addwfc	tblptru,f,c
 13473  014D8E                     	endif
 13474  014D8E  0009               	tblrd		*+
 13475  014D90  CFF5 F18C          	movff	tablat,RegisterSet@setting
 13476  014D94  000A               	tblrd		*-
 13477  014D96  CFF5 F18D          	movff	tablat,RegisterSet@setting+1
 13478  014D9A  EC09  F0B6         	call	_RegisterSet	;wreg free
 13479  014D9E  0101               	movlb	1	; () banked
 13480  014DA0  2B9F               	incf	MiMAC_Init@i& (0+255),f,b
 13481  014DA2  D7E4               	goto	l13225
 13482  014DA4                     l13235:
 13483                           
 13484                           ; BSR set to: 1
 13485                           ;drv_mrf_miwi_89xa.c: 639: }
 13486                           ;drv_mrf_miwi_89xa.c: 640: SetRFMode(0x20);
 13487  014DA4  0E20               	movlw	32
 13488  014DA6  ECC7  F0B1         	call	_SetRFMode
 13489                           
 13490                           ;drv_mrf_miwi_89xa.c: 642: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 13491  014DAA  0E00               	movlw	0
 13492  014DAC  0101               	movlb	1	; () banked
 13493  014DAE  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 13494  014DB0  0E56               	movlw	86
 13495  014DB2  6F8C               	movwf	RegisterSet@setting& (0+255),b
 13496  014DB4  EC09  F0B6         	call	_RegisterSet	;wreg free
 13497                           
 13498                           ;drv_mrf_miwi_89xa.c: 643: SetRFMode(0x40);
 13499  014DB8  0E40               	movlw	64
 13500  014DBA  ECC7  F0B1         	call	_SetRFMode
 13501                           
 13502                           ;drv_mrf_miwi_89xa.c: 646: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 13503  014DBE  0E1C               	movlw	28
 13504  014DC0  0101               	movlb	1	; () banked
 13505  014DC2  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 13506  014DC4  0E0F               	movlw	15
 13507  014DC6  6F8C               	movwf	RegisterSet@setting& (0+255),b
 13508  014DC8  EC09  F0B6         	call	_RegisterSet	;wreg free
 13509                           
 13510                           ;drv_mrf_miwi_89xa.c: 648: SetRFMode(0x60);
 13511  014DCC  0E60               	movlw	96
 13512  014DCE  ECC7  F0B1         	call	_SetRFMode
 13513                           
 13514                           ;drv_mrf_miwi_89xa.c: 651: INTCONbits.INT0IF = 0;
 13515  014DD2  92F2               	bcf	intcon,1,c	;volatile
 13516                           
 13517                           ;drv_mrf_miwi_89xa.c: 652: INTCONbits.INT0IE = 1;
 13518  014DD4  88F2               	bsf	intcon,4,c	;volatile
 13519                           
 13520                           ;drv_mrf_miwi_89xa.c: 654: INTCON3bits.INT1IF = 0;
 13521  014DD6  90F0               	bcf	intcon3,0,c	;volatile
 13522                           
 13523                           ;drv_mrf_miwi_89xa.c: 655: INTCON3bits.INT1IE = 1;
 13524  014DD8  86F0               	bsf	intcon3,3,c	;volatile
 13525  014DDA  0012               	return	
 13526  014DDC                     __end_of_MiMAC_Init:
 13527                           	opt stack 0
 13528                           tblptru	equ	0xFF8
 13529                           tblptrh	equ	0xFF7
 13530                           tblptrl	equ	0xFF6
 13531                           tablat	equ	0xFF5
 13532                           prodh	equ	0xFF4
 13533                           prodl	equ	0xFF3
 13534                           intcon	equ	0xFF2
 13535                           intcon2	equ	0xFF1
 13536                           intcon3	equ	0xFF0
 13537                           indf0	equ	0xFEF
 13538                           postinc0	equ	0xFEE
 13539                           plusw0	equ	0xFEB
 13540                           fsr0h	equ	0xFEA
 13541                           fsr0l	equ	0xFE9
 13542                           wreg	equ	0xFE8
 13543                           indf1	equ	0xFE7
 13544                           postdec1	equ	0xFE5
 13545                           fsr1h	equ	0xFE2
 13546                           fsr1l	equ	0xFE1
 13547                           indf2	equ	0xFDF
 13548                           postinc2	equ	0xFDE
 13549                           postdec2	equ	0xFDD
 13550                           plusw2	equ	0xFDB
 13551                           fsr2h	equ	0xFDA
 13552                           fsr2l	equ	0xFD9
 13553                           status	equ	0xFD8
 13554                           
 13555 ;; *************** function _DELAY_ms *****************
 13556 ;; Defined at:
 13557 ;;		line 108 in file "src/18F27J53/delay.c"
 13558 ;; Parameters:    Size  Location     Type
 13559 ;;  ms              2   12[BANK1 ] unsigned int 
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;  cyclesRequir    4   14[BANK1 ] long 
 13562 ;; Return value:  Size  Location     Type
 13563 ;;		None               void
 13564 ;; Registers used:
 13565 ;;		wreg, status,2, status,0, cstack
 13566 ;; Tracked objects:
 13567 ;;		On entry : 0/0
 13568 ;;		On exit  : 0/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13571 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13572 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13574 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13575 ;;Total ram usage:        6 bytes
 13576 ;; Hardware stack levels used:    1
 13577 ;; Hardware stack levels required when called:   10
 13578 ;; This function calls:
 13579 ;;		___lmul
 13580 ;; This function is called by:
 13581 ;;		_MiMAC_Init
 13582 ;;		_MiMAC_PowerState
 13583 ;; This function uses a non-reentrant model
 13584 ;;
 13585                           
 13586                           	psect	text45
 13587  0161A0                     __ptext45:
 13588                           	opt stack 0
 13589  0161A0                     _DELAY_ms:
 13590                           	opt stack 17
 13591                           
 13592                           ;delay.c: 110: int32_t cyclesRequiredForEntireDelay = 0;
 13593                           
 13594                           ;incstack = 0
 13595  0161A0  0E00               	movlw	0
 13596  0161A2  0101               	movlb	1	; () banked
 13597  0161A4  6F98               	movwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),b
 13598  0161A6  0E00               	movlw	0
 13599  0161A8  6F99               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),b
 13600  0161AA  0E00               	movlw	0
 13601  0161AC  6F9A               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),b
 13602  0161AE  0E00               	movlw	0
 13603  0161B0  6F9B               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),b
 13604                           
 13605                           ; BSR set to: 1
 13606                           ;delay.c: 113: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 13607  0161B2  C196  F18A         	movff	DELAY_ms@ms,___lmul@multiplier
 13608  0161B6  C197  F18B         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
 13609  0161BA  0101               	movlb	1	; () banked
 13610  0161BC  6B8C               	clrf	(___lmul@multiplier+2)& (0+255),b
 13611  0161BE  6B8D               	clrf	(___lmul@multiplier+3)& (0+255),b
 13612  0161C0  0EA0               	movlw	160
 13613  0161C2  0101               	movlb	1	; () banked
 13614  0161C4  6F8E               	movwf	___lmul@multiplicand& (0+255),b
 13615  0161C6  0E0F               	movlw	15
 13616  0161C8  6F8F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13617  0161CA  0E00               	movlw	0
 13618  0161CC  6F90               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13619  0161CE  0E00               	movlw	0
 13620  0161D0  6F91               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13621  0161D2  ECE3  F0B3         	call	___lmul	;wreg free
 13622  0161D6  C18A  F198         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
 13623  0161DA  C18B  F199         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
 13624  0161DE  C18C  F19A         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
 13625  0161E2  C18D  F19B         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
 13626                           
 13627                           ;delay.c: 117: cyclesRequiredForEntireDelay -= (148 + 22);
 13628  0161E6  0E56               	movlw	86
 13629  0161E8  0101               	movlb	1	; () banked
 13630  0161EA  2798               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 13631  0161EC  0EFF               	movlw	255
 13632  0161EE  2399               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 13633  0161F0  0EFF               	movlw	255
 13634  0161F2  239A               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 13635  0161F4  0EFF               	movlw	255
 13636  0161F6  239B               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 13637                           
 13638                           ; BSR set to: 1
 13639                           ;delay.c: 119: if (cyclesRequiredForEntireDelay <= (170+25))
 13640  0161F8  0101               	movlb	1	; () banked
 13641  0161FA  BF9B               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 13642  0161FC  0012               	return	
 13643  0161FE  0101               	movlb	1	; () banked
 13644  016200  519B               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 13645  016202  0101               	movlb	1	; () banked
 13646  016204  119A               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 13647  016206  0101               	movlb	1	; () banked
 13648  016208  1199               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 13649  01620A  E110               	bnz	l18
 13650  01620C  0EC4               	movlw	196
 13651  01620E  0101               	movlb	1	; () banked
 13652  016210  5D98               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 13653  016212  A0D8               	btfss	status,0,c
 13654  016214  0012               	return	
 13655  016216  D00A               	goto	l18
 13656  016218                     l19:
 13657                           
 13658                           ; BSR set to: 1
 13659                           ;delay.c: 126: {
 13660                           ;delay.c: 127: __nop();
 13661  016218  F000               	nop	
 13662                           
 13663                           ;delay.c: 128: cyclesRequiredForEntireDelay -= 39;
 13664  01621A  0ED9               	movlw	217
 13665  01621C  0101               	movlb	1	; () banked
 13666  01621E  2798               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 13667  016220  0EFF               	movlw	255
 13668  016222  2399               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 13669  016224  0EFF               	movlw	255
 13670  016226  239A               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 13671  016228  0EFF               	movlw	255
 13672  01622A  239B               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 13673  01622C                     l18:
 13674                           
 13675                           ; BSR set to: 1
 13676  01622C  0101               	movlb	1	; () banked
 13677  01622E  BF9B               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 13678  016230  0012               	return	
 13679  016232  0101               	movlb	1	; () banked
 13680  016234  519B               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 13681  016236  0101               	movlb	1	; () banked
 13682  016238  119A               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 13683  01623A  0101               	movlb	1	; () banked
 13684  01623C  1199               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 13685  01623E  E1EC               	bnz	l19
 13686  016240  0101               	movlb	1	; () banked
 13687  016242  0598               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 13688  016244  A0D8               	btfss	status,0,c
 13689  016246  0012               	return	
 13690  016248  D7E7               	goto	l19
 13691  01624A                     __end_of_DELAY_ms:
 13692                           	opt stack 0
 13693                           tblptru	equ	0xFF8
 13694                           tblptrh	equ	0xFF7
 13695                           tblptrl	equ	0xFF6
 13696                           tablat	equ	0xFF5
 13697                           prodh	equ	0xFF4
 13698                           prodl	equ	0xFF3
 13699                           intcon	equ	0xFF2
 13700                           intcon2	equ	0xFF1
 13701                           intcon3	equ	0xFF0
 13702                           indf0	equ	0xFEF
 13703                           postinc0	equ	0xFEE
 13704                           plusw0	equ	0xFEB
 13705                           fsr0h	equ	0xFEA
 13706                           fsr0l	equ	0xFE9
 13707                           wreg	equ	0xFE8
 13708                           indf1	equ	0xFE7
 13709                           postdec1	equ	0xFE5
 13710                           fsr1h	equ	0xFE2
 13711                           fsr1l	equ	0xFE1
 13712                           indf2	equ	0xFDF
 13713                           postinc2	equ	0xFDE
 13714                           postdec2	equ	0xFDD
 13715                           plusw2	equ	0xFDB
 13716                           fsr2h	equ	0xFDA
 13717                           fsr2l	equ	0xFD9
 13718                           status	equ	0xFD8
 13719                           
 13720 ;; *************** function ___lmul *****************
 13721 ;; Defined at:
 13722 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 13723 ;; Parameters:    Size  Location     Type
 13724 ;;  multiplier      4    0[BANK1 ] unsigned long 
 13725 ;;  multiplicand    4    4[BANK1 ] unsigned long 
 13726 ;; Auto vars:     Size  Location     Type
 13727 ;;  product         4    8[BANK1 ] unsigned long 
 13728 ;; Return value:  Size  Location     Type
 13729 ;;                  4    0[BANK1 ] unsigned long 
 13730 ;; Registers used:
 13731 ;;		wreg, status,2, status,0
 13732 ;; Tracked objects:
 13733 ;;		On entry : 0/0
 13734 ;;		On exit  : 0/0
 13735 ;;		Unchanged: 0/0
 13736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13737 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13738 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13740 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13741 ;;Total ram usage:       12 bytes
 13742 ;; Hardware stack levels used:    1
 13743 ;; Hardware stack levels required when called:    9
 13744 ;; This function calls:
 13745 ;;		Nothing
 13746 ;; This function is called by:
 13747 ;;		_DELAY_ms
 13748 ;;		_send_initial_update
 13749 ;;		_send_periodical_update
 13750 ;;		_DELAY_10us
 13751 ;; This function uses a non-reentrant model
 13752 ;;
 13753                           
 13754                           	psect	text46
 13755  0167C6                     __ptext46:
 13756                           	opt stack 0
 13757  0167C6                     ___lmul:
 13758                           	opt stack 17
 13759                           
 13760                           ; BSR set to: 1
 13761                           ;incstack = 0
 13762  0167C6  0E00               	movlw	0
 13763  0167C8  0101               	movlb	1	; () banked
 13764  0167CA  6F92               	movwf	___lmul@product& (0+255),b
 13765  0167CC  0E00               	movlw	0
 13766  0167CE  6F93               	movwf	(___lmul@product+1)& (0+255),b
 13767  0167D0  0E00               	movlw	0
 13768  0167D2  6F94               	movwf	(___lmul@product+2)& (0+255),b
 13769  0167D4  0E00               	movlw	0
 13770  0167D6  6F95               	movwf	(___lmul@product+3)& (0+255),b
 13771  0167D8                     l12243:
 13772                           
 13773                           ; BSR set to: 1
 13774  0167D8  0101               	movlb	1	; () banked
 13775  0167DA  A18A               	btfss	___lmul@multiplier& (0+255),0,b
 13776  0167DC  D010               	goto	l12247
 13777                           
 13778                           ; BSR set to: 1
 13779  0167DE  0101               	movlb	1	; () banked
 13780  0167E0  518E               	movf	___lmul@multiplicand& (0+255),w,b
 13781  0167E2  0101               	movlb	1	; () banked
 13782  0167E4  2792               	addwf	___lmul@product& (0+255),f,b
 13783  0167E6  0101               	movlb	1	; () banked
 13784  0167E8  518F               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13785  0167EA  0101               	movlb	1	; () banked
 13786  0167EC  2393               	addwfc	(___lmul@product+1)& (0+255),f,b
 13787  0167EE  0101               	movlb	1	; () banked
 13788  0167F0  5190               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13789  0167F2  0101               	movlb	1	; () banked
 13790  0167F4  2394               	addwfc	(___lmul@product+2)& (0+255),f,b
 13791  0167F6  0101               	movlb	1	; () banked
 13792  0167F8  5191               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13793  0167FA  0101               	movlb	1	; () banked
 13794  0167FC  2395               	addwfc	(___lmul@product+3)& (0+255),f,b
 13795  0167FE                     l12247:
 13796                           
 13797                           ; BSR set to: 1
 13798  0167FE  0101               	movlb	1	; () banked
 13799  016800  90D8               	bcf	status,0,c
 13800  016802  378E               	rlcf	___lmul@multiplicand& (0+255),f,b
 13801  016804  378F               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13802  016806  3790               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13803  016808  3791               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13804                           
 13805                           ; BSR set to: 1
 13806  01680A  0101               	movlb	1	; () banked
 13807  01680C  90D8               	bcf	status,0,c
 13808  01680E  338D               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13809  016810  338C               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13810  016812  338B               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13811  016814  338A               	rrcf	___lmul@multiplier& (0+255),f,b
 13812  016816  0101               	movlb	1	; () banked
 13813  016818  518A               	movf	___lmul@multiplier& (0+255),w,b
 13814  01681A  0101               	movlb	1	; () banked
 13815  01681C  118B               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13816  01681E  0101               	movlb	1	; () banked
 13817  016820  118C               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13818  016822  0101               	movlb	1	; () banked
 13819  016824  118D               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13820  016826  A4D8               	btfss	status,2,c
 13821  016828  D7D7               	goto	l12243
 13822                           
 13823                           ; BSR set to: 1
 13824  01682A  C192  F18A         	movff	___lmul@product,?___lmul
 13825  01682E  C193  F18B         	movff	___lmul@product+1,?___lmul+1
 13826  016832  C194  F18C         	movff	___lmul@product+2,?___lmul+2
 13827  016836  C195  F18D         	movff	___lmul@product+3,?___lmul+3
 13828                           
 13829                           ; BSR set to: 1
 13830  01683A  0012               	return		;funcret
 13831  01683C                     __end_of___lmul:
 13832                           	opt stack 0
 13833                           tblptru	equ	0xFF8
 13834                           tblptrh	equ	0xFF7
 13835                           tblptrl	equ	0xFF6
 13836                           tablat	equ	0xFF5
 13837                           prodh	equ	0xFF4
 13838                           prodl	equ	0xFF3
 13839                           intcon	equ	0xFF2
 13840                           intcon2	equ	0xFF1
 13841                           intcon3	equ	0xFF0
 13842                           indf0	equ	0xFEF
 13843                           postinc0	equ	0xFEE
 13844                           plusw0	equ	0xFEB
 13845                           fsr0h	equ	0xFEA
 13846                           fsr0l	equ	0xFE9
 13847                           wreg	equ	0xFE8
 13848                           indf1	equ	0xFE7
 13849                           postdec1	equ	0xFE5
 13850                           fsr1h	equ	0xFE2
 13851                           fsr1l	equ	0xFE1
 13852                           indf2	equ	0xFDF
 13853                           postinc2	equ	0xFDE
 13854                           postdec2	equ	0xFDD
 13855                           plusw2	equ	0xFDB
 13856                           fsr2h	equ	0xFDA
 13857                           fsr2l	equ	0xFD9
 13858                           status	equ	0xFD8
 13859                           
 13860 ;; *************** function _InitSymbolTimer *****************
 13861 ;; Defined at:
 13862 ;;		line 59 in file "src/18F27J53/symbol.c"
 13863 ;; Parameters:    Size  Location     Type
 13864 ;;		None
 13865 ;; Auto vars:     Size  Location     Type
 13866 ;;		None
 13867 ;; Return value:  Size  Location     Type
 13868 ;;		None               void
 13869 ;; Registers used:
 13870 ;;		wreg, status,2
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13880 ;;Total ram usage:        0 bytes
 13881 ;; Hardware stack levels used:    1
 13882 ;; Hardware stack levels required when called:    9
 13883 ;; This function calls:
 13884 ;;		Nothing
 13885 ;; This function is called by:
 13886 ;;		_MiApp_ProtocolInit
 13887 ;; This function uses a non-reentrant model
 13888 ;;
 13889                           
 13890                           	psect	text47
 13891  016FA6                     __ptext47:
 13892                           	opt stack 0
 13893  016FA6                     _InitSymbolTimer:
 13894                           	opt stack 20
 13895                           
 13896                           ;symbol.c: 62: T1CON = 0b00110000;
 13897                           
 13898                           ; BSR set to: 1
 13899                           ;incstack = 0
 13900  016FA6  0E30               	movlw	48
 13901  016FA8  6ECD               	movwf	4045,c	;volatile
 13902                           
 13903                           ;symbol.c: 63: PIR1bits.TMR1IF = 0;
 13904  016FAA  909E               	bcf	3998,0,c	;volatile
 13905                           
 13906                           ;symbol.c: 64: PIE1bits.TMR1IE = 1;
 13907  016FAC  809D               	bsf	3997,0,c	;volatile
 13908                           
 13909                           ;symbol.c: 65: T1CONbits.TMR1ON = 1;
 13910  016FAE  80CD               	bsf	4045,0,c	;volatile
 13911                           
 13912                           ;symbol.c: 74: timerExtension1 = 0;
 13913  016FB0  0E00               	movlw	0
 13914  016FB2  0100               	movlb	0	; () banked
 13915  016FB4  6FBE               	movwf	_timerExtension1& (0+255),b	;volatile
 13916                           
 13917                           ;symbol.c: 75: timerExtension2 = 0;
 13918  016FB6  0E00               	movlw	0
 13919  016FB8  0100               	movlb	0	; () banked
 13920  016FBA  6FBF               	movwf	_timerExtension2& (0+255),b	;volatile
 13921                           
 13922                           ; BSR set to: 0
 13923  016FBC  0012               	return		;funcret
 13924  016FBE                     __end_of_InitSymbolTimer:
 13925                           	opt stack 0
 13926                           tblptru	equ	0xFF8
 13927                           tblptrh	equ	0xFF7
 13928                           tblptrl	equ	0xFF6
 13929                           tablat	equ	0xFF5
 13930                           prodh	equ	0xFF4
 13931                           prodl	equ	0xFF3
 13932                           intcon	equ	0xFF2
 13933                           intcon2	equ	0xFF1
 13934                           intcon3	equ	0xFF0
 13935                           indf0	equ	0xFEF
 13936                           postinc0	equ	0xFEE
 13937                           plusw0	equ	0xFEB
 13938                           fsr0h	equ	0xFEA
 13939                           fsr0l	equ	0xFE9
 13940                           wreg	equ	0xFE8
 13941                           indf1	equ	0xFE7
 13942                           postdec1	equ	0xFE5
 13943                           fsr1h	equ	0xFE2
 13944                           fsr1l	equ	0xFE1
 13945                           indf2	equ	0xFDF
 13946                           postinc2	equ	0xFDE
 13947                           postdec2	equ	0xFDD
 13948                           plusw2	equ	0xFDB
 13949                           fsr2h	equ	0xFDA
 13950                           fsr2l	equ	0xFD9
 13951                           status	equ	0xFD8
 13952                           
 13953 ;; *************** function _MiApp_EstablishConnection *****************
 13954 ;; Defined at:
 13955 ;;		line 4095 in file "src/miwi/miwi_mesh.c"
 13956 ;; Parameters:    Size  Location     Type
 13957 ;;  ActiveScanIn    1    wreg     unsigned char 
 13958 ;;  Mode            1  113[BANK1 ] unsigned char 
 13959 ;; Auto vars:     Size  Location     Type
 13960 ;;  ActiveScanIn    1   36[BANK3 ] unsigned char 
 13961 ;;  t2              4   31[BANK3 ] struct _MIWI_TICK
 13962 ;;  t1              4   27[BANK3 ] struct _MIWI_TICK
 13963 ;;  i               1   37[BANK3 ] unsigned char 
 13964 ;;  retry           1   35[BANK3 ] unsigned char 
 13965 ;; Return value:  Size  Location     Type
 13966 ;;                  1    wreg      unsigned char 
 13967 ;; Registers used:
 13968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13969 ;; Tracked objects:
 13970 ;;		On entry : 0/0
 13971 ;;		On exit  : 0/0
 13972 ;;		Unchanged: 0/0
 13973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13974 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13975 ;;      Locals:         0       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0
 13976 ;;      Temps:          0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0
 13977 ;;      Totals:         0       0       1       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 13978 ;;Total ram usage:       20 bytes
 13979 ;; Hardware stack levels used:    1
 13980 ;; Hardware stack levels required when called:   18
 13981 ;; This function calls:
 13982 ;;		_MiApp_DiscardMessage
 13983 ;;		_MiApp_MessageAvailable
 13984 ;;		_MiApp_SearchConnection
 13985 ;;		_MiApp_SetChannel
 13986 ;;		_MiMAC_SetAltAddress
 13987 ;;		_MiWi_TickGet
 13988 ;;		_OpenSocket
 13989 ;;		_SearchForLongAddress
 13990 ;;		_SendMACPacket
 13991 ;;		_findNextNetworkEntry
 13992 ;; This function is called by:
 13993 ;;		_main
 13994 ;; This function uses a non-reentrant model
 13995 ;;
 13996                           
 13997                           	psect	text48
 13998  01293E                     __ptext48:
 13999                           	opt stack 0
 14000  01293E                     _MiApp_EstablishConnection:
 14001                           	opt stack 12
 14002                           
 14003                           ; BSR set to: 0
 14004                           ;incstack = 0
 14005                           ;MiApp_EstablishConnection@ActiveScanIndex stored from wreg
 14006  01293E  0103               	movlb	3	; () banked
 14007  012940  6FF8               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 14008                           
 14009                           ;miwi_mesh.c: 4097: uint8_t retry = 3;
 14010  012942  0E03               	movlw	3
 14011  012944  0103               	movlb	3	; () banked
 14012  012946  6FF7               	movwf	MiApp_EstablishConnection@retry& (0+255),b
 14013                           
 14014                           ; BSR set to: 3
 14015                           ;miwi_mesh.c: 4098: uint8_t i;
 14016                           ;miwi_mesh.c: 4099: MIWI_TICK t1, t2;
 14017                           ;miwi_mesh.c: 4101: if( Mode == 0x01 )
 14018  012948  0101               	movlb	1	; () banked
 14019  01294A  05FB               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
 14020  01294C  A4D8               	btfss	status,2,c
 14021  01294E  D014               	goto	l14279
 14022                           
 14023                           ; BSR set to: 1
 14024                           ;miwi_mesh.c: 4102: {
 14025                           ;miwi_mesh.c: 4106: OpenSocket();
 14026  012950  ECA4  F0AE         	call	_OpenSocket	;wreg free
 14027                           
 14028                           ;miwi_mesh.c: 4107: while(openSocketInfo.status.bits.requestIsOpen)
 14029  012954  D006               	goto	l14267
 14030  012956                     l14263:
 14031                           
 14032                           ;miwi_mesh.c: 4108: {
 14033                           ;miwi_mesh.c: 4109: if( MiApp_MessageAvailable())
 14034  012956  ECE8  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 14035  01295A  0900               	iorlw	0
 14036  01295C  A4D8               	btfss	status,2,c
 14037                           
 14038                           ;miwi_mesh.c: 4110: {
 14039                           ;miwi_mesh.c: 4111: MiApp_DiscardMessage();
 14040  01295E  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 14041  012962                     l14267:
 14042  012962  0101               	movlb	1	; () banked
 14043  012964  B300               	btfsc	_openSocketInfo& (0+255),1,b
 14044  012966  D7F7               	goto	l14263
 14045                           
 14046                           ; BSR set to: 1
 14047                           ;miwi_mesh.c: 4112: }
 14048                           ;miwi_mesh.c: 4122: }
 14049                           ;miwi_mesh.c: 4123: if( openSocketInfo.status.bits.matchFound )
 14050  012968  0101               	movlb	1	; () banked
 14051  01296A  A100               	btfss	_openSocketInfo& (0+255),0,b
 14052  01296C  D003               	goto	l14273
 14053                           
 14054                           ; BSR set to: 1
 14055                           ;miwi_mesh.c: 4124: {
 14056                           ;miwi_mesh.c: 4125: return openSocketInfo.socketHandle;
 14057  01296E  0101               	movlb	1	; () banked
 14058  012970  5101               	movf	(_openSocketInfo+1)& (0+255),w,b
 14059                           
 14060                           ; BSR set to: 1
 14061  012972  0012               	return	
 14062  012974                     l14273:
 14063                           
 14064                           ; BSR set to: 1
 14065                           ;miwi_mesh.c: 4126: }
 14066                           ;miwi_mesh.c: 4127: return 0xFF;
 14067  012974  0EFF               	movlw	255
 14068                           
 14069                           ; BSR set to: 1
 14070  012976  0012               	return	
 14071  012978                     l14279:
 14072                           
 14073                           ; BSR set to: 1
 14074                           ;miwi_mesh.c: 4129: else if( Mode == 0x00)
 14075  012978  0101               	movlb	1	; () banked
 14076  01297A  51FB               	movf	MiApp_EstablishConnection@Mode& (0+255),w,b
 14077  01297C  0101               	movlb	1	; () banked
 14078  01297E  A4D8               	btfss	status,2,c
 14079  012980  D1F7               	goto	l14375
 14080                           
 14081                           ; BSR set to: 1
 14082                           ;miwi_mesh.c: 4130: {
 14083                           ;miwi_mesh.c: 4131: if( ActiveScanIndex == 0xFF )
 14084  012982  0103               	movlb	3	; () banked
 14085  012984  29F8               	incf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14086  012986  B4D8               	btfsc	status,2,c
 14087  012988  D006               	goto	l14289
 14088  01298A  D02A               	goto	l14293
 14089  01298C                     l784:
 14090                           
 14091                           ;miwi_mesh.c: 4134: {
 14092                           ;miwi_mesh.c: 4135: if( --retry == 0 )
 14093  01298C  0103               	movlb	3	; () banked
 14094  01298E  2FF7               	decfsz	MiApp_EstablishConnection@retry& (0+255),f,b
 14095  012990  D002               	goto	l14289
 14096                           
 14097                           ; BSR set to: 3
 14098                           ;miwi_mesh.c: 4136: {
 14099                           ;miwi_mesh.c: 4137: return 0xFF;
 14100  012992  0EFF               	movlw	255
 14101                           
 14102                           ; BSR set to: 3
 14103  012994  0012               	return	
 14104  012996                     l14289:
 14105                           
 14106                           ; BSR set to: 3
 14107  012996  C189  F3E7         	movff	_currentChannel,??_MiApp_EstablishConnection
 14108  01299A  0E01               	movlw	1
 14109  01299C  0103               	movlb	3	; () banked
 14110  01299E  6FE8               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 14111  0129A0  6BE9               	clrf	(??_MiApp_EstablishConnection+2)& (0+255),b
 14112  0129A2  6BEA               	clrf	(??_MiApp_EstablishConnection+3)& (0+255),b
 14113  0129A4  6BEB               	clrf	(??_MiApp_EstablishConnection+4)& (0+255),b
 14114  0129A6  0103               	movlb	3	; () banked
 14115  0129A8  2BE7               	incf	??_MiApp_EstablishConnection& (0+255),f,b
 14116  0129AA  D006               	goto	u17000
 14117  0129AC                     u17005:
 14118  0129AC  90D8               	bcf	status,0,c
 14119  0129AE  0103               	movlb	3	; () banked
 14120  0129B0  37E8               	rlcf	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14121  0129B2  37E9               	rlcf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14122  0129B4  37EA               	rlcf	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14123  0129B6  37EB               	rlcf	(??_MiApp_EstablishConnection+4)& (0+255),f,b
 14124  0129B8                     u17000:
 14125  0129B8  0103               	movlb	3	; () banked
 14126  0129BA  2FE7               	decfsz	??_MiApp_EstablishConnection& (0+255),f,b
 14127  0129BC  D7F7               	goto	u17005
 14128  0129BE  C3E8  F1EE         	movff	??_MiApp_EstablishConnection+1,MiApp_SearchConnection@ChannelMap
 14129  0129C2  C3E9  F1EF         	movff	??_MiApp_EstablishConnection+2,MiApp_SearchConnection@ChannelMap+1
 14130  0129C6  C3EA  F1F0         	movff	??_MiApp_EstablishConnection+3,MiApp_SearchConnection@ChannelMap+2
 14131  0129CA  C3EB  F1F1         	movff	??_MiApp_EstablishConnection+4,MiApp_SearchConnection@ChannelMap+3
 14132  0129CE  0E0A               	movlw	10
 14133  0129D0  EC06  F09D         	call	_MiApp_SearchConnection
 14134  0129D4  0900               	iorlw	0
 14135  0129D6  B4D8               	btfsc	status,2,c
 14136  0129D8  D7D9               	goto	l784
 14137                           
 14138                           ;miwi_mesh.c: 4138: }
 14139                           ;miwi_mesh.c: 4139: }
 14140                           ;miwi_mesh.c: 4140: ActiveScanIndex = 0;
 14141  0129DA  0E00               	movlw	0
 14142  0129DC  0103               	movlb	3	; () banked
 14143  0129DE  6FF8               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 14144  0129E0                     l14293:
 14145                           
 14146                           ; BSR set to: 3
 14147                           ;miwi_mesh.c: 4141: }
 14148                           ;miwi_mesh.c: 4149: tempPANID.Val = ActiveScanResults[ActiveScanIndex].PANID.Val;
 14149  0129E0  0103               	movlb	3	; () banked
 14150  0129E2  51F8               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14151  0129E4  0D0A               	mullw	10
 14152  0129E6  0E05               	movlw	5
 14153  0129E8  26F3               	addwf	prodl,f,c
 14154  0129EA  0E00               	movlw	0
 14155  0129EC  22F4               	addwfc	prodh,f,c
 14156  0129EE  0E00               	movlw	low _ActiveScanResults
 14157  0129F0  24F3               	addwf	prodl,w,c
 14158  0129F2  6ED9               	movwf	fsr2l,c
 14159  0129F4  0E03               	movlw	high _ActiveScanResults
 14160  0129F6  20F4               	addwfc	prodh,w,c
 14161  0129F8  6EDA               	movwf	fsr2h,c
 14162  0129FA  CFDE F13C          	movff	postinc2,_tempPANID
 14163  0129FE  CFDD F13D          	movff	postdec2,_tempPANID+1
 14164                           
 14165                           ; BSR set to: 3
 14166                           ;miwi_mesh.c: 4150: for(i = 0; i < 4; i++)
 14167  012A02  0E00               	movlw	0
 14168  012A04  0103               	movlb	3	; () banked
 14169  012A06  6FF9               	movwf	MiApp_EstablishConnection@i& (0+255),b
 14170  012A08                     l14297:
 14171                           
 14172                           ; BSR set to: 3
 14173  012A08  0E03               	movlw	3
 14174  012A0A  0103               	movlb	3	; () banked
 14175  012A0C  65F9               	cpfsgt	MiApp_EstablishConnection@i& (0+255),b
 14176  012A0E  D001               	goto	l14301
 14177  012A10  D02C               	goto	l14307
 14178  012A12                     l14301:
 14179                           
 14180                           ; BSR set to: 3
 14181                           ;miwi_mesh.c: 4151: {
 14182                           ;miwi_mesh.c: 4152: tempLongAddress[i] = ActiveScanResults[ActiveScanIndex].Address[i];
 14183  012A12  0103               	movlb	3	; () banked
 14184  012A14  51F9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 14185  012A16  0D01               	mullw	1
 14186  012A18  0E01               	movlw	1
 14187  012A1A  26F3               	addwf	prodl,f,c
 14188  012A1C  0E00               	movlw	0
 14189  012A1E  22F4               	addwfc	prodh,f,c
 14190  012A20  0E00               	movlw	low _ActiveScanResults
 14191  012A22  0103               	movlb	3	; () banked
 14192  012A24  6FE7               	movwf	??_MiApp_EstablishConnection& (0+255),b
 14193  012A26  0E03               	movlw	high _ActiveScanResults
 14194  012A28  0103               	movlb	3	; () banked
 14195  012A2A  6FE8               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 14196  012A2C  50F3               	movf	prodl,w,c
 14197  012A2E  0103               	movlb	3	; () banked
 14198  012A30  27E7               	addwf	??_MiApp_EstablishConnection& (0+255),f,b
 14199  012A32  50F4               	movf	prodh,w,c
 14200  012A34  0103               	movlb	3	; () banked
 14201  012A36  23E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14202  012A38  0103               	movlb	3	; () banked
 14203  012A3A  51F8               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14204  012A3C  0D0A               	mullw	10
 14205  012A3E  50F3               	movf	prodl,w,c
 14206  012A40  0103               	movlb	3	; () banked
 14207  012A42  25E7               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 14208  012A44  6ED9               	movwf	fsr2l,c
 14209  012A46  50F4               	movf	prodh,w,c
 14210  012A48  0103               	movlb	3	; () banked
 14211  012A4A  21E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 14212  012A4C  6EDA               	movwf	fsr2h,c
 14213  012A4E  0103               	movlb	3	; () banked
 14214  012A50  51F9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 14215  012A52  0D01               	mullw	1
 14216  012A54  0E26               	movlw	low _tempLongAddress
 14217  012A56  24F3               	addwf	prodl,w,c
 14218  012A58  6EE1               	movwf	fsr1l,c
 14219  012A5A  0E01               	movlw	high _tempLongAddress
 14220  012A5C  20F4               	addwfc	prodh,w,c
 14221  012A5E  6EE2               	movwf	fsr1h,c
 14222  012A60  CFDF FFE7          	movff	indf2,indf1
 14223                           
 14224                           ; BSR set to: 3
 14225  012A64  0103               	movlb	3	; () banked
 14226  012A66  2BF9               	incf	MiApp_EstablishConnection@i& (0+255),f,b
 14227  012A68  D7CF               	goto	l14297
 14228  012A6A                     l14307:
 14229                           
 14230                           ; BSR set to: 3
 14231                           ;miwi_mesh.c: 4153: }
 14232                           ;miwi_mesh.c: 4154: myParent = SearchForLongAddress();
 14233  012A6A  EC77  F0AD         	call	_SearchForLongAddress	;wreg free
 14234  012A6E  0101               	movlb	1	; () banked
 14235  012A70  6F4C               	movwf	_myParent& (0+255),b
 14236                           
 14237                           ; BSR set to: 1
 14238                           ;miwi_mesh.c: 4157: if( myParent == 0xFF )
 14239  012A72  0101               	movlb	1	; () banked
 14240  012A74  294C               	incf	_myParent& (0+255),w,b
 14241  012A76  A4D8               	btfss	status,2,c
 14242  012A78  D00A               	goto	l14317
 14243                           
 14244                           ; BSR set to: 1
 14245                           ;miwi_mesh.c: 4158: {
 14246                           ;miwi_mesh.c: 4159: if( (myParent = findNextNetworkEntry()) == 0xFF )
 14247  012A7A  EC91  F0B6         	call	_findNextNetworkEntry	;wreg free
 14248  012A7E  0101               	movlb	1	; () banked
 14249  012A80  6F4C               	movwf	_myParent& (0+255),b
 14250  012A82  0101               	movlb	1	; () banked
 14251  012A84  294C               	incf	_myParent& (0+255),w,b
 14252  012A86  A4D8               	btfss	status,2,c
 14253  012A88  D002               	goto	l14317
 14254                           
 14255                           ; BSR set to: 1
 14256                           ;miwi_mesh.c: 4160: {
 14257                           ;miwi_mesh.c: 4161: return 0xFF;
 14258  012A8A  0EFF               	movlw	255
 14259                           
 14260                           ; BSR set to: 1
 14261  012A8C  0012               	return	
 14262  012A8E                     l14317:
 14263                           
 14264                           ; BSR set to: 1
 14265                           ;miwi_mesh.c: 4162: }
 14266                           ;miwi_mesh.c: 4163: }
 14267                           ;miwi_mesh.c: 4165: ConnectionTable[myParent].status.Val = 0;
 14268  012A8E  0101               	movlb	1	; () banked
 14269  012A90  514C               	movf	_myParent& (0+255),w,b
 14270  012A92  0D09               	mullw	9
 14271  012A94  0E08               	movlw	8
 14272  012A96  26F3               	addwf	prodl,f,c
 14273  012A98  0E00               	movlw	0
 14274  012A9A  22F4               	addwfc	prodh,f,c
 14275  012A9C  0E46               	movlw	low _ConnectionTable
 14276  012A9E  24F3               	addwf	prodl,w,c
 14277  012AA0  6ED9               	movwf	fsr2l,c
 14278  012AA2  0E02               	movlw	high _ConnectionTable
 14279  012AA4  20F4               	addwfc	prodh,w,c
 14280  012AA6  6EDA               	movwf	fsr2h,c
 14281  012AA8  0E00               	movlw	0
 14282  012AAA  6EDF               	movwf	indf2,c
 14283                           
 14284                           ; BSR set to: 1
 14285                           ;miwi_mesh.c: 4166: ConnectionTable[myParent].PANID.Val = ActiveScanResults[ActiveScanIn
      +                          dex].PANID.Val;
 14286  012AAC  0103               	movlb	3	; () banked
 14287  012AAE  51F8               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14288  012AB0  0D0A               	mullw	10
 14289  012AB2  0E05               	movlw	5
 14290  012AB4  26F3               	addwf	prodl,f,c
 14291  012AB6  0E00               	movlw	0
 14292  012AB8  22F4               	addwfc	prodh,f,c
 14293  012ABA  0E00               	movlw	low _ActiveScanResults
 14294  012ABC  24F3               	addwf	prodl,w,c
 14295  012ABE  6ED9               	movwf	fsr2l,c
 14296  012AC0  0E03               	movlw	high _ActiveScanResults
 14297  012AC2  20F4               	addwfc	prodh,w,c
 14298  012AC4  6EDA               	movwf	fsr2h,c
 14299  012AC6  0101               	movlb	1	; () banked
 14300  012AC8  514C               	movf	_myParent& (0+255),w,b
 14301  012ACA  0D09               	mullw	9
 14302  012ACC  0E46               	movlw	low _ConnectionTable
 14303  012ACE  24F3               	addwf	prodl,w,c
 14304  012AD0  6EE1               	movwf	fsr1l,c
 14305  012AD2  0E02               	movlw	high _ConnectionTable
 14306  012AD4  20F4               	addwfc	prodh,w,c
 14307  012AD6  6EE2               	movwf	fsr1h,c
 14308  012AD8  CFDE FFE6          	movff	postinc2,postinc1
 14309  012ADC  CFDD FFE5          	movff	postdec2,postdec1
 14310                           
 14311                           ; BSR set to: 1
 14312                           ;miwi_mesh.c: 4172: for(i = 0; i < 4; i++)
 14313  012AE0  0E00               	movlw	0
 14314  012AE2  0103               	movlb	3	; () banked
 14315  012AE4  6FF9               	movwf	MiApp_EstablishConnection@i& (0+255),b
 14316  012AE6                     l14323:
 14317                           
 14318                           ; BSR set to: 3
 14319  012AE6  0E03               	movlw	3
 14320  012AE8  0103               	movlb	3	; () banked
 14321  012AEA  65F9               	cpfsgt	MiApp_EstablishConnection@i& (0+255),b
 14322  012AEC  D001               	goto	l14327
 14323  012AEE  D041               	goto	l14333
 14324  012AF0                     l14327:
 14325                           
 14326                           ; BSR set to: 3
 14327                           ;miwi_mesh.c: 4173: {
 14328                           ;miwi_mesh.c: 4174: ConnectionTable[myParent].Address[i] = ActiveScanResults[ActiveScanI
      +                          ndex].Address[i];
 14329  012AF0  0103               	movlb	3	; () banked
 14330  012AF2  51F9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 14331  012AF4  0D01               	mullw	1
 14332  012AF6  0E01               	movlw	1
 14333  012AF8  26F3               	addwf	prodl,f,c
 14334  012AFA  0E00               	movlw	0
 14335  012AFC  22F4               	addwfc	prodh,f,c
 14336  012AFE  0E00               	movlw	low _ActiveScanResults
 14337  012B00  0103               	movlb	3	; () banked
 14338  012B02  6FE7               	movwf	??_MiApp_EstablishConnection& (0+255),b
 14339  012B04  0E03               	movlw	high _ActiveScanResults
 14340  012B06  0103               	movlb	3	; () banked
 14341  012B08  6FE8               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
 14342  012B0A  50F3               	movf	prodl,w,c
 14343  012B0C  0103               	movlb	3	; () banked
 14344  012B0E  27E7               	addwf	??_MiApp_EstablishConnection& (0+255),f,b
 14345  012B10  50F4               	movf	prodh,w,c
 14346  012B12  0103               	movlb	3	; () banked
 14347  012B14  23E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14348  012B16  0103               	movlb	3	; () banked
 14349  012B18  51F8               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14350  012B1A  0D0A               	mullw	10
 14351  012B1C  50F3               	movf	prodl,w,c
 14352  012B1E  0103               	movlb	3	; () banked
 14353  012B20  25E7               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 14354  012B22  6ED9               	movwf	fsr2l,c
 14355  012B24  50F4               	movf	prodh,w,c
 14356  012B26  0103               	movlb	3	; () banked
 14357  012B28  21E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 14358  012B2A  6EDA               	movwf	fsr2h,c
 14359  012B2C  0103               	movlb	3	; () banked
 14360  012B2E  51F9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
 14361  012B30  0D01               	mullw	1
 14362  012B32  0E04               	movlw	4
 14363  012B34  26F3               	addwf	prodl,f,c
 14364  012B36  0E00               	movlw	0
 14365  012B38  22F4               	addwfc	prodh,f,c
 14366  012B3A  0E46               	movlw	low _ConnectionTable
 14367  012B3C  0103               	movlb	3	; () banked
 14368  012B3E  6FE9               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
 14369  012B40  0E02               	movlw	high _ConnectionTable
 14370  012B42  0103               	movlb	3	; () banked
 14371  012B44  6FEA               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
 14372  012B46  50F3               	movf	prodl,w,c
 14373  012B48  0103               	movlb	3	; () banked
 14374  012B4A  27E9               	addwf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14375  012B4C  50F4               	movf	prodh,w,c
 14376  012B4E  0103               	movlb	3	; () banked
 14377  012B50  23EA               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14378  012B52  0101               	movlb	1	; () banked
 14379  012B54  514C               	movf	_myParent& (0+255),w,b
 14380  012B56  0D09               	mullw	9
 14381  012B58  50F3               	movf	prodl,w,c
 14382  012B5A  0103               	movlb	3	; () banked
 14383  012B5C  25E9               	addwf	(??_MiApp_EstablishConnection+2)& (0+255),w,b
 14384  012B5E  6EE1               	movwf	fsr1l,c
 14385  012B60  50F4               	movf	prodh,w,c
 14386  012B62  0103               	movlb	3	; () banked
 14387  012B64  21EA               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),w,b
 14388  012B66  6EE2               	movwf	fsr1h,c
 14389  012B68  CFDF FFE7          	movff	indf2,indf1
 14390                           
 14391                           ; BSR set to: 3
 14392  012B6C  0103               	movlb	3	; () banked
 14393  012B6E  2BF9               	incf	MiApp_EstablishConnection@i& (0+255),f,b
 14394  012B70  D7BA               	goto	l14323
 14395  012B72                     l14333:
 14396                           
 14397                           ; BSR set to: 3
 14398                           ;miwi_mesh.c: 4175: }
 14399                           ;miwi_mesh.c: 4176: ConnectionTable[myParent].status.bits.longAddressValid = 1;
 14400  012B72  0101               	movlb	1	; () banked
 14401  012B74  514C               	movf	_myParent& (0+255),w,b
 14402  012B76  0D09               	mullw	9
 14403  012B78  0E08               	movlw	8
 14404  012B7A  26F3               	addwf	prodl,f,c
 14405  012B7C  0E00               	movlw	0
 14406  012B7E  22F4               	addwfc	prodh,f,c
 14407  012B80  0E46               	movlw	low _ConnectionTable
 14408  012B82  24F3               	addwf	prodl,w,c
 14409  012B84  6ED9               	movwf	fsr2l,c
 14410  012B86  0E02               	movlw	high _ConnectionTable
 14411  012B88  20F4               	addwfc	prodh,w,c
 14412  012B8A  6EDA               	movwf	fsr2h,c
 14413  012B8C  0102               	movlb	2	; () banked
 14414  012B8E  84DF               	bsf	indf2,2,c
 14415                           
 14416                           ;miwi_mesh.c: 4185: ConnectionTable[myParent].status.bits.directConnection = 1;
 14417  012B90  0101               	movlb	1	; () banked
 14418  012B92  514C               	movf	_myParent& (0+255),w,b
 14419  012B94  0D09               	mullw	9
 14420  012B96  0E08               	movlw	8
 14421  012B98  26F3               	addwf	prodl,f,c
 14422  012B9A  0E00               	movlw	0
 14423  012B9C  22F4               	addwfc	prodh,f,c
 14424  012B9E  0E46               	movlw	low _ConnectionTable
 14425  012BA0  24F3               	addwf	prodl,w,c
 14426  012BA2  6ED9               	movwf	fsr2l,c
 14427  012BA4  0E02               	movlw	high _ConnectionTable
 14428  012BA6  20F4               	addwfc	prodh,w,c
 14429  012BA8  6EDA               	movwf	fsr2h,c
 14430  012BAA  0102               	movlb	2	; () banked
 14431  012BAC  82DF               	bsf	indf2,1,c
 14432                           
 14433                           ;miwi_mesh.c: 4186: ConnectionTable[myParent].status.bits.isFamily = 1;
 14434  012BAE  0101               	movlb	1	; () banked
 14435  012BB0  514C               	movf	_myParent& (0+255),w,b
 14436  012BB2  0D09               	mullw	9
 14437  012BB4  0E08               	movlw	8
 14438  012BB6  26F3               	addwf	prodl,f,c
 14439  012BB8  0E00               	movlw	0
 14440  012BBA  22F4               	addwfc	prodh,f,c
 14441  012BBC  0E46               	movlw	low _ConnectionTable
 14442  012BBE  24F3               	addwf	prodl,w,c
 14443  012BC0  6ED9               	movwf	fsr2l,c
 14444  012BC2  0E02               	movlw	high _ConnectionTable
 14445  012BC4  20F4               	addwfc	prodh,w,c
 14446  012BC6  6EDA               	movwf	fsr2h,c
 14447  012BC8  0102               	movlb	2	; () banked
 14448  012BCA  8ADF               	bsf	indf2,5,c
 14449                           
 14450                           ;miwi_mesh.c: 4187: ConnectionTable[myParent].status.bits.RXOnWhenIdle = 1;
 14451  012BCC  0101               	movlb	1	; () banked
 14452  012BCE  514C               	movf	_myParent& (0+255),w,b
 14453  012BD0  0D09               	mullw	9
 14454  012BD2  0E08               	movlw	8
 14455  012BD4  26F3               	addwf	prodl,f,c
 14456  012BD6  0E00               	movlw	0
 14457  012BD8  22F4               	addwfc	prodh,f,c
 14458  012BDA  0E46               	movlw	low _ConnectionTable
 14459  012BDC  24F3               	addwf	prodl,w,c
 14460  012BDE  6ED9               	movwf	fsr2l,c
 14461  012BE0  0E02               	movlw	high _ConnectionTable
 14462  012BE2  20F4               	addwfc	prodh,w,c
 14463  012BE4  6EDA               	movwf	fsr2h,c
 14464  012BE6  0102               	movlb	2	; () banked
 14465  012BE8  80DF               	bsf	indf2,0,c
 14466                           
 14467                           ; BSR set to: 2
 14468                           ;miwi_mesh.c: 4189: MiApp_SetChannel(ActiveScanResults[ActiveScanIndex].Channel);
 14469  012BEA  0103               	movlb	3	; () banked
 14470  012BEC  51F8               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 14471  012BEE  0D0A               	mullw	10
 14472  012BF0  0E00               	movlw	low _ActiveScanResults
 14473  012BF2  24F3               	addwf	prodl,w,c
 14474  012BF4  6ED9               	movwf	fsr2l,c
 14475  012BF6  0E03               	movlw	high _ActiveScanResults
 14476  012BF8  20F4               	addwfc	prodh,w,c
 14477  012BFA  6EDA               	movwf	fsr2h,c
 14478  012BFC  50DF               	movf	indf2,w,c
 14479  012BFE  EC8D  F0B7         	call	_MiApp_SetChannel
 14480                           
 14481                           ;miwi_mesh.c: 4192: myPANID.Val = ConnectionTable[myParent].PANID.Val;
 14482  012C02  0101               	movlb	1	; () banked
 14483  012C04  514C               	movf	_myParent& (0+255),w,b
 14484  012C06  0D09               	mullw	9
 14485  012C08  0E46               	movlw	low _ConnectionTable
 14486  012C0A  24F3               	addwf	prodl,w,c
 14487  012C0C  6ED9               	movwf	fsr2l,c
 14488  012C0E  0E02               	movlw	high _ConnectionTable
 14489  012C10  20F4               	addwfc	prodh,w,c
 14490  012C12  6EDA               	movwf	fsr2h,c
 14491  012C14  CFDE F183          	movff	postinc2,_myPANID
 14492  012C18  CFDD F184          	movff	postdec2,_myPANID+1
 14493                           
 14494                           ; BSR set to: 1
 14495                           ;miwi_mesh.c: 4193: tempShortAddress.Val = 0xFFFF;
 14496  012C1C  0101               	movlb	1	; () banked
 14497  012C1E  6987               	setf	_tempShortAddress& (0+255),b
 14498  012C20  6988               	setf	(_tempShortAddress+1)& (0+255),b
 14499                           
 14500                           ; BSR set to: 1
 14501                           ;miwi_mesh.c: 4194: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 14502  012C22  0E87               	movlw	low _tempShortAddress
 14503  012C24  0101               	movlb	1	; () banked
 14504  012C26  6F8A               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 14505  012C28  0E01               	movlw	high _tempShortAddress
 14506  012C2A  0101               	movlb	1	; () banked
 14507  012C2C  6F8B               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 14508  012C2E  0E83               	movlw	low _myPANID
 14509  012C30  0101               	movlb	1	; () banked
 14510  012C32  6F8C               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 14511  012C34  0E01               	movlw	high _myPANID
 14512  012C36  0101               	movlb	1	; () banked
 14513  012C38  6F8D               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 14514  012C3A  EC02  F0B8         	call	_MiMAC_SetAltAddress	;wreg free
 14515                           
 14516                           ;miwi_mesh.c: 4197: {TxData = 0;};
 14517  012C3E  0E00               	movlw	0
 14518  012C40  0101               	movlb	1	; () banked
 14519  012C42  6F46               	movwf	_TxData& (0+255),b
 14520                           
 14521                           ; BSR set to: 1
 14522                           ;miwi_mesh.c: 4198: TxBuffer[TxData++] = 0x01;
 14523  012C44  0101               	movlb	1	; () banked
 14524  012C46  5146               	movf	_TxData& (0+255),w,b
 14525  012C48  0D01               	mullw	1
 14526  012C4A  0E4E               	movlw	low _TxBuffer
 14527  012C4C  24F3               	addwf	prodl,w,c
 14528  012C4E  6ED9               	movwf	fsr2l,c
 14529  012C50  0E01               	movlw	high _TxBuffer
 14530  012C52  20F4               	addwfc	prodh,w,c
 14531  012C54  6EDA               	movwf	fsr2h,c
 14532  012C56  0E01               	movlw	1
 14533  012C58  6EDF               	movwf	indf2,c
 14534                           
 14535                           ; BSR set to: 1
 14536  012C5A  0101               	movlb	1	; () banked
 14537  012C5C  2B46               	incf	_TxData& (0+255),f,b
 14538                           
 14539                           ; BSR set to: 1
 14540                           ;miwi_mesh.c: 4199: TxBuffer[TxData++] = MiWiCapacityInfo.Val;
 14541  012C5E  0101               	movlb	1	; () banked
 14542  012C60  5146               	movf	_TxData& (0+255),w,b
 14543  012C62  0D01               	mullw	1
 14544  012C64  0E4E               	movlw	low _TxBuffer
 14545  012C66  24F3               	addwf	prodl,w,c
 14546  012C68  6ED9               	movwf	fsr2l,c
 14547  012C6A  0E01               	movlw	high _TxBuffer
 14548  012C6C  20F4               	addwfc	prodh,w,c
 14549  012C6E  6EDA               	movwf	fsr2h,c
 14550  012C70  C143  FFDF         	movff	_MiWiCapacityInfo,indf2
 14551                           
 14552                           ; BSR set to: 1
 14553  012C74  0101               	movlb	1	; () banked
 14554  012C76  2B46               	incf	_TxData& (0+255),f,b
 14555                           
 14556                           ; BSR set to: 1
 14557                           ;miwi_mesh.c: 4210: SendMACPacket(ConnectionTable[myParent].Address, 0x01);
 14558  012C78  0101               	movlb	1	; () banked
 14559  012C7A  514C               	movf	_myParent& (0+255),w,b
 14560  012C7C  0D09               	mullw	9
 14561  012C7E  0E04               	movlw	4
 14562  012C80  26F3               	addwf	prodl,f,c
 14563  012C82  0E00               	movlw	0
 14564  012C84  22F4               	addwfc	prodh,f,c
 14565  012C86  0E46               	movlw	low _ConnectionTable
 14566  012C88  24F3               	addwf	prodl,w,c
 14567  012C8A  0101               	movlb	1	; () banked
 14568  012C8C  6FC3               	movwf	SendMACPacket@Address& (0+255),b
 14569  012C8E  0E02               	movlw	high _ConnectionTable
 14570  012C90  20F4               	addwfc	prodh,w,c
 14571  012C92  0101               	movlb	1	; () banked
 14572  012C94  6FC4               	movwf	(SendMACPacket@Address+1)& (0+255),b
 14573  012C96  0E01               	movlw	1
 14574  012C98  0101               	movlb	1	; () banked
 14575  012C9A  6FC5               	movwf	SendMACPacket@PacketType& (0+255),b
 14576  012C9C  EC6A  F0B3         	call	_SendMACPacket	;wreg free
 14577                           
 14578                           ;miwi_mesh.c: 4213: t1 = MiWi_TickGet();
 14579  012CA0  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 14580  012CA4  C18A  F3EF         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
 14581  012CA8  C18B  F3F0         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
 14582  012CAC  C18C  F3F1         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
 14583  012CB0  C18D  F3F2         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
 14584                           
 14585                           ;miwi_mesh.c: 4214: while(ConnectionTable[myParent].status.bits.FinishJoin == 0 )
 14586  012CB4  D04A               	goto	l14369
 14587  012CB6                     l14357:
 14588                           
 14589                           ;miwi_mesh.c: 4215: {
 14590                           ;miwi_mesh.c: 4216: if( MiApp_MessageAvailable())
 14591  012CB6  ECE8  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 14592  012CBA  0900               	iorlw	0
 14593  012CBC  A4D8               	btfss	status,2,c
 14594                           
 14595                           ;miwi_mesh.c: 4217: {
 14596                           ;miwi_mesh.c: 4218: MiApp_DiscardMessage();
 14597  012CBE  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 14598                           
 14599                           ;miwi_mesh.c: 4219: }
 14600                           ;miwi_mesh.c: 4221: t2 = MiWi_TickGet();
 14601  012CC2  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 14602  012CC6  C18A  F3F3         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
 14603  012CCA  C18B  F3F4         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
 14604  012CCE  C18C  F3F5         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
 14605  012CD2  C18D  F3F6         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
 14606                           
 14607                           ;miwi_mesh.c: 4222: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32) )
 14608  012CD6  C3EF  F3E7         	movff	MiApp_EstablishConnection@t1,??_MiApp_EstablishConnection
 14609  012CDA  C3F0  F3E8         	movff	MiApp_EstablishConnection@t1+1,??_MiApp_EstablishConnection+1
 14610  012CDE  C3F1  F3E9         	movff	MiApp_EstablishConnection@t1+2,??_MiApp_EstablishConnection+2
 14611  012CE2  C3F2  F3EA         	movff	MiApp_EstablishConnection@t1+3,??_MiApp_EstablishConnection+3
 14612  012CE6  0103               	movlb	3	; () banked
 14613  012CE8  1FE7               	comf	??_MiApp_EstablishConnection& (0+255),f,b
 14614  012CEA  1FE8               	comf	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14615  012CEC  1FE9               	comf	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14616  012CEE  1FEA               	comf	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14617  012CF0  2BE7               	incf	??_MiApp_EstablishConnection& (0+255),f,b
 14618  012CF2  0E00               	movlw	0
 14619  012CF4  23E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),f,b
 14620  012CF6  23E9               	addwfc	(??_MiApp_EstablishConnection+2)& (0+255),f,b
 14621  012CF8  23EA               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),f,b
 14622  012CFA  0103               	movlb	3	; () banked
 14623  012CFC  51F3               	movf	MiApp_EstablishConnection@t2& (0+255),w,b
 14624  012CFE  0103               	movlb	3	; () banked
 14625  012D00  25E7               	addwf	??_MiApp_EstablishConnection& (0+255),w,b
 14626  012D02  0103               	movlb	3	; () banked
 14627  012D04  6FEB               	movwf	(??_MiApp_EstablishConnection+4)& (0+255),b
 14628  012D06  0103               	movlb	3	; () banked
 14629  012D08  51F4               	movf	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
 14630  012D0A  0103               	movlb	3	; () banked
 14631  012D0C  21E8               	addwfc	(??_MiApp_EstablishConnection+1)& (0+255),w,b
 14632  012D0E  0103               	movlb	3	; () banked
 14633  012D10  6FEC               	movwf	(??_MiApp_EstablishConnection+5)& (0+255),b
 14634  012D12  0103               	movlb	3	; () banked
 14635  012D14  51F5               	movf	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
 14636  012D16  0103               	movlb	3	; () banked
 14637  012D18  21E9               	addwfc	(??_MiApp_EstablishConnection+2)& (0+255),w,b
 14638  012D1A  0103               	movlb	3	; () banked
 14639  012D1C  6FED               	movwf	(??_MiApp_EstablishConnection+6)& (0+255),b
 14640  012D1E  0103               	movlb	3	; () banked
 14641  012D20  51F6               	movf	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
 14642  012D22  0103               	movlb	3	; () banked
 14643  012D24  21EA               	addwfc	(??_MiApp_EstablishConnection+3)& (0+255),w,b
 14644  012D26  0103               	movlb	3	; () banked
 14645  012D28  6FEE               	movwf	(??_MiApp_EstablishConnection+7)& (0+255),b
 14646  012D2A  0103               	movlb	3	; () banked
 14647  012D2C  51EE               	movf	(??_MiApp_EstablishConnection+7)& (0+255),w,b
 14648  012D2E  E10B               	bnz	u17090
 14649  012D30  0E21               	movlw	33
 14650  012D32  0103               	movlb	3	; () banked
 14651  012D34  5DEB               	subwf	(??_MiApp_EstablishConnection+4)& (0+255),w,b
 14652  012D36  0EA1               	movlw	161
 14653  012D38  0103               	movlb	3	; () banked
 14654  012D3A  59EC               	subwfb	(??_MiApp_EstablishConnection+5)& (0+255),w,b
 14655  012D3C  0E07               	movlw	7
 14656  012D3E  0103               	movlb	3	; () banked
 14657  012D40  59ED               	subwfb	(??_MiApp_EstablishConnection+6)& (0+255),w,b
 14658  012D42  A0D8               	btfss	status,0,c
 14659  012D44  D002               	goto	l14369
 14660  012D46                     u17090:
 14661                           
 14662                           ; BSR set to: 3
 14663                           ;miwi_mesh.c: 4223: {
 14664                           ;miwi_mesh.c: 4224: return 0xFF;
 14665  012D46  0EFF               	movlw	255
 14666                           
 14667                           ; BSR set to: 3
 14668  012D48  0012               	return	
 14669  012D4A                     l14369:
 14670  012D4A  0101               	movlb	1	; () banked
 14671  012D4C  514C               	movf	_myParent& (0+255),w,b
 14672  012D4E  0D09               	mullw	9
 14673  012D50  0E08               	movlw	8
 14674  012D52  26F3               	addwf	prodl,f,c
 14675  012D54  0E00               	movlw	0
 14676  012D56  22F4               	addwfc	prodh,f,c
 14677  012D58  0E46               	movlw	low _ConnectionTable
 14678  012D5A  24F3               	addwf	prodl,w,c
 14679  012D5C  6ED9               	movwf	fsr2l,c
 14680  012D5E  0E02               	movlw	high _ConnectionTable
 14681  012D60  20F4               	addwfc	prodh,w,c
 14682  012D62  6EDA               	movwf	fsr2h,c
 14683  012D64  0102               	movlb	2	; () banked
 14684  012D66  A8DF               	btfss	indf2,4,c
 14685  012D68  D7A6               	goto	l14357
 14686                           
 14687                           ; BSR set to: 2
 14688                           ;miwi_mesh.c: 4225: }
 14689                           ;miwi_mesh.c: 4226: }
 14690                           ;miwi_mesh.c: 4231: return myParent;
 14691                           
 14692                           ; BSR set to: 2
 14693  012D6A  0101               	movlb	1	; () banked
 14694  012D6C  514C               	movf	_myParent& (0+255),w,b
 14695                           
 14696                           ; BSR set to: 1
 14697  012D6E  0012               	return	
 14698  012D70                     l14375:
 14699                           
 14700                           ; BSR set to: 1
 14701                           ;miwi_mesh.c: 4232: }
 14702                           ;miwi_mesh.c: 4233: return 0xFF;
 14703  012D70  0EFF               	movlw	255
 14704  012D72  0012               	return	
 14705  012D74                     __end_of_MiApp_EstablishConnection:
 14706                           	opt stack 0
 14707                           tblptru	equ	0xFF8
 14708                           tblptrh	equ	0xFF7
 14709                           tblptrl	equ	0xFF6
 14710                           tablat	equ	0xFF5
 14711                           prodh	equ	0xFF4
 14712                           prodl	equ	0xFF3
 14713                           intcon	equ	0xFF2
 14714                           intcon2	equ	0xFF1
 14715                           intcon3	equ	0xFF0
 14716                           indf0	equ	0xFEF
 14717                           postinc0	equ	0xFEE
 14718                           plusw0	equ	0xFEB
 14719                           fsr0h	equ	0xFEA
 14720                           fsr0l	equ	0xFE9
 14721                           wreg	equ	0xFE8
 14722                           indf1	equ	0xFE7
 14723                           postinc1	equ	0xFE6
 14724                           postdec1	equ	0xFE5
 14725                           fsr1h	equ	0xFE2
 14726                           fsr1l	equ	0xFE1
 14727                           indf2	equ	0xFDF
 14728                           postinc2	equ	0xFDE
 14729                           postdec2	equ	0xFDD
 14730                           plusw2	equ	0xFDB
 14731                           fsr2h	equ	0xFDA
 14732                           fsr2l	equ	0xFD9
 14733                           status	equ	0xFD8
 14734                           
 14735 ;; *************** function _OpenSocket *****************
 14736 ;; Defined at:
 14737 ;;		line 2959 in file "src/miwi/miwi_mesh.c"
 14738 ;; Parameters:    Size  Location     Type
 14739 ;;		None
 14740 ;; Auto vars:     Size  Location     Type
 14741 ;;  i               1  112[BANK1 ] unsigned char 
 14742 ;; Return value:  Size  Location     Type
 14743 ;;		None               void
 14744 ;; Registers used:
 14745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14746 ;; Tracked objects:
 14747 ;;		On entry : 0/0
 14748 ;;		On exit  : 0/0
 14749 ;;		Unchanged: 0/0
 14750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14752 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14754 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14755 ;;Total ram usage:        1 bytes
 14756 ;; Hardware stack levels used:    1
 14757 ;; Hardware stack levels required when called:   17
 14758 ;; This function calls:
 14759 ;;		_MiApp_UnicastAddress
 14760 ;;		_MiWi_TickGet
 14761 ;; This function is called by:
 14762 ;;		_MiApp_EstablishConnection
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           	psect	text49
 14767  015D48                     __ptext49:
 14768                           	opt stack 0
 14769  015D48                     _OpenSocket:
 14770                           	opt stack 12
 14771                           
 14772                           ;miwi_mesh.c: 2961: uint8_t i;
 14773                           ;miwi_mesh.c: 2963: openSocketInfo.status.bits.matchFound = 0;
 14774                           
 14775                           ;incstack = 0
 14776  015D48  0101               	movlb	1	; () banked
 14777  015D4A  9100               	bcf	_openSocketInfo& (0+255),0,b
 14778                           
 14779                           ; BSR set to: 1
 14780                           ;miwi_mesh.c: 3069: openSocketInfo.socketStart = MiWi_TickGet();
 14781  015D4C  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 14782  015D50  C18A  F108         	movff	?_MiWi_TickGet,_openSocketInfo+8
 14783  015D54  C18B  F109         	movff	?_MiWi_TickGet+1,_openSocketInfo+9
 14784  015D58  C18C  F10A         	movff	?_MiWi_TickGet+2,_openSocketInfo+10
 14785  015D5C  C18D  F10B         	movff	?_MiWi_TickGet+3,_openSocketInfo+11
 14786                           
 14787                           ;miwi_mesh.c: 3072: tempShortAddress.Val = 0x0000;
 14788  015D60  0E00               	movlw	0
 14789  015D62  0101               	movlb	1	; () banked
 14790  015D64  6F88               	movwf	(_tempShortAddress+1)& (0+255),b
 14791  015D66  0E00               	movlw	0
 14792  015D68  6F87               	movwf	_tempShortAddress& (0+255),b
 14793                           
 14794                           ; BSR set to: 1
 14795                           ;miwi_mesh.c: 3074: {TxData = 11;};
 14796  015D6A  0E0B               	movlw	11
 14797  015D6C  0101               	movlb	1	; () banked
 14798  015D6E  6F46               	movwf	_TxData& (0+255),b
 14799                           
 14800                           ; BSR set to: 1
 14801                           ;miwi_mesh.c: 3075: TxBuffer[TxData++] = 0x00;
 14802  015D70  0101               	movlb	1	; () banked
 14803  015D72  5146               	movf	_TxData& (0+255),w,b
 14804  015D74  0D01               	mullw	1
 14805  015D76  0E4E               	movlw	low _TxBuffer
 14806  015D78  24F3               	addwf	prodl,w,c
 14807  015D7A  6ED9               	movwf	fsr2l,c
 14808  015D7C  0E01               	movlw	high _TxBuffer
 14809  015D7E  20F4               	addwfc	prodh,w,c
 14810  015D80  6EDA               	movwf	fsr2h,c
 14811  015D82  0E00               	movlw	0
 14812  015D84  6EDF               	movwf	indf2,c
 14813                           
 14814                           ; BSR set to: 1
 14815  015D86  0101               	movlb	1	; () banked
 14816  015D88  2B46               	incf	_TxData& (0+255),f,b
 14817                           
 14818                           ; BSR set to: 1
 14819                           ;miwi_mesh.c: 3076: TxBuffer[TxData++] = 0x10;
 14820  015D8A  0101               	movlb	1	; () banked
 14821  015D8C  5146               	movf	_TxData& (0+255),w,b
 14822  015D8E  0D01               	mullw	1
 14823  015D90  0E4E               	movlw	low _TxBuffer
 14824  015D92  24F3               	addwf	prodl,w,c
 14825  015D94  6ED9               	movwf	fsr2l,c
 14826  015D96  0E01               	movlw	high _TxBuffer
 14827  015D98  20F4               	addwfc	prodh,w,c
 14828  015D9A  6EDA               	movwf	fsr2h,c
 14829  015D9C  0E10               	movlw	16
 14830  015D9E  6EDF               	movwf	indf2,c
 14831                           
 14832                           ; BSR set to: 1
 14833  015DA0  0101               	movlb	1	; () banked
 14834  015DA2  2B46               	incf	_TxData& (0+255),f,b
 14835                           
 14836                           ; BSR set to: 1
 14837                           ;miwi_mesh.c: 3077: for(i = 0; i < 4; i++)
 14838  015DA4  0E00               	movlw	0
 14839  015DA6  0101               	movlb	1	; () banked
 14840  015DA8  6FFA               	movwf	OpenSocket@i& (0+255),b
 14841  015DAA                     l13271:
 14842                           
 14843                           ; BSR set to: 1
 14844  015DAA  0E03               	movlw	3
 14845  015DAC  0101               	movlb	1	; () banked
 14846  015DAE  65FA               	cpfsgt	OpenSocket@i& (0+255),b
 14847  015DB0  D001               	goto	l13275
 14848  015DB2  D019               	goto	l13283
 14849  015DB4                     l13275:
 14850                           
 14851                           ; BSR set to: 1
 14852                           ;miwi_mesh.c: 3078: {
 14853                           ;miwi_mesh.c: 3079: TxBuffer[TxData++] = myLongAddress[i];
 14854  015DB4  0101               	movlb	1	; () banked
 14855  015DB6  51FA               	movf	OpenSocket@i& (0+255),w,b
 14856  015DB8  0D01               	mullw	1
 14857  015DBA  0EC8               	movlw	low _myLongAddress
 14858  015DBC  24F3               	addwf	prodl,w,c
 14859  015DBE  6ED9               	movwf	fsr2l,c
 14860  015DC0  0E00               	movlw	high _myLongAddress
 14861  015DC2  20F4               	addwfc	prodh,w,c
 14862  015DC4  6EDA               	movwf	fsr2h,c
 14863  015DC6  0101               	movlb	1	; () banked
 14864  015DC8  5146               	movf	_TxData& (0+255),w,b
 14865  015DCA  0D01               	mullw	1
 14866  015DCC  0E4E               	movlw	low _TxBuffer
 14867  015DCE  24F3               	addwf	prodl,w,c
 14868  015DD0  6EE1               	movwf	fsr1l,c
 14869  015DD2  0E01               	movlw	high _TxBuffer
 14870  015DD4  20F4               	addwfc	prodh,w,c
 14871  015DD6  6EE2               	movwf	fsr1h,c
 14872  015DD8  CFDF FFE7          	movff	indf2,indf1
 14873                           
 14874                           ; BSR set to: 1
 14875  015DDC  0101               	movlb	1	; () banked
 14876  015DDE  2B46               	incf	_TxData& (0+255),f,b
 14877                           
 14878                           ; BSR set to: 1
 14879  015DE0  0101               	movlb	1	; () banked
 14880  015DE2  2BFA               	incf	OpenSocket@i& (0+255),f,b
 14881  015DE4  D7E2               	goto	l13271
 14882  015DE6                     l13283:
 14883                           
 14884                           ; BSR set to: 1
 14885                           ;miwi_mesh.c: 3080: }
 14886                           ;miwi_mesh.c: 3088: MiApp_UnicastAddress(tempShortAddress.v, 0, 0);
 14887  015DE6  0E87               	movlw	low _tempShortAddress
 14888  015DE8  0101               	movlb	1	; () banked
 14889  015DEA  6FEE               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
 14890  015DEC  0E01               	movlw	high _tempShortAddress
 14891  015DEE  0101               	movlb	1	; () banked
 14892  015DF0  6FEF               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
 14893  015DF2  0E00               	movlw	0
 14894  015DF4  0101               	movlb	1	; () banked
 14895  015DF6  6FF0               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 14896  015DF8  0E00               	movlw	0
 14897  015DFA  0101               	movlb	1	; () banked
 14898  015DFC  6FF1               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
 14899  015DFE  EC50  F092         	call	_MiApp_UnicastAddress	;wreg free
 14900                           
 14901                           ;miwi_mesh.c: 3090: openSocketInfo.status.bits.requestIsOpen = 1;
 14902  015E02  0101               	movlb	1	; () banked
 14903  015E04  8300               	bsf	_openSocketInfo& (0+255),1,b
 14904                           
 14905                           ; BSR set to: 1
 14906  015E06  0012               	return		;funcret
 14907  015E08                     __end_of_OpenSocket:
 14908                           	opt stack 0
 14909                           tblptru	equ	0xFF8
 14910                           tblptrh	equ	0xFF7
 14911                           tblptrl	equ	0xFF6
 14912                           tablat	equ	0xFF5
 14913                           prodh	equ	0xFF4
 14914                           prodl	equ	0xFF3
 14915                           intcon	equ	0xFF2
 14916                           intcon2	equ	0xFF1
 14917                           intcon3	equ	0xFF0
 14918                           indf0	equ	0xFEF
 14919                           postinc0	equ	0xFEE
 14920                           plusw0	equ	0xFEB
 14921                           fsr0h	equ	0xFEA
 14922                           fsr0l	equ	0xFE9
 14923                           wreg	equ	0xFE8
 14924                           indf1	equ	0xFE7
 14925                           postinc1	equ	0xFE6
 14926                           postdec1	equ	0xFE5
 14927                           fsr1h	equ	0xFE2
 14928                           fsr1l	equ	0xFE1
 14929                           indf2	equ	0xFDF
 14930                           postinc2	equ	0xFDE
 14931                           postdec2	equ	0xFDD
 14932                           plusw2	equ	0xFDB
 14933                           fsr2h	equ	0xFDA
 14934                           fsr2l	equ	0xFD9
 14935                           status	equ	0xFD8
 14936                           
 14937 ;; *************** function _MiApp_UnicastAddress *****************
 14938 ;; Defined at:
 14939 ;;		line 4565 in file "src/miwi/miwi_mesh.c"
 14940 ;; Parameters:    Size  Location     Type
 14941 ;;  DestAddress     2  100[BANK1 ] PTR unsigned char 
 14942 ;;		 -> do_UPDATE@shortaddress(2), do_POWER_TEST@shortaddress(2), do_NETWORK_REGISTER@shortaddress(2), tempShortAddress(
      +2), 
 14943 ;;  PermanentAdd    1  102[BANK1 ] unsigned char 
 14944 ;;  SecEn           1  103[BANK1 ] unsigned char 
 14945 ;; Auto vars:     Size  Location     Type
 14946 ;;  t2              4    4[BANK3 ] struct _MIWI_TICK
 14947 ;;  t1              4    0[BANK3 ] struct _MIWI_TICK
 14948 ;;  t2              4   12[BANK3 ] struct _MIWI_TICK
 14949 ;;  t1              4    8[BANK3 ] struct _MIWI_TICK
 14950 ;;  handle          1   18[BANK3 ] unsigned char 
 14951 ;;  i               1   17[BANK3 ] unsigned char 
 14952 ;;  MiWiFrameCon    1   16[BANK3 ] unsigned char 
 14953 ;; Return value:  Size  Location     Type
 14954 ;;                  1    wreg      unsigned char 
 14955 ;; Registers used:
 14956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14957 ;; Tracked objects:
 14958 ;;		On entry : 0/0
 14959 ;;		On exit  : 0/0
 14960 ;;		Unchanged: 0/0
 14961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14962 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14963 ;;      Locals:         0       0       0       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 14964 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14965 ;;      Totals:         0       0      12       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 14966 ;;Total ram usage:       31 bytes
 14967 ;; Hardware stack levels used:    1
 14968 ;; Hardware stack levels required when called:   16
 14969 ;; This function calls:
 14970 ;;		_MiApp_DiscardMessage
 14971 ;;		_MiApp_MessageAvailable
 14972 ;;		_MiMAC_SendPacket
 14973 ;;		_MiWi_TickGet
 14974 ;;		_SearchForLongAddress
 14975 ;; This function is called by:
 14976 ;;		_OpenSocket
 14977 ;;		_do_NETWORK_REGISTER
 14978 ;;		_do_POWER_TEST
 14979 ;;		_do_UPDATE
 14980 ;;		_do_PING
 14981 ;; This function uses a non-reentrant model
 14982 ;;
 14983                           
 14984                           	psect	text50
 14985  0124A0                     __ptext50:
 14986                           	opt stack 0
 14987  0124A0                     _MiApp_UnicastAddress:
 14988                           	opt stack 12
 14989                           
 14990                           ;miwi_mesh.c: 4567: uint8_t handle;
 14991                           ;miwi_mesh.c: 4568: uint8_t i;
 14992                           ;miwi_mesh.c: 4569: uint8_t MiWiFrameControl;
 14993                           ;miwi_mesh.c: 4571: if( MiWiAckRequired && TxBuffer[11])
 14994                           
 14995                           ; BSR set to: 1
 14996                           ;incstack = 0
 14997  0124A0  0100               	movlb	0	; () banked
 14998  0124A2  51B5               	movf	_MiWiAckRequired& (0+255),w,b
 14999  0124A4  B4D8               	btfsc	status,2,c
 15000  0124A6  D00C               	goto	l12305
 15001                           
 15002                           ; BSR set to: 0
 15003  0124A8  0101               	movlb	1	; () banked
 15004  0124AA  5159               	movf	(_TxBuffer+11)& (0+255),w,b
 15005  0124AC  B4D8               	btfsc	status,2,c
 15006  0124AE  D008               	goto	l12305
 15007                           
 15008                           ; BSR set to: 1
 15009                           ;miwi_mesh.c: 4572: {
 15010                           ;miwi_mesh.c: 4573: MiWiStateMachine.bits.MiWiAckInProgress = 1;
 15011  0124B0  0101               	movlb	1	; () banked
 15012  0124B2  8738               	bsf	_MiWiStateMachine& (0+255),3,b
 15013                           
 15014                           ;miwi_mesh.c: 4574: AcknowledgementSeq = MiWiSeqNum;
 15015  0124B4  C0B6  F1FD         	movff	_MiWiSeqNum,_AcknowledgementSeq
 15016                           
 15017                           ; BSR set to: 1
 15018                           ;miwi_mesh.c: 4575: MiWiFrameControl = 0x06;
 15019  0124B8  0E06               	movlw	6
 15020  0124BA  0103               	movlb	3	; () banked
 15021  0124BC  6FE4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 15022                           
 15023                           ;miwi_mesh.c: 4576: }
 15024  0124BE  D005               	goto	l829
 15025  0124C0                     l12305:
 15026                           
 15027                           ;miwi_mesh.c: 4577: else
 15028                           ;miwi_mesh.c: 4578: {
 15029                           ;miwi_mesh.c: 4579: MiWiFrameControl = 0x02;
 15030  0124C0  0E02               	movlw	2
 15031  0124C2  0103               	movlb	3	; () banked
 15032  0124C4  6FE4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 15033                           
 15034                           ; BSR set to: 3
 15035                           ;miwi_mesh.c: 4580: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15036  0124C6  0101               	movlb	1	; () banked
 15037  0124C8  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15038  0124CA                     l829:
 15039                           
 15040                           ;miwi_mesh.c: 4581: }
 15041                           ;miwi_mesh.c: 4583: if( PermanentAddr )
 15042  0124CA  0101               	movlb	1	; () banked
 15043  0124CC  51F0               	movf	MiApp_UnicastAddress@PermanentAddr& (0+255),w,b
 15044  0124CE  0101               	movlb	1	; () banked
 15045  0124D0  B4D8               	btfsc	status,2,c
 15046  0124D2  D16B               	goto	l12437
 15047                           
 15048                           ; BSR set to: 1
 15049                           ;miwi_mesh.c: 4584: {
 15050                           ;miwi_mesh.c: 4585: for(i = 0; i < 4; i++)
 15051  0124D4  0E00               	movlw	0
 15052  0124D6  0103               	movlb	3	; () banked
 15053  0124D8  6FE5               	movwf	MiApp_UnicastAddress@i& (0+255),b
 15054  0124DA                     l12311:
 15055                           
 15056                           ; BSR set to: 3
 15057  0124DA  0E03               	movlw	3
 15058  0124DC  0103               	movlb	3	; () banked
 15059  0124DE  65E5               	cpfsgt	MiApp_UnicastAddress@i& (0+255),b
 15060  0124E0  D001               	goto	l12315
 15061  0124E2  D019               	goto	l12321
 15062  0124E4                     l12315:
 15063                           
 15064                           ; BSR set to: 3
 15065                           ;miwi_mesh.c: 4586: {
 15066                           ;miwi_mesh.c: 4587: tempLongAddress[i] = DestAddress[i];
 15067  0124E4  0103               	movlb	3	; () banked
 15068  0124E6  51E5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 15069  0124E8  0D01               	mullw	1
 15070  0124EA  50F3               	movf	prodl,w,c
 15071  0124EC  0101               	movlb	1	; () banked
 15072  0124EE  25EE               	addwf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 15073  0124F0  6ED9               	movwf	fsr2l,c
 15074  0124F2  50F4               	movf	prodh,w,c
 15075  0124F4  0101               	movlb	1	; () banked
 15076  0124F6  21EF               	addwfc	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 15077  0124F8  6EDA               	movwf	fsr2h,c
 15078  0124FA  0103               	movlb	3	; () banked
 15079  0124FC  51E5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 15080  0124FE  0D01               	mullw	1
 15081  012500  0E26               	movlw	low _tempLongAddress
 15082  012502  24F3               	addwf	prodl,w,c
 15083  012504  6EE1               	movwf	fsr1l,c
 15084  012506  0E01               	movlw	high _tempLongAddress
 15085  012508  20F4               	addwfc	prodh,w,c
 15086  01250A  6EE2               	movwf	fsr1h,c
 15087  01250C  CFDF FFE7          	movff	indf2,indf1
 15088                           
 15089                           ; BSR set to: 3
 15090  012510  0103               	movlb	3	; () banked
 15091  012512  2BE5               	incf	MiApp_UnicastAddress@i& (0+255),f,b
 15092  012514  D7E2               	goto	l12311
 15093  012516                     l12321:
 15094                           
 15095                           ; BSR set to: 3
 15096                           ;miwi_mesh.c: 4588: }
 15097                           ;miwi_mesh.c: 4589: if( (handle = SearchForLongAddress()) == 0xFF )
 15098  012516  EC77  F0AD         	call	_SearchForLongAddress	;wreg free
 15099  01251A  0103               	movlb	3	; () banked
 15100  01251C  6FE6               	movwf	MiApp_UnicastAddress@handle& (0+255),b
 15101  01251E  0103               	movlb	3	; () banked
 15102  012520  29E6               	incf	MiApp_UnicastAddress@handle& (0+255),w,b
 15103  012522  A4D8               	btfss	status,2,c
 15104  012524  D03D               	goto	l12361
 15105  012526                     l834:
 15106                           
 15107                           ;miwi_mesh.c: 4593: TxBuffer[0] = defaultHops;
 15108  012526  C1FE  F14E         	movff	_defaultHops,_TxBuffer
 15109                           
 15110                           ;miwi_mesh.c: 4594: TxBuffer[1] = 0x02;
 15111  01252A  0E02               	movlw	2
 15112  01252C  0101               	movlb	1	; () banked
 15113  01252E  6F4F               	movwf	(_TxBuffer+1)& (0+255),b
 15114                           
 15115                           ; BSR set to: 1
 15116                           ;miwi_mesh.c: 4595: TxBuffer[2] = 0xFF;
 15117  012530  0101               	movlb	1	; () banked
 15118  012532  6950               	setf	(_TxBuffer+2)& (0+255),b
 15119                           
 15120                           ; BSR set to: 1
 15121                           ;miwi_mesh.c: 4596: TxBuffer[3] = 0xFF;
 15122  012534  0101               	movlb	1	; () banked
 15123  012536  6951               	setf	(_TxBuffer+3)& (0+255),b
 15124                           
 15125                           ; BSR set to: 1
 15126                           ;miwi_mesh.c: 4597: TxBuffer[4] = 0xFF;
 15127  012538  0101               	movlb	1	; () banked
 15128  01253A  6952               	setf	(_TxBuffer+4)& (0+255),b
 15129                           
 15130                           ; BSR set to: 1
 15131                           ;miwi_mesh.c: 4598: TxBuffer[5] = 0xFF;
 15132  01253C  0101               	movlb	1	; () banked
 15133  01253E  6953               	setf	(_TxBuffer+5)& (0+255),b
 15134                           
 15135                           ; BSR set to: 1
 15136                           ;miwi_mesh.c: 4599: TxBuffer[6] = myPANID.v[0];
 15137  012540  C183  F154         	movff	_myPANID,_TxBuffer+6
 15138                           
 15139                           ; BSR set to: 1
 15140                           ;miwi_mesh.c: 4600: TxBuffer[7] = myPANID.v[1];
 15141  012544  C184  F155         	movff	_myPANID+1,_TxBuffer+7
 15142                           
 15143                           ; BSR set to: 1
 15144                           ;miwi_mesh.c: 4601: TxBuffer[8] = myShortAddress.v[0];
 15145  012548  C185  F156         	movff	_myShortAddress,_TxBuffer+8
 15146                           
 15147                           ; BSR set to: 1
 15148                           ;miwi_mesh.c: 4602: TxBuffer[9] = myShortAddress.v[1];
 15149  01254C  C186  F157         	movff	_myShortAddress+1,_TxBuffer+9
 15150                           
 15151                           ; BSR set to: 1
 15152                           ;miwi_mesh.c: 4603: TxBuffer[10] = MiWiSeqNum++;
 15153  012550  C0B6  F158         	movff	_MiWiSeqNum,_TxBuffer+10
 15154                           
 15155                           ; BSR set to: 1
 15156  012554  0100               	movlb	0	; () banked
 15157  012556  2BB6               	incf	_MiWiSeqNum& (0+255),f,b
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;miwi_mesh.c: 4616: MTP.flags.Val = 0;
 15161  012558  0E00               	movlw	0
 15162  01255A  0101               	movlb	1	; () banked
 15163  01255C  6F2A               	movwf	_MTP& (0+255),b
 15164                           
 15165                           ; BSR set to: 1
 15166                           ;miwi_mesh.c: 4617: MTP.flags.bits.ackReq = 1;
 15167  01255E  0101               	movlb	1	; () banked
 15168  012560  8B2A               	bsf	_MTP& (0+255),5,b
 15169                           
 15170                           ; BSR set to: 1
 15171                           ;miwi_mesh.c: 4618: MTP.flags.bits.secEn = SecEn;
 15172  012562  0101               	movlb	1	; () banked
 15173  012564  B1F1               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 15174  012566  D003               	bra	u14475
 15175  012568  0101               	movlb	1	; () banked
 15176  01256A  972A               	bcf	_MTP& (0+255),3,b
 15177  01256C  D002               	bra	u14476
 15178  01256E                     u14475:
 15179  01256E  0101               	movlb	1	; () banked
 15180  012570  872A               	bsf	_MTP& (0+255),3,b
 15181  012572                     u14476:
 15182                           
 15183                           ; BSR set to: 1
 15184                           ;miwi_mesh.c: 4619: MTP.DestAddress = DestAddress;
 15185  012572  C1EE  F12B         	movff	MiApp_UnicastAddress@DestAddress,_MTP+1
 15186  012576  C1EF  F12C         	movff	MiApp_UnicastAddress@DestAddress+1,_MTP+2
 15187                           
 15188                           ; BSR set to: 1
 15189                           ;miwi_mesh.c: 4625: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15190  01257A  0101               	movlb	1	; () banked
 15191  01257C  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15192                           
 15193                           ; BSR set to: 1
 15194                           ;miwi_mesh.c: 4627: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 15195  01257E  C12A  F1B9         	movff	_MTP,MiMAC_SendPacket@transParam
 15196  012582  C12B  F1BA         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15197  012586  C12C  F1BB         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15198  01258A  0E4E               	movlw	low _TxBuffer
 15199  01258C  0101               	movlb	1	; () banked
 15200  01258E  6FBC               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15201  012590  0E01               	movlw	high _TxBuffer
 15202  012592  0101               	movlb	1	; () banked
 15203  012594  6FBD               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15204  012596  C146  F1BE         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15205  01259A  ECCF  F09A         	call	_MiMAC_SendPacket	;wreg free
 15206  01259E  0012               	return	
 15207  0125A0                     l12361:
 15208                           
 15209                           ;miwi_mesh.c: 4629: else
 15210                           ;miwi_mesh.c: 4630: {
 15211                           ;miwi_mesh.c: 4631: if( ConnectionTable[handle].status.bits.shortAddressValid == 0 )
 15212  0125A0  0103               	movlb	3	; () banked
 15213  0125A2  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15214  0125A4  0D09               	mullw	9
 15215  0125A6  0E08               	movlw	8
 15216  0125A8  26F3               	addwf	prodl,f,c
 15217  0125AA  0E00               	movlw	0
 15218  0125AC  22F4               	addwfc	prodh,f,c
 15219  0125AE  0E46               	movlw	low _ConnectionTable
 15220  0125B0  24F3               	addwf	prodl,w,c
 15221  0125B2  6ED9               	movwf	fsr2l,c
 15222  0125B4  0E02               	movlw	high _ConnectionTable
 15223  0125B6  20F4               	addwfc	prodh,w,c
 15224  0125B8  6EDA               	movwf	fsr2h,c
 15225  0125BA  0102               	movlb	2	; () banked
 15226  0125BC  A6DF               	btfss	indf2,3,c
 15227  0125BE  D7B3               	goto	l834
 15228                           
 15229                           ; BSR set to: 2
 15230                           ;miwi_mesh.c: 4634: }
 15231                           ;miwi_mesh.c: 4636: if( MiWiAckRequired )
 15232                           
 15233                           ; BSR set to: 2
 15234                           
 15235                           ; BSR set to: 2
 15236                           ;miwi_mesh.c: 4632: {
 15237                           ;miwi_mesh.c: 4633: goto DIRECT_LONG_ADDRESS;
 15238  0125C0  0100               	movlb	0	; () banked
 15239  0125C2  51B5               	movf	_MiWiAckRequired& (0+255),w,b
 15240  0125C4  B4D8               	btfsc	status,2,c
 15241  0125C6  D011               	goto	l12369
 15242                           
 15243                           ; BSR set to: 0
 15244                           ;miwi_mesh.c: 4637: {
 15245                           ;miwi_mesh.c: 4638: AcknowledgementAddr.Val = ConnectionTable[handle].AltAddress.Val;
 15246  0125C8  0103               	movlb	3	; () banked
 15247  0125CA  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15248  0125CC  0D09               	mullw	9
 15249  0125CE  0E02               	movlw	2
 15250  0125D0  26F3               	addwf	prodl,f,c
 15251  0125D2  0E00               	movlw	0
 15252  0125D4  22F4               	addwfc	prodh,f,c
 15253  0125D6  0E46               	movlw	low _ConnectionTable
 15254  0125D8  24F3               	addwf	prodl,w,c
 15255  0125DA  6ED9               	movwf	fsr2l,c
 15256  0125DC  0E02               	movlw	high _ConnectionTable
 15257  0125DE  20F4               	addwfc	prodh,w,c
 15258  0125E0  6EDA               	movwf	fsr2h,c
 15259  0125E2  CFDE F136          	movff	postinc2,_AcknowledgementAddr
 15260  0125E6  CFDD F137          	movff	postdec2,_AcknowledgementAddr+1
 15261  0125EA                     l12369:
 15262                           
 15263                           ;miwi_mesh.c: 4639: }
 15264                           ;miwi_mesh.c: 4641: TxBuffer[0] = 4;
 15265  0125EA  0E04               	movlw	4
 15266  0125EC  0101               	movlb	1	; () banked
 15267  0125EE  6F4E               	movwf	_TxBuffer& (0+255),b
 15268                           
 15269                           ; BSR set to: 1
 15270                           ;miwi_mesh.c: 4642: TxBuffer[1] = MiWiFrameControl;
 15271  0125F0  C3E4  F14F         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 15272                           
 15273                           ; BSR set to: 1
 15274                           ;miwi_mesh.c: 4643: TxBuffer[2] = ConnectionTable[handle].PANID.v[0];
 15275  0125F4  0103               	movlb	3	; () banked
 15276  0125F6  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15277  0125F8  0D09               	mullw	9
 15278  0125FA  0E46               	movlw	low _ConnectionTable
 15279  0125FC  24F3               	addwf	prodl,w,c
 15280  0125FE  6ED9               	movwf	fsr2l,c
 15281  012600  0E02               	movlw	high _ConnectionTable
 15282  012602  20F4               	addwfc	prodh,w,c
 15283  012604  6EDA               	movwf	fsr2h,c
 15284  012606  50DF               	movf	indf2,w,c
 15285  012608  0101               	movlb	1	; () banked
 15286  01260A  6F50               	movwf	(_TxBuffer+2)& (0+255),b
 15287                           
 15288                           ; BSR set to: 1
 15289                           ;miwi_mesh.c: 4644: TxBuffer[3] = ConnectionTable[handle].PANID.v[1];
 15290  01260C  0103               	movlb	3	; () banked
 15291  01260E  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15292  012610  0D09               	mullw	9
 15293  012612  0E01               	movlw	1
 15294  012614  26F3               	addwf	prodl,f,c
 15295  012616  0E00               	movlw	0
 15296  012618  22F4               	addwfc	prodh,f,c
 15297  01261A  0E46               	movlw	low _ConnectionTable
 15298  01261C  24F3               	addwf	prodl,w,c
 15299  01261E  6ED9               	movwf	fsr2l,c
 15300  012620  0E02               	movlw	high _ConnectionTable
 15301  012622  20F4               	addwfc	prodh,w,c
 15302  012624  6EDA               	movwf	fsr2h,c
 15303  012626  50DF               	movf	indf2,w,c
 15304  012628  0101               	movlb	1	; () banked
 15305  01262A  6F51               	movwf	(_TxBuffer+3)& (0+255),b
 15306                           
 15307                           ; BSR set to: 1
 15308                           ;miwi_mesh.c: 4645: TxBuffer[4] = ConnectionTable[handle].AltAddress.v[0];
 15309  01262C  0103               	movlb	3	; () banked
 15310  01262E  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15311  012630  0D09               	mullw	9
 15312  012632  0E02               	movlw	2
 15313  012634  26F3               	addwf	prodl,f,c
 15314  012636  0E00               	movlw	0
 15315  012638  22F4               	addwfc	prodh,f,c
 15316  01263A  0E46               	movlw	low _ConnectionTable
 15317  01263C  24F3               	addwf	prodl,w,c
 15318  01263E  6ED9               	movwf	fsr2l,c
 15319  012640  0E02               	movlw	high _ConnectionTable
 15320  012642  20F4               	addwfc	prodh,w,c
 15321  012644  6EDA               	movwf	fsr2h,c
 15322  012646  50DF               	movf	indf2,w,c
 15323  012648  0101               	movlb	1	; () banked
 15324  01264A  6F52               	movwf	(_TxBuffer+4)& (0+255),b
 15325                           
 15326                           ; BSR set to: 1
 15327                           ;miwi_mesh.c: 4646: TxBuffer[5] = ConnectionTable[handle].AltAddress.v[1];
 15328  01264C  0103               	movlb	3	; () banked
 15329  01264E  51E6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 15330  012650  0D09               	mullw	9
 15331  012652  0E03               	movlw	3
 15332  012654  26F3               	addwf	prodl,f,c
 15333  012656  0E00               	movlw	0
 15334  012658  22F4               	addwfc	prodh,f,c
 15335  01265A  0E46               	movlw	low _ConnectionTable
 15336  01265C  24F3               	addwf	prodl,w,c
 15337  01265E  6ED9               	movwf	fsr2l,c
 15338  012660  0E02               	movlw	high _ConnectionTable
 15339  012662  20F4               	addwfc	prodh,w,c
 15340  012664  6EDA               	movwf	fsr2h,c
 15341  012666  50DF               	movf	indf2,w,c
 15342  012668  0101               	movlb	1	; () banked
 15343  01266A  6F53               	movwf	(_TxBuffer+5)& (0+255),b
 15344                           
 15345                           ; BSR set to: 1
 15346                           ;miwi_mesh.c: 4647: TxBuffer[6] = myPANID.v[0];
 15347  01266C  C183  F154         	movff	_myPANID,_TxBuffer+6
 15348                           
 15349                           ; BSR set to: 1
 15350                           ;miwi_mesh.c: 4648: TxBuffer[7] = myPANID.v[1];
 15351  012670  C184  F155         	movff	_myPANID+1,_TxBuffer+7
 15352                           
 15353                           ; BSR set to: 1
 15354                           ;miwi_mesh.c: 4649: TxBuffer[8] = myShortAddress.v[0];
 15355  012674  C185  F156         	movff	_myShortAddress,_TxBuffer+8
 15356                           
 15357                           ; BSR set to: 1
 15358                           ;miwi_mesh.c: 4650: TxBuffer[9] = myShortAddress.v[1];
 15359  012678  C186  F157         	movff	_myShortAddress+1,_TxBuffer+9
 15360                           
 15361                           ; BSR set to: 1
 15362                           ;miwi_mesh.c: 4651: TxBuffer[10] = MiWiSeqNum++;
 15363  01267C  C0B6  F158         	movff	_MiWiSeqNum,_TxBuffer+10
 15364                           
 15365                           ; BSR set to: 1
 15366  012680  0100               	movlb	0	; () banked
 15367  012682  2BB6               	incf	_MiWiSeqNum& (0+255),f,b
 15368                           
 15369                           ; BSR set to: 0
 15370                           ;miwi_mesh.c: 4696: MTP.flags.Val = 0;
 15371  012684  0E00               	movlw	0
 15372  012686  0101               	movlb	1	; () banked
 15373  012688  6F2A               	movwf	_MTP& (0+255),b
 15374                           
 15375                           ; BSR set to: 1
 15376                           ;miwi_mesh.c: 4697: MTP.flags.bits.ackReq = 1;
 15377  01268A  0101               	movlb	1	; () banked
 15378  01268C  8B2A               	bsf	_MTP& (0+255),5,b
 15379                           
 15380                           ; BSR set to: 1
 15381                           ;miwi_mesh.c: 4698: MTP.flags.bits.secEn = SecEn;
 15382  01268E  0101               	movlb	1	; () banked
 15383  012690  B1F1               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 15384  012692  D003               	bra	u14505
 15385  012694  0101               	movlb	1	; () banked
 15386  012696  972A               	bcf	_MTP& (0+255),3,b
 15387  012698  D002               	bra	u14506
 15388  01269A                     u14505:
 15389  01269A  0101               	movlb	1	; () banked
 15390  01269C  872A               	bsf	_MTP& (0+255),3,b
 15391  01269E                     u14506:
 15392                           
 15393                           ; BSR set to: 1
 15394                           ;miwi_mesh.c: 4706: MTP.DestAddress = ConnectionTable[myParent].Address;
 15395  01269E  0101               	movlb	1	; () banked
 15396  0126A0  514C               	movf	_myParent& (0+255),w,b
 15397  0126A2  0D09               	mullw	9
 15398  0126A4  0E04               	movlw	4
 15399  0126A6  26F3               	addwf	prodl,f,c
 15400  0126A8  0E00               	movlw	0
 15401  0126AA  22F4               	addwfc	prodh,f,c
 15402  0126AC  0E46               	movlw	low _ConnectionTable
 15403  0126AE  24F3               	addwf	prodl,w,c
 15404  0126B0  0101               	movlb	1	; () banked
 15405  0126B2  6F2B               	movwf	(_MTP+1)& (0+255),b
 15406  0126B4  0E02               	movlw	high _ConnectionTable
 15407  0126B6  20F4               	addwfc	prodh,w,c
 15408  0126B8  0101               	movlb	1	; () banked
 15409  0126BA  6F2C               	movwf	(_MTP+2)& (0+255),b
 15410                           
 15411                           ; BSR set to: 1
 15412                           ;miwi_mesh.c: 4709: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 15413  0126BC  C12A  F1B9         	movff	_MTP,MiMAC_SendPacket@transParam
 15414  0126C0  C12B  F1BA         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15415  0126C4  C12C  F1BB         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15416  0126C8  0E4E               	movlw	low _TxBuffer
 15417  0126CA  0101               	movlb	1	; () banked
 15418  0126CC  6FBC               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15419  0126CE  0E01               	movlw	high _TxBuffer
 15420  0126D0  0101               	movlb	1	; () banked
 15421  0126D2  6FBD               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15422  0126D4  C146  F1BE         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15423  0126D8  ECCF  F09A         	call	_MiMAC_SendPacket	;wreg free
 15424  0126DC  0900               	iorlw	0
 15425  0126DE  A4D8               	btfss	status,2,c
 15426  0126E0  D004               	goto	l839
 15427                           
 15428                           ;miwi_mesh.c: 4710: {
 15429                           ;miwi_mesh.c: 4711: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15430  0126E2  0101               	movlb	1	; () banked
 15431  0126E4  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15432                           
 15433                           ; BSR set to: 1
 15434                           ;miwi_mesh.c: 4712: return 0;
 15435  0126E6  0E00               	movlw	0
 15436                           
 15437                           ; BSR set to: 1
 15438  0126E8  0012               	return	
 15439  0126EA                     l839:
 15440                           
 15441                           ;miwi_mesh.c: 4714: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 15442  0126EA  0101               	movlb	1	; () banked
 15443  0126EC  A738               	btfss	_MiWiStateMachine& (0+255),3,b
 15444  0126EE  D05B               	goto	l12433
 15445                           
 15446                           ; BSR set to: 1
 15447                           ;miwi_mesh.c: 4715: {
 15448                           ;miwi_mesh.c: 4716: MIWI_TICK t1, t2;
 15449                           ;miwi_mesh.c: 4717: t1 = MiWi_TickGet();
 15450  0126F0  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 15451  0126F4  C18A  F3D4         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1
 15452  0126F8  C18B  F3D5         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1+1
 15453  0126FC  C18C  F3D6         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1+2
 15454  012700  C18D  F3D7         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1+3
 15455  012704                     l12413:
 15456                           
 15457                           ;miwi_mesh.c: 4719: {
 15458                           ;miwi_mesh.c: 4720: if( MiApp_MessageAvailable())
 15459  012704  ECE8  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 15460  012708  0900               	iorlw	0
 15461  01270A  A4D8               	btfss	status,2,c
 15462                           
 15463                           ;miwi_mesh.c: 4721: {
 15464                           ;miwi_mesh.c: 4722: MiApp_DiscardMessage();
 15465  01270C  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 15466                           
 15467                           ;miwi_mesh.c: 4723: }
 15468                           ;miwi_mesh.c: 4725: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 15469  012710  0101               	movlb	1	; () banked
 15470  012712  B738               	btfsc	_MiWiStateMachine& (0+255),3,b
 15471  012714  D002               	goto	l12423
 15472                           
 15473                           ; BSR set to: 1
 15474                           ;miwi_mesh.c: 4726: {
 15475                           ;miwi_mesh.c: 4727: return 1;
 15476  012716  0E01               	movlw	1
 15477                           
 15478                           ; BSR set to: 1
 15479  012718  0012               	return	
 15480  01271A                     l12423:
 15481                           
 15482                           ; BSR set to: 1
 15483                           ;miwi_mesh.c: 4728: }
 15484                           ;miwi_mesh.c: 4729: t2 = MiWi_TickGet();
 15485  01271A  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 15486  01271E  C18A  F3D8         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2
 15487  012722  C18B  F3D9         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2+1
 15488  012726  C18C  F3DA         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2+2
 15489  01272A  C18D  F3DB         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2+3
 15490                           
 15491                           ;miwi_mesh.c: 4730: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 15492  01272E  C3D4  F1F2         	movff	MiApp_UnicastAddress@t1,??_MiApp_UnicastAddress
 15493  012732  C3D5  F1F3         	movff	MiApp_UnicastAddress@t1+1,??_MiApp_UnicastAddress+1
 15494  012736  C3D6  F1F4         	movff	MiApp_UnicastAddress@t1+2,??_MiApp_UnicastAddress+2
 15495  01273A  C3D7  F1F5         	movff	MiApp_UnicastAddress@t1+3,??_MiApp_UnicastAddress+3
 15496  01273E  0101               	movlb	1	; () banked
 15497  012740  1FF2               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 15498  012742  1FF3               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15499  012744  1FF4               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15500  012746  1FF5               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15501  012748  2BF2               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 15502  01274A  0E00               	movlw	0
 15503  01274C  23F3               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15504  01274E  23F4               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15505  012750  23F5               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15506  012752  0103               	movlb	3	; () banked
 15507  012754  51D8               	movf	MiApp_UnicastAddress@t2& (0+255),w,b
 15508  012756  0101               	movlb	1	; () banked
 15509  012758  25F2               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 15510  01275A  0101               	movlb	1	; () banked
 15511  01275C  6FF6               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 15512  01275E  0103               	movlb	3	; () banked
 15513  012760  51D9               	movf	(MiApp_UnicastAddress@t2+1)& (0+255),w,b
 15514  012762  0101               	movlb	1	; () banked
 15515  012764  21F3               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 15516  012766  0101               	movlb	1	; () banked
 15517  012768  6FF7               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 15518  01276A  0103               	movlb	3	; () banked
 15519  01276C  51DA               	movf	(MiApp_UnicastAddress@t2+2)& (0+255),w,b
 15520  01276E  0101               	movlb	1	; () banked
 15521  012770  21F4               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 15522  012772  0101               	movlb	1	; () banked
 15523  012774  6FF8               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 15524  012776  0103               	movlb	3	; () banked
 15525  012778  51DB               	movf	(MiApp_UnicastAddress@t2+3)& (0+255),w,b
 15526  01277A  0101               	movlb	1	; () banked
 15527  01277C  21F5               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 15528  01277E  0101               	movlb	1	; () banked
 15529  012780  6FF9               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 15530  012782  0101               	movlb	1	; () banked
 15531  012784  51F9               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 15532  012786  E10B               	bnz	u14550
 15533  012788  0E21               	movlw	33
 15534  01278A  0101               	movlb	1	; () banked
 15535  01278C  5DF6               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 15536  01278E  0EA1               	movlw	161
 15537  012790  0101               	movlb	1	; () banked
 15538  012792  59F7               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 15539  012794  0E07               	movlw	7
 15540  012796  0101               	movlb	1	; () banked
 15541  012798  59F8               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 15542  01279A  A0D8               	btfss	status,0,c
 15543  01279C  D7B3               	goto	l12413
 15544  01279E                     u14550:
 15545                           
 15546                           ; BSR set to: 1
 15547                           ;miwi_mesh.c: 4731: {
 15548                           ;miwi_mesh.c: 4732: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15549  01279E  0101               	movlb	1	; () banked
 15550  0127A0  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15551                           
 15552                           ; BSR set to: 1
 15553                           ;miwi_mesh.c: 4733: return 0;
 15554  0127A2  0E00               	movlw	0
 15555                           
 15556                           ; BSR set to: 1
 15557  0127A4  0012               	return	
 15558  0127A6                     l12433:
 15559                           
 15560                           ; BSR set to: 1
 15561                           ;miwi_mesh.c: 4734: }
 15562                           ;miwi_mesh.c: 4735: }
 15563                           ;miwi_mesh.c: 4736: }
 15564                           ;miwi_mesh.c: 4737: return 1;
 15565  0127A6  0E01               	movlw	1
 15566                           
 15567                           ; BSR set to: 1
 15568  0127A8  0012               	return	
 15569  0127AA                     l12437:
 15570                           
 15571                           ;miwi_mesh.c: 4739: }
 15572                           ;miwi_mesh.c: 4740: }
 15573                           ;miwi_mesh.c: 4742: TxBuffer[0] = 4;
 15574  0127AA  0E04               	movlw	4
 15575  0127AC  0101               	movlb	1	; () banked
 15576  0127AE  6F4E               	movwf	_TxBuffer& (0+255),b
 15577                           
 15578                           ; BSR set to: 1
 15579                           ;miwi_mesh.c: 4743: TxBuffer[1] = MiWiFrameControl;
 15580  0127B0  C3E4  F14F         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 15581                           
 15582                           ; BSR set to: 1
 15583                           ;miwi_mesh.c: 4744: TxBuffer[2] = myPANID.v[0];
 15584  0127B4  C183  F150         	movff	_myPANID,_TxBuffer+2
 15585                           
 15586                           ; BSR set to: 1
 15587                           ;miwi_mesh.c: 4745: TxBuffer[3] = myPANID.v[1];
 15588  0127B8  C184  F151         	movff	_myPANID+1,_TxBuffer+3
 15589                           
 15590                           ; BSR set to: 1
 15591                           ;miwi_mesh.c: 4746: TxBuffer[4] = DestAddress[0];
 15592  0127BC  C1EE  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 15593  0127C0  C1EF  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 15594  0127C4  50DF               	movf	indf2,w,c
 15595  0127C6  0101               	movlb	1	; () banked
 15596  0127C8  6F52               	movwf	(_TxBuffer+4)& (0+255),b
 15597                           
 15598                           ; BSR set to: 1
 15599                           ;miwi_mesh.c: 4747: TxBuffer[5] = DestAddress[1];
 15600  0127CA  0101               	movlb	1	; () banked
 15601  0127CC  EE20 F001          	lfsr	2,1
 15602  0127D0  51EE               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 15603  0127D2  26D9               	addwf	fsr2l,f,c
 15604  0127D4  51EF               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 15605  0127D6  22DA               	addwfc	fsr2h,f,c
 15606  0127D8  50DF               	movf	indf2,w,c
 15607  0127DA  0101               	movlb	1	; () banked
 15608  0127DC  6F53               	movwf	(_TxBuffer+5)& (0+255),b
 15609                           
 15610                           ; BSR set to: 1
 15611                           ;miwi_mesh.c: 4748: TxBuffer[6] = myPANID.v[0];
 15612  0127DE  C183  F154         	movff	_myPANID,_TxBuffer+6
 15613                           
 15614                           ; BSR set to: 1
 15615                           ;miwi_mesh.c: 4749: TxBuffer[7] = myPANID.v[1];
 15616  0127E2  C184  F155         	movff	_myPANID+1,_TxBuffer+7
 15617                           
 15618                           ; BSR set to: 1
 15619                           ;miwi_mesh.c: 4750: TxBuffer[8] = myShortAddress.v[0];
 15620  0127E6  C185  F156         	movff	_myShortAddress,_TxBuffer+8
 15621                           
 15622                           ; BSR set to: 1
 15623                           ;miwi_mesh.c: 4751: TxBuffer[9] = myShortAddress.v[1];
 15624  0127EA  C186  F157         	movff	_myShortAddress+1,_TxBuffer+9
 15625                           
 15626                           ; BSR set to: 1
 15627                           ;miwi_mesh.c: 4752: TxBuffer[10] = MiWiSeqNum++;
 15628  0127EE  C0B6  F158         	movff	_MiWiSeqNum,_TxBuffer+10
 15629                           
 15630                           ; BSR set to: 1
 15631  0127F2  0100               	movlb	0	; () banked
 15632  0127F4  2BB6               	incf	_MiWiSeqNum& (0+255),f,b
 15633                           
 15634                           ; BSR set to: 0
 15635                           ;miwi_mesh.c: 4754: AcknowledgementAddr.v[0] = DestAddress[0];
 15636  0127F6  C1EE  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 15637  0127FA  C1EF  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 15638  0127FE  50DF               	movf	indf2,w,c
 15639  012800  0101               	movlb	1	; () banked
 15640  012802  6F36               	movwf	_AcknowledgementAddr& (0+255),b
 15641                           
 15642                           ; BSR set to: 1
 15643                           ;miwi_mesh.c: 4755: AcknowledgementAddr.v[1] = DestAddress[1];
 15644  012804  0101               	movlb	1	; () banked
 15645  012806  EE20 F001          	lfsr	2,1
 15646  01280A  51EE               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 15647  01280C  26D9               	addwf	fsr2l,f,c
 15648  01280E  51EF               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 15649  012810  22DA               	addwfc	fsr2h,f,c
 15650  012812  50DF               	movf	indf2,w,c
 15651  012814  0101               	movlb	1	; () banked
 15652  012816  6F37               	movwf	(_AcknowledgementAddr+1)& (0+255),b
 15653                           
 15654                           ; BSR set to: 1
 15655                           ;miwi_mesh.c: 4803: MTP.flags.Val = 0;
 15656  012818  0E00               	movlw	0
 15657  01281A  0101               	movlb	1	; () banked
 15658  01281C  6F2A               	movwf	_MTP& (0+255),b
 15659                           
 15660                           ; BSR set to: 1
 15661                           ;miwi_mesh.c: 4804: MTP.flags.bits.ackReq = 1;
 15662  01281E  0101               	movlb	1	; () banked
 15663  012820  8B2A               	bsf	_MTP& (0+255),5,b
 15664                           
 15665                           ; BSR set to: 1
 15666                           ;miwi_mesh.c: 4805: MTP.flags.bits.secEn = SecEn;
 15667  012822  0101               	movlb	1	; () banked
 15668  012824  B1F1               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 15669  012826  D003               	bra	u14565
 15670  012828  0101               	movlb	1	; () banked
 15671  01282A  972A               	bcf	_MTP& (0+255),3,b
 15672  01282C  D002               	bra	u14566
 15673  01282E                     u14565:
 15674  01282E  0101               	movlb	1	; () banked
 15675  012830  872A               	bsf	_MTP& (0+255),3,b
 15676  012832                     u14566:
 15677                           
 15678                           ; BSR set to: 1
 15679                           ;miwi_mesh.c: 4813: MTP.DestAddress = ConnectionTable[myParent].Address;
 15680  012832  0101               	movlb	1	; () banked
 15681  012834  514C               	movf	_myParent& (0+255),w,b
 15682  012836  0D09               	mullw	9
 15683  012838  0E04               	movlw	4
 15684  01283A  26F3               	addwf	prodl,f,c
 15685  01283C  0E00               	movlw	0
 15686  01283E  22F4               	addwfc	prodh,f,c
 15687  012840  0E46               	movlw	low _ConnectionTable
 15688  012842  24F3               	addwf	prodl,w,c
 15689  012844  0101               	movlb	1	; () banked
 15690  012846  6F2B               	movwf	(_MTP+1)& (0+255),b
 15691  012848  0E02               	movlw	high _ConnectionTable
 15692  01284A  20F4               	addwfc	prodh,w,c
 15693  01284C  0101               	movlb	1	; () banked
 15694  01284E  6F2C               	movwf	(_MTP+2)& (0+255),b
 15695                           
 15696                           ; BSR set to: 1
 15697                           ;miwi_mesh.c: 4817: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 15698  012850  C12A  F1B9         	movff	_MTP,MiMAC_SendPacket@transParam
 15699  012854  C12B  F1BA         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15700  012858  C12C  F1BB         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15701  01285C  0E4E               	movlw	low _TxBuffer
 15702  01285E  0101               	movlb	1	; () banked
 15703  012860  6FBC               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15704  012862  0E01               	movlw	high _TxBuffer
 15705  012864  0101               	movlb	1	; () banked
 15706  012866  6FBD               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15707  012868  C146  F1BE         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15708  01286C  ECCF  F09A         	call	_MiMAC_SendPacket	;wreg free
 15709  012870  0900               	iorlw	0
 15710  012872  A4D8               	btfss	status,2,c
 15711  012874  D004               	goto	l848
 15712                           
 15713                           ;miwi_mesh.c: 4818: {
 15714                           ;miwi_mesh.c: 4819: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15715  012876  0101               	movlb	1	; () banked
 15716  012878  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15717                           
 15718                           ; BSR set to: 1
 15719                           ;miwi_mesh.c: 4820: return 0;
 15720  01287A  0E00               	movlw	0
 15721                           
 15722                           ; BSR set to: 1
 15723  01287C  0012               	return	
 15724  01287E                     l848:
 15725                           
 15726                           ;miwi_mesh.c: 4822: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 15727  01287E  0101               	movlb	1	; () banked
 15728  012880  A738               	btfss	_MiWiStateMachine& (0+255),3,b
 15729  012882  D05B               	goto	l12505
 15730                           
 15731                           ; BSR set to: 1
 15732                           ;miwi_mesh.c: 4823: {
 15733                           ;miwi_mesh.c: 4824: MIWI_TICK t1, t2;
 15734                           ;miwi_mesh.c: 4825: t1 = MiWi_TickGet();
 15735  012884  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 15736  012888  C18A  F3DC         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1_2763
 15737  01288C  C18B  F3DD         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1_2763+1
 15738  012890  C18C  F3DE         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1_2763+2
 15739  012894  C18D  F3DF         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1_2763+3
 15740  012898                     l12485:
 15741                           
 15742                           ;miwi_mesh.c: 4827: {
 15743                           ;miwi_mesh.c: 4828: if( MiApp_MessageAvailable())
 15744  012898  ECE8  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 15745  01289C  0900               	iorlw	0
 15746  01289E  A4D8               	btfss	status,2,c
 15747                           
 15748                           ;miwi_mesh.c: 4829: {
 15749                           ;miwi_mesh.c: 4830: MiApp_DiscardMessage();
 15750  0128A0  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 15751                           
 15752                           ;miwi_mesh.c: 4831: }
 15753                           ;miwi_mesh.c: 4833: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 15754  0128A4  0101               	movlb	1	; () banked
 15755  0128A6  B738               	btfsc	_MiWiStateMachine& (0+255),3,b
 15756  0128A8  D002               	goto	l12495
 15757                           
 15758                           ; BSR set to: 1
 15759                           ;miwi_mesh.c: 4834: {
 15760                           ;miwi_mesh.c: 4835: return 1;
 15761  0128AA  0E01               	movlw	1
 15762                           
 15763                           ; BSR set to: 1
 15764  0128AC  0012               	return	
 15765  0128AE                     l12495:
 15766                           
 15767                           ; BSR set to: 1
 15768                           ;miwi_mesh.c: 4836: }
 15769                           ;miwi_mesh.c: 4837: t2 = MiWi_TickGet();
 15770  0128AE  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 15771  0128B2  C18A  F3E0         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2_2774
 15772  0128B6  C18B  F3E1         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2_2774+1
 15773  0128BA  C18C  F3E2         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2_2774+2
 15774  0128BE  C18D  F3E3         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2_2774+3
 15775                           
 15776                           ;miwi_mesh.c: 4838: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 15777  0128C2  C3DC  F1F2         	movff	MiApp_UnicastAddress@t1_2763,??_MiApp_UnicastAddress
 15778  0128C6  C3DD  F1F3         	movff	MiApp_UnicastAddress@t1_2763+1,??_MiApp_UnicastAddress+1
 15779  0128CA  C3DE  F1F4         	movff	MiApp_UnicastAddress@t1_2763+2,??_MiApp_UnicastAddress+2
 15780  0128CE  C3DF  F1F5         	movff	MiApp_UnicastAddress@t1_2763+3,??_MiApp_UnicastAddress+3
 15781  0128D2  0101               	movlb	1	; () banked
 15782  0128D4  1FF2               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 15783  0128D6  1FF3               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15784  0128D8  1FF4               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15785  0128DA  1FF5               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15786  0128DC  2BF2               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 15787  0128DE  0E00               	movlw	0
 15788  0128E0  23F3               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 15789  0128E2  23F4               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 15790  0128E4  23F5               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 15791  0128E6  0103               	movlb	3	; () banked
 15792  0128E8  51E0               	movf	MiApp_UnicastAddress@t2_2774& (0+255),w,b
 15793  0128EA  0101               	movlb	1	; () banked
 15794  0128EC  25F2               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 15795  0128EE  0101               	movlb	1	; () banked
 15796  0128F0  6FF6               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 15797  0128F2  0103               	movlb	3	; () banked
 15798  0128F4  51E1               	movf	(MiApp_UnicastAddress@t2_2774+1)& (0+255),w,b
 15799  0128F6  0101               	movlb	1	; () banked
 15800  0128F8  21F3               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 15801  0128FA  0101               	movlb	1	; () banked
 15802  0128FC  6FF7               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 15803  0128FE  0103               	movlb	3	; () banked
 15804  012900  51E2               	movf	(MiApp_UnicastAddress@t2_2774+2)& (0+255),w,b
 15805  012902  0101               	movlb	1	; () banked
 15806  012904  21F4               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 15807  012906  0101               	movlb	1	; () banked
 15808  012908  6FF8               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 15809  01290A  0103               	movlb	3	; () banked
 15810  01290C  51E3               	movf	(MiApp_UnicastAddress@t2_2774+3)& (0+255),w,b
 15811  01290E  0101               	movlb	1	; () banked
 15812  012910  21F5               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 15813  012912  0101               	movlb	1	; () banked
 15814  012914  6FF9               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 15815  012916  0101               	movlb	1	; () banked
 15816  012918  51F9               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 15817  01291A  E10B               	bnz	u14610
 15818  01291C  0E21               	movlw	33
 15819  01291E  0101               	movlb	1	; () banked
 15820  012920  5DF6               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 15821  012922  0EA1               	movlw	161
 15822  012924  0101               	movlb	1	; () banked
 15823  012926  59F7               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 15824  012928  0E07               	movlw	7
 15825  01292A  0101               	movlb	1	; () banked
 15826  01292C  59F8               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 15827  01292E  A0D8               	btfss	status,0,c
 15828  012930  D7B3               	goto	l12485
 15829  012932                     u14610:
 15830                           
 15831                           ; BSR set to: 1
 15832                           ;miwi_mesh.c: 4839: {
 15833                           ;miwi_mesh.c: 4840: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 15834  012932  0101               	movlb	1	; () banked
 15835  012934  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 15836                           
 15837                           ; BSR set to: 1
 15838                           ;miwi_mesh.c: 4841: return 0;
 15839  012936  0E00               	movlw	0
 15840                           
 15841                           ; BSR set to: 1
 15842  012938  0012               	return	
 15843  01293A                     l12505:
 15844                           
 15845                           ; BSR set to: 1
 15846                           ;miwi_mesh.c: 4842: }
 15847                           ;miwi_mesh.c: 4843: }
 15848                           ;miwi_mesh.c: 4844: }
 15849                           ;miwi_mesh.c: 4846: return 1;
 15850  01293A  0E01               	movlw	1
 15851  01293C  0012               	return	
 15852  01293E                     __end_of_MiApp_UnicastAddress:
 15853                           	opt stack 0
 15854                           tblptru	equ	0xFF8
 15855                           tblptrh	equ	0xFF7
 15856                           tblptrl	equ	0xFF6
 15857                           tablat	equ	0xFF5
 15858                           prodh	equ	0xFF4
 15859                           prodl	equ	0xFF3
 15860                           intcon	equ	0xFF2
 15861                           intcon2	equ	0xFF1
 15862                           intcon3	equ	0xFF0
 15863                           indf0	equ	0xFEF
 15864                           postinc0	equ	0xFEE
 15865                           plusw0	equ	0xFEB
 15866                           fsr0h	equ	0xFEA
 15867                           fsr0l	equ	0xFE9
 15868                           wreg	equ	0xFE8
 15869                           indf1	equ	0xFE7
 15870                           postinc1	equ	0xFE6
 15871                           postdec1	equ	0xFE5
 15872                           fsr1h	equ	0xFE2
 15873                           fsr1l	equ	0xFE1
 15874                           indf2	equ	0xFDF
 15875                           postinc2	equ	0xFDE
 15876                           postdec2	equ	0xFDD
 15877                           plusw2	equ	0xFDB
 15878                           fsr2h	equ	0xFDA
 15879                           fsr2l	equ	0xFD9
 15880                           status	equ	0xFD8
 15881                           
 15882 ;; *************** function _MiApp_SearchConnection *****************
 15883 ;; Defined at:
 15884 ;;		line 3979 in file "src/miwi/miwi_mesh.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;  ScanDuration    1    wreg     unsigned char 
 15887 ;;  ChannelMap      4  100[BANK1 ] unsigned long 
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;  ScanDuration    1   12[BANK3 ] unsigned char 
 15890 ;;  t2              4    8[BANK3 ] struct _MIWI_TICK
 15891 ;;  t1              4    4[BANK3 ] struct _MIWI_TICK
 15892 ;;  channelMask     4    0[BANK3 ] unsigned long 
 15893 ;;  i               1   14[BANK3 ] unsigned char 
 15894 ;;  backupChanne    1   13[BANK3 ] unsigned char 
 15895 ;; Return value:  Size  Location     Type
 15896 ;;                  1    wreg      unsigned char 
 15897 ;; Registers used:
 15898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15899 ;; Tracked objects:
 15900 ;;		On entry : 0/0
 15901 ;;		On exit  : 0/0
 15902 ;;		Unchanged: 0/0
 15903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15904 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15905 ;;      Locals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
 15906 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15907 ;;      Totals:         0       0      13       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
 15908 ;;Total ram usage:       28 bytes
 15909 ;; Hardware stack levels used:    1
 15910 ;; Hardware stack levels required when called:   16
 15911 ;; This function calls:
 15912 ;;		_MiApp_DiscardMessage
 15913 ;;		_MiApp_MessageAvailable
 15914 ;;		_MiApp_SetChannel
 15915 ;;		_MiWi_TickGet
 15916 ;;		_SendMACPacket
 15917 ;; This function is called by:
 15918 ;;		_MiApp_EstablishConnection
 15919 ;;		_main
 15920 ;; This function uses a non-reentrant model
 15921 ;;
 15922                           
 15923                           	psect	text51
 15924  013A0C                     __ptext51:
 15925                           	opt stack 0
 15926  013A0C                     _MiApp_SearchConnection:
 15927                           	opt stack 14
 15928                           
 15929                           ;incstack = 0
 15930                           ;MiApp_SearchConnection@ScanDuration stored from wreg
 15931  013A0C  0103               	movlb	3	; () banked
 15932  013A0E  6FE0               	movwf	MiApp_SearchConnection@ScanDuration& (0+255),b
 15933                           
 15934                           ;miwi_mesh.c: 3981: uint8_t i;
 15935                           ;miwi_mesh.c: 3982: uint32_t channelMask = 0x00000001;
 15936  013A10  0E01               	movlw	1
 15937  013A12  0103               	movlb	3	; () banked
 15938  013A14  6FD4               	movwf	MiApp_SearchConnection@channelMask& (0+255),b
 15939  013A16  0E00               	movlw	0
 15940  013A18  6FD5               	movwf	(MiApp_SearchConnection@channelMask+1)& (0+255),b
 15941  013A1A  0E00               	movlw	0
 15942  013A1C  6FD6               	movwf	(MiApp_SearchConnection@channelMask+2)& (0+255),b
 15943  013A1E  0E00               	movlw	0
 15944  013A20  6FD7               	movwf	(MiApp_SearchConnection@channelMask+3)& (0+255),b
 15945                           
 15946                           ; BSR set to: 3
 15947                           ;miwi_mesh.c: 3983: uint8_t backupChannel = currentChannel;
 15948  013A22  C189  F3E1         	movff	_currentChannel,MiApp_SearchConnection@backupChannel
 15949                           
 15950                           ;miwi_mesh.c: 3984: MIWI_TICK t1, t2;
 15951                           ;miwi_mesh.c: 3986: for(i = 0; i < 8; i++)
 15952  013A26  0E00               	movlw	0
 15953  013A28  0103               	movlb	3	; () banked
 15954  013A2A  6FE2               	movwf	MiApp_SearchConnection@i& (0+255),b
 15955  013A2C                     l13305:
 15956                           
 15957                           ; BSR set to: 3
 15958  013A2C  0E07               	movlw	7
 15959  013A2E  0103               	movlb	3	; () banked
 15960  013A30  65E2               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
 15961  013A32  D001               	goto	l13309
 15962  013A34  D00E               	goto	l13315
 15963  013A36                     l13309:
 15964                           
 15965                           ; BSR set to: 3
 15966                           ;miwi_mesh.c: 3987: {
 15967                           ;miwi_mesh.c: 3988: ActiveScanResults[i].Channel = 0xFF;
 15968  013A36  0103               	movlb	3	; () banked
 15969  013A38  51E2               	movf	MiApp_SearchConnection@i& (0+255),w,b
 15970  013A3A  0D0A               	mullw	10
 15971  013A3C  0E00               	movlw	low _ActiveScanResults
 15972  013A3E  24F3               	addwf	prodl,w,c
 15973  013A40  6ED9               	movwf	fsr2l,c
 15974  013A42  0E03               	movlw	high _ActiveScanResults
 15975  013A44  20F4               	addwfc	prodh,w,c
 15976  013A46  6EDA               	movwf	fsr2h,c
 15977  013A48  0EFF               	movlw	255
 15978  013A4A  6EDF               	movwf	indf2,c
 15979                           
 15980                           ; BSR set to: 3
 15981  013A4C  0103               	movlb	3	; () banked
 15982  013A4E  2BE2               	incf	MiApp_SearchConnection@i& (0+255),f,b
 15983  013A50  D7ED               	goto	l13305
 15984  013A52                     l13315:
 15985                           
 15986                           ; BSR set to: 3
 15987                           ;miwi_mesh.c: 3989: }
 15988                           ;miwi_mesh.c: 3990: ActiveScanResultIndex = 0;
 15989  013A52  0E00               	movlw	0
 15990  013A54  0101               	movlb	1	; () banked
 15991  013A56  6F42               	movwf	_ActiveScanResultIndex& (0+255),b
 15992                           
 15993                           ; BSR set to: 1
 15994                           ;miwi_mesh.c: 3991: MiWiStateMachine.bits.searchingForNetwork = 1;
 15995  013A58  0101               	movlb	1	; () banked
 15996  013A5A  8138               	bsf	_MiWiStateMachine& (0+255),0,b
 15997                           
 15998                           ;miwi_mesh.c: 3993: i = 0;
 15999  013A5C  0E00               	movlw	0
 16000  013A5E  0103               	movlb	3	; () banked
 16001  013A60  6FE2               	movwf	MiApp_SearchConnection@i& (0+255),b
 16002                           
 16003                           ;miwi_mesh.c: 3994: while(i < 32 )
 16004  013A62  D0C8               	goto	l13349
 16005  013A64                     l13319:
 16006                           
 16007                           ; BSR set to: 3
 16008                           ;miwi_mesh.c: 3995: {
 16009                           ;miwi_mesh.c: 3996: if( ChannelMap & 0xFFFFFFFF & (channelMask << i) )
 16010  013A64  C3E2  F1F2         	movff	MiApp_SearchConnection@i,??_MiApp_SearchConnection
 16011  013A68  C3D4  F1F3         	movff	MiApp_SearchConnection@channelMask,??_MiApp_SearchConnection+1
 16012  013A6C  C3D5  F1F4         	movff	MiApp_SearchConnection@channelMask+1,??_MiApp_SearchConnection+2
 16013  013A70  C3D6  F1F5         	movff	MiApp_SearchConnection@channelMask+2,??_MiApp_SearchConnection+3
 16014  013A74  C3D7  F1F6         	movff	MiApp_SearchConnection@channelMask+3,??_MiApp_SearchConnection+4
 16015  013A78  0101               	movlb	1	; () banked
 16016  013A7A  2BF2               	incf	??_MiApp_SearchConnection& (0+255),f,b
 16017  013A7C  D006               	goto	u15700
 16018  013A7E                     u15705:
 16019  013A7E  90D8               	bcf	status,0,c
 16020  013A80  0101               	movlb	1	; () banked
 16021  013A82  37F3               	rlcf	(??_MiApp_SearchConnection+1)& (0+255),f,b
 16022  013A84  37F4               	rlcf	(??_MiApp_SearchConnection+2)& (0+255),f,b
 16023  013A86  37F5               	rlcf	(??_MiApp_SearchConnection+3)& (0+255),f,b
 16024  013A88  37F6               	rlcf	(??_MiApp_SearchConnection+4)& (0+255),f,b
 16025  013A8A                     u15700:
 16026  013A8A  0101               	movlb	1	; () banked
 16027  013A8C  2FF2               	decfsz	??_MiApp_SearchConnection& (0+255),f,b
 16028  013A8E  D7F7               	goto	u15705
 16029  013A90  0101               	movlb	1	; () banked
 16030  013A92  51EE               	movf	MiApp_SearchConnection@ChannelMap& (0+255),w,b
 16031  013A94  0101               	movlb	1	; () banked
 16032  013A96  15F3               	andwf	(??_MiApp_SearchConnection+1)& (0+255),w,b
 16033  013A98  0101               	movlb	1	; () banked
 16034  013A9A  6FF7               	movwf	(??_MiApp_SearchConnection+5)& (0+255),b
 16035  013A9C  0101               	movlb	1	; () banked
 16036  013A9E  51EF               	movf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),w,b
 16037  013AA0  0101               	movlb	1	; () banked
 16038  013AA2  15F4               	andwf	(??_MiApp_SearchConnection+2)& (0+255),w,b
 16039  013AA4  0101               	movlb	1	; () banked
 16040  013AA6  6FF8               	movwf	(??_MiApp_SearchConnection+6)& (0+255),b
 16041  013AA8  0101               	movlb	1	; () banked
 16042  013AAA  51F0               	movf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),w,b
 16043  013AAC  0101               	movlb	1	; () banked
 16044  013AAE  15F5               	andwf	(??_MiApp_SearchConnection+3)& (0+255),w,b
 16045  013AB0  0101               	movlb	1	; () banked
 16046  013AB2  6FF9               	movwf	(??_MiApp_SearchConnection+7)& (0+255),b
 16047  013AB4  0101               	movlb	1	; () banked
 16048  013AB6  51F1               	movf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),w,b
 16049  013AB8  0101               	movlb	1	; () banked
 16050  013ABA  15F6               	andwf	(??_MiApp_SearchConnection+4)& (0+255),w,b
 16051  013ABC  0101               	movlb	1	; () banked
 16052  013ABE  6FFA               	movwf	(??_MiApp_SearchConnection+8)& (0+255),b
 16053  013AC0  0101               	movlb	1	; () banked
 16054  013AC2  51F7               	movf	(??_MiApp_SearchConnection+5)& (0+255),w,b
 16055  013AC4  0101               	movlb	1	; () banked
 16056  013AC6  11F8               	iorwf	(??_MiApp_SearchConnection+6)& (0+255),w,b
 16057  013AC8  0101               	movlb	1	; () banked
 16058  013ACA  11F9               	iorwf	(??_MiApp_SearchConnection+7)& (0+255),w,b
 16059  013ACC  0101               	movlb	1	; () banked
 16060  013ACE  11FA               	iorwf	(??_MiApp_SearchConnection+8)& (0+255),w,b
 16061  013AD0  B4D8               	btfsc	status,2,c
 16062  013AD2  D08E               	goto	l13347
 16063                           
 16064                           ; BSR set to: 1
 16065                           ;miwi_mesh.c: 3997: {
 16066                           ;miwi_mesh.c: 3998: ;
 16067                           ;miwi_mesh.c: 3999: ;
 16068                           ;miwi_mesh.c: 4001: MiApp_SetChannel( i );
 16069  013AD4  0103               	movlb	3	; () banked
 16070  013AD6  51E2               	movf	MiApp_SearchConnection@i& (0+255),w,b
 16071  013AD8  EC8D  F0B7         	call	_MiApp_SetChannel
 16072                           
 16073                           ;miwi_mesh.c: 4003: {TxData = 0;};
 16074  013ADC  0E00               	movlw	0
 16075  013ADE  0101               	movlb	1	; () banked
 16076  013AE0  6F46               	movwf	_TxData& (0+255),b
 16077                           
 16078                           ; BSR set to: 1
 16079                           ;miwi_mesh.c: 4004: TxBuffer[TxData++] = 0x07;
 16080  013AE2  0101               	movlb	1	; () banked
 16081  013AE4  5146               	movf	_TxData& (0+255),w,b
 16082  013AE6  0D01               	mullw	1
 16083  013AE8  0E4E               	movlw	low _TxBuffer
 16084  013AEA  24F3               	addwf	prodl,w,c
 16085  013AEC  6ED9               	movwf	fsr2l,c
 16086  013AEE  0E01               	movlw	high _TxBuffer
 16087  013AF0  20F4               	addwfc	prodh,w,c
 16088  013AF2  6EDA               	movwf	fsr2h,c
 16089  013AF4  0E07               	movlw	7
 16090  013AF6  6EDF               	movwf	indf2,c
 16091                           
 16092                           ; BSR set to: 1
 16093  013AF8  0101               	movlb	1	; () banked
 16094  013AFA  2B46               	incf	_TxData& (0+255),f,b
 16095                           
 16096                           ; BSR set to: 1
 16097                           ;miwi_mesh.c: 4005: TxBuffer[TxData++] = currentChannel;
 16098  013AFC  0101               	movlb	1	; () banked
 16099  013AFE  5146               	movf	_TxData& (0+255),w,b
 16100  013B00  0D01               	mullw	1
 16101  013B02  0E4E               	movlw	low _TxBuffer
 16102  013B04  24F3               	addwf	prodl,w,c
 16103  013B06  6ED9               	movwf	fsr2l,c
 16104  013B08  0E01               	movlw	high _TxBuffer
 16105  013B0A  20F4               	addwfc	prodh,w,c
 16106  013B0C  6EDA               	movwf	fsr2h,c
 16107  013B0E  C189  FFDF         	movff	_currentChannel,indf2
 16108                           
 16109                           ; BSR set to: 1
 16110  013B12  0101               	movlb	1	; () banked
 16111  013B14  2B46               	incf	_TxData& (0+255),f,b
 16112                           
 16113                           ; BSR set to: 1
 16114                           ;miwi_mesh.c: 4010: SendMACPacket((0), 0x01);
 16115  013B16  0E00               	movlw	0
 16116  013B18  0101               	movlb	1	; () banked
 16117  013B1A  6FC3               	movwf	SendMACPacket@Address& (0+255),b
 16118  013B1C  0E00               	movlw	0
 16119  013B1E  0101               	movlb	1	; () banked
 16120  013B20  6FC4               	movwf	(SendMACPacket@Address+1)& (0+255),b
 16121  013B22  0E01               	movlw	1
 16122  013B24  0101               	movlb	1	; () banked
 16123  013B26  6FC5               	movwf	SendMACPacket@PacketType& (0+255),b
 16124  013B28  EC6A  F0B3         	call	_SendMACPacket	;wreg free
 16125                           
 16126                           ;miwi_mesh.c: 4013: t1 = MiWi_TickGet();
 16127  013B2C  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 16128  013B30  C18A  F3D8         	movff	?_MiWi_TickGet,MiApp_SearchConnection@t1
 16129  013B34  C18B  F3D9         	movff	?_MiWi_TickGet+1,MiApp_SearchConnection@t1+1
 16130  013B38  C18C  F3DA         	movff	?_MiWi_TickGet+2,MiApp_SearchConnection@t1+2
 16131  013B3C  C18D  F3DB         	movff	?_MiWi_TickGet+3,MiApp_SearchConnection@t1+3
 16132  013B40                     l13337:
 16133                           
 16134                           ;miwi_mesh.c: 4015: {
 16135                           ;miwi_mesh.c: 4016: if( MiApp_MessageAvailable() )
 16136  013B40  ECE8  F0B7         	call	_MiApp_MessageAvailable	;wreg free
 16137  013B44  0900               	iorlw	0
 16138  013B46  A4D8               	btfss	status,2,c
 16139                           
 16140                           ;miwi_mesh.c: 4017: {
 16141                           ;miwi_mesh.c: 4018: MiApp_DiscardMessage();
 16142  013B48  ECF6  F0B7         	call	_MiApp_DiscardMessage	;wreg free
 16143                           
 16144                           ;miwi_mesh.c: 4019: }
 16145                           ;miwi_mesh.c: 4021: t2 = MiWi_TickGet();
 16146  013B4C  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 16147  013B50  C18A  F3DC         	movff	?_MiWi_TickGet,MiApp_SearchConnection@t2
 16148  013B54  C18B  F3DD         	movff	?_MiWi_TickGet+1,MiApp_SearchConnection@t2+1
 16149  013B58  C18C  F3DE         	movff	?_MiWi_TickGet+2,MiApp_SearchConnection@t2+2
 16150  013B5C  C18D  F3DF         	movff	?_MiWi_TickGet+3,MiApp_SearchConnection@t2+3
 16151                           
 16152                           ;miwi_mesh.c: 4022: if( (t2.Val - t1.Val) > ((uint32_t)(ScanTime[ScanDuration])) )
 16153  013B60  C3D8  F1F2         	movff	MiApp_SearchConnection@t1,??_MiApp_SearchConnection
 16154  013B64  C3D9  F1F3         	movff	MiApp_SearchConnection@t1+1,??_MiApp_SearchConnection+1
 16155  013B68  C3DA  F1F4         	movff	MiApp_SearchConnection@t1+2,??_MiApp_SearchConnection+2
 16156  013B6C  C3DB  F1F5         	movff	MiApp_SearchConnection@t1+3,??_MiApp_SearchConnection+3
 16157  013B70  0101               	movlb	1	; () banked
 16158  013B72  1FF2               	comf	??_MiApp_SearchConnection& (0+255),f,b
 16159  013B74  1FF3               	comf	(??_MiApp_SearchConnection+1)& (0+255),f,b
 16160  013B76  1FF4               	comf	(??_MiApp_SearchConnection+2)& (0+255),f,b
 16161  013B78  1FF5               	comf	(??_MiApp_SearchConnection+3)& (0+255),f,b
 16162  013B7A  2BF2               	incf	??_MiApp_SearchConnection& (0+255),f,b
 16163  013B7C  0E00               	movlw	0
 16164  013B7E  23F3               	addwfc	(??_MiApp_SearchConnection+1)& (0+255),f,b
 16165  013B80  23F4               	addwfc	(??_MiApp_SearchConnection+2)& (0+255),f,b
 16166  013B82  23F5               	addwfc	(??_MiApp_SearchConnection+3)& (0+255),f,b
 16167  013B84  0103               	movlb	3	; () banked
 16168  013B86  51DC               	movf	MiApp_SearchConnection@t2& (0+255),w,b
 16169  013B88  0101               	movlb	1	; () banked
 16170  013B8A  25F2               	addwf	??_MiApp_SearchConnection& (0+255),w,b
 16171  013B8C  0101               	movlb	1	; () banked
 16172  013B8E  6FF6               	movwf	(??_MiApp_SearchConnection+4)& (0+255),b
 16173  013B90  0103               	movlb	3	; () banked
 16174  013B92  51DD               	movf	(MiApp_SearchConnection@t2+1)& (0+255),w,b
 16175  013B94  0101               	movlb	1	; () banked
 16176  013B96  21F3               	addwfc	(??_MiApp_SearchConnection+1)& (0+255),w,b
 16177  013B98  0101               	movlb	1	; () banked
 16178  013B9A  6FF7               	movwf	(??_MiApp_SearchConnection+5)& (0+255),b
 16179  013B9C  0103               	movlb	3	; () banked
 16180  013B9E  51DE               	movf	(MiApp_SearchConnection@t2+2)& (0+255),w,b
 16181  013BA0  0101               	movlb	1	; () banked
 16182  013BA2  21F4               	addwfc	(??_MiApp_SearchConnection+2)& (0+255),w,b
 16183  013BA4  0101               	movlb	1	; () banked
 16184  013BA6  6FF8               	movwf	(??_MiApp_SearchConnection+6)& (0+255),b
 16185  013BA8  0103               	movlb	3	; () banked
 16186  013BAA  51DF               	movf	(MiApp_SearchConnection@t2+3)& (0+255),w,b
 16187  013BAC  0101               	movlb	1	; () banked
 16188  013BAE  21F5               	addwfc	(??_MiApp_SearchConnection+3)& (0+255),w,b
 16189  013BB0  0101               	movlb	1	; () banked
 16190  013BB2  6FF9               	movwf	(??_MiApp_SearchConnection+7)& (0+255),b
 16191  013BB4  0103               	movlb	3	; () banked
 16192  013BB6  51E0               	movf	MiApp_SearchConnection@ScanDuration& (0+255),w,b
 16193  013BB8  0D04               	mullw	4
 16194  013BBA  0E33               	movlw	low _ScanTime
 16195  013BBC  24F3               	addwf	prodl,w,c
 16196  013BBE  6EF6               	movwf	tblptrl,c
 16197  013BC0  0EFF               	movlw	high _ScanTime
 16198  013BC2  20F4               	addwfc	prodh,w,c
 16199  013BC4  6EF7               	movwf	tblptrh,c
 16200  013BC6                     	if	1	;There are 3 active tblptr bytes
 16201  013BC6  6AF8               	clrf	tblptru,c
 16202  013BC8  0E00               	movlw	low (__mediumconst shr (0+16))
 16203  013BCA  22F8               	addwfc	tblptru,f,c
 16204  013BCC                     	endif
 16205  013BCC  0101               	movlb	1	; () banked
 16206  013BCE  51F6               	movf	(??_MiApp_SearchConnection+4)& (0+255),w,b
 16207  013BD0  0009               	tblrd		*+
 16208  013BD2  5CF5               	subwf	tablat,w,c
 16209  013BD4  0101               	movlb	1	; () banked
 16210  013BD6  51F7               	movf	(??_MiApp_SearchConnection+5)& (0+255),w,b
 16211  013BD8  0009               	tblrd		*+
 16212  013BDA  58F5               	subwfb	tablat,w,c
 16213  013BDC  0101               	movlb	1	; () banked
 16214  013BDE  51F8               	movf	(??_MiApp_SearchConnection+6)& (0+255),w,b
 16215  013BE0  0009               	tblrd		*+
 16216  013BE2  58F5               	subwfb	tablat,w,c
 16217  013BE4  0101               	movlb	1	; () banked
 16218  013BE6  51F9               	movf	(??_MiApp_SearchConnection+7)& (0+255),w,b
 16219  013BE8  0009               	tblrd		*+
 16220  013BEA  58F5               	subwfb	tablat,w,c
 16221  013BEC  B0D8               	btfsc	status,0,c
 16222  013BEE  D7A8               	goto	l13337
 16223  013BF0                     l13347:
 16224                           
 16225                           ; BSR set to: 1
 16226                           ;miwi_mesh.c: 4026: }
 16227                           ;miwi_mesh.c: 4027: }
 16228                           ;miwi_mesh.c: 4028: }
 16229                           ;miwi_mesh.c: 4029: i++;
 16230  013BF0  0103               	movlb	3	; () banked
 16231  013BF2  2BE2               	incf	MiApp_SearchConnection@i& (0+255),f,b
 16232  013BF4                     l13349:
 16233                           
 16234                           ; BSR set to: 3
 16235  013BF4  0E1F               	movlw	31
 16236  013BF6  0103               	movlb	3	; () banked
 16237  013BF8  65E2               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
 16238  013BFA  D734               	goto	l13319
 16239                           
 16240                           ; BSR set to: 3
 16241                           ;miwi_mesh.c: 4030: }
 16242                           ;miwi_mesh.c: 4032: MiApp_SetChannel(backupChannel);
 16243                           
 16244                           ; BSR set to: 3
 16245  013BFC  0103               	movlb	3	; () banked
 16246  013BFE  51E1               	movf	MiApp_SearchConnection@backupChannel& (0+255),w,b
 16247  013C00  EC8D  F0B7         	call	_MiApp_SetChannel
 16248                           
 16249                           ;miwi_mesh.c: 4033: MiWiStateMachine.bits.searchingForNetwork = 0;
 16250  013C04  0101               	movlb	1	; () banked
 16251  013C06  9138               	bcf	_MiWiStateMachine& (0+255),0,b
 16252                           
 16253                           ; BSR set to: 1
 16254                           ;miwi_mesh.c: 4035: return ActiveScanResultIndex;
 16255  013C08  0101               	movlb	1	; () banked
 16256  013C0A  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 16257  013C0C  0012               	return	
 16258  013C0E                     __end_of_MiApp_SearchConnection:
 16259                           	opt stack 0
 16260                           tblptru	equ	0xFF8
 16261                           tblptrh	equ	0xFF7
 16262                           tblptrl	equ	0xFF6
 16263                           tablat	equ	0xFF5
 16264                           prodh	equ	0xFF4
 16265                           prodl	equ	0xFF3
 16266                           intcon	equ	0xFF2
 16267                           intcon2	equ	0xFF1
 16268                           intcon3	equ	0xFF0
 16269                           indf0	equ	0xFEF
 16270                           postinc0	equ	0xFEE
 16271                           plusw0	equ	0xFEB
 16272                           fsr0h	equ	0xFEA
 16273                           fsr0l	equ	0xFE9
 16274                           wreg	equ	0xFE8
 16275                           indf1	equ	0xFE7
 16276                           postinc1	equ	0xFE6
 16277                           postdec1	equ	0xFE5
 16278                           fsr1h	equ	0xFE2
 16279                           fsr1l	equ	0xFE1
 16280                           indf2	equ	0xFDF
 16281                           postinc2	equ	0xFDE
 16282                           postdec2	equ	0xFDD
 16283                           plusw2	equ	0xFDB
 16284                           fsr2h	equ	0xFDA
 16285                           fsr2l	equ	0xFD9
 16286                           status	equ	0xFD8
 16287                           
 16288 ;; *************** function _SendMACPacket *****************
 16289 ;; Defined at:
 16290 ;;		line 2251 in file "src/miwi/miwi_mesh.c"
 16291 ;; Parameters:    Size  Location     Type
 16292 ;;  Address         2   57[BANK1 ] PTR unsigned char 
 16293 ;;		 -> ConnectionTable(90), NULL(0), 
 16294 ;;  PacketType      1   59[BANK1 ] unsigned char 
 16295 ;; Auto vars:     Size  Location     Type
 16296 ;;		None
 16297 ;; Return value:  Size  Location     Type
 16298 ;;                  1    wreg      unsigned char 
 16299 ;; Registers used:
 16300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16301 ;; Tracked objects:
 16302 ;;		On entry : 0/0
 16303 ;;		On exit  : 0/0
 16304 ;;		Unchanged: 0/0
 16305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16306 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16308 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16309 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16310 ;;Total ram usage:        4 bytes
 16311 ;; Hardware stack levels used:    1
 16312 ;; Hardware stack levels required when called:   14
 16313 ;; This function calls:
 16314 ;;		_MiMAC_SendPacket
 16315 ;; This function is called by:
 16316 ;;		_MiApp_SearchConnection
 16317 ;;		_MiApp_EstablishConnection
 16318 ;; This function uses a non-reentrant model
 16319 ;;
 16320                           
 16321                           	psect	text52
 16322  0166D4                     __ptext52:
 16323                           	opt stack 0
 16324  0166D4                     _SendMACPacket:
 16325                           	opt stack 15
 16326                           
 16327                           ;miwi_mesh.c: 2254: MTP.flags.Val = 0;
 16328                           
 16329                           ; BSR set to: 1
 16330                           ;incstack = 0
 16331  0166D4  0E00               	movlw	0
 16332  0166D6  0101               	movlb	1	; () banked
 16333  0166D8  6F2A               	movwf	_MTP& (0+255),b
 16334                           
 16335                           ; BSR set to: 1
 16336                           ;miwi_mesh.c: 2256: MTP.flags.bits.packetType = PacketType;
 16337  0166DA  0101               	movlb	1	; () banked
 16338  0166DC  512A               	movf	_MTP& (0+255),w,b
 16339  0166DE  0101               	movlb	1	; () banked
 16340  0166E0  19C5               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 16341  0166E2  0BFC               	andlw	-4
 16342  0166E4  19C5               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 16343  0166E6  0101               	movlb	1	; () banked
 16344  0166E8  6F2A               	movwf	_MTP& (0+255),b
 16345                           
 16346                           ; BSR set to: 1
 16347                           ;miwi_mesh.c: 2257: if( Address == (0) )
 16348  0166EA  0101               	movlb	1	; () banked
 16349  0166EC  51C3               	movf	SendMACPacket@Address& (0+255),w,b
 16350  0166EE  0101               	movlb	1	; () banked
 16351  0166F0  11C4               	iorwf	(SendMACPacket@Address+1)& (0+255),w,b
 16352  0166F2  A4D8               	btfss	status,2,c
 16353  0166F4  D002               	goto	l12641
 16354                           
 16355                           ; BSR set to: 1
 16356                           ;miwi_mesh.c: 2258: {
 16357                           ;miwi_mesh.c: 2259: MTP.flags.bits.broadcast = 1;
 16358  0166F6  0101               	movlb	1	; () banked
 16359  0166F8  852A               	bsf	_MTP& (0+255),2,b
 16360  0166FA                     l12641:
 16361                           
 16362                           ; BSR set to: 1
 16363                           ;miwi_mesh.c: 2260: }
 16364                           ;miwi_mesh.c: 2261: MTP.flags.bits.ackReq = (MTP.flags.bits.broadcast) ? 0:1;
 16365  0166FA  0101               	movlb	1	; () banked
 16366  0166FC  B52A               	btfsc	_MTP& (0+255),2,b
 16367  0166FE  D004               	goto	u14780
 16368  016700  0101               	movlb	1	; () banked
 16369  016702  6BC6               	clrf	??_SendMACPacket& (0+255),b
 16370  016704  2BC6               	incf	??_SendMACPacket& (0+255),f,b
 16371  016706  D002               	goto	u14798
 16372  016708                     u14780:
 16373  016708  0101               	movlb	1	; () banked
 16374  01670A  6BC6               	clrf	??_SendMACPacket& (0+255),b
 16375  01670C                     u14798:
 16376  01670C  0101               	movlb	1	; () banked
 16377  01670E  3BC6               	swapf	??_SendMACPacket& (0+255),f,b
 16378  016710  47C6               	rlncf	??_SendMACPacket& (0+255),f,b
 16379  016712  0101               	movlb	1	; () banked
 16380  016714  512A               	movf	_MTP& (0+255),w,b
 16381  016716  0101               	movlb	1	; () banked
 16382  016718  19C6               	xorwf	??_SendMACPacket& (0+255),w,b
 16383  01671A  0BDF               	andlw	-33
 16384  01671C  19C6               	xorwf	??_SendMACPacket& (0+255),w,b
 16385  01671E  0101               	movlb	1	; () banked
 16386  016720  6F2A               	movwf	_MTP& (0+255),b
 16387                           
 16388                           ; BSR set to: 1
 16389                           ;miwi_mesh.c: 2262: MTP.flags.bits.sourcePrsnt = 1;
 16390  016722  0101               	movlb	1	; () banked
 16391  016724  8F2A               	bsf	_MTP& (0+255),7,b
 16392                           
 16393                           ;miwi_mesh.c: 2264: MTP.DestAddress = Address;
 16394  016726  C1C3  F12B         	movff	SendMACPacket@Address,_MTP+1
 16395  01672A  C1C4  F12C         	movff	SendMACPacket@Address+1,_MTP+2
 16396                           
 16397                           ; BSR set to: 1
 16398                           ;miwi_mesh.c: 2287: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 16399                           ;	Return value of _SendMACPacket is never used
 16400  01672E  C12A  F1B9         	movff	_MTP,MiMAC_SendPacket@transParam
 16401  016732  C12B  F1BA         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 16402  016736  C12C  F1BB         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 16403  01673A  0E4E               	movlw	low _TxBuffer
 16404  01673C  0101               	movlb	1	; () banked
 16405  01673E  6FBC               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 16406  016740  0E01               	movlw	high _TxBuffer
 16407  016742  0101               	movlb	1	; () banked
 16408  016744  6FBD               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 16409  016746  C146  F1BE         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 16410  01674A  ECCF  F09A         	call	_MiMAC_SendPacket	;wreg free
 16411  01674E  0012               	return	
 16412  016750                     __end_of_SendMACPacket:
 16413                           	opt stack 0
 16414                           tblptru	equ	0xFF8
 16415                           tblptrh	equ	0xFF7
 16416                           tblptrl	equ	0xFF6
 16417                           tablat	equ	0xFF5
 16418                           prodh	equ	0xFF4
 16419                           prodl	equ	0xFF3
 16420                           intcon	equ	0xFF2
 16421                           intcon2	equ	0xFF1
 16422                           intcon3	equ	0xFF0
 16423                           indf0	equ	0xFEF
 16424                           postinc0	equ	0xFEE
 16425                           plusw0	equ	0xFEB
 16426                           fsr0h	equ	0xFEA
 16427                           fsr0l	equ	0xFE9
 16428                           wreg	equ	0xFE8
 16429                           indf1	equ	0xFE7
 16430                           postinc1	equ	0xFE6
 16431                           postdec1	equ	0xFE5
 16432                           fsr1h	equ	0xFE2
 16433                           fsr1l	equ	0xFE1
 16434                           indf2	equ	0xFDF
 16435                           postinc2	equ	0xFDE
 16436                           postdec2	equ	0xFDD
 16437                           plusw2	equ	0xFDB
 16438                           fsr2h	equ	0xFDA
 16439                           fsr2l	equ	0xFD9
 16440                           status	equ	0xFD8
 16441                           
 16442 ;; *************** function _MiApp_SetChannel *****************
 16443 ;; Defined at:
 16444 ;;		line 3867 in file "src/miwi/miwi_mesh.c"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;  channel         1    wreg     unsigned char 
 16447 ;; Auto vars:     Size  Location     Type
 16448 ;;  channel         1   10[BANK1 ] unsigned char 
 16449 ;; Return value:  Size  Location     Type
 16450 ;;                  1    wreg      unsigned char 
 16451 ;; Registers used:
 16452 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16453 ;; Tracked objects:
 16454 ;;		On entry : 0/0
 16455 ;;		On exit  : 0/0
 16456 ;;		Unchanged: 0/0
 16457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16459 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16461 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16462 ;;Total ram usage:        1 bytes
 16463 ;; Hardware stack levels used:    1
 16464 ;; Hardware stack levels required when called:   13
 16465 ;; This function calls:
 16466 ;;		_MiMAC_SetChannel
 16467 ;; This function is called by:
 16468 ;;		_MiApp_ProtocolInit
 16469 ;;		_MiApp_SearchConnection
 16470 ;;		_MiApp_EstablishConnection
 16471 ;; This function uses a non-reentrant model
 16472 ;;
 16473                           
 16474                           	psect	text53
 16475  016F1A                     __ptext53:
 16476                           	opt stack 0
 16477  016F1A                     _MiApp_SetChannel:
 16478                           	opt stack 16
 16479                           
 16480                           ;incstack = 0
 16481                           ;MiApp_SetChannel@channel stored from wreg
 16482  016F1A  0101               	movlb	1	; () banked
 16483  016F1C  6F94               	movwf	MiApp_SetChannel@channel& (0+255),b
 16484                           
 16485                           ;miwi_mesh.c: 3869: if( MiMAC_SetChannel(channel, 0) )
 16486  016F1E  0E00               	movlw	0
 16487  016F20  0101               	movlb	1	; () banked
 16488  016F22  6F91               	movwf	MiMAC_SetChannel@offsetFreq& (0+255),b
 16489  016F24  0101               	movlb	1	; () banked
 16490  016F26  5194               	movf	MiApp_SetChannel@channel& (0+255),w,b
 16491  016F28  ECC0  F0AF         	call	_MiMAC_SetChannel
 16492  016F2C  0900               	iorlw	0
 16493  016F2E  B4D8               	btfsc	status,2,c
 16494  016F30  0012               	return	
 16495                           
 16496                           ;miwi_mesh.c: 3870: {
 16497                           ;miwi_mesh.c: 3871: currentChannel = channel;
 16498  016F32  C194  F189         	movff	MiApp_SetChannel@channel,_currentChannel
 16499                           
 16500                           ;miwi_mesh.c: 3875: return 1;
 16501                           ;	Return value of _MiApp_SetChannel is never used
 16502  016F36  0012               	return	
 16503  016F38                     __end_of_MiApp_SetChannel:
 16504                           	opt stack 0
 16505                           tblptru	equ	0xFF8
 16506                           tblptrh	equ	0xFF7
 16507                           tblptrl	equ	0xFF6
 16508                           tablat	equ	0xFF5
 16509                           prodh	equ	0xFF4
 16510                           prodl	equ	0xFF3
 16511                           intcon	equ	0xFF2
 16512                           intcon2	equ	0xFF1
 16513                           intcon3	equ	0xFF0
 16514                           indf0	equ	0xFEF
 16515                           postinc0	equ	0xFEE
 16516                           plusw0	equ	0xFEB
 16517                           fsr0h	equ	0xFEA
 16518                           fsr0l	equ	0xFE9
 16519                           wreg	equ	0xFE8
 16520                           indf1	equ	0xFE7
 16521                           postinc1	equ	0xFE6
 16522                           postdec1	equ	0xFE5
 16523                           fsr1h	equ	0xFE2
 16524                           fsr1l	equ	0xFE1
 16525                           indf2	equ	0xFDF
 16526                           postinc2	equ	0xFDE
 16527                           postdec2	equ	0xFDD
 16528                           plusw2	equ	0xFDB
 16529                           fsr2h	equ	0xFDA
 16530                           fsr2l	equ	0xFD9
 16531                           status	equ	0xFD8
 16532                           
 16533 ;; *************** function _MiMAC_SetChannel *****************
 16534 ;; Defined at:
 16535 ;;		line 490 in file "src/miwi/drv_mrf_miwi_89xa.c"
 16536 ;; Parameters:    Size  Location     Type
 16537 ;;  channel         1    wreg     unsigned char 
 16538 ;;  offsetFreq      1    7[BANK1 ] unsigned char 
 16539 ;; Auto vars:     Size  Location     Type
 16540 ;;  channel         1    9[BANK1 ] unsigned char 
 16541 ;; Return value:  Size  Location     Type
 16542 ;;                  1    wreg      unsigned char 
 16543 ;; Registers used:
 16544 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16545 ;; Tracked objects:
 16546 ;;		On entry : 0/0
 16547 ;;		On exit  : 0/0
 16548 ;;		Unchanged: 0/0
 16549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16550 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16551 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16552 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16553 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16554 ;;Total ram usage:        3 bytes
 16555 ;; Hardware stack levels used:    1
 16556 ;; Hardware stack levels required when called:   12
 16557 ;; This function calls:
 16558 ;;		_RegisterSet
 16559 ;;		_SetRFMode
 16560 ;; This function is called by:
 16561 ;;		_MiApp_SetChannel
 16562 ;; This function uses a non-reentrant model
 16563 ;;
 16564                           
 16565                           	psect	text54
 16566  015F80                     __ptext54:
 16567                           	opt stack 0
 16568  015F80                     _MiMAC_SetChannel:
 16569                           	opt stack 16
 16570                           
 16571                           ;incstack = 0
 16572                           ;MiMAC_SetChannel@channel stored from wreg
 16573  015F80  0101               	movlb	1	; () banked
 16574  015F82  6F93               	movwf	MiMAC_SetChannel@channel& (0+255),b
 16575                           
 16576                           ;drv_mrf_miwi_89xa.c: 492: if( channel >= 32 )
 16577  015F84  0E1F               	movlw	31
 16578  015F86  0101               	movlb	1	; () banked
 16579  015F88  6593               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 16580  015F8A  D002               	goto	l12277
 16581                           
 16582                           ; BSR set to: 1
 16583                           ;drv_mrf_miwi_89xa.c: 493: {
 16584                           ;drv_mrf_miwi_89xa.c: 494: return 0;
 16585  015F8C  0E00               	movlw	0
 16586                           
 16587                           ; BSR set to: 1
 16588  015F8E  0012               	return	
 16589  015F90                     l12277:
 16590                           
 16591                           ; BSR set to: 1
 16592                           ;drv_mrf_miwi_89xa.c: 495: }
 16593                           ;drv_mrf_miwi_89xa.c: 498: RegisterSet(0x0C00 | 100);
 16594  015F90  0E0C               	movlw	12
 16595  015F92  0101               	movlb	1	; () banked
 16596  015F94  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 16597  015F96  0E64               	movlw	100
 16598  015F98  6F8C               	movwf	RegisterSet@setting& (0+255),b
 16599  015F9A  EC09  F0B6         	call	_RegisterSet	;wreg free
 16600                           
 16601                           ;drv_mrf_miwi_89xa.c: 499: RegisterSet(0x0E00 | PVALUE[channel]);
 16602  015F9E  0101               	movlb	1	; () banked
 16603  015FA0  5193               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 16604  015FA2  0D01               	mullw	1
 16605  015FA4  0E6F               	movlw	low _PVALUE
 16606  015FA6  24F3               	addwf	prodl,w,c
 16607  015FA8  6EF6               	movwf	tblptrl,c
 16608  015FAA  0EFF               	movlw	high _PVALUE
 16609  015FAC  20F4               	addwfc	prodh,w,c
 16610  015FAE  6EF7               	movwf	tblptrh,c
 16611  015FB0                     	if	1	;There are 3 active tblptr bytes
 16612  015FB0  6AF8               	clrf	tblptru,c
 16613  015FB2  0E00               	movlw	low (__mediumconst shr (0+16))
 16614  015FB4  22F8               	addwfc	tblptru,f,c
 16615  015FB6                     	endif
 16616  015FB6  0008               	tblrd		*
 16617  015FB8  CFF5 F192          	movff	tablat,??_MiMAC_SetChannel
 16618  015FBC  0E00               	movlw	0
 16619  015FBE  0101               	movlb	1	; () banked
 16620  015FC0  1192               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 16621  015FC2  0101               	movlb	1	; () banked
 16622  015FC4  6F8C               	movwf	RegisterSet@setting& (0+255),b
 16623  015FC6  0E0E               	movlw	14
 16624  015FC8  0101               	movlb	1	; () banked
 16625  015FCA  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 16626  015FCC  EC09  F0B6         	call	_RegisterSet	;wreg free
 16627                           
 16628                           ;drv_mrf_miwi_89xa.c: 500: RegisterSet(0x1000 | SVALUE[channel]);
 16629  015FD0  0101               	movlb	1	; () banked
 16630  015FD2  5193               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 16631  015FD4  0D01               	mullw	1
 16632  015FD6  0E8F               	movlw	low _SVALUE
 16633  015FD8  24F3               	addwf	prodl,w,c
 16634  015FDA  6EF6               	movwf	tblptrl,c
 16635  015FDC  0EFF               	movlw	high _SVALUE
 16636  015FDE  20F4               	addwfc	prodh,w,c
 16637  015FE0  6EF7               	movwf	tblptrh,c
 16638  015FE2                     	if	1	;There are 3 active tblptr bytes
 16639  015FE2  6AF8               	clrf	tblptru,c
 16640  015FE4  0E00               	movlw	low (__mediumconst shr (0+16))
 16641  015FE6  22F8               	addwfc	tblptru,f,c
 16642  015FE8                     	endif
 16643  015FE8  0008               	tblrd		*
 16644  015FEA  CFF5 F192          	movff	tablat,??_MiMAC_SetChannel
 16645  015FEE  0E00               	movlw	0
 16646  015FF0  0101               	movlb	1	; () banked
 16647  015FF2  1192               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 16648  015FF4  0101               	movlb	1	; () banked
 16649  015FF6  6F8C               	movwf	RegisterSet@setting& (0+255),b
 16650  015FF8  0E10               	movlw	16
 16651  015FFA  0101               	movlb	1	; () banked
 16652  015FFC  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 16653  015FFE  EC09  F0B6         	call	_RegisterSet	;wreg free
 16654                           
 16655                           ;drv_mrf_miwi_89xa.c: 501: SetRFMode(0x20);
 16656  016002  0E20               	movlw	32
 16657  016004  ECC7  F0B1         	call	_SetRFMode
 16658                           
 16659                           ;drv_mrf_miwi_89xa.c: 502: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 16660  016008  0E00               	movlw	0
 16661  01600A  0101               	movlb	1	; () banked
 16662  01600C  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 16663  01600E  0E56               	movlw	86
 16664  016010  6F8C               	movwf	RegisterSet@setting& (0+255),b
 16665  016012  EC09  F0B6         	call	_RegisterSet	;wreg free
 16666                           
 16667                           ;drv_mrf_miwi_89xa.c: 503: SetRFMode(0x40);
 16668  016016  0E40               	movlw	64
 16669  016018  ECC7  F0B1         	call	_SetRFMode
 16670                           
 16671                           ;drv_mrf_miwi_89xa.c: 504: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 16672  01601C  0E1C               	movlw	28
 16673  01601E  0101               	movlb	1	; () banked
 16674  016020  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 16675  016022  0E0F               	movlw	15
 16676  016024  6F8C               	movwf	RegisterSet@setting& (0+255),b
 16677  016026  EC09  F0B6         	call	_RegisterSet	;wreg free
 16678                           
 16679                           ;drv_mrf_miwi_89xa.c: 505: SetRFMode(0x20);
 16680  01602A  0E20               	movlw	32
 16681  01602C  ECC7  F0B1         	call	_SetRFMode
 16682                           
 16683                           ;drv_mrf_miwi_89xa.c: 506: SetRFMode(0x60);
 16684  016030  0E60               	movlw	96
 16685  016032  ECC7  F0B1         	call	_SetRFMode
 16686                           
 16687                           ;drv_mrf_miwi_89xa.c: 508: return 1;
 16688  016036  0E01               	movlw	1
 16689  016038  0012               	return	
 16690  01603A                     __end_of_MiMAC_SetChannel:
 16691                           	opt stack 0
 16692                           tblptru	equ	0xFF8
 16693                           tblptrh	equ	0xFF7
 16694                           tblptrl	equ	0xFF6
 16695                           tablat	equ	0xFF5
 16696                           prodh	equ	0xFF4
 16697                           prodl	equ	0xFF3
 16698                           intcon	equ	0xFF2
 16699                           intcon2	equ	0xFF1
 16700                           intcon3	equ	0xFF0
 16701                           indf0	equ	0xFEF
 16702                           postinc0	equ	0xFEE
 16703                           plusw0	equ	0xFEB
 16704                           fsr0h	equ	0xFEA
 16705                           fsr0l	equ	0xFE9
 16706                           wreg	equ	0xFE8
 16707                           indf1	equ	0xFE7
 16708                           postinc1	equ	0xFE6
 16709                           postdec1	equ	0xFE5
 16710                           fsr1h	equ	0xFE2
 16711                           fsr1l	equ	0xFE1
 16712                           indf2	equ	0xFDF
 16713                           postinc2	equ	0xFDE
 16714                           postdec2	equ	0xFDD
 16715                           plusw2	equ	0xFDB
 16716                           fsr2h	equ	0xFDA
 16717                           fsr2l	equ	0xFD9
 16718                           status	equ	0xFD8
 16719                           
 16720 ;; *************** function _MiApp_MessageAvailable *****************
 16721 ;; Defined at:
 16722 ;;		line 4236 in file "src/miwi/miwi_mesh.c"
 16723 ;; Parameters:    Size  Location     Type
 16724 ;;		None
 16725 ;; Auto vars:     Size  Location     Type
 16726 ;;		None
 16727 ;; Return value:  Size  Location     Type
 16728 ;;                  1    wreg      unsigned char 
 16729 ;; Registers used:
 16730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16731 ;; Tracked objects:
 16732 ;;		On entry : 0/0
 16733 ;;		On exit  : 0/0
 16734 ;;		Unchanged: 0/0
 16735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16740 ;;Total ram usage:        0 bytes
 16741 ;; Hardware stack levels used:    1
 16742 ;; Hardware stack levels required when called:   15
 16743 ;; This function calls:
 16744 ;;		_MiWiTasks
 16745 ;; This function is called by:
 16746 ;;		_MiApp_SearchConnection
 16747 ;;		_MiApp_EstablishConnection
 16748 ;;		_MiApp_UnicastAddress
 16749 ;;		_main
 16750 ;;		_process_update_answer
 16751 ;;		_do_NETWORK_REGISTER
 16752 ;;		_do_POWER_TEST
 16753 ;;		_do_UPDATE
 16754 ;;		_MiApp_UnicastConnection
 16755 ;;		_do_PING
 16756 ;; This function uses a non-reentrant model
 16757 ;;
 16758                           
 16759                           	psect	text55
 16760  016FD0                     __ptext55:
 16761                           	opt stack 0
 16762  016FD0                     _MiApp_MessageAvailable:
 16763                           	opt stack 12
 16764                           
 16765                           ;miwi_mesh.c: 4238: MiWiTasks();
 16766                           
 16767                           ;incstack = 0
 16768  016FD0  EC00  F080         	call	_MiWiTasks	;wreg free
 16769                           
 16770                           ;miwi_mesh.c: 4239: return MiWiStateMachine.bits.RxHasUserData;
 16771  016FD4  0101               	movlb	1	; () banked
 16772  016FD6  A538               	btfss	_MiWiStateMachine& (0+255),2,b
 16773  016FD8  D002               	goto	u14330
 16774  016FDA  0E01               	movlw	1
 16775  016FDC  0012               	return	
 16776  016FDE                     u14330:
 16777  016FDE  0E00               	movlw	0
 16778  016FE0  0012               	return	
 16779  016FE2                     __end_of_MiApp_MessageAvailable:
 16780                           	opt stack 0
 16781                           tblptru	equ	0xFF8
 16782                           tblptrh	equ	0xFF7
 16783                           tblptrl	equ	0xFF6
 16784                           tablat	equ	0xFF5
 16785                           prodh	equ	0xFF4
 16786                           prodl	equ	0xFF3
 16787                           intcon	equ	0xFF2
 16788                           intcon2	equ	0xFF1
 16789                           intcon3	equ	0xFF0
 16790                           indf0	equ	0xFEF
 16791                           postinc0	equ	0xFEE
 16792                           plusw0	equ	0xFEB
 16793                           fsr0h	equ	0xFEA
 16794                           fsr0l	equ	0xFE9
 16795                           wreg	equ	0xFE8
 16796                           indf1	equ	0xFE7
 16797                           postinc1	equ	0xFE6
 16798                           postdec1	equ	0xFE5
 16799                           fsr1h	equ	0xFE2
 16800                           fsr1l	equ	0xFE1
 16801                           indf2	equ	0xFDF
 16802                           postinc2	equ	0xFDE
 16803                           postdec2	equ	0xFDD
 16804                           plusw2	equ	0xFDB
 16805                           fsr2h	equ	0xFDA
 16806                           fsr2l	equ	0xFD9
 16807                           status	equ	0xFD8
 16808                           
 16809 ;; *************** function _MiWiTasks *****************
 16810 ;; Defined at:
 16811 ;;		line 282 in file "src/miwi/miwi_mesh.c"
 16812 ;; Parameters:    Size  Location     Type
 16813 ;;		None
 16814 ;; Auto vars:     Size  Location     Type
 16815 ;;  j               1   94[BANK1 ] unsigned char 
 16816 ;;  CapacityByte    1   93[BANK1 ] struct .
 16817 ;;  cIndex          1   83[BANK1 ] unsigned char 
 16818 ;;  rxIndex         1   92[BANK1 ] unsigned char 
 16819 ;;  sourceShortA    2   97[BANK1 ] struct .
 16820 ;;  sourcePANID     2   95[BANK1 ] struct .
 16821 ;;  destShortAdd    2   90[BANK1 ] struct .
 16822 ;;  destPANID       2   88[BANK1 ] struct .
 16823 ;;  t1              4   84[BANK1 ] struct _MIWI_TICK
 16824 ;;  t2              4   79[BANK1 ] struct _MIWI_TICK
 16825 ;;  i               1   99[BANK1 ] unsigned char 
 16826 ;; Return value:  Size  Location     Type
 16827 ;;		None               void
 16828 ;; Registers used:
 16829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16830 ;; Tracked objects:
 16831 ;;		On entry : 0/0
 16832 ;;		On exit  : 0/0
 16833 ;;		Unchanged: 0/0
 16834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16836 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16837 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16838 ;;      Totals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16839 ;;Total ram usage:       29 bytes
 16840 ;; Hardware stack levels used:    1
 16841 ;; Hardware stack levels required when called:   14
 16842 ;; This function calls:
 16843 ;;		_AddNodeToNetworkTable
 16844 ;;		_MiMAC_DiscardPacket
 16845 ;;		_MiMAC_ReceivedPacket
 16846 ;;		_MiMAC_SendPacket
 16847 ;;		_MiMAC_SetAltAddress
 16848 ;;		_MiWi_TickGet
 16849 ;;		_SearchForLongAddress
 16850 ;;		_SearchForShortAddress
 16851 ;; This function is called by:
 16852 ;;		_MiApp_MessageAvailable
 16853 ;;		_main
 16854 ;; This function uses a non-reentrant model
 16855 ;;
 16856                           
 16857                           	psect	text56
 16858  010000                     __ptext56:
 16859                           	opt stack 0
 16860  010000                     _MiWiTasks:
 16861                           	opt stack 12
 16862                           
 16863                           ;miwi_mesh.c: 284: uint8_t i;
 16864                           ;miwi_mesh.c: 285: MIWI_TICK t1, t2;
 16865                           ;miwi_mesh.c: 287: if( MiMAC_ReceivedPacket() )
 16866                           
 16867                           ; BSR set to: 1
 16868                           ;incstack = 0
 16869  010000  ECF3  F08F         	call	_MiMAC_ReceivedPacket	;wreg free
 16870  010004  0900               	iorlw	0
 16871  010006  B4D8               	btfsc	status,2,c
 16872  010008  EF83  F085         	goto	l12205
 16873                           
 16874                           ;miwi_mesh.c: 288: {
 16875                           ;miwi_mesh.c: 289: if( MiWiStateMachine.bits.RxHasUserData )
 16876  01000C  0101               	movlb	1	; () banked
 16877  01000E  B538               	btfsc	_MiWiStateMachine& (0+255),2,b
 16878  010010  0012               	return	
 16879                           
 16880                           ; BSR set to: 1
 16881                           ;miwi_mesh.c: 292: }
 16882                           ;miwi_mesh.c: 294: rxMessage.flags.Val = 0;
 16883                           
 16884                           ; BSR set to: 1
 16885                           
 16886                           ; BSR set to: 1
 16887                           ;miwi_mesh.c: 290: {
 16888                           ;miwi_mesh.c: 291: return;
 16889  010012  0E00               	movlw	0
 16890  010014  0101               	movlb	1	; () banked
 16891  010016  6F0C               	movwf	_rxMessage& (0+255),b
 16892                           
 16893                           ; BSR set to: 1
 16894                           ;miwi_mesh.c: 295: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
 16895  010018  0101               	movlb	1	; () banked
 16896  01001A  A516               	btfss	_MACRxPacket& (0+255),2,b
 16897  01001C  D004               	goto	u13660
 16898  01001E  0101               	movlb	1	; () banked
 16899  010020  6BD1               	clrf	??_MiWiTasks& (0+255),b
 16900  010022  2BD1               	incf	??_MiWiTasks& (0+255),f,b
 16901  010024  D002               	goto	u13668
 16902  010026                     u13660:
 16903  010026  0101               	movlb	1	; () banked
 16904  010028  6BD1               	clrf	??_MiWiTasks& (0+255),b
 16905  01002A                     u13668:
 16906  01002A  0101               	movlb	1	; () banked
 16907  01002C  510C               	movf	_rxMessage& (0+255),w,b
 16908  01002E  0101               	movlb	1	; () banked
 16909  010030  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 16910  010032  0BFC               	andlw	-4
 16911  010034  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 16912  010036  0101               	movlb	1	; () banked
 16913  010038  6F0C               	movwf	_rxMessage& (0+255),b
 16914                           
 16915                           ; BSR set to: 1
 16916                           ;miwi_mesh.c: 296: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 16917  01003A  0101               	movlb	1	; () banked
 16918  01003C  A716               	btfss	_MACRxPacket& (0+255),3,b
 16919  01003E  D003               	bra	u13675
 16920  010040  0101               	movlb	1	; () banked
 16921  010042  870C               	bsf	_rxMessage& (0+255),3,b
 16922  010044  D002               	bra	u13677
 16923  010046                     u13675:
 16924  010046  0101               	movlb	1	; () banked
 16925  010048  970C               	bcf	_rxMessage& (0+255),3,b
 16926  01004A                     u13677:
 16927                           
 16928                           ; BSR set to: 1
 16929                           ;miwi_mesh.c: 297: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 
      +                          0x01) ? 1:0;
 16930  01004A  0101               	movlb	1	; () banked
 16931  01004C  5116               	movf	_MACRxPacket& (0+255),w,b
 16932  01004E  0B03               	andlw	3
 16933  010050  06E8               	decf	wreg,f,c
 16934  010052  A4D8               	btfss	status,2,c
 16935  010054  D004               	goto	u13680
 16936  010056  0101               	movlb	1	; () banked
 16937  010058  6BD1               	clrf	??_MiWiTasks& (0+255),b
 16938  01005A  2BD1               	incf	??_MiWiTasks& (0+255),f,b
 16939  01005C  D002               	goto	u13698
 16940  01005E                     u13680:
 16941  01005E  0101               	movlb	1	; () banked
 16942  010060  6BD1               	clrf	??_MiWiTasks& (0+255),b
 16943  010062                     u13698:
 16944  010062  0101               	movlb	1	; () banked
 16945  010064  3BD1               	swapf	??_MiWiTasks& (0+255),f,b
 16946  010066  47D1               	rlncf	??_MiWiTasks& (0+255),f,b
 16947  010068  0101               	movlb	1	; () banked
 16948  01006A  510C               	movf	_rxMessage& (0+255),w,b
 16949  01006C  0101               	movlb	1	; () banked
 16950  01006E  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 16951  010070  0BDF               	andlw	-33
 16952  010072  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 16953  010074  0101               	movlb	1	; () banked
 16954  010076  6F0C               	movwf	_rxMessage& (0+255),b
 16955                           
 16956                           ; BSR set to: 1
 16957                           ;miwi_mesh.c: 298: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 16958  010078  0101               	movlb	1	; () banked
 16959  01007A  AF16               	btfss	_MACRxPacket& (0+255),7,b
 16960  01007C  D003               	bra	u13705
 16961  01007E  0101               	movlb	1	; () banked
 16962  010080  8D0C               	bsf	_rxMessage& (0+255),6,b
 16963  010082  D002               	bra	u13707
 16964  010084                     u13705:
 16965  010084  0101               	movlb	1	; () banked
 16966  010086  9D0C               	bcf	_rxMessage& (0+255),6,b
 16967  010088                     u13707:
 16968                           
 16969                           ; BSR set to: 1
 16970                           ;miwi_mesh.c: 299: if( MACRxPacket.flags.bits.sourcePrsnt )
 16971  010088  0101               	movlb	1	; () banked
 16972  01008A  AF16               	btfss	_MACRxPacket& (0+255),7,b
 16973  01008C  D006               	goto	l11877
 16974                           
 16975                           ; BSR set to: 1
 16976                           ;miwi_mesh.c: 300: {
 16977                           ;miwi_mesh.c: 304: rxMessage.flags.bits.altSrcAddr = 1;
 16978  01008E  0101               	movlb	1	; () banked
 16979  010090  8F0C               	bsf	_rxMessage& (0+255),7,b
 16980                           
 16981                           ; BSR set to: 1
 16982                           ;miwi_mesh.c: 306: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 16983  010092  C117  F10F         	movff	_MACRxPacket+1,_rxMessage+3
 16984  010096  C118  F110         	movff	_MACRxPacket+2,_rxMessage+4
 16985  01009A                     l11877:
 16986                           
 16987                           ; BSR set to: 1
 16988                           ;miwi_mesh.c: 307: }
 16989                           ;miwi_mesh.c: 311: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 16990  01009A  C11D  F115         	movff	_MACRxPacket+7,_rxMessage+9
 16991                           
 16992                           ; BSR set to: 1
 16993                           ;miwi_mesh.c: 312: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 16994  01009E  C11C  F114         	movff	_MACRxPacket+6,_rxMessage+8
 16995                           
 16996                           ; BSR set to: 1
 16997                           ;miwi_mesh.c: 314: MiWiStateMachine.bits.RxHasUserData = 0;
 16998  0100A2  0101               	movlb	1	; () banked
 16999  0100A4  9538               	bcf	_MiWiStateMachine& (0+255),2,b
 17000                           
 17001                           ;miwi_mesh.c: 317: switch(MACRxPacket.flags.bits.packetType)
 17002  0100A6  EF72  F085         	goto	l12201
 17003  0100AA                     l11883:
 17004                           
 17005                           ; BSR set to: 1
 17006                           ;miwi_mesh.c: 347: if( MACRxPacket.PayloadLen < 10 )
 17007  0100AA  0E0A               	movlw	10
 17008  0100AC  0101               	movlb	1	; () banked
 17009  0100AE  611B               	cpfslt	(_MACRxPacket+5)& (0+255),b
 17010  0100B0  D002               	goto	l11887
 17011  0100B2  EF7F  F085         	goto	l601
 17012  0100B6                     l11887:
 17013                           
 17014                           ; BSR set to: 1
 17015                           ;miwi_mesh.c: 350: }
 17016                           ;miwi_mesh.c: 353: destPANID.v[0] = MACRxPacket.Payload[2];
 17017  0100B6  0101               	movlb	1	; () banked
 17018  0100B8  EE20 F002          	lfsr	2,2
 17019  0100BC  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17020  0100BE  26D9               	addwf	fsr2l,f,c
 17021  0100C0  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17022  0100C2  22DA               	addwfc	fsr2h,f,c
 17023  0100C4  50DF               	movf	indf2,w,c
 17024  0100C6  0101               	movlb	1	; () banked
 17025  0100C8  6FE2               	movwf	MiWiTasks@destPANID& (0+255),b
 17026                           
 17027                           ;miwi_mesh.c: 354: destPANID.v[1] = MACRxPacket.Payload[3];
 17028  0100CA  0101               	movlb	1	; () banked
 17029  0100CC  EE20 F003          	lfsr	2,3
 17030  0100D0  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17031  0100D2  26D9               	addwf	fsr2l,f,c
 17032  0100D4  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17033  0100D6  22DA               	addwfc	fsr2h,f,c
 17034  0100D8  50DF               	movf	indf2,w,c
 17035  0100DA  0101               	movlb	1	; () banked
 17036  0100DC  6FE3               	movwf	(MiWiTasks@destPANID+1)& (0+255),b
 17037                           
 17038                           ;miwi_mesh.c: 355: destShortAddress.v[0] = MACRxPacket.Payload[4];
 17039  0100DE  0101               	movlb	1	; () banked
 17040  0100E0  EE20 F004          	lfsr	2,4
 17041  0100E4  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17042  0100E6  26D9               	addwf	fsr2l,f,c
 17043  0100E8  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17044  0100EA  22DA               	addwfc	fsr2h,f,c
 17045  0100EC  50DF               	movf	indf2,w,c
 17046  0100EE  0101               	movlb	1	; () banked
 17047  0100F0  6FE4               	movwf	MiWiTasks@destShortAddress& (0+255),b
 17048                           
 17049                           ;miwi_mesh.c: 356: destShortAddress.v[1] = MACRxPacket.Payload[5];
 17050  0100F2  0101               	movlb	1	; () banked
 17051  0100F4  EE20 F005          	lfsr	2,5
 17052  0100F8  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17053  0100FA  26D9               	addwf	fsr2l,f,c
 17054  0100FC  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17055  0100FE  22DA               	addwfc	fsr2h,f,c
 17056  010100  50DF               	movf	indf2,w,c
 17057  010102  0101               	movlb	1	; () banked
 17058  010104  6FE5               	movwf	(MiWiTasks@destShortAddress+1)& (0+255),b
 17059                           
 17060                           ;miwi_mesh.c: 357: sourcePANID.v[0] = MACRxPacket.Payload[6];
 17061  010106  0101               	movlb	1	; () banked
 17062  010108  EE20 F006          	lfsr	2,6
 17063  01010C  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17064  01010E  26D9               	addwf	fsr2l,f,c
 17065  010110  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17066  010112  22DA               	addwfc	fsr2h,f,c
 17067  010114  50DF               	movf	indf2,w,c
 17068  010116  0101               	movlb	1	; () banked
 17069  010118  6FE9               	movwf	MiWiTasks@sourcePANID& (0+255),b
 17070                           
 17071                           ;miwi_mesh.c: 358: sourcePANID.v[1] = MACRxPacket.Payload[7];
 17072  01011A  0101               	movlb	1	; () banked
 17073  01011C  EE20 F007          	lfsr	2,7
 17074  010120  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17075  010122  26D9               	addwf	fsr2l,f,c
 17076  010124  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17077  010126  22DA               	addwfc	fsr2h,f,c
 17078  010128  50DF               	movf	indf2,w,c
 17079  01012A  0101               	movlb	1	; () banked
 17080  01012C  6FEA               	movwf	(MiWiTasks@sourcePANID+1)& (0+255),b
 17081                           
 17082                           ;miwi_mesh.c: 359: sourceShortAddress.v[0] = MACRxPacket.Payload[8];
 17083  01012E  0101               	movlb	1	; () banked
 17084  010130  EE20 F008          	lfsr	2,8
 17085  010134  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17086  010136  26D9               	addwf	fsr2l,f,c
 17087  010138  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17088  01013A  22DA               	addwfc	fsr2h,f,c
 17089  01013C  50DF               	movf	indf2,w,c
 17090  01013E  0101               	movlb	1	; () banked
 17091  010140  6FEB               	movwf	MiWiTasks@sourceShortAddress& (0+255),b
 17092                           
 17093                           ;miwi_mesh.c: 360: sourceShortAddress.v[1] = MACRxPacket.Payload[9];
 17094  010142  0101               	movlb	1	; () banked
 17095  010144  EE20 F009          	lfsr	2,9
 17096  010148  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17097  01014A  26D9               	addwf	fsr2l,f,c
 17098  01014C  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17099  01014E  22DA               	addwfc	fsr2h,f,c
 17100  010150  50DF               	movf	indf2,w,c
 17101  010152  0101               	movlb	1	; () banked
 17102  010154  6FEC               	movwf	(MiWiTasks@sourceShortAddress+1)& (0+255),b
 17103                           
 17104                           ; BSR set to: 1
 17105                           ;miwi_mesh.c: 362: rxMessage.flags.Val = 0;
 17106  010156  0E00               	movlw	0
 17107  010158  0101               	movlb	1	; () banked
 17108  01015A  6F0C               	movwf	_rxMessage& (0+255),b
 17109                           
 17110                           ; BSR set to: 1
 17111                           ;miwi_mesh.c: 363: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 17112  01015C  0101               	movlb	1	; () banked
 17113  01015E  A716               	btfss	_MACRxPacket& (0+255),3,b
 17114  010160  D003               	bra	u13735
 17115  010162  0101               	movlb	1	; () banked
 17116  010164  870C               	bsf	_rxMessage& (0+255),3,b
 17117  010166  D002               	bra	u13737
 17118  010168                     u13735:
 17119  010168  0101               	movlb	1	; () banked
 17120  01016A  970C               	bcf	_rxMessage& (0+255),3,b
 17121  01016C                     u13737:
 17122                           
 17123                           ; BSR set to: 1
 17124                           ;miwi_mesh.c: 365: if(rxMessage.flags.bits.broadcast || destShortAddress.Val == 0xFFFF)
 17125  01016C  0101               	movlb	1	; () banked
 17126  01016E  510C               	movf	_rxMessage& (0+255),w,b
 17127  010170  0B03               	andlw	3
 17128  010172  0900               	iorlw	0
 17129  010174  A4D8               	btfss	status,2,c
 17130  010176  D007               	goto	l11897
 17131                           
 17132                           ; BSR set to: 1
 17133  010178  0101               	movlb	1	; () banked
 17134  01017A  29E4               	incf	MiWiTasks@destShortAddress& (0+255),w,b
 17135  01017C  E103               	bnz	u13751
 17136  01017E  0101               	movlb	1	; () banked
 17137  010180  29E5               	incf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 17138  010182  A4D8               	btfss	status,2,c
 17139  010184                     u13751:
 17140  010184  D0D4               	goto	l11951
 17141  010186                     l11897:
 17142                           
 17143                           ; BSR set to: 1
 17144                           ;miwi_mesh.c: 366: {
 17145                           ;miwi_mesh.c: 368: if( sourceShortAddress.Val == myShortAddress.Val &&
 17146                           ;miwi_mesh.c: 369: sourcePANID.Val == myPANID.Val )
 17147  010186  0101               	movlb	1	; () banked
 17148  010188  5185               	movf	_myShortAddress& (0+255),w,b
 17149  01018A  0101               	movlb	1	; () banked
 17150  01018C  19EB               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 17151  01018E  E112               	bnz	l11903
 17152  010190  0101               	movlb	1	; () banked
 17153  010192  5186               	movf	(_myShortAddress+1)& (0+255),w,b
 17154  010194  0101               	movlb	1	; () banked
 17155  010196  19EC               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 17156  010198  A4D8               	btfss	status,2,c
 17157  01019A  D00C               	goto	l11903
 17158                           
 17159                           ; BSR set to: 1
 17160  01019C  0101               	movlb	1	; () banked
 17161  01019E  5183               	movf	_myPANID& (0+255),w,b
 17162  0101A0  0101               	movlb	1	; () banked
 17163  0101A2  19E9               	xorwf	MiWiTasks@sourcePANID& (0+255),w,b
 17164  0101A4  E107               	bnz	l11903
 17165  0101A6  0101               	movlb	1	; () banked
 17166  0101A8  5184               	movf	(_myPANID+1)& (0+255),w,b
 17167  0101AA  0101               	movlb	1	; () banked
 17168  0101AC  19EA               	xorwf	(MiWiTasks@sourcePANID+1)& (0+255),w,b
 17169  0101AE  B4D8               	btfsc	status,2,c
 17170  0101B0  EF7F  F085         	goto	l601
 17171  0101B4                     l11903:
 17172                           
 17173                           ; BSR set to: 1
 17174                           ;miwi_mesh.c: 372: }
 17175                           ;miwi_mesh.c: 420: for(i = 0; i < 4; i++)
 17176  0101B4  0E00               	movlw	0
 17177  0101B6  0101               	movlb	1	; () banked
 17178  0101B8  6FED               	movwf	MiWiTasks@i& (0+255),b
 17179  0101BA                     l11905:
 17180                           
 17181                           ; BSR set to: 1
 17182  0101BA  0E03               	movlw	3
 17183  0101BC  0101               	movlb	1	; () banked
 17184  0101BE  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 17185  0101C0  D001               	goto	l11909
 17186  0101C2  D03D               	goto	l11921
 17187  0101C4                     l11909:
 17188                           
 17189                           ; BSR set to: 1
 17190                           ;miwi_mesh.c: 421: {
 17191                           ;miwi_mesh.c: 422: if( BroadcastRecords[i].RxCounter &&
 17192                           ;miwi_mesh.c: 423: BroadcastRecords[i].AltSourceAddr.Val == sourceShortAddress.Val &&
 17193                           ;miwi_mesh.c: 424: BroadcastRecords[i].MiWiSeq == MACRxPacket.Payload[10] )
 17194  0101C4  0101               	movlb	1	; () banked
 17195  0101C6  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17196  0101C8  0D08               	mullw	8
 17197  0101CA  0E03               	movlw	3
 17198  0101CC  26F3               	addwf	prodl,f,c
 17199  0101CE  0E00               	movlw	0
 17200  0101D0  22F4               	addwfc	prodh,f,c
 17201  0101D2  0E26               	movlw	low _BroadcastRecords
 17202  0101D4  24F3               	addwf	prodl,w,c
 17203  0101D6  6ED9               	movwf	fsr2l,c
 17204  0101D8  0E00               	movlw	high _BroadcastRecords
 17205  0101DA  20F4               	addwfc	prodh,w,c
 17206  0101DC  6EDA               	movwf	fsr2h,c
 17207  0101DE  50DF               	movf	indf2,w,c
 17208  0101E0  B4D8               	btfsc	status,2,c
 17209  0101E2  D02A               	goto	l11917
 17210                           
 17211                           ; BSR set to: 1
 17212  0101E4  0101               	movlb	1	; () banked
 17213  0101E6  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17214  0101E8  0D08               	mullw	8
 17215  0101EA  0E26               	movlw	low _BroadcastRecords
 17216  0101EC  24F3               	addwf	prodl,w,c
 17217  0101EE  6ED9               	movwf	fsr2l,c
 17218  0101F0  0E00               	movlw	high _BroadcastRecords
 17219  0101F2  20F4               	addwfc	prodh,w,c
 17220  0101F4  6EDA               	movwf	fsr2h,c
 17221  0101F6  0101               	movlb	1	; () banked
 17222  0101F8  51EB               	movf	MiWiTasks@sourceShortAddress& (0+255),w,b
 17223  0101FA  18DE               	xorwf	postinc2,w,c
 17224  0101FC  E11D               	bnz	l11917
 17225  0101FE  0101               	movlb	1	; () banked
 17226  010200  51EC               	movf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 17227  010202  18DE               	xorwf	postinc2,w,c
 17228  010204  A4D8               	btfss	status,2,c
 17229  010206  D018               	goto	l11917
 17230                           
 17231                           ; BSR set to: 1
 17232  010208  0101               	movlb	1	; () banked
 17233  01020A  EE20 F00A          	lfsr	2,10
 17234  01020E  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17235  010210  26D9               	addwf	fsr2l,f,c
 17236  010212  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17237  010214  22DA               	addwfc	fsr2h,f,c
 17238  010216  0101               	movlb	1	; () banked
 17239  010218  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17240  01021A  0D08               	mullw	8
 17241  01021C  0E02               	movlw	2
 17242  01021E  26F3               	addwf	prodl,f,c
 17243  010220  0E00               	movlw	0
 17244  010222  22F4               	addwfc	prodh,f,c
 17245  010224  0E26               	movlw	low _BroadcastRecords
 17246  010226  24F3               	addwf	prodl,w,c
 17247  010228  6EE1               	movwf	fsr1l,c
 17248  01022A  0E00               	movlw	high _BroadcastRecords
 17249  01022C  20F4               	addwfc	prodh,w,c
 17250  01022E  6EE2               	movwf	fsr1h,c
 17251  010230  50DE               	movf	postinc2,w,c
 17252  010232  18E6               	xorwf	postinc1,w,c
 17253  010234  B4D8               	btfsc	status,2,c
 17254  010236  D003               	goto	l11921
 17255  010238                     l11917:
 17256                           
 17257                           ; BSR set to: 1
 17258  010238  0101               	movlb	1	; () banked
 17259  01023A  2BED               	incf	MiWiTasks@i& (0+255),f,b
 17260  01023C  D7BE               	goto	l11905
 17261  01023E                     l11921:
 17262                           
 17263                           ; BSR set to: 1
 17264                           ;miwi_mesh.c: 427: }
 17265                           ;miwi_mesh.c: 428: }
 17266                           ;miwi_mesh.c: 431: if( i < 4 )
 17267  01023E  0E04               	movlw	4
 17268  010240  0101               	movlb	1	; () banked
 17269  010242  61ED               	cpfslt	MiWiTasks@i& (0+255),b
 17270  010244  D002               	goto	l11925
 17271  010246  EF7F  F085         	goto	l601
 17272  01024A                     l11925:
 17273                           
 17274                           ; BSR set to: 1
 17275                           ;miwi_mesh.c: 437: }
 17276                           ;miwi_mesh.c: 441: for(i = 0; i < 4; i++)
 17277  01024A  0E00               	movlw	0
 17278  01024C  0101               	movlb	1	; () banked
 17279  01024E  6FED               	movwf	MiWiTasks@i& (0+255),b
 17280  010250                     l11927:
 17281                           
 17282                           ; BSR set to: 1
 17283  010250  0E03               	movlw	3
 17284  010252  0101               	movlb	1	; () banked
 17285  010254  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 17286  010256  D001               	goto	l11931
 17287  010258  D013               	goto	l11939
 17288  01025A                     l11931:
 17289                           
 17290                           ; BSR set to: 1
 17291                           ;miwi_mesh.c: 442: {
 17292                           ;miwi_mesh.c: 443: if( BroadcastRecords[i].RxCounter == 0 )
 17293  01025A  0101               	movlb	1	; () banked
 17294  01025C  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17295  01025E  0D08               	mullw	8
 17296  010260  0E03               	movlw	3
 17297  010262  26F3               	addwf	prodl,f,c
 17298  010264  0E00               	movlw	0
 17299  010266  22F4               	addwfc	prodh,f,c
 17300  010268  0E26               	movlw	low _BroadcastRecords
 17301  01026A  24F3               	addwf	prodl,w,c
 17302  01026C  6ED9               	movwf	fsr2l,c
 17303  01026E  0E00               	movlw	high _BroadcastRecords
 17304  010270  20F4               	addwfc	prodh,w,c
 17305  010272  6EDA               	movwf	fsr2h,c
 17306  010274  50DF               	movf	indf2,w,c
 17307  010276  B4D8               	btfsc	status,2,c
 17308  010278  D003               	goto	l11939
 17309                           
 17310                           ; BSR set to: 1
 17311                           
 17312                           ; BSR set to: 1
 17313                           
 17314                           ; BSR set to: 1
 17315                           ;miwi_mesh.c: 444: {
 17316                           ;miwi_mesh.c: 445: break;
 17317  01027A  0101               	movlb	1	; () banked
 17318  01027C  2BED               	incf	MiWiTasks@i& (0+255),f,b
 17319  01027E  D7E8               	goto	l11927
 17320  010280                     l11939:
 17321                           
 17322                           ; BSR set to: 1
 17323                           ;miwi_mesh.c: 446: }
 17324                           ;miwi_mesh.c: 447: }
 17325                           ;miwi_mesh.c: 449: if( i < 4 )
 17326  010280  0E04               	movlw	4
 17327  010282  0101               	movlb	1	; () banked
 17328  010284  61ED               	cpfslt	MiWiTasks@i& (0+255),b
 17329  010286  D04D               	goto	l11949
 17330                           
 17331                           ; BSR set to: 1
 17332                           ;miwi_mesh.c: 450: {
 17333                           ;miwi_mesh.c: 451: BroadcastRecords[i].AltSourceAddr.Val = sourceShortAddress.Val;
 17334  010288  0101               	movlb	1	; () banked
 17335  01028A  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17336  01028C  0D08               	mullw	8
 17337  01028E  0E26               	movlw	low _BroadcastRecords
 17338  010290  24F3               	addwf	prodl,w,c
 17339  010292  6ED9               	movwf	fsr2l,c
 17340  010294  0E00               	movlw	high _BroadcastRecords
 17341  010296  20F4               	addwfc	prodh,w,c
 17342  010298  6EDA               	movwf	fsr2h,c
 17343  01029A  C1EB  FFDE         	movff	MiWiTasks@sourceShortAddress,postinc2
 17344  01029E  C1EC  FFDD         	movff	MiWiTasks@sourceShortAddress+1,postdec2
 17345                           
 17346                           ; BSR set to: 1
 17347                           ;miwi_mesh.c: 452: BroadcastRecords[i].MiWiSeq = MACRxPacket.Payload[10];
 17348  0102A2  0101               	movlb	1	; () banked
 17349  0102A4  EE20 F00A          	lfsr	2,10
 17350  0102A8  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17351  0102AA  26D9               	addwf	fsr2l,f,c
 17352  0102AC  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17353  0102AE  22DA               	addwfc	fsr2h,f,c
 17354  0102B0  0101               	movlb	1	; () banked
 17355  0102B2  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17356  0102B4  0D08               	mullw	8
 17357  0102B6  0E02               	movlw	2
 17358  0102B8  26F3               	addwf	prodl,f,c
 17359  0102BA  0E00               	movlw	0
 17360  0102BC  22F4               	addwfc	prodh,f,c
 17361  0102BE  0E26               	movlw	low _BroadcastRecords
 17362  0102C0  24F3               	addwf	prodl,w,c
 17363  0102C2  6EE1               	movwf	fsr1l,c
 17364  0102C4  0E00               	movlw	high _BroadcastRecords
 17365  0102C6  20F4               	addwfc	prodh,w,c
 17366  0102C8  6EE2               	movwf	fsr1h,c
 17367  0102CA  CFDF FFE7          	movff	indf2,indf1
 17368                           
 17369                           ; BSR set to: 1
 17370                           ;miwi_mesh.c: 453: BroadcastRecords[i].RxCounter = 2 + 1;
 17371  0102CE  0101               	movlb	1	; () banked
 17372  0102D0  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17373  0102D2  0D08               	mullw	8
 17374  0102D4  0E03               	movlw	3
 17375  0102D6  26F3               	addwf	prodl,f,c
 17376  0102D8  0E00               	movlw	0
 17377  0102DA  22F4               	addwfc	prodh,f,c
 17378  0102DC  0E26               	movlw	low _BroadcastRecords
 17379  0102DE  24F3               	addwf	prodl,w,c
 17380  0102E0  6ED9               	movwf	fsr2l,c
 17381  0102E2  0E00               	movlw	high _BroadcastRecords
 17382  0102E4  20F4               	addwfc	prodh,w,c
 17383  0102E6  6EDA               	movwf	fsr2h,c
 17384  0102E8  0E03               	movlw	3
 17385  0102EA  6EDF               	movwf	indf2,c
 17386                           
 17387                           ; BSR set to: 1
 17388                           ;miwi_mesh.c: 455: BroadcastRecords[i].StartTick = MiWi_TickGet();
 17389  0102EC  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 17390  0102F0  0101               	movlb	1	; () banked
 17391  0102F2  51ED               	movf	MiWiTasks@i& (0+255),w,b
 17392  0102F4  0D08               	mullw	8
 17393  0102F6  0E04               	movlw	4
 17394  0102F8  26F3               	addwf	prodl,f,c
 17395  0102FA  0E00               	movlw	0
 17396  0102FC  22F4               	addwfc	prodh,f,c
 17397  0102FE  0E26               	movlw	low _BroadcastRecords
 17398  010300  24F3               	addwf	prodl,w,c
 17399  010302  6ED9               	movwf	fsr2l,c
 17400  010304  0E00               	movlw	high _BroadcastRecords
 17401  010306  20F4               	addwfc	prodh,w,c
 17402  010308  6EDA               	movwf	fsr2h,c
 17403  01030A  0101               	movlb	1	; () banked
 17404  01030C  C18A  FFDE         	movff	?_MiWi_TickGet,postinc2
 17405  010310  0101               	movlb	1	; () banked
 17406  010312  C18B  FFDE         	movff	?_MiWi_TickGet+1,postinc2
 17407  010316  0101               	movlb	1	; () banked
 17408  010318  C18C  FFDE         	movff	?_MiWi_TickGet+2,postinc2
 17409  01031C  0101               	movlb	1	; () banked
 17410  01031E  C18D  FFDE         	movff	?_MiWi_TickGet+3,postinc2
 17411  010322                     l11949:
 17412                           
 17413                           ; BSR set to: 1
 17414                           ;miwi_mesh.c: 457: }
 17415                           ;miwi_mesh.c: 459: rxMessage.flags.bits.broadcast = 1;
 17416  010322  0101               	movlb	1	; () banked
 17417  010324  510C               	movf	_rxMessage& (0+255),w,b
 17418  010326  0BFC               	andlw	-4
 17419  010328  0901               	iorlw	1
 17420  01032A  6F0C               	movwf	_rxMessage& (0+255),b
 17421                           
 17422                           ;miwi_mesh.c: 460: goto ThisPacketIsForMe;
 17423  01032C  D06E               	goto	l11995
 17424  01032E                     l11951:
 17425                           
 17426                           ; BSR set to: 1
 17427                           ;miwi_mesh.c: 461: }
 17428                           ;miwi_mesh.c: 464: if((destPANID.Val == myPANID.Val) && (destShortAddress.Val == myShort
      +                          Address.Val))
 17429  01032E  0101               	movlb	1	; () banked
 17430  010330  5183               	movf	_myPANID& (0+255),w,b
 17431  010332  0101               	movlb	1	; () banked
 17432  010334  19E2               	xorwf	MiWiTasks@destPANID& (0+255),w,b
 17433  010336  E105               	bnz	u13881
 17434  010338  0101               	movlb	1	; () banked
 17435  01033A  5184               	movf	(_myPANID+1)& (0+255),w,b
 17436  01033C  0101               	movlb	1	; () banked
 17437  01033E  19E3               	xorwf	(MiWiTasks@destPANID+1)& (0+255),w,b
 17438  010340  A4D8               	btfss	status,2,c
 17439  010342                     u13881:
 17440  010342  D3DD               	goto	l601
 17441                           
 17442                           ; BSR set to: 1
 17443  010344  0101               	movlb	1	; () banked
 17444  010346  5185               	movf	_myShortAddress& (0+255),w,b
 17445  010348  0101               	movlb	1	; () banked
 17446  01034A  19E4               	xorwf	MiWiTasks@destShortAddress& (0+255),w,b
 17447  01034C  E105               	bnz	u13891
 17448  01034E  0101               	movlb	1	; () banked
 17449  010350  5186               	movf	(_myShortAddress+1)& (0+255),w,b
 17450  010352  0101               	movlb	1	; () banked
 17451  010354  19E5               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 17452  010356  A4D8               	btfss	status,2,c
 17453  010358                     u13891:
 17454  010358  D3D2               	goto	l601
 17455                           
 17456                           ; BSR set to: 1
 17457                           ;miwi_mesh.c: 465: {
 17458                           ;miwi_mesh.c: 467: if(MACRxPacket.Payload[1] & 0x04)
 17459  01035A  0101               	movlb	1	; () banked
 17460  01035C  EE20 F001          	lfsr	2,1
 17461  010360  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17462  010362  26D9               	addwf	fsr2l,f,c
 17463  010364  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17464  010366  22DA               	addwfc	fsr2h,f,c
 17465  010368  0101               	movlb	1	; () banked
 17466  01036A  A4DF               	btfss	indf2,2,c
 17467  01036C  D04E               	goto	l11995
 17468                           
 17469                           ; BSR set to: 1
 17470                           ;miwi_mesh.c: 468: {
 17471                           ;miwi_mesh.c: 469: TxBuffer[0] = defaultHops;
 17472  01036E  C1FE  F14E         	movff	_defaultHops,_TxBuffer
 17473                           
 17474                           ; BSR set to: 1
 17475                           ;miwi_mesh.c: 470: TxBuffer[1] = 0x02;
 17476  010372  0E02               	movlw	2
 17477  010374  0101               	movlb	1	; () banked
 17478  010376  6F4F               	movwf	(_TxBuffer+1)& (0+255),b
 17479                           
 17480                           ; BSR set to: 1
 17481                           ;miwi_mesh.c: 471: TxBuffer[2] = sourcePANID.v[0];
 17482  010378  C1E9  F150         	movff	MiWiTasks@sourcePANID,_TxBuffer+2
 17483                           
 17484                           ; BSR set to: 1
 17485                           ;miwi_mesh.c: 472: TxBuffer[3] = sourcePANID.v[1];
 17486  01037C  C1EA  F151         	movff	MiWiTasks@sourcePANID+1,_TxBuffer+3
 17487                           
 17488                           ; BSR set to: 1
 17489                           ;miwi_mesh.c: 473: TxBuffer[4] = sourceShortAddress.v[0];
 17490  010380  C1EB  F152         	movff	MiWiTasks@sourceShortAddress,_TxBuffer+4
 17491                           
 17492                           ; BSR set to: 1
 17493                           ;miwi_mesh.c: 474: TxBuffer[5] = sourceShortAddress.v[1];
 17494  010384  C1EC  F153         	movff	MiWiTasks@sourceShortAddress+1,_TxBuffer+5
 17495                           
 17496                           ; BSR set to: 1
 17497                           ;miwi_mesh.c: 475: TxBuffer[6] = myPANID.v[0];
 17498  010388  C183  F154         	movff	_myPANID,_TxBuffer+6
 17499                           
 17500                           ; BSR set to: 1
 17501                           ;miwi_mesh.c: 476: TxBuffer[7] = myPANID.v[1];
 17502  01038C  C184  F155         	movff	_myPANID+1,_TxBuffer+7
 17503                           
 17504                           ; BSR set to: 1
 17505                           ;miwi_mesh.c: 477: TxBuffer[8] = myShortAddress.v[0];
 17506  010390  C185  F156         	movff	_myShortAddress,_TxBuffer+8
 17507                           
 17508                           ; BSR set to: 1
 17509                           ;miwi_mesh.c: 478: TxBuffer[9] = myShortAddress.v[1];
 17510  010394  C186  F157         	movff	_myShortAddress+1,_TxBuffer+9
 17511                           
 17512                           ; BSR set to: 1
 17513                           ;miwi_mesh.c: 479: TxBuffer[10] = MACRxPacket.Payload[11-1];
 17514  010398  0101               	movlb	1	; () banked
 17515  01039A  EE20 F00A          	lfsr	2,10
 17516  01039E  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17517  0103A0  26D9               	addwf	fsr2l,f,c
 17518  0103A2  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17519  0103A4  22DA               	addwfc	fsr2h,f,c
 17520  0103A6  50DF               	movf	indf2,w,c
 17521  0103A8  0101               	movlb	1	; () banked
 17522  0103AA  6F58               	movwf	(_TxBuffer+10)& (0+255),b
 17523                           
 17524                           ; BSR set to: 1
 17525                           ;miwi_mesh.c: 480: TxBuffer[11] = 0x00;
 17526  0103AC  0E00               	movlw	0
 17527  0103AE  0101               	movlb	1	; () banked
 17528  0103B0  6F59               	movwf	(_TxBuffer+11)& (0+255),b
 17529                           
 17530                           ; BSR set to: 1
 17531                           ;miwi_mesh.c: 481: TxBuffer[12] = 0x30;
 17532  0103B2  0E30               	movlw	48
 17533  0103B4  0101               	movlb	1	; () banked
 17534  0103B6  6F5A               	movwf	(_TxBuffer+12)& (0+255),b
 17535                           
 17536                           ; BSR set to: 1
 17537                           ;miwi_mesh.c: 482: TxData = 13;
 17538  0103B8  0E0D               	movlw	13
 17539  0103BA  0101               	movlb	1	; () banked
 17540  0103BC  6F46               	movwf	_TxData& (0+255),b
 17541                           
 17542                           ; BSR set to: 1
 17543                           ;miwi_mesh.c: 512: MTP.flags.Val = 0;
 17544  0103BE  0E00               	movlw	0
 17545  0103C0  0101               	movlb	1	; () banked
 17546  0103C2  6F2A               	movwf	_MTP& (0+255),b
 17547                           
 17548                           ; BSR set to: 1
 17549                           ;miwi_mesh.c: 513: MTP.flags.bits.ackReq = 1;
 17550  0103C4  0101               	movlb	1	; () banked
 17551  0103C6  8B2A               	bsf	_MTP& (0+255),5,b
 17552                           
 17553                           ; BSR set to: 1
 17554                           ;miwi_mesh.c: 521: MTP.DestAddress = ConnectionTable[myParent].Address;
 17555  0103C8  0101               	movlb	1	; () banked
 17556  0103CA  514C               	movf	_myParent& (0+255),w,b
 17557  0103CC  0D09               	mullw	9
 17558  0103CE  0E04               	movlw	4
 17559  0103D0  26F3               	addwf	prodl,f,c
 17560  0103D2  0E00               	movlw	0
 17561  0103D4  22F4               	addwfc	prodh,f,c
 17562  0103D6  0E46               	movlw	low _ConnectionTable
 17563  0103D8  24F3               	addwf	prodl,w,c
 17564  0103DA  0101               	movlb	1	; () banked
 17565  0103DC  6F2B               	movwf	(_MTP+1)& (0+255),b
 17566  0103DE  0E02               	movlw	high _ConnectionTable
 17567  0103E0  20F4               	addwfc	prodh,w,c
 17568  0103E2  0101               	movlb	1	; () banked
 17569  0103E4  6F2C               	movwf	(_MTP+2)& (0+255),b
 17570                           
 17571                           ; BSR set to: 1
 17572                           ;miwi_mesh.c: 524: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 17573  0103E6  C12A  F1B9         	movff	_MTP,MiMAC_SendPacket@transParam
 17574  0103EA  C12B  F1BA         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 17575  0103EE  C12C  F1BB         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 17576  0103F2  0E4E               	movlw	low _TxBuffer
 17577  0103F4  0101               	movlb	1	; () banked
 17578  0103F6  6FBC               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 17579  0103F8  0E01               	movlw	high _TxBuffer
 17580  0103FA  0101               	movlb	1	; () banked
 17581  0103FC  6FBD               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 17582  0103FE  C146  F1BE         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 17583  010402  ECCF  F09A         	call	_MiMAC_SendPacket	;wreg free
 17584                           
 17585                           ;miwi_mesh.c: 526: rxMessage.flags.bits.ackReq = 1;
 17586  010406  0101               	movlb	1	; () banked
 17587  010408  850C               	bsf	_rxMessage& (0+255),2,b
 17588  01040A                     l11995:
 17589                           
 17590                           ; BSR set to: 1
 17591                           ;miwi_mesh.c: 531: if(MACRxPacket.Payload[11] == 0x00)
 17592  01040A  0101               	movlb	1	; () banked
 17593  01040C  EE20 F00B          	lfsr	2,11
 17594  010410  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17595  010412  26D9               	addwf	fsr2l,f,c
 17596  010414  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17597  010416  22DA               	addwfc	fsr2h,f,c
 17598  010418  50DF               	movf	indf2,w,c
 17599  01041A  A4D8               	btfss	status,2,c
 17600  01041C  D0B8               	goto	l12055
 17601                           
 17602                           ; BSR set to: 1
 17603                           ;miwi_mesh.c: 532: {
 17604                           ;miwi_mesh.c: 533: if( MACRxPacket.Payload[11+1] != 0x30)
 17605  01041E  0101               	movlb	1	; () banked
 17606  010420  EE20 F00C          	lfsr	2,12
 17607  010424  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17608  010426  26D9               	addwf	fsr2l,f,c
 17609  010428  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17610  01042A  22DA               	addwfc	fsr2h,f,c
 17611  01042C  0E30               	movlw	48
 17612  01042E  18DE               	xorwf	postinc2,w,c
 17613  010430  A4D8               	btfss	status,2,c
 17614  010432  D087               	goto	l12047
 17615  010434  D092               	goto	l12049
 17616  010436                     l12001:
 17617                           
 17618                           ; BSR set to: 1
 17619                           ;miwi_mesh.c: 826: {
 17620                           ;miwi_mesh.c: 827: uint8_t j;
 17621                           ;miwi_mesh.c: 830: for(j=0;j<4;j++)
 17622  010436  0E00               	movlw	0
 17623  010438  0101               	movlb	1	; () banked
 17624  01043A  6FE8               	movwf	MiWiTasks@j& (0+255),b
 17625  01043C                     l12003:
 17626                           
 17627                           ; BSR set to: 1
 17628  01043C  0E03               	movlw	3
 17629  01043E  0101               	movlb	1	; () banked
 17630  010440  65E8               	cpfsgt	MiWiTasks@j& (0+255),b
 17631  010442  D001               	goto	l12007
 17632  010444  D022               	goto	l12013
 17633  010446                     l12007:
 17634                           
 17635                           ; BSR set to: 1
 17636                           ;miwi_mesh.c: 831: {
 17637                           ;miwi_mesh.c: 832: tempLongAddress[j] = MACRxPacket.Payload[j+13];
 17638  010446  0101               	movlb	1	; () banked
 17639  010448  51E8               	movf	MiWiTasks@j& (0+255),w,b
 17640  01044A  0101               	movlb	1	; () banked
 17641  01044C  6FD1               	movwf	??_MiWiTasks& (0+255),b
 17642  01044E  6BD2               	clrf	(??_MiWiTasks+1)& (0+255),b
 17643  010450  0E0D               	movlw	13
 17644  010452  0101               	movlb	1	; () banked
 17645  010454  27D1               	addwf	??_MiWiTasks& (0+255),f,b
 17646  010456  0E00               	movlw	0
 17647  010458  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17648  01045A  0101               	movlb	1	; () banked
 17649  01045C  51D1               	movf	??_MiWiTasks& (0+255),w,b
 17650  01045E  0101               	movlb	1	; () banked
 17651  010460  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17652  010462  6ED9               	movwf	fsr2l,c
 17653  010464  0101               	movlb	1	; () banked
 17654  010466  51D2               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17655  010468  0101               	movlb	1	; () banked
 17656  01046A  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17657  01046C  6EDA               	movwf	fsr2h,c
 17658  01046E  0101               	movlb	1	; () banked
 17659  010470  51E8               	movf	MiWiTasks@j& (0+255),w,b
 17660  010472  0D01               	mullw	1
 17661  010474  0E26               	movlw	low _tempLongAddress
 17662  010476  24F3               	addwf	prodl,w,c
 17663  010478  6EE1               	movwf	fsr1l,c
 17664  01047A  0E01               	movlw	high _tempLongAddress
 17665  01047C  20F4               	addwfc	prodh,w,c
 17666  01047E  6EE2               	movwf	fsr1h,c
 17667  010480  CFDF FFE7          	movff	indf2,indf1
 17668                           
 17669                           ; BSR set to: 1
 17670  010484  0101               	movlb	1	; () banked
 17671  010486  2BE8               	incf	MiWiTasks@j& (0+255),f,b
 17672  010488  D7D9               	goto	l12003
 17673  01048A                     l12013:
 17674                           
 17675                           ; BSR set to: 1
 17676                           ;miwi_mesh.c: 833: }
 17677                           ;miwi_mesh.c: 836: tempNodeStatus.Val = 0x8D;
 17678  01048A  0E8D               	movlw	141
 17679  01048C  0100               	movlb	0	; () banked
 17680  01048E  6FBD               	movwf	_tempNodeStatus& (0+255),b
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;miwi_mesh.c: 838: if(MACRxPacket.Payload[13+4] & 0x80)
 17684  010490  0101               	movlb	1	; () banked
 17685  010492  EE20 F011          	lfsr	2,17
 17686  010496  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17687  010498  26D9               	addwf	fsr2l,f,c
 17688  01049A  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17689  01049C  22DA               	addwfc	fsr2h,f,c
 17690  01049E  0101               	movlb	1	; () banked
 17691  0104A0  AEDF               	btfss	indf2,7,c
 17692  0104A2  D002               	goto	l12019
 17693                           
 17694                           ; BSR set to: 1
 17695                           ;miwi_mesh.c: 839: {
 17696                           ;miwi_mesh.c: 840: tempNodeStatus.bits.RXOnWhenIdle = 0;
 17697  0104A4  0100               	movlb	0	; () banked
 17698  0104A6  91BD               	bcf	_tempNodeStatus& (0+255),0,b
 17699  0104A8                     l12019:
 17700                           
 17701                           ;miwi_mesh.c: 841: }
 17702                           ;miwi_mesh.c: 844: tempShortAddress.v[0] = MACRxPacket.Payload[4+13];
 17703  0104A8  0101               	movlb	1	; () banked
 17704  0104AA  EE20 F011          	lfsr	2,17
 17705  0104AE  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17706  0104B0  26D9               	addwf	fsr2l,f,c
 17707  0104B2  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17708  0104B4  22DA               	addwfc	fsr2h,f,c
 17709  0104B6  50DF               	movf	indf2,w,c
 17710  0104B8  0101               	movlb	1	; () banked
 17711  0104BA  6F87               	movwf	_tempShortAddress& (0+255),b
 17712                           
 17713                           ;miwi_mesh.c: 845: tempShortAddress.v[1] = MACRxPacket.Payload[4+14];
 17714  0104BC  0101               	movlb	1	; () banked
 17715  0104BE  EE20 F012          	lfsr	2,18
 17716  0104C2  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17717  0104C4  26D9               	addwf	fsr2l,f,c
 17718  0104C6  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17719  0104C8  22DA               	addwfc	fsr2h,f,c
 17720  0104CA  50DF               	movf	indf2,w,c
 17721  0104CC  0101               	movlb	1	; () banked
 17722  0104CE  6F88               	movwf	(_tempShortAddress+1)& (0+255),b
 17723                           
 17724                           ; BSR set to: 1
 17725                           ;miwi_mesh.c: 848: tempPANID.Val = myPANID.Val;
 17726  0104D0  C183  F13C         	movff	_myPANID,_tempPANID
 17727  0104D4  C184  F13D         	movff	_myPANID+1,_tempPANID+1
 17728                           
 17729                           ; BSR set to: 1
 17730                           ;miwi_mesh.c: 851: openSocketInfo.socketHandle = SearchForShortAddress();
 17731  0104D8  ECA7  F0B2         	call	_SearchForShortAddress	;wreg free
 17732  0104DC  0101               	movlb	1	; () banked
 17733  0104DE  6F01               	movwf	(_openSocketInfo+1)& (0+255),b
 17734                           
 17735                           ; BSR set to: 1
 17736                           ;miwi_mesh.c: 853: if(openSocketInfo.socketHandle != 0xFF)
 17737  0104E0  0101               	movlb	1	; () banked
 17738  0104E2  2901               	incf	(_openSocketInfo+1)& (0+255),w,b
 17739  0104E4  B4D8               	btfsc	status,2,c
 17740  0104E6  D015               	goto	l12033
 17741                           
 17742                           ; BSR set to: 1
 17743                           ;miwi_mesh.c: 854: {
 17744                           ;miwi_mesh.c: 856: tempNodeStatus.Val = ConnectionTable[openSocketInfo.socketHandle].sta
      +                          tus.Val;
 17745  0104E8  0101               	movlb	1	; () banked
 17746  0104EA  5101               	movf	(_openSocketInfo+1)& (0+255),w,b
 17747  0104EC  0D09               	mullw	9
 17748  0104EE  0E08               	movlw	8
 17749  0104F0  26F3               	addwf	prodl,f,c
 17750  0104F2  0E00               	movlw	0
 17751  0104F4  22F4               	addwfc	prodh,f,c
 17752  0104F6  0E46               	movlw	low _ConnectionTable
 17753  0104F8  24F3               	addwf	prodl,w,c
 17754  0104FA  6ED9               	movwf	fsr2l,c
 17755  0104FC  0E02               	movlw	high _ConnectionTable
 17756  0104FE  20F4               	addwfc	prodh,w,c
 17757  010500  6EDA               	movwf	fsr2h,c
 17758  010502  50DF               	movf	indf2,w,c
 17759  010504  0100               	movlb	0	; () banked
 17760  010506  6FBD               	movwf	_tempNodeStatus& (0+255),b
 17761                           
 17762                           ; BSR set to: 0
 17763                           ;miwi_mesh.c: 857: tempNodeStatus.bits.longAddressValid = 1;
 17764  010508  0100               	movlb	0	; () banked
 17765  01050A  85BD               	bsf	_tempNodeStatus& (0+255),2,b
 17766                           
 17767                           ; BSR set to: 0
 17768                           ;miwi_mesh.c: 858: tempNodeStatus.bits.shortAddressValid = 1;
 17769  01050C  0100               	movlb	0	; () banked
 17770  01050E  87BD               	bsf	_tempNodeStatus& (0+255),3,b
 17771                           
 17772                           ;miwi_mesh.c: 859: }
 17773  010510  D008               	goto	l12039
 17774  010512                     l12033:
 17775                           
 17776                           ;miwi_mesh.c: 860: else
 17777                           ;miwi_mesh.c: 861: {
 17778                           ;miwi_mesh.c: 863: tempNodeStatus.Val = 0x8D;
 17779  010512  0E8D               	movlw	141
 17780  010514  0100               	movlb	0	; () banked
 17781  010516  6FBD               	movwf	_tempNodeStatus& (0+255),b
 17782                           
 17783                           ; BSR set to: 0
 17784                           ;miwi_mesh.c: 864: if(tempShortAddress.v[0] & 0x80)
 17785  010518  0101               	movlb	1	; () banked
 17786  01051A  AF87               	btfss	_tempShortAddress& (0+255),7,b
 17787  01051C  D002               	goto	l12039
 17788                           
 17789                           ; BSR set to: 1
 17790                           ;miwi_mesh.c: 865: {
 17791                           ;miwi_mesh.c: 866: tempNodeStatus.bits.RXOnWhenIdle = 0;
 17792  01051E  0100               	movlb	0	; () banked
 17793  010520  91BD               	bcf	_tempNodeStatus& (0+255),0,b
 17794  010522                     l12039:
 17795                           
 17796                           ;miwi_mesh.c: 867: }
 17797                           ;miwi_mesh.c: 868: }
 17798                           ;miwi_mesh.c: 870: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 17799  010522  EC4C  F0A9         	call	_AddNodeToNetworkTable	;wreg free
 17800  010526  0101               	movlb	1	; () banked
 17801  010528  6F01               	movwf	(_openSocketInfo+1)& (0+255),b
 17802                           
 17803                           ; BSR set to: 1
 17804                           ;miwi_mesh.c: 871: if( openSocketInfo.socketHandle < 0xFF )
 17805  01052A  0101               	movlb	1	; () banked
 17806  01052C  2901               	incf	(_openSocketInfo+1)& (0+255),w,b
 17807  01052E  B4D8               	btfsc	status,2,c
 17808  010530  D003               	goto	l627
 17809                           
 17810                           ; BSR set to: 1
 17811                           ;miwi_mesh.c: 872: {
 17812                           ;miwi_mesh.c: 882: openSocketInfo.status.bits.matchFound = 1;
 17813  010532  0101               	movlb	1	; () banked
 17814  010534  8100               	bsf	_openSocketInfo& (0+255),0,b
 17815                           
 17816                           ;miwi_mesh.c: 883: }
 17817  010536  D002               	goto	l628
 17818  010538                     l627:
 17819                           
 17820                           ; BSR set to: 1
 17821                           ;miwi_mesh.c: 884: else
 17822                           ;miwi_mesh.c: 885: {
 17823                           ;miwi_mesh.c: 886: openSocketInfo.status.bits.matchFound = 0;
 17824  010538  0101               	movlb	1	; () banked
 17825  01053A  9100               	bcf	_openSocketInfo& (0+255),0,b
 17826  01053C                     l628:
 17827                           
 17828                           ; BSR set to: 1
 17829                           ;miwi_mesh.c: 887: }
 17830                           ;miwi_mesh.c: 890: openSocketInfo.status.bits.requestIsOpen = 0;
 17831  01053C  0101               	movlb	1	; () banked
 17832  01053E  9300               	bcf	_openSocketInfo& (0+255),1,b
 17833                           
 17834                           ; BSR set to: 1
 17835                           ;miwi_mesh.c: 968: }
 17836                           
 17837                           ; BSR set to: 1
 17838                           ;miwi_mesh.c: 967: break;
 17839                           
 17840                           ;miwi_mesh.c: 964: default:
 17841                           
 17842                           ;miwi_mesh.c: 892: }
 17843                           ;miwi_mesh.c: 893: break;
 17844  010540  D2DE               	goto	l601
 17845  010542                     l12047:
 17846                           
 17847                           ; BSR set to: 1
 17848  010542  0101               	movlb	1	; () banked
 17849  010544  EE20 F00C          	lfsr	2,12
 17850  010548  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17851  01054A  26D9               	addwf	fsr2l,f,c
 17852  01054C  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17853  01054E  22DA               	addwfc	fsr2h,f,c
 17854  010550  50DF               	movf	indf2,w,c
 17855                           
 17856                           ; Switch size 1, requested type "space"
 17857                           ; Number of cases is 1, Range of values is 17 to 17
 17858                           ; switch strategies available:
 17859                           ; Name         Instructions Cycles
 17860                           ; simple_byte            4     3 (average)
 17861                           ;	Chosen strategy is simple_byte
 17862  010552  0A11               	xorlw	17	; case 17
 17863  010554  B4D8               	btfsc	status,2,c
 17864  010556  D76F               	goto	l12001
 17865                           
 17866                           ; BSR set to: 1
 17867                           ;miwi_mesh.c: 969: }
 17868  010558  D2D2               	goto	l601
 17869  01055A                     l12049:
 17870                           
 17871                           ; BSR set to: 1
 17872                           ;miwi_mesh.c: 970: else
 17873                           ;miwi_mesh.c: 971: {
 17874                           ;miwi_mesh.c: 973: if( AcknowledgementSeq == MACRxPacket.Payload[11-1] &&
 17875                           ;miwi_mesh.c: 974: sourceShortAddress.Val == AcknowledgementAddr.Val)
 17876  01055A  0101               	movlb	1	; () banked
 17877  01055C  EE20 F00A          	lfsr	2,10
 17878  010560  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17879  010562  26D9               	addwf	fsr2l,f,c
 17880  010564  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17881  010566  22DA               	addwfc	fsr2h,f,c
 17882  010568  0101               	movlb	1	; () banked
 17883  01056A  51FD               	movf	_AcknowledgementSeq& (0+255),w,b
 17884  01056C  18DE               	xorwf	postinc2,w,c
 17885  01056E  A4D8               	btfss	status,2,c
 17886  010570  D2C6               	goto	l601
 17887                           
 17888                           ; BSR set to: 1
 17889  010572  0101               	movlb	1	; () banked
 17890  010574  5136               	movf	_AcknowledgementAddr& (0+255),w,b
 17891  010576  0101               	movlb	1	; () banked
 17892  010578  19EB               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 17893  01057A  E105               	bnz	u14001
 17894  01057C  0101               	movlb	1	; () banked
 17895  01057E  5137               	movf	(_AcknowledgementAddr+1)& (0+255),w,b
 17896  010580  0101               	movlb	1	; () banked
 17897  010582  19EC               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 17898  010584  A4D8               	btfss	status,2,c
 17899  010586                     u14001:
 17900  010586  D2BB               	goto	l601
 17901                           
 17902                           ; BSR set to: 1
 17903                           ;miwi_mesh.c: 975: {
 17904                           ;miwi_mesh.c: 976: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 17905  010588  0101               	movlb	1	; () banked
 17906  01058A  9738               	bcf	_MiWiStateMachine& (0+255),3,b
 17907                           
 17908                           ; BSR set to: 1
 17909                           ;miwi_mesh.c: 980: }
 17910                           ;miwi_mesh.c: 981: }
 17911                           
 17912                           ; BSR set to: 1
 17913                           ;miwi_mesh.c: 977: }
 17914                           ;miwi_mesh.c: 979: break;
 17915  01058C  D2B8               	goto	l601
 17916  01058E                     l12055:
 17917                           
 17918                           ; BSR set to: 1
 17919                           ;miwi_mesh.c: 982: else
 17920                           ;miwi_mesh.c: 983: {
 17921                           ;miwi_mesh.c: 988: rxMessage.PayloadSize = MACRxPacket.PayloadLen - 11;
 17922  01058E  0101               	movlb	1	; () banked
 17923  010590  511B               	movf	(_MACRxPacket+5)& (0+255),w,b
 17924  010592  0FF5               	addlw	245
 17925  010594  0101               	movlb	1	; () banked
 17926  010596  6F13               	movwf	(_rxMessage+7)& (0+255),b
 17927                           
 17928                           ;miwi_mesh.c: 989: rxMessage.Payload = &MACRxPacket.Payload[11];
 17929  010598  0E0B               	movlw	11
 17930  01059A  0101               	movlb	1	; () banked
 17931  01059C  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17932  01059E  0101               	movlb	1	; () banked
 17933  0105A0  6F11               	movwf	(_rxMessage+5)& (0+255),b
 17934  0105A2  0E00               	movlw	0
 17935  0105A4  0101               	movlb	1	; () banked
 17936  0105A6  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17937  0105A8  0101               	movlb	1	; () banked
 17938  0105AA  6F12               	movwf	(_rxMessage+6)& (0+255),b
 17939                           
 17940                           ; BSR set to: 1
 17941                           ;miwi_mesh.c: 990: rxMessage.SourcePANID.Val = sourcePANID.Val;
 17942  0105AC  C1E9  F10D         	movff	MiWiTasks@sourcePANID,_rxMessage+1
 17943  0105B0  C1EA  F10E         	movff	MiWiTasks@sourcePANID+1,_rxMessage+2
 17944                           
 17945                           ; BSR set to: 1
 17946                           ;miwi_mesh.c: 991: if( MACRxPacket.Payload[8] == 0xFF && MACRxPacket.Payload[9] == 0xFF 
      +                          )
 17947  0105B4  0101               	movlb	1	; () banked
 17948  0105B6  EE20 F008          	lfsr	2,8
 17949  0105BA  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17950  0105BC  26D9               	addwf	fsr2l,f,c
 17951  0105BE  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17952  0105C0  22DA               	addwfc	fsr2h,f,c
 17953  0105C2  28DE               	incf	postinc2,w,c
 17954  0105C4  A4D8               	btfss	status,2,c
 17955  0105C6  D012               	goto	l634
 17956                           
 17957                           ; BSR set to: 1
 17958  0105C8  0101               	movlb	1	; () banked
 17959  0105CA  EE20 F009          	lfsr	2,9
 17960  0105CE  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 17961  0105D0  26D9               	addwf	fsr2l,f,c
 17962  0105D2  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 17963  0105D4  22DA               	addwfc	fsr2h,f,c
 17964  0105D6  28DE               	incf	postinc2,w,c
 17965  0105D8  A4D8               	btfss	status,2,c
 17966  0105DA  D008               	goto	l634
 17967                           
 17968                           ; BSR set to: 1
 17969                           ;miwi_mesh.c: 992: {
 17970                           ;miwi_mesh.c: 997: if( MACRxPacket.flags.bits.sourcePrsnt )
 17971  0105DC  0101               	movlb	1	; () banked
 17972  0105DE  AF16               	btfss	_MACRxPacket& (0+255),7,b
 17973  0105E0  D005               	goto	l634
 17974                           
 17975                           ; BSR set to: 1
 17976                           ;miwi_mesh.c: 998: {
 17977                           ;miwi_mesh.c: 999: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 17978  0105E2  C117  F10F         	movff	_MACRxPacket+1,_rxMessage+3
 17979  0105E6  C118  F110         	movff	_MACRxPacket+2,_rxMessage+4
 17980                           
 17981                           ;miwi_mesh.c: 1000: }
 17982  0105EA  D00C               	goto	l12071
 17983  0105EC                     l634:
 17984                           
 17985                           ; BSR set to: 1
 17986                           ;miwi_mesh.c: 1009: else
 17987                           ;miwi_mesh.c: 1010: {
 17988                           ;miwi_mesh.c: 1011: rxMessage.flags.bits.altSrcAddr = 1;
 17989  0105EC  0101               	movlb	1	; () banked
 17990  0105EE  8F0C               	bsf	_rxMessage& (0+255),7,b
 17991                           
 17992                           ; BSR set to: 1
 17993                           ;miwi_mesh.c: 1012: rxMessage.SourceAddress = &(MACRxPacket.Payload[8]);
 17994  0105F0  0E08               	movlw	8
 17995  0105F2  0101               	movlb	1	; () banked
 17996  0105F4  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17997  0105F6  0101               	movlb	1	; () banked
 17998  0105F8  6F0F               	movwf	(_rxMessage+3)& (0+255),b
 17999  0105FA  0E00               	movlw	0
 18000  0105FC  0101               	movlb	1	; () banked
 18001  0105FE  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 18002  010600  0101               	movlb	1	; () banked
 18003  010602  6F10               	movwf	(_rxMessage+4)& (0+255),b
 18004  010604                     l12071:
 18005                           
 18006                           ; BSR set to: 1
 18007                           ;miwi_mesh.c: 1013: }
 18008                           ;miwi_mesh.c: 1014: rxMessage.flags.bits.srcPrsnt = 1;
 18009  010604  0101               	movlb	1	; () banked
 18010  010606  8D0C               	bsf	_rxMessage& (0+255),6,b
 18011                           
 18012                           ; BSR set to: 1
 18013                           ;miwi_mesh.c: 1016: if( rxMessage.PayloadSize > 0 )
 18014  010608  0101               	movlb	1	; () banked
 18015  01060A  5113               	movf	(_rxMessage+7)& (0+255),w,b
 18016  01060C  B4D8               	btfsc	status,2,c
 18017  01060E  D277               	goto	l601
 18018                           
 18019                           ; BSR set to: 1
 18020                           ;miwi_mesh.c: 1017: {
 18021                           ;miwi_mesh.c: 1018: MiWiStateMachine.bits.RxHasUserData = 1;
 18022  010610  0101               	movlb	1	; () banked
 18023  010612  8538               	bsf	_MiWiStateMachine& (0+255),2,b
 18024                           
 18025                           ; BSR set to: 1
 18026                           ;miwi_mesh.c: 1066: }
 18027                           ;miwi_mesh.c: 1068: }
 18028                           ;miwi_mesh.c: 1069: break;
 18029                           
 18030                           ;miwi_mesh.c: 1023: else
 18031                           ;miwi_mesh.c: 1024: {
 18032                           
 18033                           ; BSR set to: 1
 18034                           
 18035                           ; BSR set to: 1
 18036                           ;miwi_mesh.c: 1019: }
 18037                           ;miwi_mesh.c: 1021: }
 18038                           ;miwi_mesh.c: 1022: }
 18039                           
 18040                           ; BSR set to: 1
 18041  010614  D274               	goto	l601
 18042  010616                     l12077:
 18043                           
 18044                           ; BSR set to: 1
 18045                           ;miwi_mesh.c: 1073: {
 18046                           ;miwi_mesh.c: 1074: uint8_t rxIndex;
 18047                           ;miwi_mesh.c: 1079: rxIndex = 4;
 18048  010616  0E04               	movlw	4
 18049  010618  0101               	movlb	1	; () banked
 18050  01061A  6FE6               	movwf	MiWiTasks@rxIndex& (0+255),b
 18051                           
 18052                           ; BSR set to: 1
 18053                           ;miwi_mesh.c: 1083: if(MACRxPacket.Payload[rxIndex+4] != 0x4D )
 18054  01061C  0101               	movlb	1	; () banked
 18055  01061E  51E6               	movf	MiWiTasks@rxIndex& (0+255),w,b
 18056  010620  0101               	movlb	1	; () banked
 18057  010622  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18058  010624  6BD2               	clrf	(??_MiWiTasks+1)& (0+255),b
 18059  010626  0E04               	movlw	4
 18060  010628  0101               	movlb	1	; () banked
 18061  01062A  27D1               	addwf	??_MiWiTasks& (0+255),f,b
 18062  01062C  0E00               	movlw	0
 18063  01062E  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18064  010630  0101               	movlb	1	; () banked
 18065  010632  51D1               	movf	??_MiWiTasks& (0+255),w,b
 18066  010634  0101               	movlb	1	; () banked
 18067  010636  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 18068  010638  6ED9               	movwf	fsr2l,c
 18069  01063A  0101               	movlb	1	; () banked
 18070  01063C  51D2               	movf	(??_MiWiTasks+1)& (0+255),w,b
 18071  01063E  0101               	movlb	1	; () banked
 18072  010640  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 18073  010642  6EDA               	movwf	fsr2h,c
 18074  010644  0E4D               	movlw	77
 18075  010646  18DE               	xorwf	postinc2,w,c
 18076  010648  B4D8               	btfsc	status,2,c
 18077  01064A  D018               	goto	l641
 18078                           
 18079                           ; BSR set to: 1
 18080                           ;miwi_mesh.c: 1084: {
 18081                           ;miwi_mesh.c: 1086: if(MACRxPacket.Payload[rxIndex+4] != 0x5D)
 18082  01064C  0101               	movlb	1	; () banked
 18083  01064E  51E6               	movf	MiWiTasks@rxIndex& (0+255),w,b
 18084  010650  0101               	movlb	1	; () banked
 18085  010652  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18086  010654  6BD2               	clrf	(??_MiWiTasks+1)& (0+255),b
 18087  010656  0E04               	movlw	4
 18088  010658  0101               	movlb	1	; () banked
 18089  01065A  27D1               	addwf	??_MiWiTasks& (0+255),f,b
 18090  01065C  0E00               	movlw	0
 18091  01065E  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18092  010660  0101               	movlb	1	; () banked
 18093  010662  51D1               	movf	??_MiWiTasks& (0+255),w,b
 18094  010664  0101               	movlb	1	; () banked
 18095  010666  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 18096  010668  6ED9               	movwf	fsr2l,c
 18097  01066A  0101               	movlb	1	; () banked
 18098  01066C  51D2               	movf	(??_MiWiTasks+1)& (0+255),w,b
 18099  01066E  0101               	movlb	1	; () banked
 18100  010670  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 18101  010672  6EDA               	movwf	fsr2h,c
 18102  010674  0E5D               	movlw	93
 18103  010676  18DE               	xorwf	postinc2,w,c
 18104  010678  A4D8               	btfss	status,2,c
 18105  01067A  D241               	goto	l601
 18106  01067C                     l641:
 18107                           
 18108                           ; BSR set to: 1
 18109                           ;miwi_mesh.c: 1090: }
 18110                           ;miwi_mesh.c: 1091: }
 18111                           ;miwi_mesh.c: 1186: if(MiWiStateMachine.bits.searchingForNetwork)
 18112  01067C  0101               	movlb	1	; () banked
 18113  01067E  A138               	btfss	_MiWiStateMachine& (0+255),0,b
 18114  010680  D23E               	goto	l601
 18115                           
 18116                           ; BSR set to: 1
 18117                           ;miwi_mesh.c: 1187: {
 18118                           ;miwi_mesh.c: 1193: tempPANID.v[0] = MACRxPacket.Payload[0];
 18119  010682  C119  FFD9         	movff	_MACRxPacket+3,fsr2l
 18120  010686  C11A  FFDA         	movff	_MACRxPacket+4,fsr2h
 18121  01068A  50DF               	movf	indf2,w,c
 18122  01068C  0101               	movlb	1	; () banked
 18123  01068E  6F3C               	movwf	_tempPANID& (0+255),b
 18124                           
 18125                           ; BSR set to: 1
 18126                           ;miwi_mesh.c: 1194: tempPANID.v[1] = MACRxPacket.Payload[1];
 18127  010690  0101               	movlb	1	; () banked
 18128  010692  EE20 F001          	lfsr	2,1
 18129  010696  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18130  010698  26D9               	addwf	fsr2l,f,c
 18131  01069A  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18132  01069C  22DA               	addwfc	fsr2h,f,c
 18133  01069E  50DF               	movf	indf2,w,c
 18134  0106A0  0101               	movlb	1	; () banked
 18135  0106A2  6F3D               	movwf	(_tempPANID+1)& (0+255),b
 18136                           
 18137                           ; BSR set to: 1
 18138                           ;miwi_mesh.c: 1195: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 18139  0106A4  0101               	movlb	1	; () banked
 18140  0106A6  EE20 F002          	lfsr	2,2
 18141  0106AA  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18142  0106AC  26D9               	addwf	fsr2l,f,c
 18143  0106AE  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18144  0106B0  22DA               	addwfc	fsr2h,f,c
 18145  0106B2  50DF               	movf	indf2,w,c
 18146  0106B4  0101               	movlb	1	; () banked
 18147  0106B6  6F87               	movwf	_tempShortAddress& (0+255),b
 18148                           
 18149                           ; BSR set to: 1
 18150                           ;miwi_mesh.c: 1196: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 18151  0106B8  0101               	movlb	1	; () banked
 18152  0106BA  EE20 F003          	lfsr	2,3
 18153  0106BE  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18154  0106C0  26D9               	addwf	fsr2l,f,c
 18155  0106C2  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18156  0106C4  22DA               	addwfc	fsr2h,f,c
 18157  0106C6  50DF               	movf	indf2,w,c
 18158  0106C8  0101               	movlb	1	; () banked
 18159  0106CA  6F88               	movwf	(_tempShortAddress+1)& (0+255),b
 18160                           
 18161                           ; BSR set to: 1
 18162                           ;miwi_mesh.c: 1200: if(MACRxPacket.Payload[rxIndex] == 0xFF)
 18163  0106CC  0101               	movlb	1	; () banked
 18164  0106CE  51E6               	movf	MiWiTasks@rxIndex& (0+255),w,b
 18165  0106D0  0D01               	mullw	1
 18166  0106D2  50F3               	movf	prodl,w,c
 18167  0106D4  0101               	movlb	1	; () banked
 18168  0106D6  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 18169  0106D8  6ED9               	movwf	fsr2l,c
 18170  0106DA  50F4               	movf	prodh,w,c
 18171  0106DC  0101               	movlb	1	; () banked
 18172  0106DE  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 18173  0106E0  6EDA               	movwf	fsr2h,c
 18174  0106E2  28DE               	incf	postinc2,w,c
 18175  0106E4  A4D8               	btfss	status,2,c
 18176  0106E6  D20B               	goto	l601
 18177                           
 18178                           ; BSR set to: 1
 18179                           ;miwi_mesh.c: 1201: {
 18180                           ;miwi_mesh.c: 1202: MIWI_CAPACITY_INFO CapacityByte;
 18181                           ;miwi_mesh.c: 1203: CapacityByte.Val = MACRxPacket.Payload[rxIndex+1];
 18182  0106E8  0101               	movlb	1	; () banked
 18183  0106EA  51E6               	movf	MiWiTasks@rxIndex& (0+255),w,b
 18184  0106EC  0101               	movlb	1	; () banked
 18185  0106EE  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18186  0106F0  6BD2               	clrf	(??_MiWiTasks+1)& (0+255),b
 18187  0106F2  0E01               	movlw	1
 18188  0106F4  0101               	movlb	1	; () banked
 18189  0106F6  27D1               	addwf	??_MiWiTasks& (0+255),f,b
 18190  0106F8  0E00               	movlw	0
 18191  0106FA  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18192  0106FC  0101               	movlb	1	; () banked
 18193  0106FE  51D1               	movf	??_MiWiTasks& (0+255),w,b
 18194  010700  0101               	movlb	1	; () banked
 18195  010702  2519               	addwf	(_MACRxPacket+3)& (0+255),w,b
 18196  010704  6ED9               	movwf	fsr2l,c
 18197  010706  0101               	movlb	1	; () banked
 18198  010708  51D2               	movf	(??_MiWiTasks+1)& (0+255),w,b
 18199  01070A  0101               	movlb	1	; () banked
 18200  01070C  211A               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 18201  01070E  6EDA               	movwf	fsr2h,c
 18202  010710  50DF               	movf	indf2,w,c
 18203  010712  0101               	movlb	1	; () banked
 18204  010714  6FE7               	movwf	MiWiTasks@CapacityByte& (0+255),b
 18205                           
 18206                           ; BSR set to: 1
 18207                           ;miwi_mesh.c: 1204: if( (ActiveScanResultIndex < 8) && (CapacityByte.bits.ConnMode <= 0x
      +                          01) )
 18208  010716  0E08               	movlw	8
 18209  010718  0101               	movlb	1	; () banked
 18210  01071A  6142               	cpfslt	_ActiveScanResultIndex& (0+255),b
 18211  01071C  D1F0               	goto	l601
 18212                           
 18213                           ; BSR set to: 1
 18214  01071E  0101               	movlb	1	; () banked
 18215  010720  39E7               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 18216  010722  0B03               	andlw	3
 18217  010724  0101               	movlb	1	; () banked
 18218  010726  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18219  010728  0E02               	movlw	2
 18220  01072A  0101               	movlb	1	; () banked
 18221  01072C  61D1               	cpfslt	??_MiWiTasks& (0+255),b
 18222  01072E  D1E7               	goto	l601
 18223                           
 18224                           ; BSR set to: 1
 18225                           ;miwi_mesh.c: 1205: {
 18226                           ;miwi_mesh.c: 1207: ActiveScanResults[ActiveScanResultIndex].Channel = currentChannel;
 18227  010730  0101               	movlb	1	; () banked
 18228  010732  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18229  010734  0D0A               	mullw	10
 18230  010736  0E00               	movlw	low _ActiveScanResults
 18231  010738  24F3               	addwf	prodl,w,c
 18232  01073A  6ED9               	movwf	fsr2l,c
 18233  01073C  0E03               	movlw	high _ActiveScanResults
 18234  01073E  20F4               	addwfc	prodh,w,c
 18235  010740  6EDA               	movwf	fsr2h,c
 18236  010742  C189  FFDF         	movff	_currentChannel,indf2
 18237                           
 18238                           ;miwi_mesh.c: 1208: ActiveScanResults[ActiveScanResultIndex].RSSIValue = rxMessage.Packe
      +                          tRSSI;
 18239  010746  0101               	movlb	1	; () banked
 18240  010748  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18241  01074A  0D0A               	mullw	10
 18242  01074C  0E07               	movlw	7
 18243  01074E  26F3               	addwf	prodl,f,c
 18244  010750  0E00               	movlw	0
 18245  010752  22F4               	addwfc	prodh,f,c
 18246  010754  0E00               	movlw	low _ActiveScanResults
 18247  010756  24F3               	addwf	prodl,w,c
 18248  010758  6ED9               	movwf	fsr2l,c
 18249  01075A  0E03               	movlw	high _ActiveScanResults
 18250  01075C  20F4               	addwfc	prodh,w,c
 18251  01075E  6EDA               	movwf	fsr2h,c
 18252  010760  C114  FFDF         	movff	_rxMessage+8,indf2
 18253                           
 18254                           ;miwi_mesh.c: 1209: ActiveScanResults[ActiveScanResultIndex].LQIValue = rxMessage.Packet
      +                          LQI;
 18255  010764  0101               	movlb	1	; () banked
 18256  010766  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18257  010768  0D0A               	mullw	10
 18258  01076A  0E08               	movlw	8
 18259  01076C  26F3               	addwf	prodl,f,c
 18260  01076E  0E00               	movlw	0
 18261  010770  22F4               	addwfc	prodh,f,c
 18262  010772  0E00               	movlw	low _ActiveScanResults
 18263  010774  24F3               	addwf	prodl,w,c
 18264  010776  6ED9               	movwf	fsr2l,c
 18265  010778  0E03               	movlw	high _ActiveScanResults
 18266  01077A  20F4               	addwfc	prodh,w,c
 18267  01077C  6EDA               	movwf	fsr2h,c
 18268  01077E  C115  FFDF         	movff	_rxMessage+9,indf2
 18269                           
 18270                           ;miwi_mesh.c: 1210: ActiveScanResults[ActiveScanResultIndex].PANID.Val = tempPANID.Val;
 18271  010782  0101               	movlb	1	; () banked
 18272  010784  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18273  010786  0D0A               	mullw	10
 18274  010788  0E05               	movlw	5
 18275  01078A  26F3               	addwf	prodl,f,c
 18276  01078C  0E00               	movlw	0
 18277  01078E  22F4               	addwfc	prodh,f,c
 18278  010790  0E00               	movlw	low _ActiveScanResults
 18279  010792  24F3               	addwf	prodl,w,c
 18280  010794  6ED9               	movwf	fsr2l,c
 18281  010796  0E03               	movlw	high _ActiveScanResults
 18282  010798  20F4               	addwfc	prodh,w,c
 18283  01079A  6EDA               	movwf	fsr2h,c
 18284  01079C  C13C  FFDE         	movff	_tempPANID,postinc2
 18285  0107A0  C13D  FFDD         	movff	_tempPANID+1,postdec2
 18286                           
 18287                           ;miwi_mesh.c: 1212: ActiveScanResults[ActiveScanResultIndex].Capability.Val = 0;
 18288  0107A4  0101               	movlb	1	; () banked
 18289  0107A6  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18290  0107A8  0D0A               	mullw	10
 18291  0107AA  0E09               	movlw	9
 18292  0107AC  26F3               	addwf	prodl,f,c
 18293  0107AE  0E00               	movlw	0
 18294  0107B0  22F4               	addwfc	prodh,f,c
 18295  0107B2  0E00               	movlw	low _ActiveScanResults
 18296  0107B4  24F3               	addwf	prodl,w,c
 18297  0107B6  6ED9               	movwf	fsr2l,c
 18298  0107B8  0E03               	movlw	high _ActiveScanResults
 18299  0107BA  20F4               	addwfc	prodh,w,c
 18300  0107BC  6EDA               	movwf	fsr2h,c
 18301  0107BE  0E00               	movlw	0
 18302  0107C0  6EDF               	movwf	indf2,c
 18303                           
 18304                           ;miwi_mesh.c: 1213: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Direct = 1;
 18305  0107C2  0101               	movlb	1	; () banked
 18306  0107C4  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18307  0107C6  0D0A               	mullw	10
 18308  0107C8  0E09               	movlw	9
 18309  0107CA  26F3               	addwf	prodl,f,c
 18310  0107CC  0E00               	movlw	0
 18311  0107CE  22F4               	addwfc	prodh,f,c
 18312  0107D0  0E00               	movlw	low _ActiveScanResults
 18313  0107D2  24F3               	addwf	prodl,w,c
 18314  0107D4  6ED9               	movwf	fsr2l,c
 18315  0107D6  0E03               	movlw	high _ActiveScanResults
 18316  0107D8  20F4               	addwfc	prodh,w,c
 18317  0107DA  6EDA               	movwf	fsr2h,c
 18318  0107DC  0103               	movlb	3	; () banked
 18319  0107DE  8CDF               	bsf	indf2,6,c
 18320                           
 18321                           ;miwi_mesh.c: 1214: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Role = Capa
      +                          cityByte.bits.Role;
 18322  0107E0  0101               	movlb	1	; () banked
 18323  0107E2  31E7               	rrcf	MiWiTasks@CapacityByte& (0+255),w,b
 18324  0107E4  0B03               	andlw	3
 18325  0107E6  0101               	movlb	1	; () banked
 18326  0107E8  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18327  0107EA  0101               	movlb	1	; () banked
 18328  0107EC  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18329  0107EE  0D0A               	mullw	10
 18330  0107F0  0E09               	movlw	9
 18331  0107F2  26F3               	addwf	prodl,f,c
 18332  0107F4  0E00               	movlw	0
 18333  0107F6  22F4               	addwfc	prodh,f,c
 18334  0107F8  0E00               	movlw	low _ActiveScanResults
 18335  0107FA  24F3               	addwf	prodl,w,c
 18336  0107FC  6ED9               	movwf	fsr2l,c
 18337  0107FE  0E03               	movlw	high _ActiveScanResults
 18338  010800  20F4               	addwfc	prodh,w,c
 18339  010802  6EDA               	movwf	fsr2h,c
 18340  010804  0103               	movlb	3	; () banked
 18341  010806  50DF               	movf	223,w,c
 18342  010808  0101               	movlb	1	; () banked
 18343  01080A  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 18344  01080C  0BFC               	andlw	-4
 18345  01080E  19D1               	xorwf	??_MiWiTasks& (0+255),w,b
 18346  010810  0103               	movlb	3	; () banked
 18347  010812  6EDF               	movwf	223,c
 18348                           
 18349                           ; BSR set to: 3
 18350                           ;miwi_mesh.c: 1215: if( CapacityByte.bits.Security )
 18351  010814  0101               	movlb	1	; () banked
 18352  010816  A7E7               	btfss	MiWiTasks@CapacityByte& (0+255),3,b
 18353  010818  D00F               	goto	l12107
 18354                           
 18355                           ; BSR set to: 1
 18356                           ;miwi_mesh.c: 1216: {
 18357                           ;miwi_mesh.c: 1217: ActiveScanResults[ActiveScanResultIndex].Capability.bits.SecurityEn 
      +                          = 1;
 18358  01081A  0101               	movlb	1	; () banked
 18359  01081C  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18360  01081E  0D0A               	mullw	10
 18361  010820  0E09               	movlw	9
 18362  010822  26F3               	addwf	prodl,f,c
 18363  010824  0E00               	movlw	0
 18364  010826  22F4               	addwfc	prodh,f,c
 18365  010828  0E00               	movlw	low _ActiveScanResults
 18366  01082A  24F3               	addwf	prodl,w,c
 18367  01082C  6ED9               	movwf	fsr2l,c
 18368  01082E  0E03               	movlw	high _ActiveScanResults
 18369  010830  20F4               	addwfc	prodh,w,c
 18370  010832  6EDA               	movwf	fsr2h,c
 18371  010834  0103               	movlb	3	; () banked
 18372  010836  86DF               	bsf	indf2,3,c
 18373  010838                     l12107:
 18374                           
 18375                           ;miwi_mesh.c: 1218: }
 18376                           ;miwi_mesh.c: 1219: if( CapacityByte.bits.ConnMode <= 0x01 )
 18377  010838  0101               	movlb	1	; () banked
 18378  01083A  39E7               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 18379  01083C  0B03               	andlw	3
 18380  01083E  0101               	movlb	1	; () banked
 18381  010840  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18382  010842  0E02               	movlw	2
 18383  010844  0101               	movlb	1	; () banked
 18384  010846  61D1               	cpfslt	??_MiWiTasks& (0+255),b
 18385  010848  D00F               	goto	l12111
 18386                           
 18387                           ; BSR set to: 1
 18388                           ;miwi_mesh.c: 1220: {
 18389                           ;miwi_mesh.c: 1221: ActiveScanResults[ActiveScanResultIndex].Capability.bits.AllowJoin =
      +                           1;
 18390  01084A  0101               	movlb	1	; () banked
 18391  01084C  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18392  01084E  0D0A               	mullw	10
 18393  010850  0E09               	movlw	9
 18394  010852  26F3               	addwf	prodl,f,c
 18395  010854  0E00               	movlw	0
 18396  010856  22F4               	addwfc	prodh,f,c
 18397  010858  0E00               	movlw	low _ActiveScanResults
 18398  01085A  24F3               	addwf	prodl,w,c
 18399  01085C  6ED9               	movwf	fsr2l,c
 18400  01085E  0E03               	movlw	high _ActiveScanResults
 18401  010860  20F4               	addwfc	prodh,w,c
 18402  010862  6EDA               	movwf	fsr2h,c
 18403  010864  0103               	movlb	3	; () banked
 18404  010866  8ADF               	bsf	indf2,5,c
 18405  010868                     l12111:
 18406                           
 18407                           ;miwi_mesh.c: 1222: }
 18408                           ;miwi_mesh.c: 1230: for(i = 0; i < 4; i++)
 18409  010868  0E00               	movlw	0
 18410  01086A  0101               	movlb	1	; () banked
 18411  01086C  6FED               	movwf	MiWiTasks@i& (0+255),b
 18412  01086E                     l12113:
 18413                           
 18414                           ; BSR set to: 1
 18415  01086E  0E03               	movlw	3
 18416  010870  0101               	movlb	1	; () banked
 18417  010872  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 18418  010874  D001               	goto	l12117
 18419  010876  D02E               	goto	l12123
 18420  010878                     l12117:
 18421                           
 18422                           ; BSR set to: 1
 18423                           ;miwi_mesh.c: 1231: {
 18424                           ;miwi_mesh.c: 1232: ActiveScanResults[ActiveScanResultIndex].Address[i] = rxMessage.Sour
      +                          ceAddress[i];
 18425  010878  0101               	movlb	1	; () banked
 18426  01087A  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18427  01087C  0D01               	mullw	1
 18428  01087E  50F3               	movf	prodl,w,c
 18429  010880  0101               	movlb	1	; () banked
 18430  010882  250F               	addwf	(_rxMessage+3)& (0+255),w,b
 18431  010884  6ED9               	movwf	fsr2l,c
 18432  010886  50F4               	movf	prodh,w,c
 18433  010888  0101               	movlb	1	; () banked
 18434  01088A  2110               	addwfc	(_rxMessage+4)& (0+255),w,b
 18435  01088C  6EDA               	movwf	fsr2h,c
 18436  01088E  0101               	movlb	1	; () banked
 18437  010890  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18438  010892  0D01               	mullw	1
 18439  010894  0E01               	movlw	1
 18440  010896  26F3               	addwf	prodl,f,c
 18441  010898  0E00               	movlw	0
 18442  01089A  22F4               	addwfc	prodh,f,c
 18443  01089C  0E00               	movlw	low _ActiveScanResults
 18444  01089E  0101               	movlb	1	; () banked
 18445  0108A0  6FD1               	movwf	??_MiWiTasks& (0+255),b
 18446  0108A2  0E03               	movlw	high _ActiveScanResults
 18447  0108A4  0101               	movlb	1	; () banked
 18448  0108A6  6FD2               	movwf	(??_MiWiTasks+1)& (0+255),b
 18449  0108A8  50F3               	movf	prodl,w,c
 18450  0108AA  0101               	movlb	1	; () banked
 18451  0108AC  27D1               	addwf	??_MiWiTasks& (0+255),f,b
 18452  0108AE  50F4               	movf	prodh,w,c
 18453  0108B0  0101               	movlb	1	; () banked
 18454  0108B2  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18455  0108B4  0101               	movlb	1	; () banked
 18456  0108B6  5142               	movf	_ActiveScanResultIndex& (0+255),w,b
 18457  0108B8  0D0A               	mullw	10
 18458  0108BA  50F3               	movf	prodl,w,c
 18459  0108BC  0101               	movlb	1	; () banked
 18460  0108BE  25D1               	addwf	??_MiWiTasks& (0+255),w,b
 18461  0108C0  6EE1               	movwf	fsr1l,c
 18462  0108C2  50F4               	movf	prodh,w,c
 18463  0108C4  0101               	movlb	1	; () banked
 18464  0108C6  21D2               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 18465  0108C8  6EE2               	movwf	fsr1h,c
 18466  0108CA  CFDF FFE7          	movff	indf2,indf1
 18467                           
 18468                           ; BSR set to: 1
 18469  0108CE  0101               	movlb	1	; () banked
 18470  0108D0  2BED               	incf	MiWiTasks@i& (0+255),f,b
 18471  0108D2  D7CD               	goto	l12113
 18472  0108D4                     l12123:
 18473                           
 18474                           ; BSR set to: 1
 18475                           ;miwi_mesh.c: 1233: }
 18476                           ;miwi_mesh.c: 1241: ActiveScanResultIndex++;
 18477  0108D4  0101               	movlb	1	; () banked
 18478  0108D6  2B42               	incf	_ActiveScanResultIndex& (0+255),f,b
 18479                           
 18480                           ; BSR set to: 1
 18481                           ;miwi_mesh.c: 1242: }
 18482                           ;miwi_mesh.c: 1243: }
 18483                           ;miwi_mesh.c: 1244: }
 18484                           ;miwi_mesh.c: 1245: }
 18485                           ;miwi_mesh.c: 1246: break;
 18486                           
 18487                           ; BSR set to: 1
 18488                           
 18489                           ; BSR set to: 1
 18490  0108D8  D112               	goto	l601
 18491  0108DA                     l12125:
 18492                           
 18493                           ; BSR set to: 1
 18494                           ;miwi_mesh.c: 1412: {
 18495                           ;miwi_mesh.c: 1413: if(MACRxPacket.Payload[3] == 0x00)
 18496  0108DA  0101               	movlb	1	; () banked
 18497  0108DC  EE20 F003          	lfsr	2,3
 18498  0108E0  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18499  0108E2  26D9               	addwf	fsr2l,f,c
 18500  0108E4  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18501  0108E6  22DA               	addwfc	fsr2h,f,c
 18502  0108E8  50DF               	movf	indf2,w,c
 18503  0108EA  A4D8               	btfss	status,2,c
 18504  0108EC  D06C               	goto	l654
 18505                           
 18506                           ; BSR set to: 1
 18507                           ;miwi_mesh.c: 1414: {
 18508                           ;miwi_mesh.c: 1417: myShortAddress.v[0] = MACRxPacket.Payload[1];
 18509  0108EE  0101               	movlb	1	; () banked
 18510  0108F0  EE20 F001          	lfsr	2,1
 18511  0108F4  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18512  0108F6  26D9               	addwf	fsr2l,f,c
 18513  0108F8  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18514  0108FA  22DA               	addwfc	fsr2h,f,c
 18515  0108FC  50DF               	movf	indf2,w,c
 18516  0108FE  0101               	movlb	1	; () banked
 18517  010900  6F85               	movwf	_myShortAddress& (0+255),b
 18518                           
 18519                           ;miwi_mesh.c: 1418: myShortAddress.v[1] = MACRxPacket.Payload[2];
 18520  010902  0101               	movlb	1	; () banked
 18521  010904  EE20 F002          	lfsr	2,2
 18522  010908  5119               	movf	(_MACRxPacket+3)& (0+255),w,b
 18523  01090A  26D9               	addwf	fsr2l,f,c
 18524  01090C  511A               	movf	(_MACRxPacket+4)& (0+255),w,b
 18525  01090E  22DA               	addwfc	fsr2h,f,c
 18526  010910  50DF               	movf	indf2,w,c
 18527  010912  0101               	movlb	1	; () banked
 18528  010914  6F86               	movwf	(_myShortAddress+1)& (0+255),b
 18529                           
 18530                           ; BSR set to: 1
 18531                           ;miwi_mesh.c: 1441: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 18532  010916  0E85               	movlw	low _myShortAddress
 18533  010918  0101               	movlb	1	; () banked
 18534  01091A  6F8A               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18535  01091C  0E01               	movlw	high _myShortAddress
 18536  01091E  0101               	movlb	1	; () banked
 18537  010920  6F8B               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18538  010922  0E83               	movlw	low _myPANID
 18539  010924  0101               	movlb	1	; () banked
 18540  010926  6F8C               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18541  010928  0E01               	movlw	high _myPANID
 18542  01092A  0101               	movlb	1	; () banked
 18543  01092C  6F8D               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18544  01092E  EC02  F0B8         	call	_MiMAC_SetAltAddress	;wreg free
 18545                           
 18546                           ;miwi_mesh.c: 1444: MiWiStateMachine.bits.memberOfNetwork = 1;
 18547  010932  0101               	movlb	1	; () banked
 18548  010934  8338               	bsf	_MiWiStateMachine& (0+255),1,b
 18549                           
 18550                           ; BSR set to: 1
 18551                           ;miwi_mesh.c: 1447: tempNodeStatus.Val = 0xBF;
 18552  010936  0EBF               	movlw	191
 18553  010938  0100               	movlb	0	; () banked
 18554  01093A  6FBD               	movwf	_tempNodeStatus& (0+255),b
 18555                           
 18556                           ; BSR set to: 0
 18557                           ;miwi_mesh.c: 1448: for(i = 0; i < 4; i++)
 18558  01093C  0E00               	movlw	0
 18559  01093E  0101               	movlb	1	; () banked
 18560  010940  6FED               	movwf	MiWiTasks@i& (0+255),b
 18561  010942                     l12137:
 18562                           
 18563                           ; BSR set to: 1
 18564  010942  0E03               	movlw	3
 18565  010944  0101               	movlb	1	; () banked
 18566  010946  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 18567  010948  D001               	goto	l12141
 18568  01094A  D019               	goto	l12147
 18569  01094C                     l12141:
 18570                           
 18571                           ; BSR set to: 1
 18572                           ;miwi_mesh.c: 1449: {
 18573                           ;miwi_mesh.c: 1450: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18574  01094C  0101               	movlb	1	; () banked
 18575  01094E  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18576  010950  0D01               	mullw	1
 18577  010952  50F3               	movf	prodl,w,c
 18578  010954  0101               	movlb	1	; () banked
 18579  010956  2517               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18580  010958  6ED9               	movwf	fsr2l,c
 18581  01095A  50F4               	movf	prodh,w,c
 18582  01095C  0101               	movlb	1	; () banked
 18583  01095E  2118               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18584  010960  6EDA               	movwf	fsr2h,c
 18585  010962  0101               	movlb	1	; () banked
 18586  010964  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18587  010966  0D01               	mullw	1
 18588  010968  0E26               	movlw	low _tempLongAddress
 18589  01096A  24F3               	addwf	prodl,w,c
 18590  01096C  6EE1               	movwf	fsr1l,c
 18591  01096E  0E01               	movlw	high _tempLongAddress
 18592  010970  20F4               	addwfc	prodh,w,c
 18593  010972  6EE2               	movwf	fsr1h,c
 18594  010974  CFDF FFE7          	movff	indf2,indf1
 18595                           
 18596                           ; BSR set to: 1
 18597  010978  0101               	movlb	1	; () banked
 18598  01097A  2BED               	incf	MiWiTasks@i& (0+255),f,b
 18599  01097C  D7E2               	goto	l12137
 18600  01097E                     l12147:
 18601                           
 18602                           ; BSR set to: 1
 18603                           ;miwi_mesh.c: 1451: }
 18604                           ;miwi_mesh.c: 1453: if(myShortAddress.v[0] == 0x00)
 18605  01097E  0101               	movlb	1	; () banked
 18606  010980  5185               	movf	_myShortAddress& (0+255),w,b
 18607  010982  A4D8               	btfss	status,2,c
 18608  010984  D005               	goto	l657
 18609                           
 18610                           ; BSR set to: 1
 18611                           ;miwi_mesh.c: 1454: {
 18612                           ;miwi_mesh.c: 1457: tempShortAddress.Val = 0x0000;
 18613  010986  0E00               	movlw	0
 18614  010988  0101               	movlb	1	; () banked
 18615  01098A  6F88               	movwf	(_tempShortAddress+1)& (0+255),b
 18616  01098C  0E00               	movlw	0
 18617  01098E  D004               	goto	L5
 18618  010990                     l657:
 18619                           
 18620                           ; BSR set to: 1
 18621                           ;miwi_mesh.c: 1459: else
 18622                           ;miwi_mesh.c: 1460: {
 18623                           ;miwi_mesh.c: 1461: tempShortAddress.v[1] = myShortAddress.v[1];
 18624  010990  C186  F188         	movff	_myShortAddress+1,_tempShortAddress+1
 18625                           
 18626                           ; BSR set to: 1
 18627                           ;miwi_mesh.c: 1462: tempShortAddress.v[0] = 0x00;
 18628  010994  0E00               	movlw	0
 18629  010996  0101               	movlb	1	; () banked
 18630  010998                     L5:
 18631  010998  6F87               	movwf	_tempShortAddress& (0+255),b
 18632                           
 18633                           ; BSR set to: 1
 18634                           ;miwi_mesh.c: 1463: }
 18635                           ;miwi_mesh.c: 1465: tempPANID.Val = myPANID.Val;
 18636                           
 18637                           ; BSR set to: 1
 18638  01099A  C183  F13C         	movff	_myPANID,_tempPANID
 18639  01099E  C184  F13D         	movff	_myPANID+1,_tempPANID+1
 18640                           
 18641                           ; BSR set to: 1
 18642                           ;miwi_mesh.c: 1468: myParent = AddNodeToNetworkTable();
 18643  0109A2  EC4C  F0A9         	call	_AddNodeToNetworkTable	;wreg free
 18644  0109A6  0101               	movlb	1	; () banked
 18645  0109A8  6F4C               	movwf	_myParent& (0+255),b
 18646                           
 18647                           ; BSR set to: 1
 18648                           ;miwi_mesh.c: 1470: IncomingFrameCounter[myParent].Val = 0;
 18649  0109AA  0101               	movlb	1	; () banked
 18650  0109AC  514C               	movf	_myParent& (0+255),w,b
 18651  0109AE  0D04               	mullw	4
 18652  0109B0  0E00               	movlw	low _IncomingFrameCounter
 18653  0109B2  24F3               	addwf	prodl,w,c
 18654  0109B4  6ED9               	movwf	fsr2l,c
 18655  0109B6  0E02               	movlw	high _IncomingFrameCounter
 18656  0109B8  20F4               	addwfc	prodh,w,c
 18657  0109BA  6EDA               	movwf	fsr2h,c
 18658  0109BC  6ADE               	clrf	postinc2,c
 18659  0109BE  6ADE               	clrf	postinc2,c
 18660  0109C0  6ADE               	clrf	postinc2,c
 18661  0109C2  6ADD               	clrf	postdec2,c
 18662                           
 18663                           ;miwi_mesh.c: 1490: ;
 18664                           ;miwi_mesh.c: 1491: }
 18665  0109C4  D09C               	goto	l601
 18666  0109C6                     l654:
 18667                           
 18668                           ; BSR set to: 1
 18669                           ;miwi_mesh.c: 1492: else
 18670                           ;miwi_mesh.c: 1493: {
 18671                           ;miwi_mesh.c: 1495: myParent = 0xFF;
 18672  0109C6  0101               	movlb	1	; () banked
 18673  0109C8  694C               	setf	_myParent& (0+255),b
 18674                           
 18675                           ;miwi_mesh.c: 1496: myPANID.Val = 0xFFFF;
 18676  0109CA  0101               	movlb	1	; () banked
 18677  0109CC  6983               	setf	_myPANID& (0+255),b
 18678  0109CE  6984               	setf	(_myPANID+1)& (0+255),b
 18679                           
 18680                           ;miwi_mesh.c: 1497: tempShortAddress.Val = 0xFFFF;
 18681  0109D0  0101               	movlb	1	; () banked
 18682  0109D2  6987               	setf	_tempShortAddress& (0+255),b
 18683  0109D4  6988               	setf	(_tempShortAddress+1)& (0+255),b
 18684                           
 18685                           ; BSR set to: 1
 18686                           ;miwi_mesh.c: 1498: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 18687  0109D6  0E87               	movlw	low _tempShortAddress
 18688  0109D8  0101               	movlb	1	; () banked
 18689  0109DA  6F8A               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18690  0109DC  0E01               	movlw	high _tempShortAddress
 18691  0109DE  0101               	movlb	1	; () banked
 18692  0109E0  6F8B               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18693  0109E2  0E83               	movlw	low _myPANID
 18694  0109E4  0101               	movlb	1	; () banked
 18695  0109E6  6F8C               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18696  0109E8  0E01               	movlw	high _myPANID
 18697  0109EA  0101               	movlb	1	; () banked
 18698  0109EC  6F8D               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18699  0109EE  EC02  F0B8         	call	_MiMAC_SetAltAddress	;wreg free
 18700                           
 18701                           ;miwi_mesh.c: 1504: }
 18702                           ;miwi_mesh.c: 1505: }
 18703                           ;miwi_mesh.c: 1506: break;
 18704  0109F2  D085               	goto	l601
 18705  0109F4                     l12161:
 18706                           
 18707                           ;miwi_mesh.c: 1510: {
 18708                           ;miwi_mesh.c: 1511: uint8_t cIndex;
 18709                           ;miwi_mesh.c: 1526: {
 18710                           ;miwi_mesh.c: 1527: for(i = 0; i < 4; i++)
 18711  0109F4  0E00               	movlw	0
 18712  0109F6  0101               	movlb	1	; () banked
 18713  0109F8  6FED               	movwf	MiWiTasks@i& (0+255),b
 18714  0109FA                     l12163:
 18715                           
 18716                           ; BSR set to: 1
 18717  0109FA  0E03               	movlw	3
 18718  0109FC  0101               	movlb	1	; () banked
 18719  0109FE  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 18720  010A00  D001               	goto	l12167
 18721  010A02  D019               	goto	l12173
 18722  010A04                     l12167:
 18723                           
 18724                           ; BSR set to: 1
 18725                           ;miwi_mesh.c: 1528: {
 18726                           ;miwi_mesh.c: 1529: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18727  010A04  0101               	movlb	1	; () banked
 18728  010A06  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18729  010A08  0D01               	mullw	1
 18730  010A0A  50F3               	movf	prodl,w,c
 18731  010A0C  0101               	movlb	1	; () banked
 18732  010A0E  2517               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18733  010A10  6ED9               	movwf	fsr2l,c
 18734  010A12  50F4               	movf	prodh,w,c
 18735  010A14  0101               	movlb	1	; () banked
 18736  010A16  2118               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18737  010A18  6EDA               	movwf	fsr2h,c
 18738  010A1A  0101               	movlb	1	; () banked
 18739  010A1C  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18740  010A1E  0D01               	mullw	1
 18741  010A20  0E26               	movlw	low _tempLongAddress
 18742  010A22  24F3               	addwf	prodl,w,c
 18743  010A24  6EE1               	movwf	fsr1l,c
 18744  010A26  0E01               	movlw	high _tempLongAddress
 18745  010A28  20F4               	addwfc	prodh,w,c
 18746  010A2A  6EE2               	movwf	fsr1h,c
 18747  010A2C  CFDF FFE7          	movff	indf2,indf1
 18748                           
 18749                           ; BSR set to: 1
 18750  010A30  0101               	movlb	1	; () banked
 18751  010A32  2BED               	incf	MiWiTasks@i& (0+255),f,b
 18752  010A34  D7E2               	goto	l12163
 18753  010A36                     l12173:
 18754                           
 18755                           ; BSR set to: 1
 18756                           ;miwi_mesh.c: 1530: }
 18757                           ;miwi_mesh.c: 1531: if( (cIndex = SearchForLongAddress()) == 0xFF )
 18758  010A36  EC77  F0AD         	call	_SearchForLongAddress	;wreg free
 18759  010A3A  0101               	movlb	1	; () banked
 18760  010A3C  6FDD               	movwf	MiWiTasks@cIndex& (0+255),b
 18761  010A3E  0101               	movlb	1	; () banked
 18762  010A40  29DD               	incf	MiWiTasks@cIndex& (0+255),w,b
 18763  010A42  B4D8               	btfsc	status,2,c
 18764  010A44  D05C               	goto	l601
 18765                           
 18766                           ; BSR set to: 1
 18767                           ;miwi_mesh.c: 1534: }
 18768                           ;miwi_mesh.c: 1535: }
 18769                           ;miwi_mesh.c: 1590: if( ConnectionTable[cIndex].status.bits.isFamily )
 18770                           
 18771                           ; BSR set to: 1
 18772                           
 18773                           ; BSR set to: 1
 18774                           ;miwi_mesh.c: 1532: {
 18775                           ;miwi_mesh.c: 1533: break;
 18776  010A46  0101               	movlb	1	; () banked
 18777  010A48  51DD               	movf	MiWiTasks@cIndex& (0+255),w,b
 18778  010A4A  0D09               	mullw	9
 18779  010A4C  0E08               	movlw	8
 18780  010A4E  26F3               	addwf	prodl,f,c
 18781  010A50  0E00               	movlw	0
 18782  010A52  22F4               	addwfc	prodh,f,c
 18783  010A54  0E46               	movlw	low _ConnectionTable
 18784  010A56  24F3               	addwf	prodl,w,c
 18785  010A58  6ED9               	movwf	fsr2l,c
 18786  010A5A  0E02               	movlw	high _ConnectionTable
 18787  010A5C  20F4               	addwfc	prodh,w,c
 18788  010A5E  6EDA               	movwf	fsr2h,c
 18789  010A60  0102               	movlb	2	; () banked
 18790  010A62  AADF               	btfss	indf2,5,c
 18791  010A64  D04C               	goto	l601
 18792                           
 18793                           ; BSR set to: 2
 18794                           ;miwi_mesh.c: 1591: {
 18795                           ;miwi_mesh.c: 1592: for(i = 0; i < 10; i++)
 18796  010A66  0E00               	movlw	0
 18797  010A68  0101               	movlb	1	; () banked
 18798  010A6A  6FED               	movwf	MiWiTasks@i& (0+255),b
 18799  010A6C                     l12181:
 18800                           
 18801                           ; BSR set to: 1
 18802  010A6C  0E09               	movlw	9
 18803  010A6E  0101               	movlb	1	; () banked
 18804  010A70  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 18805  010A72  D001               	goto	l12185
 18806  010A74  D012               	goto	l667
 18807  010A76                     l12185:
 18808                           
 18809                           ; BSR set to: 1
 18810                           ;miwi_mesh.c: 1593: {
 18811                           ;miwi_mesh.c: 1594: ConnectionTable[i].status.Val = 0;
 18812  010A76  0101               	movlb	1	; () banked
 18813  010A78  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18814  010A7A  0D09               	mullw	9
 18815  010A7C  0E08               	movlw	8
 18816  010A7E  26F3               	addwf	prodl,f,c
 18817  010A80  0E00               	movlw	0
 18818  010A82  22F4               	addwfc	prodh,f,c
 18819  010A84  0E46               	movlw	low _ConnectionTable
 18820  010A86  24F3               	addwf	prodl,w,c
 18821  010A88  6ED9               	movwf	fsr2l,c
 18822  010A8A  0E02               	movlw	high _ConnectionTable
 18823  010A8C  20F4               	addwfc	prodh,w,c
 18824  010A8E  6EDA               	movwf	fsr2h,c
 18825  010A90  0E00               	movlw	0
 18826  010A92  6EDF               	movwf	indf2,c
 18827                           
 18828                           ; BSR set to: 1
 18829  010A94  0101               	movlb	1	; () banked
 18830  010A96  2BED               	incf	MiWiTasks@i& (0+255),f,b
 18831  010A98  D7E9               	goto	l12181
 18832  010A9A                     l667:
 18833                           
 18834                           ; BSR set to: 1
 18835                           ;miwi_mesh.c: 1595: }
 18836                           ;miwi_mesh.c: 1596: myParent = 0xFF;
 18837  010A9A  0101               	movlb	1	; () banked
 18838  010A9C  694C               	setf	_myParent& (0+255),b
 18839                           
 18840                           ;miwi_mesh.c: 1597: myShortAddress.Val = 0xFFFF;
 18841  010A9E  0101               	movlb	1	; () banked
 18842  010AA0  6985               	setf	_myShortAddress& (0+255),b
 18843  010AA2  6986               	setf	(_myShortAddress+1)& (0+255),b
 18844                           
 18845                           ;miwi_mesh.c: 1598: myPANID.Val = 0xFFFF;
 18846  010AA4  0101               	movlb	1	; () banked
 18847  010AA6  6983               	setf	_myPANID& (0+255),b
 18848  010AA8  6984               	setf	(_myPANID+1)& (0+255),b
 18849                           
 18850                           ; BSR set to: 1
 18851                           ;miwi_mesh.c: 1599: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 18852  010AAA  0E85               	movlw	low _myShortAddress
 18853  010AAC  0101               	movlb	1	; () banked
 18854  010AAE  6F8A               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18855  010AB0  0E01               	movlw	high _myShortAddress
 18856  010AB2  0101               	movlb	1	; () banked
 18857  010AB4  6F8B               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18858  010AB6  0E83               	movlw	low _myPANID
 18859  010AB8  0101               	movlb	1	; () banked
 18860  010ABA  6F8C               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18861  010ABC  0E01               	movlw	high _myPANID
 18862  010ABE  0101               	movlb	1	; () banked
 18863  010AC0  6F8D               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18864  010AC2  EC02  F0B8         	call	_MiMAC_SetAltAddress	;wreg free
 18865                           
 18866                           ;miwi_mesh.c: 1600: MiWiStateMachine.bits.memberOfNetwork = 0;
 18867  010AC6  0101               	movlb	1	; () banked
 18868  010AC8  9338               	bcf	_MiWiStateMachine& (0+255),1,b
 18869                           
 18870                           ; BSR set to: 1
 18871                           ;miwi_mesh.c: 1763: }
 18872                           
 18873                           ; BSR set to: 1
 18874                           ;miwi_mesh.c: 1762: break;
 18875                           
 18876                           ;miwi_mesh.c: 1761: default:
 18877                           
 18878                           ; BSR set to: 1
 18879                           ;miwi_mesh.c: 1606: }
 18880                           ;miwi_mesh.c: 1609: }
 18881                           ;miwi_mesh.c: 1610: break;
 18882  010ACA  D019               	goto	l601
 18883  010ACC                     l12197:
 18884                           
 18885                           ; BSR set to: 1
 18886  010ACC  C119  FFD9         	movff	_MACRxPacket+3,fsr2l
 18887  010AD0  C11A  FFDA         	movff	_MACRxPacket+4,fsr2h
 18888  010AD4  50DF               	movf	indf2,w,c
 18889                           
 18890                           ; Switch size 1, requested type "space"
 18891                           ; Number of cases is 2, Range of values is 2 to 3
 18892                           ; switch strategies available:
 18893                           ; Name         Instructions Cycles
 18894                           ; simple_byte            7     4 (average)
 18895                           ;	Chosen strategy is simple_byte
 18896  010AD6  0A02               	xorlw	2	; case 2
 18897  010AD8  B4D8               	btfsc	status,2,c
 18898  010ADA  D6FF               	goto	l12125
 18899  010ADC  0A01               	xorlw	1	; case 3
 18900  010ADE  B4D8               	btfsc	status,2,c
 18901  010AE0  D789               	goto	l12161
 18902                           
 18903                           ; BSR set to: 1
 18904                           ;miwi_mesh.c: 1769: }
 18905                           
 18906                           ; BSR set to: 1
 18907                           ;miwi_mesh.c: 1767: break;
 18908                           
 18909                           ;miwi_mesh.c: 1766: default:
 18910                           
 18911                           ; BSR set to: 1
 18912                           ;miwi_mesh.c: 1764: break;
 18913  010AE2  D00D               	goto	l601
 18914  010AE4                     l12201:
 18915                           
 18916                           ; BSR set to: 1
 18917  010AE4  0101               	movlb	1	; () banked
 18918  010AE6  5116               	movf	_MACRxPacket& (0+255),w,b
 18919  010AE8  0B03               	andlw	3
 18920                           
 18921                           ; Switch size 1, requested type "space"
 18922                           ; Number of cases is 3, Range of values is 0 to 3
 18923                           ; switch strategies available:
 18924                           ; Name         Instructions Cycles
 18925                           ; simple_byte           10     6 (average)
 18926                           ;	Chosen strategy is simple_byte
 18927  010AEA  0A00               	xorlw	0	; case 0
 18928  010AEC  B4D8               	btfsc	status,2,c
 18929  010AEE  EF55  F080         	goto	l11883
 18930  010AF2  0A01               	xorlw	1	; case 1
 18931  010AF4  B4D8               	btfsc	status,2,c
 18932  010AF6  D7EA               	goto	l12197
 18933  010AF8  0A02               	xorlw	2	; case 3
 18934  010AFA  B4D8               	btfsc	status,2,c
 18935  010AFC  D58C               	goto	l12077
 18936  010AFE                     l601:
 18937                           
 18938                           ;miwi_mesh.c: 1771: if( MiWiStateMachine.bits.RxHasUserData == 0 )
 18939  010AFE  0101               	movlb	1	; () banked
 18940  010B00  A538               	btfss	_MiWiStateMachine& (0+255),2,b
 18941                           
 18942                           ; BSR set to: 1
 18943                           ;miwi_mesh.c: 1772: {
 18944                           ;miwi_mesh.c: 1773: MiMAC_DiscardPacket();
 18945  010B02  EC5C  F0B7         	call	_MiMAC_DiscardPacket	;wreg free
 18946  010B06                     l12205:
 18947                           
 18948                           ;miwi_mesh.c: 1774: }
 18949                           ;miwi_mesh.c: 1775: }
 18950                           ;miwi_mesh.c: 1777: t1 = MiWi_TickGet();
 18951  010B06  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 18952  010B0A  C18A  F1DE         	movff	?_MiWi_TickGet,MiWiTasks@t1
 18953  010B0E  C18B  F1DF         	movff	?_MiWi_TickGet+1,MiWiTasks@t1+1
 18954  010B12  C18C  F1E0         	movff	?_MiWi_TickGet+2,MiWiTasks@t1+2
 18955  010B16  C18D  F1E1         	movff	?_MiWi_TickGet+3,MiWiTasks@t1+3
 18956                           
 18957                           ;miwi_mesh.c: 1844: for(i = 0; i < 4; i++)
 18958  010B1A  0E00               	movlw	0
 18959  010B1C  0101               	movlb	1	; () banked
 18960  010B1E  6FED               	movwf	MiWiTasks@i& (0+255),b
 18961  010B20                     l12209:
 18962                           
 18963                           ; BSR set to: 1
 18964  010B20  0E03               	movlw	3
 18965  010B22  0101               	movlb	1	; () banked
 18966  010B24  65ED               	cpfsgt	MiWiTasks@i& (0+255),b
 18967  010B26  D001               	goto	l12213
 18968  010B28  D067               	goto	l672
 18969  010B2A                     l12213:
 18970                           
 18971                           ; BSR set to: 1
 18972                           ;miwi_mesh.c: 1845: {
 18973                           ;miwi_mesh.c: 1846: if( BroadcastRecords[i].RxCounter > 0 )
 18974  010B2A  0101               	movlb	1	; () banked
 18975  010B2C  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18976  010B2E  0D08               	mullw	8
 18977  010B30  0E03               	movlw	3
 18978  010B32  26F3               	addwf	prodl,f,c
 18979  010B34  0E00               	movlw	0
 18980  010B36  22F4               	addwfc	prodh,f,c
 18981  010B38  0E26               	movlw	low _BroadcastRecords
 18982  010B3A  24F3               	addwf	prodl,w,c
 18983  010B3C  6ED9               	movwf	fsr2l,c
 18984  010B3E  0E00               	movlw	high _BroadcastRecords
 18985  010B40  20F4               	addwfc	prodh,w,c
 18986  010B42  6EDA               	movwf	fsr2h,c
 18987  010B44  50DF               	movf	indf2,w,c
 18988  010B46  B4D8               	btfsc	status,2,c
 18989  010B48  D054               	goto	l12219
 18990                           
 18991                           ; BSR set to: 1
 18992                           ;miwi_mesh.c: 1847: {
 18993                           ;miwi_mesh.c: 1848: if( (t1.Val - BroadcastRecords[i].StartTick.Val) > (((uint32_t)(1600
      +                          0000)/32)) )
 18994  010B4A  0101               	movlb	1	; () banked
 18995  010B4C  51ED               	movf	MiWiTasks@i& (0+255),w,b
 18996  010B4E  0D08               	mullw	8
 18997  010B50  0E04               	movlw	4
 18998  010B52  26F3               	addwf	prodl,f,c
 18999  010B54  0E00               	movlw	0
 19000  010B56  22F4               	addwfc	prodh,f,c
 19001  010B58  0E26               	movlw	low _BroadcastRecords
 19002  010B5A  24F3               	addwf	prodl,w,c
 19003  010B5C  6ED9               	movwf	fsr2l,c
 19004  010B5E  0E00               	movlw	high _BroadcastRecords
 19005  010B60  20F4               	addwfc	prodh,w,c
 19006  010B62  6EDA               	movwf	fsr2h,c
 19007  010B64  CFDE F1D1          	movff	postinc2,??_MiWiTasks
 19008  010B68  CFDE F1D2          	movff	postinc2,??_MiWiTasks+1
 19009  010B6C  CFDE F1D3          	movff	postinc2,??_MiWiTasks+2
 19010  010B70  CFDE F1D4          	movff	postinc2,??_MiWiTasks+3
 19011  010B74  0101               	movlb	1	; () banked
 19012  010B76  1FD1               	comf	??_MiWiTasks& (0+255),f,b
 19013  010B78  1FD2               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19014  010B7A  1FD3               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19015  010B7C  1FD4               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19016  010B7E  2BD1               	incf	??_MiWiTasks& (0+255),f,b
 19017  010B80  0E00               	movlw	0
 19018  010B82  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19019  010B84  23D3               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19020  010B86  23D4               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19021  010B88  0101               	movlb	1	; () banked
 19022  010B8A  51DE               	movf	MiWiTasks@t1& (0+255),w,b
 19023  010B8C  0101               	movlb	1	; () banked
 19024  010B8E  25D1               	addwf	??_MiWiTasks& (0+255),w,b
 19025  010B90  0101               	movlb	1	; () banked
 19026  010B92  6FD5               	movwf	(??_MiWiTasks+4)& (0+255),b
 19027  010B94  0101               	movlb	1	; () banked
 19028  010B96  51DF               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 19029  010B98  0101               	movlb	1	; () banked
 19030  010B9A  21D2               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19031  010B9C  0101               	movlb	1	; () banked
 19032  010B9E  6FD6               	movwf	(??_MiWiTasks+5)& (0+255),b
 19033  010BA0  0101               	movlb	1	; () banked
 19034  010BA2  51E0               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 19035  010BA4  0101               	movlb	1	; () banked
 19036  010BA6  21D3               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19037  010BA8  0101               	movlb	1	; () banked
 19038  010BAA  6FD7               	movwf	(??_MiWiTasks+6)& (0+255),b
 19039  010BAC  0101               	movlb	1	; () banked
 19040  010BAE  51E1               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 19041  010BB0  0101               	movlb	1	; () banked
 19042  010BB2  21D4               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19043  010BB4  0101               	movlb	1	; () banked
 19044  010BB6  6FD8               	movwf	(??_MiWiTasks+7)& (0+255),b
 19045  010BB8  0101               	movlb	1	; () banked
 19046  010BBA  51D8               	movf	(??_MiWiTasks+7)& (0+255),w,b
 19047  010BBC  E10B               	bnz	u14280
 19048  010BBE  0E21               	movlw	33
 19049  010BC0  0101               	movlb	1	; () banked
 19050  010BC2  5DD5               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 19051  010BC4  0EA1               	movlw	161
 19052  010BC6  0101               	movlb	1	; () banked
 19053  010BC8  59D6               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 19054  010BCA  0E07               	movlw	7
 19055  010BCC  0101               	movlb	1	; () banked
 19056  010BCE  59D7               	subwfb	(??_MiWiTasks+6)& (0+255),w,b
 19057  010BD0  A0D8               	btfss	status,0,c
 19058  010BD2  D00F               	goto	l12219
 19059  010BD4                     u14280:
 19060                           
 19061                           ; BSR set to: 1
 19062                           ;miwi_mesh.c: 1849: {
 19063                           ;miwi_mesh.c: 1850: BroadcastRecords[i].RxCounter = 0;
 19064  010BD4  0101               	movlb	1	; () banked
 19065  010BD6  51ED               	movf	MiWiTasks@i& (0+255),w,b
 19066  010BD8  0D08               	mullw	8
 19067  010BDA  0E03               	movlw	3
 19068  010BDC  26F3               	addwf	prodl,f,c
 19069  010BDE  0E00               	movlw	0
 19070  010BE0  22F4               	addwfc	prodh,f,c
 19071  010BE2  0E26               	movlw	low _BroadcastRecords
 19072  010BE4  24F3               	addwf	prodl,w,c
 19073  010BE6  6ED9               	movwf	fsr2l,c
 19074  010BE8  0E00               	movlw	high _BroadcastRecords
 19075  010BEA  20F4               	addwfc	prodh,w,c
 19076  010BEC  6EDA               	movwf	fsr2h,c
 19077  010BEE  0E00               	movlw	0
 19078  010BF0  6EDF               	movwf	indf2,c
 19079  010BF2                     l12219:
 19080                           
 19081                           ; BSR set to: 1
 19082  010BF2  0101               	movlb	1	; () banked
 19083  010BF4  2BED               	incf	MiWiTasks@i& (0+255),f,b
 19084  010BF6  D794               	goto	l12209
 19085  010BF8                     l672:
 19086                           
 19087                           ; BSR set to: 1
 19088                           ;miwi_mesh.c: 1851: }
 19089                           ;miwi_mesh.c: 1852: }
 19090                           ;miwi_mesh.c: 1853: }
 19091                           ;miwi_mesh.c: 1857: if(openSocketInfo.status.bits.requestIsOpen)
 19092  010BF8  0101               	movlb	1	; () banked
 19093  010BFA  A300               	btfss	_openSocketInfo& (0+255),1,b
 19094  010BFC  0012               	return	
 19095                           
 19096                           ; BSR set to: 1
 19097                           ;miwi_mesh.c: 1858: {
 19098                           ;miwi_mesh.c: 1859: if(openSocketInfo.status.bits.matchFound)
 19099  010BFE  0101               	movlb	1	; () banked
 19100  010C00  B100               	btfsc	_openSocketInfo& (0+255),0,b
 19101  010C02  0012               	return	
 19102                           
 19103                           ; BSR set to: 1
 19104                           ;miwi_mesh.c: 1894: else
 19105                           ;miwi_mesh.c: 1895: {
 19106                           ;miwi_mesh.c: 1896: t2.Val = (t1.Val - openSocketInfo.socketStart.Val);
 19107                           
 19108                           ; BSR set to: 1
 19109                           
 19110                           ; BSR set to: 1
 19111                           ;miwi_mesh.c: 1860: {
 19112                           ;miwi_mesh.c: 1893: }
 19113  010C04  C108  F1D1         	movff	_openSocketInfo+8,??_MiWiTasks
 19114  010C08  C109  F1D2         	movff	_openSocketInfo+9,??_MiWiTasks+1
 19115  010C0C  C10A  F1D3         	movff	_openSocketInfo+10,??_MiWiTasks+2
 19116  010C10  C10B  F1D4         	movff	_openSocketInfo+11,??_MiWiTasks+3
 19117  010C14  0101               	movlb	1	; () banked
 19118  010C16  1FD1               	comf	??_MiWiTasks& (0+255),f,b
 19119  010C18  1FD2               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19120  010C1A  1FD3               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19121  010C1C  1FD4               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19122  010C1E  2BD1               	incf	??_MiWiTasks& (0+255),f,b
 19123  010C20  0E00               	movlw	0
 19124  010C22  23D2               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19125  010C24  23D3               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19126  010C26  23D4               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19127  010C28  0101               	movlb	1	; () banked
 19128  010C2A  51DE               	movf	MiWiTasks@t1& (0+255),w,b
 19129  010C2C  0101               	movlb	1	; () banked
 19130  010C2E  25D1               	addwf	??_MiWiTasks& (0+255),w,b
 19131  010C30  0101               	movlb	1	; () banked
 19132  010C32  6FD9               	movwf	MiWiTasks@t2& (0+255),b
 19133  010C34  0101               	movlb	1	; () banked
 19134  010C36  51DF               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 19135  010C38  0101               	movlb	1	; () banked
 19136  010C3A  21D2               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19137  010C3C  0101               	movlb	1	; () banked
 19138  010C3E  6FDA               	movwf	(MiWiTasks@t2+1)& (0+255),b
 19139  010C40  0101               	movlb	1	; () banked
 19140  010C42  51E0               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 19141  010C44  0101               	movlb	1	; () banked
 19142  010C46  21D3               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19143  010C48  0101               	movlb	1	; () banked
 19144  010C4A  6FDB               	movwf	(MiWiTasks@t2+2)& (0+255),b
 19145  010C4C  0101               	movlb	1	; () banked
 19146  010C4E  51E1               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 19147  010C50  0101               	movlb	1	; () banked
 19148  010C52  21D4               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19149  010C54  0101               	movlb	1	; () banked
 19150  010C56  6FDC               	movwf	(MiWiTasks@t2+3)& (0+255),b
 19151                           
 19152                           ;miwi_mesh.c: 1898: if(t2.Val > (((uint32_t)(16000000)/32) * 3))
 19153  010C58  0101               	movlb	1	; () banked
 19154  010C5A  51DC               	movf	(MiWiTasks@t2+3)& (0+255),w,b
 19155  010C5C  E10B               	bnz	u14320
 19156  010C5E  0E61               	movlw	97
 19157  010C60  0101               	movlb	1	; () banked
 19158  010C62  5DD9               	subwf	MiWiTasks@t2& (0+255),w,b
 19159  010C64  0EE3               	movlw	227
 19160  010C66  0101               	movlb	1	; () banked
 19161  010C68  59DA               	subwfb	(MiWiTasks@t2+1)& (0+255),w,b
 19162  010C6A  0E16               	movlw	22
 19163  010C6C  0101               	movlb	1	; () banked
 19164  010C6E  59DB               	subwfb	(MiWiTasks@t2+2)& (0+255),w,b
 19165  010C70  A0D8               	btfss	status,0,c
 19166  010C72  0012               	return	
 19167  010C74                     u14320:
 19168                           
 19169                           ; BSR set to: 1
 19170                           ;miwi_mesh.c: 1899: {
 19171                           ;miwi_mesh.c: 1901: openSocketInfo.status.bits.requestIsOpen = 0;
 19172  010C74  0101               	movlb	1	; () banked
 19173  010C76  9300               	bcf	_openSocketInfo& (0+255),1,b
 19174                           
 19175                           ; BSR set to: 1
 19176                           
 19177                           ; BSR set to: 1
 19178  010C78  0012               	return	
 19179  010C7A                     __end_of_MiWiTasks:
 19180                           	opt stack 0
 19181                           tblptru	equ	0xFF8
 19182                           tblptrh	equ	0xFF7
 19183                           tblptrl	equ	0xFF6
 19184                           tablat	equ	0xFF5
 19185                           prodh	equ	0xFF4
 19186                           prodl	equ	0xFF3
 19187                           intcon	equ	0xFF2
 19188                           intcon2	equ	0xFF1
 19189                           intcon3	equ	0xFF0
 19190                           indf0	equ	0xFEF
 19191                           postinc0	equ	0xFEE
 19192                           plusw0	equ	0xFEB
 19193                           fsr0h	equ	0xFEA
 19194                           fsr0l	equ	0xFE9
 19195                           wreg	equ	0xFE8
 19196                           indf1	equ	0xFE7
 19197                           postinc1	equ	0xFE6
 19198                           postdec1	equ	0xFE5
 19199                           fsr1h	equ	0xFE2
 19200                           fsr1l	equ	0xFE1
 19201                           indf2	equ	0xFDF
 19202                           postinc2	equ	0xFDE
 19203                           postdec2	equ	0xFDD
 19204                           plusw2	equ	0xFDB
 19205                           fsr2h	equ	0xFDA
 19206                           fsr2l	equ	0xFD9
 19207                           status	equ	0xFD8
 19208                           
 19209 ;; *************** function _MiMAC_SetAltAddress *****************
 19210 ;; Defined at:
 19211 ;;		line 445 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19212 ;; Parameters:    Size  Location     Type
 19213 ;;  Address         2    0[BANK1 ] PTR unsigned char 
 19214 ;;		 -> tempShortAddress(2), myShortAddress(2), 
 19215 ;;  PANID           2    2[BANK1 ] PTR unsigned char 
 19216 ;;		 -> myPANID(2), 
 19217 ;; Auto vars:     Size  Location     Type
 19218 ;;		None
 19219 ;; Return value:  Size  Location     Type
 19220 ;;                  1    wreg      unsigned char 
 19221 ;; Registers used:
 19222 ;;		None
 19223 ;; Tracked objects:
 19224 ;;		On entry : 0/0
 19225 ;;		On exit  : 0/0
 19226 ;;		Unchanged: 0/0
 19227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19228 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19231 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19232 ;;Total ram usage:        4 bytes
 19233 ;; Hardware stack levels used:    1
 19234 ;; Hardware stack levels required when called:    9
 19235 ;; This function calls:
 19236 ;;		Nothing
 19237 ;; This function is called by:
 19238 ;;		_MiWiTasks
 19239 ;;		_MiApp_ProtocolInit
 19240 ;;		_MiApp_EstablishConnection
 19241 ;;		_MiApp_RemoveConnection
 19242 ;; This function uses a non-reentrant model
 19243 ;;
 19244                           
 19245                           	psect	text57
 19246  017004                     __ptext57:
 19247                           	opt stack 0
 19248  017004                     _MiMAC_SetAltAddress:
 19249                           	opt stack 16
 19250                           
 19251                           ;drv_mrf_miwi_89xa.c: 447: return 0;
 19252                           ;	Return value of _MiMAC_SetAltAddress is never used
 19253                           
 19254                           ; BSR set to: 1
 19255                           ;incstack = 0
 19256  017004  0012               	return		;funcret
 19257  017006                     __end_of_MiMAC_SetAltAddress:
 19258                           	opt stack 0
 19259                           tblptru	equ	0xFF8
 19260                           tblptrh	equ	0xFF7
 19261                           tblptrl	equ	0xFF6
 19262                           tablat	equ	0xFF5
 19263                           prodh	equ	0xFF4
 19264                           prodl	equ	0xFF3
 19265                           intcon	equ	0xFF2
 19266                           intcon2	equ	0xFF1
 19267                           intcon3	equ	0xFF0
 19268                           indf0	equ	0xFEF
 19269                           postinc0	equ	0xFEE
 19270                           plusw0	equ	0xFEB
 19271                           fsr0h	equ	0xFEA
 19272                           fsr0l	equ	0xFE9
 19273                           wreg	equ	0xFE8
 19274                           indf1	equ	0xFE7
 19275                           postinc1	equ	0xFE6
 19276                           postdec1	equ	0xFE5
 19277                           fsr1h	equ	0xFE2
 19278                           fsr1l	equ	0xFE1
 19279                           indf2	equ	0xFDF
 19280                           postinc2	equ	0xFDE
 19281                           postdec2	equ	0xFDD
 19282                           plusw2	equ	0xFDB
 19283                           fsr2h	equ	0xFDA
 19284                           fsr2l	equ	0xFD9
 19285                           status	equ	0xFD8
 19286                           
 19287 ;; *************** function _MiMAC_SendPacket *****************
 19288 ;; Defined at:
 19289 ;;		line 735 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19290 ;; Parameters:    Size  Location     Type
 19291 ;;  transParam      3   47[BANK1 ] struct .
 19292 ;;  MACPayload      2   50[BANK1 ] PTR unsigned char 
 19293 ;;		 -> TxBuffer(43), 
 19294 ;;  MACPayloadLe    1   52[BANK1 ] unsigned char 
 19295 ;; Auto vars:     Size  Location     Type
 19296 ;;  headerLen       1   54[BANK1 ] unsigned char 
 19297 ;;  i               1   56[BANK1 ] unsigned char 
 19298 ;;  TxIndex         1   55[BANK1 ] unsigned char 
 19299 ;; Return value:  Size  Location     Type
 19300 ;;                  1    wreg      unsigned char 
 19301 ;; Registers used:
 19302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19303 ;; Tracked objects:
 19304 ;;		On entry : 0/0
 19305 ;;		On exit  : 0/0
 19306 ;;		Unchanged: 0/0
 19307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19308 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19309 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19310 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19311 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19312 ;;Total ram usage:       10 bytes
 19313 ;; Hardware stack levels used:    1
 19314 ;; Hardware stack levels required when called:   13
 19315 ;; This function calls:
 19316 ;;		_CCM_Enc
 19317 ;;		_TxPacket
 19318 ;; This function is called by:
 19319 ;;		_MiWiTasks
 19320 ;;		_SendMACPacket
 19321 ;;		_MiApp_UnicastAddress
 19322 ;;		_MiApp_BroadcastPacket
 19323 ;;		_MiApp_UnicastConnection
 19324 ;;		_UnicastShortAddress
 19325 ;;		_MiApp_RemoveConnection
 19326 ;; This function uses a non-reentrant model
 19327 ;;
 19328                           
 19329                           	psect	text58
 19330  01359E                     __ptext58:
 19331                           	opt stack 0
 19332  01359E                     _MiMAC_SendPacket:
 19333                           	opt stack 14
 19334                           
 19335                           ;drv_mrf_miwi_89xa.c: 739: uint8_t i;
 19336                           ;drv_mrf_miwi_89xa.c: 740: uint8_t TxIndex;
 19337                           ;drv_mrf_miwi_89xa.c: 742: if( MACPayloadLen > 32 )
 19338                           
 19339                           ;incstack = 0
 19340  01359E  0E20               	movlw	32
 19341  0135A0  0101               	movlb	1	; () banked
 19342  0135A2  65BE               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 19343  0135A4  D002               	goto	l11601
 19344                           
 19345                           ; BSR set to: 1
 19346                           ;drv_mrf_miwi_89xa.c: 743: {
 19347                           ;drv_mrf_miwi_89xa.c: 744: return 0;
 19348  0135A6  0E00               	movlw	0
 19349                           
 19350                           ; BSR set to: 1
 19351  0135A8  0012               	return	
 19352  0135AA                     l11601:
 19353                           
 19354                           ; BSR set to: 1
 19355                           ;drv_mrf_miwi_89xa.c: 745: }
 19356                           ;drv_mrf_miwi_89xa.c: 750: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 19357  0135AA  0101               	movlb	1	; () banked
 19358  0135AC  B5B9               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 19359  0135AE  D004               	goto	u13200
 19360  0135B0  0101               	movlb	1	; () banked
 19361  0135B2  6BBF               	clrf	??_MiMAC_SendPacket& (0+255),b
 19362  0135B4  2BBF               	incf	??_MiMAC_SendPacket& (0+255),f,b
 19363  0135B6  D002               	goto	u13218
 19364  0135B8                     u13200:
 19365  0135B8  0101               	movlb	1	; () banked
 19366  0135BA  6BBF               	clrf	??_MiMAC_SendPacket& (0+255),b
 19367  0135BC                     u13218:
 19368  0135BC  0101               	movlb	1	; () banked
 19369  0135BE  3BBF               	swapf	??_MiMAC_SendPacket& (0+255),f,b
 19370  0135C0  47BF               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 19371  0135C2  47BF               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 19372  0135C4  0101               	movlb	1	; () banked
 19373  0135C6  51B9               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 19374  0135C8  0101               	movlb	1	; () banked
 19375  0135CA  19BF               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 19376  0135CC  0BBF               	andlw	-65
 19377  0135CE  19BF               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 19378  0135D0  0101               	movlb	1	; () banked
 19379  0135D2  6FB9               	movwf	MiMAC_SendPacket@transParam& (0+255),b
 19380                           
 19381                           ;drv_mrf_miwi_89xa.c: 757: if( transParam.flags.bits.packetType == 0x01 )
 19382  0135D4  0101               	movlb	1	; () banked
 19383  0135D6  51B9               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 19384  0135D8  0B03               	andlw	3
 19385  0135DA  06E8               	decf	wreg,f,c
 19386  0135DC  A4D8               	btfss	status,2,c
 19387  0135DE  D002               	goto	l318
 19388                           
 19389                           ; BSR set to: 1
 19390                           ;drv_mrf_miwi_89xa.c: 758: {
 19391                           ;drv_mrf_miwi_89xa.c: 759: transParam.flags.bits.sourcePrsnt = 1;
 19392  0135E0  0101               	movlb	1	; () banked
 19393  0135E2  8FB9               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 19394  0135E4                     l318:
 19395                           
 19396                           ; BSR set to: 1
 19397                           ;drv_mrf_miwi_89xa.c: 760: }
 19398                           ;drv_mrf_miwi_89xa.c: 762: MACTxBuffer[0] = transParam.flags.Val;
 19399  0135E4  C1B9  F2A0         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 19400                           
 19401                           ;drv_mrf_miwi_89xa.c: 763: MACTxBuffer[1] = MACSeq++;
 19402  0135E8  C0B4  F2A1         	movff	_MACSeq,_MACTxBuffer+1	;volatile
 19403                           
 19404                           ; BSR set to: 1
 19405  0135EC  0100               	movlb	0	; () banked
 19406  0135EE  2BB4               	incf	_MACSeq& (0+255),f,b
 19407                           
 19408                           ; BSR set to: 0
 19409                           ;drv_mrf_miwi_89xa.c: 766: TxIndex = 2;
 19410  0135F0  0E02               	movlw	2
 19411  0135F2  0101               	movlb	1	; () banked
 19412  0135F4  6FC1               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
 19413                           
 19414                           ; BSR set to: 1
 19415                           ;drv_mrf_miwi_89xa.c: 768: if( transParam.flags.bits.destPrsnt )
 19416  0135F6  0101               	movlb	1	; () banked
 19417  0135F8  ADB9               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 19418  0135FA  D02B               	goto	l323
 19419                           
 19420                           ; BSR set to: 1
 19421                           ;drv_mrf_miwi_89xa.c: 769: {
 19422                           ;drv_mrf_miwi_89xa.c: 770: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 19423  0135FC  0E00               	movlw	0
 19424  0135FE  0101               	movlb	1	; () banked
 19425  013600  6FC2               	movwf	MiMAC_SendPacket@i& (0+255),b
 19426  013602  D01A               	goto	l11619
 19427  013604                     l11613:
 19428                           
 19429                           ; BSR set to: 1
 19430                           ;drv_mrf_miwi_89xa.c: 771: {
 19431                           ;drv_mrf_miwi_89xa.c: 772: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 19432  013604  0101               	movlb	1	; () banked
 19433  013606  51C2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19434  013608  0D01               	mullw	1
 19435  01360A  50F3               	movf	prodl,w,c
 19436  01360C  0101               	movlb	1	; () banked
 19437  01360E  25BA               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 19438  013610  6ED9               	movwf	fsr2l,c
 19439  013612  50F4               	movf	prodh,w,c
 19440  013614  0101               	movlb	1	; () banked
 19441  013616  21BB               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 19442  013618  6EDA               	movwf	fsr2h,c
 19443  01361A  0101               	movlb	1	; () banked
 19444  01361C  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19445  01361E  0D01               	mullw	1
 19446  013620  0EA0               	movlw	low _MACTxBuffer
 19447  013622  24F3               	addwf	prodl,w,c
 19448  013624  6EE1               	movwf	fsr1l,c
 19449  013626  0E02               	movlw	high _MACTxBuffer
 19450  013628  20F4               	addwfc	prodh,w,c
 19451  01362A  6EE2               	movwf	fsr1h,c
 19452  01362C  CFDF FFE7          	movff	indf2,indf1
 19453                           
 19454                           ; BSR set to: 1
 19455  013630  0101               	movlb	1	; () banked
 19456  013632  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19457                           
 19458                           ; BSR set to: 1
 19459  013634  0101               	movlb	1	; () banked
 19460  013636  2BC2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19461  013638                     l11619:
 19462                           
 19463                           ; BSR set to: 1
 19464  013638  0100               	movlb	0	; () banked
 19465  01363A  31AF               	rrcf	_MACInitParams& (0+255),w,b
 19466  01363C  32E8               	rrcf	wreg,f,c
 19467  01363E  32E8               	rrcf	wreg,f,c
 19468  013640  0B0F               	andlw	15
 19469  013642  0101               	movlb	1	; () banked
 19470  013644  6FBF               	movwf	??_MiMAC_SendPacket& (0+255),b
 19471  013646  0101               	movlb	1	; () banked
 19472  013648  51BF               	movf	??_MiMAC_SendPacket& (0+255),w,b
 19473  01364A  0101               	movlb	1	; () banked
 19474  01364C  5DC2               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19475  01364E  A0D8               	btfss	status,0,c
 19476  013650  D7D9               	goto	l11613
 19477  013652                     l323:
 19478                           
 19479                           ; BSR set to: 1
 19480                           ;drv_mrf_miwi_89xa.c: 778: }
 19481                           ;drv_mrf_miwi_89xa.c: 780: if( transParam.flags.bits.sourcePrsnt )
 19482  013652  0101               	movlb	1	; () banked
 19483  013654  AFB9               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 19484  013656  D02B               	goto	l324
 19485                           
 19486                           ; BSR set to: 1
 19487                           ;drv_mrf_miwi_89xa.c: 781: {
 19488                           ;drv_mrf_miwi_89xa.c: 782: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 19489  013658  0E00               	movlw	0
 19490  01365A  0101               	movlb	1	; () banked
 19491  01365C  6FC2               	movwf	MiMAC_SendPacket@i& (0+255),b
 19492  01365E  D01A               	goto	l11629
 19493  013660                     l11623:
 19494                           
 19495                           ; BSR set to: 1
 19496                           ;drv_mrf_miwi_89xa.c: 783: {
 19497                           ;drv_mrf_miwi_89xa.c: 784: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 19498  013660  0101               	movlb	1	; () banked
 19499  013662  51C2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19500  013664  0D01               	mullw	1
 19501  013666  50F3               	movf	prodl,w,c
 19502  013668  0100               	movlb	0	; () banked
 19503  01366A  25B0               	addwf	(_MACInitParams+1)& (0+255),w,b
 19504  01366C  6ED9               	movwf	fsr2l,c
 19505  01366E  50F4               	movf	prodh,w,c
 19506  013670  0100               	movlb	0	; () banked
 19507  013672  21B1               	addwfc	(_MACInitParams+2)& (0+255),w,b
 19508  013674  6EDA               	movwf	fsr2h,c
 19509  013676  0101               	movlb	1	; () banked
 19510  013678  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19511  01367A  0D01               	mullw	1
 19512  01367C  0EA0               	movlw	low _MACTxBuffer
 19513  01367E  24F3               	addwf	prodl,w,c
 19514  013680  6EE1               	movwf	fsr1l,c
 19515  013682  0E02               	movlw	high _MACTxBuffer
 19516  013684  20F4               	addwfc	prodh,w,c
 19517  013686  6EE2               	movwf	fsr1h,c
 19518  013688  CFDF FFE7          	movff	indf2,indf1
 19519                           
 19520                           ; BSR set to: 1
 19521  01368C  0101               	movlb	1	; () banked
 19522  01368E  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19523                           
 19524                           ; BSR set to: 1
 19525  013690  0101               	movlb	1	; () banked
 19526  013692  2BC2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19527  013694                     l11629:
 19528                           
 19529                           ; BSR set to: 1
 19530  013694  0100               	movlb	0	; () banked
 19531  013696  31AF               	rrcf	_MACInitParams& (0+255),w,b
 19532  013698  32E8               	rrcf	wreg,f,c
 19533  01369A  32E8               	rrcf	wreg,f,c
 19534  01369C  0B0F               	andlw	15
 19535  01369E  0101               	movlb	1	; () banked
 19536  0136A0  6FBF               	movwf	??_MiMAC_SendPacket& (0+255),b
 19537  0136A2  0101               	movlb	1	; () banked
 19538  0136A4  51BF               	movf	??_MiMAC_SendPacket& (0+255),w,b
 19539  0136A6  0101               	movlb	1	; () banked
 19540  0136A8  5DC2               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19541  0136AA  A0D8               	btfss	status,0,c
 19542  0136AC  D7D9               	goto	l11623
 19543  0136AE                     l324:
 19544                           
 19545                           ; BSR set to: 1
 19546                           ;drv_mrf_miwi_89xa.c: 785: }
 19547                           ;drv_mrf_miwi_89xa.c: 787: }
 19548                           ;drv_mrf_miwi_89xa.c: 790: if( transParam.flags.bits.secEn )
 19549  0136AE  0101               	movlb	1	; () banked
 19550  0136B0  A7B9               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 19551  0136B2  D071               	goto	l11667
 19552                           
 19553                           ; BSR set to: 1
 19554                           ;drv_mrf_miwi_89xa.c: 791: {
 19555                           ;drv_mrf_miwi_89xa.c: 793: for(i = 0; i < 4; i++)
 19556  0136B4  0E00               	movlw	0
 19557  0136B6  0101               	movlb	1	; () banked
 19558  0136B8  6FC2               	movwf	MiMAC_SendPacket@i& (0+255),b
 19559  0136BA                     l11633:
 19560                           
 19561                           ; BSR set to: 1
 19562  0136BA  0E03               	movlw	3
 19563  0136BC  0101               	movlb	1	; () banked
 19564  0136BE  65C2               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 19565  0136C0  D001               	goto	l11637
 19566  0136C2  D019               	goto	l11645
 19567  0136C4                     l11637:
 19568                           
 19569                           ; BSR set to: 1
 19570                           ;drv_mrf_miwi_89xa.c: 794: {
 19571                           ;drv_mrf_miwi_89xa.c: 795: MACTxBuffer[TxIndex++] = OutgoingFrameCounter.v[i];
 19572  0136C4  0101               	movlb	1	; () banked
 19573  0136C6  51C2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19574  0136C8  0D01               	mullw	1
 19575  0136CA  0EAB               	movlw	low _OutgoingFrameCounter
 19576  0136CC  24F3               	addwf	prodl,w,c
 19577  0136CE  6ED9               	movwf	fsr2l,c
 19578  0136D0  0E00               	movlw	high _OutgoingFrameCounter
 19579  0136D2  20F4               	addwfc	prodh,w,c
 19580  0136D4  6EDA               	movwf	fsr2h,c
 19581  0136D6  0101               	movlb	1	; () banked
 19582  0136D8  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19583  0136DA  0D01               	mullw	1
 19584  0136DC  0EA0               	movlw	low _MACTxBuffer
 19585  0136DE  24F3               	addwf	prodl,w,c
 19586  0136E0  6EE1               	movwf	fsr1l,c
 19587  0136E2  0E02               	movlw	high _MACTxBuffer
 19588  0136E4  20F4               	addwfc	prodh,w,c
 19589  0136E6  6EE2               	movwf	fsr1h,c
 19590  0136E8  CFDF FFE7          	movff	indf2,indf1
 19591                           
 19592                           ; BSR set to: 1
 19593  0136EC  0101               	movlb	1	; () banked
 19594  0136EE  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19595                           
 19596                           ; BSR set to: 1
 19597  0136F0  0101               	movlb	1	; () banked
 19598  0136F2  2BC2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19599  0136F4  D7E2               	goto	l11633
 19600  0136F6                     l11645:
 19601                           
 19602                           ; BSR set to: 1
 19603                           ;drv_mrf_miwi_89xa.c: 796: }
 19604                           ;drv_mrf_miwi_89xa.c: 797: OutgoingFrameCounter.Val++;
 19605  0136F6  0E01               	movlw	1
 19606  0136F8  0100               	movlb	0	; () banked
 19607  0136FA  27AB               	addwf	_OutgoingFrameCounter& (0+255),f,b
 19608  0136FC  0E00               	movlw	0
 19609  0136FE  23AC               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 19610  013700  23AD               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 19611  013702  23AE               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 19612                           
 19613                           ; BSR set to: 0
 19614                           ;drv_mrf_miwi_89xa.c: 804: MACTxBuffer[TxIndex++] = 0x00;
 19615  013704  0101               	movlb	1	; () banked
 19616  013706  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19617  013708  0D01               	mullw	1
 19618  01370A  0EA0               	movlw	low _MACTxBuffer
 19619  01370C  24F3               	addwf	prodl,w,c
 19620  01370E  6ED9               	movwf	fsr2l,c
 19621  013710  0E02               	movlw	high _MACTxBuffer
 19622  013712  20F4               	addwfc	prodh,w,c
 19623  013714  6EDA               	movwf	fsr2h,c
 19624  013716  0E00               	movlw	0
 19625  013718  6EDF               	movwf	indf2,c
 19626                           
 19627                           ; BSR set to: 1
 19628  01371A  0101               	movlb	1	; () banked
 19629  01371C  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19630                           
 19631                           ; BSR set to: 1
 19632                           ;drv_mrf_miwi_89xa.c: 806: {
 19633                           ;drv_mrf_miwi_89xa.c: 807: uint8_t headerLen;
 19634                           ;drv_mrf_miwi_89xa.c: 809: headerLen = TxIndex;
 19635  01371E  C1C1  F1C0         	movff	MiMAC_SendPacket@TxIndex,MiMAC_SendPacket@headerLen
 19636                           
 19637                           ; BSR set to: 1
 19638                           ;drv_mrf_miwi_89xa.c: 811: for(i = 0; i < MACPayloadLen; i++)
 19639  013722  0E00               	movlw	0
 19640  013724  0101               	movlb	1	; () banked
 19641  013726  6FC2               	movwf	MiMAC_SendPacket@i& (0+255),b
 19642  013728  D01A               	goto	l11661
 19643  01372A                     l11655:
 19644                           
 19645                           ; BSR set to: 1
 19646                           ;drv_mrf_miwi_89xa.c: 812: {
 19647                           ;drv_mrf_miwi_89xa.c: 813: MACTxBuffer[TxIndex++] = MACPayload[i];
 19648  01372A  0101               	movlb	1	; () banked
 19649  01372C  51C2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19650  01372E  0D01               	mullw	1
 19651  013730  50F3               	movf	prodl,w,c
 19652  013732  0101               	movlb	1	; () banked
 19653  013734  25BC               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 19654  013736  6ED9               	movwf	fsr2l,c
 19655  013738  50F4               	movf	prodh,w,c
 19656  01373A  0101               	movlb	1	; () banked
 19657  01373C  21BD               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 19658  01373E  6EDA               	movwf	fsr2h,c
 19659  013740  0101               	movlb	1	; () banked
 19660  013742  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19661  013744  0D01               	mullw	1
 19662  013746  0EA0               	movlw	low _MACTxBuffer
 19663  013748  24F3               	addwf	prodl,w,c
 19664  01374A  6EE1               	movwf	fsr1l,c
 19665  01374C  0E02               	movlw	high _MACTxBuffer
 19666  01374E  20F4               	addwfc	prodh,w,c
 19667  013750  6EE2               	movwf	fsr1h,c
 19668  013752  CFDF FFE7          	movff	indf2,indf1
 19669                           
 19670                           ; BSR set to: 1
 19671  013756  0101               	movlb	1	; () banked
 19672  013758  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19673                           
 19674                           ; BSR set to: 1
 19675  01375A  0101               	movlb	1	; () banked
 19676  01375C  2BC2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19677  01375E                     l11661:
 19678                           
 19679                           ; BSR set to: 1
 19680  01375E  0101               	movlb	1	; () banked
 19681  013760  51BE               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 19682  013762  0101               	movlb	1	; () banked
 19683  013764  5DC2               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19684  013766  A0D8               	btfss	status,0,c
 19685  013768  D7E0               	goto	l11655
 19686                           
 19687                           ; BSR set to: 1
 19688                           ;drv_mrf_miwi_89xa.c: 814: }
 19689                           ;drv_mrf_miwi_89xa.c: 834: CCM_Enc((uint8_t *)MACTxBuffer, headerLen, MACPayloadLen, key
      +                          );
 19690                           
 19691                           ; BSR set to: 1
 19692  01376A  0EA0               	movlw	low _MACTxBuffer
 19693  01376C  0101               	movlb	1	; () banked
 19694  01376E  6FAE               	movwf	CCM_Enc@text& (0+255),b
 19695  013770  0E02               	movlw	high _MACTxBuffer
 19696  013772  0101               	movlb	1	; () banked
 19697  013774  6FAF               	movwf	(CCM_Enc@text+1)& (0+255),b
 19698  013776  C1C0  F1B0         	movff	MiMAC_SendPacket@headerLen,CCM_Enc@headerLen
 19699  01377A  C1BE  F1B1         	movff	MiMAC_SendPacket@MACPayloadLen,CCM_Enc@payloadLen
 19700  01377E  0EC0               	movlw	low _key
 19701  013780  0101               	movlb	1	; () banked
 19702  013782  6FB2               	movwf	CCM_Enc@key& (0+255),b
 19703  013784  0E00               	movlw	high _key
 19704  013786  0101               	movlb	1	; () banked
 19705  013788  6FB3               	movwf	(CCM_Enc@key+1)& (0+255),b
 19706  01378A  EC8C  F0A7         	call	_CCM_Enc	;wreg free
 19707                           
 19708                           ;drv_mrf_miwi_89xa.c: 835: TxIndex += 2;
 19709  01378E  0E02               	movlw	2
 19710  013790  0101               	movlb	1	; () banked
 19711  013792  27C1               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19712                           
 19713                           ;drv_mrf_miwi_89xa.c: 842: }
 19714                           ;drv_mrf_miwi_89xa.c: 843: }
 19715  013794  D024               	goto	l11677
 19716  013796                     l11667:
 19717                           
 19718                           ; BSR set to: 1
 19719                           ;drv_mrf_miwi_89xa.c: 844: else
 19720                           ;drv_mrf_miwi_89xa.c: 848: for(i = 0; i < MACPayloadLen; i++)
 19721  013796  0E00               	movlw	0
 19722  013798  0101               	movlb	1	; () banked
 19723  01379A  6FC2               	movwf	MiMAC_SendPacket@i& (0+255),b
 19724  01379C  D01A               	goto	l11675
 19725  01379E                     l11669:
 19726                           
 19727                           ; BSR set to: 1
 19728                           ;drv_mrf_miwi_89xa.c: 849: {
 19729                           ;drv_mrf_miwi_89xa.c: 850: MACTxBuffer[TxIndex++] = MACPayload[i];
 19730  01379E  0101               	movlb	1	; () banked
 19731  0137A0  51C2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19732  0137A2  0D01               	mullw	1
 19733  0137A4  50F3               	movf	prodl,w,c
 19734  0137A6  0101               	movlb	1	; () banked
 19735  0137A8  25BC               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 19736  0137AA  6ED9               	movwf	fsr2l,c
 19737  0137AC  50F4               	movf	prodh,w,c
 19738  0137AE  0101               	movlb	1	; () banked
 19739  0137B0  21BD               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 19740  0137B2  6EDA               	movwf	fsr2h,c
 19741  0137B4  0101               	movlb	1	; () banked
 19742  0137B6  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19743  0137B8  0D01               	mullw	1
 19744  0137BA  0EA0               	movlw	low _MACTxBuffer
 19745  0137BC  24F3               	addwf	prodl,w,c
 19746  0137BE  6EE1               	movwf	fsr1l,c
 19747  0137C0  0E02               	movlw	high _MACTxBuffer
 19748  0137C2  20F4               	addwfc	prodh,w,c
 19749  0137C4  6EE2               	movwf	fsr1h,c
 19750  0137C6  CFDF FFE7          	movff	indf2,indf1
 19751                           
 19752                           ; BSR set to: 1
 19753  0137CA  0101               	movlb	1	; () banked
 19754  0137CC  2BC1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19755                           
 19756                           ; BSR set to: 1
 19757  0137CE  0101               	movlb	1	; () banked
 19758  0137D0  2BC2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19759  0137D2                     l11675:
 19760                           
 19761                           ; BSR set to: 1
 19762  0137D2  0101               	movlb	1	; () banked
 19763  0137D4  51BE               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 19764  0137D6  0101               	movlb	1	; () banked
 19765  0137D8  5DC2               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19766  0137DA  A0D8               	btfss	status,0,c
 19767  0137DC  D7E0               	goto	l11669
 19768  0137DE                     l11677:
 19769                           
 19770                           ; BSR set to: 1
 19771                           ;drv_mrf_miwi_89xa.c: 851: }
 19772                           ;drv_mrf_miwi_89xa.c: 853: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 19773  0137DE  0E00               	movlw	0
 19774  0137E0  B3AF               	btfsc	_MACInitParams& (0+255),1,b
 19775  0137E2  0E01               	movlw	1
 19776  0137E4  0101               	movlb	1	; () banked
 19777  0137E6  6F94               	movwf	TxPacket@CCA& (0+255),b
 19778  0137E8  0101               	movlb	1	; () banked
 19779  0137EA  51C1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19780  0137EC  EC9A  F0A0         	call	_TxPacket
 19781  0137F0  0012               	return	
 19782  0137F2                     __end_of_MiMAC_SendPacket:
 19783                           	opt stack 0
 19784                           tblptru	equ	0xFF8
 19785                           tblptrh	equ	0xFF7
 19786                           tblptrl	equ	0xFF6
 19787                           tablat	equ	0xFF5
 19788                           prodh	equ	0xFF4
 19789                           prodl	equ	0xFF3
 19790                           intcon	equ	0xFF2
 19791                           intcon2	equ	0xFF1
 19792                           intcon3	equ	0xFF0
 19793                           indf0	equ	0xFEF
 19794                           postinc0	equ	0xFEE
 19795                           plusw0	equ	0xFEB
 19796                           fsr0h	equ	0xFEA
 19797                           fsr0l	equ	0xFE9
 19798                           wreg	equ	0xFE8
 19799                           indf1	equ	0xFE7
 19800                           postinc1	equ	0xFE6
 19801                           postdec1	equ	0xFE5
 19802                           fsr1h	equ	0xFE2
 19803                           fsr1l	equ	0xFE1
 19804                           indf2	equ	0xFDF
 19805                           postinc2	equ	0xFDE
 19806                           postdec2	equ	0xFDD
 19807                           plusw2	equ	0xFDB
 19808                           fsr2h	equ	0xFDA
 19809                           fsr2l	equ	0xFD9
 19810                           status	equ	0xFD8
 19811                           
 19812 ;; *************** function _TxPacket *****************
 19813 ;; Defined at:
 19814 ;;		line 295 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19815 ;; Parameters:    Size  Location     Type
 19816 ;;  TxPacketLen     1    wreg     unsigned char 
 19817 ;;  CCA             1   10[BANK1 ] unsigned char 
 19818 ;; Auto vars:     Size  Location     Type
 19819 ;;  TxPacketLen     1   31[BANK1 ] unsigned char 
 19820 ;;  allowedTxFai    1   29[BANK1 ] unsigned char 
 19821 ;;  t2              4   23[BANK1 ] struct _MIWI_TICK
 19822 ;;  t1              4   19[BANK1 ] struct _MIWI_TICK
 19823 ;;  rssival         1   33[BANK1 ] unsigned char 
 19824 ;;  i               1   32[BANK1 ] unsigned char 
 19825 ;;  status          1   30[BANK1 ] unsigned char 
 19826 ;;  reTry           1   28[BANK1 ] unsigned char 
 19827 ;;  CCARetries      1   27[BANK1 ] unsigned char 
 19828 ;; Return value:  Size  Location     Type
 19829 ;;                  1    wreg      unsigned char 
 19830 ;; Registers used:
 19831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19832 ;; Tracked objects:
 19833 ;;		On entry : 0/0
 19834 ;;		On exit  : 0/0
 19835 ;;		Unchanged: 0/0
 19836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19837 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19838 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19839 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19840 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19841 ;;Total ram usage:       24 bytes
 19842 ;; Hardware stack levels used:    1
 19843 ;; Hardware stack levels required when called:   12
 19844 ;; This function calls:
 19845 ;;		_MiWi_TickGet
 19846 ;;		_RegisterRead
 19847 ;;		_RegisterSet
 19848 ;;		_SetRFMode
 19849 ;;		_WriteFIFO
 19850 ;; This function is called by:
 19851 ;;		_MiMAC_SendPacket
 19852 ;; This function uses a non-reentrant model
 19853 ;;
 19854                           
 19855                           	psect	text59
 19856  014134                     __ptext59:
 19857                           	opt stack 0
 19858  014134                     _TxPacket:
 19859                           	opt stack 14
 19860                           
 19861                           ;incstack = 0
 19862                           ;TxPacket@TxPacketLen stored from wreg
 19863  014134  0101               	movlb	1	; () banked
 19864  014136  6FA9               	movwf	TxPacket@TxPacketLen& (0+255),b
 19865                           
 19866                           ;drv_mrf_miwi_89xa.c: 297: bool status;
 19867                           ;drv_mrf_miwi_89xa.c: 298: uint8_t i;
 19868                           ;drv_mrf_miwi_89xa.c: 299: MIWI_TICK t1, t2;
 19869                           ;drv_mrf_miwi_89xa.c: 301: uint8_t CCARetries;
 19870                           ;drv_mrf_miwi_89xa.c: 302: uint8_t rssival;
 19871                           ;drv_mrf_miwi_89xa.c: 306: uint8_t reTry = 3;
 19872  014138  0E03               	movlw	3
 19873  01413A  0101               	movlb	1	; () banked
 19874  01413C  6FA6               	movwf	TxPacket@reTry& (0+255),b
 19875                           
 19876                           ;drv_mrf_miwi_89xa.c: 310: while( reTry-- )
 19877  01413E  D0C3               	goto	l11415
 19878  014140                     l11347:
 19879                           
 19880                           ; BSR set to: 1
 19881                           ;drv_mrf_miwi_89xa.c: 312: {
 19882                           ;drv_mrf_miwi_89xa.c: 313: uint8_t allowedTxFailure;
 19883                           ;drv_mrf_miwi_89xa.c: 314: allowedTxFailure = 0;
 19884  014140  0E00               	movlw	0
 19885  014142  0101               	movlb	1	; () banked
 19886  014144  6FA7               	movwf	TxPacket@allowedTxFailure& (0+255),b
 19887  014146                     l258:
 19888                           
 19889                           ; BSR set to: 1
 19890                           ;drv_mrf_miwi_89xa.c: 319: hasAck = 0;
 19891  014146  0E00               	movlw	0
 19892  014148  0100               	movlb	0	; () banked
 19893  01414A  6FBC               	movwf	_hasAck& (0+255),b	;volatile
 19894                           
 19895                           ;drv_mrf_miwi_89xa.c: 323: CCARetries = 0;
 19896  01414C  0E00               	movlw	0
 19897  01414E  0101               	movlb	1	; () banked
 19898  014150  6FA5               	movwf	TxPacket@CCARetries& (0+255),b
 19899                           
 19900                           ; BSR set to: 1
 19901                           ;drv_mrf_miwi_89xa.c: 325: if( CCA )
 19902  014152  0101               	movlb	1	; () banked
 19903  014154  5194               	movf	TxPacket@CCA& (0+255),w,b
 19904  014156  0101               	movlb	1	; () banked
 19905  014158  B4D8               	btfsc	status,2,c
 19906  01415A  D019               	goto	l259
 19907  01415C                     l11351:
 19908                           
 19909                           ; BSR set to: 1
 19910                           ;drv_mrf_miwi_89xa.c: 329: rssival = RegisterRead(0x2800>>8);
 19911  01415C  0E28               	movlw	40
 19912  01415E  EC61  F0B5         	call	_RegisterRead
 19913  014162  0101               	movlb	1	; () banked
 19914  014164  6FAB               	movwf	TxPacket@rssival& (0+255),b
 19915                           
 19916                           ; BSR set to: 1
 19917                           ;drv_mrf_miwi_89xa.c: 330: rssival = (rssival>>1);
 19918  014166  0101               	movlb	1	; () banked
 19919  014168  90D8               	bcf	status,0,c
 19920  01416A  31AB               	rrcf	TxPacket@rssival& (0+255),w,b
 19921  01416C  0101               	movlb	1	; () banked
 19922  01416E  6FAB               	movwf	TxPacket@rssival& (0+255),b
 19923                           
 19924                           ; BSR set to: 1
 19925                           ;drv_mrf_miwi_89xa.c: 332: if( rssival > 65 )
 19926  014170  0E41               	movlw	65
 19927  014172  0101               	movlb	1	; () banked
 19928  014174  65AB               	cpfsgt	TxPacket@rssival& (0+255),b
 19929  014176  D00B               	goto	l259
 19930                           
 19931                           ; BSR set to: 1
 19932                           ;drv_mrf_miwi_89xa.c: 333: {
 19933                           ;drv_mrf_miwi_89xa.c: 334: if(CCARetries++ > 4 )
 19934  014178  0101               	movlb	1	; () banked
 19935  01417A  2BA5               	incf	TxPacket@CCARetries& (0+255),f,b
 19936  01417C  05A5               	decf	TxPacket@CCARetries& (0+255),w,b
 19937  01417E  0101               	movlb	1	; () banked
 19938  014180  6F95               	movwf	??_TxPacket& (0+255),b
 19939  014182  0E04               	movlw	4
 19940  014184  0101               	movlb	1	; () banked
 19941  014186  6595               	cpfsgt	??_TxPacket& (0+255),b
 19942  014188  D7E9               	goto	l11351
 19943                           
 19944                           ; BSR set to: 1
 19945                           ;drv_mrf_miwi_89xa.c: 335: {
 19946                           ;drv_mrf_miwi_89xa.c: 336: return 0;
 19947  01418A  0E00               	movlw	0
 19948                           
 19949                           ; BSR set to: 1
 19950  01418C  0012               	return	
 19951  01418E                     l259:
 19952                           
 19953                           ; BSR set to: 1
 19954                           ;drv_mrf_miwi_89xa.c: 340: }
 19955                           ;drv_mrf_miwi_89xa.c: 341: }
 19956                           ;drv_mrf_miwi_89xa.c: 346: INTCONbits.INT0IE = 0;
 19957  01418E  98F2               	bcf	intcon,4,c	;volatile
 19958                           
 19959                           ;drv_mrf_miwi_89xa.c: 348: INTCON3bits.INT1IE = 0;
 19960  014190  96F0               	bcf	intcon3,3,c	;volatile
 19961                           
 19962                           ; BSR set to: 1
 19963                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x20);
 19964  014192  0E20               	movlw	32
 19965  014194  ECC7  F0B1         	call	_SetRFMode
 19966                           
 19967                           ;drv_mrf_miwi_89xa.c: 350: RegisterSet(0x1A00 | (0xC8) | 0x01);
 19968  014198  0E1A               	movlw	26
 19969  01419A  0101               	movlb	1	; () banked
 19970  01419C  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 19971  01419E  0EC9               	movlw	201
 19972  0141A0  6F8C               	movwf	RegisterSet@setting& (0+255),b
 19973  0141A2  EC09  F0B6         	call	_RegisterSet	;wreg free
 19974                           
 19975                           ;drv_mrf_miwi_89xa.c: 351: WriteFIFO(TxPacketLen);
 19976  0141A6  0101               	movlb	1	; () banked
 19977  0141A8  51A9               	movf	TxPacket@TxPacketLen& (0+255),w,b
 19978  0141AA  EC4F  F0B6         	call	_WriteFIFO
 19979                           
 19980                           ;drv_mrf_miwi_89xa.c: 352: for(i=0; i< TxPacketLen; i++)
 19981  0141AE  0E00               	movlw	0
 19982  0141B0  0101               	movlb	1	; () banked
 19983  0141B2  6FAA               	movwf	TxPacket@i& (0+255),b
 19984  0141B4  D00E               	goto	l11375
 19985  0141B6                     l11371:
 19986                           
 19987                           ; BSR set to: 1
 19988                           ;drv_mrf_miwi_89xa.c: 353: {
 19989                           ;drv_mrf_miwi_89xa.c: 354: WriteFIFO(MACTxBuffer[i]);
 19990  0141B6  0101               	movlb	1	; () banked
 19991  0141B8  51AA               	movf	TxPacket@i& (0+255),w,b
 19992  0141BA  0D01               	mullw	1
 19993  0141BC  0EA0               	movlw	low _MACTxBuffer
 19994  0141BE  24F3               	addwf	prodl,w,c
 19995  0141C0  6ED9               	movwf	fsr2l,c
 19996  0141C2  0E02               	movlw	high _MACTxBuffer
 19997  0141C4  20F4               	addwfc	prodh,w,c
 19998  0141C6  6EDA               	movwf	fsr2h,c
 19999  0141C8  50DF               	movf	indf2,w,c
 20000  0141CA  EC4F  F0B6         	call	_WriteFIFO
 20001  0141CE  0101               	movlb	1	; () banked
 20002  0141D0  2BAA               	incf	TxPacket@i& (0+255),f,b
 20003  0141D2                     l11375:
 20004                           
 20005                           ; BSR set to: 1
 20006  0141D2  0101               	movlb	1	; () banked
 20007  0141D4  51A9               	movf	TxPacket@TxPacketLen& (0+255),w,b
 20008  0141D6  0101               	movlb	1	; () banked
 20009  0141D8  5DAA               	subwf	TxPacket@i& (0+255),w,b
 20010  0141DA  A0D8               	btfss	status,0,c
 20011  0141DC  D7EC               	goto	l11371
 20012                           
 20013                           ; BSR set to: 1
 20014                           ;drv_mrf_miwi_89xa.c: 355: }
 20015                           ;drv_mrf_miwi_89xa.c: 356: SetRFMode(0x80);
 20016                           
 20017                           ; BSR set to: 1
 20018  0141DE  0E80               	movlw	128
 20019  0141E0  ECC7  F0B1         	call	_SetRFMode
 20020                           
 20021                           ;drv_mrf_miwi_89xa.c: 358: INTCONbits.INT0IE = 1;
 20022  0141E4  88F2               	bsf	intcon,4,c	;volatile
 20023                           
 20024                           ;drv_mrf_miwi_89xa.c: 360: INTCON3bits.INT1IE = 1;
 20025  0141E6  86F0               	bsf	intcon3,3,c	;volatile
 20026  0141E8                     l11383:
 20027  0141E8  0100               	movlb	0	; () banked
 20028  0141EA  51B3               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 20029  0141EC  B4D8               	btfsc	status,2,c
 20030                           
 20031                           ; BSR set to: 0
 20032  0141EE  B0F0               	btfsc	intcon3,0,c	;volatile
 20033  0141F0  D001               	goto	l11387
 20034  0141F2  D7FA               	goto	l11383
 20035  0141F4                     l11387:
 20036                           
 20037                           ; BSR set to: 0
 20038                           ;drv_mrf_miwi_89xa.c: 364: };
 20039                           ;drv_mrf_miwi_89xa.c: 368: IRQ1_Received = 0;
 20040  0141F4  0E00               	movlw	0
 20041  0141F6  0100               	movlb	0	; () banked
 20042  0141F8  6FB3               	movwf	_IRQ1_Received& (0+255),b	;volatile
 20043                           
 20044                           ; BSR set to: 0
 20045                           ;drv_mrf_miwi_89xa.c: 369: SetRFMode(0x20);
 20046  0141FA  0E20               	movlw	32
 20047  0141FC  ECC7  F0B1         	call	_SetRFMode
 20048                           
 20049                           ;drv_mrf_miwi_89xa.c: 370: SetRFMode(0x60);
 20050  014200  0E60               	movlw	96
 20051  014202  ECC7  F0B1         	call	_SetRFMode
 20052                           
 20053                           ;drv_mrf_miwi_89xa.c: 373: if( (MACTxBuffer[0] & 0x20) > 0 )
 20054  014206  0102               	movlb	2	; () banked
 20055  014208  ABA0               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 20056  01420A  D05B               	goto	l11413
 20057                           
 20058                           ; BSR set to: 2
 20059                           ;drv_mrf_miwi_89xa.c: 374: {
 20060                           ;drv_mrf_miwi_89xa.c: 375: TxMACSeq = MACTxBuffer[1];
 20061  01420C  C2A1  F0BA         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 20062                           
 20063                           ; BSR set to: 2
 20064                           ;drv_mrf_miwi_89xa.c: 376: t1 = MiWi_TickGet();
 20065  014210  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 20066  014214  C18A  F19D         	movff	?_MiWi_TickGet,TxPacket@t1
 20067  014218  C18B  F19E         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 20068  01421C  C18C  F19F         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 20069  014220  C18D  F1A0         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 20070  014224                     l11399:
 20071                           
 20072                           ;drv_mrf_miwi_89xa.c: 378: {
 20073                           ;drv_mrf_miwi_89xa.c: 379: if( hasAck )
 20074  014224  0100               	movlb	0	; () banked
 20075  014226  51BC               	movf	_hasAck& (0+255),w,b	;volatile
 20076  014228  A4D8               	btfss	status,2,c
 20077  01422A  D04B               	goto	l11413
 20078                           
 20079                           ;drv_mrf_miwi_89xa.c: 383: }
 20080                           ;drv_mrf_miwi_89xa.c: 384: t2 = MiWi_TickGet();
 20081                           
 20082                           ; BSR set to: 1
 20083                           
 20084                           ;drv_mrf_miwi_89xa.c: 382: goto TX_END_HERE;
 20085                           
 20086                           ; BSR set to: 0
 20087                           ;drv_mrf_miwi_89xa.c: 380: {
 20088                           ;drv_mrf_miwi_89xa.c: 381: status = 1;
 20089  01422C  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 20090  014230  C18A  F1A1         	movff	?_MiWi_TickGet,TxPacket@t2
 20091  014234  C18B  F1A2         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 20092  014238  C18C  F1A3         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 20093  01423C  C18D  F1A4         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 20094                           
 20095                           ;drv_mrf_miwi_89xa.c: 385: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 20096  014240  C19D  F195         	movff	TxPacket@t1,??_TxPacket
 20097  014244  C19E  F196         	movff	TxPacket@t1+1,??_TxPacket+1
 20098  014248  C19F  F197         	movff	TxPacket@t1+2,??_TxPacket+2
 20099  01424C  C1A0  F198         	movff	TxPacket@t1+3,??_TxPacket+3
 20100  014250  0101               	movlb	1	; () banked
 20101  014252  1F95               	comf	??_TxPacket& (0+255),f,b
 20102  014254  1F96               	comf	(??_TxPacket+1)& (0+255),f,b
 20103  014256  1F97               	comf	(??_TxPacket+2)& (0+255),f,b
 20104  014258  1F98               	comf	(??_TxPacket+3)& (0+255),f,b
 20105  01425A  2B95               	incf	??_TxPacket& (0+255),f,b
 20106  01425C  0E00               	movlw	0
 20107  01425E  2396               	addwfc	(??_TxPacket+1)& (0+255),f,b
 20108  014260  2397               	addwfc	(??_TxPacket+2)& (0+255),f,b
 20109  014262  2398               	addwfc	(??_TxPacket+3)& (0+255),f,b
 20110  014264  0101               	movlb	1	; () banked
 20111  014266  51A1               	movf	TxPacket@t2& (0+255),w,b
 20112  014268  0101               	movlb	1	; () banked
 20113  01426A  2595               	addwf	??_TxPacket& (0+255),w,b
 20114  01426C  0101               	movlb	1	; () banked
 20115  01426E  6F99               	movwf	(??_TxPacket+4)& (0+255),b
 20116  014270  0101               	movlb	1	; () banked
 20117  014272  51A2               	movf	(TxPacket@t2+1)& (0+255),w,b
 20118  014274  0101               	movlb	1	; () banked
 20119  014276  2196               	addwfc	(??_TxPacket+1)& (0+255),w,b
 20120  014278  0101               	movlb	1	; () banked
 20121  01427A  6F9A               	movwf	(??_TxPacket+5)& (0+255),b
 20122  01427C  0101               	movlb	1	; () banked
 20123  01427E  51A3               	movf	(TxPacket@t2+2)& (0+255),w,b
 20124  014280  0101               	movlb	1	; () banked
 20125  014282  2197               	addwfc	(??_TxPacket+2)& (0+255),w,b
 20126  014284  0101               	movlb	1	; () banked
 20127  014286  6F9B               	movwf	(??_TxPacket+6)& (0+255),b
 20128  014288  0101               	movlb	1	; () banked
 20129  01428A  51A4               	movf	(TxPacket@t2+3)& (0+255),w,b
 20130  01428C  0101               	movlb	1	; () banked
 20131  01428E  2198               	addwfc	(??_TxPacket+3)& (0+255),w,b
 20132  014290  0101               	movlb	1	; () banked
 20133  014292  6F9C               	movwf	(??_TxPacket+7)& (0+255),b
 20134  014294  0101               	movlb	1	; () banked
 20135  014296  519C               	movf	(??_TxPacket+7)& (0+255),w,b
 20136  014298  0101               	movlb	1	; () banked
 20137  01429A  119B               	iorwf	(??_TxPacket+6)& (0+255),w,b
 20138  01429C  E108               	bnz	l11409
 20139  01429E  0EA9               	movlw	169
 20140  0142A0  0101               	movlb	1	; () banked
 20141  0142A2  5D99               	subwf	(??_TxPacket+4)& (0+255),w,b
 20142  0142A4  0E61               	movlw	97
 20143  0142A6  0101               	movlb	1	; () banked
 20144  0142A8  599A               	subwfb	(??_TxPacket+5)& (0+255),w,b
 20145  0142AA  A0D8               	btfss	status,0,c
 20146  0142AC  D7BB               	goto	l11399
 20147  0142AE                     l11409:
 20148                           
 20149                           ; BSR set to: 1
 20150                           ;drv_mrf_miwi_89xa.c: 388: }
 20151                           ;drv_mrf_miwi_89xa.c: 389: }
 20152                           ;drv_mrf_miwi_89xa.c: 391: if(allowedTxFailure++ <= 3)
 20153  0142AE  0101               	movlb	1	; () banked
 20154  0142B0  2BA7               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 20155  0142B2  05A7               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 20156  0142B4  0101               	movlb	1	; () banked
 20157  0142B6  6F95               	movwf	??_TxPacket& (0+255),b
 20158  0142B8  0E04               	movlw	4
 20159  0142BA  0101               	movlb	1	; () banked
 20160  0142BC  6195               	cpfslt	??_TxPacket& (0+255),b
 20161  0142BE  D003               	goto	l11415
 20162  0142C0  D742               	goto	l258
 20163  0142C2                     l11413:
 20164                           
 20165                           ;drv_mrf_miwi_89xa.c: 395: else
 20166                           ;drv_mrf_miwi_89xa.c: 397: {
 20167                           ;drv_mrf_miwi_89xa.c: 398: status = 1;
 20168  0142C2  0E01               	movlw	1
 20169  0142C4  D007               	goto	L6
 20170  0142C6                     l11415:
 20171                           
 20172                           ; BSR set to: 1
 20173  0142C6  0101               	movlb	1	; () banked
 20174  0142C8  07A6               	decf	TxPacket@reTry& (0+255),f,b
 20175  0142CA  0101               	movlb	1	; () banked
 20176  0142CC  29A6               	incf	TxPacket@reTry& (0+255),w,b
 20177  0142CE  A4D8               	btfss	status,2,c
 20178  0142D0  D737               	goto	l11347
 20179                           
 20180                           ; BSR set to: 1
 20181                           ;drv_mrf_miwi_89xa.c: 400: }
 20182                           ;drv_mrf_miwi_89xa.c: 401: }
 20183                           ;drv_mrf_miwi_89xa.c: 403: status = 0;
 20184                           
 20185                           ; BSR set to: 1
 20186  0142D2  0E00               	movlw	0
 20187  0142D4                     L6:
 20188  0142D4  0101               	movlb	1	; () banked
 20189  0142D6  6FA8               	movwf	TxPacket@status& (0+255),b
 20190                           
 20191                           ; BSR set to: 1
 20192                           ;drv_mrf_miwi_89xa.c: 405: return status;
 20193                           
 20194                           ;drv_mrf_miwi_89xa.c: 404: TX_END_HERE:
 20195  0142D8  0101               	movlb	1	; () banked
 20196  0142DA  51A8               	movf	TxPacket@status& (0+255),w,b
 20197  0142DC  0012               	return	
 20198  0142DE                     __end_of_TxPacket:
 20199                           	opt stack 0
 20200                           tblptru	equ	0xFF8
 20201                           tblptrh	equ	0xFF7
 20202                           tblptrl	equ	0xFF6
 20203                           tablat	equ	0xFF5
 20204                           prodh	equ	0xFF4
 20205                           prodl	equ	0xFF3
 20206                           intcon	equ	0xFF2
 20207                           intcon2	equ	0xFF1
 20208                           intcon3	equ	0xFF0
 20209                           indf0	equ	0xFEF
 20210                           postinc0	equ	0xFEE
 20211                           plusw0	equ	0xFEB
 20212                           fsr0h	equ	0xFEA
 20213                           fsr0l	equ	0xFE9
 20214                           wreg	equ	0xFE8
 20215                           indf1	equ	0xFE7
 20216                           postinc1	equ	0xFE6
 20217                           postdec1	equ	0xFE5
 20218                           fsr1h	equ	0xFE2
 20219                           fsr1l	equ	0xFE1
 20220                           indf2	equ	0xFDF
 20221                           postinc2	equ	0xFDE
 20222                           postdec2	equ	0xFDD
 20223                           plusw2	equ	0xFDB
 20224                           fsr2h	equ	0xFDA
 20225                           fsr2l	equ	0xFD9
 20226                           status	equ	0xFD8
 20227                           
 20228 ;; *************** function _WriteFIFO *****************
 20229 ;; Defined at:
 20230 ;;		line 251 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20231 ;; Parameters:    Size  Location     Type
 20232 ;;  Data            1    wreg     unsigned char 
 20233 ;; Auto vars:     Size  Location     Type
 20234 ;;  Data            1    2[BANK1 ] unsigned char 
 20235 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 20236 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 20237 ;; Return value:  Size  Location     Type
 20238 ;;		None               void
 20239 ;; Registers used:
 20240 ;;		wreg, status,2, cstack
 20241 ;; Tracked objects:
 20242 ;;		On entry : 0/0
 20243 ;;		On exit  : 0/0
 20244 ;;		Unchanged: 0/0
 20245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20247 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20249 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20250 ;;Total ram usage:        3 bytes
 20251 ;; Hardware stack levels used:    1
 20252 ;; Hardware stack levels required when called:   10
 20253 ;; This function calls:
 20254 ;;		_SPIPut
 20255 ;; This function is called by:
 20256 ;;		_TxPacket
 20257 ;; This function uses a non-reentrant model
 20258 ;;
 20259                           
 20260                           	psect	text60
 20261  016C9E                     __ptext60:
 20262                           	opt stack 0
 20263  016C9E                     _WriteFIFO:
 20264                           	opt stack 15
 20265                           
 20266                           ; BSR set to: 1
 20267                           ;incstack = 0
 20268                           ;WriteFIFO@Data stored from wreg
 20269  016C9E  0101               	movlb	1	; () banked
 20270  016CA0  6F8C               	movwf	WriteFIFO@Data& (0+255),b
 20271                           
 20272                           ;drv_mrf_miwi_89xa.c: 253: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20273  016CA2  0E00               	movlw	0
 20274  016CA4  B6F0               	btfsc	intcon3,3,c	;volatile
 20275  016CA6  0E01               	movlw	1
 20276  016CA8  0101               	movlb	1	; () banked
 20277  016CAA  6F8D               	movwf	WriteFIFO@IRQ1select& (0+255),b
 20278                           
 20279                           ;drv_mrf_miwi_89xa.c: 255: bool IRQ0select = INTCONbits.INT0IE;
 20280  016CAC  0E00               	movlw	0
 20281  016CAE  B8F2               	btfsc	intcon,4,c	;volatile
 20282  016CB0  0E01               	movlw	1
 20283  016CB2  0101               	movlb	1	; () banked
 20284  016CB4  6F8E               	movwf	WriteFIFO@IRQ0select& (0+255),b
 20285                           
 20286                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.INT0IE = 0;
 20287  016CB6  98F2               	bcf	intcon,4,c	;volatile
 20288                           
 20289                           ;drv_mrf_miwi_89xa.c: 260: INTCON3bits.INT1IE = 0;
 20290  016CB8  96F0               	bcf	intcon3,3,c	;volatile
 20291                           
 20292                           ;drv_mrf_miwi_89xa.c: 261: LATCbits.LATC6 = 0;
 20293  016CBA  9C8B               	bcf	3979,6,c	;volatile
 20294                           
 20295                           ; BSR set to: 1
 20296                           ;drv_mrf_miwi_89xa.c: 262: SPIPut(Data);
 20297  016CBC  0101               	movlb	1	; () banked
 20298  016CBE  518C               	movf	WriteFIFO@Data& (0+255),w,b
 20299  016CC0  ECAA  F0B7         	call	_SPIPut
 20300                           
 20301                           ;drv_mrf_miwi_89xa.c: 263: LATCbits.LATC6 = 1;
 20302  016CC4  8C8B               	bsf	3979,6,c	;volatile
 20303                           
 20304                           ;drv_mrf_miwi_89xa.c: 264: INTCON3bits.INT1IE = IRQ1select;
 20305  016CC6  0101               	movlb	1	; () banked
 20306  016CC8  B18D               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 20307  016CCA  D002               	bra	u12655
 20308  016CCC  96F0               	bcf	intcon3,3,c	;volatile
 20309  016CCE  D001               	bra	u12656
 20310  016CD0                     u12655:
 20311  016CD0  86F0               	bsf	intcon3,3,c	;volatile
 20312  016CD2                     u12656:
 20313                           
 20314                           ;drv_mrf_miwi_89xa.c: 267: INTCONbits.INT0IE = IRQ0select;
 20315  016CD2  0101               	movlb	1	; () banked
 20316  016CD4  B18E               	btfsc	WriteFIFO@IRQ0select& (0+255),0,b
 20317  016CD6  D002               	bra	u12665
 20318  016CD8  98F2               	bcf	intcon,4,c	;volatile
 20319  016CDA  D001               	bra	u12666
 20320  016CDC                     u12665:
 20321  016CDC  88F2               	bsf	intcon,4,c	;volatile
 20322  016CDE                     u12666:
 20323  016CDE  0012               	return		;funcret
 20324  016CE0                     __end_of_WriteFIFO:
 20325                           	opt stack 0
 20326                           tblptru	equ	0xFF8
 20327                           tblptrh	equ	0xFF7
 20328                           tblptrl	equ	0xFF6
 20329                           tablat	equ	0xFF5
 20330                           prodh	equ	0xFF4
 20331                           prodl	equ	0xFF3
 20332                           intcon	equ	0xFF2
 20333                           intcon2	equ	0xFF1
 20334                           intcon3	equ	0xFF0
 20335                           indf0	equ	0xFEF
 20336                           postinc0	equ	0xFEE
 20337                           plusw0	equ	0xFEB
 20338                           fsr0h	equ	0xFEA
 20339                           fsr0l	equ	0xFE9
 20340                           wreg	equ	0xFE8
 20341                           indf1	equ	0xFE7
 20342                           postinc1	equ	0xFE6
 20343                           postdec1	equ	0xFE5
 20344                           fsr1h	equ	0xFE2
 20345                           fsr1l	equ	0xFE1
 20346                           indf2	equ	0xFDF
 20347                           postinc2	equ	0xFDE
 20348                           postdec2	equ	0xFDD
 20349                           plusw2	equ	0xFDB
 20350                           fsr2h	equ	0xFDA
 20351                           fsr2l	equ	0xFD9
 20352                           status	equ	0xFD8
 20353                           
 20354 ;; *************** function _SetRFMode *****************
 20355 ;; Defined at:
 20356 ;;		line 674 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20357 ;; Parameters:    Size  Location     Type
 20358 ;;  mode            1    wreg     unsigned char 
 20359 ;; Auto vars:     Size  Location     Type
 20360 ;;  mode            1    6[BANK1 ] unsigned char 
 20361 ;; Return value:  Size  Location     Type
 20362 ;;		None               void
 20363 ;; Registers used:
 20364 ;;		wreg, status,2, status,0, cstack
 20365 ;; Tracked objects:
 20366 ;;		On entry : 0/0
 20367 ;;		On exit  : 0/0
 20368 ;;		Unchanged: 0/0
 20369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20371 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20373 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20374 ;;Total ram usage:        1 bytes
 20375 ;; Hardware stack levels used:    1
 20376 ;; Hardware stack levels required when called:   11
 20377 ;; This function calls:
 20378 ;;		_RegisterSet
 20379 ;; This function is called by:
 20380 ;;		_TxPacket
 20381 ;;		_MiMAC_SetChannel
 20382 ;;		_MiMAC_Init
 20383 ;;		_MiMAC_PowerState
 20384 ;; This function uses a non-reentrant model
 20385 ;;
 20386                           
 20387                           	psect	text61
 20388  01638E                     __ptext61:
 20389                           	opt stack 0
 20390  01638E                     _SetRFMode:
 20391                           	opt stack 16
 20392                           
 20393                           ;incstack = 0
 20394                           ;SetRFMode@mode stored from wreg
 20395  01638E  0101               	movlb	1	; () banked
 20396  016390  6F90               	movwf	SetRFMode@mode& (0+255),b
 20397                           
 20398                           ;drv_mrf_miwi_89xa.c: 676: switch (mode) {
 20399  016392  D037               	goto	l11267
 20400  016394                     l11245:
 20401                           
 20402                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 20403  016394  0E00               	movlw	0
 20404  016396  0101               	movlb	1	; () banked
 20405  016398  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 20406  01639A  0E96               	movlw	150
 20407  01639C  6F8C               	movwf	RegisterSet@setting& (0+255),b
 20408  01639E  EC09  F0B6         	call	_RegisterSet	;wreg free
 20409                           
 20410                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x80;
 20411  0163A2  0E80               	movlw	128
 20412  0163A4  0100               	movlb	0	; () banked
 20413  0163A6  6FB8               	movwf	_RF_Mode& (0+255),b
 20414                           
 20415                           ;drv_mrf_miwi_89xa.c: 680: break;
 20416  0163A8  0012               	return	
 20417  0163AA                     l11249:
 20418                           
 20419                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 20420  0163AA  0E00               	movlw	0
 20421  0163AC  0101               	movlb	1	; () banked
 20422  0163AE  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 20423  0163B0  0E76               	movlw	118
 20424  0163B2  6F8C               	movwf	RegisterSet@setting& (0+255),b
 20425  0163B4  EC09  F0B6         	call	_RegisterSet	;wreg free
 20426                           
 20427                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x60;
 20428  0163B8  0E60               	movlw	96
 20429  0163BA  0100               	movlb	0	; () banked
 20430  0163BC  6FB8               	movwf	_RF_Mode& (0+255),b
 20431                           
 20432                           ;drv_mrf_miwi_89xa.c: 684: break;
 20433  0163BE  0012               	return	
 20434  0163C0                     l11253:
 20435                           
 20436                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 20437  0163C0  0E00               	movlw	0
 20438  0163C2  0101               	movlb	1	; () banked
 20439  0163C4  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 20440  0163C6  0E56               	movlw	86
 20441  0163C8  6F8C               	movwf	RegisterSet@setting& (0+255),b
 20442  0163CA  EC09  F0B6         	call	_RegisterSet	;wreg free
 20443                           
 20444                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x40;
 20445  0163CE  0E40               	movlw	64
 20446  0163D0  0100               	movlb	0	; () banked
 20447  0163D2  6FB8               	movwf	_RF_Mode& (0+255),b
 20448                           
 20449                           ;drv_mrf_miwi_89xa.c: 688: break;
 20450  0163D4  0012               	return	
 20451  0163D6                     l11257:
 20452                           
 20453                           ;drv_mrf_miwi_89xa.c: 690: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 20454  0163D6  0E00               	movlw	0
 20455  0163D8  0101               	movlb	1	; () banked
 20456  0163DA  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 20457  0163DC  0E36               	movlw	54
 20458  0163DE  6F8C               	movwf	RegisterSet@setting& (0+255),b
 20459  0163E0  EC09  F0B6         	call	_RegisterSet	;wreg free
 20460                           
 20461                           ;drv_mrf_miwi_89xa.c: 691: RF_Mode = 0x20;
 20462  0163E4  0E20               	movlw	32
 20463  0163E6  0100               	movlb	0	; () banked
 20464  0163E8  6FB8               	movwf	_RF_Mode& (0+255),b
 20465                           
 20466                           ;drv_mrf_miwi_89xa.c: 692: break;
 20467  0163EA  0012               	return	
 20468  0163EC                     l11261:
 20469                           
 20470                           ;drv_mrf_miwi_89xa.c: 694: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 20471  0163EC  0E00               	movlw	0
 20472  0163EE  0101               	movlb	1	; () banked
 20473  0163F0  6F8D               	movwf	(RegisterSet@setting+1)& (0+255),b
 20474  0163F2  0E16               	movlw	22
 20475  0163F4  6F8C               	movwf	RegisterSet@setting& (0+255),b
 20476  0163F6  EC09  F0B6         	call	_RegisterSet	;wreg free
 20477                           
 20478                           ;drv_mrf_miwi_89xa.c: 695: RF_Mode = 0x00;
 20479  0163FA  0E00               	movlw	0
 20480  0163FC  0100               	movlb	0	; () banked
 20481  0163FE  6FB8               	movwf	_RF_Mode& (0+255),b
 20482                           
 20483                           ; BSR set to: 0
 20484                           ;drv_mrf_miwi_89xa.c: 697: }
 20485                           
 20486                           ;drv_mrf_miwi_89xa.c: 696: break;
 20487  016400  0012               	return	
 20488  016402                     l11267:
 20489  016402  0101               	movlb	1	; () banked
 20490  016404  5190               	movf	SetRFMode@mode& (0+255),w,b
 20491                           
 20492                           ; Switch size 1, requested type "space"
 20493                           ; Number of cases is 5, Range of values is 0 to 128
 20494                           ; switch strategies available:
 20495                           ; Name         Instructions Cycles
 20496                           ; simple_byte           16     9 (average)
 20497                           ;	Chosen strategy is simple_byte
 20498  016406  0A00               	xorlw	0	; case 0
 20499  016408  B4D8               	btfsc	status,2,c
 20500  01640A  D7F0               	goto	l11261
 20501  01640C  0A20               	xorlw	32	; case 32
 20502  01640E  B4D8               	btfsc	status,2,c
 20503  016410  D7E2               	goto	l11257
 20504  016412  0A60               	xorlw	96	; case 64
 20505  016414  B4D8               	btfsc	status,2,c
 20506  016416  D7D4               	goto	l11253
 20507  016418  0A20               	xorlw	32	; case 96
 20508  01641A  B4D8               	btfsc	status,2,c
 20509  01641C  D7C6               	goto	l11249
 20510  01641E  0AE0               	xorlw	224	; case 128
 20511  016420  A4D8               	btfss	status,2,c
 20512  016422  0012               	return	
 20513  016424  D7B7               	goto	l11245
 20514  016426                     __end_of_SetRFMode:
 20515                           	opt stack 0
 20516                           tblptru	equ	0xFF8
 20517                           tblptrh	equ	0xFF7
 20518                           tblptrl	equ	0xFF6
 20519                           tablat	equ	0xFF5
 20520                           prodh	equ	0xFF4
 20521                           prodl	equ	0xFF3
 20522                           intcon	equ	0xFF2
 20523                           intcon2	equ	0xFF1
 20524                           intcon3	equ	0xFF0
 20525                           indf0	equ	0xFEF
 20526                           postinc0	equ	0xFEE
 20527                           plusw0	equ	0xFEB
 20528                           fsr0h	equ	0xFEA
 20529                           fsr0l	equ	0xFE9
 20530                           wreg	equ	0xFE8
 20531                           indf1	equ	0xFE7
 20532                           postinc1	equ	0xFE6
 20533                           postdec1	equ	0xFE5
 20534                           fsr1h	equ	0xFE2
 20535                           fsr1l	equ	0xFE1
 20536                           indf2	equ	0xFDF
 20537                           postinc2	equ	0xFDE
 20538                           postdec2	equ	0xFDD
 20539                           plusw2	equ	0xFDB
 20540                           fsr2h	equ	0xFDA
 20541                           fsr2l	equ	0xFD9
 20542                           status	equ	0xFD8
 20543                           
 20544 ;; *************** function _RegisterSet *****************
 20545 ;; Defined at:
 20546 ;;		line 171 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20547 ;; Parameters:    Size  Location     Type
 20548 ;;  setting         2    2[BANK1 ] unsigned int 
 20549 ;; Auto vars:     Size  Location     Type
 20550 ;;  IRQ0select      1    5[BANK1 ] unsigned char 
 20551 ;;  IRQ1select      1    4[BANK1 ] unsigned char 
 20552 ;; Return value:  Size  Location     Type
 20553 ;;		None               void
 20554 ;; Registers used:
 20555 ;;		wreg, status,2, cstack
 20556 ;; Tracked objects:
 20557 ;;		On entry : 0/0
 20558 ;;		On exit  : 0/0
 20559 ;;		Unchanged: 0/0
 20560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20561 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20562 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20564 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20565 ;;Total ram usage:        4 bytes
 20566 ;; Hardware stack levels used:    1
 20567 ;; Hardware stack levels required when called:   10
 20568 ;; This function calls:
 20569 ;;		_SPIPut
 20570 ;; This function is called by:
 20571 ;;		_TxPacket
 20572 ;;		_MiMAC_SetChannel
 20573 ;;		_MiMAC_SetPower
 20574 ;;		_MiMAC_Init
 20575 ;;		_SetRFMode
 20576 ;; This function uses a non-reentrant model
 20577 ;;
 20578                           
 20579                           	psect	text62
 20580  016C12                     __ptext62:
 20581                           	opt stack 0
 20582  016C12                     _RegisterSet:
 20583                           	opt stack 16
 20584                           
 20585                           ;drv_mrf_miwi_89xa.c: 173: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20586                           
 20587                           ;incstack = 0
 20588  016C12  0E00               	movlw	0
 20589  016C14  B6F0               	btfsc	intcon3,3,c	;volatile
 20590  016C16  0E01               	movlw	1
 20591  016C18  0101               	movlb	1	; () banked
 20592  016C1A  6F8E               	movwf	RegisterSet@IRQ1select& (0+255),b
 20593                           
 20594                           ;drv_mrf_miwi_89xa.c: 175: bool IRQ0select = INTCONbits.INT0IE;
 20595  016C1C  0E00               	movlw	0
 20596  016C1E  B8F2               	btfsc	intcon,4,c	;volatile
 20597  016C20  0E01               	movlw	1
 20598  016C22  0101               	movlb	1	; () banked
 20599  016C24  6F8F               	movwf	RegisterSet@IRQ0select& (0+255),b
 20600                           
 20601                           ; BSR set to: 1
 20602                           ;drv_mrf_miwi_89xa.c: 176: INTCONbits.INT0IE = 0;
 20603  016C26  98F2               	bcf	intcon,4,c	;volatile
 20604                           
 20605                           ; BSR set to: 1
 20606                           ;drv_mrf_miwi_89xa.c: 179: INTCON3bits.INT1IE = 0;
 20607  016C28  96F0               	bcf	intcon3,3,c	;volatile
 20608                           
 20609                           ; BSR set to: 1
 20610                           ;drv_mrf_miwi_89xa.c: 180: LATBbits.LATB3 = 0;
 20611  016C2A  968A               	bcf	3978,3,c	;volatile
 20612                           
 20613                           ; BSR set to: 1
 20614                           ;drv_mrf_miwi_89xa.c: 181: SPIPut((uint8_t)(setting >> 8));
 20615  016C2C  0101               	movlb	1	; () banked
 20616  016C2E  518D               	movf	(RegisterSet@setting+1)& (0+255),w,b
 20617  016C30  ECAA  F0B7         	call	_SPIPut
 20618                           
 20619                           ;drv_mrf_miwi_89xa.c: 182: SPIPut((uint8_t)setting);
 20620  016C34  0101               	movlb	1	; () banked
 20621  016C36  518C               	movf	RegisterSet@setting& (0+255),w,b
 20622  016C38  ECAA  F0B7         	call	_SPIPut
 20623                           
 20624                           ;drv_mrf_miwi_89xa.c: 183: LATBbits.LATB3 = 1;
 20625  016C3C  868A               	bsf	3978,3,c	;volatile
 20626                           
 20627                           ;drv_mrf_miwi_89xa.c: 184: INTCON3bits.INT1IE = IRQ1select;
 20628  016C3E  0101               	movlb	1	; () banked
 20629  016C40  B18E               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 20630  016C42  D002               	bra	u12465
 20631  016C44  96F0               	bcf	intcon3,3,c	;volatile
 20632  016C46  D001               	bra	u12466
 20633  016C48                     u12465:
 20634  016C48  86F0               	bsf	intcon3,3,c	;volatile
 20635  016C4A                     u12466:
 20636                           
 20637                           ;drv_mrf_miwi_89xa.c: 187: INTCONbits.INT0IE = IRQ0select;
 20638  016C4A  0101               	movlb	1	; () banked
 20639  016C4C  B18F               	btfsc	RegisterSet@IRQ0select& (0+255),0,b
 20640  016C4E  D002               	bra	u12475
 20641  016C50  98F2               	bcf	intcon,4,c	;volatile
 20642  016C52  D001               	bra	u12476
 20643  016C54                     u12475:
 20644  016C54  88F2               	bsf	intcon,4,c	;volatile
 20645  016C56                     u12476:
 20646  016C56  0012               	return		;funcret
 20647  016C58                     __end_of_RegisterSet:
 20648                           	opt stack 0
 20649                           tblptru	equ	0xFF8
 20650                           tblptrh	equ	0xFF7
 20651                           tblptrl	equ	0xFF6
 20652                           tablat	equ	0xFF5
 20653                           prodh	equ	0xFF4
 20654                           prodl	equ	0xFF3
 20655                           intcon	equ	0xFF2
 20656                           intcon2	equ	0xFF1
 20657                           intcon3	equ	0xFF0
 20658                           indf0	equ	0xFEF
 20659                           postinc0	equ	0xFEE
 20660                           plusw0	equ	0xFEB
 20661                           fsr0h	equ	0xFEA
 20662                           fsr0l	equ	0xFE9
 20663                           wreg	equ	0xFE8
 20664                           indf1	equ	0xFE7
 20665                           postinc1	equ	0xFE6
 20666                           postdec1	equ	0xFE5
 20667                           fsr1h	equ	0xFE2
 20668                           fsr1l	equ	0xFE1
 20669                           indf2	equ	0xFDF
 20670                           postinc2	equ	0xFDE
 20671                           postdec2	equ	0xFDD
 20672                           plusw2	equ	0xFDB
 20673                           fsr2h	equ	0xFDA
 20674                           fsr2l	equ	0xFD9
 20675                           status	equ	0xFD8
 20676                           
 20677 ;; *************** function _RegisterRead *****************
 20678 ;; Defined at:
 20679 ;;		line 207 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20680 ;; Parameters:    Size  Location     Type
 20681 ;;  address         1    wreg     unsigned char 
 20682 ;; Auto vars:     Size  Location     Type
 20683 ;;  address         1    5[BANK1 ] unsigned char 
 20684 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 20685 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 20686 ;;  value           1    2[BANK1 ] unsigned char 
 20687 ;; Return value:  Size  Location     Type
 20688 ;;                  1    wreg      unsigned char 
 20689 ;; Registers used:
 20690 ;;		wreg, status,2, status,0, cstack
 20691 ;; Tracked objects:
 20692 ;;		On entry : 0/0
 20693 ;;		On exit  : 0/0
 20694 ;;		Unchanged: 0/0
 20695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20697 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20699 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20700 ;;Total ram usage:        4 bytes
 20701 ;; Hardware stack levels used:    1
 20702 ;; Hardware stack levels required when called:   11
 20703 ;; This function calls:
 20704 ;;		_SPIGet
 20705 ;;		_SPIPut
 20706 ;; This function is called by:
 20707 ;;		_TxPacket
 20708 ;;		_getReceiverBW
 20709 ;; This function uses a non-reentrant model
 20710 ;;
 20711                           
 20712                           	psect	text63
 20713  016AC2                     __ptext63:
 20714                           	opt stack 0
 20715  016AC2                     _RegisterRead:
 20716                           	opt stack 14
 20717                           
 20718                           ;incstack = 0
 20719                           ;RegisterRead@address stored from wreg
 20720  016AC2  0101               	movlb	1	; () banked
 20721  016AC4  6F8F               	movwf	RegisterRead@address& (0+255),b
 20722                           
 20723                           ;drv_mrf_miwi_89xa.c: 209: uint8_t value;
 20724                           ;drv_mrf_miwi_89xa.c: 210: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20725  016AC6  0E00               	movlw	0
 20726  016AC8  B6F0               	btfsc	intcon3,3,c	;volatile
 20727  016ACA  0E01               	movlw	1
 20728  016ACC  0101               	movlb	1	; () banked
 20729  016ACE  6F8D               	movwf	RegisterRead@IRQ1select& (0+255),b
 20730                           
 20731                           ;drv_mrf_miwi_89xa.c: 212: bool IRQ0select = INTCONbits.INT0IE;
 20732  016AD0  0E00               	movlw	0
 20733  016AD2  B8F2               	btfsc	intcon,4,c	;volatile
 20734  016AD4  0E01               	movlw	1
 20735  016AD6  0101               	movlb	1	; () banked
 20736  016AD8  6F8E               	movwf	RegisterRead@IRQ0select& (0+255),b
 20737                           
 20738                           ;drv_mrf_miwi_89xa.c: 214: INTCONbits.INT0IE = 0;
 20739  016ADA  98F2               	bcf	intcon,4,c	;volatile
 20740                           
 20741                           ;drv_mrf_miwi_89xa.c: 217: INTCON3bits.INT1IE = 0;
 20742  016ADC  96F0               	bcf	intcon3,3,c	;volatile
 20743                           
 20744                           ;drv_mrf_miwi_89xa.c: 218: LATBbits.LATB3 = 0;
 20745  016ADE  968A               	bcf	3978,3,c	;volatile
 20746                           
 20747                           ; BSR set to: 1
 20748                           ;drv_mrf_miwi_89xa.c: 219: address = (address|0x40);
 20749  016AE0  0101               	movlb	1	; () banked
 20750  016AE2  518F               	movf	RegisterRead@address& (0+255),w,b
 20751  016AE4  0940               	iorlw	64
 20752  016AE6  0101               	movlb	1	; () banked
 20753  016AE8  6F8F               	movwf	RegisterRead@address& (0+255),b
 20754                           
 20755                           ; BSR set to: 1
 20756                           ;drv_mrf_miwi_89xa.c: 220: SPIPut(address);
 20757  016AEA  0101               	movlb	1	; () banked
 20758  016AEC  518F               	movf	RegisterRead@address& (0+255),w,b
 20759  016AEE  ECAA  F0B7         	call	_SPIPut
 20760                           
 20761                           ;drv_mrf_miwi_89xa.c: 221: value = SPIGet();
 20762  016AF2  ECF1  F0B7         	call	_SPIGet	;wreg free
 20763  016AF6  0101               	movlb	1	; () banked
 20764  016AF8  6F8C               	movwf	RegisterRead@value& (0+255),b
 20765                           
 20766                           ; BSR set to: 1
 20767                           ;drv_mrf_miwi_89xa.c: 222: LATBbits.LATB3 = 1;
 20768  016AFA  868A               	bsf	3978,3,c	;volatile
 20769                           
 20770                           ; BSR set to: 1
 20771                           ;drv_mrf_miwi_89xa.c: 223: INTCON3bits.INT1IE = IRQ1select;
 20772  016AFC  0101               	movlb	1	; () banked
 20773  016AFE  B18D               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 20774  016B00  D002               	bra	u12635
 20775  016B02  96F0               	bcf	intcon3,3,c	;volatile
 20776  016B04  D001               	bra	u12636
 20777  016B06                     u12635:
 20778  016B06  86F0               	bsf	intcon3,3,c	;volatile
 20779  016B08                     u12636:
 20780                           
 20781                           ;drv_mrf_miwi_89xa.c: 226: INTCONbits.INT0IE = IRQ0select;
 20782  016B08  0101               	movlb	1	; () banked
 20783  016B0A  B18E               	btfsc	RegisterRead@IRQ0select& (0+255),0,b
 20784  016B0C  D002               	bra	u12645
 20785  016B0E  98F2               	bcf	intcon,4,c	;volatile
 20786  016B10  D001               	bra	u12646
 20787  016B12                     u12645:
 20788  016B12  88F2               	bsf	intcon,4,c	;volatile
 20789  016B14                     u12646:
 20790                           
 20791                           ;drv_mrf_miwi_89xa.c: 229: return value;
 20792  016B14  0101               	movlb	1	; () banked
 20793  016B16  518C               	movf	RegisterRead@value& (0+255),w,b
 20794  016B18  0012               	return	
 20795  016B1A                     __end_of_RegisterRead:
 20796                           	opt stack 0
 20797                           tblptru	equ	0xFF8
 20798                           tblptrh	equ	0xFF7
 20799                           tblptrl	equ	0xFF6
 20800                           tablat	equ	0xFF5
 20801                           prodh	equ	0xFF4
 20802                           prodl	equ	0xFF3
 20803                           intcon	equ	0xFF2
 20804                           intcon2	equ	0xFF1
 20805                           intcon3	equ	0xFF0
 20806                           indf0	equ	0xFEF
 20807                           postinc0	equ	0xFEE
 20808                           plusw0	equ	0xFEB
 20809                           fsr0h	equ	0xFEA
 20810                           fsr0l	equ	0xFE9
 20811                           wreg	equ	0xFE8
 20812                           indf1	equ	0xFE7
 20813                           postinc1	equ	0xFE6
 20814                           postdec1	equ	0xFE5
 20815                           fsr1h	equ	0xFE2
 20816                           fsr1l	equ	0xFE1
 20817                           indf2	equ	0xFDF
 20818                           postinc2	equ	0xFDE
 20819                           postdec2	equ	0xFDD
 20820                           plusw2	equ	0xFDB
 20821                           fsr2h	equ	0xFDA
 20822                           fsr2l	equ	0xFD9
 20823                           status	equ	0xFD8
 20824                           
 20825 ;; *************** function _SPIGet *****************
 20826 ;; Defined at:
 20827 ;;		line 104 in file "src/18F27J53/spi.c"
 20828 ;; Parameters:    Size  Location     Type
 20829 ;;		None
 20830 ;; Auto vars:     Size  Location     Type
 20831 ;;		None
 20832 ;; Return value:  Size  Location     Type
 20833 ;;                  1    wreg      unsigned char 
 20834 ;; Registers used:
 20835 ;;		wreg, status,2, cstack
 20836 ;; Tracked objects:
 20837 ;;		On entry : 0/0
 20838 ;;		On exit  : 0/0
 20839 ;;		Unchanged: 0/0
 20840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20845 ;;Total ram usage:        0 bytes
 20846 ;; Hardware stack levels used:    1
 20847 ;; Hardware stack levels required when called:   10
 20848 ;; This function calls:
 20849 ;;		_SPIPut
 20850 ;; This function is called by:
 20851 ;;		_RegisterRead
 20852 ;; This function uses a non-reentrant model
 20853 ;;
 20854                           
 20855                           	psect	text64
 20856  016FE2                     __ptext64:
 20857                           	opt stack 0
 20858  016FE2                     _SPIGet:
 20859                           	opt stack 14
 20860                           
 20861                           ;spi.c: 128: SPIPut(0x00);
 20862                           
 20863                           ; BSR set to: 1
 20864                           ;incstack = 0
 20865  016FE2  0E00               	movlw	0
 20866  016FE4  ECAA  F0B7         	call	_SPIPut
 20867                           
 20868                           ;spi.c: 129: return SSP2BUF;
 20869  016FE8  5075               	movf	3957,w,c	;volatile
 20870  016FEA  0012               	return	
 20871  016FEC                     __end_of_SPIGet:
 20872                           	opt stack 0
 20873                           tblptru	equ	0xFF8
 20874                           tblptrh	equ	0xFF7
 20875                           tblptrl	equ	0xFF6
 20876                           tablat	equ	0xFF5
 20877                           prodh	equ	0xFF4
 20878                           prodl	equ	0xFF3
 20879                           intcon	equ	0xFF2
 20880                           intcon2	equ	0xFF1
 20881                           intcon3	equ	0xFF0
 20882                           indf0	equ	0xFEF
 20883                           postinc0	equ	0xFEE
 20884                           plusw0	equ	0xFEB
 20885                           fsr0h	equ	0xFEA
 20886                           fsr0l	equ	0xFE9
 20887                           wreg	equ	0xFE8
 20888                           indf1	equ	0xFE7
 20889                           postinc1	equ	0xFE6
 20890                           postdec1	equ	0xFE5
 20891                           fsr1h	equ	0xFE2
 20892                           fsr1l	equ	0xFE1
 20893                           indf2	equ	0xFDF
 20894                           postinc2	equ	0xFDE
 20895                           postdec2	equ	0xFDD
 20896                           plusw2	equ	0xFDB
 20897                           fsr2h	equ	0xFDA
 20898                           fsr2l	equ	0xFD9
 20899                           status	equ	0xFD8
 20900                           
 20901 ;; *************** function _SPIPut *****************
 20902 ;; Defined at:
 20903 ;;		line 45 in file "src/18F27J53/spi.c"
 20904 ;; Parameters:    Size  Location     Type
 20905 ;;  v               1    wreg     unsigned char 
 20906 ;; Auto vars:     Size  Location     Type
 20907 ;;  v               1    1[BANK1 ] unsigned char 
 20908 ;;  i               1    0[BANK1 ] unsigned char 
 20909 ;; Return value:  Size  Location     Type
 20910 ;;		None               void
 20911 ;; Registers used:
 20912 ;;		wreg
 20913 ;; Tracked objects:
 20914 ;;		On entry : 0/0
 20915 ;;		On exit  : 0/0
 20916 ;;		Unchanged: 0/0
 20917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20919 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20921 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20922 ;;Total ram usage:        2 bytes
 20923 ;; Hardware stack levels used:    1
 20924 ;; Hardware stack levels required when called:    9
 20925 ;; This function calls:
 20926 ;;		Nothing
 20927 ;; This function is called by:
 20928 ;;		_SPIGet
 20929 ;;		_RegisterSet
 20930 ;;		_RegisterRead
 20931 ;;		_WriteFIFO
 20932 ;; This function uses a non-reentrant model
 20933 ;;
 20934                           
 20935                           	psect	text65
 20936  016F54                     __ptext65:
 20937                           	opt stack 0
 20938  016F54                     _SPIPut:
 20939                           	opt stack 16
 20940                           
 20941                           ;incstack = 0
 20942                           ;SPIPut@v stored from wreg
 20943  016F54  0101               	movlb	1	; () banked
 20944  016F56  6F8B               	movwf	SPIPut@v& (0+255),b
 20945                           
 20946                           ;spi.c: 66: {
 20947                           ;spi.c: 68: uint8_t i;
 20948                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 20949  016F58  9EA4               	bcf	4004,7,c	;volatile
 20950                           
 20951                           ;spi.c: 72: i = SSP2BUF;
 20952  016F5A  CF75 F18A          	movff	3957,SPIPut@i	;volatile
 20953  016F5E                     l29:
 20954                           
 20955                           ;spi.c: 75: {
 20956                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 20957  016F5E  9E72               	bcf	3954,7,c	;volatile
 20958                           
 20959                           ;spi.c: 77: SSP2BUF = v;
 20960  016F60  C18B  FF75         	movff	SPIPut@v,3957	;volatile
 20961                           
 20962                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 20963  016F64  BE72               	btfsc	3954,7,c	;volatile
 20964  016F66  D7FB               	goto	l29
 20965  016F68                     l31:
 20966  016F68  AEA4               	btfss	4004,7,c	;volatile
 20967  016F6A  D7FE               	goto	l31
 20968                           
 20969                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 20970  016F6C  9EA4               	bcf	4004,7,c	;volatile
 20971  016F6E  0012               	return		;funcret
 20972  016F70                     __end_of_SPIPut:
 20973                           	opt stack 0
 20974                           tblptru	equ	0xFF8
 20975                           tblptrh	equ	0xFF7
 20976                           tblptrl	equ	0xFF6
 20977                           tablat	equ	0xFF5
 20978                           prodh	equ	0xFF4
 20979                           prodl	equ	0xFF3
 20980                           intcon	equ	0xFF2
 20981                           intcon2	equ	0xFF1
 20982                           intcon3	equ	0xFF0
 20983                           indf0	equ	0xFEF
 20984                           postinc0	equ	0xFEE
 20985                           plusw0	equ	0xFEB
 20986                           fsr0h	equ	0xFEA
 20987                           fsr0l	equ	0xFE9
 20988                           wreg	equ	0xFE8
 20989                           indf1	equ	0xFE7
 20990                           postinc1	equ	0xFE6
 20991                           postdec1	equ	0xFE5
 20992                           fsr1h	equ	0xFE2
 20993                           fsr1l	equ	0xFE1
 20994                           indf2	equ	0xFDF
 20995                           postinc2	equ	0xFDE
 20996                           postdec2	equ	0xFDD
 20997                           plusw2	equ	0xFDB
 20998                           fsr2h	equ	0xFDA
 20999                           fsr2l	equ	0xFD9
 21000                           status	equ	0xFD8
 21001                           
 21002 ;; *************** function _CCM_Enc *****************
 21003 ;; Defined at:
 21004 ;;		line 240 in file "src/miwi/drv_mrf_miwi_security.c"
 21005 ;; Parameters:    Size  Location     Type
 21006 ;;  text            2   36[BANK1 ] PTR unsigned char 
 21007 ;;		 -> MACTxBuffer(64), 
 21008 ;;  headerLen       1   38[BANK1 ] unsigned char 
 21009 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 21010 ;;  key             2   40[BANK1 ] PTR unsigned char 
 21011 ;;		 -> key(8), 
 21012 ;; Auto vars:     Size  Location     Type
 21013 ;;  i               1   46[BANK1 ] unsigned char 
 21014 ;; Return value:  Size  Location     Type
 21015 ;;		None               void
 21016 ;; Registers used:
 21017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21018 ;; Tracked objects:
 21019 ;;		On entry : 0/0
 21020 ;;		On exit  : 0/0
 21021 ;;		Unchanged: 0/0
 21022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21023 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21024 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21025 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21026 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21027 ;;Total ram usage:       11 bytes
 21028 ;; Hardware stack levels used:    1
 21029 ;; Hardware stack levels required when called:   11
 21030 ;; This function calls:
 21031 ;;		_CBC_MAC
 21032 ;;		_CTR
 21033 ;; This function is called by:
 21034 ;;		_MiMAC_SendPacket
 21035 ;; This function uses a non-reentrant model
 21036 ;;
 21037                           
 21038                           	psect	text66
 21039  014F18                     __ptext66:
 21040                           	opt stack 0
 21041  014F18                     _CCM_Enc:
 21042                           	opt stack 15
 21043                           
 21044                           ;drv_mrf_miwi_security.c: 245: uint8_t i;
 21045                           ;drv_mrf_miwi_security.c: 252: CBC_MAC(text, (headerLen + payloadLen), key, tmpBlock);
 21046                           
 21047                           ;incstack = 0
 21048  014F18  C1AE  F1A1         	movff	CCM_Enc@text,CBC_MAC@text
 21049  014F1C  C1AF  F1A2         	movff	CCM_Enc@text+1,CBC_MAC@text+1
 21050  014F20  0101               	movlb	1	; () banked
 21051  014F22  51B0               	movf	CCM_Enc@headerLen& (0+255),w,b
 21052  014F24  0101               	movlb	1	; () banked
 21053  014F26  25B1               	addwf	CCM_Enc@payloadLen& (0+255),w,b
 21054  014F28  0101               	movlb	1	; () banked
 21055  014F2A  6FA3               	movwf	CBC_MAC@len& (0+255),b
 21056  014F2C  C1B2  F1A4         	movff	CCM_Enc@key,CBC_MAC@key
 21057  014F30  C1B3  F1A5         	movff	CCM_Enc@key+1,CBC_MAC@key+1
 21058  014F34  0ECC               	movlw	low _tmpBlock
 21059  014F36  0101               	movlb	1	; () banked
 21060  014F38  6FA6               	movwf	CBC_MAC@MIC& (0+255),b
 21061  014F3A  0E00               	movlw	high _tmpBlock
 21062  014F3C  0101               	movlb	1	; () banked
 21063  014F3E  6FA7               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 21064  014F40  EC83  F0AB         	call	_CBC_MAC	;wreg free
 21065                           
 21066                           ;drv_mrf_miwi_security.c: 254: for(i = 0; i < 4; i++)
 21067  014F44  0E00               	movlw	0
 21068  014F46  0101               	movlb	1	; () banked
 21069  014F48  6FB8               	movwf	CCM_Enc@i& (0+255),b
 21070  014F4A                     l11425:
 21071                           
 21072                           ; BSR set to: 1
 21073  014F4A  0E03               	movlw	3
 21074  014F4C  0101               	movlb	1	; () banked
 21075  014F4E  65B8               	cpfsgt	CCM_Enc@i& (0+255),b
 21076  014F50  D001               	goto	l11429
 21077  014F52  D028               	goto	l11435
 21078  014F54                     l11429:
 21079                           
 21080                           ; BSR set to: 1
 21081                           ;drv_mrf_miwi_security.c: 255: {
 21082                           ;drv_mrf_miwi_security.c: 256: text[headerLen + payloadLen + i] = tmpBlock[i];
 21083  014F54  0101               	movlb	1	; () banked
 21084  014F56  51B8               	movf	CCM_Enc@i& (0+255),w,b
 21085  014F58  0D01               	mullw	1
 21086  014F5A  0ECC               	movlw	low _tmpBlock
 21087  014F5C  24F3               	addwf	prodl,w,c
 21088  014F5E  6ED9               	movwf	fsr2l,c
 21089  014F60  0E00               	movlw	high _tmpBlock
 21090  014F62  20F4               	addwfc	prodh,w,c
 21091  014F64  6EDA               	movwf	fsr2h,c
 21092  014F66  0101               	movlb	1	; () banked
 21093  014F68  51B1               	movf	CCM_Enc@payloadLen& (0+255),w,b
 21094  014F6A  C1B0  F1B4         	movff	CCM_Enc@headerLen,??_CCM_Enc
 21095  014F6E  0101               	movlb	1	; () banked
 21096  014F70  6BB5               	clrf	(??_CCM_Enc+1)& (0+255),b
 21097  014F72  0101               	movlb	1	; () banked
 21098  014F74  27B4               	addwf	??_CCM_Enc& (0+255),f,b
 21099  014F76  0E00               	movlw	0
 21100  014F78  23B5               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 21101  014F7A  0101               	movlb	1	; () banked
 21102  014F7C  51B8               	movf	CCM_Enc@i& (0+255),w,b
 21103  014F7E  0101               	movlb	1	; () banked
 21104  014F80  27B4               	addwf	??_CCM_Enc& (0+255),f,b
 21105  014F82  0E00               	movlw	0
 21106  014F84  23B5               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 21107  014F86  0101               	movlb	1	; () banked
 21108  014F88  51B4               	movf	??_CCM_Enc& (0+255),w,b
 21109  014F8A  0101               	movlb	1	; () banked
 21110  014F8C  25AE               	addwf	CCM_Enc@text& (0+255),w,b
 21111  014F8E  6EE1               	movwf	fsr1l,c
 21112  014F90  0101               	movlb	1	; () banked
 21113  014F92  51B5               	movf	(??_CCM_Enc+1)& (0+255),w,b
 21114  014F94  0101               	movlb	1	; () banked
 21115  014F96  21AF               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 21116  014F98  6EE2               	movwf	fsr1h,c
 21117  014F9A  CFDF FFE7          	movff	indf2,indf1
 21118                           
 21119                           ; BSR set to: 1
 21120  014F9E  0101               	movlb	1	; () banked
 21121  014FA0  2BB8               	incf	CCM_Enc@i& (0+255),f,b
 21122  014FA2  D7D3               	goto	l11425
 21123  014FA4                     l11435:
 21124                           
 21125                           ; BSR set to: 1
 21126                           ;drv_mrf_miwi_security.c: 257: }
 21127                           ;drv_mrf_miwi_security.c: 259: for(i = 0; i < 4-1; i++)
 21128  014FA4  0E00               	movlw	0
 21129  014FA6  0101               	movlb	1	; () banked
 21130  014FA8  6FB8               	movwf	CCM_Enc@i& (0+255),b
 21131  014FAA                     l11437:
 21132                           
 21133                           ; BSR set to: 1
 21134  014FAA  0E02               	movlw	2
 21135  014FAC  0101               	movlb	1	; () banked
 21136  014FAE  65B8               	cpfsgt	CCM_Enc@i& (0+255),b
 21137  014FB0  D001               	goto	l11441
 21138  014FB2  D02D               	goto	l11451
 21139  014FB4                     l11441:
 21140                           
 21141                           ; BSR set to: 1
 21142                           ;drv_mrf_miwi_security.c: 260: {
 21143                           ;drv_mrf_miwi_security.c: 261: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 21144  014FB4  0101               	movlb	1	; () banked
 21145  014FB6  51B0               	movf	CCM_Enc@headerLen& (0+255),w,b
 21146  014FB8  0101               	movlb	1	; () banked
 21147  014FBA  5DB8               	subwf	CCM_Enc@i& (0+255),w,b
 21148  014FBC  A0D8               	btfss	status,0,c
 21149  014FBE  D006               	goto	l11445
 21150                           
 21151                           ; BSR set to: 1
 21152  014FC0  0E00               	movlw	0
 21153  014FC2  0101               	movlb	1	; () banked
 21154  014FC4  6FB7               	movwf	(_CCM_Enc$2085+1)& (0+255),b
 21155  014FC6  0E00               	movlw	0
 21156  014FC8  6FB6               	movwf	_CCM_Enc$2085& (0+255),b
 21157  014FCA  D013               	goto	l468
 21158  014FCC                     l11445:
 21159                           
 21160                           ; BSR set to: 1
 21161  014FCC  0101               	movlb	1	; () banked
 21162  014FCE  51B8               	movf	CCM_Enc@i& (0+255),w,b
 21163  014FD0  0D01               	mullw	1
 21164  014FD2  50F3               	movf	prodl,w,c
 21165  014FD4  0101               	movlb	1	; () banked
 21166  014FD6  25AE               	addwf	CCM_Enc@text& (0+255),w,b
 21167  014FD8  6ED9               	movwf	fsr2l,c
 21168  014FDA  50F4               	movf	prodh,w,c
 21169  014FDC  0101               	movlb	1	; () banked
 21170  014FDE  21AF               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 21171  014FE0  6EDA               	movwf	fsr2h,c
 21172  014FE2  50DF               	movf	indf2,w,c
 21173  014FE4  0101               	movlb	1	; () banked
 21174  014FE6  6FB4               	movwf	??_CCM_Enc& (0+255),b
 21175  014FE8  0101               	movlb	1	; () banked
 21176  014FEA  51B4               	movf	??_CCM_Enc& (0+255),w,b
 21177  014FEC  0101               	movlb	1	; () banked
 21178  014FEE  6FB6               	movwf	_CCM_Enc$2085& (0+255),b
 21179  014FF0  6BB7               	clrf	(_CCM_Enc$2085+1)& (0+255),b
 21180  014FF2                     l468:
 21181                           
 21182                           ; BSR set to: 1
 21183  014FF2  0101               	movlb	1	; () banked
 21184  014FF4  51B8               	movf	CCM_Enc@i& (0+255),w,b
 21185  014FF6  0D01               	mullw	1
 21186  014FF8  0ECC               	movlw	low _tmpBlock
 21187  014FFA  24F3               	addwf	prodl,w,c
 21188  014FFC  6ED9               	movwf	fsr2l,c
 21189  014FFE  0E00               	movlw	high _tmpBlock
 21190  015000  20F4               	addwfc	prodh,w,c
 21191  015002  6EDA               	movwf	fsr2h,c
 21192  015004  C1B6  FFDF         	movff	_CCM_Enc$2085,indf2
 21193                           
 21194                           ; BSR set to: 1
 21195  015008  0101               	movlb	1	; () banked
 21196  01500A  2BB8               	incf	CCM_Enc@i& (0+255),f,b
 21197  01500C  D7CE               	goto	l11437
 21198  01500E                     l11451:
 21199                           
 21200                           ; BSR set to: 1
 21201                           ;drv_mrf_miwi_security.c: 262: }
 21202                           ;drv_mrf_miwi_security.c: 264: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBlock);
 21203  01500E  0101               	movlb	1	; () banked
 21204  015010  51B0               	movf	CCM_Enc@headerLen& (0+255),w,b
 21205  015012  0D01               	mullw	1
 21206  015014  50F3               	movf	prodl,w,c
 21207  015016  0101               	movlb	1	; () banked
 21208  015018  25AE               	addwf	CCM_Enc@text& (0+255),w,b
 21209  01501A  0101               	movlb	1	; () banked
 21210  01501C  6FA1               	movwf	CTR@text& (0+255),b
 21211  01501E  50F4               	movf	prodh,w,c
 21212  015020  0101               	movlb	1	; () banked
 21213  015022  21AF               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 21214  015024  0101               	movlb	1	; () banked
 21215  015026  6FA2               	movwf	(CTR@text+1)& (0+255),b
 21216  015028  0101               	movlb	1	; () banked
 21217  01502A  51B1               	movf	CCM_Enc@payloadLen& (0+255),w,b
 21218  01502C  0F04               	addlw	4
 21219  01502E  0101               	movlb	1	; () banked
 21220  015030  6FA3               	movwf	CTR@len& (0+255),b
 21221  015032  C1B2  F1A4         	movff	CCM_Enc@key,CTR@key
 21222  015036  C1B3  F1A5         	movff	CCM_Enc@key+1,CTR@key+1
 21223  01503A  0ECC               	movlw	low _tmpBlock
 21224  01503C  0101               	movlb	1	; () banked
 21225  01503E  6FA6               	movwf	CTR@nounce& (0+255),b
 21226  015040  0E00               	movlw	high _tmpBlock
 21227  015042  0101               	movlb	1	; () banked
 21228  015044  6FA7               	movwf	(CTR@nounce+1)& (0+255),b
 21229  015046  ECDE  F0A9         	call	_CTR	;wreg free
 21230  01504A  0012               	return		;funcret
 21231  01504C                     __end_of_CCM_Enc:
 21232                           	opt stack 0
 21233                           tblptru	equ	0xFF8
 21234                           tblptrh	equ	0xFF7
 21235                           tblptrl	equ	0xFF6
 21236                           tablat	equ	0xFF5
 21237                           prodh	equ	0xFF4
 21238                           prodl	equ	0xFF3
 21239                           intcon	equ	0xFF2
 21240                           intcon2	equ	0xFF1
 21241                           intcon3	equ	0xFF0
 21242                           indf0	equ	0xFEF
 21243                           postinc0	equ	0xFEE
 21244                           plusw0	equ	0xFEB
 21245                           fsr0h	equ	0xFEA
 21246                           fsr0l	equ	0xFE9
 21247                           wreg	equ	0xFE8
 21248                           indf1	equ	0xFE7
 21249                           postinc1	equ	0xFE6
 21250                           postdec1	equ	0xFE5
 21251                           fsr1h	equ	0xFE2
 21252                           fsr1l	equ	0xFE1
 21253                           indf2	equ	0xFDF
 21254                           postinc2	equ	0xFDE
 21255                           postdec2	equ	0xFDD
 21256                           plusw2	equ	0xFDB
 21257                           fsr2h	equ	0xFDA
 21258                           fsr2l	equ	0xFD9
 21259                           status	equ	0xFD8
 21260                           
 21261 ;; *************** function _MiMAC_ReceivedPacket *****************
 21262 ;; Defined at:
 21263 ;;		line 858 in file "src/miwi/drv_mrf_miwi_89xa.c"
 21264 ;; Parameters:    Size  Location     Type
 21265 ;;		None
 21266 ;; Auto vars:     Size  Location     Type
 21267 ;;  FrameCounter    4   63[BANK1 ] struct .
 21268 ;;  k               1   67[BANK1 ] unsigned char 
 21269 ;;  PayloadIndex    1   69[BANK1 ] unsigned char 
 21270 ;;  j               1   68[BANK1 ] unsigned char 
 21271 ;;  currentTick     4   59[BANK1 ] struct _MIWI_TICK
 21272 ;;  i               1   70[BANK1 ] unsigned char 
 21273 ;; Return value:  Size  Location     Type
 21274 ;;                  1    wreg      unsigned char 
 21275 ;; Registers used:
 21276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21277 ;; Tracked objects:
 21278 ;;		On entry : 0/0
 21279 ;;		On exit  : 0/0
 21280 ;;		Unchanged: 0/0
 21281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21283 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21284 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21285 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21286 ;;Total ram usage:       20 bytes
 21287 ;; Hardware stack levels used:    1
 21288 ;; Hardware stack levels required when called:   12
 21289 ;; This function calls:
 21290 ;;		_CCM_Dec
 21291 ;;		_MiWi_TickGet
 21292 ;;		_isSameAddress
 21293 ;; This function is called by:
 21294 ;;		_MiWiTasks
 21295 ;; This function uses a non-reentrant model
 21296 ;;
 21297                           
 21298                           	psect	text67
 21299  011FE6                     __ptext67:
 21300                           	opt stack 0
 21301  011FE6                     _MiMAC_ReceivedPacket:
 21302                           	opt stack 13
 21303                           
 21304                           ;drv_mrf_miwi_89xa.c: 860: uint8_t i;
 21305                           ;drv_mrf_miwi_89xa.c: 861: MIWI_TICK currentTick;
 21306                           ;drv_mrf_miwi_89xa.c: 865: for(i = 0; i < 5; i++)
 21307                           
 21308                           ;incstack = 0
 21309  011FE6  0E00               	movlw	0
 21310  011FE8  0101               	movlb	1	; () banked
 21311  011FEA  6FD0               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 21312  011FEC                     l11683:
 21313                           
 21314                           ; BSR set to: 1
 21315  011FEC  0E04               	movlw	4
 21316  011FEE  0101               	movlb	1	; () banked
 21317  011FF0  65D0               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 21318  011FF2  D001               	goto	l11687
 21319  011FF4  D084               	goto	l11701
 21320  011FF6                     l11687:
 21321                           
 21322                           ; BSR set to: 1
 21323                           ;drv_mrf_miwi_89xa.c: 866: {
 21324                           ;drv_mrf_miwi_89xa.c: 867: currentTick = MiWi_TickGet();
 21325  011FF6  EC1E  F0B4         	call	_MiWi_TickGet	;wreg free
 21326  011FFA  C18A  F1C5         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
 21327  011FFE  C18B  F1C6         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
 21328  012002  C18C  F1C7         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
 21329  012006  C18D  F1C8         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
 21330                           
 21331                           ;drv_mrf_miwi_89xa.c: 868: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
 21332                           ;drv_mrf_miwi_89xa.c: 869: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          6000000)/32)) )
 21333  01200A  0101               	movlb	1	; () banked
 21334  01200C  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21335  01200E  0D06               	mullw	6
 21336  012010  0E28               	movlw	low _AckInfo
 21337  012012  24F3               	addwf	prodl,w,c
 21338  012014  6ED9               	movwf	fsr2l,c
 21339  012016  0E02               	movlw	high _AckInfo
 21340  012018  20F4               	addwfc	prodh,w,c
 21341  01201A  6EDA               	movwf	fsr2h,c
 21342  01201C  50DF               	movf	indf2,w,c
 21343  01201E  B4D8               	btfsc	status,2,c
 21344  012020  D06B               	goto	l11697
 21345                           
 21346                           ; BSR set to: 1
 21347  012022  0101               	movlb	1	; () banked
 21348  012024  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21349  012026  0D06               	mullw	6
 21350  012028  0E02               	movlw	2
 21351  01202A  26F3               	addwf	prodl,f,c
 21352  01202C  0E00               	movlw	0
 21353  01202E  22F4               	addwfc	prodh,f,c
 21354  012030  0E28               	movlw	low _AckInfo
 21355  012032  24F3               	addwf	prodl,w,c
 21356  012034  6ED9               	movwf	fsr2l,c
 21357  012036  0E02               	movlw	high _AckInfo
 21358  012038  20F4               	addwfc	prodh,w,c
 21359  01203A  6EDA               	movwf	fsr2h,c
 21360  01203C  0101               	movlb	1	; () banked
 21361  01203E  51C5               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 21362  012040  5CDE               	subwf	postinc2,w,c
 21363  012042  0101               	movlb	1	; () banked
 21364  012044  51C6               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 21365  012046  58DE               	subwfb	postinc2,w,c
 21366  012048  0101               	movlb	1	; () banked
 21367  01204A  51C7               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 21368  01204C  58DE               	subwfb	postinc2,w,c
 21369  01204E  0101               	movlb	1	; () banked
 21370  012050  51C8               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 21371  012052  58DE               	subwfb	postinc2,w,c
 21372  012054  B0D8               	btfsc	status,0,c
 21373  012056  D050               	goto	l11697
 21374                           
 21375                           ; BSR set to: 1
 21376  012058  0101               	movlb	1	; () banked
 21377  01205A  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21378  01205C  0D06               	mullw	6
 21379  01205E  0E02               	movlw	2
 21380  012060  26F3               	addwf	prodl,f,c
 21381  012062  0E00               	movlw	0
 21382  012064  22F4               	addwfc	prodh,f,c
 21383  012066  0E28               	movlw	low _AckInfo
 21384  012068  24F3               	addwf	prodl,w,c
 21385  01206A  6ED9               	movwf	fsr2l,c
 21386  01206C  0E02               	movlw	high _AckInfo
 21387  01206E  20F4               	addwfc	prodh,w,c
 21388  012070  6EDA               	movwf	fsr2h,c
 21389  012072  CFDE F1BD          	movff	postinc2,??_MiMAC_ReceivedPacket
 21390  012076  CFDE F1BE          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 21391  01207A  CFDE F1BF          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 21392  01207E  CFDE F1C0          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 21393  012082  0101               	movlb	1	; () banked
 21394  012084  1FBD               	comf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21395  012086  1FBE               	comf	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21396  012088  1FBF               	comf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21397  01208A  1FC0               	comf	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21398  01208C  2BBD               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21399  01208E  0E00               	movlw	0
 21400  012090  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21401  012092  23BF               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21402  012094  23C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21403  012096  0101               	movlb	1	; () banked
 21404  012098  51C5               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 21405  01209A  0101               	movlb	1	; () banked
 21406  01209C  25BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21407  01209E  0101               	movlb	1	; () banked
 21408  0120A0  6FC1               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 21409  0120A2  0101               	movlb	1	; () banked
 21410  0120A4  51C6               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 21411  0120A6  0101               	movlb	1	; () banked
 21412  0120A8  21BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21413  0120AA  0101               	movlb	1	; () banked
 21414  0120AC  6FC2               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 21415  0120AE  0101               	movlb	1	; () banked
 21416  0120B0  51C7               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 21417  0120B2  0101               	movlb	1	; () banked
 21418  0120B4  21BF               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21419  0120B6  0101               	movlb	1	; () banked
 21420  0120B8  6FC3               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 21421  0120BA  0101               	movlb	1	; () banked
 21422  0120BC  51C8               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 21423  0120BE  0101               	movlb	1	; () banked
 21424  0120C0  21C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21425  0120C2  0101               	movlb	1	; () banked
 21426  0120C4  6FC4               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 21427  0120C6  0101               	movlb	1	; () banked
 21428  0120C8  51C4               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 21429  0120CA  E10B               	bnz	u13350
 21430  0120CC  0E21               	movlw	33
 21431  0120CE  0101               	movlb	1	; () banked
 21432  0120D0  5DC1               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 21433  0120D2  0EA1               	movlw	161
 21434  0120D4  0101               	movlb	1	; () banked
 21435  0120D6  59C2               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 21436  0120D8  0E07               	movlw	7
 21437  0120DA  0101               	movlb	1	; () banked
 21438  0120DC  59C3               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 21439  0120DE  A0D8               	btfss	status,0,c
 21440  0120E0  D00B               	goto	l11697
 21441  0120E2                     u13350:
 21442                           
 21443                           ; BSR set to: 1
 21444                           ;drv_mrf_miwi_89xa.c: 870: {
 21445                           ;drv_mrf_miwi_89xa.c: 871: AckInfo[i].Valid = 0;
 21446  0120E2  0101               	movlb	1	; () banked
 21447  0120E4  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21448  0120E6  0D06               	mullw	6
 21449  0120E8  0E28               	movlw	low _AckInfo
 21450  0120EA  24F3               	addwf	prodl,w,c
 21451  0120EC  6ED9               	movwf	fsr2l,c
 21452  0120EE  0E02               	movlw	high _AckInfo
 21453  0120F0  20F4               	addwfc	prodh,w,c
 21454  0120F2  6EDA               	movwf	fsr2h,c
 21455  0120F4  0E00               	movlw	0
 21456  0120F6  6EDF               	movwf	indf2,c
 21457  0120F8                     l11697:
 21458                           
 21459                           ; BSR set to: 1
 21460  0120F8  0101               	movlb	1	; () banked
 21461  0120FA  2BD0               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 21462  0120FC  D777               	goto	l11683
 21463  0120FE                     l11701:
 21464                           
 21465                           ; BSR set to: 1
 21466                           ;drv_mrf_miwi_89xa.c: 872: }
 21467                           ;drv_mrf_miwi_89xa.c: 873: }
 21468                           ;drv_mrf_miwi_89xa.c: 876: if( ReceivedBankIndex != 0xFF )
 21469  0120FE  0101               	movlb	1	; () banked
 21470  012100  2945               	incf	_ReceivedBankIndex& (0+255),w,b
 21471  012102  B4D8               	btfsc	status,2,c
 21472  012104  D002               	goto	l11707
 21473                           
 21474                           ; BSR set to: 1
 21475                           ;drv_mrf_miwi_89xa.c: 877: {
 21476                           ;drv_mrf_miwi_89xa.c: 878: return 0;
 21477  012106  0E00               	movlw	0
 21478                           
 21479                           ; BSR set to: 1
 21480  012108  0012               	return	
 21481  01210A                     l11707:
 21482                           
 21483                           ; BSR set to: 1
 21484                           ;drv_mrf_miwi_89xa.c: 879: }
 21485                           ;drv_mrf_miwi_89xa.c: 881: for(i = 0; i < 2; i++)
 21486  01210A  0E00               	movlw	0
 21487  01210C  0101               	movlb	1	; () banked
 21488  01210E  6FD0               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 21489  012110                     l11709:
 21490                           
 21491                           ; BSR set to: 1
 21492  012110  0E01               	movlw	1
 21493  012112  0101               	movlb	1	; () banked
 21494  012114  65D0               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 21495  012116  D001               	goto	l11713
 21496  012118  D1C1               	goto	l11811
 21497  01211A                     l11713:
 21498                           
 21499                           ; BSR set to: 1
 21500                           ;drv_mrf_miwi_89xa.c: 882: {
 21501                           ;drv_mrf_miwi_89xa.c: 883: if( RxPacket[i].flags.bits.Valid )
 21502  01211A  0101               	movlb	1	; () banked
 21503  01211C  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21504  01211E  0D42               	mullw	66
 21505  012120  0E50               	movlw	low _RxPacket
 21506  012122  24F3               	addwf	prodl,w,c
 21507  012124  6ED9               	movwf	fsr2l,c
 21508  012126  0E03               	movlw	high _RxPacket
 21509  012128  20F4               	addwfc	prodh,w,c
 21510  01212A  6EDA               	movwf	fsr2h,c
 21511  01212C  0103               	movlb	3	; () banked
 21512  01212E  A0DF               	btfss	indf2,0,c
 21513  012130  D1B2               	goto	l11807
 21514                           
 21515                           ; BSR set to: 3
 21516                           ;drv_mrf_miwi_89xa.c: 884: {
 21517                           ;drv_mrf_miwi_89xa.c: 885: uint8_t PayloadIndex;
 21518                           ;drv_mrf_miwi_89xa.c: 886: uint8_t j;
 21519                           ;drv_mrf_miwi_89xa.c: 888: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 21520  012132  0101               	movlb	1	; () banked
 21521  012134  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21522  012136  0D42               	mullw	66
 21523  012138  0E01               	movlw	1
 21524  01213A  26F3               	addwf	prodl,f,c
 21525  01213C  0E00               	movlw	0
 21526  01213E  22F4               	addwfc	prodh,f,c
 21527  012140  0E50               	movlw	low _RxPacket
 21528  012142  24F3               	addwf	prodl,w,c
 21529  012144  6ED9               	movwf	fsr2l,c
 21530  012146  0E03               	movlw	high _RxPacket
 21531  012148  20F4               	addwfc	prodh,w,c
 21532  01214A  6EDA               	movwf	fsr2h,c
 21533  01214C  50DF               	movf	indf2,w,c
 21534  01214E  0101               	movlb	1	; () banked
 21535  012150  6F16               	movwf	_MACRxPacket& (0+255),b
 21536                           
 21537                           ;drv_mrf_miwi_89xa.c: 889: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 21538  012152  0101               	movlb	1	; () banked
 21539  012154  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21540  012156  0D42               	mullw	66
 21541  012158  0E41               	movlw	65
 21542  01215A  26F3               	addwf	prodl,f,c
 21543  01215C  0E00               	movlw	0
 21544  01215E  22F4               	addwfc	prodh,f,c
 21545  012160  0E50               	movlw	low _RxPacket
 21546  012162  24F3               	addwf	prodl,w,c
 21547  012164  6ED9               	movwf	fsr2l,c
 21548  012166  0E03               	movlw	high _RxPacket
 21549  012168  20F4               	addwfc	prodh,w,c
 21550  01216A  6EDA               	movwf	fsr2h,c
 21551  01216C  50DF               	movf	indf2,w,c
 21552  01216E  0101               	movlb	1	; () banked
 21553  012170  6F1B               	movwf	(_MACRxPacket+5)& (0+255),b
 21554                           
 21555                           ; BSR set to: 1
 21556                           ;drv_mrf_miwi_89xa.c: 890: PayloadIndex = 2;
 21557  012172  0E02               	movlw	2
 21558  012174  0101               	movlb	1	; () banked
 21559  012176  6FCF               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 21560                           
 21561                           ; BSR set to: 1
 21562                           ;drv_mrf_miwi_89xa.c: 892: if( MACRxPacket.flags.bits.destPrsnt )
 21563  012178  0101               	movlb	1	; () banked
 21564  01217A  AD16               	btfss	_MACRxPacket& (0+255),6,b
 21565  01217C  D007               	goto	l11723
 21566                           
 21567                           ; BSR set to: 1
 21568                           ;drv_mrf_miwi_89xa.c: 893: {
 21569                           ;drv_mrf_miwi_89xa.c: 894: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 21570  01217E  0100               	movlb	0	; () banked
 21571  012180  31AF               	rrcf	_MACInitParams& (0+255),w,b
 21572  012182  32E8               	rrcf	wreg,f,c
 21573  012184  32E8               	rrcf	wreg,f,c
 21574  012186  0B0F               	andlw	15
 21575  012188  0101               	movlb	1	; () banked
 21576  01218A  27CF               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21577  01218C                     l11723:
 21578                           
 21579                           ; BSR set to: 1
 21580                           ;drv_mrf_miwi_89xa.c: 895: }
 21581                           ;drv_mrf_miwi_89xa.c: 897: if( MACRxPacket.flags.bits.sourcePrsnt )
 21582  01218C  0101               	movlb	1	; () banked
 21583  01218E  AF16               	btfss	_MACRxPacket& (0+255),7,b
 21584  012190  D028               	goto	l11729
 21585                           
 21586                           ; BSR set to: 1
 21587                           ;drv_mrf_miwi_89xa.c: 898: {
 21588                           ;drv_mrf_miwi_89xa.c: 899: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 21589  012192  0101               	movlb	1	; () banked
 21590  012194  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21591  012196  0D01               	mullw	1
 21592  012198  0E01               	movlw	1
 21593  01219A  26F3               	addwf	prodl,f,c
 21594  01219C  0E00               	movlw	0
 21595  01219E  22F4               	addwfc	prodh,f,c
 21596  0121A0  0E50               	movlw	low _RxPacket
 21597  0121A2  0101               	movlb	1	; () banked
 21598  0121A4  6FBD               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21599  0121A6  0E03               	movlw	high _RxPacket
 21600  0121A8  0101               	movlb	1	; () banked
 21601  0121AA  6FBE               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21602  0121AC  50F3               	movf	prodl,w,c
 21603  0121AE  0101               	movlb	1	; () banked
 21604  0121B0  27BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21605  0121B2  50F4               	movf	prodh,w,c
 21606  0121B4  0101               	movlb	1	; () banked
 21607  0121B6  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21608  0121B8  0101               	movlb	1	; () banked
 21609  0121BA  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21610  0121BC  0D42               	mullw	66
 21611  0121BE  50F3               	movf	prodl,w,c
 21612  0121C0  0101               	movlb	1	; () banked
 21613  0121C2  25BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21614  0121C4  0101               	movlb	1	; () banked
 21615  0121C6  6F17               	movwf	(_MACRxPacket+1)& (0+255),b
 21616  0121C8  50F4               	movf	prodh,w,c
 21617  0121CA  0101               	movlb	1	; () banked
 21618  0121CC  21BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21619  0121CE  0101               	movlb	1	; () banked
 21620  0121D0  6F18               	movwf	(_MACRxPacket+2)& (0+255),b
 21621                           
 21622                           ; BSR set to: 1
 21623                           ;drv_mrf_miwi_89xa.c: 900: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 21624  0121D2  0100               	movlb	0	; () banked
 21625  0121D4  31AF               	rrcf	_MACInitParams& (0+255),w,b
 21626  0121D6  32E8               	rrcf	wreg,f,c
 21627  0121D8  32E8               	rrcf	wreg,f,c
 21628  0121DA  0B0F               	andlw	15
 21629  0121DC  0101               	movlb	1	; () banked
 21630  0121DE  27CF               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21631                           
 21632                           ;drv_mrf_miwi_89xa.c: 901: }
 21633  0121E0  D006               	goto	l11731
 21634  0121E2                     l11729:
 21635                           
 21636                           ; BSR set to: 1
 21637                           ;drv_mrf_miwi_89xa.c: 902: else
 21638                           ;drv_mrf_miwi_89xa.c: 903: {
 21639                           ;drv_mrf_miwi_89xa.c: 904: MACRxPacket.SourceAddress = (0);
 21640  0121E2  0E00               	movlw	0
 21641  0121E4  0101               	movlb	1	; () banked
 21642  0121E6  6F17               	movwf	(_MACRxPacket+1)& (0+255),b
 21643  0121E8  0E00               	movlw	0
 21644  0121EA  0101               	movlb	1	; () banked
 21645  0121EC  6F18               	movwf	(_MACRxPacket+2)& (0+255),b
 21646  0121EE                     l11731:
 21647                           
 21648                           ; BSR set to: 1
 21649                           ;drv_mrf_miwi_89xa.c: 905: }
 21650                           ;drv_mrf_miwi_89xa.c: 909: if( MACRxPacket.flags.bits.secEn )
 21651  0121EE  0101               	movlb	1	; () banked
 21652  0121F0  A716               	btfss	_MACRxPacket& (0+255),3,b
 21653  0121F2  D127               	goto	l11795
 21654                           
 21655                           ; BSR set to: 1
 21656                           ;drv_mrf_miwi_89xa.c: 910: {
 21657                           ;drv_mrf_miwi_89xa.c: 912: if( 0x00 != RxPacket[i].Payload[PayloadIndex+4] )
 21658  0121F4  0101               	movlb	1	; () banked
 21659  0121F6  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21660  0121F8  0D42               	mullw	66
 21661  0121FA  0101               	movlb	1	; () banked
 21662  0121FC  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21663  0121FE  0101               	movlb	1	; () banked
 21664  012200  6FBD               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21665  012202  6BBE               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21666  012204  0E05               	movlw	5
 21667  012206  0101               	movlb	1	; () banked
 21668  012208  27BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21669  01220A  0E00               	movlw	0
 21670  01220C  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21671  01220E  0E50               	movlw	low _RxPacket
 21672  012210  0101               	movlb	1	; () banked
 21673  012212  6FBF               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 21674  012214  0E03               	movlw	high _RxPacket
 21675  012216  0101               	movlb	1	; () banked
 21676  012218  6FC0               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 21677  01221A  0101               	movlb	1	; () banked
 21678  01221C  51BD               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21679  01221E  0101               	movlb	1	; () banked
 21680  012220  27BF               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21681  012222  0101               	movlb	1	; () banked
 21682  012224  51BE               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21683  012226  0101               	movlb	1	; () banked
 21684  012228  23C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21685  01222A  50F3               	movf	prodl,w,c
 21686  01222C  0101               	movlb	1	; () banked
 21687  01222E  25BF               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21688  012230  6ED9               	movwf	fsr2l,c
 21689  012232  50F4               	movf	prodh,w,c
 21690  012234  0101               	movlb	1	; () banked
 21691  012236  21C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21692  012238  6EDA               	movwf	fsr2h,c
 21693  01223A  50DF               	movf	indf2,w,c
 21694  01223C  B4D8               	btfsc	status,2,c
 21695  01223E  D00D               	goto	l352
 21696                           
 21697                           ; BSR set to: 1
 21698                           ;drv_mrf_miwi_89xa.c: 913: {
 21699                           ;drv_mrf_miwi_89xa.c: 914: RxPacket[i].flags.Val = 0;
 21700  012240  0101               	movlb	1	; () banked
 21701  012242  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21702  012244  0D42               	mullw	66
 21703  012246  0E50               	movlw	low _RxPacket
 21704  012248  24F3               	addwf	prodl,w,c
 21705  01224A  6ED9               	movwf	fsr2l,c
 21706  01224C  0E03               	movlw	high _RxPacket
 21707  01224E  20F4               	addwfc	prodh,w,c
 21708  012250  6EDA               	movwf	fsr2h,c
 21709  012252  0E00               	movlw	0
 21710  012254  6EDF               	movwf	indf2,c
 21711                           
 21712                           ; BSR set to: 1
 21713                           ;drv_mrf_miwi_89xa.c: 915: return 0;
 21714  012256  0E00               	movlw	0
 21715                           
 21716                           ; BSR set to: 1
 21717  012258  0012               	return	
 21718  01225A                     l352:
 21719                           
 21720                           ; BSR set to: 1
 21721                           ;drv_mrf_miwi_89xa.c: 916: }
 21722                           ;drv_mrf_miwi_89xa.c: 919: if( MACRxPacket.flags.bits.sourcePrsnt )
 21723  01225A  0101               	movlb	1	; () banked
 21724  01225C  AF16               	btfss	_MACRxPacket& (0+255),7,b
 21725  01225E  D0AA               	goto	l11783
 21726                           
 21727                           ; BSR set to: 1
 21728                           ;drv_mrf_miwi_89xa.c: 920: {
 21729                           ;drv_mrf_miwi_89xa.c: 922: for(j = 0; j < 10; j++)
 21730  012260  0E00               	movlw	0
 21731  012262  0101               	movlb	1	; () banked
 21732  012264  6FCE               	movwf	MiMAC_ReceivedPacket@j& (0+255),b
 21733  012266                     l11743:
 21734                           
 21735                           ; BSR set to: 1
 21736  012266  0E09               	movlw	9
 21737  012268  0101               	movlb	1	; () banked
 21738  01226A  65CE               	cpfsgt	MiMAC_ReceivedPacket@j& (0+255),b
 21739  01226C  D001               	goto	l11747
 21740  01226E  D02B               	goto	l11757
 21741  012270                     l11747:
 21742                           
 21743                           ; BSR set to: 1
 21744                           ;drv_mrf_miwi_89xa.c: 923: {
 21745                           ;drv_mrf_miwi_89xa.c: 924: if( (ConnectionTable[j].status.bits.isValid) &&
 21746                           ;drv_mrf_miwi_89xa.c: 925: isSameAddress(ConnectionTable[j].Address, MACRxPacket.SourceA
      +                          ddress) )
 21747  012270  0101               	movlb	1	; () banked
 21748  012272  51CE               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21749  012274  0D09               	mullw	9
 21750  012276  0E08               	movlw	8
 21751  012278  26F3               	addwf	prodl,f,c
 21752  01227A  0E00               	movlw	0
 21753  01227C  22F4               	addwfc	prodh,f,c
 21754  01227E  0E46               	movlw	low _ConnectionTable
 21755  012280  24F3               	addwf	prodl,w,c
 21756  012282  6ED9               	movwf	fsr2l,c
 21757  012284  0E02               	movlw	high _ConnectionTable
 21758  012286  20F4               	addwfc	prodh,w,c
 21759  012288  6EDA               	movwf	fsr2h,c
 21760  01228A  0102               	movlb	2	; () banked
 21761  01228C  AEDF               	btfss	indf2,7,c
 21762  01228E  D018               	goto	l11753
 21763                           
 21764                           ; BSR set to: 2
 21765  012290  0101               	movlb	1	; () banked
 21766  012292  51CE               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21767  012294  0D09               	mullw	9
 21768  012296  0E04               	movlw	4
 21769  012298  26F3               	addwf	prodl,f,c
 21770  01229A  0E00               	movlw	0
 21771  01229C  22F4               	addwfc	prodh,f,c
 21772  01229E  0E46               	movlw	low _ConnectionTable
 21773  0122A0  24F3               	addwf	prodl,w,c
 21774  0122A2  0101               	movlb	1	; () banked
 21775  0122A4  6F8A               	movwf	isSameAddress@Address1& (0+255),b
 21776  0122A6  0E02               	movlw	high _ConnectionTable
 21777  0122A8  20F4               	addwfc	prodh,w,c
 21778  0122AA  0101               	movlb	1	; () banked
 21779  0122AC  6F8B               	movwf	(isSameAddress@Address1+1)& (0+255),b
 21780  0122AE  C117  F18C         	movff	_MACRxPacket+1,isSameAddress@Address2
 21781  0122B2  C118  F18D         	movff	_MACRxPacket+2,isSameAddress@Address2+1
 21782  0122B6  ECB9  F0B5         	call	_isSameAddress	;wreg free
 21783  0122BA  0900               	iorlw	0
 21784  0122BC  A4D8               	btfss	status,2,c
 21785  0122BE  D003               	goto	l11757
 21786  0122C0                     l11753:
 21787  0122C0  0101               	movlb	1	; () banked
 21788  0122C2  2BCE               	incf	MiMAC_ReceivedPacket@j& (0+255),f,b
 21789  0122C4  D7D0               	goto	l11743
 21790  0122C6                     l11757:
 21791                           
 21792                           ;drv_mrf_miwi_89xa.c: 928: }
 21793                           ;drv_mrf_miwi_89xa.c: 929: }
 21794                           ;drv_mrf_miwi_89xa.c: 930: if( j < 10 )
 21795  0122C6  0E0A               	movlw	10
 21796  0122C8  0101               	movlb	1	; () banked
 21797  0122CA  61CE               	cpfslt	MiMAC_ReceivedPacket@j& (0+255),b
 21798  0122CC  D073               	goto	l11783
 21799                           
 21800                           ; BSR set to: 1
 21801                           ;drv_mrf_miwi_89xa.c: 931: {
 21802                           ;drv_mrf_miwi_89xa.c: 932: API_UINT32_UNION FrameCounter;
 21803                           ;drv_mrf_miwi_89xa.c: 933: uint8_t k;
 21804                           ;drv_mrf_miwi_89xa.c: 935: for(k = 0; k < 4; k++)
 21805  0122CE  0E00               	movlw	0
 21806  0122D0  0101               	movlb	1	; () banked
 21807  0122D2  6FCD               	movwf	MiMAC_ReceivedPacket@k& (0+255),b
 21808  0122D4                     l11761:
 21809                           
 21810                           ; BSR set to: 1
 21811  0122D4  0E03               	movlw	3
 21812  0122D6  0101               	movlb	1	; () banked
 21813  0122D8  65CD               	cpfsgt	MiMAC_ReceivedPacket@k& (0+255),b
 21814  0122DA  D001               	goto	l11765
 21815  0122DC  D036               	goto	l11771
 21816  0122DE                     l11765:
 21817                           
 21818                           ; BSR set to: 1
 21819                           ;drv_mrf_miwi_89xa.c: 936: {
 21820                           ;drv_mrf_miwi_89xa.c: 937: FrameCounter.v[k] = RxPacket[i].Payload[PayloadIndex+k];
 21821  0122DE  0101               	movlb	1	; () banked
 21822  0122E0  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21823  0122E2  0D42               	mullw	66
 21824  0122E4  0101               	movlb	1	; () banked
 21825  0122E6  51CD               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 21826  0122E8  C1CF  F1BD         	movff	MiMAC_ReceivedPacket@PayloadIndex,??_MiMAC_ReceivedPacket
 21827  0122EC  0101               	movlb	1	; () banked
 21828  0122EE  6BBE               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21829  0122F0  0101               	movlb	1	; () banked
 21830  0122F2  27BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21831  0122F4  0E00               	movlw	0
 21832  0122F6  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21833  0122F8  0E01               	movlw	1
 21834  0122FA  0101               	movlb	1	; () banked
 21835  0122FC  27BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21836  0122FE  0E00               	movlw	0
 21837  012300  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21838  012302  0E50               	movlw	low _RxPacket
 21839  012304  0101               	movlb	1	; () banked
 21840  012306  6FBF               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 21841  012308  0E03               	movlw	high _RxPacket
 21842  01230A  0101               	movlb	1	; () banked
 21843  01230C  6FC0               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 21844  01230E  0101               	movlb	1	; () banked
 21845  012310  51BD               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21846  012312  0101               	movlb	1	; () banked
 21847  012314  27BF               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21848  012316  0101               	movlb	1	; () banked
 21849  012318  51BE               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21850  01231A  0101               	movlb	1	; () banked
 21851  01231C  23C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21852  01231E  50F3               	movf	prodl,w,c
 21853  012320  0101               	movlb	1	; () banked
 21854  012322  25BF               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21855  012324  6ED9               	movwf	fsr2l,c
 21856  012326  50F4               	movf	prodh,w,c
 21857  012328  0101               	movlb	1	; () banked
 21858  01232A  21C0               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21859  01232C  6EDA               	movwf	fsr2h,c
 21860  01232E  0101               	movlb	1	; () banked
 21861  012330  51CD               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 21862  012332  0D01               	mullw	1
 21863  012334  0EC9               	movlw	low MiMAC_ReceivedPacket@FrameCounter
 21864  012336  24F3               	addwf	prodl,w,c
 21865  012338  6EE1               	movwf	fsr1l,c
 21866  01233A  0E01               	movlw	high MiMAC_ReceivedPacket@FrameCounter
 21867  01233C  20F4               	addwfc	prodh,w,c
 21868  01233E  6EE2               	movwf	fsr1h,c
 21869  012340  CFDF FFE7          	movff	indf2,indf1
 21870                           
 21871                           ; BSR set to: 1
 21872  012344  0101               	movlb	1	; () banked
 21873  012346  2BCD               	incf	MiMAC_ReceivedPacket@k& (0+255),f,b
 21874  012348  D7C5               	goto	l11761
 21875  01234A                     l11771:
 21876                           
 21877                           ; BSR set to: 1
 21878                           ;drv_mrf_miwi_89xa.c: 938: }
 21879                           ;drv_mrf_miwi_89xa.c: 940: if( IncomingFrameCounter[j].Val > FrameCounter.Val )
 21880  01234A  0101               	movlb	1	; () banked
 21881  01234C  51CE               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21882  01234E  0D04               	mullw	4
 21883  012350  0E00               	movlw	low _IncomingFrameCounter
 21884  012352  24F3               	addwf	prodl,w,c
 21885  012354  6ED9               	movwf	fsr2l,c
 21886  012356  0E02               	movlw	high _IncomingFrameCounter
 21887  012358  20F4               	addwfc	prodh,w,c
 21888  01235A  6EDA               	movwf	fsr2h,c
 21889  01235C  50DE               	movf	postinc2,w,c
 21890  01235E  0101               	movlb	1	; () banked
 21891  012360  5DC9               	subwf	MiMAC_ReceivedPacket@FrameCounter& (0+255),w,b
 21892  012362  50DE               	movf	postinc2,w,c
 21893  012364  0101               	movlb	1	; () banked
 21894  012366  59CA               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+1)& (0+255),w,b
 21895  012368  50DE               	movf	postinc2,w,c
 21896  01236A  0101               	movlb	1	; () banked
 21897  01236C  59CB               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+2)& (0+255),w,b
 21898  01236E  50DE               	movf	postinc2,w,c
 21899  012370  0101               	movlb	1	; () banked
 21900  012372  59CC               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+3)& (0+255),w,b
 21901  012374  B0D8               	btfsc	status,0,c
 21902  012376  D00D               	goto	l11781
 21903                           
 21904                           ; BSR set to: 1
 21905                           ;drv_mrf_miwi_89xa.c: 941: {
 21906                           ;drv_mrf_miwi_89xa.c: 942: RxPacket[i].flags.Val = 0;
 21907  012378  0101               	movlb	1	; () banked
 21908  01237A  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21909  01237C  0D42               	mullw	66
 21910  01237E  0E50               	movlw	low _RxPacket
 21911  012380  24F3               	addwf	prodl,w,c
 21912  012382  6ED9               	movwf	fsr2l,c
 21913  012384  0E03               	movlw	high _RxPacket
 21914  012386  20F4               	addwfc	prodh,w,c
 21915  012388  6EDA               	movwf	fsr2h,c
 21916  01238A  0E00               	movlw	0
 21917  01238C  6EDF               	movwf	indf2,c
 21918                           
 21919                           ; BSR set to: 1
 21920                           ;drv_mrf_miwi_89xa.c: 943: return 0;
 21921  01238E  0E00               	movlw	0
 21922                           
 21923                           ; BSR set to: 1
 21924  012390  0012               	return	
 21925  012392                     l11781:
 21926                           
 21927                           ; BSR set to: 1
 21928                           ;drv_mrf_miwi_89xa.c: 945: else
 21929                           ;drv_mrf_miwi_89xa.c: 946: {
 21930                           ;drv_mrf_miwi_89xa.c: 947: IncomingFrameCounter[j].Val = FrameCounter.Val;
 21931  012392  0101               	movlb	1	; () banked
 21932  012394  51CE               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21933  012396  0D04               	mullw	4
 21934  012398  0E00               	movlw	low _IncomingFrameCounter
 21935  01239A  24F3               	addwf	prodl,w,c
 21936  01239C  6ED9               	movwf	fsr2l,c
 21937  01239E  0E02               	movlw	high _IncomingFrameCounter
 21938  0123A0  20F4               	addwfc	prodh,w,c
 21939  0123A2  6EDA               	movwf	fsr2h,c
 21940  0123A4  C1C9  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter,postinc2
 21941  0123A8  C1CA  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+1,postinc2
 21942  0123AC  C1CB  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+2,postinc2
 21943  0123B0  C1CC  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+3,postinc2
 21944  0123B4                     l11783:
 21945                           
 21946                           ; BSR set to: 1
 21947                           ;drv_mrf_miwi_89xa.c: 948: }
 21948                           ;drv_mrf_miwi_89xa.c: 949: }
 21949                           ;drv_mrf_miwi_89xa.c: 950: }
 21950                           ;drv_mrf_miwi_89xa.c: 953: PayloadIndex += 5;
 21951  0123B4  0E05               	movlw	5
 21952  0123B6  0101               	movlb	1	; () banked
 21953  0123B8  27CF               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21954                           
 21955                           ; BSR set to: 1
 21956                           ;drv_mrf_miwi_89xa.c: 975: if(CCM_Dec((uint8_t *)RxPacket[i].Payload, PayloadIndex, RxPa
      +                          cket[i].PayloadLen-PayloadIndex, key) == 0)
 21957  0123BA  0101               	movlb	1	; () banked
 21958  0123BC  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21959  0123BE  0D42               	mullw	66
 21960  0123C0  0E01               	movlw	1
 21961  0123C2  26F3               	addwf	prodl,f,c
 21962  0123C4  0E00               	movlw	0
 21963  0123C6  22F4               	addwfc	prodh,f,c
 21964  0123C8  0E50               	movlw	low _RxPacket
 21965  0123CA  24F3               	addwf	prodl,w,c
 21966  0123CC  0101               	movlb	1	; () banked
 21967  0123CE  6FAE               	movwf	CCM_Dec@text& (0+255),b
 21968  0123D0  0E03               	movlw	high _RxPacket
 21969  0123D2  20F4               	addwfc	prodh,w,c
 21970  0123D4  0101               	movlb	1	; () banked
 21971  0123D6  6FAF               	movwf	(CCM_Dec@text+1)& (0+255),b
 21972  0123D8  C1CF  F1B0         	movff	MiMAC_ReceivedPacket@PayloadIndex,CCM_Dec@headerLen
 21973  0123DC  0101               	movlb	1	; () banked
 21974  0123DE  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21975  0123E0  0D42               	mullw	66
 21976  0123E2  0E41               	movlw	65
 21977  0123E4  26F3               	addwf	prodl,f,c
 21978  0123E6  0E00               	movlw	0
 21979  0123E8  22F4               	addwfc	prodh,f,c
 21980  0123EA  0E50               	movlw	low _RxPacket
 21981  0123EC  24F3               	addwf	prodl,w,c
 21982  0123EE  6ED9               	movwf	fsr2l,c
 21983  0123F0  0E03               	movlw	high _RxPacket
 21984  0123F2  20F4               	addwfc	prodh,w,c
 21985  0123F4  6EDA               	movwf	fsr2h,c
 21986  0123F6  50DF               	movf	indf2,w,c
 21987  0123F8  0101               	movlb	1	; () banked
 21988  0123FA  6FBD               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21989  0123FC  0101               	movlb	1	; () banked
 21990  0123FE  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21991  012400  0800               	sublw	0
 21992  012402  0101               	movlb	1	; () banked
 21993  012404  25BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21994  012406  0101               	movlb	1	; () banked
 21995  012408  6FB1               	movwf	CCM_Dec@payloadLen& (0+255),b
 21996  01240A  0EC0               	movlw	low _key
 21997  01240C  0101               	movlb	1	; () banked
 21998  01240E  6FB2               	movwf	CCM_Dec@key& (0+255),b
 21999  012410  0E00               	movlw	high _key
 22000  012412  0101               	movlb	1	; () banked
 22001  012414  6FB3               	movwf	(CCM_Dec@key+1)& (0+255),b
 22002  012416  EC59  F0A4         	call	_CCM_Dec	;wreg free
 22003  01241A  0900               	iorlw	0
 22004  01241C  A4D8               	btfss	status,2,c
 22005  01241E  D00D               	goto	l11793
 22006                           
 22007                           ;drv_mrf_miwi_89xa.c: 976: {
 22008                           ;drv_mrf_miwi_89xa.c: 977: RxPacket[i].flags.Val = 0;
 22009  012420  0101               	movlb	1	; () banked
 22010  012422  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 22011  012424  0D42               	mullw	66
 22012  012426  0E50               	movlw	low _RxPacket
 22013  012428  24F3               	addwf	prodl,w,c
 22014  01242A  6ED9               	movwf	fsr2l,c
 22015  01242C  0E03               	movlw	high _RxPacket
 22016  01242E  20F4               	addwfc	prodh,w,c
 22017  012430  6EDA               	movwf	fsr2h,c
 22018  012432  0E00               	movlw	0
 22019  012434  6EDF               	movwf	indf2,c
 22020                           
 22021                           ; BSR set to: 1
 22022                           ;drv_mrf_miwi_89xa.c: 978: return 0;
 22023  012436  0E00               	movlw	0
 22024                           
 22025                           ; BSR set to: 1
 22026  012438  0012               	return	
 22027  01243A                     l11793:
 22028                           
 22029                           ;drv_mrf_miwi_89xa.c: 979: }
 22030                           ;drv_mrf_miwi_89xa.c: 996: MACRxPacket.PayloadLen -= (PayloadIndex + 2);
 22031  01243A  0101               	movlb	1	; () banked
 22032  01243C  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 22033  01243E  0F02               	addlw	2
 22034  012440  D002               	goto	L7
 22035  012442                     l11795:
 22036                           
 22037                           ; BSR set to: 1
 22038                           ;drv_mrf_miwi_89xa.c: 998: else
 22039                           ;drv_mrf_miwi_89xa.c: 999: {
 22040                           ;drv_mrf_miwi_89xa.c: 1000: MACRxPacket.PayloadLen -= PayloadIndex;
 22041  012442  0101               	movlb	1	; () banked
 22042  012444  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 22043  012446                     L7:
 22044  012446  0101               	movlb	1	; () banked
 22045  012448  5F1B               	subwf	(_MACRxPacket+5)& (0+255),f,b
 22046                           
 22047                           ; BSR set to: 1
 22048                           ;drv_mrf_miwi_89xa.c: 1001: }
 22049                           ;drv_mrf_miwi_89xa.c: 1009: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
 22050                           
 22051                           ; BSR set to: 1
 22052  01244A  0101               	movlb	1	; () banked
 22053  01244C  51CF               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 22054  01244E  0D01               	mullw	1
 22055  012450  0E01               	movlw	1
 22056  012452  26F3               	addwf	prodl,f,c
 22057  012454  0E00               	movlw	0
 22058  012456  22F4               	addwfc	prodh,f,c
 22059  012458  0E50               	movlw	low _RxPacket
 22060  01245A  0101               	movlb	1	; () banked
 22061  01245C  6FBD               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 22062  01245E  0E03               	movlw	high _RxPacket
 22063  012460  0101               	movlb	1	; () banked
 22064  012462  6FBE               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 22065  012464  50F3               	movf	prodl,w,c
 22066  012466  0101               	movlb	1	; () banked
 22067  012468  27BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 22068  01246A  50F4               	movf	prodh,w,c
 22069  01246C  0101               	movlb	1	; () banked
 22070  01246E  23BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 22071  012470  0101               	movlb	1	; () banked
 22072  012472  51D0               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 22073  012474  0D42               	mullw	66
 22074  012476  50F3               	movf	prodl,w,c
 22075  012478  0101               	movlb	1	; () banked
 22076  01247A  25BD               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 22077  01247C  0101               	movlb	1	; () banked
 22078  01247E  6F19               	movwf	(_MACRxPacket+3)& (0+255),b
 22079  012480  50F4               	movf	prodh,w,c
 22080  012482  0101               	movlb	1	; () banked
 22081  012484  21BE               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 22082  012486  0101               	movlb	1	; () banked
 22083  012488  6F1A               	movwf	(_MACRxPacket+4)& (0+255),b
 22084                           
 22085                           ; BSR set to: 1
 22086                           ;drv_mrf_miwi_89xa.c: 1011: MACRxPacket.RSSIValue = RSSILock;
 22087  01248A  C144  F11C         	movff	_RSSILock,_MACRxPacket+6
 22088                           
 22089                           ; BSR set to: 1
 22090                           ;drv_mrf_miwi_89xa.c: 1014: ReceivedBankIndex = i;
 22091  01248E  C1D0  F145         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 22092                           
 22093                           ; BSR set to: 1
 22094                           ;drv_mrf_miwi_89xa.c: 1015: return 1;
 22095  012492  0E01               	movlw	1
 22096                           
 22097                           ; BSR set to: 1
 22098  012494  0012               	return	
 22099  012496                     l11807:
 22100  012496  0101               	movlb	1	; () banked
 22101  012498  2BD0               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 22102  01249A  D63A               	goto	l11709
 22103  01249C                     l11811:
 22104                           
 22105                           ; BSR set to: 1
 22106                           ;drv_mrf_miwi_89xa.c: 1016: }
 22107                           ;drv_mrf_miwi_89xa.c: 1017: }
 22108                           ;drv_mrf_miwi_89xa.c: 1019: return 0;
 22109  01249C  0E00               	movlw	0
 22110  01249E  0012               	return	
 22111  0124A0                     __end_of_MiMAC_ReceivedPacket:
 22112                           	opt stack 0
 22113                           tblptru	equ	0xFF8
 22114                           tblptrh	equ	0xFF7
 22115                           tblptrl	equ	0xFF6
 22116                           tablat	equ	0xFF5
 22117                           prodh	equ	0xFF4
 22118                           prodl	equ	0xFF3
 22119                           intcon	equ	0xFF2
 22120                           intcon2	equ	0xFF1
 22121                           intcon3	equ	0xFF0
 22122                           indf0	equ	0xFEF
 22123                           postinc0	equ	0xFEE
 22124                           plusw0	equ	0xFEB
 22125                           fsr0h	equ	0xFEA
 22126                           fsr0l	equ	0xFE9
 22127                           wreg	equ	0xFE8
 22128                           indf1	equ	0xFE7
 22129                           postinc1	equ	0xFE6
 22130                           postdec1	equ	0xFE5
 22131                           fsr1h	equ	0xFE2
 22132                           fsr1l	equ	0xFE1
 22133                           indf2	equ	0xFDF
 22134                           postinc2	equ	0xFDE
 22135                           postdec2	equ	0xFDD
 22136                           plusw2	equ	0xFDB
 22137                           fsr2h	equ	0xFDA
 22138                           fsr2l	equ	0xFD9
 22139                           status	equ	0xFD8
 22140                           
 22141 ;; *************** function _isSameAddress *****************
 22142 ;; Defined at:
 22143 ;;		line 3442 in file "src/miwi/miwi_mesh.c"
 22144 ;; Parameters:    Size  Location     Type
 22145 ;;  Address1        2    0[BANK1 ] PTR unsigned char 
 22146 ;;		 -> ConnectionTable(90), 
 22147 ;;  Address2        2    2[BANK1 ] PTR unsigned char 
 22148 ;;		 -> NULL(0), RxPacket.Payload(64), RxPacket(132), 
 22149 ;; Auto vars:     Size  Location     Type
 22150 ;;  i               1    6[BANK1 ] unsigned char 
 22151 ;; Return value:  Size  Location     Type
 22152 ;;                  1    wreg      unsigned char 
 22153 ;; Registers used:
 22154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22155 ;; Tracked objects:
 22156 ;;		On entry : 0/0
 22157 ;;		On exit  : 0/0
 22158 ;;		Unchanged: 0/0
 22159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22160 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22161 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22162 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22163 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22164 ;;Total ram usage:        7 bytes
 22165 ;; Hardware stack levels used:    1
 22166 ;; Hardware stack levels required when called:    9
 22167 ;; This function calls:
 22168 ;;		Nothing
 22169 ;; This function is called by:
 22170 ;;		_MiMAC_ReceivedPacket
 22171 ;; This function uses a non-reentrant model
 22172 ;;
 22173                           
 22174                           	psect	text68
 22175  016B72                     __ptext68:
 22176                           	opt stack 0
 22177  016B72                     _isSameAddress:
 22178                           	opt stack 15
 22179                           
 22180                           ;miwi_mesh.c: 3444: uint8_t i;
 22181                           ;miwi_mesh.c: 3446: for(i = 0; i < 4; i++)
 22182                           
 22183                           ; BSR set to: 1
 22184                           ;incstack = 0
 22185  016B72  0E00               	movlw	0
 22186  016B74  0101               	movlb	1	; () banked
 22187  016B76  6F90               	movwf	isSameAddress@i& (0+255),b
 22188  016B78                     l11455:
 22189                           
 22190                           ; BSR set to: 1
 22191  016B78  0E03               	movlw	3
 22192  016B7A  0101               	movlb	1	; () banked
 22193  016B7C  6590               	cpfsgt	isSameAddress@i& (0+255),b
 22194  016B7E  D001               	goto	l11459
 22195  016B80  D01F               	goto	l11469
 22196  016B82                     l11459:
 22197                           
 22198                           ; BSR set to: 1
 22199                           ;miwi_mesh.c: 3447: {
 22200                           ;miwi_mesh.c: 3448: if( Address1[i] != Address2[i] )
 22201  016B82  0101               	movlb	1	; () banked
 22202  016B84  5190               	movf	isSameAddress@i& (0+255),w,b
 22203  016B86  0D01               	mullw	1
 22204  016B88  50F3               	movf	prodl,w,c
 22205  016B8A  0101               	movlb	1	; () banked
 22206  016B8C  258C               	addwf	isSameAddress@Address2& (0+255),w,b
 22207  016B8E  6ED9               	movwf	fsr2l,c
 22208  016B90  50F4               	movf	prodh,w,c
 22209  016B92  0101               	movlb	1	; () banked
 22210  016B94  218D               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 22211  016B96  6EDA               	movwf	fsr2h,c
 22212  016B98  0101               	movlb	1	; () banked
 22213  016B9A  5190               	movf	isSameAddress@i& (0+255),w,b
 22214  016B9C  0D01               	mullw	1
 22215  016B9E  50F3               	movf	prodl,w,c
 22216  016BA0  0101               	movlb	1	; () banked
 22217  016BA2  258A               	addwf	isSameAddress@Address1& (0+255),w,b
 22218  016BA4  6EE1               	movwf	fsr1l,c
 22219  016BA6  50F4               	movf	prodh,w,c
 22220  016BA8  0101               	movlb	1	; () banked
 22221  016BAA  218B               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 22222  016BAC  6EE2               	movwf	fsr1h,c
 22223  016BAE  50DE               	movf	postinc2,w,c
 22224  016BB0  18E6               	xorwf	postinc1,w,c
 22225  016BB2  B4D8               	btfsc	status,2,c
 22226  016BB4  D002               	goto	l11465
 22227                           
 22228                           ; BSR set to: 1
 22229                           ;miwi_mesh.c: 3449: {
 22230                           ;miwi_mesh.c: 3450: return 0;
 22231  016BB6  0E00               	movlw	0
 22232                           
 22233                           ; BSR set to: 1
 22234  016BB8  0012               	return	
 22235  016BBA                     l11465:
 22236                           
 22237                           ; BSR set to: 1
 22238  016BBA  0101               	movlb	1	; () banked
 22239  016BBC  2B90               	incf	isSameAddress@i& (0+255),f,b
 22240  016BBE  D7DC               	goto	l11455
 22241  016BC0                     l11469:
 22242                           
 22243                           ; BSR set to: 1
 22244                           ;miwi_mesh.c: 3451: }
 22245                           ;miwi_mesh.c: 3452: }
 22246                           ;miwi_mesh.c: 3453: return 1;
 22247  016BC0  0E01               	movlw	1
 22248  016BC2  0012               	return	
 22249  016BC4                     __end_of_isSameAddress:
 22250                           	opt stack 0
 22251                           tblptru	equ	0xFF8
 22252                           tblptrh	equ	0xFF7
 22253                           tblptrl	equ	0xFF6
 22254                           tablat	equ	0xFF5
 22255                           prodh	equ	0xFF4
 22256                           prodl	equ	0xFF3
 22257                           intcon	equ	0xFF2
 22258                           intcon2	equ	0xFF1
 22259                           intcon3	equ	0xFF0
 22260                           indf0	equ	0xFEF
 22261                           postinc0	equ	0xFEE
 22262                           plusw0	equ	0xFEB
 22263                           fsr0h	equ	0xFEA
 22264                           fsr0l	equ	0xFE9
 22265                           wreg	equ	0xFE8
 22266                           indf1	equ	0xFE7
 22267                           postinc1	equ	0xFE6
 22268                           postdec1	equ	0xFE5
 22269                           fsr1h	equ	0xFE2
 22270                           fsr1l	equ	0xFE1
 22271                           indf2	equ	0xFDF
 22272                           postinc2	equ	0xFDE
 22273                           postdec2	equ	0xFDD
 22274                           plusw2	equ	0xFDB
 22275                           fsr2h	equ	0xFDA
 22276                           fsr2l	equ	0xFD9
 22277                           status	equ	0xFD8
 22278                           
 22279 ;; *************** function _MiWi_TickGet *****************
 22280 ;; Defined at:
 22281 ;;		line 104 in file "src/18F27J53/symbol.c"
 22282 ;; Parameters:    Size  Location     Type
 22283 ;;		None
 22284 ;; Auto vars:     Size  Location     Type
 22285 ;;  currentTime     4    6[BANK1 ] struct _MIWI_TICK
 22286 ;;  failureCount    1    5[BANK1 ] unsigned char 
 22287 ;; Return value:  Size  Location     Type
 22288 ;;                  4    0[BANK1 ] struct _MIWI_TICK
 22289 ;; Registers used:
 22290 ;;		wreg, status,2, status,0
 22291 ;; Tracked objects:
 22292 ;;		On entry : 0/0
 22293 ;;		On exit  : 0/0
 22294 ;;		Unchanged: 0/0
 22295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22296 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22297 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22298 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22299 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22300 ;;Total ram usage:       10 bytes
 22301 ;; Hardware stack levels used:    1
 22302 ;; Hardware stack levels required when called:    9
 22303 ;; This function calls:
 22304 ;;		Nothing
 22305 ;; This function is called by:
 22306 ;;		_TxPacket
 22307 ;;		_MiMAC_ReceivedPacket
 22308 ;;		_MiWiTasks
 22309 ;;		_OpenSocket
 22310 ;;		_MiApp_SearchConnection
 22311 ;;		_MiApp_EstablishConnection
 22312 ;;		_MiApp_UnicastAddress
 22313 ;;		_BroadcastJitter
 22314 ;;		_MiApp_UnicastConnection
 22315 ;; This function uses a non-reentrant model
 22316 ;;
 22317                           
 22318                           	psect	text69
 22319  01683C                     __ptext69:
 22320                           	opt stack 0
 22321  01683C                     _MiWi_TickGet:
 22322                           	opt stack 18
 22323                           
 22324                           ;symbol.c: 106: MIWI_TICK currentTime;
 22325                           ;symbol.c: 109: uint8_t failureCounter;
 22326                           ;symbol.c: 112: PIE1bits.TMR1IE = 0;
 22327                           
 22328                           ; BSR set to: 1
 22329                           ;incstack = 0
 22330  01683C  909D               	bcf	3997,0,c	;volatile
 22331                           
 22332                           ;symbol.c: 115: currentTime.byte.b2 = 0;
 22333  01683E  0E00               	movlw	0
 22334  016840  0101               	movlb	1	; () banked
 22335  016842  6F92               	movwf	(MiWi_TickGet@currentTime+2)& (0+255),b
 22336                           
 22337                           ;symbol.c: 116: currentTime.byte.b3 = 0;
 22338  016844  0E00               	movlw	0
 22339  016846  0101               	movlb	1	; () banked
 22340  016848  6F93               	movwf	(MiWi_TickGet@currentTime+3)& (0+255),b
 22341                           
 22342                           ;symbol.c: 118: failureCounter = 0;
 22343  01684A  0E00               	movlw	0
 22344  01684C  0101               	movlb	1	; () banked
 22345  01684E  6F8F               	movwf	MiWi_TickGet@failureCounter& (0+255),b
 22346  016850                     l11191:
 22347                           
 22348                           ; BSR set to: 1
 22349                           ;symbol.c: 121: {
 22350                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 22351  016850  CFCE F190          	movff	4046,MiWi_TickGet@currentTime	;volatile
 22352                           
 22353                           ; BSR set to: 1
 22354                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 22355  016854  CFCF F191          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 22356                           
 22357                           ; BSR set to: 1
 22358                           ;symbol.c: 124: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 22359  016858  0101               	movlb	1	; () banked
 22360  01685A  2990               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 22361  01685C  E10D               	bnz	l62
 22362  01685E  0101               	movlb	1	; () banked
 22363  016860  2991               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 22364  016862  A4D8               	btfss	status,2,c
 22365  016864  D009               	goto	l62
 22366                           
 22367                           ; BSR set to: 1
 22368  016866  0101               	movlb	1	; () banked
 22369  016868  2B8F               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 22370  01686A  058F               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 22371  01686C  0101               	movlb	1	; () banked
 22372  01686E  6F8E               	movwf	??_MiWi_TickGet& (0+255),b
 22373  016870  0E02               	movlw	2
 22374  016872  0101               	movlb	1	; () banked
 22375  016874  658E               	cpfsgt	??_MiWi_TickGet& (0+255),b
 22376  016876  D7EC               	goto	l11191
 22377  016878                     l62:
 22378                           
 22379                           ; BSR set to: 1
 22380                           ;symbol.c: 128: if(PIR1bits.TMR1IF)
 22381  016878  A09E               	btfss	3998,0,c	;volatile
 22382  01687A  D008               	goto	l11205
 22383                           
 22384                           ; BSR set to: 1
 22385                           ;symbol.c: 129: {
 22386                           ;symbol.c: 131: {
 22387                           ;symbol.c: 134: currentTime.byte.b2++;
 22388  01687C  0101               	movlb	1	; () banked
 22389  01687E  2B92               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 22390                           
 22391                           ; BSR set to: 1
 22392                           ;symbol.c: 135: if(timerExtension1 == 0xFF)
 22393  016880  0100               	movlb	0	; () banked
 22394  016882  29BE               	incf	_timerExtension1& (0+255),w,b	;volatile
 22395  016884  A4D8               	btfss	status,2,c
 22396  016886  D002               	goto	l11205
 22397                           
 22398                           ; BSR set to: 0
 22399                           ;symbol.c: 136: {
 22400                           ;symbol.c: 137: currentTime.byte.b3++;
 22401  016888  0101               	movlb	1	; () banked
 22402  01688A  2B93               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 22403  01688C                     l11205:
 22404                           
 22405                           ;symbol.c: 138: }
 22406                           ;symbol.c: 139: }
 22407                           ;symbol.c: 140: }
 22408                           ;symbol.c: 143: currentTime.byte.b2 += timerExtension1;
 22409  01688C  0100               	movlb	0	; () banked
 22410  01688E  51BE               	movf	_timerExtension1& (0+255),w,b	;volatile
 22411  016890  0101               	movlb	1	; () banked
 22412  016892  2792               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 22413                           
 22414                           ; BSR set to: 1
 22415                           ;symbol.c: 144: currentTime.byte.b3 += timerExtension2;
 22416  016894  0100               	movlb	0	; () banked
 22417  016896  51BF               	movf	_timerExtension2& (0+255),w,b	;volatile
 22418  016898  0101               	movlb	1	; () banked
 22419  01689A  2793               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 22420                           
 22421                           ; BSR set to: 1
 22422                           ;symbol.c: 147: PIE1bits.TMR1IE = 1;
 22423  01689C  809D               	bsf	3997,0,c	;volatile
 22424                           
 22425                           ; BSR set to: 1
 22426                           ;symbol.c: 149: return currentTime;
 22427  01689E  C190  F18A         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 22428  0168A2  C191  F18B         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 22429  0168A6  C192  F18C         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 22430  0168AA  C193  F18D         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 22431  0168AE  0012               	return	
 22432  0168B0                     __end_of_MiWi_TickGet:
 22433                           	opt stack 0
 22434                           tblptru	equ	0xFF8
 22435                           tblptrh	equ	0xFF7
 22436                           tblptrl	equ	0xFF6
 22437                           tablat	equ	0xFF5
 22438                           prodh	equ	0xFF4
 22439                           prodl	equ	0xFF3
 22440                           intcon	equ	0xFF2
 22441                           intcon2	equ	0xFF1
 22442                           intcon3	equ	0xFF0
 22443                           indf0	equ	0xFEF
 22444                           postinc0	equ	0xFEE
 22445                           plusw0	equ	0xFEB
 22446                           fsr0h	equ	0xFEA
 22447                           fsr0l	equ	0xFE9
 22448                           wreg	equ	0xFE8
 22449                           indf1	equ	0xFE7
 22450                           postinc1	equ	0xFE6
 22451                           postdec1	equ	0xFE5
 22452                           fsr1h	equ	0xFE2
 22453                           fsr1l	equ	0xFE1
 22454                           indf2	equ	0xFDF
 22455                           postinc2	equ	0xFDE
 22456                           postdec2	equ	0xFDD
 22457                           plusw2	equ	0xFDB
 22458                           fsr2h	equ	0xFDA
 22459                           fsr2l	equ	0xFD9
 22460                           status	equ	0xFD8
 22461                           
 22462 ;; *************** function _CCM_Dec *****************
 22463 ;; Defined at:
 22464 ;;		line 299 in file "src/miwi/drv_mrf_miwi_security.c"
 22465 ;; Parameters:    Size  Location     Type
 22466 ;;  text            2   36[BANK1 ] PTR unsigned char 
 22467 ;;		 -> RxPacket.Payload(64), RxPacket(132), 
 22468 ;;  headerLen       1   38[BANK1 ] unsigned char 
 22469 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 22470 ;;  key             2   40[BANK1 ] PTR unsigned char 
 22471 ;;		 -> key(8), 
 22472 ;; Auto vars:     Size  Location     Type
 22473 ;;  i               1   50[BANK1 ] unsigned char 
 22474 ;; Return value:  Size  Location     Type
 22475 ;;                  1    wreg      unsigned char 
 22476 ;; Registers used:
 22477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22478 ;; Tracked objects:
 22479 ;;		On entry : 0/0
 22480 ;;		On exit  : 0/0
 22481 ;;		Unchanged: 0/0
 22482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22483 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22484 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22485 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22486 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22487 ;;Total ram usage:       15 bytes
 22488 ;; Hardware stack levels used:    1
 22489 ;; Hardware stack levels required when called:   11
 22490 ;; This function calls:
 22491 ;;		_CBC_MAC
 22492 ;;		_CTR
 22493 ;; This function is called by:
 22494 ;;		_MiMAC_ReceivedPacket
 22495 ;; This function uses a non-reentrant model
 22496 ;;
 22497                           
 22498                           	psect	text70
 22499  0148B2                     __ptext70:
 22500                           	opt stack 0
 22501  0148B2                     _CCM_Dec:
 22502                           	opt stack 13
 22503                           
 22504                           ;drv_mrf_miwi_security.c: 301: uint8_t i;
 22505                           ;drv_mrf_miwi_security.c: 308: for(i = 0; i < 4-1; i++)
 22506                           
 22507                           ; BSR set to: 1
 22508                           ;incstack = 0
 22509  0148B2  0E00               	movlw	0
 22510  0148B4  0101               	movlb	1	; () banked
 22511  0148B6  6FBC               	movwf	CCM_Dec@i& (0+255),b
 22512  0148B8                     l11475:
 22513                           
 22514                           ; BSR set to: 1
 22515  0148B8  0E02               	movlw	2
 22516  0148BA  0101               	movlb	1	; () banked
 22517  0148BC  65BC               	cpfsgt	CCM_Dec@i& (0+255),b
 22518  0148BE  D001               	goto	l11479
 22519  0148C0  D02D               	goto	l11489
 22520  0148C2                     l11479:
 22521                           
 22522                           ; BSR set to: 1
 22523                           ;drv_mrf_miwi_security.c: 309: {
 22524                           ;drv_mrf_miwi_security.c: 310: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 22525  0148C2  0101               	movlb	1	; () banked
 22526  0148C4  51B0               	movf	CCM_Dec@headerLen& (0+255),w,b
 22527  0148C6  0101               	movlb	1	; () banked
 22528  0148C8  5DBC               	subwf	CCM_Dec@i& (0+255),w,b
 22529  0148CA  A0D8               	btfss	status,0,c
 22530  0148CC  D006               	goto	l11483
 22531                           
 22532                           ; BSR set to: 1
 22533  0148CE  0E00               	movlw	0
 22534  0148D0  0101               	movlb	1	; () banked
 22535  0148D2  6FBB               	movwf	(_CCM_Dec$2093+1)& (0+255),b
 22536  0148D4  0E00               	movlw	0
 22537  0148D6  6FBA               	movwf	_CCM_Dec$2093& (0+255),b
 22538  0148D8  D013               	goto	l477
 22539  0148DA                     l11483:
 22540                           
 22541                           ; BSR set to: 1
 22542  0148DA  0101               	movlb	1	; () banked
 22543  0148DC  51BC               	movf	CCM_Dec@i& (0+255),w,b
 22544  0148DE  0D01               	mullw	1
 22545  0148E0  50F3               	movf	prodl,w,c
 22546  0148E2  0101               	movlb	1	; () banked
 22547  0148E4  25AE               	addwf	CCM_Dec@text& (0+255),w,b
 22548  0148E6  6ED9               	movwf	fsr2l,c
 22549  0148E8  50F4               	movf	prodh,w,c
 22550  0148EA  0101               	movlb	1	; () banked
 22551  0148EC  21AF               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 22552  0148EE  6EDA               	movwf	fsr2h,c
 22553  0148F0  50DF               	movf	indf2,w,c
 22554  0148F2  0101               	movlb	1	; () banked
 22555  0148F4  6FB4               	movwf	??_CCM_Dec& (0+255),b
 22556  0148F6  0101               	movlb	1	; () banked
 22557  0148F8  51B4               	movf	??_CCM_Dec& (0+255),w,b
 22558  0148FA  0101               	movlb	1	; () banked
 22559  0148FC  6FBA               	movwf	_CCM_Dec$2093& (0+255),b
 22560  0148FE  6BBB               	clrf	(_CCM_Dec$2093+1)& (0+255),b
 22561  014900                     l477:
 22562                           
 22563                           ; BSR set to: 1
 22564  014900  0101               	movlb	1	; () banked
 22565  014902  51BC               	movf	CCM_Dec@i& (0+255),w,b
 22566  014904  0D01               	mullw	1
 22567  014906  0ECC               	movlw	low _tmpBlock
 22568  014908  24F3               	addwf	prodl,w,c
 22569  01490A  6ED9               	movwf	fsr2l,c
 22570  01490C  0E00               	movlw	high _tmpBlock
 22571  01490E  20F4               	addwfc	prodh,w,c
 22572  014910  6EDA               	movwf	fsr2h,c
 22573  014912  C1BA  FFDF         	movff	_CCM_Dec$2093,indf2
 22574                           
 22575                           ; BSR set to: 1
 22576  014916  0101               	movlb	1	; () banked
 22577  014918  2BBC               	incf	CCM_Dec@i& (0+255),f,b
 22578  01491A  D7CE               	goto	l11475
 22579  01491C                     l11489:
 22580                           
 22581                           ; BSR set to: 1
 22582                           ;drv_mrf_miwi_security.c: 311: }
 22583                           ;drv_mrf_miwi_security.c: 312: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
 22584  01491C  0101               	movlb	1	; () banked
 22585  01491E  51B0               	movf	CCM_Dec@headerLen& (0+255),w,b
 22586  014920  0D01               	mullw	1
 22587  014922  50F3               	movf	prodl,w,c
 22588  014924  0101               	movlb	1	; () banked
 22589  014926  25AE               	addwf	CCM_Dec@text& (0+255),w,b
 22590  014928  0101               	movlb	1	; () banked
 22591  01492A  6FA1               	movwf	CTR@text& (0+255),b
 22592  01492C  50F4               	movf	prodh,w,c
 22593  01492E  0101               	movlb	1	; () banked
 22594  014930  21AF               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 22595  014932  0101               	movlb	1	; () banked
 22596  014934  6FA2               	movwf	(CTR@text+1)& (0+255),b
 22597  014936  C1B1  F1A3         	movff	CCM_Dec@payloadLen,CTR@len
 22598  01493A  C1B2  F1A4         	movff	CCM_Dec@key,CTR@key
 22599  01493E  C1B3  F1A5         	movff	CCM_Dec@key+1,CTR@key+1
 22600  014942  0ECC               	movlw	low _tmpBlock
 22601  014944  0101               	movlb	1	; () banked
 22602  014946  6FA6               	movwf	CTR@nounce& (0+255),b
 22603  014948  0E00               	movlw	high _tmpBlock
 22604  01494A  0101               	movlb	1	; () banked
 22605  01494C  6FA7               	movwf	(CTR@nounce+1)& (0+255),b
 22606  01494E  ECDE  F0A9         	call	_CTR	;wreg free
 22607                           
 22608                           ;drv_mrf_miwi_security.c: 314: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmpBlock
      +                          );
 22609  014952  C1AE  F1A1         	movff	CCM_Dec@text,CBC_MAC@text
 22610  014956  C1AF  F1A2         	movff	CCM_Dec@text+1,CBC_MAC@text+1
 22611  01495A  0101               	movlb	1	; () banked
 22612  01495C  51B0               	movf	CCM_Dec@headerLen& (0+255),w,b
 22613  01495E  0101               	movlb	1	; () banked
 22614  014960  25B1               	addwf	CCM_Dec@payloadLen& (0+255),w,b
 22615  014962  0FFE               	addlw	254
 22616  014964  0101               	movlb	1	; () banked
 22617  014966  6FA3               	movwf	CBC_MAC@len& (0+255),b
 22618  014968  C1B2  F1A4         	movff	CCM_Dec@key,CBC_MAC@key
 22619  01496C  C1B3  F1A5         	movff	CCM_Dec@key+1,CBC_MAC@key+1
 22620  014970  0ECC               	movlw	low _tmpBlock
 22621  014972  0101               	movlb	1	; () banked
 22622  014974  6FA6               	movwf	CBC_MAC@MIC& (0+255),b
 22623  014976  0E00               	movlw	high _tmpBlock
 22624  014978  0101               	movlb	1	; () banked
 22625  01497A  6FA7               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 22626  01497C  EC83  F0AB         	call	_CBC_MAC	;wreg free
 22627                           
 22628                           ;drv_mrf_miwi_security.c: 315: for(i = 0; i < 2; i++)
 22629  014980  0E00               	movlw	0
 22630  014982  0101               	movlb	1	; () banked
 22631  014984  6FBC               	movwf	CCM_Dec@i& (0+255),b
 22632  014986                     l11495:
 22633                           
 22634                           ; BSR set to: 1
 22635  014986  0E01               	movlw	1
 22636  014988  0101               	movlb	1	; () banked
 22637  01498A  65BC               	cpfsgt	CCM_Dec@i& (0+255),b
 22638  01498C  D001               	goto	l11499
 22639  01498E  D03A               	goto	l11509
 22640  014990                     l11499:
 22641                           
 22642                           ; BSR set to: 1
 22643                           ;drv_mrf_miwi_security.c: 316: {
 22644                           ;drv_mrf_miwi_security.c: 317: if( tmpBlock[i] != text[headerLen + payloadLen - 2 + i] )
 22645  014990  0EFE               	movlw	254
 22646  014992  0101               	movlb	1	; () banked
 22647  014994  6FB4               	movwf	??_CCM_Dec& (0+255),b
 22648  014996  0EFF               	movlw	255
 22649  014998  0101               	movlb	1	; () banked
 22650  01499A  6FB5               	movwf	(??_CCM_Dec+1)& (0+255),b
 22651  01499C  0101               	movlb	1	; () banked
 22652  01499E  51B1               	movf	CCM_Dec@payloadLen& (0+255),w,b
 22653  0149A0  C1B0  F1B6         	movff	CCM_Dec@headerLen,??_CCM_Dec+2
 22654  0149A4  0101               	movlb	1	; () banked
 22655  0149A6  6BB7               	clrf	(??_CCM_Dec+3)& (0+255),b
 22656  0149A8  0101               	movlb	1	; () banked
 22657  0149AA  27B6               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22658  0149AC  0E00               	movlw	0
 22659  0149AE  23B7               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22660  0149B0  0101               	movlb	1	; () banked
 22661  0149B2  51BC               	movf	CCM_Dec@i& (0+255),w,b
 22662  0149B4  0101               	movlb	1	; () banked
 22663  0149B6  27B6               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22664  0149B8  0E00               	movlw	0
 22665  0149BA  23B7               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22666  0149BC  0101               	movlb	1	; () banked
 22667  0149BE  51B4               	movf	??_CCM_Dec& (0+255),w,b
 22668  0149C0  0101               	movlb	1	; () banked
 22669  0149C2  27B6               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 22670  0149C4  0101               	movlb	1	; () banked
 22671  0149C6  51B5               	movf	(??_CCM_Dec+1)& (0+255),w,b
 22672  0149C8  0101               	movlb	1	; () banked
 22673  0149CA  23B7               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 22674  0149CC  0101               	movlb	1	; () banked
 22675  0149CE  51B6               	movf	(??_CCM_Dec+2)& (0+255),w,b
 22676  0149D0  0101               	movlb	1	; () banked
 22677  0149D2  25AE               	addwf	CCM_Dec@text& (0+255),w,b
 22678  0149D4  6ED9               	movwf	fsr2l,c
 22679  0149D6  0101               	movlb	1	; () banked
 22680  0149D8  51B7               	movf	(??_CCM_Dec+3)& (0+255),w,b
 22681  0149DA  0101               	movlb	1	; () banked
 22682  0149DC  21AF               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 22683  0149DE  6EDA               	movwf	fsr2h,c
 22684  0149E0  0101               	movlb	1	; () banked
 22685  0149E2  51BC               	movf	CCM_Dec@i& (0+255),w,b
 22686  0149E4  0D01               	mullw	1
 22687  0149E6  0ECC               	movlw	low _tmpBlock
 22688  0149E8  24F3               	addwf	prodl,w,c
 22689  0149EA  6EE1               	movwf	fsr1l,c
 22690  0149EC  0E00               	movlw	high _tmpBlock
 22691  0149EE  20F4               	addwfc	prodh,w,c
 22692  0149F0  6EE2               	movwf	fsr1h,c
 22693  0149F2  50DE               	movf	postinc2,w,c
 22694  0149F4  18E6               	xorwf	postinc1,w,c
 22695  0149F6  B4D8               	btfsc	status,2,c
 22696  0149F8  D002               	goto	l11505
 22697                           
 22698                           ; BSR set to: 1
 22699                           ;drv_mrf_miwi_security.c: 318: {
 22700                           ;drv_mrf_miwi_security.c: 322: return 0;
 22701  0149FA  0E00               	movlw	0
 22702                           
 22703                           ; BSR set to: 1
 22704  0149FC  0012               	return	
 22705  0149FE                     l11505:
 22706                           
 22707                           ; BSR set to: 1
 22708  0149FE  0101               	movlb	1	; () banked
 22709  014A00  2BBC               	incf	CCM_Dec@i& (0+255),f,b
 22710  014A02  D7C1               	goto	l11495
 22711  014A04                     l11509:
 22712                           
 22713                           ; BSR set to: 1
 22714                           ;drv_mrf_miwi_security.c: 323: }
 22715                           ;drv_mrf_miwi_security.c: 324: }
 22716                           ;drv_mrf_miwi_security.c: 328: return 1;
 22717  014A04  0E01               	movlw	1
 22718  014A06  0012               	return	
 22719  014A08                     __end_of_CCM_Dec:
 22720                           	opt stack 0
 22721                           tblptru	equ	0xFF8
 22722                           tblptrh	equ	0xFF7
 22723                           tblptrl	equ	0xFF6
 22724                           tablat	equ	0xFF5
 22725                           prodh	equ	0xFF4
 22726                           prodl	equ	0xFF3
 22727                           intcon	equ	0xFF2
 22728                           intcon2	equ	0xFF1
 22729                           intcon3	equ	0xFF0
 22730                           indf0	equ	0xFEF
 22731                           postinc0	equ	0xFEE
 22732                           plusw0	equ	0xFEB
 22733                           fsr0h	equ	0xFEA
 22734                           fsr0l	equ	0xFE9
 22735                           wreg	equ	0xFE8
 22736                           indf1	equ	0xFE7
 22737                           postinc1	equ	0xFE6
 22738                           postdec1	equ	0xFE5
 22739                           fsr1h	equ	0xFE2
 22740                           fsr1l	equ	0xFE1
 22741                           indf2	equ	0xFDF
 22742                           postinc2	equ	0xFDE
 22743                           postdec2	equ	0xFDD
 22744                           plusw2	equ	0xFDB
 22745                           fsr2h	equ	0xFDA
 22746                           fsr2l	equ	0xFD9
 22747                           status	equ	0xFD8
 22748                           
 22749 ;; *************** function _CTR *****************
 22750 ;; Defined at:
 22751 ;;		line 118 in file "src/miwi/drv_mrf_miwi_security.c"
 22752 ;; Parameters:    Size  Location     Type
 22753 ;;  text            2   23[BANK1 ] PTR unsigned char 
 22754 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 22755 ;;  len             1   25[BANK1 ] unsigned char 
 22756 ;;  key             2   26[BANK1 ] PTR unsigned char 
 22757 ;;		 -> key(8), 
 22758 ;;  nounce          2   28[BANK1 ] PTR unsigned char 
 22759 ;;		 -> tmpBlock(4), 
 22760 ;; Auto vars:     Size  Location     Type
 22761 ;;  j               1   35[BANK1 ] unsigned char 
 22762 ;;  i               1   34[BANK1 ] unsigned char 
 22763 ;;  block           1   33[BANK1 ] unsigned char 
 22764 ;; Return value:  Size  Location     Type
 22765 ;;		None               void
 22766 ;; Registers used:
 22767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22768 ;; Tracked objects:
 22769 ;;		On entry : 0/0
 22770 ;;		On exit  : 0/0
 22771 ;;		Unchanged: 0/0
 22772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22773 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22774 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22775 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22776 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22777 ;;Total ram usage:       13 bytes
 22778 ;; Hardware stack levels used:    1
 22779 ;; Hardware stack levels required when called:   10
 22780 ;; This function calls:
 22781 ;;		___awdiv
 22782 ;;		_encode
 22783 ;; This function is called by:
 22784 ;;		_CCM_Enc
 22785 ;;		_CCM_Dec
 22786 ;; This function uses a non-reentrant model
 22787 ;;
 22788                           
 22789                           	psect	text71
 22790  0153BC                     __ptext71:
 22791                           	opt stack 0
 22792  0153BC                     _CTR:
 22793                           	opt stack 15
 22794                           
 22795                           ;drv_mrf_miwi_security.c: 120: uint8_t block = len/4+1;
 22796                           
 22797                           ; BSR set to: 1
 22798                           ;incstack = 0
 22799  0153BC  C1A3  F18A         	movff	CTR@len,___awdiv@dividend
 22800  0153C0  0101               	movlb	1	; () banked
 22801  0153C2  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
 22802  0153C4  0E00               	movlw	0
 22803  0153C6  0101               	movlb	1	; () banked
 22804  0153C8  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
 22805  0153CA  0E04               	movlw	4
 22806  0153CC  6F8C               	movwf	___awdiv@divisor& (0+255),b
 22807  0153CE  EC04  F0AF         	call	___awdiv	;wreg free
 22808  0153D2  0101               	movlb	1	; () banked
 22809  0153D4  298A               	incf	?___awdiv& (0+255),w,b
 22810  0153D6  0101               	movlb	1	; () banked
 22811  0153D8  6FAB               	movwf	CTR@block& (0+255),b
 22812                           
 22813                           ; BSR set to: 1
 22814                           ;drv_mrf_miwi_security.c: 121: uint8_t i, j;
 22815                           ;drv_mrf_miwi_security.c: 128: for(i = 0; i < block; i++)
 22816  0153DA  0E00               	movlw	0
 22817  0153DC  0101               	movlb	1	; () banked
 22818  0153DE  6FAC               	movwf	CTR@i& (0+255),b
 22819  0153E0  D076               	goto	l11305
 22820  0153E2                     l11273:
 22821                           
 22822                           ; BSR set to: 1
 22823                           ;drv_mrf_miwi_security.c: 129: {
 22824                           ;drv_mrf_miwi_security.c: 130: for(j = 0; j < 4-1; j++)
 22825  0153E2  0E00               	movlw	0
 22826  0153E4  0101               	movlb	1	; () banked
 22827  0153E6  6FAD               	movwf	CTR@j& (0+255),b
 22828  0153E8                     l11275:
 22829                           
 22830                           ; BSR set to: 1
 22831  0153E8  0E02               	movlw	2
 22832  0153EA  0101               	movlb	1	; () banked
 22833  0153EC  65AD               	cpfsgt	CTR@j& (0+255),b
 22834  0153EE  D001               	goto	l11279
 22835  0153F0  D019               	goto	l442
 22836  0153F2                     l11279:
 22837                           
 22838                           ; BSR set to: 1
 22839                           ;drv_mrf_miwi_security.c: 131: {
 22840                           ;drv_mrf_miwi_security.c: 132: tmpBlock[j] = nounce[j];
 22841  0153F2  0101               	movlb	1	; () banked
 22842  0153F4  51AD               	movf	CTR@j& (0+255),w,b
 22843  0153F6  0D01               	mullw	1
 22844  0153F8  50F3               	movf	prodl,w,c
 22845  0153FA  0101               	movlb	1	; () banked
 22846  0153FC  25A6               	addwf	CTR@nounce& (0+255),w,b
 22847  0153FE  6ED9               	movwf	fsr2l,c
 22848  015400  50F4               	movf	prodh,w,c
 22849  015402  0101               	movlb	1	; () banked
 22850  015404  21A7               	addwfc	(CTR@nounce+1)& (0+255),w,b
 22851  015406  6EDA               	movwf	fsr2h,c
 22852  015408  0101               	movlb	1	; () banked
 22853  01540A  51AD               	movf	CTR@j& (0+255),w,b
 22854  01540C  0D01               	mullw	1
 22855  01540E  0ECC               	movlw	low _tmpBlock
 22856  015410  24F3               	addwf	prodl,w,c
 22857  015412  6EE1               	movwf	fsr1l,c
 22858  015414  0E00               	movlw	high _tmpBlock
 22859  015416  20F4               	addwfc	prodh,w,c
 22860  015418  6EE2               	movwf	fsr1h,c
 22861  01541A  CFDF FFE7          	movff	indf2,indf1
 22862                           
 22863                           ; BSR set to: 1
 22864  01541E  0101               	movlb	1	; () banked
 22865  015420  2BAD               	incf	CTR@j& (0+255),f,b
 22866  015422  D7E2               	goto	l11275
 22867  015424                     l442:
 22868                           
 22869                           ; BSR set to: 1
 22870                           ;drv_mrf_miwi_security.c: 133: }
 22871                           ;drv_mrf_miwi_security.c: 134: tmpBlock[4-1] = i;
 22872  015424  C1AC  F0CF         	movff	CTR@i,_tmpBlock+3
 22873                           
 22874                           ; BSR set to: 1
 22875                           ;drv_mrf_miwi_security.c: 135: encode((uint16_t *)tmpBlock, (uint16_t *)key);
 22876  015428  0ECC               	movlw	low _tmpBlock
 22877  01542A  0101               	movlb	1	; () banked
 22878  01542C  6F8A               	movwf	encode@text& (0+255),b
 22879  01542E  0E00               	movlw	high _tmpBlock
 22880  015430  0101               	movlb	1	; () banked
 22881  015432  6F8B               	movwf	(encode@text+1)& (0+255),b
 22882  015434  C1A4  F18C         	movff	CTR@key,encode@key
 22883  015438  C1A5  F18D         	movff	CTR@key+1,encode@key+1
 22884  01543C  ECF9  F09B         	call	_encode	;wreg free
 22885                           
 22886                           ;drv_mrf_miwi_security.c: 136: for(j = 0; j < 4; j++)
 22887  015440  0E00               	movlw	0
 22888  015442  0101               	movlb	1	; () banked
 22889  015444  6FAD               	movwf	CTR@j& (0+255),b
 22890  015446                     l11289:
 22891                           
 22892                           ; BSR set to: 1
 22893  015446  0E03               	movlw	3
 22894  015448  0101               	movlb	1	; () banked
 22895  01544A  65AD               	cpfsgt	CTR@j& (0+255),b
 22896  01544C  D001               	goto	l11293
 22897  01544E  D03D               	goto	l11303
 22898  015450                     l11293:
 22899                           
 22900                           ; BSR set to: 1
 22901                           ;drv_mrf_miwi_security.c: 137: {
 22902                           ;drv_mrf_miwi_security.c: 138: if( (i * 4 + j) >= len )
 22903  015450  0101               	movlb	1	; () banked
 22904  015452  51A3               	movf	CTR@len& (0+255),w,b
 22905  015454  0101               	movlb	1	; () banked
 22906  015456  6FA8               	movwf	??_CTR& (0+255),b
 22907  015458  6BA9               	clrf	(??_CTR+1)& (0+255),b
 22908  01545A  0101               	movlb	1	; () banked
 22909  01545C  51AC               	movf	CTR@i& (0+255),w,b
 22910  01545E  0D04               	mullw	4
 22911  015460  0101               	movlb	1	; () banked
 22912  015462  51AD               	movf	CTR@j& (0+255),w,b
 22913  015464  26F3               	addwf	prodl,f,c
 22914  015466  0E00               	movlw	0
 22915  015468  22F4               	addwfc	prodh,f,c
 22916  01546A  0101               	movlb	1	; () banked
 22917  01546C  51A8               	movf	??_CTR& (0+255),w,b
 22918  01546E  5CF3               	subwf	prodl,w,c
 22919  015470  50F4               	movf	prodh,w,c
 22920  015472  0A80               	xorlw	128
 22921  015474  0101               	movlb	1	; () banked
 22922  015476  6FAA               	movwf	(??_CTR+2)& (0+255),b
 22923  015478  0101               	movlb	1	; () banked
 22924  01547A  51A9               	movf	(??_CTR+1)& (0+255),w,b
 22925  01547C  0A80               	xorlw	128
 22926  01547E  0101               	movlb	1	; () banked
 22927  015480  59AA               	subwfb	(??_CTR+2)& (0+255),w,b
 22928  015482  B0D8               	btfsc	status,0,c
 22929  015484  D022               	goto	l11303
 22930                           
 22931                           ; BSR set to: 1
 22932                           ;drv_mrf_miwi_security.c: 141: }
 22933                           ;drv_mrf_miwi_security.c: 142: text[i * 4 + j] ^= tmpBlock[j];
 22934                           
 22935                           ; BSR set to: 1
 22936                           
 22937                           ; BSR set to: 1
 22938                           ;drv_mrf_miwi_security.c: 139: {
 22939                           ;drv_mrf_miwi_security.c: 140: break;
 22940  015486  0101               	movlb	1	; () banked
 22941  015488  51AD               	movf	CTR@j& (0+255),w,b
 22942  01548A  0D01               	mullw	1
 22943  01548C  0ECC               	movlw	low _tmpBlock
 22944  01548E  24F3               	addwf	prodl,w,c
 22945  015490  6ED9               	movwf	fsr2l,c
 22946  015492  0E00               	movlw	high _tmpBlock
 22947  015494  20F4               	addwfc	prodh,w,c
 22948  015496  6EDA               	movwf	fsr2h,c
 22949  015498  50DF               	movf	indf2,w,c
 22950  01549A  0101               	movlb	1	; () banked
 22951  01549C  6FA8               	movwf	??_CTR& (0+255),b
 22952  01549E  0101               	movlb	1	; () banked
 22953  0154A0  51AC               	movf	CTR@i& (0+255),w,b
 22954  0154A2  0D04               	mullw	4
 22955  0154A4  0101               	movlb	1	; () banked
 22956  0154A6  51AD               	movf	CTR@j& (0+255),w,b
 22957  0154A8  26F3               	addwf	prodl,f,c
 22958  0154AA  0E00               	movlw	0
 22959  0154AC  22F4               	addwfc	prodh,f,c
 22960  0154AE  50F3               	movf	prodl,w,c
 22961  0154B0  0101               	movlb	1	; () banked
 22962  0154B2  25A1               	addwf	CTR@text& (0+255),w,b
 22963  0154B4  6ED9               	movwf	fsr2l,c
 22964  0154B6  50F4               	movf	prodh,w,c
 22965  0154B8  0101               	movlb	1	; () banked
 22966  0154BA  21A2               	addwfc	(CTR@text+1)& (0+255),w,b
 22967  0154BC  6EDA               	movwf	fsr2h,c
 22968  0154BE  0101               	movlb	1	; () banked
 22969  0154C0  51A8               	movf	??_CTR& (0+255),w,b
 22970  0154C2  1ADF               	xorwf	indf2,f,c
 22971                           
 22972                           ; BSR set to: 1
 22973  0154C4  0101               	movlb	1	; () banked
 22974  0154C6  2BAD               	incf	CTR@j& (0+255),f,b
 22975  0154C8  D7BE               	goto	l11289
 22976  0154CA                     l11303:
 22977                           
 22978                           ; BSR set to: 1
 22979  0154CA  0101               	movlb	1	; () banked
 22980  0154CC  2BAC               	incf	CTR@i& (0+255),f,b
 22981  0154CE                     l11305:
 22982                           
 22983                           ; BSR set to: 1
 22984  0154CE  0101               	movlb	1	; () banked
 22985  0154D0  51AB               	movf	CTR@block& (0+255),w,b
 22986  0154D2  0101               	movlb	1	; () banked
 22987  0154D4  5DAC               	subwf	CTR@i& (0+255),w,b
 22988  0154D6  B0D8               	btfsc	status,0,c
 22989  0154D8  0012               	return	
 22990  0154DA  D783               	goto	l11273
 22991  0154DC                     __end_of_CTR:
 22992                           	opt stack 0
 22993                           tblptru	equ	0xFF8
 22994                           tblptrh	equ	0xFF7
 22995                           tblptrl	equ	0xFF6
 22996                           tablat	equ	0xFF5
 22997                           prodh	equ	0xFF4
 22998                           prodl	equ	0xFF3
 22999                           intcon	equ	0xFF2
 23000                           intcon2	equ	0xFF1
 23001                           intcon3	equ	0xFF0
 23002                           indf0	equ	0xFEF
 23003                           postinc0	equ	0xFEE
 23004                           plusw0	equ	0xFEB
 23005                           fsr0h	equ	0xFEA
 23006                           fsr0l	equ	0xFE9
 23007                           wreg	equ	0xFE8
 23008                           indf1	equ	0xFE7
 23009                           postinc1	equ	0xFE6
 23010                           postdec1	equ	0xFE5
 23011                           fsr1h	equ	0xFE2
 23012                           fsr1l	equ	0xFE1
 23013                           indf2	equ	0xFDF
 23014                           postinc2	equ	0xFDE
 23015                           postdec2	equ	0xFDD
 23016                           plusw2	equ	0xFDB
 23017                           fsr2h	equ	0xFDA
 23018                           fsr2l	equ	0xFD9
 23019                           status	equ	0xFD8
 23020                           
 23021 ;; *************** function _CBC_MAC *****************
 23022 ;; Defined at:
 23023 ;;		line 175 in file "src/miwi/drv_mrf_miwi_security.c"
 23024 ;; Parameters:    Size  Location     Type
 23025 ;;  text            2   23[BANK1 ] PTR unsigned char 
 23026 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 23027 ;;  len             1   25[BANK1 ] unsigned char 
 23028 ;;  key             2   26[BANK1 ] PTR unsigned char 
 23029 ;;		 -> key(8), 
 23030 ;;  MIC             2   28[BANK1 ] PTR unsigned char 
 23031 ;;		 -> tmpBlock(4), 
 23032 ;; Auto vars:     Size  Location     Type
 23033 ;;  i               1   35[BANK1 ] unsigned char 
 23034 ;;  j               1   34[BANK1 ] unsigned char 
 23035 ;;  block           1   33[BANK1 ] unsigned char 
 23036 ;; Return value:  Size  Location     Type
 23037 ;;		None               void
 23038 ;; Registers used:
 23039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23040 ;; Tracked objects:
 23041 ;;		On entry : 0/0
 23042 ;;		On exit  : 0/0
 23043 ;;		Unchanged: 0/0
 23044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23045 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23046 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23047 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23048 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23049 ;;Total ram usage:       13 bytes
 23050 ;; Hardware stack levels used:    1
 23051 ;; Hardware stack levels required when called:   10
 23052 ;; This function calls:
 23053 ;;		___awdiv
 23054 ;;		_encode
 23055 ;; This function is called by:
 23056 ;;		_CCM_Enc
 23057 ;;		_CCM_Dec
 23058 ;; This function uses a non-reentrant model
 23059 ;;
 23060                           
 23061                           	psect	text72
 23062  015706                     __ptext72:
 23063                           	opt stack 0
 23064  015706                     _CBC_MAC:
 23065                           	opt stack 15
 23066                           
 23067                           ;drv_mrf_miwi_security.c: 180: uint8_t block = len / 4 + 1;
 23068                           
 23069                           ; BSR set to: 1
 23070                           ;incstack = 0
 23071  015706  C1A3  F18A         	movff	CBC_MAC@len,___awdiv@dividend
 23072  01570A  0101               	movlb	1	; () banked
 23073  01570C  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
 23074  01570E  0E00               	movlw	0
 23075  015710  0101               	movlb	1	; () banked
 23076  015712  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
 23077  015714  0E04               	movlw	4
 23078  015716  6F8C               	movwf	___awdiv@divisor& (0+255),b
 23079  015718  EC04  F0AF         	call	___awdiv	;wreg free
 23080  01571C  0101               	movlb	1	; () banked
 23081  01571E  298A               	incf	?___awdiv& (0+255),w,b
 23082  015720  0101               	movlb	1	; () banked
 23083  015722  6FAB               	movwf	CBC_MAC@block& (0+255),b
 23084                           
 23085                           ; BSR set to: 1
 23086                           ;drv_mrf_miwi_security.c: 181: uint8_t i, j;
 23087                           ;drv_mrf_miwi_security.c: 188: for(i = 0; i < 4; i++)
 23088  015724  0E00               	movlw	0
 23089  015726  0101               	movlb	1	; () banked
 23090  015728  6FAD               	movwf	CBC_MAC@i& (0+255),b
 23091  01572A                     l11311:
 23092                           
 23093                           ; BSR set to: 1
 23094  01572A  0E03               	movlw	3
 23095  01572C  0101               	movlb	1	; () banked
 23096  01572E  65AD               	cpfsgt	CBC_MAC@i& (0+255),b
 23097  015730  D001               	goto	l11315
 23098  015732  D010               	goto	l11321
 23099  015734                     l11315:
 23100                           
 23101                           ; BSR set to: 1
 23102                           ;drv_mrf_miwi_security.c: 189: {
 23103                           ;drv_mrf_miwi_security.c: 190: MIC[i] = 0;
 23104  015734  0101               	movlb	1	; () banked
 23105  015736  51AD               	movf	CBC_MAC@i& (0+255),w,b
 23106  015738  0D01               	mullw	1
 23107  01573A  50F3               	movf	prodl,w,c
 23108  01573C  0101               	movlb	1	; () banked
 23109  01573E  25A6               	addwf	CBC_MAC@MIC& (0+255),w,b
 23110  015740  6ED9               	movwf	fsr2l,c
 23111  015742  50F4               	movf	prodh,w,c
 23112  015744  0101               	movlb	1	; () banked
 23113  015746  21A7               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 23114  015748  6EDA               	movwf	fsr2h,c
 23115  01574A  0E00               	movlw	0
 23116  01574C  6EDF               	movwf	indf2,c
 23117                           
 23118                           ; BSR set to: 1
 23119  01574E  0101               	movlb	1	; () banked
 23120  015750  2BAD               	incf	CBC_MAC@i& (0+255),f,b
 23121  015752  D7EB               	goto	l11311
 23122  015754                     l11321:
 23123                           
 23124                           ; BSR set to: 1
 23125                           ;drv_mrf_miwi_security.c: 191: }
 23126                           ;drv_mrf_miwi_security.c: 193: for(i = 0; i < block; i++)
 23127  015754  0E00               	movlw	0
 23128  015756  0101               	movlb	1	; () banked
 23129  015758  6FAD               	movwf	CBC_MAC@i& (0+255),b
 23130  01575A  D053               	goto	l11343
 23131  01575C                     l11323:
 23132                           
 23133                           ; BSR set to: 1
 23134                           ;drv_mrf_miwi_security.c: 194: {
 23135                           ;drv_mrf_miwi_security.c: 195: for(j = 0; j < 4; j++)
 23136  01575C  0E00               	movlw	0
 23137  01575E  0101               	movlb	1	; () banked
 23138  015760  6FAC               	movwf	CBC_MAC@j& (0+255),b
 23139  015762                     l11325:
 23140                           
 23141                           ; BSR set to: 1
 23142  015762  0E03               	movlw	3
 23143  015764  0101               	movlb	1	; () banked
 23144  015766  65AC               	cpfsgt	CBC_MAC@j& (0+255),b
 23145  015768  D001               	goto	l11329
 23146  01576A  D03F               	goto	l11339
 23147  01576C                     l11329:
 23148                           
 23149                           ; BSR set to: 1
 23150                           ;drv_mrf_miwi_security.c: 196: {
 23151                           ;drv_mrf_miwi_security.c: 197: if( (i * 4 + j) >= len )
 23152  01576C  0101               	movlb	1	; () banked
 23153  01576E  51A3               	movf	CBC_MAC@len& (0+255),w,b
 23154  015770  0101               	movlb	1	; () banked
 23155  015772  6FA8               	movwf	??_CBC_MAC& (0+255),b
 23156  015774  6BA9               	clrf	(??_CBC_MAC+1)& (0+255),b
 23157  015776  0101               	movlb	1	; () banked
 23158  015778  51AD               	movf	CBC_MAC@i& (0+255),w,b
 23159  01577A  0D04               	mullw	4
 23160  01577C  0101               	movlb	1	; () banked
 23161  01577E  51AC               	movf	CBC_MAC@j& (0+255),w,b
 23162  015780  26F3               	addwf	prodl,f,c
 23163  015782  0E00               	movlw	0
 23164  015784  22F4               	addwfc	prodh,f,c
 23165  015786  0101               	movlb	1	; () banked
 23166  015788  51A8               	movf	??_CBC_MAC& (0+255),w,b
 23167  01578A  5CF3               	subwf	prodl,w,c
 23168  01578C  50F4               	movf	prodh,w,c
 23169  01578E  0A80               	xorlw	128
 23170  015790  0101               	movlb	1	; () banked
 23171  015792  6FAA               	movwf	(??_CBC_MAC+2)& (0+255),b
 23172  015794  0101               	movlb	1	; () banked
 23173  015796  51A9               	movf	(??_CBC_MAC+1)& (0+255),w,b
 23174  015798  0A80               	xorlw	128
 23175  01579A  0101               	movlb	1	; () banked
 23176  01579C  59AA               	subwfb	(??_CBC_MAC+2)& (0+255),w,b
 23177  01579E  B0D8               	btfsc	status,0,c
 23178  0157A0  D024               	goto	l11339
 23179                           
 23180                           ; BSR set to: 1
 23181                           ;drv_mrf_miwi_security.c: 200: }
 23182                           ;drv_mrf_miwi_security.c: 201: MIC[j] ^= text[i * 4 + j];
 23183                           
 23184                           ; BSR set to: 1
 23185                           
 23186                           ; BSR set to: 1
 23187                           ;drv_mrf_miwi_security.c: 198: {
 23188                           ;drv_mrf_miwi_security.c: 199: break;
 23189  0157A2  0101               	movlb	1	; () banked
 23190  0157A4  51AD               	movf	CBC_MAC@i& (0+255),w,b
 23191  0157A6  0D04               	mullw	4
 23192  0157A8  0101               	movlb	1	; () banked
 23193  0157AA  51AC               	movf	CBC_MAC@j& (0+255),w,b
 23194  0157AC  26F3               	addwf	prodl,f,c
 23195  0157AE  0E00               	movlw	0
 23196  0157B0  22F4               	addwfc	prodh,f,c
 23197  0157B2  50F3               	movf	prodl,w,c
 23198  0157B4  0101               	movlb	1	; () banked
 23199  0157B6  25A1               	addwf	CBC_MAC@text& (0+255),w,b
 23200  0157B8  6ED9               	movwf	fsr2l,c
 23201  0157BA  50F4               	movf	prodh,w,c
 23202  0157BC  0101               	movlb	1	; () banked
 23203  0157BE  21A2               	addwfc	(CBC_MAC@text+1)& (0+255),w,b
 23204  0157C0  6EDA               	movwf	fsr2h,c
 23205  0157C2  50DF               	movf	indf2,w,c
 23206  0157C4  0101               	movlb	1	; () banked
 23207  0157C6  6FA8               	movwf	??_CBC_MAC& (0+255),b
 23208  0157C8  0101               	movlb	1	; () banked
 23209  0157CA  51AC               	movf	CBC_MAC@j& (0+255),w,b
 23210  0157CC  0D01               	mullw	1
 23211  0157CE  50F3               	movf	prodl,w,c
 23212  0157D0  0101               	movlb	1	; () banked
 23213  0157D2  25A6               	addwf	CBC_MAC@MIC& (0+255),w,b
 23214  0157D4  6ED9               	movwf	fsr2l,c
 23215  0157D6  50F4               	movf	prodh,w,c
 23216  0157D8  0101               	movlb	1	; () banked
 23217  0157DA  21A7               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 23218  0157DC  6EDA               	movwf	fsr2h,c
 23219  0157DE  0101               	movlb	1	; () banked
 23220  0157E0  51A8               	movf	??_CBC_MAC& (0+255),w,b
 23221  0157E2  1ADF               	xorwf	indf2,f,c
 23222                           
 23223                           ; BSR set to: 1
 23224  0157E4  0101               	movlb	1	; () banked
 23225  0157E6  2BAC               	incf	CBC_MAC@j& (0+255),f,b
 23226  0157E8  D7BC               	goto	l11325
 23227  0157EA                     l11339:
 23228                           
 23229                           ; BSR set to: 1
 23230                           ;drv_mrf_miwi_security.c: 202: }
 23231                           ;drv_mrf_miwi_security.c: 203: encode((uint16_t *)MIC, (uint16_t *)key);
 23232  0157EA  C1A6  F18A         	movff	CBC_MAC@MIC,encode@text
 23233  0157EE  C1A7  F18B         	movff	CBC_MAC@MIC+1,encode@text+1
 23234  0157F2  C1A4  F18C         	movff	CBC_MAC@key,encode@key
 23235  0157F6  C1A5  F18D         	movff	CBC_MAC@key+1,encode@key+1
 23236  0157FA  ECF9  F09B         	call	_encode	;wreg free
 23237  0157FE  0101               	movlb	1	; () banked
 23238  015800  2BAD               	incf	CBC_MAC@i& (0+255),f,b
 23239  015802                     l11343:
 23240                           
 23241                           ; BSR set to: 1
 23242  015802  0101               	movlb	1	; () banked
 23243  015804  51AB               	movf	CBC_MAC@block& (0+255),w,b
 23244  015806  0101               	movlb	1	; () banked
 23245  015808  5DAD               	subwf	CBC_MAC@i& (0+255),w,b
 23246  01580A  B0D8               	btfsc	status,0,c
 23247  01580C  0012               	return	
 23248  01580E  D7A6               	goto	l11323
 23249  015810                     __end_of_CBC_MAC:
 23250                           	opt stack 0
 23251                           tblptru	equ	0xFF8
 23252                           tblptrh	equ	0xFF7
 23253                           tblptrl	equ	0xFF6
 23254                           tablat	equ	0xFF5
 23255                           prodh	equ	0xFF4
 23256                           prodl	equ	0xFF3
 23257                           intcon	equ	0xFF2
 23258                           intcon2	equ	0xFF1
 23259                           intcon3	equ	0xFF0
 23260                           indf0	equ	0xFEF
 23261                           postinc0	equ	0xFEE
 23262                           plusw0	equ	0xFEB
 23263                           fsr0h	equ	0xFEA
 23264                           fsr0l	equ	0xFE9
 23265                           wreg	equ	0xFE8
 23266                           indf1	equ	0xFE7
 23267                           postinc1	equ	0xFE6
 23268                           postdec1	equ	0xFE5
 23269                           fsr1h	equ	0xFE2
 23270                           fsr1l	equ	0xFE1
 23271                           indf2	equ	0xFDF
 23272                           postinc2	equ	0xFDE
 23273                           postdec2	equ	0xFDD
 23274                           plusw2	equ	0xFDB
 23275                           fsr2h	equ	0xFDA
 23276                           fsr2l	equ	0xFD9
 23277                           status	equ	0xFD8
 23278                           
 23279 ;; *************** function _encode *****************
 23280 ;; Defined at:
 23281 ;;		line 77 in file "src/miwi/drv_mrf_miwi_security.c"
 23282 ;; Parameters:    Size  Location     Type
 23283 ;;  text            2    0[BANK1 ] PTR unsigned int 
 23284 ;;		 -> tmpBlock(4), 
 23285 ;;  key             2    2[BANK1 ] PTR unsigned int 
 23286 ;;		 -> key(8), 
 23287 ;; Auto vars:     Size  Location     Type
 23288 ;;  sum             2   21[BANK1 ] unsigned int 
 23289 ;;  part2           2   19[BANK1 ] unsigned int 
 23290 ;;  part1           2   17[BANK1 ] unsigned int 
 23291 ;;  delta           2   14[BANK1 ] unsigned int 
 23292 ;;  i               1   16[BANK1 ] unsigned char 
 23293 ;; Return value:  Size  Location     Type
 23294 ;;		None               void
 23295 ;; Registers used:
 23296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23297 ;; Tracked objects:
 23298 ;;		On entry : 0/0
 23299 ;;		On exit  : 0/0
 23300 ;;		Unchanged: 0/0
 23301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23302 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23303 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23304 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23305 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23306 ;;Total ram usage:       23 bytes
 23307 ;; Hardware stack levels used:    1
 23308 ;; Hardware stack levels required when called:    9
 23309 ;; This function calls:
 23310 ;;		Nothing
 23311 ;; This function is called by:
 23312 ;;		_CTR
 23313 ;;		_CBC_MAC
 23314 ;; This function uses a non-reentrant model
 23315 ;;
 23316                           
 23317                           	psect	text73
 23318  0137F2                     __ptext73:
 23319                           	opt stack 0
 23320  0137F2                     _encode:
 23321                           	opt stack 15
 23322                           
 23323                           ;drv_mrf_miwi_security.c: 79: uint16_t part1=text[0], part2=text[1];
 23324                           
 23325                           ; BSR set to: 1
 23326                           ;incstack = 0
 23327  0137F2  C18A  FFD9         	movff	encode@text,fsr2l
 23328  0137F6  C18B  FFDA         	movff	encode@text+1,fsr2h
 23329  0137FA  CFDE F19B          	movff	postinc2,encode@part1
 23330  0137FE  CFDD F19C          	movff	postdec2,encode@part1+1
 23331  013802  0101               	movlb	1	; () banked
 23332  013804  EE20 F002          	lfsr	2,2
 23333  013808  518A               	movf	encode@text& (0+255),w,b
 23334  01380A  26D9               	addwf	fsr2l,f,c
 23335  01380C  518B               	movf	(encode@text+1)& (0+255),w,b
 23336  01380E  22DA               	addwfc	fsr2h,f,c
 23337  013810  CFDE F19D          	movff	postinc2,encode@part2
 23338  013814  CFDD F19E          	movff	postdec2,encode@part2+1
 23339                           
 23340                           ; BSR set to: 1
 23341                           ;drv_mrf_miwi_security.c: 80: uint16_t sum=0, delta=0x9E37;
 23342  013818  0E00               	movlw	0
 23343  01381A  0101               	movlb	1	; () banked
 23344  01381C  6FA0               	movwf	(encode@sum+1)& (0+255),b
 23345  01381E  0E00               	movlw	0
 23346  013820  6F9F               	movwf	encode@sum& (0+255),b
 23347                           
 23348                           ; BSR set to: 1
 23349  013822  0E9E               	movlw	158
 23350  013824  0101               	movlb	1	; () banked
 23351  013826  6F99               	movwf	(encode@delta+1)& (0+255),b
 23352  013828  0E37               	movlw	55
 23353  01382A  6F98               	movwf	encode@delta& (0+255),b
 23354                           
 23355                           ; BSR set to: 1
 23356                           ;drv_mrf_miwi_security.c: 81: uint8_t i;
 23357                           ;drv_mrf_miwi_security.c: 83: for(i=0; i<32; i++)
 23358  01382C  0E00               	movlw	0
 23359  01382E  0101               	movlb	1	; () banked
 23360  013830  6F9A               	movwf	encode@i& (0+255),b
 23361  013832                     l11125:
 23362                           
 23363                           ; BSR set to: 1
 23364  013832  0E1F               	movlw	31
 23365  013834  0101               	movlb	1	; () banked
 23366  013836  659A               	cpfsgt	encode@i& (0+255),b
 23367  013838  D001               	goto	l11129
 23368  01383A  D0D4               	goto	l11139
 23369  01383C                     l11129:
 23370                           
 23371                           ; BSR set to: 1
 23372                           ;drv_mrf_miwi_security.c: 84: {
 23373                           ;drv_mrf_miwi_security.c: 85: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (sum + 
      +                          key[sum & 3]);
 23374  01383C  0E03               	movlw	3
 23375  01383E  0101               	movlb	1	; () banked
 23376  013840  159F               	andwf	encode@sum& (0+255),w,b
 23377  013842  0101               	movlb	1	; () banked
 23378  013844  6F8E               	movwf	??_encode& (0+255),b
 23379  013846  0E00               	movlw	0
 23380  013848  0101               	movlb	1	; () banked
 23381  01384A  15A0               	andwf	(encode@sum+1)& (0+255),w,b
 23382  01384C  0101               	movlb	1	; () banked
 23383  01384E  6F8F               	movwf	(??_encode+1)& (0+255),b
 23384  013850  90D8               	bcf	status,0,c
 23385  013852  0101               	movlb	1	; () banked
 23386  013854  378E               	rlcf	??_encode& (0+255),f,b
 23387  013856  378F               	rlcf	(??_encode+1)& (0+255),f,b
 23388  013858  0101               	movlb	1	; () banked
 23389  01385A  518E               	movf	??_encode& (0+255),w,b
 23390  01385C  0101               	movlb	1	; () banked
 23391  01385E  258C               	addwf	encode@key& (0+255),w,b
 23392  013860  6ED9               	movwf	fsr2l,c
 23393  013862  0101               	movlb	1	; () banked
 23394  013864  518F               	movf	(??_encode+1)& (0+255),w,b
 23395  013866  0101               	movlb	1	; () banked
 23396  013868  218D               	addwfc	(encode@key+1)& (0+255),w,b
 23397  01386A  6EDA               	movwf	fsr2h,c
 23398  01386C  CFDE F190          	movff	postinc2,??_encode+2
 23399  013870  CFDD F191          	movff	postdec2,??_encode+3
 23400  013874  0101               	movlb	1	; () banked
 23401  013876  519F               	movf	encode@sum& (0+255),w,b
 23402  013878  0101               	movlb	1	; () banked
 23403  01387A  2790               	addwf	(??_encode+2)& (0+255),f,b
 23404  01387C  0101               	movlb	1	; () banked
 23405  01387E  51A0               	movf	(encode@sum+1)& (0+255),w,b
 23406  013880  0101               	movlb	1	; () banked
 23407  013882  2391               	addwfc	(??_encode+3)& (0+255),f,b
 23408  013884  C19D  F192         	movff	encode@part2,??_encode+4
 23409  013888  C19E  F193         	movff	encode@part2+1,??_encode+5
 23410  01388C  0E05               	movlw	5
 23411  01388E  0101               	movlb	1	; () banked
 23412  013890  6F94               	movwf	(??_encode+6)& (0+255),b
 23413  013892                     u12495:
 23414  013892  0101               	movlb	1	; () banked
 23415  013894  90D8               	bcf	status,0,c
 23416  013896  3393               	rrcf	(??_encode+5)& (0+255),f,b
 23417  013898  3392               	rrcf	(??_encode+4)& (0+255),f,b
 23418  01389A  0101               	movlb	1	; () banked
 23419  01389C  2F94               	decfsz	(??_encode+6)& (0+255),f,b
 23420  01389E  D7F9               	goto	u12495
 23421  0138A0  C19D  F195         	movff	encode@part2,??_encode+7
 23422  0138A4  C19E  F196         	movff	encode@part2+1,??_encode+8
 23423  0138A8  0101               	movlb	1	; () banked
 23424  0138AA  3B95               	swapf	(??_encode+7)& (0+255),f,b
 23425  0138AC  3B96               	swapf	(??_encode+8)& (0+255),f,b
 23426  0138AE  0EF0               	movlw	240
 23427  0138B0  1796               	andwf	(??_encode+8)& (0+255),f,b
 23428  0138B2  5195               	movf	(??_encode+7)& (0+255),w,b
 23429  0138B4  0B0F               	andlw	15
 23430  0138B6  1396               	iorwf	(??_encode+8)& (0+255),f,b
 23431  0138B8  0EF0               	movlw	240
 23432  0138BA  1795               	andwf	(??_encode+7)& (0+255),f,b
 23433  0138BC  0101               	movlb	1	; () banked
 23434  0138BE  5192               	movf	(??_encode+4)& (0+255),w,b
 23435  0138C0  0101               	movlb	1	; () banked
 23436  0138C2  1B95               	xorwf	(??_encode+7)& (0+255),f,b
 23437  0138C4  0101               	movlb	1	; () banked
 23438  0138C6  5193               	movf	(??_encode+5)& (0+255),w,b
 23439  0138C8  0101               	movlb	1	; () banked
 23440  0138CA  1B96               	xorwf	(??_encode+8)& (0+255),f,b
 23441  0138CC  0101               	movlb	1	; () banked
 23442  0138CE  519D               	movf	encode@part2& (0+255),w,b
 23443  0138D0  0101               	movlb	1	; () banked
 23444  0138D2  2795               	addwf	(??_encode+7)& (0+255),f,b
 23445  0138D4  0101               	movlb	1	; () banked
 23446  0138D6  519E               	movf	(encode@part2+1)& (0+255),w,b
 23447  0138D8  0101               	movlb	1	; () banked
 23448  0138DA  2396               	addwfc	(??_encode+8)& (0+255),f,b
 23449  0138DC  0101               	movlb	1	; () banked
 23450  0138DE  5190               	movf	(??_encode+2)& (0+255),w,b
 23451  0138E0  0101               	movlb	1	; () banked
 23452  0138E2  1B95               	xorwf	(??_encode+7)& (0+255),f,b
 23453  0138E4  0101               	movlb	1	; () banked
 23454  0138E6  5191               	movf	(??_encode+3)& (0+255),w,b
 23455  0138E8  0101               	movlb	1	; () banked
 23456  0138EA  1B96               	xorwf	(??_encode+8)& (0+255),f,b
 23457  0138EC  0101               	movlb	1	; () banked
 23458  0138EE  5195               	movf	(??_encode+7)& (0+255),w,b
 23459  0138F0  0101               	movlb	1	; () banked
 23460  0138F2  279B               	addwf	encode@part1& (0+255),f,b
 23461  0138F4  0101               	movlb	1	; () banked
 23462  0138F6  5196               	movf	(??_encode+8)& (0+255),w,b
 23463  0138F8  0101               	movlb	1	; () banked
 23464  0138FA  239C               	addwfc	(encode@part1+1)& (0+255),f,b
 23465                           
 23466                           ; BSR set to: 1
 23467                           ;drv_mrf_miwi_security.c: 86: sum += delta;
 23468  0138FC  0101               	movlb	1	; () banked
 23469  0138FE  5198               	movf	encode@delta& (0+255),w,b
 23470  013900  0101               	movlb	1	; () banked
 23471  013902  279F               	addwf	encode@sum& (0+255),f,b
 23472  013904  0101               	movlb	1	; () banked
 23473  013906  5199               	movf	(encode@delta+1)& (0+255),w,b
 23474  013908  0101               	movlb	1	; () banked
 23475  01390A  23A0               	addwfc	(encode@sum+1)& (0+255),f,b
 23476                           
 23477                           ; BSR set to: 1
 23478                           ;drv_mrf_miwi_security.c: 87: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (sum + 
      +                          key[(sum>>11) & 3]);
 23479  01390C  C19F  F18E         	movff	encode@sum,??_encode
 23480  013910  C1A0  F18F         	movff	encode@sum+1,??_encode+1
 23481  013914  0E0B               	movlw	11
 23482  013916  0101               	movlb	1	; () banked
 23483  013918  6F90               	movwf	(??_encode+2)& (0+255),b
 23484  01391A                     u12505:
 23485  01391A  0101               	movlb	1	; () banked
 23486  01391C  90D8               	bcf	status,0,c
 23487  01391E  338F               	rrcf	(??_encode+1)& (0+255),f,b
 23488  013920  338E               	rrcf	??_encode& (0+255),f,b
 23489  013922  0101               	movlb	1	; () banked
 23490  013924  2F90               	decfsz	(??_encode+2)& (0+255),f,b
 23491  013926  D7F9               	goto	u12505
 23492  013928  0E03               	movlw	3
 23493  01392A  0101               	movlb	1	; () banked
 23494  01392C  178E               	andwf	??_encode& (0+255),f,b
 23495  01392E  0E00               	movlw	0
 23496  013930  178F               	andwf	(??_encode+1)& (0+255),f,b
 23497  013932  90D8               	bcf	status,0,c
 23498  013934  0101               	movlb	1	; () banked
 23499  013936  378E               	rlcf	??_encode& (0+255),f,b
 23500  013938  378F               	rlcf	(??_encode+1)& (0+255),f,b
 23501  01393A  0101               	movlb	1	; () banked
 23502  01393C  518E               	movf	??_encode& (0+255),w,b
 23503  01393E  0101               	movlb	1	; () banked
 23504  013940  258C               	addwf	encode@key& (0+255),w,b
 23505  013942  6ED9               	movwf	fsr2l,c
 23506  013944  0101               	movlb	1	; () banked
 23507  013946  518F               	movf	(??_encode+1)& (0+255),w,b
 23508  013948  0101               	movlb	1	; () banked
 23509  01394A  218D               	addwfc	(encode@key+1)& (0+255),w,b
 23510  01394C  6EDA               	movwf	fsr2h,c
 23511  01394E  CFDE F191          	movff	postinc2,??_encode+3
 23512  013952  CFDD F192          	movff	postdec2,??_encode+4
 23513  013956  0101               	movlb	1	; () banked
 23514  013958  519F               	movf	encode@sum& (0+255),w,b
 23515  01395A  0101               	movlb	1	; () banked
 23516  01395C  2791               	addwf	(??_encode+3)& (0+255),f,b
 23517  01395E  0101               	movlb	1	; () banked
 23518  013960  51A0               	movf	(encode@sum+1)& (0+255),w,b
 23519  013962  0101               	movlb	1	; () banked
 23520  013964  2392               	addwfc	(??_encode+4)& (0+255),f,b
 23521  013966  C19B  F193         	movff	encode@part1,??_encode+5
 23522  01396A  C19C  F194         	movff	encode@part1+1,??_encode+6
 23523  01396E  0E05               	movlw	5
 23524  013970  0101               	movlb	1	; () banked
 23525  013972  6F95               	movwf	(??_encode+7)& (0+255),b
 23526  013974                     u12515:
 23527  013974  0101               	movlb	1	; () banked
 23528  013976  90D8               	bcf	status,0,c
 23529  013978  3394               	rrcf	(??_encode+6)& (0+255),f,b
 23530  01397A  3393               	rrcf	(??_encode+5)& (0+255),f,b
 23531  01397C  0101               	movlb	1	; () banked
 23532  01397E  2F95               	decfsz	(??_encode+7)& (0+255),f,b
 23533  013980  D7F9               	goto	u12515
 23534  013982  C19B  F196         	movff	encode@part1,??_encode+8
 23535  013986  C19C  F197         	movff	encode@part1+1,??_encode+9
 23536  01398A  0101               	movlb	1	; () banked
 23537  01398C  3B96               	swapf	(??_encode+8)& (0+255),f,b
 23538  01398E  3B97               	swapf	(??_encode+9)& (0+255),f,b
 23539  013990  0EF0               	movlw	240
 23540  013992  1797               	andwf	(??_encode+9)& (0+255),f,b
 23541  013994  5196               	movf	(??_encode+8)& (0+255),w,b
 23542  013996  0B0F               	andlw	15
 23543  013998  1397               	iorwf	(??_encode+9)& (0+255),f,b
 23544  01399A  0EF0               	movlw	240
 23545  01399C  1796               	andwf	(??_encode+8)& (0+255),f,b
 23546  01399E  0101               	movlb	1	; () banked
 23547  0139A0  5193               	movf	(??_encode+5)& (0+255),w,b
 23548  0139A2  0101               	movlb	1	; () banked
 23549  0139A4  1B96               	xorwf	(??_encode+8)& (0+255),f,b
 23550  0139A6  0101               	movlb	1	; () banked
 23551  0139A8  5194               	movf	(??_encode+6)& (0+255),w,b
 23552  0139AA  0101               	movlb	1	; () banked
 23553  0139AC  1B97               	xorwf	(??_encode+9)& (0+255),f,b
 23554  0139AE  0101               	movlb	1	; () banked
 23555  0139B0  519B               	movf	encode@part1& (0+255),w,b
 23556  0139B2  0101               	movlb	1	; () banked
 23557  0139B4  2796               	addwf	(??_encode+8)& (0+255),f,b
 23558  0139B6  0101               	movlb	1	; () banked
 23559  0139B8  519C               	movf	(encode@part1+1)& (0+255),w,b
 23560  0139BA  0101               	movlb	1	; () banked
 23561  0139BC  2397               	addwfc	(??_encode+9)& (0+255),f,b
 23562  0139BE  0101               	movlb	1	; () banked
 23563  0139C0  5191               	movf	(??_encode+3)& (0+255),w,b
 23564  0139C2  0101               	movlb	1	; () banked
 23565  0139C4  1B96               	xorwf	(??_encode+8)& (0+255),f,b
 23566  0139C6  0101               	movlb	1	; () banked
 23567  0139C8  5192               	movf	(??_encode+4)& (0+255),w,b
 23568  0139CA  0101               	movlb	1	; () banked
 23569  0139CC  1B97               	xorwf	(??_encode+9)& (0+255),f,b
 23570  0139CE  0101               	movlb	1	; () banked
 23571  0139D0  5196               	movf	(??_encode+8)& (0+255),w,b
 23572  0139D2  0101               	movlb	1	; () banked
 23573  0139D4  279D               	addwf	encode@part2& (0+255),f,b
 23574  0139D6  0101               	movlb	1	; () banked
 23575  0139D8  5197               	movf	(??_encode+9)& (0+255),w,b
 23576  0139DA  0101               	movlb	1	; () banked
 23577  0139DC  239E               	addwfc	(encode@part2+1)& (0+255),f,b
 23578                           
 23579                           ; BSR set to: 1
 23580  0139DE  0101               	movlb	1	; () banked
 23581  0139E0  2B9A               	incf	encode@i& (0+255),f,b
 23582  0139E2  D727               	goto	l11125
 23583  0139E4                     l11139:
 23584                           
 23585                           ; BSR set to: 1
 23586                           ;drv_mrf_miwi_security.c: 88: }
 23587                           ;drv_mrf_miwi_security.c: 89: text[0]=part1; text[1]=part2;
 23588  0139E4  C18A  FFD9         	movff	encode@text,fsr2l
 23589  0139E8  C18B  FFDA         	movff	encode@text+1,fsr2h
 23590  0139EC  C19B  FFDE         	movff	encode@part1,postinc2
 23591  0139F0  C19C  FFDD         	movff	encode@part1+1,postdec2
 23592                           
 23593                           ; BSR set to: 1
 23594  0139F4  0101               	movlb	1	; () banked
 23595  0139F6  EE20 F002          	lfsr	2,2
 23596  0139FA  518A               	movf	encode@text& (0+255),w,b
 23597  0139FC  26D9               	addwf	fsr2l,f,c
 23598  0139FE  518B               	movf	(encode@text+1)& (0+255),w,b
 23599  013A00  22DA               	addwfc	fsr2h,f,c
 23600  013A02  C19D  FFDE         	movff	encode@part2,postinc2
 23601  013A06  C19E  FFDD         	movff	encode@part2+1,postdec2
 23602                           
 23603                           ; BSR set to: 1
 23604  013A0A  0012               	return		;funcret
 23605  013A0C                     __end_of_encode:
 23606                           	opt stack 0
 23607                           tblptru	equ	0xFF8
 23608                           tblptrh	equ	0xFF7
 23609                           tblptrl	equ	0xFF6
 23610                           tablat	equ	0xFF5
 23611                           prodh	equ	0xFF4
 23612                           prodl	equ	0xFF3
 23613                           intcon	equ	0xFF2
 23614                           intcon2	equ	0xFF1
 23615                           intcon3	equ	0xFF0
 23616                           indf0	equ	0xFEF
 23617                           postinc0	equ	0xFEE
 23618                           plusw0	equ	0xFEB
 23619                           fsr0h	equ	0xFEA
 23620                           fsr0l	equ	0xFE9
 23621                           wreg	equ	0xFE8
 23622                           indf1	equ	0xFE7
 23623                           postinc1	equ	0xFE6
 23624                           postdec1	equ	0xFE5
 23625                           fsr1h	equ	0xFE2
 23626                           fsr1l	equ	0xFE1
 23627                           indf2	equ	0xFDF
 23628                           postinc2	equ	0xFDE
 23629                           postdec2	equ	0xFDD
 23630                           plusw2	equ	0xFDB
 23631                           fsr2h	equ	0xFDA
 23632                           fsr2l	equ	0xFD9
 23633                           status	equ	0xFD8
 23634                           
 23635 ;; *************** function ___awdiv *****************
 23636 ;; Defined at:
 23637 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 23638 ;; Parameters:    Size  Location     Type
 23639 ;;  dividend        2    0[BANK1 ] int 
 23640 ;;  divisor         2    2[BANK1 ] int 
 23641 ;; Auto vars:     Size  Location     Type
 23642 ;;  quotient        2    6[BANK1 ] int 
 23643 ;;  sign            1    5[BANK1 ] unsigned char 
 23644 ;;  counter         1    4[BANK1 ] unsigned char 
 23645 ;; Return value:  Size  Location     Type
 23646 ;;                  2    0[BANK1 ] int 
 23647 ;; Registers used:
 23648 ;;		wreg, status,2, status,0
 23649 ;; Tracked objects:
 23650 ;;		On entry : 0/0
 23651 ;;		On exit  : 0/0
 23652 ;;		Unchanged: 0/0
 23653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23654 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23655 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23657 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23658 ;;Total ram usage:        8 bytes
 23659 ;; Hardware stack levels used:    1
 23660 ;; Hardware stack levels required when called:    9
 23661 ;; This function calls:
 23662 ;;		Nothing
 23663 ;; This function is called by:
 23664 ;;		_CTR
 23665 ;;		_CBC_MAC
 23666 ;; This function uses a non-reentrant model
 23667 ;;
 23668                           
 23669                           	psect	text74
 23670  015E08                     __ptext74:
 23671                           	opt stack 0
 23672  015E08                     ___awdiv:
 23673                           	opt stack 15
 23674                           
 23675                           ; BSR set to: 1
 23676                           ;incstack = 0
 23677  015E08  0E00               	movlw	0
 23678  015E0A  0101               	movlb	1	; () banked
 23679  015E0C  6F8F               	movwf	___awdiv@sign& (0+255),b
 23680                           
 23681                           ; BSR set to: 1
 23682  015E0E  0101               	movlb	1	; () banked
 23683  015E10  AF8D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23684  015E12  D008               	goto	l11151
 23685                           
 23686                           ; BSR set to: 1
 23687  015E14  0101               	movlb	1	; () banked
 23688  015E16  6D8C               	negf	___awdiv@divisor& (0+255),b
 23689  015E18  1F8D               	comf	(___awdiv@divisor+1)& (0+255),f,b
 23690  015E1A  B0D8               	btfsc	status,0,c
 23691  015E1C  2B8D               	incf	(___awdiv@divisor+1)& (0+255),f,b
 23692                           
 23693                           ; BSR set to: 1
 23694  015E1E  0E01               	movlw	1
 23695  015E20  0101               	movlb	1	; () banked
 23696  015E22  6F8F               	movwf	___awdiv@sign& (0+255),b
 23697  015E24                     l11151:
 23698                           
 23699                           ; BSR set to: 1
 23700  015E24  0101               	movlb	1	; () banked
 23701  015E26  AF8B               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 23702  015E28  D008               	goto	l11157
 23703                           
 23704                           ; BSR set to: 1
 23705  015E2A  0101               	movlb	1	; () banked
 23706  015E2C  6D8A               	negf	___awdiv@dividend& (0+255),b
 23707  015E2E  1F8B               	comf	(___awdiv@dividend+1)& (0+255),f,b
 23708  015E30  B0D8               	btfsc	status,0,c
 23709  015E32  2B8B               	incf	(___awdiv@dividend+1)& (0+255),f,b
 23710                           
 23711                           ; BSR set to: 1
 23712  015E34  0E01               	movlw	1
 23713  015E36  0101               	movlb	1	; () banked
 23714  015E38  1B8F               	xorwf	___awdiv@sign& (0+255),f,b
 23715  015E3A                     l11157:
 23716                           
 23717                           ; BSR set to: 1
 23718  015E3A  0E00               	movlw	0
 23719  015E3C  0101               	movlb	1	; () banked
 23720  015E3E  6F91               	movwf	(___awdiv@quotient+1)& (0+255),b
 23721  015E40  0E00               	movlw	0
 23722  015E42  6F90               	movwf	___awdiv@quotient& (0+255),b
 23723                           
 23724                           ; BSR set to: 1
 23725  015E44  0101               	movlb	1	; () banked
 23726  015E46  518C               	movf	___awdiv@divisor& (0+255),w,b
 23727  015E48  0101               	movlb	1	; () banked
 23728  015E4A  118D               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 23729  015E4C  B4D8               	btfsc	status,2,c
 23730  015E4E  D02C               	goto	l11179
 23731                           
 23732                           ; BSR set to: 1
 23733  015E50  0E01               	movlw	1
 23734  015E52  0101               	movlb	1	; () banked
 23735  015E54  6F8E               	movwf	___awdiv@counter& (0+255),b
 23736  015E56  D006               	goto	l11165
 23737  015E58                     l11163:
 23738                           
 23739                           ; BSR set to: 1
 23740  015E58  0101               	movlb	1	; () banked
 23741  015E5A  90D8               	bcf	status,0,c
 23742  015E5C  378C               	rlcf	___awdiv@divisor& (0+255),f,b
 23743  015E5E  378D               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 23744  015E60  0101               	movlb	1	; () banked
 23745  015E62  2B8E               	incf	___awdiv@counter& (0+255),f,b
 23746  015E64                     l11165:
 23747                           
 23748                           ; BSR set to: 1
 23749  015E64  0101               	movlb	1	; () banked
 23750  015E66  AF8D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23751  015E68  D7F7               	goto	l11163
 23752  015E6A                     l11167:
 23753                           
 23754                           ; BSR set to: 1
 23755  015E6A  0101               	movlb	1	; () banked
 23756  015E6C  90D8               	bcf	status,0,c
 23757  015E6E  3790               	rlcf	___awdiv@quotient& (0+255),f,b
 23758  015E70  3791               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 23759                           
 23760                           ; BSR set to: 1
 23761  015E72  0101               	movlb	1	; () banked
 23762  015E74  518C               	movf	___awdiv@divisor& (0+255),w,b
 23763  015E76  0101               	movlb	1	; () banked
 23764  015E78  5D8A               	subwf	___awdiv@dividend& (0+255),w,b
 23765  015E7A  0101               	movlb	1	; () banked
 23766  015E7C  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23767  015E7E  0101               	movlb	1	; () banked
 23768  015E80  598B               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 23769  015E82  A0D8               	btfss	status,0,c
 23770  015E84  D00A               	goto	l11175
 23771                           
 23772                           ; BSR set to: 1
 23773  015E86  0101               	movlb	1	; () banked
 23774  015E88  518C               	movf	___awdiv@divisor& (0+255),w,b
 23775  015E8A  0101               	movlb	1	; () banked
 23776  015E8C  5F8A               	subwf	___awdiv@dividend& (0+255),f,b
 23777  015E8E  0101               	movlb	1	; () banked
 23778  015E90  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23779  015E92  0101               	movlb	1	; () banked
 23780  015E94  5B8B               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 23781                           
 23782                           ; BSR set to: 1
 23783  015E96  0101               	movlb	1	; () banked
 23784  015E98  8190               	bsf	___awdiv@quotient& (0+255),0,b
 23785  015E9A                     l11175:
 23786                           
 23787                           ; BSR set to: 1
 23788  015E9A  0101               	movlb	1	; () banked
 23789  015E9C  90D8               	bcf	status,0,c
 23790  015E9E  338D               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 23791  015EA0  338C               	rrcf	___awdiv@divisor& (0+255),f,b
 23792                           
 23793                           ; BSR set to: 1
 23794  015EA2  0101               	movlb	1	; () banked
 23795  015EA4  2F8E               	decfsz	___awdiv@counter& (0+255),f,b
 23796  015EA6  D7E1               	goto	l11167
 23797  015EA8                     l11179:
 23798                           
 23799                           ; BSR set to: 1
 23800  015EA8  0101               	movlb	1	; () banked
 23801  015EAA  518F               	movf	___awdiv@sign& (0+255),w,b
 23802  015EAC  0101               	movlb	1	; () banked
 23803  015EAE  B4D8               	btfsc	status,2,c
 23804  015EB0  D005               	goto	l11183
 23805                           
 23806                           ; BSR set to: 1
 23807  015EB2  0101               	movlb	1	; () banked
 23808  015EB4  6D90               	negf	___awdiv@quotient& (0+255),b
 23809  015EB6  1F91               	comf	(___awdiv@quotient+1)& (0+255),f,b
 23810  015EB8  B0D8               	btfsc	status,0,c
 23811  015EBA  2B91               	incf	(___awdiv@quotient+1)& (0+255),f,b
 23812  015EBC                     l11183:
 23813                           
 23814                           ; BSR set to: 1
 23815  015EBC  C190  F18A         	movff	___awdiv@quotient,?___awdiv
 23816  015EC0  C191  F18B         	movff	___awdiv@quotient+1,?___awdiv+1
 23817  015EC4  0012               	return	
 23818  015EC6                     __end_of___awdiv:
 23819                           	opt stack 0
 23820                           tblptru	equ	0xFF8
 23821                           tblptrh	equ	0xFF7
 23822                           tblptrl	equ	0xFF6
 23823                           tablat	equ	0xFF5
 23824                           prodh	equ	0xFF4
 23825                           prodl	equ	0xFF3
 23826                           intcon	equ	0xFF2
 23827                           intcon2	equ	0xFF1
 23828                           intcon3	equ	0xFF0
 23829                           indf0	equ	0xFEF
 23830                           postinc0	equ	0xFEE
 23831                           plusw0	equ	0xFEB
 23832                           fsr0h	equ	0xFEA
 23833                           fsr0l	equ	0xFE9
 23834                           wreg	equ	0xFE8
 23835                           indf1	equ	0xFE7
 23836                           postinc1	equ	0xFE6
 23837                           postdec1	equ	0xFE5
 23838                           fsr1h	equ	0xFE2
 23839                           fsr1l	equ	0xFE1
 23840                           indf2	equ	0xFDF
 23841                           postinc2	equ	0xFDE
 23842                           postdec2	equ	0xFDD
 23843                           plusw2	equ	0xFDB
 23844                           fsr2h	equ	0xFDA
 23845                           fsr2l	equ	0xFD9
 23846                           status	equ	0xFD8
 23847                           
 23848 ;; *************** function _AddNodeToNetworkTable *****************
 23849 ;; Defined at:
 23850 ;;		line 3372 in file "src/miwi/miwi_mesh.c"
 23851 ;; Parameters:    Size  Location     Type
 23852 ;;		None
 23853 ;; Auto vars:     Size  Location     Type
 23854 ;;  i               1    8[BANK1 ] unsigned char 
 23855 ;;  handle          1    9[BANK1 ] unsigned char 
 23856 ;; Return value:  Size  Location     Type
 23857 ;;                  1    wreg      unsigned char 
 23858 ;; Registers used:
 23859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23860 ;; Tracked objects:
 23861 ;;		On entry : 0/0
 23862 ;;		On exit  : 0/0
 23863 ;;		Unchanged: 0/0
 23864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23866 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23867 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23868 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23869 ;;Total ram usage:        4 bytes
 23870 ;; Hardware stack levels used:    1
 23871 ;; Hardware stack levels required when called:   10
 23872 ;; This function calls:
 23873 ;;		_SearchForLongAddress
 23874 ;;		_SearchForShortAddress
 23875 ;;		_findNextNetworkEntry
 23876 ;; This function is called by:
 23877 ;;		_MiWiTasks
 23878 ;; This function uses a non-reentrant model
 23879 ;;
 23880                           
 23881                           	psect	text75
 23882  015298                     __ptext75:
 23883                           	opt stack 0
 23884  015298                     _AddNodeToNetworkTable:
 23885                           	opt stack 15
 23886                           
 23887                           ;miwi_mesh.c: 3374: uint8_t handle = 0xFF;
 23888                           
 23889                           ; BSR set to: 1
 23890                           ;incstack = 0
 23891  015298  0101               	movlb	1	; () banked
 23892  01529A  6993               	setf	AddNodeToNetworkTable@handle& (0+255),b
 23893                           
 23894                           ;miwi_mesh.c: 3376: if(tempNodeStatus.bits.longAddressValid)
 23895  01529C  0100               	movlb	0	; () banked
 23896  01529E  A5BD               	btfss	_tempNodeStatus& (0+255),2,b
 23897  0152A0  D003               	goto	l716
 23898                           
 23899                           ; BSR set to: 0
 23900                           ;miwi_mesh.c: 3377: {
 23901                           ;miwi_mesh.c: 3378: handle = SearchForLongAddress();
 23902  0152A2  EC77  F0AD         	call	_SearchForLongAddress	;wreg free
 23903  0152A6  D005               	goto	L8
 23904  0152A8                     l716:
 23905                           
 23906                           ; BSR set to: 0
 23907                           ;miwi_mesh.c: 3380: else
 23908                           ;miwi_mesh.c: 3381: {
 23909                           ;miwi_mesh.c: 3382: if(tempNodeStatus.bits.shortAddressValid)
 23910  0152A8  0100               	movlb	0	; () banked
 23911  0152AA  A7BD               	btfss	_tempNodeStatus& (0+255),3,b
 23912  0152AC  D004               	goto	l11827
 23913                           
 23914                           ; BSR set to: 0
 23915                           ;miwi_mesh.c: 3383: {
 23916                           ;miwi_mesh.c: 3384: handle = SearchForShortAddress();
 23917  0152AE  ECA7  F0B2         	call	_SearchForShortAddress	;wreg free
 23918  0152B2                     L8:
 23919  0152B2  0101               	movlb	1	; () banked
 23920  0152B4  6F93               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 23921  0152B6                     l11827:
 23922                           
 23923                           ;miwi_mesh.c: 3385: }
 23924                           ;miwi_mesh.c: 3386: }
 23925                           ;miwi_mesh.c: 3388: if(handle==0xFF)
 23926  0152B6  0101               	movlb	1	; () banked
 23927  0152B8  2993               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 23928  0152BA  A4D8               	btfss	status,2,c
 23929  0152BC  D004               	goto	l11831
 23930                           
 23931                           ; BSR set to: 1
 23932                           ;miwi_mesh.c: 3389: {
 23933                           ;miwi_mesh.c: 3390: handle = findNextNetworkEntry();
 23934  0152BE  EC91  F0B6         	call	_findNextNetworkEntry	;wreg free
 23935  0152C2  0101               	movlb	1	; () banked
 23936  0152C4  6F93               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 23937  0152C6                     l11831:
 23938                           
 23939                           ; BSR set to: 1
 23940                           ;miwi_mesh.c: 3391: }
 23941                           ;miwi_mesh.c: 3393: if(handle != 0xFF)
 23942  0152C6  0101               	movlb	1	; () banked
 23943  0152C8  2993               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 23944  0152CA  B4D8               	btfsc	status,2,c
 23945  0152CC  D074               	goto	l11851
 23946                           
 23947                           ; BSR set to: 1
 23948                           ;miwi_mesh.c: 3394: {
 23949                           ;miwi_mesh.c: 3400: ConnectionTable[handle].status.Val = tempNodeStatus.Val;
 23950  0152CE  0101               	movlb	1	; () banked
 23951  0152D0  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23952  0152D2  0D09               	mullw	9
 23953  0152D4  0E08               	movlw	8
 23954  0152D6  26F3               	addwf	prodl,f,c
 23955  0152D8  0E00               	movlw	0
 23956  0152DA  22F4               	addwfc	prodh,f,c
 23957  0152DC  0E46               	movlw	low _ConnectionTable
 23958  0152DE  24F3               	addwf	prodl,w,c
 23959  0152E0  6ED9               	movwf	fsr2l,c
 23960  0152E2  0E02               	movlw	high _ConnectionTable
 23961  0152E4  20F4               	addwfc	prodh,w,c
 23962  0152E6  6EDA               	movwf	fsr2h,c
 23963  0152E8  C0BD  FFDF         	movff	_tempNodeStatus,indf2
 23964                           
 23965                           ; BSR set to: 1
 23966                           ;miwi_mesh.c: 3401: if(tempNodeStatus.bits.longAddressValid)
 23967  0152EC  0100               	movlb	0	; () banked
 23968  0152EE  A5BD               	btfss	_tempNodeStatus& (0+255),2,b
 23969  0152F0  D034               	goto	l721
 23970                           
 23971                           ; BSR set to: 0
 23972                           ;miwi_mesh.c: 3402: {
 23973                           ;miwi_mesh.c: 3403: uint8_t i;
 23974                           ;miwi_mesh.c: 3404: for(i = 0; i < 4; i++)
 23975  0152F2  0E00               	movlw	0
 23976  0152F4  0101               	movlb	1	; () banked
 23977  0152F6  6F92               	movwf	AddNodeToNetworkTable@i& (0+255),b
 23978  0152F8                     l11839:
 23979                           
 23980                           ; BSR set to: 1
 23981  0152F8  0E03               	movlw	3
 23982  0152FA  0101               	movlb	1	; () banked
 23983  0152FC  6592               	cpfsgt	AddNodeToNetworkTable@i& (0+255),b
 23984  0152FE  D001               	goto	l11843
 23985  015300  D02C               	goto	l721
 23986  015302                     l11843:
 23987                           
 23988                           ; BSR set to: 1
 23989                           ;miwi_mesh.c: 3405: {
 23990                           ;miwi_mesh.c: 3406: ConnectionTable[handle].Address[i] = tempLongAddress[i];
 23991  015302  0101               	movlb	1	; () banked
 23992  015304  5192               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 23993  015306  0D01               	mullw	1
 23994  015308  0E26               	movlw	low _tempLongAddress
 23995  01530A  24F3               	addwf	prodl,w,c
 23996  01530C  6ED9               	movwf	fsr2l,c
 23997  01530E  0E01               	movlw	high _tempLongAddress
 23998  015310  20F4               	addwfc	prodh,w,c
 23999  015312  6EDA               	movwf	fsr2h,c
 24000  015314  0101               	movlb	1	; () banked
 24001  015316  5192               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 24002  015318  0D01               	mullw	1
 24003  01531A  0E04               	movlw	4
 24004  01531C  26F3               	addwf	prodl,f,c
 24005  01531E  0E00               	movlw	0
 24006  015320  22F4               	addwfc	prodh,f,c
 24007  015322  0E46               	movlw	low _ConnectionTable
 24008  015324  0101               	movlb	1	; () banked
 24009  015326  6F90               	movwf	??_AddNodeToNetworkTable& (0+255),b
 24010  015328  0E02               	movlw	high _ConnectionTable
 24011  01532A  0101               	movlb	1	; () banked
 24012  01532C  6F91               	movwf	(??_AddNodeToNetworkTable+1)& (0+255),b
 24013  01532E  50F3               	movf	prodl,w,c
 24014  015330  0101               	movlb	1	; () banked
 24015  015332  2790               	addwf	??_AddNodeToNetworkTable& (0+255),f,b
 24016  015334  50F4               	movf	prodh,w,c
 24017  015336  0101               	movlb	1	; () banked
 24018  015338  2391               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 24019  01533A  0101               	movlb	1	; () banked
 24020  01533C  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 24021  01533E  0D09               	mullw	9
 24022  015340  50F3               	movf	prodl,w,c
 24023  015342  0101               	movlb	1	; () banked
 24024  015344  2590               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 24025  015346  6EE1               	movwf	fsr1l,c
 24026  015348  50F4               	movf	prodh,w,c
 24027  01534A  0101               	movlb	1	; () banked
 24028  01534C  2191               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 24029  01534E  6EE2               	movwf	fsr1h,c
 24030  015350  CFDF FFE7          	movff	indf2,indf1
 24031                           
 24032                           ; BSR set to: 1
 24033  015354  0101               	movlb	1	; () banked
 24034  015356  2B92               	incf	AddNodeToNetworkTable@i& (0+255),f,b
 24035  015358  D7CF               	goto	l11839
 24036  01535A                     l721:
 24037                           
 24038                           ;miwi_mesh.c: 3407: }
 24039                           ;miwi_mesh.c: 3408: }
 24040                           ;miwi_mesh.c: 3410: if(tempNodeStatus.bits.shortAddressValid)
 24041  01535A  0100               	movlb	0	; () banked
 24042  01535C  A7BD               	btfss	_tempNodeStatus& (0+255),3,b
 24043  01535E  D011               	goto	l724
 24044                           
 24045                           ; BSR set to: 0
 24046                           ;miwi_mesh.c: 3411: {
 24047                           ;miwi_mesh.c: 3412: ConnectionTable[handle].AltAddress.Val = tempShortAddress.Val;
 24048  015360  0101               	movlb	1	; () banked
 24049  015362  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 24050  015364  0D09               	mullw	9
 24051  015366  0E02               	movlw	2
 24052  015368  26F3               	addwf	prodl,f,c
 24053  01536A  0E00               	movlw	0
 24054  01536C  22F4               	addwfc	prodh,f,c
 24055  01536E  0E46               	movlw	low _ConnectionTable
 24056  015370  24F3               	addwf	prodl,w,c
 24057  015372  6ED9               	movwf	fsr2l,c
 24058  015374  0E02               	movlw	high _ConnectionTable
 24059  015376  20F4               	addwfc	prodh,w,c
 24060  015378  6EDA               	movwf	fsr2h,c
 24061  01537A  C187  FFDE         	movff	_tempShortAddress,postinc2
 24062  01537E  C188  FFDD         	movff	_tempShortAddress+1,postdec2
 24063  015382                     l724:
 24064                           
 24065                           ;miwi_mesh.c: 3413: }
 24066                           ;miwi_mesh.c: 3415: ConnectionTable[handle].PANID.Val = tempPANID.Val;
 24067  015382  0101               	movlb	1	; () banked
 24068  015384  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 24069  015386  0D09               	mullw	9
 24070  015388  0E46               	movlw	low _ConnectionTable
 24071  01538A  24F3               	addwf	prodl,w,c
 24072  01538C  6ED9               	movwf	fsr2l,c
 24073  01538E  0E02               	movlw	high _ConnectionTable
 24074  015390  20F4               	addwfc	prodh,w,c
 24075  015392  6EDA               	movwf	fsr2h,c
 24076  015394  C13C  FFDE         	movff	_tempPANID,postinc2
 24077  015398  C13D  FFDD         	movff	_tempPANID+1,postdec2
 24078                           
 24079                           ;miwi_mesh.c: 3417: IncomingFrameCounter[handle].Val = 0;
 24080  01539C  0101               	movlb	1	; () banked
 24081  01539E  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 24082  0153A0  0D04               	mullw	4
 24083  0153A2  0E00               	movlw	low _IncomingFrameCounter
 24084  0153A4  24F3               	addwf	prodl,w,c
 24085  0153A6  6ED9               	movwf	fsr2l,c
 24086  0153A8  0E02               	movlw	high _IncomingFrameCounter
 24087  0153AA  20F4               	addwfc	prodh,w,c
 24088  0153AC  6EDA               	movwf	fsr2h,c
 24089  0153AE  6ADE               	clrf	postinc2,c
 24090  0153B0  6ADE               	clrf	postinc2,c
 24091  0153B2  6ADE               	clrf	postinc2,c
 24092  0153B4  6ADD               	clrf	postdec2,c
 24093  0153B6                     l11851:
 24094                           
 24095                           ; BSR set to: 1
 24096                           ;miwi_mesh.c: 3419: }
 24097                           ;miwi_mesh.c: 3421: return handle;
 24098  0153B6  0101               	movlb	1	; () banked
 24099  0153B8  5193               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 24100  0153BA  0012               	return	
 24101  0153BC                     __end_of_AddNodeToNetworkTable:
 24102                           	opt stack 0
 24103                           tblptru	equ	0xFF8
 24104                           tblptrh	equ	0xFF7
 24105                           tblptrl	equ	0xFF6
 24106                           tablat	equ	0xFF5
 24107                           prodh	equ	0xFF4
 24108                           prodl	equ	0xFF3
 24109                           intcon	equ	0xFF2
 24110                           intcon2	equ	0xFF1
 24111                           intcon3	equ	0xFF0
 24112                           indf0	equ	0xFEF
 24113                           postinc0	equ	0xFEE
 24114                           plusw0	equ	0xFEB
 24115                           fsr0h	equ	0xFEA
 24116                           fsr0l	equ	0xFE9
 24117                           wreg	equ	0xFE8
 24118                           indf1	equ	0xFE7
 24119                           postinc1	equ	0xFE6
 24120                           postdec1	equ	0xFE5
 24121                           fsr1h	equ	0xFE2
 24122                           fsr1l	equ	0xFE1
 24123                           indf2	equ	0xFDF
 24124                           postinc2	equ	0xFDE
 24125                           postdec2	equ	0xFDD
 24126                           plusw2	equ	0xFDB
 24127                           fsr2h	equ	0xFDA
 24128                           fsr2l	equ	0xFD9
 24129                           status	equ	0xFD8
 24130                           
 24131 ;; *************** function _findNextNetworkEntry *****************
 24132 ;; Defined at:
 24133 ;;		line 2583 in file "src/miwi/miwi_mesh.c"
 24134 ;; Parameters:    Size  Location     Type
 24135 ;;		None
 24136 ;; Auto vars:     Size  Location     Type
 24137 ;;  i               1    0[BANK1 ] unsigned char 
 24138 ;; Return value:  Size  Location     Type
 24139 ;;                  1    wreg      unsigned char 
 24140 ;; Registers used:
 24141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24142 ;; Tracked objects:
 24143 ;;		On entry : 0/0
 24144 ;;		On exit  : 0/0
 24145 ;;		Unchanged: 0/0
 24146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24148 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24150 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24151 ;;Total ram usage:        1 bytes
 24152 ;; Hardware stack levels used:    1
 24153 ;; Hardware stack levels required when called:    9
 24154 ;; This function calls:
 24155 ;;		Nothing
 24156 ;; This function is called by:
 24157 ;;		_AddNodeToNetworkTable
 24158 ;;		_MiApp_EstablishConnection
 24159 ;; This function uses a non-reentrant model
 24160 ;;
 24161                           
 24162                           	psect	text76
 24163  016D22                     __ptext76:
 24164                           	opt stack 0
 24165  016D22                     _findNextNetworkEntry:
 24166                           	opt stack 15
 24167                           
 24168                           ;miwi_mesh.c: 2585: uint8_t i;
 24169                           ;miwi_mesh.c: 2587: for(i=0;i<10;i++)
 24170                           
 24171                           ; BSR set to: 1
 24172                           ;incstack = 0
 24173  016D22  0E00               	movlw	0
 24174  016D24  0101               	movlb	1	; () banked
 24175  016D26  6F8A               	movwf	findNextNetworkEntry@i& (0+255),b
 24176  016D28                     l11575:
 24177                           
 24178                           ; BSR set to: 1
 24179  016D28  0E09               	movlw	9
 24180  016D2A  0101               	movlb	1	; () banked
 24181  016D2C  658A               	cpfsgt	findNextNetworkEntry@i& (0+255),b
 24182  016D2E  D001               	goto	l11579
 24183  016D30  D016               	goto	l11589
 24184  016D32                     l11579:
 24185                           
 24186                           ; BSR set to: 1
 24187                           ;miwi_mesh.c: 2588: {
 24188                           ;miwi_mesh.c: 2589: if(ConnectionTable[i].status.bits.isValid == 0)
 24189  016D32  0101               	movlb	1	; () banked
 24190  016D34  518A               	movf	findNextNetworkEntry@i& (0+255),w,b
 24191  016D36  0D09               	mullw	9
 24192  016D38  0E08               	movlw	8
 24193  016D3A  26F3               	addwf	prodl,f,c
 24194  016D3C  0E00               	movlw	0
 24195  016D3E  22F4               	addwfc	prodh,f,c
 24196  016D40  0E46               	movlw	low _ConnectionTable
 24197  016D42  24F3               	addwf	prodl,w,c
 24198  016D44  6ED9               	movwf	fsr2l,c
 24199  016D46  0E02               	movlw	high _ConnectionTable
 24200  016D48  20F4               	addwfc	prodh,w,c
 24201  016D4A  6EDA               	movwf	fsr2h,c
 24202  016D4C  0102               	movlb	2	; () banked
 24203  016D4E  BEDF               	btfsc	indf2,7,c
 24204  016D50  D003               	goto	l11585
 24205                           
 24206                           ; BSR set to: 2
 24207                           ;miwi_mesh.c: 2590: {
 24208                           ;miwi_mesh.c: 2591: return i;
 24209  016D52  0101               	movlb	1	; () banked
 24210  016D54  518A               	movf	findNextNetworkEntry@i& (0+255),w,b
 24211                           
 24212                           ; BSR set to: 1
 24213  016D56  0012               	return	
 24214  016D58                     l11585:
 24215  016D58  0101               	movlb	1	; () banked
 24216  016D5A  2B8A               	incf	findNextNetworkEntry@i& (0+255),f,b
 24217  016D5C  D7E5               	goto	l11575
 24218  016D5E                     l11589:
 24219                           
 24220                           ; BSR set to: 1
 24221                           ;miwi_mesh.c: 2592: }
 24222                           ;miwi_mesh.c: 2593: }
 24223                           ;miwi_mesh.c: 2594: return 0xFF;
 24224  016D5E  0EFF               	movlw	255
 24225  016D60  0012               	return	
 24226  016D62                     __end_of_findNextNetworkEntry:
 24227                           	opt stack 0
 24228                           tblptru	equ	0xFF8
 24229                           tblptrh	equ	0xFF7
 24230                           tblptrl	equ	0xFF6
 24231                           tablat	equ	0xFF5
 24232                           prodh	equ	0xFF4
 24233                           prodl	equ	0xFF3
 24234                           intcon	equ	0xFF2
 24235                           intcon2	equ	0xFF1
 24236                           intcon3	equ	0xFF0
 24237                           indf0	equ	0xFEF
 24238                           postinc0	equ	0xFEE
 24239                           plusw0	equ	0xFEB
 24240                           fsr0h	equ	0xFEA
 24241                           fsr0l	equ	0xFE9
 24242                           wreg	equ	0xFE8
 24243                           indf1	equ	0xFE7
 24244                           postinc1	equ	0xFE6
 24245                           postdec1	equ	0xFE5
 24246                           fsr1h	equ	0xFE2
 24247                           fsr1l	equ	0xFE1
 24248                           indf2	equ	0xFDF
 24249                           postinc2	equ	0xFDE
 24250                           postdec2	equ	0xFDD
 24251                           plusw2	equ	0xFDB
 24252                           fsr2h	equ	0xFDA
 24253                           fsr2l	equ	0xFD9
 24254                           status	equ	0xFD8
 24255                           
 24256 ;; *************** function _SearchForShortAddress *****************
 24257 ;; Defined at:
 24258 ;;		line 3245 in file "src/miwi/miwi_mesh.c"
 24259 ;; Parameters:    Size  Location     Type
 24260 ;;		None
 24261 ;; Auto vars:     Size  Location     Type
 24262 ;;  i               1    2[BANK1 ] unsigned char 
 24263 ;; Return value:  Size  Location     Type
 24264 ;;                  1    wreg      unsigned char 
 24265 ;; Registers used:
 24266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24267 ;; Tracked objects:
 24268 ;;		On entry : 0/0
 24269 ;;		On exit  : 0/0
 24270 ;;		Unchanged: 0/0
 24271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24273 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24274 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24275 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24276 ;;Total ram usage:        3 bytes
 24277 ;; Hardware stack levels used:    1
 24278 ;; Hardware stack levels required when called:    9
 24279 ;; This function calls:
 24280 ;;		Nothing
 24281 ;; This function is called by:
 24282 ;;		_MiWiTasks
 24283 ;;		_AddNodeToNetworkTable
 24284 ;; This function uses a non-reentrant model
 24285 ;;
 24286                           
 24287                           	psect	text77
 24288  01654E                     __ptext77:
 24289                           	opt stack 0
 24290  01654E                     _SearchForShortAddress:
 24291                           	opt stack 16
 24292                           
 24293                           ;miwi_mesh.c: 3247: uint8_t i;
 24294                           ;miwi_mesh.c: 3249: for(i=0;i<10;i++)
 24295                           
 24296                           ; BSR set to: 1
 24297                           ;incstack = 0
 24298  01654E  0E00               	movlw	0
 24299  016550  0101               	movlb	1	; () banked
 24300  016552  6F8C               	movwf	SearchForShortAddress@i& (0+255),b
 24301  016554                     l11515:
 24302                           
 24303                           ; BSR set to: 1
 24304  016554  0E09               	movlw	9
 24305  016556  0101               	movlb	1	; () banked
 24306  016558  658C               	cpfsgt	SearchForShortAddress@i& (0+255),b
 24307  01655A  D001               	goto	l11519
 24308  01655C  D03C               	goto	l11533
 24309  01655E                     l11519:
 24310                           
 24311                           ; BSR set to: 1
 24312                           ;miwi_mesh.c: 3250: {
 24313                           ;miwi_mesh.c: 3251: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.shortAddressValid)
 24314  01655E  0101               	movlb	1	; () banked
 24315  016560  518C               	movf	SearchForShortAddress@i& (0+255),w,b
 24316  016562  0D09               	mullw	9
 24317  016564  0E08               	movlw	8
 24318  016566  26F3               	addwf	prodl,f,c
 24319  016568  0E00               	movlw	0
 24320  01656A  22F4               	addwfc	prodh,f,c
 24321  01656C  0E46               	movlw	low _ConnectionTable
 24322  01656E  24F3               	addwf	prodl,w,c
 24323  016570  6ED9               	movwf	fsr2l,c
 24324  016572  0E02               	movlw	high _ConnectionTable
 24325  016574  20F4               	addwfc	prodh,w,c
 24326  016576  6EDA               	movwf	fsr2h,c
 24327  016578  0102               	movlb	2	; () banked
 24328  01657A  AEDF               	btfss	indf2,7,c
 24329  01657C  D029               	goto	l11529
 24330                           
 24331                           ; BSR set to: 2
 24332  01657E  0101               	movlb	1	; () banked
 24333  016580  518C               	movf	SearchForShortAddress@i& (0+255),w,b
 24334  016582  0D09               	mullw	9
 24335  016584  0E08               	movlw	8
 24336  016586  26F3               	addwf	prodl,f,c
 24337  016588  0E00               	movlw	0
 24338  01658A  22F4               	addwfc	prodh,f,c
 24339  01658C  0E46               	movlw	low _ConnectionTable
 24340  01658E  24F3               	addwf	prodl,w,c
 24341  016590  6ED9               	movwf	fsr2l,c
 24342  016592  0E02               	movlw	high _ConnectionTable
 24343  016594  20F4               	addwfc	prodh,w,c
 24344  016596  6EDA               	movwf	fsr2h,c
 24345  016598  0102               	movlb	2	; () banked
 24346  01659A  A6DF               	btfss	indf2,3,c
 24347  01659C  D019               	goto	l11529
 24348                           
 24349                           ; BSR set to: 2
 24350                           ;miwi_mesh.c: 3252: {
 24351                           ;miwi_mesh.c: 3253: if(ConnectionTable[i].AltAddress.Val == tempShortAddress.Val)
 24352  01659E  0101               	movlb	1	; () banked
 24353  0165A0  518C               	movf	SearchForShortAddress@i& (0+255),w,b
 24354  0165A2  0D09               	mullw	9
 24355  0165A4  0E02               	movlw	2
 24356  0165A6  26F3               	addwf	prodl,f,c
 24357  0165A8  0E00               	movlw	0
 24358  0165AA  22F4               	addwfc	prodh,f,c
 24359  0165AC  0E46               	movlw	low _ConnectionTable
 24360  0165AE  24F3               	addwf	prodl,w,c
 24361  0165B0  6ED9               	movwf	fsr2l,c
 24362  0165B2  0E02               	movlw	high _ConnectionTable
 24363  0165B4  20F4               	addwfc	prodh,w,c
 24364  0165B6  6EDA               	movwf	fsr2h,c
 24365  0165B8  0101               	movlb	1	; () banked
 24366  0165BA  5187               	movf	_tempShortAddress& (0+255),w,b
 24367  0165BC  18DE               	xorwf	postinc2,w,c
 24368  0165BE  E108               	bnz	l11529
 24369  0165C0  0101               	movlb	1	; () banked
 24370  0165C2  5188               	movf	(_tempShortAddress+1)& (0+255),w,b
 24371  0165C4  18DE               	xorwf	postinc2,w,c
 24372  0165C6  A4D8               	btfss	status,2,c
 24373  0165C8  D003               	goto	l11529
 24374                           
 24375                           ; BSR set to: 1
 24376                           ;miwi_mesh.c: 3254: {
 24377                           ;miwi_mesh.c: 3255: return i;
 24378  0165CA  0101               	movlb	1	; () banked
 24379  0165CC  518C               	movf	SearchForShortAddress@i& (0+255),w,b
 24380                           
 24381                           ; BSR set to: 1
 24382  0165CE  0012               	return	
 24383  0165D0                     l11529:
 24384  0165D0  0101               	movlb	1	; () banked
 24385  0165D2  2B8C               	incf	SearchForShortAddress@i& (0+255),f,b
 24386  0165D4  D7BF               	goto	l11515
 24387  0165D6                     l11533:
 24388                           
 24389                           ; BSR set to: 1
 24390                           ;miwi_mesh.c: 3256: }
 24391                           ;miwi_mesh.c: 3257: }
 24392                           ;miwi_mesh.c: 3258: }
 24393                           ;miwi_mesh.c: 3259: return 0xFF;
 24394  0165D6  0EFF               	movlw	255
 24395  0165D8  0012               	return	
 24396  0165DA                     __end_of_SearchForShortAddress:
 24397                           	opt stack 0
 24398                           tblptru	equ	0xFF8
 24399                           tblptrh	equ	0xFF7
 24400                           tblptrl	equ	0xFF6
 24401                           tablat	equ	0xFF5
 24402                           prodh	equ	0xFF4
 24403                           prodl	equ	0xFF3
 24404                           intcon	equ	0xFF2
 24405                           intcon2	equ	0xFF1
 24406                           intcon3	equ	0xFF0
 24407                           indf0	equ	0xFEF
 24408                           postinc0	equ	0xFEE
 24409                           plusw0	equ	0xFEB
 24410                           fsr0h	equ	0xFEA
 24411                           fsr0l	equ	0xFE9
 24412                           wreg	equ	0xFE8
 24413                           indf1	equ	0xFE7
 24414                           postinc1	equ	0xFE6
 24415                           postdec1	equ	0xFE5
 24416                           fsr1h	equ	0xFE2
 24417                           fsr1l	equ	0xFE1
 24418                           indf2	equ	0xFDF
 24419                           postinc2	equ	0xFDE
 24420                           postdec2	equ	0xFDD
 24421                           plusw2	equ	0xFDB
 24422                           fsr2h	equ	0xFDA
 24423                           fsr2l	equ	0xFD9
 24424                           status	equ	0xFD8
 24425                           
 24426 ;; *************** function _SearchForLongAddress *****************
 24427 ;; Defined at:
 24428 ;;		line 3326 in file "src/miwi/miwi_mesh.c"
 24429 ;; Parameters:    Size  Location     Type
 24430 ;;		None
 24431 ;; Auto vars:     Size  Location     Type
 24432 ;;  i               1    5[BANK1 ] unsigned char 
 24433 ;;  j               1    4[BANK1 ] unsigned char 
 24434 ;; Return value:  Size  Location     Type
 24435 ;;                  1    wreg      unsigned char 
 24436 ;; Registers used:
 24437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24438 ;; Tracked objects:
 24439 ;;		On entry : 0/0
 24440 ;;		On exit  : 0/0
 24441 ;;		Unchanged: 0/0
 24442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24444 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24445 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24446 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24447 ;;Total ram usage:        6 bytes
 24448 ;; Hardware stack levels used:    1
 24449 ;; Hardware stack levels required when called:    9
 24450 ;; This function calls:
 24451 ;;		Nothing
 24452 ;; This function is called by:
 24453 ;;		_MiWiTasks
 24454 ;;		_AddNodeToNetworkTable
 24455 ;;		_MiApp_EstablishConnection
 24456 ;;		_MiApp_UnicastAddress
 24457 ;; This function uses a non-reentrant model
 24458 ;;
 24459                           
 24460                           	psect	text78
 24461  015AEE                     __ptext78:
 24462                           	opt stack 0
 24463  015AEE                     _SearchForLongAddress:
 24464                           	opt stack 18
 24465                           
 24466                           ;miwi_mesh.c: 3328: uint8_t i,j;
 24467                           ;miwi_mesh.c: 3330: for(i=0;i<10;i++)
 24468                           
 24469                           ; BSR set to: 1
 24470                           ;incstack = 0
 24471  015AEE  0E00               	movlw	0
 24472  015AF0  0101               	movlb	1	; () banked
 24473  015AF2  6F8F               	movwf	SearchForLongAddress@i& (0+255),b
 24474  015AF4                     l11539:
 24475                           
 24476                           ; BSR set to: 1
 24477  015AF4  0E09               	movlw	9
 24478  015AF6  0101               	movlb	1	; () banked
 24479  015AF8  658F               	cpfsgt	SearchForLongAddress@i& (0+255),b
 24480  015AFA  D001               	goto	l11543
 24481  015AFC  D05C               	goto	l11569
 24482  015AFE                     l11543:
 24483                           
 24484                           ; BSR set to: 1
 24485                           ;miwi_mesh.c: 3331: {
 24486                           ;miwi_mesh.c: 3332: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.longAddressValid)
 24487  015AFE  0101               	movlb	1	; () banked
 24488  015B00  518F               	movf	SearchForLongAddress@i& (0+255),w,b
 24489  015B02  0D09               	mullw	9
 24490  015B04  0E08               	movlw	8
 24491  015B06  26F3               	addwf	prodl,f,c
 24492  015B08  0E00               	movlw	0
 24493  015B0A  22F4               	addwfc	prodh,f,c
 24494  015B0C  0E46               	movlw	low _ConnectionTable
 24495  015B0E  24F3               	addwf	prodl,w,c
 24496  015B10  6ED9               	movwf	fsr2l,c
 24497  015B12  0E02               	movlw	high _ConnectionTable
 24498  015B14  20F4               	addwfc	prodh,w,c
 24499  015B16  6EDA               	movwf	fsr2h,c
 24500  015B18  0102               	movlb	2	; () banked
 24501  015B1A  AEDF               	btfss	indf2,7,c
 24502  015B1C  D049               	goto	l11565
 24503                           
 24504                           ; BSR set to: 2
 24505  015B1E  0101               	movlb	1	; () banked
 24506  015B20  518F               	movf	SearchForLongAddress@i& (0+255),w,b
 24507  015B22  0D09               	mullw	9
 24508  015B24  0E08               	movlw	8
 24509  015B26  26F3               	addwf	prodl,f,c
 24510  015B28  0E00               	movlw	0
 24511  015B2A  22F4               	addwfc	prodh,f,c
 24512  015B2C  0E46               	movlw	low _ConnectionTable
 24513  015B2E  24F3               	addwf	prodl,w,c
 24514  015B30  6ED9               	movwf	fsr2l,c
 24515  015B32  0E02               	movlw	high _ConnectionTable
 24516  015B34  20F4               	addwfc	prodh,w,c
 24517  015B36  6EDA               	movwf	fsr2h,c
 24518  015B38  0102               	movlb	2	; () banked
 24519  015B3A  A4DF               	btfss	indf2,2,c
 24520  015B3C  D039               	goto	l11565
 24521                           
 24522                           ; BSR set to: 2
 24523                           ;miwi_mesh.c: 3333: {
 24524                           ;miwi_mesh.c: 3334: for(j=0;j<4;j++)
 24525  015B3E  0E00               	movlw	0
 24526  015B40  0101               	movlb	1	; () banked
 24527  015B42  6F8E               	movwf	SearchForLongAddress@j& (0+255),b
 24528  015B44                     l11549:
 24529                           
 24530                           ; BSR set to: 1
 24531  015B44  0E03               	movlw	3
 24532  015B46  0101               	movlb	1	; () banked
 24533  015B48  658E               	cpfsgt	SearchForLongAddress@j& (0+255),b
 24534  015B4A  D001               	goto	l11553
 24535  015B4C  D02E               	goto	l11561
 24536  015B4E                     l11553:
 24537                           
 24538                           ; BSR set to: 1
 24539                           ;miwi_mesh.c: 3335: {
 24540                           ;miwi_mesh.c: 3336: if(ConnectionTable[i].Address[j] != tempLongAddress[j])
 24541  015B4E  0101               	movlb	1	; () banked
 24542  015B50  518E               	movf	SearchForLongAddress@j& (0+255),w,b
 24543  015B52  0D01               	mullw	1
 24544  015B54  0E26               	movlw	low _tempLongAddress
 24545  015B56  24F3               	addwf	prodl,w,c
 24546  015B58  6ED9               	movwf	fsr2l,c
 24547  015B5A  0E01               	movlw	high _tempLongAddress
 24548  015B5C  20F4               	addwfc	prodh,w,c
 24549  015B5E  6EDA               	movwf	fsr2h,c
 24550  015B60  0101               	movlb	1	; () banked
 24551  015B62  518E               	movf	SearchForLongAddress@j& (0+255),w,b
 24552  015B64  0D01               	mullw	1
 24553  015B66  0E04               	movlw	4
 24554  015B68  26F3               	addwf	prodl,f,c
 24555  015B6A  0E00               	movlw	0
 24556  015B6C  22F4               	addwfc	prodh,f,c
 24557  015B6E  0E46               	movlw	low _ConnectionTable
 24558  015B70  0101               	movlb	1	; () banked
 24559  015B72  6F8B               	movwf	(??_SearchForLongAddress+1)& (0+255),b
 24560  015B74  0E02               	movlw	high _ConnectionTable
 24561  015B76  0101               	movlb	1	; () banked
 24562  015B78  6F8C               	movwf	(??_SearchForLongAddress+2)& (0+255),b
 24563  015B7A  50F3               	movf	prodl,w,c
 24564  015B7C  0101               	movlb	1	; () banked
 24565  015B7E  278B               	addwf	(??_SearchForLongAddress+1)& (0+255),f,b
 24566  015B80  50F4               	movf	prodh,w,c
 24567  015B82  0101               	movlb	1	; () banked
 24568  015B84  238C               	addwfc	(??_SearchForLongAddress+2)& (0+255),f,b
 24569  015B86  0101               	movlb	1	; () banked
 24570  015B88  518F               	movf	SearchForLongAddress@i& (0+255),w,b
 24571  015B8A  0D09               	mullw	9
 24572  015B8C  50F3               	movf	prodl,w,c
 24573  015B8E  0101               	movlb	1	; () banked
 24574  015B90  258B               	addwf	(??_SearchForLongAddress+1)& (0+255),w,b
 24575  015B92  6EE1               	movwf	fsr1l,c
 24576  015B94  50F4               	movf	prodh,w,c
 24577  015B96  0101               	movlb	1	; () banked
 24578  015B98  218C               	addwfc	(??_SearchForLongAddress+2)& (0+255),w,b
 24579  015B9A  6EE2               	movwf	fsr1h,c
 24580  015B9C  50DE               	movf	postinc2,w,c
 24581  015B9E  18E6               	xorwf	postinc1,w,c
 24582  015BA0  A4D8               	btfss	status,2,c
 24583  015BA2  D006               	goto	l11565
 24584                           
 24585                           ; BSR set to: 1
 24586                           
 24587                           ; BSR set to: 1
 24588                           
 24589                           ; BSR set to: 1
 24590                           ;miwi_mesh.c: 3337: {
 24591                           ;miwi_mesh.c: 3338: goto EndOfSearchLoop;
 24592  015BA4  0101               	movlb	1	; () banked
 24593  015BA6  2B8E               	incf	SearchForLongAddress@j& (0+255),f,b
 24594  015BA8  D7CD               	goto	l11549
 24595  015BAA                     l11561:
 24596                           
 24597                           ; BSR set to: 1
 24598                           ;miwi_mesh.c: 3339: }
 24599                           ;miwi_mesh.c: 3340: }
 24600                           ;miwi_mesh.c: 3341: return i;
 24601  015BAA  0101               	movlb	1	; () banked
 24602  015BAC  518F               	movf	SearchForLongAddress@i& (0+255),w,b
 24603                           
 24604                           ; BSR set to: 1
 24605  015BAE  0012               	return	
 24606  015BB0                     l11565:
 24607                           
 24608                           ;miwi_mesh.c: 3344: ;
 24609  015BB0  0101               	movlb	1	; () banked
 24610  015BB2  2B8F               	incf	SearchForLongAddress@i& (0+255),f,b
 24611  015BB4  D79F               	goto	l11539
 24612  015BB6                     l11569:
 24613                           
 24614                           ; BSR set to: 1
 24615                           ;miwi_mesh.c: 3345: }
 24616                           ;miwi_mesh.c: 3346: return 0xFF;
 24617  015BB6  0EFF               	movlw	255
 24618  015BB8  0012               	return	
 24619  015BBA                     __end_of_SearchForLongAddress:
 24620                           	opt stack 0
 24621                           tblptru	equ	0xFF8
 24622                           tblptrh	equ	0xFF7
 24623                           tblptrl	equ	0xFF6
 24624                           tablat	equ	0xFF5
 24625                           prodh	equ	0xFF4
 24626                           prodl	equ	0xFF3
 24627                           intcon	equ	0xFF2
 24628                           intcon2	equ	0xFF1
 24629                           intcon3	equ	0xFF0
 24630                           indf0	equ	0xFEF
 24631                           postinc0	equ	0xFEE
 24632                           plusw0	equ	0xFEB
 24633                           fsr0h	equ	0xFEA
 24634                           fsr0l	equ	0xFE9
 24635                           wreg	equ	0xFE8
 24636                           indf1	equ	0xFE7
 24637                           postinc1	equ	0xFE6
 24638                           postdec1	equ	0xFE5
 24639                           fsr1h	equ	0xFE2
 24640                           fsr1l	equ	0xFE1
 24641                           indf2	equ	0xFDF
 24642                           postinc2	equ	0xFDE
 24643                           postdec2	equ	0xFDD
 24644                           plusw2	equ	0xFDB
 24645                           fsr2h	equ	0xFDA
 24646                           fsr2l	equ	0xFD9
 24647                           status	equ	0xFD8
 24648                           
 24649 ;; *************** function _MiApp_DiscardMessage *****************
 24650 ;; Defined at:
 24651 ;;		line 4242 in file "src/miwi/miwi_mesh.c"
 24652 ;; Parameters:    Size  Location     Type
 24653 ;;		None
 24654 ;; Auto vars:     Size  Location     Type
 24655 ;;		None
 24656 ;; Return value:  Size  Location     Type
 24657 ;;		None               void
 24658 ;; Registers used:
 24659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24660 ;; Tracked objects:
 24661 ;;		On entry : 0/0
 24662 ;;		On exit  : 0/0
 24663 ;;		Unchanged: 0/0
 24664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24669 ;;Total ram usage:        0 bytes
 24670 ;; Hardware stack levels used:    1
 24671 ;; Hardware stack levels required when called:   10
 24672 ;; This function calls:
 24673 ;;		_MiMAC_DiscardPacket
 24674 ;; This function is called by:
 24675 ;;		_MiApp_SearchConnection
 24676 ;;		_MiApp_EstablishConnection
 24677 ;;		_MiApp_UnicastAddress
 24678 ;;		_main
 24679 ;;		_process_update_answer
 24680 ;;		_do_NETWORK_REGISTER
 24681 ;;		_do_POWER_TEST
 24682 ;;		_do_UPDATE
 24683 ;;		_MiApp_UnicastConnection
 24684 ;;		_do_PING
 24685 ;; This function uses a non-reentrant model
 24686 ;;
 24687                           
 24688                           	psect	text79
 24689  016FEC                     __ptext79:
 24690                           	opt stack 0
 24691  016FEC                     _MiApp_DiscardMessage:
 24692                           	opt stack 17
 24693                           
 24694                           ;miwi_mesh.c: 4244: MiWiStateMachine.bits.RxHasUserData = 0;
 24695                           
 24696                           ; BSR set to: 1
 24697                           ;incstack = 0
 24698  016FEC  0101               	movlb	1	; () banked
 24699  016FEE  9538               	bcf	_MiWiStateMachine& (0+255),2,b
 24700                           
 24701                           ; BSR set to: 1
 24702                           ;miwi_mesh.c: 4245: MiMAC_DiscardPacket();
 24703  016FF0  EC5C  F0B7         	call	_MiMAC_DiscardPacket	;wreg free
 24704  016FF4  0012               	return		;funcret
 24705  016FF6                     __end_of_MiApp_DiscardMessage:
 24706                           	opt stack 0
 24707                           tblptru	equ	0xFF8
 24708                           tblptrh	equ	0xFF7
 24709                           tblptrl	equ	0xFF6
 24710                           tablat	equ	0xFF5
 24711                           prodh	equ	0xFF4
 24712                           prodl	equ	0xFF3
 24713                           intcon	equ	0xFF2
 24714                           intcon2	equ	0xFF1
 24715                           intcon3	equ	0xFF0
 24716                           indf0	equ	0xFEF
 24717                           postinc0	equ	0xFEE
 24718                           plusw0	equ	0xFEB
 24719                           fsr0h	equ	0xFEA
 24720                           fsr0l	equ	0xFE9
 24721                           wreg	equ	0xFE8
 24722                           indf1	equ	0xFE7
 24723                           postinc1	equ	0xFE6
 24724                           postdec1	equ	0xFE5
 24725                           fsr1h	equ	0xFE2
 24726                           fsr1l	equ	0xFE1
 24727                           indf2	equ	0xFDF
 24728                           postinc2	equ	0xFDE
 24729                           postdec2	equ	0xFDD
 24730                           plusw2	equ	0xFDB
 24731                           fsr2h	equ	0xFDA
 24732                           fsr2l	equ	0xFD9
 24733                           status	equ	0xFD8
 24734                           
 24735 ;; *************** function _MiMAC_DiscardPacket *****************
 24736 ;; Defined at:
 24737 ;;		line 1057 in file "src/miwi/drv_mrf_miwi_89xa.c"
 24738 ;; Parameters:    Size  Location     Type
 24739 ;;		None
 24740 ;; Auto vars:     Size  Location     Type
 24741 ;;		None
 24742 ;; Return value:  Size  Location     Type
 24743 ;;		None               void
 24744 ;; Registers used:
 24745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24746 ;; Tracked objects:
 24747 ;;		On entry : 0/0
 24748 ;;		On exit  : 0/0
 24749 ;;		Unchanged: 0/0
 24750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24755 ;;Total ram usage:        0 bytes
 24756 ;; Hardware stack levels used:    1
 24757 ;; Hardware stack levels required when called:    9
 24758 ;; This function calls:
 24759 ;;		Nothing
 24760 ;; This function is called by:
 24761 ;;		_MiWiTasks
 24762 ;;		_MiApp_DiscardMessage
 24763 ;; This function uses a non-reentrant model
 24764 ;;
 24765                           
 24766                           	psect	text80
 24767  016EB8                     __ptext80:
 24768                           	opt stack 0
 24769  016EB8                     _MiMAC_DiscardPacket:
 24770                           	opt stack 16
 24771                           
 24772                           ;drv_mrf_miwi_89xa.c: 1059: if( ReceivedBankIndex < 2 )
 24773                           
 24774                           ;incstack = 0
 24775  016EB8  0E02               	movlw	2
 24776  016EBA  0101               	movlb	1	; () banked
 24777  016EBC  6145               	cpfslt	_ReceivedBankIndex& (0+255),b
 24778  016EBE  0012               	return	
 24779                           
 24780                           ; BSR set to: 1
 24781                           ;drv_mrf_miwi_89xa.c: 1060: {
 24782                           ;drv_mrf_miwi_89xa.c: 1061: RxPacket[ReceivedBankIndex].flags.Val = 0;
 24783  016EC0  0101               	movlb	1	; () banked
 24784  016EC2  5145               	movf	_ReceivedBankIndex& (0+255),w,b
 24785  016EC4  0D42               	mullw	66
 24786  016EC6  0E50               	movlw	low _RxPacket
 24787  016EC8  24F3               	addwf	prodl,w,c
 24788  016ECA  6ED9               	movwf	fsr2l,c
 24789  016ECC  0E03               	movlw	high _RxPacket
 24790  016ECE  20F4               	addwfc	prodh,w,c
 24791  016ED0  6EDA               	movwf	fsr2h,c
 24792  016ED2  0E00               	movlw	0
 24793  016ED4  6EDF               	movwf	indf2,c
 24794                           
 24795                           ; BSR set to: 1
 24796                           ;drv_mrf_miwi_89xa.c: 1062: ReceivedBankIndex = 0xFF;
 24797  016ED6  0101               	movlb	1	; () banked
 24798  016ED8  6945               	setf	_ReceivedBankIndex& (0+255),b
 24799  016EDA  0012               	return	
 24800  016EDC                     __end_of_MiMAC_DiscardPacket:
 24801                           	opt stack 0
 24802                           tblptru	equ	0xFF8
 24803                           tblptrh	equ	0xFF7
 24804                           tblptrl	equ	0xFF6
 24805                           tablat	equ	0xFF5
 24806                           prodh	equ	0xFF4
 24807                           prodl	equ	0xFF3
 24808                           intcon	equ	0xFF2
 24809                           intcon2	equ	0xFF1
 24810                           intcon3	equ	0xFF0
 24811                           indf0	equ	0xFEF
 24812                           postinc0	equ	0xFEE
 24813                           plusw0	equ	0xFEB
 24814                           fsr0h	equ	0xFEA
 24815                           fsr0l	equ	0xFE9
 24816                           wreg	equ	0xFE8
 24817                           indf1	equ	0xFE7
 24818                           postinc1	equ	0xFE6
 24819                           postdec1	equ	0xFE5
 24820                           fsr1h	equ	0xFE2
 24821                           fsr1l	equ	0xFE1
 24822                           indf2	equ	0xFDF
 24823                           postinc2	equ	0xFDE
 24824                           postdec2	equ	0xFDD
 24825                           plusw2	equ	0xFDB
 24826                           fsr2h	equ	0xFDA
 24827                           fsr2l	equ	0xFD9
 24828                           status	equ	0xFD8
 24829                           
 24830 ;; *************** function _MiApp_ConnectionMode *****************
 24831 ;; Defined at:
 24832 ;;		line 3921 in file "src/miwi/miwi_mesh.c"
 24833 ;; Parameters:    Size  Location     Type
 24834 ;;  Mode            1    wreg     unsigned char 
 24835 ;; Auto vars:     Size  Location     Type
 24836 ;;  Mode            1    1[BANK1 ] unsigned char 
 24837 ;; Return value:  Size  Location     Type
 24838 ;;		None               void
 24839 ;; Registers used:
 24840 ;;		wreg, status,2, status,0
 24841 ;; Tracked objects:
 24842 ;;		On entry : 0/0
 24843 ;;		On exit  : 0/0
 24844 ;;		Unchanged: 0/0
 24845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24847 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24848 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24849 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24850 ;;Total ram usage:        2 bytes
 24851 ;; Hardware stack levels used:    1
 24852 ;; Hardware stack levels required when called:    9
 24853 ;; This function calls:
 24854 ;;		Nothing
 24855 ;; This function is called by:
 24856 ;;		_main
 24857 ;; This function uses a non-reentrant model
 24858 ;;
 24859                           
 24860                           	psect	text81
 24861  016E3E                     __ptext81:
 24862                           	opt stack 0
 24863  016E3E                     _MiApp_ConnectionMode:
 24864                           	opt stack 21
 24865                           
 24866                           ; BSR set to: 1
 24867                           ;incstack = 0
 24868                           ;MiApp_ConnectionMode@Mode stored from wreg
 24869  016E3E  0101               	movlb	1	; () banked
 24870  016E40  6F8B               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 24871                           
 24872                           ;miwi_mesh.c: 3923: if( Mode > 3 )
 24873  016E42  0E03               	movlw	3
 24874  016E44  0101               	movlb	1	; () banked
 24875  016E46  658B               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 24876  016E48  D001               	goto	l755
 24877  016E4A  0012               	return	
 24878  016E4C                     l755:
 24879                           
 24880                           ; BSR set to: 1
 24881                           ;miwi_mesh.c: 3926: }
 24882                           ;miwi_mesh.c: 3927: ConnMode = Mode;
 24883  016E4C  C18B  F0B2         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 24884                           
 24885                           ; BSR set to: 1
 24886                           ;miwi_mesh.c: 3928: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 24887  016E50  C0B2  F18A         	movff	_ConnMode,??_MiApp_ConnectionMode
 24888  016E54  0101               	movlb	1	; () banked
 24889  016E56  3B8A               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 24890  016E58  0101               	movlb	1	; () banked
 24891  016E5A  5143               	movf	_MiWiCapacityInfo& (0+255),w,b
 24892  016E5C  0101               	movlb	1	; () banked
 24893  016E5E  198A               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 24894  016E60  0BCF               	andlw	-49
 24895  016E62  198A               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 24896  016E64  0101               	movlb	1	; () banked
 24897  016E66  6F43               	movwf	_MiWiCapacityInfo& (0+255),b
 24898                           
 24899                           ; BSR set to: 1
 24900  016E68  0012               	return		;funcret
 24901  016E6A                     __end_of_MiApp_ConnectionMode:
 24902                           	opt stack 0
 24903                           tblptru	equ	0xFF8
 24904                           tblptrh	equ	0xFF7
 24905                           tblptrl	equ	0xFF6
 24906                           tablat	equ	0xFF5
 24907                           prodh	equ	0xFF4
 24908                           prodl	equ	0xFF3
 24909                           intcon	equ	0xFF2
 24910                           intcon2	equ	0xFF1
 24911                           intcon3	equ	0xFF0
 24912                           indf0	equ	0xFEF
 24913                           postinc0	equ	0xFEE
 24914                           plusw0	equ	0xFEB
 24915                           fsr0h	equ	0xFEA
 24916                           fsr0l	equ	0xFE9
 24917                           wreg	equ	0xFE8
 24918                           indf1	equ	0xFE7
 24919                           postinc1	equ	0xFE6
 24920                           postdec1	equ	0xFE5
 24921                           fsr1h	equ	0xFE2
 24922                           fsr1l	equ	0xFE1
 24923                           indf2	equ	0xFDF
 24924                           postinc2	equ	0xFDE
 24925                           postdec2	equ	0xFDD
 24926                           plusw2	equ	0xFDB
 24927                           fsr2h	equ	0xFDA
 24928                           fsr2l	equ	0xFD9
 24929                           status	equ	0xFD8
 24930                           
 24931 ;; *************** function _SYS_InterruptLow *****************
 24932 ;; Defined at:
 24933 ;;		line 722 in file "src/main.c"
 24934 ;; Parameters:    Size  Location     Type
 24935 ;;		None
 24936 ;; Auto vars:     Size  Location     Type
 24937 ;;		None
 24938 ;; Return value:  Size  Location     Type
 24939 ;;		None               void
 24940 ;; Registers used:
 24941 ;;		wreg, status,2, status,0, cstack
 24942 ;; Tracked objects:
 24943 ;;		On entry : 0/0
 24944 ;;		On exit  : 0/0
 24945 ;;		Unchanged: 0/0
 24946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24949 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24950 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24951 ;;Total ram usage:       17 bytes
 24952 ;; Hardware stack levels used:    1
 24953 ;; Hardware stack levels required when called:    8
 24954 ;; This function calls:
 24955 ;;		i1___ftadd
 24956 ;; This function is called by:
 24957 ;;		Interrupt level 1
 24958 ;; This function uses a non-reentrant model
 24959 ;;
 24960                           
 24961                           	psect	intcodelo
 24962  000018                     __pintcodelo:
 24963                           	opt stack 0
 24964  000018                     _SYS_InterruptLow:
 24965                           	opt stack 11
 24966                           
 24967                           ; BSR set to: 1
 24968                           ;incstack = 0
 24969  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 24970  00001A  CFD8 F015          	movff	status,??_SYS_InterruptLow
 24971  00001E  CFE8 F016          	movff	wreg,??_SYS_InterruptLow+1
 24972  000022  CFE0 F017          	movff	bsr,??_SYS_InterruptLow+2
 24973  000026  CFFA F018          	movff	pclath,??_SYS_InterruptLow+3
 24974  00002A  CFFB F019          	movff	pclatu,??_SYS_InterruptLow+4
 24975  00002E  CFE9 F01A          	movff	fsr0l,??_SYS_InterruptLow+5
 24976  000032  CFEA F01B          	movff	fsr0h,??_SYS_InterruptLow+6
 24977  000036  CFE1 F01C          	movff	fsr1l,??_SYS_InterruptLow+7
 24978  00003A  CFE2 F01D          	movff	fsr1h,??_SYS_InterruptLow+8
 24979  00003E  CFD9 F01E          	movff	fsr2l,??_SYS_InterruptLow+9
 24980  000042  CFDA F01F          	movff	fsr2h,??_SYS_InterruptLow+10
 24981  000046  CFF3 F020          	movff	prodl,??_SYS_InterruptLow+11
 24982  00004A  CFF4 F021          	movff	prodh,??_SYS_InterruptLow+12
 24983  00004E  CFF6 F022          	movff	tblptrl,??_SYS_InterruptLow+13
 24984  000052  CFF7 F023          	movff	tblptrh,??_SYS_InterruptLow+14
 24985  000056  CFF8 F024          	movff	tblptru,??_SYS_InterruptLow+15
 24986  00005A  CFF5 F025          	movff	tablat,??_SYS_InterruptLow+16
 24987                           
 24988                           ;main.c: 725: if(PIR3bits.RTCCIF)
 24989  00005E  A0A4               	btfss	4004,0,c	;volatile
 24990  000060  D026               	goto	i1l1229
 24991                           
 24992                           ;main.c: 726: {
 24993                           ;main.c: 727: m_uptime_days = m_uptime_days + 0.000671296F;
 24994  000062  C133  F009         	movff	_m_uptime_days,i1___ftadd@f1	;volatile
 24995  000066  C134  F00A         	movff	_m_uptime_days+1,i1___ftadd@f1+1	;volatile
 24996  00006A  C135  F00B         	movff	_m_uptime_days+2,i1___ftadd@f1+2	;volatile
 24997  00006E  0EFA               	movlw	250
 24998  000070  6E0C               	movwf	i1___ftadd@f2,c
 24999  000072  0E2F               	movlw	47
 25000  000074  6E0D               	movwf	i1___ftadd@f2+1,c
 25001  000076  0E3A               	movlw	58
 25002  000078  6E0E               	movwf	i1___ftadd@f2+2,c
 25003  00007A  ECC4  F09F         	call	i1___ftadd	;wreg free
 25004  00007E  C009  F133         	movff	?i1___ftadd,_m_uptime_days	;volatile
 25005  000082  C00A  F134         	movff	?i1___ftadd+1,_m_uptime_days+1	;volatile
 25006  000086  C00B  F135         	movff	?i1___ftadd+2,_m_uptime_days+2	;volatile
 25007                           
 25008                           ;main.c: 728: timer_count = timer_count - 1;
 25009  00008A  0448               	decf	_timer_count,w,c	;volatile
 25010  00008C  6E48               	movwf	_timer_count,c	;volatile
 25011                           
 25012                           ;main.c: 729: if (timer_count == 0)
 25013  00008E  5048               	movf	_timer_count,w,c	;volatile
 25014  000090  A4D8               	btfss	status,2,c
 25015  000092  D00C               	goto	i1l1226
 25016                           
 25017                           ;main.c: 730: {
 25018                           ;main.c: 731: timer_flag = 1;
 25019  000094  0E01               	movlw	1
 25020  000096  0101               	movlb	1	; () banked
 25021  000098  6F4D               	movwf	_timer_flag& (0+255),b	;volatile
 25022                           
 25023                           ;main.c: 732: if (m_update_frequency == 0)
 25024  00009A  0101               	movlb	1	; () banked
 25025  00009C  51FF               	movf	_m_update_frequency& (0+255),w,b	;volatile
 25026  00009E  A4D8               	btfss	status,2,c
 25027  0000A0  D003               	goto	i1l1227
 25028                           
 25029                           ; BSR set to: 1
 25030                           ;main.c: 733: timer_count = 1;
 25031  0000A2  0E01               	movlw	1
 25032  0000A4  6E48               	movwf	_timer_count,c	;volatile
 25033  0000A6  D002               	goto	i1l1226
 25034  0000A8                     i1l1227:
 25035                           
 25036                           ; BSR set to: 1
 25037                           ;main.c: 734: else
 25038                           ;main.c: 735: timer_count = m_update_frequency;
 25039  0000A8  C1FF  F048         	movff	_m_update_frequency,_timer_count	;volatile
 25040  0000AC                     i1l1226:
 25041                           
 25042                           ;main.c: 736: }
 25043                           ;main.c: 737: PIR3bits.RTCCIF = 0;
 25044  0000AC  90A4               	bcf	4004,0,c	;volatile
 25045  0000AE                     i1l1229:
 25046  0000AE  C025  FFF5         	movff	??_SYS_InterruptLow+16,tablat
 25047  0000B2  C024  FFF8         	movff	??_SYS_InterruptLow+15,tblptru
 25048  0000B6  C023  FFF7         	movff	??_SYS_InterruptLow+14,tblptrh
 25049  0000BA  C022  FFF6         	movff	??_SYS_InterruptLow+13,tblptrl
 25050  0000BE  C021  FFF4         	movff	??_SYS_InterruptLow+12,prodh
 25051  0000C2  C020  FFF3         	movff	??_SYS_InterruptLow+11,prodl
 25052  0000C6  C01F  FFDA         	movff	??_SYS_InterruptLow+10,fsr2h
 25053  0000CA  C01E  FFD9         	movff	??_SYS_InterruptLow+9,fsr2l
 25054  0000CE  C01D  FFE2         	movff	??_SYS_InterruptLow+8,fsr1h
 25055  0000D2  C01C  FFE1         	movff	??_SYS_InterruptLow+7,fsr1l
 25056  0000D6  C01B  FFEA         	movff	??_SYS_InterruptLow+6,fsr0h
 25057  0000DA  C01A  FFE9         	movff	??_SYS_InterruptLow+5,fsr0l
 25058  0000DE  C019  FFFB         	movff	??_SYS_InterruptLow+4,pclatu
 25059  0000E2  C018  FFFA         	movff	??_SYS_InterruptLow+3,pclath
 25060  0000E6  C017  FFE0         	movff	??_SYS_InterruptLow+2,bsr
 25061  0000EA  C016  FFE8         	movff	??_SYS_InterruptLow+1,wreg
 25062  0000EE  C015  FFD8         	movff	??_SYS_InterruptLow,status
 25063  0000F2  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 25064  0000F4  0010               	retfie	
 25065  0000F6                     __end_of_SYS_InterruptLow:
 25066                           	opt stack 0
 25067                           pclatu	equ	0xFFB
 25068                           pclath	equ	0xFFA
 25069                           tblptru	equ	0xFF8
 25070                           tblptrh	equ	0xFF7
 25071                           tblptrl	equ	0xFF6
 25072                           tablat	equ	0xFF5
 25073                           prodh	equ	0xFF4
 25074                           prodl	equ	0xFF3
 25075                           intcon	equ	0xFF2
 25076                           intcon2	equ	0xFF1
 25077                           intcon3	equ	0xFF0
 25078                           indf0	equ	0xFEF
 25079                           postinc0	equ	0xFEE
 25080                           plusw0	equ	0xFEB
 25081                           fsr0h	equ	0xFEA
 25082                           fsr0l	equ	0xFE9
 25083                           wreg	equ	0xFE8
 25084                           indf1	equ	0xFE7
 25085                           postinc1	equ	0xFE6
 25086                           postdec1	equ	0xFE5
 25087                           fsr1h	equ	0xFE2
 25088                           fsr1l	equ	0xFE1
 25089                           bsr	equ	0xFE0
 25090                           indf2	equ	0xFDF
 25091                           postinc2	equ	0xFDE
 25092                           postdec2	equ	0xFDD
 25093                           plusw2	equ	0xFDB
 25094                           fsr2h	equ	0xFDA
 25095                           fsr2l	equ	0xFD9
 25096                           status	equ	0xFD8
 25097                           
 25098 ;; *************** function i1___ftadd *****************
 25099 ;; Defined at:
 25100 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
 25101 ;; Parameters:    Size  Location     Type
 25102 ;;  f1              3    8[COMRAM] float 
 25103 ;;  f2              3   11[COMRAM] float 
 25104 ;; Auto vars:     Size  Location     Type
 25105 ;;  __ftadd         1   19[COMRAM] unsigned char 
 25106 ;;  __ftadd         1   18[COMRAM] unsigned char 
 25107 ;;  __ftadd         1   17[COMRAM] unsigned char 
 25108 ;; Return value:  Size  Location     Type
 25109 ;;                  3    8[COMRAM] float 
 25110 ;; Registers used:
 25111 ;;		wreg, status,2, status,0, cstack
 25112 ;; Tracked objects:
 25113 ;;		On entry : 0/0
 25114 ;;		On exit  : 0/0
 25115 ;;		Unchanged: 0/0
 25116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25117 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25118 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25119 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25120 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25121 ;;Total ram usage:       12 bytes
 25122 ;; Hardware stack levels used:    1
 25123 ;; Hardware stack levels required when called:    7
 25124 ;; This function calls:
 25125 ;;		i1___ftpack
 25126 ;; This function is called by:
 25127 ;;		_SYS_InterruptLow
 25128 ;; This function uses a non-reentrant model
 25129 ;;
 25130                           
 25131                           	psect	text83
 25132  013F88                     __ptext83:
 25133                           	opt stack 0
 25134  013F88                     i1___ftadd:
 25135                           	opt stack 11
 25136                           
 25137                           ;incstack = 0
 25138  013F88  C00B  F00F         	movff	i1___ftadd@f1+2,??i1___ftadd
 25139  013F8C  6A10               	clrf	(??i1___ftadd+1)& (0+255),c
 25140  013F8E  6A11               	clrf	(??i1___ftadd+2)& (0+255),c
 25141  013F90  340A               	rlcf	i1___ftadd@f1+1,w,c
 25142  013F92  360F               	rlcf	??i1___ftadd& (0+255),f,c
 25143  013F94  E301               	bnc	u1165_21
 25144  013F96  8010               	bsf	(??i1___ftadd+1)& (0+255),0,c
 25145  013F98                     u1165_21:
 25146  013F98  500F               	movf	??i1___ftadd,w,c
 25147  013F9A  6E14               	movwf	i1___ftadd@exp1,c
 25148  013F9C  C00E  F00F         	movff	i1___ftadd@f2+2,??i1___ftadd
 25149  013FA0  6A10               	clrf	(??i1___ftadd+1)& (0+255),c
 25150  013FA2  6A11               	clrf	(??i1___ftadd+2)& (0+255),c
 25151  013FA4  340D               	rlcf	i1___ftadd@f2+1,w,c
 25152  013FA6  360F               	rlcf	??i1___ftadd& (0+255),f,c
 25153  013FA8  E301               	bnc	u1166_21
 25154  013FAA  8010               	bsf	(??i1___ftadd+1)& (0+255),0,c
 25155  013FAC                     u1166_21:
 25156  013FAC  500F               	movf	??i1___ftadd,w,c
 25157  013FAE  6E13               	movwf	i1___ftadd@exp2,c
 25158  013FB0  5014               	movf	i1___ftadd@exp1,w,c
 25159  013FB2  B4D8               	btfsc	status,2,c
 25160  013FB4  D00B               	goto	i1l1783
 25161  013FB6  5013               	movf	i1___ftadd@exp2,w,c
 25162  013FB8  5C14               	subwf	i1___ftadd@exp1,w,c
 25163  013FBA  B0D8               	btfsc	status,0,c
 25164  013FBC  D00E               	goto	i1l10511
 25165  013FBE  5014               	movf	i1___ftadd@exp1,w,c
 25166  013FC0  0800               	sublw	0
 25167  013FC2  2413               	addwf	i1___ftadd@exp2,w,c
 25168  013FC4  6E0F               	movwf	??i1___ftadd& (0+255),c
 25169  013FC6  0E18               	movlw	24
 25170  013FC8  640F               	cpfsgt	??i1___ftadd,c
 25171  013FCA  D007               	goto	i1l10511
 25172  013FCC                     i1l1783:
 25173  013FCC  C00C  F009         	movff	i1___ftadd@f2,?i1___ftadd
 25174  013FD0  C00D  F00A         	movff	i1___ftadd@f2+1,?i1___ftadd+1
 25175  013FD4  C00E  F00B         	movff	i1___ftadd@f2+2,?i1___ftadd+2
 25176  013FD8  0012               	return	
 25177  013FDA                     i1l10511:
 25178  013FDA  5013               	movf	i1___ftadd@exp2,w,c
 25179  013FDC  B4D8               	btfsc	status,2,c
 25180  013FDE  D00B               	goto	i1l1787
 25181  013FE0  5014               	movf	i1___ftadd@exp1,w,c
 25182  013FE2  5C13               	subwf	i1___ftadd@exp2,w,c
 25183  013FE4  B0D8               	btfsc	status,0,c
 25184  013FE6  D00E               	goto	i1l10517
 25185  013FE8  5013               	movf	i1___ftadd@exp2,w,c
 25186  013FEA  0800               	sublw	0
 25187  013FEC  2414               	addwf	i1___ftadd@exp1,w,c
 25188  013FEE  6E0F               	movwf	??i1___ftadd& (0+255),c
 25189  013FF0  0E18               	movlw	24
 25190  013FF2  640F               	cpfsgt	??i1___ftadd,c
 25191  013FF4  D007               	goto	i1l10517
 25192  013FF6                     i1l1787:
 25193  013FF6  C009  F009         	movff	i1___ftadd@f1,?i1___ftadd
 25194  013FFA  C00A  F00A         	movff	i1___ftadd@f1+1,?i1___ftadd+1
 25195  013FFE  C00B  F00B         	movff	i1___ftadd@f1+2,?i1___ftadd+2
 25196  014002  0012               	return	
 25197  014004                     i1l10517:
 25198  014004  0E06               	movlw	6
 25199  014006  6E12               	movwf	i1___ftadd@sign,c
 25200  014008  BE0B               	btfsc	i1___ftadd@f1+2,7,c
 25201  01400A  8E12               	bsf	i1___ftadd@sign,7,c
 25202  01400C  BE0E               	btfsc	i1___ftadd@f2+2,7,c
 25203  01400E  8C12               	bsf	i1___ftadd@sign,6,c
 25204  014010  8E0A               	bsf	i1___ftadd@f1+1,7,c
 25205  014012  0EFF               	movlw	255
 25206  014014  1609               	andwf	i1___ftadd@f1,f,c
 25207  014016  0EFF               	movlw	255
 25208  014018  160A               	andwf	i1___ftadd@f1+1,f,c
 25209  01401A  0E00               	movlw	0
 25210  01401C  160B               	andwf	i1___ftadd@f1+2,f,c
 25211  01401E  8E0D               	bsf	i1___ftadd@f2+1,7,c
 25212  014020  0EFF               	movlw	255
 25213  014022  160C               	andwf	i1___ftadd@f2,f,c
 25214  014024  0EFF               	movlw	255
 25215  014026  160D               	andwf	i1___ftadd@f2+1,f,c
 25216  014028  0E00               	movlw	0
 25217  01402A  160E               	andwf	i1___ftadd@f2+2,f,c
 25218  01402C  5013               	movf	i1___ftadd@exp2,w,c
 25219  01402E  5C14               	subwf	i1___ftadd@exp1,w,c
 25220  014030  B0D8               	btfsc	status,0,c
 25221  014032  D01B               	goto	i1l10543
 25222  014034                     i1l10533:
 25223  014034  90D8               	bcf	status,0,c
 25224  014036  360C               	rlcf	i1___ftadd@f2,f,c
 25225  014038  360D               	rlcf	i1___ftadd@f2+1,f,c
 25226  01403A  360E               	rlcf	i1___ftadd@f2+2,f,c
 25227  01403C  0613               	decf	i1___ftadd@exp2,f,c
 25228  01403E  5014               	movf	i1___ftadd@exp1,w,c
 25229  014040  1813               	xorwf	i1___ftadd@exp2,w,c
 25230  014042  B4D8               	btfsc	status,2,c
 25231  014044  D00D               	goto	i1l10541
 25232  014046  0612               	decf	i1___ftadd@sign,f,c
 25233  014048  C012  F00F         	movff	i1___ftadd@sign,??i1___ftadd
 25234  01404C  0E07               	movlw	7
 25235  01404E  160F               	andwf	??i1___ftadd,f,c
 25236  014050  B4D8               	btfsc	status,2,c
 25237  014052  D006               	goto	i1l10541
 25238  014054  D7EF               	goto	i1l10533
 25239  014056                     i1l10539:
 25240  014056  90D8               	bcf	status,0,c
 25241  014058  320B               	rrcf	i1___ftadd@f1+2,f,c
 25242  01405A  320A               	rrcf	i1___ftadd@f1+1,f,c
 25243  01405C  3209               	rrcf	i1___ftadd@f1,f,c
 25244  01405E  2A14               	incf	i1___ftadd@exp1,f,c
 25245  014060                     i1l10541:
 25246  014060  5013               	movf	i1___ftadd@exp2,w,c
 25247  014062  1814               	xorwf	i1___ftadd@exp1,w,c
 25248  014064  B4D8               	btfsc	status,2,c
 25249  014066  D01F               	goto	i1l1798
 25250  014068  D7F6               	goto	i1l10539
 25251  01406A                     i1l10543:
 25252  01406A  5014               	movf	i1___ftadd@exp1,w,c
 25253  01406C  5C13               	subwf	i1___ftadd@exp2,w,c
 25254  01406E  B0D8               	btfsc	status,0,c
 25255  014070  D01A               	goto	i1l1798
 25256  014072                     i1l10545:
 25257  014072  90D8               	bcf	status,0,c
 25258  014074  3609               	rlcf	i1___ftadd@f1,f,c
 25259  014076  360A               	rlcf	i1___ftadd@f1+1,f,c
 25260  014078  360B               	rlcf	i1___ftadd@f1+2,f,c
 25261  01407A  0614               	decf	i1___ftadd@exp1,f,c
 25262  01407C  5014               	movf	i1___ftadd@exp1,w,c
 25263  01407E  1813               	xorwf	i1___ftadd@exp2,w,c
 25264  014080  B4D8               	btfsc	status,2,c
 25265  014082  D00D               	goto	i1l10553
 25266  014084  0612               	decf	i1___ftadd@sign,f,c
 25267  014086  C012  F00F         	movff	i1___ftadd@sign,??i1___ftadd
 25268  01408A  0E07               	movlw	7
 25269  01408C  160F               	andwf	??i1___ftadd,f,c
 25270  01408E  B4D8               	btfsc	status,2,c
 25271  014090  D006               	goto	i1l10553
 25272  014092  D7EF               	goto	i1l10545
 25273  014094                     i1l10551:
 25274  014094  90D8               	bcf	status,0,c
 25275  014096  320E               	rrcf	i1___ftadd@f2+2,f,c
 25276  014098  320D               	rrcf	i1___ftadd@f2+1,f,c
 25277  01409A  320C               	rrcf	i1___ftadd@f2,f,c
 25278  01409C  2A13               	incf	i1___ftadd@exp2,f,c
 25279  01409E                     i1l10553:
 25280  01409E  5013               	movf	i1___ftadd@exp2,w,c
 25281  0140A0  1814               	xorwf	i1___ftadd@exp1,w,c
 25282  0140A2  A4D8               	btfss	status,2,c
 25283  0140A4  D7F7               	goto	i1l10551
 25284  0140A6                     i1l1798:
 25285  0140A6  AE12               	btfss	i1___ftadd@sign,7,c
 25286  0140A8  D00C               	goto	i1l1807
 25287  0140AA  0EFF               	movlw	255
 25288  0140AC  1A09               	xorwf	i1___ftadd@f1,f,c
 25289  0140AE  0EFF               	movlw	255
 25290  0140B0  1A0A               	xorwf	i1___ftadd@f1+1,f,c
 25291  0140B2  0EFF               	movlw	255
 25292  0140B4  1A0B               	xorwf	i1___ftadd@f1+2,f,c
 25293  0140B6  0E01               	movlw	1
 25294  0140B8  2609               	addwf	i1___ftadd@f1,f,c
 25295  0140BA  0E00               	movlw	0
 25296  0140BC  220A               	addwfc	i1___ftadd@f1+1,f,c
 25297  0140BE  0E00               	movlw	0
 25298  0140C0  220B               	addwfc	i1___ftadd@f1+2,f,c
 25299  0140C2                     i1l1807:
 25300  0140C2  AC12               	btfss	i1___ftadd@sign,6,c
 25301  0140C4  D00C               	goto	i1l10559
 25302  0140C6  0EFF               	movlw	255
 25303  0140C8  1A0C               	xorwf	i1___ftadd@f2,f,c
 25304  0140CA  0EFF               	movlw	255
 25305  0140CC  1A0D               	xorwf	i1___ftadd@f2+1,f,c
 25306  0140CE  0EFF               	movlw	255
 25307  0140D0  1A0E               	xorwf	i1___ftadd@f2+2,f,c
 25308  0140D2  0E01               	movlw	1
 25309  0140D4  260C               	addwf	i1___ftadd@f2,f,c
 25310  0140D6  0E00               	movlw	0
 25311  0140D8  220D               	addwfc	i1___ftadd@f2+1,f,c
 25312  0140DA  0E00               	movlw	0
 25313  0140DC  220E               	addwfc	i1___ftadd@f2+2,f,c
 25314  0140DE                     i1l10559:
 25315  0140DE  0E00               	movlw	0
 25316  0140E0  6E12               	movwf	i1___ftadd@sign,c
 25317  0140E2  5009               	movf	i1___ftadd@f1,w,c
 25318  0140E4  260C               	addwf	i1___ftadd@f2,f,c
 25319  0140E6  500A               	movf	i1___ftadd@f1+1,w,c
 25320  0140E8  220D               	addwfc	i1___ftadd@f2+1,f,c
 25321  0140EA  500B               	movf	i1___ftadd@f1+2,w,c
 25322  0140EC  220E               	addwfc	i1___ftadd@f2+2,f,c
 25323  0140EE  AE0E               	btfss	i1___ftadd@f2+2,7,c
 25324  0140F0  D00E               	goto	i1l10569
 25325  0140F2  0EFF               	movlw	255
 25326  0140F4  1A0C               	xorwf	i1___ftadd@f2,f,c
 25327  0140F6  0EFF               	movlw	255
 25328  0140F8  1A0D               	xorwf	i1___ftadd@f2+1,f,c
 25329  0140FA  0EFF               	movlw	255
 25330  0140FC  1A0E               	xorwf	i1___ftadd@f2+2,f,c
 25331  0140FE  0E01               	movlw	1
 25332  014100  260C               	addwf	i1___ftadd@f2,f,c
 25333  014102  0E00               	movlw	0
 25334  014104  220D               	addwfc	i1___ftadd@f2+1,f,c
 25335  014106  0E00               	movlw	0
 25336  014108  220E               	addwfc	i1___ftadd@f2+2,f,c
 25337  01410A  0E01               	movlw	1
 25338  01410C  6E12               	movwf	i1___ftadd@sign,c
 25339  01410E                     i1l10569:
 25340  01410E  C00C  F001         	movff	i1___ftadd@f2,i1___ftpack@arg
 25341  014112  C00D  F002         	movff	i1___ftadd@f2+1,i1___ftpack@arg+1
 25342  014116  C00E  F003         	movff	i1___ftadd@f2+2,i1___ftpack@arg+2
 25343  01411A  C014  F004         	movff	i1___ftadd@exp1,i1___ftpack@exp
 25344  01411E  C012  F005         	movff	i1___ftadd@sign,i1___ftpack@sign
 25345  014122  EC79  F0B0         	call	i1___ftpack	;wreg free
 25346  014126  C001  F009         	movff	?i1___ftpack,?i1___ftadd
 25347  01412A  C002  F00A         	movff	?i1___ftpack+1,?i1___ftadd+1
 25348  01412E  C003  F00B         	movff	?i1___ftpack+2,?i1___ftadd+2
 25349  014132  0012               	return	
 25350  014134                     __end_ofi1___ftadd:
 25351                           	opt stack 0
 25352                           pclatu	equ	0xFFB
 25353                           pclath	equ	0xFFA
 25354                           tblptru	equ	0xFF8
 25355                           tblptrh	equ	0xFF7
 25356                           tblptrl	equ	0xFF6
 25357                           tablat	equ	0xFF5
 25358                           prodh	equ	0xFF4
 25359                           prodl	equ	0xFF3
 25360                           intcon	equ	0xFF2
 25361                           intcon2	equ	0xFF1
 25362                           intcon3	equ	0xFF0
 25363                           indf0	equ	0xFEF
 25364                           postinc0	equ	0xFEE
 25365                           plusw0	equ	0xFEB
 25366                           fsr0h	equ	0xFEA
 25367                           fsr0l	equ	0xFE9
 25368                           wreg	equ	0xFE8
 25369                           indf1	equ	0xFE7
 25370                           postinc1	equ	0xFE6
 25371                           postdec1	equ	0xFE5
 25372                           fsr1h	equ	0xFE2
 25373                           fsr1l	equ	0xFE1
 25374                           bsr	equ	0xFE0
 25375                           indf2	equ	0xFDF
 25376                           postinc2	equ	0xFDE
 25377                           postdec2	equ	0xFDD
 25378                           plusw2	equ	0xFDB
 25379                           fsr2h	equ	0xFDA
 25380                           fsr2l	equ	0xFD9
 25381                           status	equ	0xFD8
 25382                           
 25383 ;; *************** function i1___ftpack *****************
 25384 ;; Defined at:
 25385 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
 25386 ;; Parameters:    Size  Location     Type
 25387 ;;  arg             3    0[COMRAM] unsigned um
 25388 ;;  exp             1    3[COMRAM] unsigned char 
 25389 ;;  sign            1    4[COMRAM] unsigned char 
 25390 ;; Auto vars:     Size  Location     Type
 25391 ;;		None
 25392 ;; Return value:  Size  Location     Type
 25393 ;;                  3    0[COMRAM] float 
 25394 ;; Registers used:
 25395 ;;		wreg, status,2, status,0
 25396 ;; Tracked objects:
 25397 ;;		On entry : 0/0
 25398 ;;		On exit  : 0/0
 25399 ;;		Unchanged: 0/0
 25400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25401 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25403 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25404 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25405 ;;Total ram usage:        8 bytes
 25406 ;; Hardware stack levels used:    1
 25407 ;; Hardware stack levels required when called:    6
 25408 ;; This function calls:
 25409 ;;		Nothing
 25410 ;; This function is called by:
 25411 ;;		i1___ftadd
 25412 ;; This function uses a non-reentrant model
 25413 ;;
 25414                           
 25415                           	psect	text84
 25416  0160F2                     __ptext84:
 25417                           	opt stack 0
 25418  0160F2                     i1___ftpack:
 25419                           	opt stack 11
 25420                           
 25421                           ;incstack = 0
 25422  0160F2  5004               	movf	i1___ftpack@exp,w,c
 25423  0160F4  B4D8               	btfsc	status,2,c
 25424  0160F6  D005               	goto	i1l9415
 25425  0160F8  5001               	movf	i1___ftpack@arg,w,c
 25426  0160FA  1002               	iorwf	i1___ftpack@arg+1,w,c
 25427  0160FC  1003               	iorwf	i1___ftpack@arg+2,w,c
 25428  0160FE  A4D8               	btfss	status,2,c
 25429  016100  D00C               	goto	i1l9421
 25430  016102                     i1l9415:
 25431  016102  0E00               	movlw	0
 25432  016104  6E01               	movwf	?i1___ftpack,c
 25433  016106  0E00               	movlw	0
 25434  016108  6E02               	movwf	?i1___ftpack+1,c
 25435  01610A  0E00               	movlw	0
 25436  01610C  6E03               	movwf	?i1___ftpack+2,c
 25437  01610E  0012               	return	
 25438  016110                     i1l9419:
 25439  016110  2A04               	incf	i1___ftpack@exp,f,c
 25440  016112  90D8               	bcf	status,0,c
 25441  016114  3203               	rrcf	i1___ftpack@arg+2,f,c
 25442  016116  3202               	rrcf	i1___ftpack@arg+1,f,c
 25443  016118  3201               	rrcf	i1___ftpack@arg,f,c
 25444  01611A                     i1l9421:
 25445  01611A  0E00               	movlw	0
 25446  01611C  1401               	andwf	i1___ftpack@arg,w,c
 25447  01611E  6E06               	movwf	??i1___ftpack& (0+255),c
 25448  016120  0E00               	movlw	0
 25449  016122  1402               	andwf	i1___ftpack@arg+1,w,c
 25450  016124  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 25451  016126  0EFE               	movlw	254
 25452  016128  1403               	andwf	i1___ftpack@arg+2,w,c
 25453  01612A  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 25454  01612C  5006               	movf	??i1___ftpack,w,c
 25455  01612E  1007               	iorwf	??i1___ftpack+1,w,c
 25456  016130  1008               	iorwf	??i1___ftpack+2,w,c
 25457  016132  B4D8               	btfsc	status,2,c
 25458  016134  D00C               	goto	i1l9427
 25459  016136  D7EC               	goto	i1l9419
 25460  016138                     i1l9423:
 25461  016138  2A04               	incf	i1___ftpack@exp,f,c
 25462  01613A  0E01               	movlw	1
 25463  01613C  2601               	addwf	i1___ftpack@arg,f,c
 25464  01613E  0E00               	movlw	0
 25465  016140  2202               	addwfc	i1___ftpack@arg+1,f,c
 25466  016142  0E00               	movlw	0
 25467  016144  2203               	addwfc	i1___ftpack@arg+2,f,c
 25468  016146  90D8               	bcf	status,0,c
 25469  016148  3203               	rrcf	i1___ftpack@arg+2,f,c
 25470  01614A  3202               	rrcf	i1___ftpack@arg+1,f,c
 25471  01614C  3201               	rrcf	i1___ftpack@arg,f,c
 25472  01614E                     i1l9427:
 25473  01614E  0E00               	movlw	0
 25474  016150  1401               	andwf	i1___ftpack@arg,w,c
 25475  016152  6E06               	movwf	??i1___ftpack& (0+255),c
 25476  016154  0E00               	movlw	0
 25477  016156  1402               	andwf	i1___ftpack@arg+1,w,c
 25478  016158  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 25479  01615A  0EFF               	movlw	255
 25480  01615C  1403               	andwf	i1___ftpack@arg+2,w,c
 25481  01615E  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 25482  016160  5006               	movf	??i1___ftpack,w,c
 25483  016162  1007               	iorwf	??i1___ftpack+1,w,c
 25484  016164  1008               	iorwf	??i1___ftpack+2,w,c
 25485  016166  B4D8               	btfsc	status,2,c
 25486  016168  D006               	goto	i1l9431
 25487  01616A  D7E6               	goto	i1l9423
 25488  01616C                     i1l9429:
 25489  01616C  0604               	decf	i1___ftpack@exp,f,c
 25490  01616E  90D8               	bcf	status,0,c
 25491  016170  3601               	rlcf	i1___ftpack@arg,f,c
 25492  016172  3602               	rlcf	i1___ftpack@arg+1,f,c
 25493  016174  3603               	rlcf	i1___ftpack@arg+2,f,c
 25494  016176                     i1l9431:
 25495  016176  BE02               	btfsc	i1___ftpack@arg+1,7,c
 25496  016178  D003               	goto	i1l1735
 25497  01617A  0E02               	movlw	2
 25498  01617C  6004               	cpfslt	i1___ftpack@exp,c
 25499  01617E  D7F6               	goto	i1l9429
 25500  016180                     i1l1735:
 25501  016180  A004               	btfss	i1___ftpack@exp,0,c
 25502  016182  9E02               	bcf	i1___ftpack@arg+1,7,c
 25503  016184  90D8               	bcf	status,0,c
 25504  016186  3204               	rrcf	i1___ftpack@exp,f,c
 25505  016188  5004               	movf	i1___ftpack@exp,w,c
 25506  01618A  1203               	iorwf	i1___ftpack@arg+2,f,c
 25507  01618C  5005               	movf	i1___ftpack@sign,w,c
 25508  01618E  A4D8               	btfss	status,2,c
 25509  016190  8E03               	bsf	i1___ftpack@arg+2,7,c
 25510  016192  C001  F001         	movff	i1___ftpack@arg,?i1___ftpack
 25511  016196  C002  F002         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 25512  01619A  C003  F003         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 25513  01619E  0012               	return	
 25514  0161A0                     __end_ofi1___ftpack:
 25515                           	opt stack 0
 25516                           pclatu	equ	0xFFB
 25517                           pclath	equ	0xFFA
 25518                           tblptru	equ	0xFF8
 25519                           tblptrh	equ	0xFF7
 25520                           tblptrl	equ	0xFF6
 25521                           tablat	equ	0xFF5
 25522                           prodh	equ	0xFF4
 25523                           prodl	equ	0xFF3
 25524                           intcon	equ	0xFF2
 25525                           intcon2	equ	0xFF1
 25526                           intcon3	equ	0xFF0
 25527                           indf0	equ	0xFEF
 25528                           postinc0	equ	0xFEE
 25529                           plusw0	equ	0xFEB
 25530                           fsr0h	equ	0xFEA
 25531                           fsr0l	equ	0xFE9
 25532                           wreg	equ	0xFE8
 25533                           indf1	equ	0xFE7
 25534                           postinc1	equ	0xFE6
 25535                           postdec1	equ	0xFE5
 25536                           fsr1h	equ	0xFE2
 25537                           fsr1l	equ	0xFE1
 25538                           bsr	equ	0xFE0
 25539                           indf2	equ	0xFDF
 25540                           postinc2	equ	0xFDE
 25541                           postdec2	equ	0xFDD
 25542                           plusw2	equ	0xFDB
 25543                           fsr2h	equ	0xFDA
 25544                           fsr2l	equ	0xFD9
 25545                           status	equ	0xFD8
 25546                           
 25547 ;; *************** function _SYS_InterruptHigh *****************
 25548 ;; Defined at:
 25549 ;;		line 714 in file "src/main.c"
 25550 ;; Parameters:    Size  Location     Type
 25551 ;;		None
 25552 ;; Auto vars:     Size  Location     Type
 25553 ;;		None
 25554 ;; Return value:  Size  Location     Type
 25555 ;;		None               void
 25556 ;; Registers used:
 25557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25558 ;; Tracked objects:
 25559 ;;		On entry : 0/0
 25560 ;;		On exit  : 0/0
 25561 ;;		Unchanged: 0/0
 25562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25565 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25566 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25567 ;;Total ram usage:       14 bytes
 25568 ;; Hardware stack levels used:    1
 25569 ;; Hardware stack levels required when called:    5
 25570 ;; This function calls:
 25571 ;;		_MIWIInterruptHandler
 25572 ;; This function is called by:
 25573 ;;		Interrupt level 2
 25574 ;; This function uses a non-reentrant model
 25575 ;;
 25576                           
 25577                           	psect	intcode
 25578  000008                     __pintcode:
 25579                           	opt stack 0
 25580  000008                     _SYS_InterruptHigh:
 25581                           	opt stack 11
 25582                           
 25583                           ;incstack = 0
 25584  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 25585  00000A  CFFA F095          	movff	pclath,??_SYS_InterruptHigh
 25586  00000E  CFFB F096          	movff	pclatu,??_SYS_InterruptHigh+1
 25587  000012  EF92  F0B4         	goto	int_func
 25588                           pclatu	equ	0xFFB
 25589                           pclath	equ	0xFFA
 25590                           tblptru	equ	0xFF8
 25591                           tblptrh	equ	0xFF7
 25592                           tblptrl	equ	0xFF6
 25593                           tablat	equ	0xFF5
 25594                           prodh	equ	0xFF4
 25595                           prodl	equ	0xFF3
 25596                           intcon	equ	0xFF2
 25597                           intcon2	equ	0xFF1
 25598                           intcon3	equ	0xFF0
 25599                           indf0	equ	0xFEF
 25600                           postinc0	equ	0xFEE
 25601                           plusw0	equ	0xFEB
 25602                           fsr0h	equ	0xFEA
 25603                           fsr0l	equ	0xFE9
 25604                           wreg	equ	0xFE8
 25605                           indf1	equ	0xFE7
 25606                           postinc1	equ	0xFE6
 25607                           postdec1	equ	0xFE5
 25608                           fsr1h	equ	0xFE2
 25609                           fsr1l	equ	0xFE1
 25610                           bsr	equ	0xFE0
 25611                           indf2	equ	0xFDF
 25612                           postinc2	equ	0xFDE
 25613                           postdec2	equ	0xFDD
 25614                           plusw2	equ	0xFDB
 25615                           fsr2h	equ	0xFDA
 25616                           fsr2l	equ	0xFD9
 25617                           status	equ	0xFD8
 25618                           
 25619                           	psect	intcode_body
 25620  016924                     __pintcode_body:
 25621                           	opt stack 11
 25622  016924                     int_func:
 25623                           	opt stack 11
 25624  016924  CFE9 F097          	movff	fsr0l,??_SYS_InterruptHigh+2
 25625  016928  CFEA F098          	movff	fsr0h,??_SYS_InterruptHigh+3
 25626  01692C  CFE1 F099          	movff	fsr1l,??_SYS_InterruptHigh+4
 25627  016930  CFE2 F09A          	movff	fsr1h,??_SYS_InterruptHigh+5
 25628  016934  CFD9 F09B          	movff	fsr2l,??_SYS_InterruptHigh+6
 25629  016938  CFDA F09C          	movff	fsr2h,??_SYS_InterruptHigh+7
 25630  01693C  CFF3 F09D          	movff	prodl,??_SYS_InterruptHigh+8
 25631  016940  CFF4 F09E          	movff	prodh,??_SYS_InterruptHigh+9
 25632  016944  CFF6 F09F          	movff	tblptrl,??_SYS_InterruptHigh+10
 25633  016948  CFF7 F0A0          	movff	tblptrh,??_SYS_InterruptHigh+11
 25634  01694C  CFF8 F0A1          	movff	tblptru,??_SYS_InterruptHigh+12
 25635  016950  CFF5 F0A2          	movff	tablat,??_SYS_InterruptHigh+13
 25636                           
 25637                           ;main.c: 716: MIWIInterruptHandler();
 25638  016954  EC4F  F08D         	call	_MIWIInterruptHandler	;wreg free
 25639  016958  C0A2  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 25640  01695C  C0A1  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 25641  016960  C0A0  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 25642  016964  C09F  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 25643  016968  C09E  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 25644  01696C  C09D  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 25645  016970  C09C  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 25646  016974  C09B  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 25647  016978  C09A  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 25648  01697C  C099  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 25649  016980  C098  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 25650  016984  C097  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 25651  016988  C096  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 25652  01698C  C095  FFFA         	movff	??_SYS_InterruptHigh,pclath
 25653  016990  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25654  016992  0011               	retfie		f
 25655  016994                     __end_of_SYS_InterruptHigh:
 25656                           	opt stack 0
 25657                           pclatu	equ	0xFFB
 25658                           pclath	equ	0xFFA
 25659                           tblptru	equ	0xFF8
 25660                           tblptrh	equ	0xFF7
 25661                           tblptrl	equ	0xFF6
 25662                           tablat	equ	0xFF5
 25663                           prodh	equ	0xFF4
 25664                           prodl	equ	0xFF3
 25665                           intcon	equ	0xFF2
 25666                           intcon2	equ	0xFF1
 25667                           intcon3	equ	0xFF0
 25668                           indf0	equ	0xFEF
 25669                           postinc0	equ	0xFEE
 25670                           plusw0	equ	0xFEB
 25671                           fsr0h	equ	0xFEA
 25672                           fsr0l	equ	0xFE9
 25673                           wreg	equ	0xFE8
 25674                           indf1	equ	0xFE7
 25675                           postinc1	equ	0xFE6
 25676                           postdec1	equ	0xFE5
 25677                           fsr1h	equ	0xFE2
 25678                           fsr1l	equ	0xFE1
 25679                           bsr	equ	0xFE0
 25680                           indf2	equ	0xFDF
 25681                           postinc2	equ	0xFDE
 25682                           postdec2	equ	0xFDD
 25683                           plusw2	equ	0xFDB
 25684                           fsr2h	equ	0xFDA
 25685                           fsr2l	equ	0xFD9
 25686                           status	equ	0xFD8
 25687                           
 25688 ;; *************** function _MIWIInterruptHandler *****************
 25689 ;; Defined at:
 25690 ;;		line 1258 in file "src/miwi/drv_mrf_miwi_89xa.c"
 25691 ;; Parameters:    Size  Location     Type
 25692 ;;		None
 25693 ;; Auto vars:     Size  Location     Type
 25694 ;;  ackInfoIndex    1   49[BANK0 ] unsigned char 
 25695 ;;  i               1   52[BANK0 ] unsigned char 
 25696 ;;  fifo_stat       1   42[BANK0 ] unsigned char 
 25697 ;;  ackPacket       4   43[BANK0 ] unsigned char [4]
 25698 ;;  counter         2   40[BANK0 ] unsigned int 
 25699 ;;  BankIndex       1   51[BANK0 ] unsigned char 
 25700 ;;  PacketLen       1   50[BANK0 ] unsigned char 
 25701 ;;  RxPacketPtr     1   48[BANK0 ] unsigned char 
 25702 ;;  bAck            1   47[BANK0 ] unsigned char 
 25703 ;; Return value:  Size  Location     Type
 25704 ;;		None               void
 25705 ;; Registers used:
 25706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25707 ;; Tracked objects:
 25708 ;;		On entry : 0/0
 25709 ;;		On exit  : 0/0
 25710 ;;		Unchanged: 0/0
 25711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25713 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25714 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25715 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25716 ;;Total ram usage:       19 bytes
 25717 ;; Hardware stack levels used:    1
 25718 ;; Hardware stack levels required when called:    4
 25719 ;; This function calls:
 25720 ;;		i2_MiWi_TickGet
 25721 ;;		i2_RegisterRead
 25722 ;;		i2_SPIGet
 25723 ;;		i2_TxPacket
 25724 ;; This function is called by:
 25725 ;;		_SYS_InterruptHigh
 25726 ;; This function uses a non-reentrant model
 25727 ;;
 25728                           
 25729                           	psect	text86
 25730  011A9E                     __ptext86:
 25731                           	opt stack 0
 25732  011A9E                     _MIWIInterruptHandler:
 25733                           	opt stack 11
 25734                           
 25735                           ;drv_mrf_miwi_89xa.c: 1260: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE)
 25736                           
 25737                           ;incstack = 0
 25738  011A9E  B0F0               	btfsc	intcon3,0,c	;volatile
 25739  011AA0  A6F0               	btfss	intcon3,3,c	;volatile
 25740  011AA2  D280               	goto	i2l14167
 25741                           
 25742                           ;drv_mrf_miwi_89xa.c: 1261: {
 25743                           ;drv_mrf_miwi_89xa.c: 1262: INTCON3bits.INT1IF = 0;
 25744  011AA4  90F0               	bcf	intcon3,0,c	;volatile
 25745                           
 25746                           ;drv_mrf_miwi_89xa.c: 1268: if(RF_Mode == 0x60)
 25747  011AA6  0E60               	movlw	96
 25748  011AA8  0100               	movlb	0	; () banked
 25749  011AAA  19B8               	xorwf	_RF_Mode& (0+255),w,b
 25750  011AAC  A4D8               	btfss	status,2,c
 25751  011AAE  D275               	goto	i2l14161
 25752                           
 25753                           ; BSR set to: 0
 25754                           ;drv_mrf_miwi_89xa.c: 1269: {
 25755                           ;drv_mrf_miwi_89xa.c: 1270: uint8_t RxPacketPtr;
 25756                           ;drv_mrf_miwi_89xa.c: 1271: uint8_t PacketLen;
 25757                           ;drv_mrf_miwi_89xa.c: 1272: uint8_t BankIndex;
 25758                           ;drv_mrf_miwi_89xa.c: 1273: uint16_t counter;
 25759                           ;drv_mrf_miwi_89xa.c: 1274: bool bAck;
 25760                           ;drv_mrf_miwi_89xa.c: 1275: uint8_t ackPacket[4];
 25761                           ;drv_mrf_miwi_89xa.c: 1281: RSSILock = RSSIVal;
 25762  011AB0  C0B9  F144         	movff	_RSSIVal,_RSSILock
 25763                           
 25764                           ;drv_mrf_miwi_89xa.c: 1283: LATCbits.LATC6 = 0;
 25765  011AB4  9C8B               	bcf	3979,6,c	;volatile
 25766                           
 25767                           ; BSR set to: 0
 25768                           ;drv_mrf_miwi_89xa.c: 1284: PacketLen = SPIGet();
 25769  011AB6  ECFB  F0B7         	call	i2_SPIGet	;wreg free
 25770  011ABA  0100               	movlb	0	; () banked
 25771  011ABC  6F92               	movwf	MIWIInterruptHandler@PacketLen& (0+255),b
 25772                           
 25773                           ; BSR set to: 0
 25774                           ;drv_mrf_miwi_89xa.c: 1285: LATCbits.LATC6 = 1;
 25775  011ABE  8C8B               	bsf	3979,6,c	;volatile
 25776                           
 25777                           ; BSR set to: 0
 25778                           ;drv_mrf_miwi_89xa.c: 1288: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 25779  011AC0  0E00               	movlw	0
 25780  011AC2  0100               	movlb	0	; () banked
 25781  011AC4  6F93               	movwf	MIWIInterruptHandler@BankIndex& (0+255),b
 25782  011AC6                     i2l14001:
 25783                           
 25784                           ; BSR set to: 0
 25785  011AC6  0E01               	movlw	1
 25786  011AC8  0100               	movlb	0	; () banked
 25787  011ACA  6593               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 25788  011ACC  D001               	goto	i2l14005
 25789  011ACE  D00F               	goto	i2l14013
 25790  011AD0                     i2l14005:
 25791                           
 25792                           ; BSR set to: 0
 25793                           ;drv_mrf_miwi_89xa.c: 1289: {
 25794                           ;drv_mrf_miwi_89xa.c: 1290: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 25795  011AD0  0100               	movlb	0	; () banked
 25796  011AD2  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25797  011AD4  0D42               	mullw	66
 25798  011AD6  0E50               	movlw	low _RxPacket
 25799  011AD8  24F3               	addwf	prodl,w,c
 25800  011ADA  6ED9               	movwf	fsr2l,c
 25801  011ADC  0E03               	movlw	high _RxPacket
 25802  011ADE  20F4               	addwfc	prodh,w,c
 25803  011AE0  6EDA               	movwf	fsr2h,c
 25804  011AE2  0103               	movlb	3	; () banked
 25805  011AE4  A0DF               	btfss	indf2,0,c
 25806  011AE6  D003               	goto	i2l14013
 25807                           
 25808                           ; BSR set to: 3
 25809                           
 25810                           ; BSR set to: 3
 25811                           
 25812                           ; BSR set to: 3
 25813                           ;drv_mrf_miwi_89xa.c: 1291: {
 25814                           ;drv_mrf_miwi_89xa.c: 1292: break;
 25815  011AE8  0100               	movlb	0	; () banked
 25816  011AEA  2B93               	incf	MIWIInterruptHandler@BankIndex& (0+255),f,b
 25817  011AEC  D7EC               	goto	i2l14001
 25818  011AEE                     i2l14013:
 25819                           
 25820                           ;drv_mrf_miwi_89xa.c: 1293: }
 25821                           ;drv_mrf_miwi_89xa.c: 1294: }
 25822                           ;drv_mrf_miwi_89xa.c: 1297: if( PacketLen == 2 )
 25823  011AEE  0E02               	movlw	2
 25824  011AF0  0100               	movlb	0	; () banked
 25825  011AF2  1992               	xorwf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 25826  011AF4  A4D8               	btfss	status,2,c
 25827  011AF6  D002               	goto	i2l14017
 25828                           
 25829                           ; BSR set to: 0
 25830                           ;drv_mrf_miwi_89xa.c: 1298: {
 25831                           ;drv_mrf_miwi_89xa.c: 1299: bAck = 1;
 25832  011AF8  0E01               	movlw	1
 25833  011AFA  D001               	goto	L9
 25834  011AFC                     i2l14017:
 25835                           
 25836                           ; BSR set to: 0
 25837                           ;drv_mrf_miwi_89xa.c: 1301: else
 25838                           ;drv_mrf_miwi_89xa.c: 1302: {
 25839                           ;drv_mrf_miwi_89xa.c: 1303: bAck = 0;
 25840  011AFC  0E00               	movlw	0
 25841  011AFE                     L9:
 25842  011AFE  0100               	movlb	0	; () banked
 25843  011B00  6F8F               	movwf	MIWIInterruptHandler@bAck& (0+255),b
 25844                           
 25845                           ; BSR set to: 0
 25846                           ;drv_mrf_miwi_89xa.c: 1304: }
 25847                           ;drv_mrf_miwi_89xa.c: 1307: if( PacketLen >= (32+11+4+4+4+9) || PacketLen == 0 || (BankI
      +                          ndex >= 2 && (bAck==0)) )
 25848                           
 25849                           ; BSR set to: 0
 25850  011B02  0E40               	movlw	64
 25851  011B04  0100               	movlb	0	; () banked
 25852  011B06  6192               	cpfslt	MIWIInterruptHandler@PacketLen& (0+255),b
 25853  011B08  D00E               	goto	i2l14027
 25854                           
 25855                           ; BSR set to: 0
 25856  011B0A  0100               	movlb	0	; () banked
 25857  011B0C  5192               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 25858  011B0E  0100               	movlb	0	; () banked
 25859  011B10  B4D8               	btfsc	status,2,c
 25860  011B12  D009               	goto	i2l14027
 25861                           
 25862                           ; BSR set to: 0
 25863  011B14  0E01               	movlw	1
 25864  011B16  0100               	movlb	0	; () banked
 25865  011B18  6593               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 25866  011B1A  D016               	goto	i2l14037
 25867                           
 25868                           ; BSR set to: 0
 25869  011B1C  0100               	movlb	0	; () banked
 25870  011B1E  518F               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 25871  011B20  0100               	movlb	0	; () banked
 25872  011B22  A4D8               	btfss	status,2,c
 25873  011B24  D011               	goto	i2l14037
 25874  011B26                     i2l14027:
 25875                           
 25876                           ; BSR set to: 0
 25877                           ;drv_mrf_miwi_89xa.c: 1310: {
 25878                           ;drv_mrf_miwi_89xa.c: 1311: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 25879  011B26  0E1A               	movlw	26
 25880  011B28  EC8D  F0B5         	call	i2_RegisterRead
 25881  011B2C  D007               	goto	L10
 25882  011B2E                     i2l392:
 25883                           
 25884                           ; BSR set to: 0
 25885                           ;drv_mrf_miwi_89xa.c: 1313: {
 25886                           ;drv_mrf_miwi_89xa.c: 1314: LATCbits.LATC6 = 0;
 25887  011B2E  9C8B               	bcf	3979,6,c	;volatile
 25888                           
 25889                           ; BSR set to: 0
 25890                           ;drv_mrf_miwi_89xa.c: 1315: SPIGet();
 25891  011B30  ECFB  F0B7         	call	i2_SPIGet	;wreg free
 25892                           
 25893                           ;drv_mrf_miwi_89xa.c: 1316: LATCbits.LATC6 = 1;
 25894  011B34  8C8B               	bsf	3979,6,c	;volatile
 25895                           
 25896                           ;drv_mrf_miwi_89xa.c: 1317: fifo_stat = RegisterRead(0x1A00>>8);
 25897  011B36  0E1A               	movlw	26
 25898  011B38  EC8D  F0B5         	call	i2_RegisterRead
 25899  011B3C                     L10:
 25900  011B3C  0100               	movlb	0	; () banked
 25901  011B3E  6F8A               	movwf	MIWIInterruptHandler@fifo_stat& (0+255),b
 25902                           
 25903                           ; BSR set to: 0
 25904                           
 25905                           ; BSR set to: 0
 25906  011B40  0100               	movlb	0	; () banked
 25907  011B42  A38A               	btfss	MIWIInterruptHandler@fifo_stat& (0+255),1,b
 25908  011B44  D22D               	goto	i2l14163
 25909  011B46  D7F3               	goto	i2l392
 25910  011B48                     i2l14037:
 25911                           
 25912                           ; BSR set to: 0
 25913                           ;drv_mrf_miwi_89xa.c: 1321: }
 25914                           ;drv_mrf_miwi_89xa.c: 1323: RxPacketPtr = 0;
 25915  011B48  0E00               	movlw	0
 25916  011B4A  0100               	movlb	0	; () banked
 25917  011B4C  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 25918                           
 25919                           ; BSR set to: 0
 25920                           ;drv_mrf_miwi_89xa.c: 1324: counter = PacketLen;
 25921  011B4E  C092  F088         	movff	MIWIInterruptHandler@PacketLen,MIWIInterruptHandler@counter
 25922  011B52  0100               	movlb	0	; () banked
 25923  011B54  6B89               	clrf	(MIWIInterruptHandler@counter+1)& (0+255),b
 25924                           
 25925                           ;drv_mrf_miwi_89xa.c: 1326: while(counter >= 1)
 25926  011B56  D21A               	goto	i2l14159
 25927  011B58                     i2l14041:
 25928                           
 25929                           ; BSR set to: 0
 25930                           ;drv_mrf_miwi_89xa.c: 1329: if(1)
 25931  011B58  0100               	movlb	0	; () banked
 25932  011B5A  0788               	decf	MIWIInterruptHandler@counter& (0+255),f,b
 25933  011B5C  A0D8               	btfss	status,0,c
 25934  011B5E  0789               	decf	(MIWIInterruptHandler@counter+1)& (0+255),f,b
 25935                           
 25936                           ; BSR set to: 0
 25937                           ;drv_mrf_miwi_89xa.c: 1330: {
 25938                           ;drv_mrf_miwi_89xa.c: 1332: if( bAck )
 25939  011B60  0100               	movlb	0	; () banked
 25940  011B62  518F               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 25941  011B64  0100               	movlb	0	; () banked
 25942  011B66  B4D8               	btfsc	status,2,c
 25943  011B68  D010               	goto	i2l398
 25944                           
 25945                           ; BSR set to: 0
 25946                           ;drv_mrf_miwi_89xa.c: 1333: {
 25947                           ;drv_mrf_miwi_89xa.c: 1334: LATCbits.LATC6 = 0;
 25948  011B6A  9C8B               	bcf	3979,6,c	;volatile
 25949                           
 25950                           ; BSR set to: 0
 25951                           ;drv_mrf_miwi_89xa.c: 1335: ackPacket[RxPacketPtr++] = SPIGet();
 25952  011B6C  0100               	movlb	0	; () banked
 25953  011B6E  5190               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 25954  011B70  0D01               	mullw	1
 25955  011B72  0E8B               	movlw	low MIWIInterruptHandler@ackPacket
 25956  011B74  24F3               	addwf	prodl,w,c
 25957  011B76  6ED9               	movwf	fsr2l,c
 25958  011B78  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 25959  011B7A  20F4               	addwfc	prodh,w,c
 25960  011B7C  6EDA               	movwf	fsr2h,c
 25961  011B7E  ECFB  F0B7         	call	i2_SPIGet	;wreg free
 25962  011B82  D024               	goto	L11
 25963  011B84                     i2l14049:
 25964  011B84  0100               	movlb	0	; () banked
 25965  011B86  2B90               	incf	MIWIInterruptHandler@RxPacketPtr& (0+255),f,b
 25966  011B88  D023               	goto	i2l14057
 25967  011B8A                     i2l398:
 25968                           
 25969                           ; BSR set to: 0
 25970                           ;drv_mrf_miwi_89xa.c: 1339: else
 25971                           ;drv_mrf_miwi_89xa.c: 1340: {
 25972                           ;drv_mrf_miwi_89xa.c: 1341: LATCbits.LATC6 = 0;
 25973  011B8A  9C8B               	bcf	3979,6,c	;volatile
 25974                           
 25975                           ; BSR set to: 0
 25976                           ;drv_mrf_miwi_89xa.c: 1342: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 25977  011B8C  0100               	movlb	0	; () banked
 25978  011B8E  5190               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 25979  011B90  0D01               	mullw	1
 25980  011B92  0E01               	movlw	1
 25981  011B94  26F3               	addwf	prodl,f,c
 25982  011B96  0E00               	movlw	0
 25983  011B98  22F4               	addwfc	prodh,f,c
 25984  011B9A  0E50               	movlw	low _RxPacket
 25985  011B9C  0100               	movlb	0	; () banked
 25986  011B9E  6F82               	movwf	??_MIWIInterruptHandler& (0+255),b
 25987  011BA0  0E03               	movlw	high _RxPacket
 25988  011BA2  0100               	movlb	0	; () banked
 25989  011BA4  6F83               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 25990  011BA6  50F3               	movf	prodl,w,c
 25991  011BA8  0100               	movlb	0	; () banked
 25992  011BAA  2782               	addwf	??_MIWIInterruptHandler& (0+255),f,b
 25993  011BAC  50F4               	movf	prodh,w,c
 25994  011BAE  0100               	movlb	0	; () banked
 25995  011BB0  2383               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),f,b
 25996  011BB2  0100               	movlb	0	; () banked
 25997  011BB4  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 25998  011BB6  0D42               	mullw	66
 25999  011BB8  50F3               	movf	prodl,w,c
 26000  011BBA  0100               	movlb	0	; () banked
 26001  011BBC  2582               	addwf	??_MIWIInterruptHandler& (0+255),w,b
 26002  011BBE  6ED9               	movwf	fsr2l,c
 26003  011BC0  50F4               	movf	prodh,w,c
 26004  011BC2  0100               	movlb	0	; () banked
 26005  011BC4  2183               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),w,b
 26006  011BC6  6EDA               	movwf	fsr2h,c
 26007  011BC8  ECFB  F0B7         	call	i2_SPIGet	;wreg free
 26008  011BCC                     L11:
 26009  011BCC  6EDF               	movwf	indf2,c
 26010  011BCE  D7DA               	goto	i2l14049
 26011  011BD0                     i2l14057:
 26012                           
 26013                           ; BSR set to: 0
 26014                           ;drv_mrf_miwi_89xa.c: 1343: LATCbits.LATC6 = 1;
 26015  011BD0  8C8B               	bsf	3979,6,c	;volatile
 26016                           
 26017                           ; BSR set to: 0
 26018                           ;drv_mrf_miwi_89xa.c: 1344: }
 26019                           ;drv_mrf_miwi_89xa.c: 1347: if( RxPacketPtr >= PacketLen )
 26020                           
 26021                           ; BSR set to: 0
 26022  011BD2  0100               	movlb	0	; () banked
 26023  011BD4  5192               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 26024  011BD6  0100               	movlb	0	; () banked
 26025  011BD8  5D90               	subwf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 26026  011BDA  A0D8               	btfss	status,0,c
 26027  011BDC  D1D7               	goto	i2l14159
 26028                           
 26029                           ; BSR set to: 0
 26030                           ;drv_mrf_miwi_89xa.c: 1348: {
 26031                           ;drv_mrf_miwi_89xa.c: 1349: uint8_t i;
 26032                           ;drv_mrf_miwi_89xa.c: 1351: if( bAck )
 26033  011BDE  0100               	movlb	0	; () banked
 26034  011BE0  518F               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 26035  011BE2  0100               	movlb	0	; () banked
 26036  011BE4  B4D8               	btfsc	status,2,c
 26037  011BE6  D039               	goto	i2l401
 26038                           
 26039                           ; BSR set to: 0
 26040                           ;drv_mrf_miwi_89xa.c: 1352: {
 26041                           ;drv_mrf_miwi_89xa.c: 1354: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 26042  011BE8  0100               	movlb	0	; () banked
 26043  011BEA  518B               	movf	MIWIInterruptHandler@ackPacket& (0+255),w,b
 26044  011BEC  0B03               	andlw	3
 26045  011BEE  0A02               	xorlw	2
 26046  011BF0  A4D8               	btfss	status,2,c
 26047  011BF2  D00D               	goto	i2l14071
 26048                           
 26049                           ; BSR set to: 0
 26050                           ;drv_mrf_miwi_89xa.c: 1355: {
 26051                           ;drv_mrf_miwi_89xa.c: 1356: if( ackPacket[1] == TxMACSeq )
 26052  011BF4  0100               	movlb	0	; () banked
 26053  011BF6  51BA               	movf	_TxMACSeq& (0+255),w,b
 26054  011BF8  0100               	movlb	0	; () banked
 26055  011BFA  198C               	xorwf	(MIWIInterruptHandler@ackPacket+1)& (0+255),w,b
 26056  011BFC  A4D8               	btfss	status,2,c
 26057  011BFE  D003               	goto	i2l403
 26058                           
 26059                           ; BSR set to: 0
 26060                           ;drv_mrf_miwi_89xa.c: 1357: {
 26061                           ;drv_mrf_miwi_89xa.c: 1358: hasAck = 1;
 26062  011C00  0E01               	movlw	1
 26063  011C02  0100               	movlb	0	; () banked
 26064  011C04  6FBC               	movwf	_hasAck& (0+255),b	;volatile
 26065  011C06                     i2l403:
 26066                           
 26067                           ; BSR set to: 0
 26068                           ;drv_mrf_miwi_89xa.c: 1359: }
 26069                           ;drv_mrf_miwi_89xa.c: 1360: RxPacketPtr = 0;
 26070  011C06  0E00               	movlw	0
 26071  011C08  0100               	movlb	0	; () banked
 26072  011C0A  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 26073                           
 26074                           ;drv_mrf_miwi_89xa.c: 1361: goto RETURN_HERE;
 26075  011C0C  D1C9               	goto	i2l14163
 26076  011C0E                     i2l14071:
 26077                           
 26078                           ; BSR set to: 0
 26079                           ;drv_mrf_miwi_89xa.c: 1363: else
 26080                           ;drv_mrf_miwi_89xa.c: 1365: if( BankIndex >= 2 )
 26081  011C0E  0E01               	movlw	1
 26082  011C10  0100               	movlb	0	; () banked
 26083  011C12  6593               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 26084  011C14  D004               	goto	i2l14075
 26085                           
 26086                           ; BSR set to: 0
 26087                           ;drv_mrf_miwi_89xa.c: 1366: {
 26088                           ;drv_mrf_miwi_89xa.c: 1367: RxPacketPtr = 0;
 26089  011C16  0E00               	movlw	0
 26090  011C18  0100               	movlb	0	; () banked
 26091  011C1A  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 26092                           
 26093                           ;drv_mrf_miwi_89xa.c: 1368: goto IGNORE_HERE;
 26094  011C1C  D784               	goto	i2l14027
 26095  011C1E                     i2l14075:
 26096                           
 26097                           ; BSR set to: 0
 26098                           ;drv_mrf_miwi_89xa.c: 1369: }
 26099                           ;drv_mrf_miwi_89xa.c: 1370: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 26100  011C1E  0100               	movlb	0	; () banked
 26101  011C20  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26102  011C22  0D42               	mullw	66
 26103  011C24  0E01               	movlw	1
 26104  011C26  26F3               	addwf	prodl,f,c
 26105  011C28  0E00               	movlw	0
 26106  011C2A  22F4               	addwfc	prodh,f,c
 26107  011C2C  0E50               	movlw	low _RxPacket
 26108  011C2E  24F3               	addwf	prodl,w,c
 26109  011C30  6ED9               	movwf	fsr2l,c
 26110  011C32  0E03               	movlw	high _RxPacket
 26111  011C34  20F4               	addwfc	prodh,w,c
 26112  011C36  6EDA               	movwf	fsr2h,c
 26113  011C38  C08B  FFDF         	movff	MIWIInterruptHandler@ackPacket,indf2
 26114                           
 26115                           ;drv_mrf_miwi_89xa.c: 1371: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 26116  011C3C  0100               	movlb	0	; () banked
 26117  011C3E  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26118  011C40  0D42               	mullw	66
 26119  011C42  0E02               	movlw	2
 26120  011C44  26F3               	addwf	prodl,f,c
 26121  011C46  0E00               	movlw	0
 26122  011C48  22F4               	addwfc	prodh,f,c
 26123  011C4A  0E50               	movlw	low _RxPacket
 26124  011C4C  24F3               	addwf	prodl,w,c
 26125  011C4E  6ED9               	movwf	fsr2l,c
 26126  011C50  0E03               	movlw	high _RxPacket
 26127  011C52  20F4               	addwfc	prodh,w,c
 26128  011C54  6EDA               	movwf	fsr2h,c
 26129  011C56  C08C  FFDF         	movff	MIWIInterruptHandler@ackPacket+1,indf2
 26130  011C5A                     i2l401:
 26131                           
 26132                           ; BSR set to: 0
 26133                           ;drv_mrf_miwi_89xa.c: 1373: }
 26134                           ;drv_mrf_miwi_89xa.c: 1375: RxPacket[BankIndex].PayloadLen = PacketLen;
 26135  011C5A  0100               	movlb	0	; () banked
 26136  011C5C  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26137  011C5E  0D42               	mullw	66
 26138  011C60  0E41               	movlw	65
 26139  011C62  26F3               	addwf	prodl,f,c
 26140  011C64  0E00               	movlw	0
 26141  011C66  22F4               	addwfc	prodh,f,c
 26142  011C68  0E50               	movlw	low _RxPacket
 26143  011C6A  24F3               	addwf	prodl,w,c
 26144  011C6C  6ED9               	movwf	fsr2l,c
 26145  011C6E  0E03               	movlw	high _RxPacket
 26146  011C70  20F4               	addwfc	prodh,w,c
 26147  011C72  6EDA               	movwf	fsr2h,c
 26148  011C74  C092  FFDF         	movff	MIWIInterruptHandler@PacketLen,indf2
 26149                           
 26150                           ; BSR set to: 0
 26151                           ;drv_mrf_miwi_89xa.c: 1392: {
 26152                           ;drv_mrf_miwi_89xa.c: 1393: uint8_t ackInfoIndex = 0xFF;
 26153  011C78  0100               	movlb	0	; () banked
 26154  011C7A  6991               	setf	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 26155                           
 26156                           ;drv_mrf_miwi_89xa.c: 1395: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 26157  011C7C  0100               	movlb	0	; () banked
 26158  011C7E  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26159  011C80  0D42               	mullw	66
 26160  011C82  0E01               	movlw	1
 26161  011C84  26F3               	addwf	prodl,f,c
 26162  011C86  0E00               	movlw	0
 26163  011C88  22F4               	addwfc	prodh,f,c
 26164  011C8A  0E50               	movlw	low _RxPacket
 26165  011C8C  24F3               	addwf	prodl,w,c
 26166  011C8E  6ED9               	movwf	fsr2l,c
 26167  011C90  0E03               	movlw	high _RxPacket
 26168  011C92  20F4               	addwfc	prodh,w,c
 26169  011C94  6EDA               	movwf	fsr2h,c
 26170  011C96  0103               	movlb	3	; () banked
 26171  011C98  ACDF               	btfss	indf2,6,c
 26172  011C9A  D058               	goto	i2l14091
 26173                           
 26174                           ; BSR set to: 3
 26175                           ;drv_mrf_miwi_89xa.c: 1396: {
 26176                           ;drv_mrf_miwi_89xa.c: 1397: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 26177  011C9C  0E00               	movlw	0
 26178  011C9E  0100               	movlb	0	; () banked
 26179  011CA0  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 26180  011CA2  D047               	goto	i2l14089
 26181  011CA4                     i2l14081:
 26182                           
 26183                           ; BSR set to: 0
 26184                           ;drv_mrf_miwi_89xa.c: 1398: {
 26185                           ;drv_mrf_miwi_89xa.c: 1399: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 26186  011CA4  0100               	movlb	0	; () banked
 26187  011CA6  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26188  011CA8  0D01               	mullw	1
 26189  011CAA  50F3               	movf	prodl,w,c
 26190  011CAC  0100               	movlb	0	; () banked
 26191  011CAE  25B0               	addwf	(_MACInitParams+1)& (0+255),w,b
 26192  011CB0  6ED9               	movwf	fsr2l,c
 26193  011CB2  50F4               	movf	prodh,w,c
 26194  011CB4  0100               	movlb	0	; () banked
 26195  011CB6  21B1               	addwfc	(_MACInitParams+2)& (0+255),w,b
 26196  011CB8  6EDA               	movwf	fsr2h,c
 26197  011CBA  0100               	movlb	0	; () banked
 26198  011CBC  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26199  011CBE  0D42               	mullw	66
 26200  011CC0  0100               	movlb	0	; () banked
 26201  011CC2  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26202  011CC4  0100               	movlb	0	; () banked
 26203  011CC6  6F83               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 26204  011CC8  6B84               	clrf	(??_MIWIInterruptHandler+2)& (0+255),b
 26205  011CCA  0E03               	movlw	3
 26206  011CCC  0100               	movlb	0	; () banked
 26207  011CCE  2783               	addwf	(??_MIWIInterruptHandler+1)& (0+255),f,b
 26208  011CD0  0E00               	movlw	0
 26209  011CD2  2384               	addwfc	(??_MIWIInterruptHandler+2)& (0+255),f,b
 26210  011CD4  0E50               	movlw	low _RxPacket
 26211  011CD6  0100               	movlb	0	; () banked
 26212  011CD8  6F85               	movwf	(??_MIWIInterruptHandler+3)& (0+255),b
 26213  011CDA  0E03               	movlw	high _RxPacket
 26214  011CDC  0100               	movlb	0	; () banked
 26215  011CDE  6F86               	movwf	(??_MIWIInterruptHandler+4)& (0+255),b
 26216  011CE0  0100               	movlb	0	; () banked
 26217  011CE2  5183               	movf	(??_MIWIInterruptHandler+1)& (0+255),w,b
 26218  011CE4  0100               	movlb	0	; () banked
 26219  011CE6  2785               	addwf	(??_MIWIInterruptHandler+3)& (0+255),f,b
 26220  011CE8  0100               	movlb	0	; () banked
 26221  011CEA  5184               	movf	(??_MIWIInterruptHandler+2)& (0+255),w,b
 26222  011CEC  0100               	movlb	0	; () banked
 26223  011CEE  2386               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),f,b
 26224  011CF0  50F3               	movf	prodl,w,c
 26225  011CF2  0100               	movlb	0	; () banked
 26226  011CF4  2585               	addwf	(??_MIWIInterruptHandler+3)& (0+255),w,b
 26227  011CF6  6EE1               	movwf	fsr1l,c
 26228  011CF8  50F4               	movf	prodh,w,c
 26229  011CFA  0100               	movlb	0	; () banked
 26230  011CFC  2186               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),w,b
 26231  011CFE  6EE2               	movwf	fsr1h,c
 26232  011D00  50DE               	movf	postinc2,w,c
 26233  011D02  18E6               	xorwf	postinc1,w,c
 26234  011D04  B4D8               	btfsc	status,2,c
 26235  011D06  D013               	goto	i2l14087
 26236                           
 26237                           ; BSR set to: 0
 26238                           ;drv_mrf_miwi_89xa.c: 1400: {
 26239                           ;drv_mrf_miwi_89xa.c: 1401: RxPacketPtr = 0;
 26240  011D08  0E00               	movlw	0
 26241  011D0A  0100               	movlb	0	; () banked
 26242  011D0C  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 26243                           
 26244                           ; BSR set to: 0
 26245                           ;drv_mrf_miwi_89xa.c: 1402: RxPacket[BankIndex].PayloadLen = 0;
 26246  011D0E  0100               	movlb	0	; () banked
 26247  011D10  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26248  011D12  0D42               	mullw	66
 26249  011D14  0E41               	movlw	65
 26250  011D16  26F3               	addwf	prodl,f,c
 26251  011D18  0E00               	movlw	0
 26252  011D1A  22F4               	addwfc	prodh,f,c
 26253  011D1C  0E50               	movlw	low _RxPacket
 26254  011D1E  24F3               	addwf	prodl,w,c
 26255  011D20  6ED9               	movwf	fsr2l,c
 26256  011D22  0E03               	movlw	high _RxPacket
 26257  011D24  20F4               	addwfc	prodh,w,c
 26258  011D26  6EDA               	movwf	fsr2h,c
 26259  011D28  0E00               	movlw	0
 26260  011D2A  6EDF               	movwf	indf2,c
 26261                           
 26262                           ;drv_mrf_miwi_89xa.c: 1403: goto IGNORE_HERE;
 26263  011D2C  D6FC               	goto	i2l14027
 26264  011D2E                     i2l14087:
 26265                           
 26266                           ; BSR set to: 0
 26267  011D2E  0100               	movlb	0	; () banked
 26268  011D30  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 26269  011D32                     i2l14089:
 26270                           
 26271                           ; BSR set to: 0
 26272  011D32  0100               	movlb	0	; () banked
 26273  011D34  31AF               	rrcf	_MACInitParams& (0+255),w,b
 26274  011D36  32E8               	rrcf	wreg,f,c
 26275  011D38  32E8               	rrcf	wreg,f,c
 26276  011D3A  0B0F               	andlw	15
 26277  011D3C  0100               	movlb	0	; () banked
 26278  011D3E  6F82               	movwf	??_MIWIInterruptHandler& (0+255),b
 26279  011D40  0100               	movlb	0	; () banked
 26280  011D42  5182               	movf	??_MIWIInterruptHandler& (0+255),w,b
 26281  011D44  0100               	movlb	0	; () banked
 26282  011D46  5D94               	subwf	MIWIInterruptHandler@i& (0+255),w,b
 26283  011D48  A0D8               	btfss	status,0,c
 26284  011D4A  D7AC               	goto	i2l14081
 26285  011D4C                     i2l14091:
 26286                           
 26287                           ;drv_mrf_miwi_89xa.c: 1404: }
 26288                           ;drv_mrf_miwi_89xa.c: 1405: }
 26289                           ;drv_mrf_miwi_89xa.c: 1406: }
 26290                           ;drv_mrf_miwi_89xa.c: 1409: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 26291  011D4C  0100               	movlb	0	; () banked
 26292  011D4E  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26293  011D50  0D42               	mullw	66
 26294  011D52  0E01               	movlw	1
 26295  011D54  26F3               	addwf	prodl,f,c
 26296  011D56  0E00               	movlw	0
 26297  011D58  22F4               	addwfc	prodh,f,c
 26298  011D5A  0E50               	movlw	low _RxPacket
 26299  011D5C  24F3               	addwf	prodl,w,c
 26300  011D5E  6ED9               	movwf	fsr2l,c
 26301  011D60  0E03               	movlw	high _RxPacket
 26302  011D62  20F4               	addwfc	prodh,w,c
 26303  011D64  6EDA               	movwf	fsr2h,c
 26304  011D66  0103               	movlb	3	; () banked
 26305  011D68  AADF               	btfss	indf2,5,c
 26306  011D6A  D058               	goto	i2l14125
 26307                           
 26308                           ; BSR set to: 3
 26309                           ;drv_mrf_miwi_89xa.c: 1410: {
 26310                           ;drv_mrf_miwi_89xa.c: 1412: for(i = 0; i < 2; i++)
 26311  011D6C  0E00               	movlw	0
 26312  011D6E  0100               	movlb	0	; () banked
 26313  011D70  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 26314  011D72                     i2l14095:
 26315                           
 26316                           ; BSR set to: 0
 26317  011D72  0E01               	movlw	1
 26318  011D74  0100               	movlb	0	; () banked
 26319  011D76  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 26320  011D78  D001               	goto	i2l14099
 26321  011D7A  D017               	goto	i2l14105
 26322  011D7C                     i2l14099:
 26323                           
 26324                           ; BSR set to: 0
 26325                           ;drv_mrf_miwi_89xa.c: 1413: {
 26326                           ;drv_mrf_miwi_89xa.c: 1414: ackPacket[i] = MACTxBuffer[i];
 26327  011D7C  0100               	movlb	0	; () banked
 26328  011D7E  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26329  011D80  0D01               	mullw	1
 26330  011D82  0EA0               	movlw	low _MACTxBuffer
 26331  011D84  24F3               	addwf	prodl,w,c
 26332  011D86  6ED9               	movwf	fsr2l,c
 26333  011D88  0E02               	movlw	high _MACTxBuffer
 26334  011D8A  20F4               	addwfc	prodh,w,c
 26335  011D8C  6EDA               	movwf	fsr2h,c
 26336  011D8E  0100               	movlb	0	; () banked
 26337  011D90  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26338  011D92  0D01               	mullw	1
 26339  011D94  0E8B               	movlw	low MIWIInterruptHandler@ackPacket
 26340  011D96  24F3               	addwf	prodl,w,c
 26341  011D98  6EE1               	movwf	fsr1l,c
 26342  011D9A  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 26343  011D9C  20F4               	addwfc	prodh,w,c
 26344  011D9E  6EE2               	movwf	fsr1h,c
 26345  011DA0  CFDF FFE7          	movff	indf2,indf1
 26346                           
 26347                           ; BSR set to: 0
 26348  011DA4  0100               	movlb	0	; () banked
 26349  011DA6  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 26350  011DA8  D7E4               	goto	i2l14095
 26351  011DAA                     i2l14105:
 26352                           
 26353                           ; BSR set to: 0
 26354                           ;drv_mrf_miwi_89xa.c: 1415: }
 26355                           ;drv_mrf_miwi_89xa.c: 1416: MACTxBuffer[0] = 0x02 | 0x04;
 26356  011DAA  0E06               	movlw	6
 26357  011DAC  0102               	movlb	2	; () banked
 26358  011DAE  6FA0               	movwf	_MACTxBuffer& (0+255),b	;volatile
 26359                           
 26360                           ; BSR set to: 2
 26361                           ;drv_mrf_miwi_89xa.c: 1417: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 26362  011DB0  0100               	movlb	0	; () banked
 26363  011DB2  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26364  011DB4  0D42               	mullw	66
 26365  011DB6  0E02               	movlw	2
 26366  011DB8  26F3               	addwf	prodl,f,c
 26367  011DBA  0E00               	movlw	0
 26368  011DBC  22F4               	addwfc	prodh,f,c
 26369  011DBE  0E50               	movlw	low _RxPacket
 26370  011DC0  24F3               	addwf	prodl,w,c
 26371  011DC2  6ED9               	movwf	fsr2l,c
 26372  011DC4  0E03               	movlw	high _RxPacket
 26373  011DC6  20F4               	addwfc	prodh,w,c
 26374  011DC8  6EDA               	movwf	fsr2h,c
 26375  011DCA  50DF               	movf	indf2,w,c
 26376  011DCC  0102               	movlb	2	; () banked
 26377  011DCE  6FA1               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 26378                           
 26379                           ; BSR set to: 2
 26380                           ;drv_mrf_miwi_89xa.c: 1418: INTCON3bits.INT1IF = 0;
 26381  011DD0  90F0               	bcf	intcon3,0,c	;volatile
 26382                           
 26383                           ; BSR set to: 2
 26384                           ;drv_mrf_miwi_89xa.c: 1419: TxPacket(2, 0);
 26385  011DD2  0E00               	movlw	0
 26386  011DD4  0100               	movlb	0	; () banked
 26387  011DD6  6F6A               	movwf	i2TxPacket@CCA& (0+255),b
 26388  011DD8  0E02               	movlw	2
 26389  011DDA  ECEC  F09E         	call	i2_TxPacket
 26390                           
 26391                           ;drv_mrf_miwi_89xa.c: 1422: for(i = 0; i < 2; i++)
 26392  011DDE  0E00               	movlw	0
 26393  011DE0  0100               	movlb	0	; () banked
 26394  011DE2  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 26395  011DE4                     i2l14115:
 26396                           
 26397                           ; BSR set to: 0
 26398  011DE4  0E01               	movlw	1
 26399  011DE6  0100               	movlb	0	; () banked
 26400  011DE8  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 26401  011DEA  D001               	goto	i2l14119
 26402  011DEC  D017               	goto	i2l14125
 26403  011DEE                     i2l14119:
 26404                           
 26405                           ; BSR set to: 0
 26406                           ;drv_mrf_miwi_89xa.c: 1423: {
 26407                           ;drv_mrf_miwi_89xa.c: 1424: MACTxBuffer[i] = ackPacket[i];
 26408  011DEE  0100               	movlb	0	; () banked
 26409  011DF0  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26410  011DF2  0D01               	mullw	1
 26411  011DF4  0E8B               	movlw	low MIWIInterruptHandler@ackPacket
 26412  011DF6  24F3               	addwf	prodl,w,c
 26413  011DF8  6ED9               	movwf	fsr2l,c
 26414  011DFA  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 26415  011DFC  20F4               	addwfc	prodh,w,c
 26416  011DFE  6EDA               	movwf	fsr2h,c
 26417  011E00  0100               	movlb	0	; () banked
 26418  011E02  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26419  011E04  0D01               	mullw	1
 26420  011E06  0EA0               	movlw	low _MACTxBuffer
 26421  011E08  24F3               	addwf	prodl,w,c
 26422  011E0A  6EE1               	movwf	fsr1l,c
 26423  011E0C  0E02               	movlw	high _MACTxBuffer
 26424  011E0E  20F4               	addwfc	prodh,w,c
 26425  011E10  6EE2               	movwf	fsr1h,c
 26426  011E12  CFDF FFE7          	movff	indf2,indf1
 26427                           
 26428                           ; BSR set to: 0
 26429  011E16  0100               	movlb	0	; () banked
 26430  011E18  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 26431  011E1A  D7E4               	goto	i2l14115
 26432  011E1C                     i2l14125:
 26433                           
 26434                           ;drv_mrf_miwi_89xa.c: 1425: }
 26435                           ;drv_mrf_miwi_89xa.c: 1426: }
 26436                           ;drv_mrf_miwi_89xa.c: 1430: for(i = 0; i < 5; i++)
 26437  011E1C  0E00               	movlw	0
 26438  011E1E  0100               	movlb	0	; () banked
 26439  011E20  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 26440  011E22                     i2l14127:
 26441                           
 26442                           ; BSR set to: 0
 26443  011E22  0E04               	movlw	4
 26444  011E24  0100               	movlb	0	; () banked
 26445  011E26  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 26446  011E28  D001               	goto	i2l14131
 26447  011E2A  D05A               	goto	i2l14147
 26448  011E2C                     i2l14131:
 26449                           
 26450                           ; BSR set to: 0
 26451                           ;drv_mrf_miwi_89xa.c: 1431: {
 26452                           ;drv_mrf_miwi_89xa.c: 1432: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 26453  011E2C  0100               	movlb	0	; () banked
 26454  011E2E  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26455  011E30  0D06               	mullw	6
 26456  011E32  0E28               	movlw	low _AckInfo
 26457  011E34  24F3               	addwf	prodl,w,c
 26458  011E36  6ED9               	movwf	fsr2l,c
 26459  011E38  0E02               	movlw	high _AckInfo
 26460  011E3A  20F4               	addwfc	prodh,w,c
 26461  011E3C  6EDA               	movwf	fsr2h,c
 26462  011E3E  50DF               	movf	indf2,w,c
 26463  011E40  B4D8               	btfsc	status,2,c
 26464  011E42  D03A               	goto	i2l14137
 26465                           
 26466                           ; BSR set to: 0
 26467  011E44  0100               	movlb	0	; () banked
 26468  011E46  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26469  011E48  0D42               	mullw	66
 26470  011E4A  0E02               	movlw	2
 26471  011E4C  26F3               	addwf	prodl,f,c
 26472  011E4E  0E00               	movlw	0
 26473  011E50  22F4               	addwfc	prodh,f,c
 26474  011E52  0E50               	movlw	low _RxPacket
 26475  011E54  24F3               	addwf	prodl,w,c
 26476  011E56  6ED9               	movwf	fsr2l,c
 26477  011E58  0E03               	movlw	high _RxPacket
 26478  011E5A  20F4               	addwfc	prodh,w,c
 26479  011E5C  6EDA               	movwf	fsr2h,c
 26480  011E5E  0100               	movlb	0	; () banked
 26481  011E60  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26482  011E62  0D06               	mullw	6
 26483  011E64  0E01               	movlw	1
 26484  011E66  26F3               	addwf	prodl,f,c
 26485  011E68  0E00               	movlw	0
 26486  011E6A  22F4               	addwfc	prodh,f,c
 26487  011E6C  0E28               	movlw	low _AckInfo
 26488  011E6E  24F3               	addwf	prodl,w,c
 26489  011E70  6EE1               	movwf	fsr1l,c
 26490  011E72  0E02               	movlw	high _AckInfo
 26491  011E74  20F4               	addwfc	prodh,w,c
 26492  011E76  6EE2               	movwf	fsr1h,c
 26493  011E78  50DE               	movf	postinc2,w,c
 26494  011E7A  18E6               	xorwf	postinc1,w,c
 26495  011E7C  A4D8               	btfss	status,2,c
 26496  011E7E  D01C               	goto	i2l14137
 26497                           
 26498                           ; BSR set to: 0
 26499                           ;drv_mrf_miwi_89xa.c: 1433: {
 26500                           ;drv_mrf_miwi_89xa.c: 1434: AckInfo[i].startTick = MiWi_TickGet();
 26501  011E80  EC58  F0B4         	call	i2_MiWi_TickGet	;wreg free
 26502  011E84  0100               	movlb	0	; () banked
 26503  011E86  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26504  011E88  0D06               	mullw	6
 26505  011E8A  0E02               	movlw	2
 26506  011E8C  26F3               	addwf	prodl,f,c
 26507  011E8E  0E00               	movlw	0
 26508  011E90  22F4               	addwfc	prodh,f,c
 26509  011E92  0E28               	movlw	low _AckInfo
 26510  011E94  24F3               	addwf	prodl,w,c
 26511  011E96  6ED9               	movwf	fsr2l,c
 26512  011E98  0E02               	movlw	high _AckInfo
 26513  011E9A  20F4               	addwfc	prodh,w,c
 26514  011E9C  6EDA               	movwf	fsr2h,c
 26515  011E9E  0100               	movlb	0	; () banked
 26516  011EA0  C060  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 26517  011EA4  0100               	movlb	0	; () banked
 26518  011EA6  C061  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 26519  011EAA  0100               	movlb	0	; () banked
 26520  011EAC  C062  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 26521  011EB0  0100               	movlb	0	; () banked
 26522  011EB2  C063  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 26523                           
 26524                           ;drv_mrf_miwi_89xa.c: 1435: break;
 26525  011EB6  D014               	goto	i2l14147
 26526  011EB8                     i2l14137:
 26527                           
 26528                           ; BSR set to: 0
 26529                           ;drv_mrf_miwi_89xa.c: 1436: }
 26530                           ;drv_mrf_miwi_89xa.c: 1437: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 26531  011EB8  0100               	movlb	0	; () banked
 26532  011EBA  2991               	incf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 26533  011EBC  A4D8               	btfss	status,2,c
 26534  011EBE  D00D               	goto	i2l14143
 26535                           
 26536                           ; BSR set to: 0
 26537  011EC0  0100               	movlb	0	; () banked
 26538  011EC2  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 26539  011EC4  0D06               	mullw	6
 26540  011EC6  0E28               	movlw	low _AckInfo
 26541  011EC8  24F3               	addwf	prodl,w,c
 26542  011ECA  6ED9               	movwf	fsr2l,c
 26543  011ECC  0E02               	movlw	high _AckInfo
 26544  011ECE  20F4               	addwfc	prodh,w,c
 26545  011ED0  6EDA               	movwf	fsr2h,c
 26546  011ED2  50DF               	movf	indf2,w,c
 26547  011ED4  B4D8               	btfsc	status,2,c
 26548                           
 26549                           ; BSR set to: 0
 26550                           ;drv_mrf_miwi_89xa.c: 1438: {
 26551                           ;drv_mrf_miwi_89xa.c: 1439: ackInfoIndex = i;
 26552  011ED6  C094  F091         	movff	MIWIInterruptHandler@i,MIWIInterruptHandler@ackInfoIndex
 26553  011EDA                     i2l14143:
 26554                           
 26555                           ; BSR set to: 0
 26556  011EDA  0100               	movlb	0	; () banked
 26557  011EDC  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 26558  011EDE  D7A1               	goto	i2l14127
 26559  011EE0                     i2l14147:
 26560                           
 26561                           ; BSR set to: 0
 26562                           ;drv_mrf_miwi_89xa.c: 1440: }
 26563                           ;drv_mrf_miwi_89xa.c: 1441: }
 26564                           ;drv_mrf_miwi_89xa.c: 1443: if( i >= 5 )
 26565  011EE0  0E04               	movlw	4
 26566  011EE2  0100               	movlb	0	; () banked
 26567  011EE4  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 26568  011EE6  D05C               	goto	i2l14163
 26569                           
 26570                           ; BSR set to: 0
 26571                           ;drv_mrf_miwi_89xa.c: 1444: {
 26572                           ;drv_mrf_miwi_89xa.c: 1445: if( ackInfoIndex < 5 )
 26573  011EE8  0E05               	movlw	5
 26574  011EEA  0100               	movlb	0	; () banked
 26575  011EEC  6191               	cpfslt	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 26576  011EEE  D042               	goto	i2l14157
 26577                           
 26578                           ; BSR set to: 0
 26579                           ;drv_mrf_miwi_89xa.c: 1446: {
 26580                           ;drv_mrf_miwi_89xa.c: 1447: AckInfo[ackInfoIndex].Valid = 1;
 26581  011EF0  0100               	movlb	0	; () banked
 26582  011EF2  5191               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 26583  011EF4  0D06               	mullw	6
 26584  011EF6  0E28               	movlw	low _AckInfo
 26585  011EF8  24F3               	addwf	prodl,w,c
 26586  011EFA  6ED9               	movwf	fsr2l,c
 26587  011EFC  0E02               	movlw	high _AckInfo
 26588  011EFE  20F4               	addwfc	prodh,w,c
 26589  011F00  6EDA               	movwf	fsr2h,c
 26590  011F02  0E01               	movlw	1
 26591  011F04  6EDF               	movwf	indf2,c
 26592                           
 26593                           ; BSR set to: 0
 26594                           ;drv_mrf_miwi_89xa.c: 1448: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 26595  011F06  0100               	movlb	0	; () banked
 26596  011F08  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26597  011F0A  0D42               	mullw	66
 26598  011F0C  0E02               	movlw	2
 26599  011F0E  26F3               	addwf	prodl,f,c
 26600  011F10  0E00               	movlw	0
 26601  011F12  22F4               	addwfc	prodh,f,c
 26602  011F14  0E50               	movlw	low _RxPacket
 26603  011F16  24F3               	addwf	prodl,w,c
 26604  011F18  6ED9               	movwf	fsr2l,c
 26605  011F1A  0E03               	movlw	high _RxPacket
 26606  011F1C  20F4               	addwfc	prodh,w,c
 26607  011F1E  6EDA               	movwf	fsr2h,c
 26608  011F20  0100               	movlb	0	; () banked
 26609  011F22  5191               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 26610  011F24  0D06               	mullw	6
 26611  011F26  0E01               	movlw	1
 26612  011F28  26F3               	addwf	prodl,f,c
 26613  011F2A  0E00               	movlw	0
 26614  011F2C  22F4               	addwfc	prodh,f,c
 26615  011F2E  0E28               	movlw	low _AckInfo
 26616  011F30  24F3               	addwf	prodl,w,c
 26617  011F32  6EE1               	movwf	fsr1l,c
 26618  011F34  0E02               	movlw	high _AckInfo
 26619  011F36  20F4               	addwfc	prodh,w,c
 26620  011F38  6EE2               	movwf	fsr1h,c
 26621  011F3A  CFDF FFE7          	movff	indf2,indf1
 26622                           
 26623                           ; BSR set to: 0
 26624                           ;drv_mrf_miwi_89xa.c: 1449: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 26625  011F3E  EC58  F0B4         	call	i2_MiWi_TickGet	;wreg free
 26626  011F42  0100               	movlb	0	; () banked
 26627  011F44  5191               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 26628  011F46  0D06               	mullw	6
 26629  011F48  0E02               	movlw	2
 26630  011F4A  26F3               	addwf	prodl,f,c
 26631  011F4C  0E00               	movlw	0
 26632  011F4E  22F4               	addwfc	prodh,f,c
 26633  011F50  0E28               	movlw	low _AckInfo
 26634  011F52  24F3               	addwf	prodl,w,c
 26635  011F54  6ED9               	movwf	fsr2l,c
 26636  011F56  0E02               	movlw	high _AckInfo
 26637  011F58  20F4               	addwfc	prodh,w,c
 26638  011F5A  6EDA               	movwf	fsr2h,c
 26639  011F5C  0100               	movlb	0	; () banked
 26640  011F5E  C060  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 26641  011F62  0100               	movlb	0	; () banked
 26642  011F64  C061  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 26643  011F68  0100               	movlb	0	; () banked
 26644  011F6A  C062  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 26645  011F6E  0100               	movlb	0	; () banked
 26646  011F70  C063  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 26647  011F74                     i2l14157:
 26648                           
 26649                           ; BSR set to: 0
 26650                           ;drv_mrf_miwi_89xa.c: 1450: }
 26651                           ;drv_mrf_miwi_89xa.c: 1453: RxPacket[BankIndex].flags.bits.Valid = 1;
 26652  011F74  0100               	movlb	0	; () banked
 26653  011F76  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 26654  011F78  0D42               	mullw	66
 26655  011F7A  0E50               	movlw	low _RxPacket
 26656  011F7C  24F3               	addwf	prodl,w,c
 26657  011F7E  6ED9               	movwf	fsr2l,c
 26658  011F80  0E03               	movlw	high _RxPacket
 26659  011F82  20F4               	addwfc	prodh,w,c
 26660  011F84  6EDA               	movwf	fsr2h,c
 26661  011F86  0103               	movlb	3	; () banked
 26662  011F88  80DF               	bsf	indf2,0,c
 26663                           
 26664                           ; BSR set to: 3
 26665                           ;drv_mrf_miwi_89xa.c: 1454: }
 26666                           ;drv_mrf_miwi_89xa.c: 1461: }
 26667                           ;drv_mrf_miwi_89xa.c: 1462: goto RETURN_HERE;
 26668  011F8A  D00A               	goto	i2l14163
 26669  011F8C                     i2l14159:
 26670  011F8C  0100               	movlb	0	; () banked
 26671  011F8E  5188               	movf	MIWIInterruptHandler@counter& (0+255),w,b
 26672  011F90  0100               	movlb	0	; () banked
 26673  011F92  1189               	iorwf	(MIWIInterruptHandler@counter+1)& (0+255),w,b
 26674  011F94  B4D8               	btfsc	status,2,c
 26675  011F96  D004               	goto	i2l14163
 26676  011F98  D5DF               	goto	i2l14041
 26677  011F9A                     i2l14161:
 26678                           
 26679                           ; BSR set to: 0
 26680                           ;drv_mrf_miwi_89xa.c: 1468: else
 26681                           ;drv_mrf_miwi_89xa.c: 1469: {
 26682                           ;drv_mrf_miwi_89xa.c: 1471: IRQ1_Received = 1;
 26683  011F9A  0E01               	movlw	1
 26684  011F9C  0100               	movlb	0	; () banked
 26685  011F9E  6FB3               	movwf	_IRQ1_Received& (0+255),b	;volatile
 26686  011FA0                     i2l14163:
 26687                           
 26688                           ;drv_mrf_miwi_89xa.c: 1475: INTCON3bits.INT1IF = 0;
 26689  011FA0  90F0               	bcf	intcon3,0,c	;volatile
 26690                           
 26691                           ;drv_mrf_miwi_89xa.c: 1477: __nop();
 26692  011FA2  F000               	nop	
 26693  011FA4                     i2l14167:
 26694                           
 26695                           ;drv_mrf_miwi_89xa.c: 1478: }
 26696                           ;drv_mrf_miwi_89xa.c: 1482: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 26697  011FA4  B2F2               	btfsc	intcon,1,c	;volatile
 26698  011FA6  A8F2               	btfss	intcon,4,c	;volatile
 26699  011FA8  D010               	goto	i2l14177
 26700                           
 26701                           ;drv_mrf_miwi_89xa.c: 1483: {
 26702                           ;drv_mrf_miwi_89xa.c: 1492: INTCONbits.INT0IF = 0;
 26703  011FAA  92F2               	bcf	intcon,1,c	;volatile
 26704                           
 26705                           ;drv_mrf_miwi_89xa.c: 1495: if(RF_Mode == 0x60)
 26706  011FAC  0E60               	movlw	96
 26707  011FAE  0100               	movlb	0	; () banked
 26708  011FB0  19B8               	xorwf	_RF_Mode& (0+255),w,b
 26709  011FB2  A4D8               	btfss	status,2,c
 26710  011FB4  D00A               	goto	i2l14177
 26711                           
 26712                           ; BSR set to: 0
 26713                           ;drv_mrf_miwi_89xa.c: 1496: {
 26714                           ;drv_mrf_miwi_89xa.c: 1497: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 26715  011FB6  0E28               	movlw	40
 26716  011FB8  EC8D  F0B5         	call	i2_RegisterRead
 26717  011FBC  0100               	movlb	0	; () banked
 26718  011FBE  6F82               	movwf	??_MIWIInterruptHandler& (0+255),b
 26719  011FC0  0100               	movlb	0	; () banked
 26720  011FC2  90D8               	bcf	status,0,c
 26721  011FC4  3182               	rrcf	??_MIWIInterruptHandler& (0+255),w,b
 26722  011FC6  0100               	movlb	0	; () banked
 26723  011FC8  6FB9               	movwf	_RSSIVal& (0+255),b
 26724  011FCA                     i2l14177:
 26725                           
 26726                           ;drv_mrf_miwi_89xa.c: 1498: }
 26727                           ;drv_mrf_miwi_89xa.c: 1502: }
 26728                           ;drv_mrf_miwi_89xa.c: 1506: if(PIR1bits.TMR1IF)
 26729  011FCA  A09E               	btfss	3998,0,c	;volatile
 26730  011FCC  0012               	return	
 26731                           
 26732                           ;drv_mrf_miwi_89xa.c: 1507: {
 26733                           ;drv_mrf_miwi_89xa.c: 1508: if(PIE1bits.TMR1IE)
 26734  011FCE  A09D               	btfss	3997,0,c	;volatile
 26735  011FD0  0012               	return	
 26736                           
 26737                           ;drv_mrf_miwi_89xa.c: 1509: {
 26738                           ;drv_mrf_miwi_89xa.c: 1511: PIR1bits.TMR1IF = 0;
 26739  011FD2  909E               	bcf	3998,0,c	;volatile
 26740                           
 26741                           ;drv_mrf_miwi_89xa.c: 1512: timerExtension1++;
 26742  011FD4  0100               	movlb	0	; () banked
 26743  011FD6  2BBE               	incf	_timerExtension1& (0+255),f,b	;volatile
 26744                           
 26745                           ; BSR set to: 0
 26746                           ;drv_mrf_miwi_89xa.c: 1513: if(timerExtension1 == 0)
 26747  011FD8  0100               	movlb	0	; () banked
 26748  011FDA  51BE               	movf	_timerExtension1& (0+255),w,b	;volatile
 26749  011FDC  A4D8               	btfss	status,2,c
 26750  011FDE  0012               	return	
 26751                           
 26752                           ; BSR set to: 0
 26753                           ;drv_mrf_miwi_89xa.c: 1514: {
 26754                           ;drv_mrf_miwi_89xa.c: 1515: timerExtension2++;
 26755  011FE0  0100               	movlb	0	; () banked
 26756  011FE2  2BBF               	incf	_timerExtension2& (0+255),f,b	;volatile
 26757                           
 26758                           ; BSR set to: 0
 26759                           
 26760                           ; BSR set to: 0
 26761                           
 26762                           ; BSR set to: 0
 26763  011FE4  0012               	return	
 26764  011FE6                     __end_of_MIWIInterruptHandler:
 26765                           	opt stack 0
 26766                           pclatu	equ	0xFFB
 26767                           pclath	equ	0xFFA
 26768                           tblptru	equ	0xFF8
 26769                           tblptrh	equ	0xFF7
 26770                           tblptrl	equ	0xFF6
 26771                           tablat	equ	0xFF5
 26772                           prodh	equ	0xFF4
 26773                           prodl	equ	0xFF3
 26774                           intcon	equ	0xFF2
 26775                           intcon2	equ	0xFF1
 26776                           intcon3	equ	0xFF0
 26777                           indf0	equ	0xFEF
 26778                           postinc0	equ	0xFEE
 26779                           plusw0	equ	0xFEB
 26780                           fsr0h	equ	0xFEA
 26781                           fsr0l	equ	0xFE9
 26782                           wreg	equ	0xFE8
 26783                           indf1	equ	0xFE7
 26784                           postinc1	equ	0xFE6
 26785                           postdec1	equ	0xFE5
 26786                           fsr1h	equ	0xFE2
 26787                           fsr1l	equ	0xFE1
 26788                           bsr	equ	0xFE0
 26789                           indf2	equ	0xFDF
 26790                           postinc2	equ	0xFDE
 26791                           postdec2	equ	0xFDD
 26792                           plusw2	equ	0xFDB
 26793                           fsr2h	equ	0xFDA
 26794                           fsr2l	equ	0xFD9
 26795                           status	equ	0xFD8
 26796                           
 26797 ;; *************** function i2_TxPacket *****************
 26798 ;; Defined at:
 26799 ;;		line 295 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26800 ;; Parameters:    Size  Location     Type
 26801 ;;  TxPacketLen     1    wreg     unsigned char 
 26802 ;;  CCA             1   10[BANK0 ] unsigned char 
 26803 ;; Auto vars:     Size  Location     Type
 26804 ;;  TxPacketLen     1   31[BANK0 ] unsigned char 
 26805 ;;  TxPacket        4   23[BANK0 ] struct _MIWI_TICK
 26806 ;;  TxPacket        4   19[BANK0 ] struct _MIWI_TICK
 26807 ;;  TxPacket        1   33[BANK0 ] unsigned char 
 26808 ;;  TxPacket        1   32[BANK0 ] unsigned char 
 26809 ;;  TxPacket        1   30[BANK0 ] unsigned char 
 26810 ;;  TxPacket        1   29[BANK0 ] unsigned char 
 26811 ;;  TxPacket        1   28[BANK0 ] unsigned char 
 26812 ;;  TxPacket        1   27[BANK0 ] unsigned char 
 26813 ;; Return value:  Size  Location     Type
 26814 ;;                  1    wreg      unsigned char 
 26815 ;; Registers used:
 26816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26817 ;; Tracked objects:
 26818 ;;		On entry : 0/0
 26819 ;;		On exit  : 0/0
 26820 ;;		Unchanged: 0/0
 26821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26822 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26823 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26824 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26825 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26826 ;;Total ram usage:       24 bytes
 26827 ;; Hardware stack levels used:    1
 26828 ;; Hardware stack levels required when called:    3
 26829 ;; This function calls:
 26830 ;;		i2_MiWi_TickGet
 26831 ;;		i2_RegisterRead
 26832 ;;		i2_RegisterSet
 26833 ;;		i2_SetRFMode
 26834 ;;		i2_WriteFIFO
 26835 ;; This function is called by:
 26836 ;;		_MIWIInterruptHandler
 26837 ;; This function uses a non-reentrant model
 26838 ;;
 26839                           
 26840                           	psect	text87
 26841  013DD8                     __ptext87:
 26842                           	opt stack 0
 26843  013DD8                     i2_TxPacket:
 26844                           	opt stack 11
 26845                           
 26846                           ;incstack = 0
 26847                           ;i2TxPacket@TxPacketLen stored from wreg
 26848  013DD8  0100               	movlb	0	; () banked
 26849  013DDA  6F7F               	movwf	i2TxPacket@TxPacketLen& (0+255),b
 26850                           
 26851                           ;drv_mrf_miwi_89xa.c: 297: bool status;
 26852                           ;drv_mrf_miwi_89xa.c: 298: uint8_t i;
 26853                           ;drv_mrf_miwi_89xa.c: 299: MIWI_TICK t1, t2;
 26854                           ;drv_mrf_miwi_89xa.c: 301: uint8_t CCARetries;
 26855                           ;drv_mrf_miwi_89xa.c: 302: uint8_t rssival;
 26856                           ;drv_mrf_miwi_89xa.c: 306: uint8_t reTry = 3;
 26857  013DDC  0E03               	movlw	3
 26858  013DDE  0100               	movlb	0	; () banked
 26859  013DE0  6F7D               	movwf	i2TxPacket@reTry& (0+255),b
 26860                           
 26861                           ;drv_mrf_miwi_89xa.c: 310: while( reTry-- )
 26862  013DE2  D0C8               	goto	i2l13825
 26863  013DE4                     i2l13759:
 26864                           
 26865                           ; BSR set to: 0
 26866                           ;drv_mrf_miwi_89xa.c: 312: {
 26867                           ;drv_mrf_miwi_89xa.c: 313: uint8_t allowedTxFailure;
 26868                           ;drv_mrf_miwi_89xa.c: 314: allowedTxFailure = 0;
 26869  013DE4  0E00               	movlw	0
 26870  013DE6  0100               	movlb	0	; () banked
 26871  013DE8  6F7E               	movwf	i2TxPacket@allowedTxFailure& (0+255),b
 26872  013DEA                     i2l258:
 26873                           
 26874                           ; BSR set to: 0
 26875                           ;drv_mrf_miwi_89xa.c: 319: hasAck = 0;
 26876  013DEA  0E00               	movlw	0
 26877  013DEC  0100               	movlb	0	; () banked
 26878  013DEE  6FBC               	movwf	_hasAck& (0+255),b	;volatile
 26879                           
 26880                           ;drv_mrf_miwi_89xa.c: 323: CCARetries = 0;
 26881  013DF0  0E00               	movlw	0
 26882  013DF2  0100               	movlb	0	; () banked
 26883  013DF4  6F7C               	movwf	i2TxPacket@CCARetries& (0+255),b
 26884                           
 26885                           ; BSR set to: 0
 26886                           ;drv_mrf_miwi_89xa.c: 325: if( CCA )
 26887  013DF6  0100               	movlb	0	; () banked
 26888  013DF8  516A               	movf	i2TxPacket@CCA& (0+255),w,b
 26889  013DFA  0100               	movlb	0	; () banked
 26890  013DFC  B4D8               	btfsc	status,2,c
 26891  013DFE  D018               	goto	i2l259
 26892  013E00                     i2l13763:
 26893                           
 26894                           ; BSR set to: 0
 26895                           ;drv_mrf_miwi_89xa.c: 329: rssival = RegisterRead(0x2800>>8);
 26896  013E00  0E28               	movlw	40
 26897  013E02  EC8D  F0B5         	call	i2_RegisterRead
 26898  013E06  0100               	movlb	0	; () banked
 26899  013E08  6F81               	movwf	i2TxPacket@rssival& (0+255),b
 26900                           
 26901                           ; BSR set to: 0
 26902                           ;drv_mrf_miwi_89xa.c: 330: rssival = (rssival>>1);
 26903  013E0A  0100               	movlb	0	; () banked
 26904  013E0C  90D8               	bcf	status,0,c
 26905  013E0E  3181               	rrcf	i2TxPacket@rssival& (0+255),w,b
 26906  013E10  0100               	movlb	0	; () banked
 26907  013E12  6F81               	movwf	i2TxPacket@rssival& (0+255),b
 26908                           
 26909                           ; BSR set to: 0
 26910                           ;drv_mrf_miwi_89xa.c: 332: if( rssival > 65 )
 26911  013E14  0E41               	movlw	65
 26912  013E16  0100               	movlb	0	; () banked
 26913  013E18  6581               	cpfsgt	i2TxPacket@rssival& (0+255),b
 26914  013E1A  D00A               	goto	i2l259
 26915                           
 26916                           ; BSR set to: 0
 26917                           ;drv_mrf_miwi_89xa.c: 333: {
 26918                           ;drv_mrf_miwi_89xa.c: 334: if(CCARetries++ > 4 )
 26919  013E1C  0100               	movlb	0	; () banked
 26920  013E1E  2B7C               	incf	i2TxPacket@CCARetries& (0+255),f,b
 26921  013E20  057C               	decf	i2TxPacket@CCARetries& (0+255),w,b
 26922  013E22  0100               	movlb	0	; () banked
 26923  013E24  6F6B               	movwf	??i2_TxPacket& (0+255),b
 26924  013E26  0E04               	movlw	4
 26925  013E28  0100               	movlb	0	; () banked
 26926  013E2A  656B               	cpfsgt	??i2_TxPacket& (0+255),b
 26927  013E2C  D7E9               	goto	i2l13763
 26928  013E2E  0012               	return	
 26929  013E30                     i2l259:
 26930                           
 26931                           ; BSR set to: 0
 26932                           ;drv_mrf_miwi_89xa.c: 340: }
 26933                           ;drv_mrf_miwi_89xa.c: 341: }
 26934                           ;drv_mrf_miwi_89xa.c: 346: INTCONbits.INT0IE = 0;
 26935  013E30  98F2               	bcf	intcon,4,c	;volatile
 26936                           
 26937                           ;drv_mrf_miwi_89xa.c: 348: INTCON3bits.INT1IE = 0;
 26938  013E32  96F0               	bcf	intcon3,3,c	;volatile
 26939                           
 26940                           ; BSR set to: 0
 26941                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x20);
 26942  013E34  0E20               	movlw	32
 26943  013E36  EC13  F0B2         	call	i2_SetRFMode
 26944                           
 26945                           ;drv_mrf_miwi_89xa.c: 350: RegisterSet(0x1A00 | (0xC8) | 0x01);
 26946  013E3A  0E1A               	movlw	26
 26947  013E3C  0100               	movlb	0	; () banked
 26948  013E3E  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 26949  013E40  0EC9               	movlw	201
 26950  013E42  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 26951  013E44  EC2C  F0B6         	call	i2_RegisterSet	;wreg free
 26952                           
 26953                           ;drv_mrf_miwi_89xa.c: 351: WriteFIFO(TxPacketLen);
 26954  013E48  0100               	movlb	0	; () banked
 26955  013E4A  517F               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 26956  013E4C  EC70  F0B6         	call	i2_WriteFIFO
 26957                           
 26958                           ;drv_mrf_miwi_89xa.c: 352: for(i=0; i< TxPacketLen; i++)
 26959  013E50  0E00               	movlw	0
 26960  013E52  0100               	movlb	0	; () banked
 26961  013E54  6F80               	movwf	i2TxPacket@i& (0+255),b
 26962  013E56  D00E               	goto	i2l13785
 26963  013E58                     i2l13781:
 26964                           
 26965                           ; BSR set to: 0
 26966                           ;drv_mrf_miwi_89xa.c: 353: {
 26967                           ;drv_mrf_miwi_89xa.c: 354: WriteFIFO(MACTxBuffer[i]);
 26968  013E58  0100               	movlb	0	; () banked
 26969  013E5A  5180               	movf	i2TxPacket@i& (0+255),w,b
 26970  013E5C  0D01               	mullw	1
 26971  013E5E  0EA0               	movlw	low _MACTxBuffer
 26972  013E60  24F3               	addwf	prodl,w,c
 26973  013E62  6ED9               	movwf	fsr2l,c
 26974  013E64  0E02               	movlw	high _MACTxBuffer
 26975  013E66  20F4               	addwfc	prodh,w,c
 26976  013E68  6EDA               	movwf	fsr2h,c
 26977  013E6A  50DF               	movf	indf2,w,c
 26978  013E6C  EC70  F0B6         	call	i2_WriteFIFO
 26979  013E70  0100               	movlb	0	; () banked
 26980  013E72  2B80               	incf	i2TxPacket@i& (0+255),f,b
 26981  013E74                     i2l13785:
 26982                           
 26983                           ; BSR set to: 0
 26984  013E74  0100               	movlb	0	; () banked
 26985  013E76  517F               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 26986  013E78  0100               	movlb	0	; () banked
 26987  013E7A  5D80               	subwf	i2TxPacket@i& (0+255),w,b
 26988  013E7C  A0D8               	btfss	status,0,c
 26989  013E7E  D7EC               	goto	i2l13781
 26990                           
 26991                           ; BSR set to: 0
 26992                           ;drv_mrf_miwi_89xa.c: 355: }
 26993                           ;drv_mrf_miwi_89xa.c: 356: SetRFMode(0x80);
 26994                           
 26995                           ; BSR set to: 0
 26996  013E80  0E80               	movlw	128
 26997  013E82  EC13  F0B2         	call	i2_SetRFMode
 26998                           
 26999                           ;drv_mrf_miwi_89xa.c: 358: INTCONbits.INT0IE = 1;
 27000  013E86  88F2               	bsf	intcon,4,c	;volatile
 27001                           
 27002                           ;drv_mrf_miwi_89xa.c: 360: INTCON3bits.INT1IE = 1;
 27003  013E88  86F0               	bsf	intcon3,3,c	;volatile
 27004  013E8A                     i2l13793:
 27005  013E8A  0100               	movlb	0	; () banked
 27006  013E8C  51B3               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 27007  013E8E  B4D8               	btfsc	status,2,c
 27008                           
 27009                           ; BSR set to: 0
 27010  013E90  B0F0               	btfsc	intcon3,0,c	;volatile
 27011  013E92  D001               	goto	i2l13797
 27012  013E94  D7FA               	goto	i2l13793
 27013  013E96                     i2l13797:
 27014                           
 27015                           ; BSR set to: 0
 27016                           ;drv_mrf_miwi_89xa.c: 364: };
 27017                           ;drv_mrf_miwi_89xa.c: 368: IRQ1_Received = 0;
 27018  013E96  0E00               	movlw	0
 27019  013E98  0100               	movlb	0	; () banked
 27020  013E9A  6FB3               	movwf	_IRQ1_Received& (0+255),b	;volatile
 27021                           
 27022                           ; BSR set to: 0
 27023                           ;drv_mrf_miwi_89xa.c: 369: SetRFMode(0x20);
 27024  013E9C  0E20               	movlw	32
 27025  013E9E  EC13  F0B2         	call	i2_SetRFMode
 27026                           
 27027                           ;drv_mrf_miwi_89xa.c: 370: SetRFMode(0x60);
 27028  013EA2  0E60               	movlw	96
 27029  013EA4  EC13  F0B2         	call	i2_SetRFMode
 27030                           
 27031                           ;drv_mrf_miwi_89xa.c: 373: if( (MACTxBuffer[0] & 0x20) > 0 )
 27032  013EA8  0102               	movlb	2	; () banked
 27033  013EAA  ABA0               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 27034  013EAC  D05F               	goto	i2l13823
 27035                           
 27036                           ; BSR set to: 2
 27037                           ;drv_mrf_miwi_89xa.c: 374: {
 27038                           ;drv_mrf_miwi_89xa.c: 375: TxMACSeq = MACTxBuffer[1];
 27039  013EAE  C2A1  F0BA         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 27040                           
 27041                           ; BSR set to: 2
 27042                           ;drv_mrf_miwi_89xa.c: 376: t1 = MiWi_TickGet();
 27043  013EB2  EC58  F0B4         	call	i2_MiWi_TickGet	;wreg free
 27044  013EB6  C060  F073         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 27045  013EBA  C061  F074         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 27046  013EBE  C062  F075         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 27047  013EC2  C063  F076         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 27048  013EC6                     i2l13809:
 27049                           
 27050                           ;drv_mrf_miwi_89xa.c: 378: {
 27051                           ;drv_mrf_miwi_89xa.c: 379: if( hasAck )
 27052  013EC6  0100               	movlb	0	; () banked
 27053  013EC8  51BC               	movf	_hasAck& (0+255),w,b	;volatile
 27054  013ECA  B4D8               	btfsc	status,2,c
 27055  013ECC  D004               	goto	i2l13813
 27056                           
 27057                           ; BSR set to: 0
 27058                           ;drv_mrf_miwi_89xa.c: 380: {
 27059                           ;drv_mrf_miwi_89xa.c: 381: status = 1;
 27060  013ECE  0E01               	movlw	1
 27061  013ED0  0100               	movlb	0	; () banked
 27062  013ED2  6F7B               	movwf	i2TxPacket@status& (0+255),b
 27063                           
 27064                           ;drv_mrf_miwi_89xa.c: 382: goto TX_END_HERE;
 27065  013ED4  0012               	return	
 27066  013ED6                     i2l13813:
 27067                           
 27068                           ; BSR set to: 0
 27069                           ;drv_mrf_miwi_89xa.c: 383: }
 27070                           ;drv_mrf_miwi_89xa.c: 384: t2 = MiWi_TickGet();
 27071  013ED6  EC58  F0B4         	call	i2_MiWi_TickGet	;wreg free
 27072  013EDA  C060  F077         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 27073  013EDE  C061  F078         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 27074  013EE2  C062  F079         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 27075  013EE6  C063  F07A         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 27076                           
 27077                           ;drv_mrf_miwi_89xa.c: 385: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 27078  013EEA  C073  F06B         	movff	i2TxPacket@t1,??i2_TxPacket
 27079  013EEE  C074  F06C         	movff	i2TxPacket@t1+1,??i2_TxPacket+1
 27080  013EF2  C075  F06D         	movff	i2TxPacket@t1+2,??i2_TxPacket+2
 27081  013EF6  C076  F06E         	movff	i2TxPacket@t1+3,??i2_TxPacket+3
 27082  013EFA  0100               	movlb	0	; () banked
 27083  013EFC  1F6B               	comf	??i2_TxPacket& (0+255),f,b
 27084  013EFE  1F6C               	comf	(??i2_TxPacket+1)& (0+255),f,b
 27085  013F00  1F6D               	comf	(??i2_TxPacket+2)& (0+255),f,b
 27086  013F02  1F6E               	comf	(??i2_TxPacket+3)& (0+255),f,b
 27087  013F04  2B6B               	incf	??i2_TxPacket& (0+255),f,b
 27088  013F06  0E00               	movlw	0
 27089  013F08  236C               	addwfc	(??i2_TxPacket+1)& (0+255),f,b
 27090  013F0A  236D               	addwfc	(??i2_TxPacket+2)& (0+255),f,b
 27091  013F0C  236E               	addwfc	(??i2_TxPacket+3)& (0+255),f,b
 27092  013F0E  0100               	movlb	0	; () banked
 27093  013F10  5177               	movf	i2TxPacket@t2& (0+255),w,b
 27094  013F12  0100               	movlb	0	; () banked
 27095  013F14  256B               	addwf	??i2_TxPacket& (0+255),w,b
 27096  013F16  0100               	movlb	0	; () banked
 27097  013F18  6F6F               	movwf	(??i2_TxPacket+4)& (0+255),b
 27098  013F1A  0100               	movlb	0	; () banked
 27099  013F1C  5178               	movf	(i2TxPacket@t2+1)& (0+255),w,b
 27100  013F1E  0100               	movlb	0	; () banked
 27101  013F20  216C               	addwfc	(??i2_TxPacket+1)& (0+255),w,b
 27102  013F22  0100               	movlb	0	; () banked
 27103  013F24  6F70               	movwf	(??i2_TxPacket+5)& (0+255),b
 27104  013F26  0100               	movlb	0	; () banked
 27105  013F28  5179               	movf	(i2TxPacket@t2+2)& (0+255),w,b
 27106  013F2A  0100               	movlb	0	; () banked
 27107  013F2C  216D               	addwfc	(??i2_TxPacket+2)& (0+255),w,b
 27108  013F2E  0100               	movlb	0	; () banked
 27109  013F30  6F71               	movwf	(??i2_TxPacket+6)& (0+255),b
 27110  013F32  0100               	movlb	0	; () banked
 27111  013F34  517A               	movf	(i2TxPacket@t2+3)& (0+255),w,b
 27112  013F36  0100               	movlb	0	; () banked
 27113  013F38  216E               	addwfc	(??i2_TxPacket+3)& (0+255),w,b
 27114  013F3A  0100               	movlb	0	; () banked
 27115  013F3C  6F72               	movwf	(??i2_TxPacket+7)& (0+255),b
 27116  013F3E  0100               	movlb	0	; () banked
 27117  013F40  5172               	movf	(??i2_TxPacket+7)& (0+255),w,b
 27118  013F42  0100               	movlb	0	; () banked
 27119  013F44  1171               	iorwf	(??i2_TxPacket+6)& (0+255),w,b
 27120  013F46  E108               	bnz	i2l13819
 27121  013F48  0EA9               	movlw	169
 27122  013F4A  0100               	movlb	0	; () banked
 27123  013F4C  5D6F               	subwf	(??i2_TxPacket+4)& (0+255),w,b
 27124  013F4E  0E61               	movlw	97
 27125  013F50  0100               	movlb	0	; () banked
 27126  013F52  5970               	subwfb	(??i2_TxPacket+5)& (0+255),w,b
 27127  013F54  A0D8               	btfss	status,0,c
 27128  013F56  D7B7               	goto	i2l13809
 27129  013F58                     i2l13819:
 27130                           
 27131                           ; BSR set to: 0
 27132                           ;drv_mrf_miwi_89xa.c: 388: }
 27133                           ;drv_mrf_miwi_89xa.c: 389: }
 27134                           ;drv_mrf_miwi_89xa.c: 391: if(allowedTxFailure++ <= 3)
 27135  013F58  0100               	movlb	0	; () banked
 27136  013F5A  2B7E               	incf	i2TxPacket@allowedTxFailure& (0+255),f,b
 27137  013F5C  057E               	decf	i2TxPacket@allowedTxFailure& (0+255),w,b
 27138  013F5E  0100               	movlb	0	; () banked
 27139  013F60  6F6B               	movwf	??i2_TxPacket& (0+255),b
 27140  013F62  0E04               	movlw	4
 27141  013F64  0100               	movlb	0	; () banked
 27142  013F66  616B               	cpfslt	??i2_TxPacket& (0+255),b
 27143  013F68  D005               	goto	i2l13825
 27144  013F6A  D73F               	goto	i2l258
 27145  013F6C                     i2l13823:
 27146                           
 27147                           ;drv_mrf_miwi_89xa.c: 395: else
 27148                           ;drv_mrf_miwi_89xa.c: 397: {
 27149                           ;drv_mrf_miwi_89xa.c: 398: status = 1;
 27150  013F6C  0E01               	movlw	1
 27151  013F6E  0100               	movlb	0	; () banked
 27152  013F70  6F7B               	movwf	i2TxPacket@status& (0+255),b
 27153                           
 27154                           ;drv_mrf_miwi_89xa.c: 399: goto TX_END_HERE;
 27155  013F72  0012               	return	
 27156  013F74                     i2l13825:
 27157                           
 27158                           ; BSR set to: 0
 27159  013F74  0100               	movlb	0	; () banked
 27160  013F76  077D               	decf	i2TxPacket@reTry& (0+255),f,b
 27161  013F78  0100               	movlb	0	; () banked
 27162  013F7A  297D               	incf	i2TxPacket@reTry& (0+255),w,b
 27163  013F7C  A4D8               	btfss	status,2,c
 27164  013F7E  D732               	goto	i2l13759
 27165                           
 27166                           ; BSR set to: 0
 27167                           ;drv_mrf_miwi_89xa.c: 400: }
 27168                           ;drv_mrf_miwi_89xa.c: 401: }
 27169                           ;drv_mrf_miwi_89xa.c: 403: status = 0;
 27170                           
 27171                           ; BSR set to: 0
 27172  013F80  0E00               	movlw	0
 27173  013F82  0100               	movlb	0	; () banked
 27174  013F84  6F7B               	movwf	i2TxPacket@status& (0+255),b
 27175                           
 27176                           ; BSR set to: 0
 27177                           
 27178                           ;drv_mrf_miwi_89xa.c: 404: TX_END_HERE:
 27179  013F86  0012               	return	
 27180  013F88                     __end_ofi2_TxPacket:
 27181                           	opt stack 0
 27182                           pclatu	equ	0xFFB
 27183                           pclath	equ	0xFFA
 27184                           tblptru	equ	0xFF8
 27185                           tblptrh	equ	0xFF7
 27186                           tblptrl	equ	0xFF6
 27187                           tablat	equ	0xFF5
 27188                           prodh	equ	0xFF4
 27189                           prodl	equ	0xFF3
 27190                           intcon	equ	0xFF2
 27191                           intcon2	equ	0xFF1
 27192                           intcon3	equ	0xFF0
 27193                           indf0	equ	0xFEF
 27194                           postinc0	equ	0xFEE
 27195                           plusw0	equ	0xFEB
 27196                           fsr0h	equ	0xFEA
 27197                           fsr0l	equ	0xFE9
 27198                           wreg	equ	0xFE8
 27199                           indf1	equ	0xFE7
 27200                           postinc1	equ	0xFE6
 27201                           postdec1	equ	0xFE5
 27202                           fsr1h	equ	0xFE2
 27203                           fsr1l	equ	0xFE1
 27204                           bsr	equ	0xFE0
 27205                           indf2	equ	0xFDF
 27206                           postinc2	equ	0xFDE
 27207                           postdec2	equ	0xFDD
 27208                           plusw2	equ	0xFDB
 27209                           fsr2h	equ	0xFDA
 27210                           fsr2l	equ	0xFD9
 27211                           status	equ	0xFD8
 27212                           
 27213 ;; *************** function i2_WriteFIFO *****************
 27214 ;; Defined at:
 27215 ;;		line 251 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27216 ;; Parameters:    Size  Location     Type
 27217 ;;  Data            1    wreg     unsigned char 
 27218 ;; Auto vars:     Size  Location     Type
 27219 ;;  Data            1    2[BANK0 ] unsigned char 
 27220 ;;  WriteFIFO       1    4[BANK0 ] unsigned char 
 27221 ;;  WriteFIFO       1    3[BANK0 ] unsigned char 
 27222 ;; Return value:  Size  Location     Type
 27223 ;;		None               void
 27224 ;; Registers used:
 27225 ;;		wreg, status,2, cstack
 27226 ;; Tracked objects:
 27227 ;;		On entry : 0/0
 27228 ;;		On exit  : 0/0
 27229 ;;		Unchanged: 0/0
 27230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27232 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27234 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27235 ;;Total ram usage:        3 bytes
 27236 ;; Hardware stack levels used:    1
 27237 ;; Hardware stack levels required when called:    1
 27238 ;; This function calls:
 27239 ;;		i2_SPIPut
 27240 ;; This function is called by:
 27241 ;;		i2_TxPacket
 27242 ;; This function uses a non-reentrant model
 27243 ;;
 27244                           
 27245                           	psect	text88
 27246  016CE0                     __ptext88:
 27247                           	opt stack 0
 27248  016CE0                     i2_WriteFIFO:
 27249                           	opt stack 12
 27250                           
 27251                           ; BSR set to: 0
 27252                           ;incstack = 0
 27253                           ;i2WriteFIFO@Data stored from wreg
 27254  016CE0  0100               	movlb	0	; () banked
 27255  016CE2  6F62               	movwf	i2WriteFIFO@Data& (0+255),b
 27256                           
 27257                           ;drv_mrf_miwi_89xa.c: 253: uint8_t IRQ1select = INTCON3bits.INT1IE;
 27258  016CE4  0E00               	movlw	0
 27259  016CE6  B6F0               	btfsc	intcon3,3,c	;volatile
 27260  016CE8  0E01               	movlw	1
 27261  016CEA  0100               	movlb	0	; () banked
 27262  016CEC  6F63               	movwf	i2WriteFIFO@IRQ1select& (0+255),b
 27263                           
 27264                           ;drv_mrf_miwi_89xa.c: 255: bool IRQ0select = INTCONbits.INT0IE;
 27265  016CEE  0E00               	movlw	0
 27266  016CF0  B8F2               	btfsc	intcon,4,c	;volatile
 27267  016CF2  0E01               	movlw	1
 27268  016CF4  0100               	movlb	0	; () banked
 27269  016CF6  6F64               	movwf	i2WriteFIFO@IRQ0select& (0+255),b
 27270                           
 27271                           ;drv_mrf_miwi_89xa.c: 257: INTCONbits.INT0IE = 0;
 27272  016CF8  98F2               	bcf	intcon,4,c	;volatile
 27273                           
 27274                           ;drv_mrf_miwi_89xa.c: 260: INTCON3bits.INT1IE = 0;
 27275  016CFA  96F0               	bcf	intcon3,3,c	;volatile
 27276                           
 27277                           ;drv_mrf_miwi_89xa.c: 261: LATCbits.LATC6 = 0;
 27278  016CFC  9C8B               	bcf	3979,6,c	;volatile
 27279                           
 27280                           ; BSR set to: 0
 27281                           ;drv_mrf_miwi_89xa.c: 262: SPIPut(Data);
 27282  016CFE  0100               	movlb	0	; () banked
 27283  016D00  5162               	movf	i2WriteFIFO@Data& (0+255),w,b
 27284  016D02  ECB8  F0B7         	call	i2_SPIPut
 27285                           
 27286                           ;drv_mrf_miwi_89xa.c: 263: LATCbits.LATC6 = 1;
 27287  016D06  8C8B               	bsf	3979,6,c	;volatile
 27288                           
 27289                           ;drv_mrf_miwi_89xa.c: 264: INTCON3bits.INT1IE = IRQ1select;
 27290  016D08  0100               	movlb	0	; () banked
 27291  016D0A  B163               	btfsc	i2WriteFIFO@IRQ1select& (0+255),0,b
 27292  016D0C  D002               	bra	i2u1554_45
 27293  016D0E  96F0               	bcf	intcon3,3,c	;volatile
 27294  016D10  D001               	bra	i2u1554_46
 27295  016D12                     i2u1554_45:
 27296  016D12  86F0               	bsf	intcon3,3,c	;volatile
 27297  016D14                     i2u1554_46:
 27298                           
 27299                           ;drv_mrf_miwi_89xa.c: 267: INTCONbits.INT0IE = IRQ0select;
 27300  016D14  0100               	movlb	0	; () banked
 27301  016D16  B164               	btfsc	i2WriteFIFO@IRQ0select& (0+255),0,b
 27302  016D18  D002               	bra	i2u1555_45
 27303  016D1A  98F2               	bcf	intcon,4,c	;volatile
 27304  016D1C  D001               	bra	i2u1555_46
 27305  016D1E                     i2u1555_45:
 27306  016D1E  88F2               	bsf	intcon,4,c	;volatile
 27307  016D20                     i2u1555_46:
 27308  016D20  0012               	return		;funcret
 27309  016D22                     __end_ofi2_WriteFIFO:
 27310                           	opt stack 0
 27311                           pclatu	equ	0xFFB
 27312                           pclath	equ	0xFFA
 27313                           tblptru	equ	0xFF8
 27314                           tblptrh	equ	0xFF7
 27315                           tblptrl	equ	0xFF6
 27316                           tablat	equ	0xFF5
 27317                           prodh	equ	0xFF4
 27318                           prodl	equ	0xFF3
 27319                           intcon	equ	0xFF2
 27320                           intcon2	equ	0xFF1
 27321                           intcon3	equ	0xFF0
 27322                           indf0	equ	0xFEF
 27323                           postinc0	equ	0xFEE
 27324                           plusw0	equ	0xFEB
 27325                           fsr0h	equ	0xFEA
 27326                           fsr0l	equ	0xFE9
 27327                           wreg	equ	0xFE8
 27328                           indf1	equ	0xFE7
 27329                           postinc1	equ	0xFE6
 27330                           postdec1	equ	0xFE5
 27331                           fsr1h	equ	0xFE2
 27332                           fsr1l	equ	0xFE1
 27333                           bsr	equ	0xFE0
 27334                           indf2	equ	0xFDF
 27335                           postinc2	equ	0xFDE
 27336                           postdec2	equ	0xFDD
 27337                           plusw2	equ	0xFDB
 27338                           fsr2h	equ	0xFDA
 27339                           fsr2l	equ	0xFD9
 27340                           status	equ	0xFD8
 27341                           
 27342 ;; *************** function i2_SetRFMode *****************
 27343 ;; Defined at:
 27344 ;;		line 674 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27345 ;; Parameters:    Size  Location     Type
 27346 ;;  mode            1    wreg     unsigned char 
 27347 ;; Auto vars:     Size  Location     Type
 27348 ;;  mode            1    6[BANK0 ] unsigned char 
 27349 ;; Return value:  Size  Location     Type
 27350 ;;		None               void
 27351 ;; Registers used:
 27352 ;;		wreg, status,2, status,0, cstack
 27353 ;; Tracked objects:
 27354 ;;		On entry : 0/0
 27355 ;;		On exit  : 0/0
 27356 ;;		Unchanged: 0/0
 27357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27361 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27362 ;;Total ram usage:        1 bytes
 27363 ;; Hardware stack levels used:    1
 27364 ;; Hardware stack levels required when called:    2
 27365 ;; This function calls:
 27366 ;;		i2_RegisterSet
 27367 ;; This function is called by:
 27368 ;;		i2_TxPacket
 27369 ;; This function uses a non-reentrant model
 27370 ;;
 27371                           
 27372                           	psect	text89
 27373  016426                     __ptext89:
 27374                           	opt stack 0
 27375  016426                     i2_SetRFMode:
 27376                           	opt stack 11
 27377                           
 27378                           ;incstack = 0
 27379                           ;i2SetRFMode@mode stored from wreg
 27380  016426  0100               	movlb	0	; () banked
 27381  016428  6F66               	movwf	i2SetRFMode@mode& (0+255),b
 27382                           
 27383                           ;drv_mrf_miwi_89xa.c: 676: switch (mode) {
 27384  01642A  D037               	goto	i2l13165
 27385  01642C                     i2l13143:
 27386                           
 27387                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 27388  01642C  0E00               	movlw	0
 27389  01642E  0100               	movlb	0	; () banked
 27390  016430  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 27391  016432  0E96               	movlw	150
 27392  016434  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 27393  016436  EC2C  F0B6         	call	i2_RegisterSet	;wreg free
 27394                           
 27395                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x80;
 27396  01643A  0E80               	movlw	128
 27397  01643C  0100               	movlb	0	; () banked
 27398  01643E  6FB8               	movwf	_RF_Mode& (0+255),b
 27399                           
 27400                           ;drv_mrf_miwi_89xa.c: 680: break;
 27401  016440  0012               	return	
 27402  016442                     i2l13147:
 27403                           
 27404                           ; BSR set to: 0
 27405                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 27406  016442  0E00               	movlw	0
 27407  016444  0100               	movlb	0	; () banked
 27408  016446  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 27409  016448  0E76               	movlw	118
 27410  01644A  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 27411  01644C  EC2C  F0B6         	call	i2_RegisterSet	;wreg free
 27412                           
 27413                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x60;
 27414  016450  0E60               	movlw	96
 27415  016452  0100               	movlb	0	; () banked
 27416  016454  6FB8               	movwf	_RF_Mode& (0+255),b
 27417                           
 27418                           ;drv_mrf_miwi_89xa.c: 684: break;
 27419  016456  0012               	return	
 27420  016458                     i2l13151:
 27421                           
 27422                           ; BSR set to: 0
 27423                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 27424  016458  0E00               	movlw	0
 27425  01645A  0100               	movlb	0	; () banked
 27426  01645C  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 27427  01645E  0E56               	movlw	86
 27428  016460  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 27429  016462  EC2C  F0B6         	call	i2_RegisterSet	;wreg free
 27430                           
 27431                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x40;
 27432  016466  0E40               	movlw	64
 27433  016468  0100               	movlb	0	; () banked
 27434  01646A  6FB8               	movwf	_RF_Mode& (0+255),b
 27435                           
 27436                           ;drv_mrf_miwi_89xa.c: 688: break;
 27437  01646C  0012               	return	
 27438  01646E                     i2l13155:
 27439                           
 27440                           ; BSR set to: 0
 27441                           ;drv_mrf_miwi_89xa.c: 690: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 27442  01646E  0E00               	movlw	0
 27443  016470  0100               	movlb	0	; () banked
 27444  016472  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 27445  016474  0E36               	movlw	54
 27446  016476  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 27447  016478  EC2C  F0B6         	call	i2_RegisterSet	;wreg free
 27448                           
 27449                           ;drv_mrf_miwi_89xa.c: 691: RF_Mode = 0x20;
 27450  01647C  0E20               	movlw	32
 27451  01647E  0100               	movlb	0	; () banked
 27452  016480  6FB8               	movwf	_RF_Mode& (0+255),b
 27453                           
 27454                           ;drv_mrf_miwi_89xa.c: 692: break;
 27455  016482  0012               	return	
 27456  016484                     i2l13159:
 27457                           
 27458                           ; BSR set to: 0
 27459                           ;drv_mrf_miwi_89xa.c: 694: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 27460  016484  0E00               	movlw	0
 27461  016486  0100               	movlb	0	; () banked
 27462  016488  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 27463  01648A  0E16               	movlw	22
 27464  01648C  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 27465  01648E  EC2C  F0B6         	call	i2_RegisterSet	;wreg free
 27466                           
 27467                           ;drv_mrf_miwi_89xa.c: 695: RF_Mode = 0x00;
 27468  016492  0E00               	movlw	0
 27469  016494  0100               	movlb	0	; () banked
 27470  016496  6FB8               	movwf	_RF_Mode& (0+255),b
 27471                           
 27472                           ; BSR set to: 0
 27473                           ;drv_mrf_miwi_89xa.c: 697: }
 27474                           
 27475                           ;drv_mrf_miwi_89xa.c: 696: break;
 27476  016498  0012               	return	
 27477  01649A                     i2l13165:
 27478  01649A  0100               	movlb	0	; () banked
 27479  01649C  5166               	movf	i2SetRFMode@mode& (0+255),w,b
 27480                           
 27481                           ; Switch size 1, requested type "space"
 27482                           ; Number of cases is 5, Range of values is 0 to 128
 27483                           ; switch strategies available:
 27484                           ; Name         Instructions Cycles
 27485                           ; simple_byte           16     9 (average)
 27486                           ;	Chosen strategy is simple_byte
 27487  01649E  0A00               	xorlw	0	; case 0
 27488  0164A0  B4D8               	btfsc	status,2,c
 27489  0164A2  D7F0               	goto	i2l13159
 27490  0164A4  0A20               	xorlw	32	; case 32
 27491  0164A6  B4D8               	btfsc	status,2,c
 27492  0164A8  D7E2               	goto	i2l13155
 27493  0164AA  0A60               	xorlw	96	; case 64
 27494  0164AC  B4D8               	btfsc	status,2,c
 27495  0164AE  D7D4               	goto	i2l13151
 27496  0164B0  0A20               	xorlw	32	; case 96
 27497  0164B2  B4D8               	btfsc	status,2,c
 27498  0164B4  D7C6               	goto	i2l13147
 27499  0164B6  0AE0               	xorlw	224	; case 128
 27500  0164B8  A4D8               	btfss	status,2,c
 27501  0164BA  0012               	return	
 27502  0164BC  D7B7               	goto	i2l13143
 27503  0164BE                     __end_ofi2_SetRFMode:
 27504                           	opt stack 0
 27505                           pclatu	equ	0xFFB
 27506                           pclath	equ	0xFFA
 27507                           tblptru	equ	0xFF8
 27508                           tblptrh	equ	0xFF7
 27509                           tblptrl	equ	0xFF6
 27510                           tablat	equ	0xFF5
 27511                           prodh	equ	0xFF4
 27512                           prodl	equ	0xFF3
 27513                           intcon	equ	0xFF2
 27514                           intcon2	equ	0xFF1
 27515                           intcon3	equ	0xFF0
 27516                           indf0	equ	0xFEF
 27517                           postinc0	equ	0xFEE
 27518                           plusw0	equ	0xFEB
 27519                           fsr0h	equ	0xFEA
 27520                           fsr0l	equ	0xFE9
 27521                           wreg	equ	0xFE8
 27522                           indf1	equ	0xFE7
 27523                           postinc1	equ	0xFE6
 27524                           postdec1	equ	0xFE5
 27525                           fsr1h	equ	0xFE2
 27526                           fsr1l	equ	0xFE1
 27527                           bsr	equ	0xFE0
 27528                           indf2	equ	0xFDF
 27529                           postinc2	equ	0xFDE
 27530                           postdec2	equ	0xFDD
 27531                           plusw2	equ	0xFDB
 27532                           fsr2h	equ	0xFDA
 27533                           fsr2l	equ	0xFD9
 27534                           status	equ	0xFD8
 27535                           
 27536 ;; *************** function i2_RegisterSet *****************
 27537 ;; Defined at:
 27538 ;;		line 171 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27539 ;; Parameters:    Size  Location     Type
 27540 ;;  setting         2    2[BANK0 ] unsigned int 
 27541 ;; Auto vars:     Size  Location     Type
 27542 ;;  RegisterSet     1    5[BANK0 ] unsigned char 
 27543 ;;  RegisterSet     1    4[BANK0 ] unsigned char 
 27544 ;; Return value:  Size  Location     Type
 27545 ;;		None               void
 27546 ;; Registers used:
 27547 ;;		wreg, status,2, cstack
 27548 ;; Tracked objects:
 27549 ;;		On entry : 0/0
 27550 ;;		On exit  : 0/0
 27551 ;;		Unchanged: 0/0
 27552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27553 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27554 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27556 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27557 ;;Total ram usage:        4 bytes
 27558 ;; Hardware stack levels used:    1
 27559 ;; Hardware stack levels required when called:    1
 27560 ;; This function calls:
 27561 ;;		i2_SPIPut
 27562 ;; This function is called by:
 27563 ;;		i2_TxPacket
 27564 ;;		i2_SetRFMode
 27565 ;; This function uses a non-reentrant model
 27566 ;;
 27567                           
 27568                           	psect	text90
 27569  016C58                     __ptext90:
 27570                           	opt stack 0
 27571  016C58                     i2_RegisterSet:
 27572                           	opt stack 11
 27573                           
 27574                           ;drv_mrf_miwi_89xa.c: 173: uint8_t IRQ1select = INTCON3bits.INT1IE;
 27575                           
 27576                           ; BSR set to: 0
 27577                           ;incstack = 0
 27578  016C58  0E00               	movlw	0
 27579  016C5A  B6F0               	btfsc	intcon3,3,c	;volatile
 27580  016C5C  0E01               	movlw	1
 27581  016C5E  0100               	movlb	0	; () banked
 27582  016C60  6F64               	movwf	i2RegisterSet@IRQ1select& (0+255),b
 27583                           
 27584                           ;drv_mrf_miwi_89xa.c: 175: bool IRQ0select = INTCONbits.INT0IE;
 27585  016C62  0E00               	movlw	0
 27586  016C64  B8F2               	btfsc	intcon,4,c	;volatile
 27587  016C66  0E01               	movlw	1
 27588  016C68  0100               	movlb	0	; () banked
 27589  016C6A  6F65               	movwf	i2RegisterSet@IRQ0select& (0+255),b
 27590                           
 27591                           ; BSR set to: 0
 27592                           ;drv_mrf_miwi_89xa.c: 176: INTCONbits.INT0IE = 0;
 27593  016C6C  98F2               	bcf	intcon,4,c	;volatile
 27594                           
 27595                           ; BSR set to: 0
 27596                           ;drv_mrf_miwi_89xa.c: 179: INTCON3bits.INT1IE = 0;
 27597  016C6E  96F0               	bcf	intcon3,3,c	;volatile
 27598                           
 27599                           ; BSR set to: 0
 27600                           ;drv_mrf_miwi_89xa.c: 180: LATBbits.LATB3 = 0;
 27601  016C70  968A               	bcf	3978,3,c	;volatile
 27602                           
 27603                           ; BSR set to: 0
 27604                           ;drv_mrf_miwi_89xa.c: 181: SPIPut((uint8_t)(setting >> 8));
 27605  016C72  0100               	movlb	0	; () banked
 27606  016C74  5163               	movf	(i2RegisterSet@setting+1)& (0+255),w,b
 27607  016C76  ECB8  F0B7         	call	i2_SPIPut
 27608                           
 27609                           ;drv_mrf_miwi_89xa.c: 182: SPIPut((uint8_t)setting);
 27610  016C7A  0100               	movlb	0	; () banked
 27611  016C7C  5162               	movf	i2RegisterSet@setting& (0+255),w,b
 27612  016C7E  ECB8  F0B7         	call	i2_SPIPut
 27613                           
 27614                           ;drv_mrf_miwi_89xa.c: 183: LATBbits.LATB3 = 1;
 27615  016C82  868A               	bsf	3978,3,c	;volatile
 27616                           
 27617                           ;drv_mrf_miwi_89xa.c: 184: INTCON3bits.INT1IE = IRQ1select;
 27618  016C84  0100               	movlb	0	; () banked
 27619  016C86  B164               	btfsc	i2RegisterSet@IRQ1select& (0+255),0,b
 27620  016C88  D002               	bra	i2u1472_45
 27621  016C8A  96F0               	bcf	intcon3,3,c	;volatile
 27622  016C8C  D001               	bra	i2u1472_46
 27623  016C8E                     i2u1472_45:
 27624  016C8E  86F0               	bsf	intcon3,3,c	;volatile
 27625  016C90                     i2u1472_46:
 27626                           
 27627                           ;drv_mrf_miwi_89xa.c: 187: INTCONbits.INT0IE = IRQ0select;
 27628  016C90  0100               	movlb	0	; () banked
 27629  016C92  B165               	btfsc	i2RegisterSet@IRQ0select& (0+255),0,b
 27630  016C94  D002               	bra	i2u1473_45
 27631  016C96  98F2               	bcf	intcon,4,c	;volatile
 27632  016C98  D001               	bra	i2u1473_46
 27633  016C9A                     i2u1473_45:
 27634  016C9A  88F2               	bsf	intcon,4,c	;volatile
 27635  016C9C                     i2u1473_46:
 27636  016C9C  0012               	return		;funcret
 27637  016C9E                     __end_ofi2_RegisterSet:
 27638                           	opt stack 0
 27639                           pclatu	equ	0xFFB
 27640                           pclath	equ	0xFFA
 27641                           tblptru	equ	0xFF8
 27642                           tblptrh	equ	0xFF7
 27643                           tblptrl	equ	0xFF6
 27644                           tablat	equ	0xFF5
 27645                           prodh	equ	0xFF4
 27646                           prodl	equ	0xFF3
 27647                           intcon	equ	0xFF2
 27648                           intcon2	equ	0xFF1
 27649                           intcon3	equ	0xFF0
 27650                           indf0	equ	0xFEF
 27651                           postinc0	equ	0xFEE
 27652                           plusw0	equ	0xFEB
 27653                           fsr0h	equ	0xFEA
 27654                           fsr0l	equ	0xFE9
 27655                           wreg	equ	0xFE8
 27656                           indf1	equ	0xFE7
 27657                           postinc1	equ	0xFE6
 27658                           postdec1	equ	0xFE5
 27659                           fsr1h	equ	0xFE2
 27660                           fsr1l	equ	0xFE1
 27661                           bsr	equ	0xFE0
 27662                           indf2	equ	0xFDF
 27663                           postinc2	equ	0xFDE
 27664                           postdec2	equ	0xFDD
 27665                           plusw2	equ	0xFDB
 27666                           fsr2h	equ	0xFDA
 27667                           fsr2l	equ	0xFD9
 27668                           status	equ	0xFD8
 27669                           
 27670 ;; *************** function i2_RegisterRead *****************
 27671 ;; Defined at:
 27672 ;;		line 207 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27673 ;; Parameters:    Size  Location     Type
 27674 ;;  address         1    wreg     unsigned char 
 27675 ;; Auto vars:     Size  Location     Type
 27676 ;;  address         1    5[BANK0 ] unsigned char 
 27677 ;;  RegisterRead    1    4[BANK0 ] unsigned char 
 27678 ;;  RegisterRead    1    3[BANK0 ] unsigned char 
 27679 ;;  RegisterRead    1    2[BANK0 ] unsigned char 
 27680 ;; Return value:  Size  Location     Type
 27681 ;;                  1    wreg      unsigned char 
 27682 ;; Registers used:
 27683 ;;		wreg, status,2, status,0, cstack
 27684 ;; Tracked objects:
 27685 ;;		On entry : 0/0
 27686 ;;		On exit  : 0/0
 27687 ;;		Unchanged: 0/0
 27688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27690 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27692 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27693 ;;Total ram usage:        4 bytes
 27694 ;; Hardware stack levels used:    1
 27695 ;; Hardware stack levels required when called:    2
 27696 ;; This function calls:
 27697 ;;		i2_SPIGet
 27698 ;;		i2_SPIPut
 27699 ;; This function is called by:
 27700 ;;		_MIWIInterruptHandler
 27701 ;;		i2_TxPacket
 27702 ;; This function uses a non-reentrant model
 27703 ;;
 27704                           
 27705                           	psect	text91
 27706  016B1A                     __ptext91:
 27707                           	opt stack 0
 27708  016B1A                     i2_RegisterRead:
 27709                           	opt stack 11
 27710                           
 27711                           ;incstack = 0
 27712                           ;i2RegisterRead@address stored from wreg
 27713  016B1A  0100               	movlb	0	; () banked
 27714  016B1C  6F65               	movwf	i2RegisterRead@address& (0+255),b
 27715                           
 27716                           ;drv_mrf_miwi_89xa.c: 209: uint8_t value;
 27717                           ;drv_mrf_miwi_89xa.c: 210: uint8_t IRQ1select = INTCON3bits.INT1IE;
 27718  016B1E  0E00               	movlw	0
 27719  016B20  B6F0               	btfsc	intcon3,3,c	;volatile
 27720  016B22  0E01               	movlw	1
 27721  016B24  0100               	movlb	0	; () banked
 27722  016B26  6F63               	movwf	i2RegisterRead@IRQ1select& (0+255),b
 27723                           
 27724                           ;drv_mrf_miwi_89xa.c: 212: bool IRQ0select = INTCONbits.INT0IE;
 27725  016B28  0E00               	movlw	0
 27726  016B2A  B8F2               	btfsc	intcon,4,c	;volatile
 27727  016B2C  0E01               	movlw	1
 27728  016B2E  0100               	movlb	0	; () banked
 27729  016B30  6F64               	movwf	i2RegisterRead@IRQ0select& (0+255),b
 27730                           
 27731                           ;drv_mrf_miwi_89xa.c: 214: INTCONbits.INT0IE = 0;
 27732  016B32  98F2               	bcf	intcon,4,c	;volatile
 27733                           
 27734                           ;drv_mrf_miwi_89xa.c: 217: INTCON3bits.INT1IE = 0;
 27735  016B34  96F0               	bcf	intcon3,3,c	;volatile
 27736                           
 27737                           ;drv_mrf_miwi_89xa.c: 218: LATBbits.LATB3 = 0;
 27738  016B36  968A               	bcf	3978,3,c	;volatile
 27739                           
 27740                           ; BSR set to: 0
 27741                           ;drv_mrf_miwi_89xa.c: 219: address = (address|0x40);
 27742  016B38  0100               	movlb	0	; () banked
 27743  016B3A  5165               	movf	i2RegisterRead@address& (0+255),w,b
 27744  016B3C  0940               	iorlw	64
 27745  016B3E  0100               	movlb	0	; () banked
 27746  016B40  6F65               	movwf	i2RegisterRead@address& (0+255),b
 27747                           
 27748                           ; BSR set to: 0
 27749                           ;drv_mrf_miwi_89xa.c: 220: SPIPut(address);
 27750  016B42  0100               	movlb	0	; () banked
 27751  016B44  5165               	movf	i2RegisterRead@address& (0+255),w,b
 27752  016B46  ECB8  F0B7         	call	i2_SPIPut
 27753                           
 27754                           ;drv_mrf_miwi_89xa.c: 221: value = SPIGet();
 27755  016B4A  ECFB  F0B7         	call	i2_SPIGet	;wreg free
 27756  016B4E  0100               	movlb	0	; () banked
 27757  016B50  6F62               	movwf	i2RegisterRead@value& (0+255),b
 27758                           
 27759                           ; BSR set to: 0
 27760                           ;drv_mrf_miwi_89xa.c: 222: LATBbits.LATB3 = 1;
 27761  016B52  868A               	bsf	3978,3,c	;volatile
 27762                           
 27763                           ; BSR set to: 0
 27764                           ;drv_mrf_miwi_89xa.c: 223: INTCON3bits.INT1IE = IRQ1select;
 27765  016B54  0100               	movlb	0	; () banked
 27766  016B56  B163               	btfsc	i2RegisterRead@IRQ1select& (0+255),0,b
 27767  016B58  D002               	bra	i2u1552_45
 27768  016B5A  96F0               	bcf	intcon3,3,c	;volatile
 27769  016B5C  D001               	bra	i2u1552_46
 27770  016B5E                     i2u1552_45:
 27771  016B5E  86F0               	bsf	intcon3,3,c	;volatile
 27772  016B60                     i2u1552_46:
 27773                           
 27774                           ;drv_mrf_miwi_89xa.c: 226: INTCONbits.INT0IE = IRQ0select;
 27775  016B60  0100               	movlb	0	; () banked
 27776  016B62  B164               	btfsc	i2RegisterRead@IRQ0select& (0+255),0,b
 27777  016B64  D002               	bra	i2u1553_45
 27778  016B66  98F2               	bcf	intcon,4,c	;volatile
 27779  016B68  D001               	bra	i2u1553_46
 27780  016B6A                     i2u1553_45:
 27781  016B6A  88F2               	bsf	intcon,4,c	;volatile
 27782  016B6C                     i2u1553_46:
 27783                           
 27784                           ;drv_mrf_miwi_89xa.c: 229: return value;
 27785  016B6C  0100               	movlb	0	; () banked
 27786  016B6E  5162               	movf	i2RegisterRead@value& (0+255),w,b
 27787  016B70  0012               	return	
 27788  016B72                     __end_ofi2_RegisterRead:
 27789                           	opt stack 0
 27790                           pclatu	equ	0xFFB
 27791                           pclath	equ	0xFFA
 27792                           tblptru	equ	0xFF8
 27793                           tblptrh	equ	0xFF7
 27794                           tblptrl	equ	0xFF6
 27795                           tablat	equ	0xFF5
 27796                           prodh	equ	0xFF4
 27797                           prodl	equ	0xFF3
 27798                           intcon	equ	0xFF2
 27799                           intcon2	equ	0xFF1
 27800                           intcon3	equ	0xFF0
 27801                           indf0	equ	0xFEF
 27802                           postinc0	equ	0xFEE
 27803                           plusw0	equ	0xFEB
 27804                           fsr0h	equ	0xFEA
 27805                           fsr0l	equ	0xFE9
 27806                           wreg	equ	0xFE8
 27807                           indf1	equ	0xFE7
 27808                           postinc1	equ	0xFE6
 27809                           postdec1	equ	0xFE5
 27810                           fsr1h	equ	0xFE2
 27811                           fsr1l	equ	0xFE1
 27812                           bsr	equ	0xFE0
 27813                           indf2	equ	0xFDF
 27814                           postinc2	equ	0xFDE
 27815                           postdec2	equ	0xFDD
 27816                           plusw2	equ	0xFDB
 27817                           fsr2h	equ	0xFDA
 27818                           fsr2l	equ	0xFD9
 27819                           status	equ	0xFD8
 27820                           
 27821 ;; *************** function i2_SPIGet *****************
 27822 ;; Defined at:
 27823 ;;		line 104 in file "src/18F27J53/spi.c"
 27824 ;; Parameters:    Size  Location     Type
 27825 ;;		None
 27826 ;; Auto vars:     Size  Location     Type
 27827 ;;		None
 27828 ;; Return value:  Size  Location     Type
 27829 ;;                  1    wreg      unsigned char 
 27830 ;; Registers used:
 27831 ;;		wreg, status,2, cstack
 27832 ;; Tracked objects:
 27833 ;;		On entry : 0/0
 27834 ;;		On exit  : 0/0
 27835 ;;		Unchanged: 0/0
 27836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27841 ;;Total ram usage:        0 bytes
 27842 ;; Hardware stack levels used:    1
 27843 ;; Hardware stack levels required when called:    1
 27844 ;; This function calls:
 27845 ;;		i2_SPIPut
 27846 ;; This function is called by:
 27847 ;;		_MIWIInterruptHandler
 27848 ;;		i2_RegisterRead
 27849 ;; This function uses a non-reentrant model
 27850 ;;
 27851                           
 27852                           	psect	text92
 27853  016FF6                     __ptext92:
 27854                           	opt stack 0
 27855  016FF6                     i2_SPIGet:
 27856                           	opt stack 11
 27857                           
 27858                           ;spi.c: 128: SPIPut(0x00);
 27859                           
 27860                           ; BSR set to: 0
 27861                           ;incstack = 0
 27862  016FF6  0E00               	movlw	0
 27863  016FF8  ECB8  F0B7         	call	i2_SPIPut
 27864                           
 27865                           ;spi.c: 129: return SSP2BUF;
 27866  016FFC  5075               	movf	3957,w,c	;volatile
 27867  016FFE  0012               	return	
 27868  017000                     __end_ofi2_SPIGet:
 27869                           	opt stack 0
 27870                           pclatu	equ	0xFFB
 27871                           pclath	equ	0xFFA
 27872                           tblptru	equ	0xFF8
 27873                           tblptrh	equ	0xFF7
 27874                           tblptrl	equ	0xFF6
 27875                           tablat	equ	0xFF5
 27876                           prodh	equ	0xFF4
 27877                           prodl	equ	0xFF3
 27878                           intcon	equ	0xFF2
 27879                           intcon2	equ	0xFF1
 27880                           intcon3	equ	0xFF0
 27881                           indf0	equ	0xFEF
 27882                           postinc0	equ	0xFEE
 27883                           plusw0	equ	0xFEB
 27884                           fsr0h	equ	0xFEA
 27885                           fsr0l	equ	0xFE9
 27886                           wreg	equ	0xFE8
 27887                           indf1	equ	0xFE7
 27888                           postinc1	equ	0xFE6
 27889                           postdec1	equ	0xFE5
 27890                           fsr1h	equ	0xFE2
 27891                           fsr1l	equ	0xFE1
 27892                           bsr	equ	0xFE0
 27893                           indf2	equ	0xFDF
 27894                           postinc2	equ	0xFDE
 27895                           postdec2	equ	0xFDD
 27896                           plusw2	equ	0xFDB
 27897                           fsr2h	equ	0xFDA
 27898                           fsr2l	equ	0xFD9
 27899                           status	equ	0xFD8
 27900                           
 27901 ;; *************** function i2_SPIPut *****************
 27902 ;; Defined at:
 27903 ;;		line 45 in file "src/18F27J53/spi.c"
 27904 ;; Parameters:    Size  Location     Type
 27905 ;;  v               1    wreg     unsigned char 
 27906 ;; Auto vars:     Size  Location     Type
 27907 ;;  v               1    1[BANK0 ] unsigned char 
 27908 ;;  SPIPut          1    0[BANK0 ] unsigned char 
 27909 ;; Return value:  Size  Location     Type
 27910 ;;		None               void
 27911 ;; Registers used:
 27912 ;;		wreg
 27913 ;; Tracked objects:
 27914 ;;		On entry : 0/0
 27915 ;;		On exit  : 0/0
 27916 ;;		Unchanged: 0/0
 27917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27921 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27922 ;;Total ram usage:        2 bytes
 27923 ;; Hardware stack levels used:    1
 27924 ;; This function calls:
 27925 ;;		Nothing
 27926 ;; This function is called by:
 27927 ;;		i2_SPIGet
 27928 ;;		i2_RegisterSet
 27929 ;;		i2_RegisterRead
 27930 ;;		i2_WriteFIFO
 27931 ;; This function uses a non-reentrant model
 27932 ;;
 27933                           
 27934                           	psect	text93
 27935  016F70                     __ptext93:
 27936                           	opt stack 0
 27937  016F70                     i2_SPIPut:
 27938                           	opt stack 12
 27939                           
 27940                           ;incstack = 0
 27941                           ;i2SPIPut@v stored from wreg
 27942  016F70  0100               	movlb	0	; () banked
 27943  016F72  6F61               	movwf	i2SPIPut@v& (0+255),b
 27944                           
 27945                           ;spi.c: 66: {
 27946                           ;spi.c: 68: uint8_t i;
 27947                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 27948  016F74  9EA4               	bcf	4004,7,c	;volatile
 27949                           
 27950                           ;spi.c: 72: i = SSP2BUF;
 27951  016F76  CF75 F060          	movff	3957,i2SPIPut@i	;volatile
 27952  016F7A                     i2l29:
 27953                           
 27954                           ;spi.c: 75: {
 27955                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 27956  016F7A  9E72               	bcf	3954,7,c	;volatile
 27957                           
 27958                           ;spi.c: 77: SSP2BUF = v;
 27959  016F7C  C061  FF75         	movff	i2SPIPut@v,3957	;volatile
 27960                           
 27961                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 27962  016F80  BE72               	btfsc	3954,7,c	;volatile
 27963  016F82  D7FB               	goto	i2l29
 27964  016F84                     i2l31:
 27965  016F84  AEA4               	btfss	4004,7,c	;volatile
 27966  016F86  D7FE               	goto	i2l31
 27967                           
 27968                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 27969  016F88  9EA4               	bcf	4004,7,c	;volatile
 27970  016F8A  0012               	return		;funcret
 27971  016F8C                     __end_ofi2_SPIPut:
 27972                           	opt stack 0
 27973                           pclatu	equ	0xFFB
 27974                           pclath	equ	0xFFA
 27975                           tblptru	equ	0xFF8
 27976                           tblptrh	equ	0xFF7
 27977                           tblptrl	equ	0xFF6
 27978                           tablat	equ	0xFF5
 27979                           prodh	equ	0xFF4
 27980                           prodl	equ	0xFF3
 27981                           intcon	equ	0xFF2
 27982                           intcon2	equ	0xFF1
 27983                           intcon3	equ	0xFF0
 27984                           indf0	equ	0xFEF
 27985                           postinc0	equ	0xFEE
 27986                           plusw0	equ	0xFEB
 27987                           fsr0h	equ	0xFEA
 27988                           fsr0l	equ	0xFE9
 27989                           wreg	equ	0xFE8
 27990                           indf1	equ	0xFE7
 27991                           postinc1	equ	0xFE6
 27992                           postdec1	equ	0xFE5
 27993                           fsr1h	equ	0xFE2
 27994                           fsr1l	equ	0xFE1
 27995                           bsr	equ	0xFE0
 27996                           indf2	equ	0xFDF
 27997                           postinc2	equ	0xFDE
 27998                           postdec2	equ	0xFDD
 27999                           plusw2	equ	0xFDB
 28000                           fsr2h	equ	0xFDA
 28001                           fsr2l	equ	0xFD9
 28002                           status	equ	0xFD8
 28003                           
 28004 ;; *************** function i2_MiWi_TickGet *****************
 28005 ;; Defined at:
 28006 ;;		line 104 in file "src/18F27J53/symbol.c"
 28007 ;; Parameters:    Size  Location     Type
 28008 ;;		None
 28009 ;; Auto vars:     Size  Location     Type
 28010 ;;  MiWi_TickGet    4    6[BANK0 ] struct _MIWI_TICK
 28011 ;;  MiWi_TickGet    1    5[BANK0 ] unsigned char 
 28012 ;; Return value:  Size  Location     Type
 28013 ;;                  4    0[BANK0 ] struct _MIWI_TICK
 28014 ;; Registers used:
 28015 ;;		wreg, status,2, status,0
 28016 ;; Tracked objects:
 28017 ;;		On entry : 0/0
 28018 ;;		On exit  : 0/0
 28019 ;;		Unchanged: 0/0
 28020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28021 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28022 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28023 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28024 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28025 ;;Total ram usage:       10 bytes
 28026 ;; Hardware stack levels used:    1
 28027 ;; This function calls:
 28028 ;;		Nothing
 28029 ;; This function is called by:
 28030 ;;		_MIWIInterruptHandler
 28031 ;;		i2_TxPacket
 28032 ;; This function uses a non-reentrant model
 28033 ;;
 28034                           
 28035                           	psect	text94
 28036  0168B0                     __ptext94:
 28037                           	opt stack 0
 28038  0168B0                     i2_MiWi_TickGet:
 28039                           	opt stack 13
 28040                           
 28041                           ;symbol.c: 106: MIWI_TICK currentTime;
 28042                           ;symbol.c: 109: uint8_t failureCounter;
 28043                           ;symbol.c: 112: PIE1bits.TMR1IE = 0;
 28044                           
 28045                           ;incstack = 0
 28046  0168B0  909D               	bcf	3997,0,c	;volatile
 28047                           
 28048                           ;symbol.c: 115: currentTime.byte.b2 = 0;
 28049  0168B2  0E00               	movlw	0
 28050  0168B4  0100               	movlb	0	; () banked
 28051  0168B6  6F68               	movwf	(i2MiWi_TickGet@currentTime+2)& (0+255),b
 28052                           
 28053                           ;symbol.c: 116: currentTime.byte.b3 = 0;
 28054  0168B8  0E00               	movlw	0
 28055  0168BA  0100               	movlb	0	; () banked
 28056  0168BC  6F69               	movwf	(i2MiWi_TickGet@currentTime+3)& (0+255),b
 28057                           
 28058                           ;symbol.c: 118: failureCounter = 0;
 28059  0168BE  0E00               	movlw	0
 28060  0168C0  0100               	movlb	0	; () banked
 28061  0168C2  6F65               	movwf	i2MiWi_TickGet@failureCounter& (0+255),b
 28062  0168C4                     i2l13089:
 28063                           
 28064                           ; BSR set to: 0
 28065                           ;symbol.c: 121: {
 28066                           ;symbol.c: 122: currentTime.byte.b0 = TMR1L;
 28067  0168C4  CFCE F066          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 28068                           
 28069                           ; BSR set to: 0
 28070                           ;symbol.c: 123: currentTime.byte.b1 = TMR1H;
 28071  0168C8  CFCF F067          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 28072                           
 28073                           ; BSR set to: 0
 28074                           ;symbol.c: 124: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 28075  0168CC  0100               	movlb	0	; () banked
 28076  0168CE  2966               	incf	i2MiWi_TickGet@currentTime& (0+255),w,b
 28077  0168D0  E10D               	bnz	i2l62
 28078  0168D2  0100               	movlb	0	; () banked
 28079  0168D4  2967               	incf	(i2MiWi_TickGet@currentTime+1)& (0+255),w,b
 28080  0168D6  A4D8               	btfss	status,2,c
 28081  0168D8  D009               	goto	i2l62
 28082                           
 28083                           ; BSR set to: 0
 28084  0168DA  0100               	movlb	0	; () banked
 28085  0168DC  2B65               	incf	i2MiWi_TickGet@failureCounter& (0+255),f,b
 28086  0168DE  0565               	decf	i2MiWi_TickGet@failureCounter& (0+255),w,b
 28087  0168E0  0100               	movlb	0	; () banked
 28088  0168E2  6F64               	movwf	??i2_MiWi_TickGet& (0+255),b
 28089  0168E4  0E02               	movlw	2
 28090  0168E6  0100               	movlb	0	; () banked
 28091  0168E8  6564               	cpfsgt	??i2_MiWi_TickGet& (0+255),b
 28092  0168EA  D7EC               	goto	i2l13089
 28093  0168EC                     i2l62:
 28094                           
 28095                           ; BSR set to: 0
 28096                           ;symbol.c: 128: if(PIR1bits.TMR1IF)
 28097  0168EC  A09E               	btfss	3998,0,c	;volatile
 28098  0168EE  D008               	goto	i2l13103
 28099                           
 28100                           ; BSR set to: 0
 28101                           ;symbol.c: 129: {
 28102                           ;symbol.c: 131: {
 28103                           ;symbol.c: 134: currentTime.byte.b2++;
 28104  0168F0  0100               	movlb	0	; () banked
 28105  0168F2  2B68               	incf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 28106                           
 28107                           ; BSR set to: 0
 28108                           ;symbol.c: 135: if(timerExtension1 == 0xFF)
 28109  0168F4  0100               	movlb	0	; () banked
 28110  0168F6  29BE               	incf	_timerExtension1& (0+255),w,b	;volatile
 28111  0168F8  A4D8               	btfss	status,2,c
 28112  0168FA  D002               	goto	i2l13103
 28113                           
 28114                           ; BSR set to: 0
 28115                           ;symbol.c: 136: {
 28116                           ;symbol.c: 137: currentTime.byte.b3++;
 28117  0168FC  0100               	movlb	0	; () banked
 28118  0168FE  2B69               	incf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 28119  016900                     i2l13103:
 28120                           
 28121                           ; BSR set to: 0
 28122                           ;symbol.c: 138: }
 28123                           ;symbol.c: 139: }
 28124                           ;symbol.c: 140: }
 28125                           ;symbol.c: 143: currentTime.byte.b2 += timerExtension1;
 28126  016900  0100               	movlb	0	; () banked
 28127  016902  51BE               	movf	_timerExtension1& (0+255),w,b	;volatile
 28128  016904  0100               	movlb	0	; () banked
 28129  016906  2768               	addwf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 28130                           
 28131                           ; BSR set to: 0
 28132                           ;symbol.c: 144: currentTime.byte.b3 += timerExtension2;
 28133  016908  0100               	movlb	0	; () banked
 28134  01690A  51BF               	movf	_timerExtension2& (0+255),w,b	;volatile
 28135  01690C  0100               	movlb	0	; () banked
 28136  01690E  2769               	addwf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 28137                           
 28138                           ; BSR set to: 0
 28139                           ;symbol.c: 147: PIE1bits.TMR1IE = 1;
 28140  016910  809D               	bsf	3997,0,c	;volatile
 28141                           
 28142                           ; BSR set to: 0
 28143                           ;symbol.c: 149: return currentTime;
 28144  016912  C066  F060         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 28145  016916  C067  F061         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 28146  01691A  C068  F062         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 28147  01691E  C069  F063         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 28148  016922  0012               	return	
 28149  016924                     __end_ofi2_MiWi_TickGet:
 28150                           	opt stack 0
 28151                           pclatu	equ	0xFFB
 28152                           pclath	equ	0xFFA
 28153                           tblptru	equ	0xFF8
 28154                           tblptrh	equ	0xFF7
 28155                           tblptrl	equ	0xFF6
 28156                           tablat	equ	0xFF5
 28157                           prodh	equ	0xFF4
 28158                           prodl	equ	0xFF3
 28159                           intcon	equ	0xFF2
 28160                           intcon2	equ	0xFF1
 28161                           intcon3	equ	0xFF0
 28162                           indf0	equ	0xFEF
 28163                           postinc0	equ	0xFEE
 28164                           plusw0	equ	0xFEB
 28165                           fsr0h	equ	0xFEA
 28166                           fsr0l	equ	0xFE9
 28167                           wreg	equ	0xFE8
 28168                           indf1	equ	0xFE7
 28169                           postinc1	equ	0xFE6
 28170                           postdec1	equ	0xFE5
 28171                           fsr1h	equ	0xFE2
 28172                           fsr1l	equ	0xFE1
 28173                           bsr	equ	0xFE0
 28174                           indf2	equ	0xFDF
 28175                           postinc2	equ	0xFDE
 28176                           postdec2	equ	0xFDD
 28177                           plusw2	equ	0xFDB
 28178                           fsr2h	equ	0xFDA
 28179                           fsr2l	equ	0xFD9
 28180                           status	equ	0xFD8
 28181                           pclatu	equ	0xFFB
 28182                           pclath	equ	0xFFA
 28183                           tblptru	equ	0xFF8
 28184                           tblptrh	equ	0xFF7
 28185                           tblptrl	equ	0xFF6
 28186                           tablat	equ	0xFF5
 28187                           prodh	equ	0xFF4
 28188                           prodl	equ	0xFF3
 28189                           intcon	equ	0xFF2
 28190                           intcon2	equ	0xFF1
 28191                           intcon3	equ	0xFF0
 28192                           indf0	equ	0xFEF
 28193                           postinc0	equ	0xFEE
 28194                           plusw0	equ	0xFEB
 28195                           fsr0h	equ	0xFEA
 28196                           fsr0l	equ	0xFE9
 28197                           wreg	equ	0xFE8
 28198                           indf1	equ	0xFE7
 28199                           postinc1	equ	0xFE6
 28200                           postdec1	equ	0xFE5
 28201                           fsr1h	equ	0xFE2
 28202                           fsr1l	equ	0xFE1
 28203                           bsr	equ	0xFE0
 28204                           indf2	equ	0xFDF
 28205                           postinc2	equ	0xFDE
 28206                           postdec2	equ	0xFDD
 28207                           plusw2	equ	0xFDB
 28208                           fsr2h	equ	0xFDA
 28209                           fsr2l	equ	0xFD9
 28210                           status	equ	0xFD8
 28211                           
 28212                           	psect	param0
 28213  0000                     pclatu	equ	0xFFB
 28214                           pclath	equ	0xFFA
 28215                           tblptru	equ	0xFF8
 28216                           tblptrh	equ	0xFF7
 28217                           tblptrl	equ	0xFF6
 28218                           tablat	equ	0xFF5
 28219                           prodh	equ	0xFF4
 28220                           prodl	equ	0xFF3
 28221                           intcon	equ	0xFF2
 28222                           intcon2	equ	0xFF1
 28223                           intcon3	equ	0xFF0
 28224                           indf0	equ	0xFEF
 28225                           postinc0	equ	0xFEE
 28226                           plusw0	equ	0xFEB
 28227                           fsr0h	equ	0xFEA
 28228                           fsr0l	equ	0xFE9
 28229                           wreg	equ	0xFE8
 28230                           indf1	equ	0xFE7
 28231                           postinc1	equ	0xFE6
 28232                           postdec1	equ	0xFE5
 28233                           fsr1h	equ	0xFE2
 28234                           fsr1l	equ	0xFE1
 28235                           bsr	equ	0xFE0
 28236                           indf2	equ	0xFDF
 28237                           postinc2	equ	0xFDE
 28238                           postdec2	equ	0xFDD
 28239                           plusw2	equ	0xFDB
 28240                           fsr2h	equ	0xFDA
 28241                           fsr2l	equ	0xFD9
 28242                           status	equ	0xFD8
 28243                           
 28244                           	psect	temp
 28245  000049                     btemp:
 28246                           	opt stack 0
 28247  000049                     	ds	1
 28248  0000                     int$flags	set	btemp
 28249                           pclatu	equ	0xFFB
 28250                           pclath	equ	0xFFA
 28251                           tblptru	equ	0xFF8
 28252                           tblptrh	equ	0xFF7
 28253                           tblptrl	equ	0xFF6
 28254                           tablat	equ	0xFF5
 28255                           prodh	equ	0xFF4
 28256                           prodl	equ	0xFF3
 28257                           intcon	equ	0xFF2
 28258                           intcon2	equ	0xFF1
 28259                           intcon3	equ	0xFF0
 28260                           indf0	equ	0xFEF
 28261                           postinc0	equ	0xFEE
 28262                           plusw0	equ	0xFEB
 28263                           fsr0h	equ	0xFEA
 28264                           fsr0l	equ	0xFE9
 28265                           wreg	equ	0xFE8
 28266                           indf1	equ	0xFE7
 28267                           postinc1	equ	0xFE6
 28268                           postdec1	equ	0xFE5
 28269                           fsr1h	equ	0xFE2
 28270                           fsr1l	equ	0xFE1
 28271                           bsr	equ	0xFE0
 28272                           indf2	equ	0xFDF
 28273                           postinc2	equ	0xFDE
 28274                           postdec2	equ	0xFDD
 28275                           plusw2	equ	0xFDB
 28276                           fsr2h	equ	0xFDA
 28277                           fsr2l	equ	0xFD9
 28278                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    268
    Data        4
    BSS         685
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      72
    BANK0           160     67     112
    BANK1           256    115     256
    BANK2           256      0     256
    BANK3           256     43     255
    BANK4           256     10      10
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(2) Largest target is 2
		 -> myPANID(BANK1[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(2) Largest target is 2
		 -> tempShortAddress(BANK1[2]), myShortAddress(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 43
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), TxBuffer(BANK1[43]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 43
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), TxBuffer(BANK1[43]), 

    memcpy@s1	PTR const void  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), FAILEDMSG_LABEL(CODE[4]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), 
		 -> POWER_LABEL(CODE[4]), TEMPERATURE_LABEL(CODE[4]), LIGHT_LEVEL_LABEL(CODE[4]), BATTERY_VOLTAGE_LABEL(CODE[4]), 
		 -> m_buffer(BANK2[32]), myLongAddress(BANK0[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), 
		 -> RxPacket(BANK3[132]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), FAILEDMSG_LABEL(CODE[4]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), 
		 -> POWER_LABEL(CODE[4]), TEMPERATURE_LABEL(CODE[4]), LIGHT_LEVEL_LABEL(CODE[4]), BATTERY_VOLTAGE_LABEL(CODE[4]), 
		 -> m_buffer(BANK2[32]), myLongAddress(BANK0[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), 
		 -> RxPacket(BANK3[132]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    do_UPDATE@p_buff	PTR unsigned char  size(2) Largest target is 32
		 -> m_buffer(BANK2[32]), 

    do_NETWORK_REGISTER@p_uid	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK0[4]), 

    decode_variable@p_buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK2[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    encode_ufixed16_variable@buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK2[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    encode_uint8_variable@buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK2[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    sp__dBm_to_mW	PTR const unsigned char  size(2) Largest target is 7
		 -> TX_POWER_INVALID(CODE[6]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), TX_POWER_N_2_DB_MW(CODE[6]), 
		 -> TX_POWER_1_DB_MW(CODE[7]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), TX_POWER_10_DB_MW(CODE[5]), 
		 -> TX_POWER_13_DB_MW(CODE[5]), 

    dBm_to_mW_ufixed16@value2	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    dBm_to_mW_ufixed16@value1	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    labelcmp@p2	PTR unsigned char  size(2) Largest target is 4
		 -> UPDATE_FREQUENCY_LABEL(CODE[4]), POWER_LABEL(CODE[4]), 

    labelcmp@p1	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    sp__memcpy	PTR void  size(2) Largest target is 43
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), TxBuffer(BANK1[43]), 

    p_buffer	PTR unsigned char  size(2) Largest target is 132
		 -> m_buffer(BANK2[32]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    MiApp_UnicastAddress@DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> do_UPDATE@shortaddress(BANK3[2]), do_POWER_TEST@shortaddress(BANK3[2]), do_NETWORK_REGISTER@shortaddress(BANK3[2]), tempShortAddress(BANK1[2]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK0[4]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 90
		 -> ConnectionTable(BANK2[90]), 

    SendMACPacket@Address	PTR unsigned char  size(2) Largest target is 90
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK3[2]), do_POWER_TEST@shortaddress(BANK3[2]), do_NETWORK_REGISTER@shortaddress(BANK3[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable.Address(BANK2[4]), ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    S2117$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S2117$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Dec@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK0[8]), 

    CCM_Dec@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Enc@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK0[8]), 

    CCM_Enc@text	PTR unsigned char  size(2) Largest target is 64
		 -> MACTxBuffer(BANK2[64]), 

    CBC_MAC@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK0[8]), 

    CBC_MAC@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CBC_MAC@MIC	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK0[4]), 

    CTR@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CTR@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK0[8]), 

    CTR@nounce	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK0[4]), 

    encode@key	PTR unsigned int  size(2) Largest target is 8
		 -> key(BANK0[8]), 

    encode@text	PTR unsigned int  size(2) Largest target is 4
		 -> tmpBlock(BANK0[4]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 43
		 -> TxBuffer(BANK1[43]), 

    S1714$DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK3[2]), do_POWER_TEST@shortaddress(BANK3[2]), do_NETWORK_REGISTER@shortaddress(BANK3[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 90
		 -> do_UPDATE@shortaddress(BANK3[2]), do_POWER_TEST@shortaddress(BANK3[2]), do_NETWORK_REGISTER@shortaddress(BANK3[2]), tempShortAddress(BANK1[2]), 
		 -> ConnectionTable(BANK2[90]), NULL(NULL[0]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK0[4]), 

    S1512$PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK0[4]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK0[4]), 

    S1736$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S1736$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    None.

Critical Paths under _SYS_InterruptLow in COMRAM

    _SYS_InterruptLow->i1___ftadd
    i1___ftadd->i1___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_MIWIInterruptHandler
    _MIWIInterruptHandler->i2_TxPacket
    i2_TxPacket->i2_MiWi_TickGet
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _SYS_InterruptLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_adapt_power_level
    _main->_do_NETWORK_REGISTER
    _sleep_and_reset->_MiApp_TransceiverPowerState
    _send_periodical_update->_do_UPDATE
    _send_initial_update->_do_UPDATE
    _floor->___altoft
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___lltoft->___lmul
    ___ftneg->_floor
    _read_sensors->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___ftneg
    ___ftdiv->___lltoft
    _process_update_answer->_send_writables_update
    _update_variable->_MiMAC_SetPower
    _send_writables_update->_do_UPDATE
    _do_UPDATE->_MiApp_UnicastAddress
    _decode_variable->_memcpy
    _MiApp_TransceiverPowerState->_MiMAC_PowerState
    _MiMAC_PowerState->_DELAY_ms
    _do_NETWORK_REGISTER->_MiApp_UnicastAddress
    _adapt_power_level->_do_POWER_TEST
    _do_POWER_TEST->_MiApp_UnicastAddress
    _MiMAC_SetPower->_RegisterSet
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_DELAY_ms
    _DELAY_ms->___lmul
    _MiApp_EstablishConnection->_MiApp_SearchConnection
    _MiApp_EstablishConnection->_OpenSocket
    _OpenSocket->_MiApp_UnicastAddress
    _SendMACPacket->_MiMAC_SendPacket
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _MiApp_MessageAvailable->_MiWiTasks
    _MiWiTasks->_MiMAC_ReceivedPacket
    _MiMAC_SendPacket->_CCM_Enc
    _TxPacket->_MiWi_TickGet
    _WriteFIFO->_SPIPut
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _CCM_Enc->_CBC_MAC
    _CCM_Enc->_CTR
    _MiMAC_ReceivedPacket->_CCM_Dec
    _CCM_Dec->_CBC_MAC
    _CCM_Dec->_CTR
    _CTR->_encode
    _CBC_MAC->_encode
    _AddNodeToNetworkTable->_SearchForLongAddress

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _SYS_InterruptLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _SYS_InterruptLow in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_send_initial_update
    _main->_send_periodical_update
    _send_periodical_update->_do_UPDATE
    _send_initial_update->_do_UPDATE
    _send_writables_update->_do_UPDATE
    _do_UPDATE->_MiApp_UnicastAddress
    _do_NETWORK_REGISTER->_MiApp_UnicastAddress
    _adapt_power_level->_do_POWER_TEST
    _do_POWER_TEST->_MiApp_UnicastAddress
    _OpenSocket->_MiApp_UnicastAddress

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _SYS_InterruptLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _SYS_InterruptLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _SYS_InterruptLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _SYS_InterruptLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _SYS_InterruptLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _SYS_InterruptLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _SYS_InterruptLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _SYS_InterruptLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _SYS_InterruptLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _SYS_InterruptLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SYS_InterruptHigh in BANK13

    None.

Critical Paths under _SYS_InterruptLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Critical Paths under _SYS_InterruptLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  955674
                                              0 BANK4     10    10      0
               _MiApp_ConnectionMode
               _MiApp_DiscardMessage
          _MiApp_EstablishConnection
             _MiApp_MessageAvailable
                 _MiApp_ProtocolInit
             _MiApp_SearchConnection
        _MiApp_TransceiverPowerState
                     _MiMAC_SetPower
                          _MiWiTasks
                         _RTCC_reset
                  _SYSTEM_Initialize
                  _adapt_power_level
                _do_NETWORK_REGISTER
              _process_update_answer
                       _read_sensors
          _security_force_key_update
                _send_initial_update
             _send_periodical_update
                    _sleep_and_reset
                        _timer_reset
                     _wait_for_1_sec
 ---------------------------------------------------------------------------------
 (1) _sleep_and_reset                                      0     0      0    3365
        _MiApp_TransceiverPowerState
                        _timer_reset
 ---------------------------------------------------------------------------------
 (1) _send_periodical_update                              54    54      0  149427
                                            113 BANK1      1     1      0
                                             28 BANK3     15    15      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                             ___lmul
                          _do_UPDATE
           _encode_ufixed16_variable
              _encode_uint8_variable
                              _floor
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _send_initial_update                                 54    54      0  150432
                                            113 BANK1      1     1      0
                                             28 BANK3     15    15      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                             ___lmul
                 _dBm_to_mW_ufixed16
                          _do_UPDATE
           _encode_ufixed16_variable
              _encode_uint8_variable
                              _floor
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _floor                                                8     5      3   16848
                                             61 BANK1      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     506
                                              0 BANK1      7     2      5
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     406
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    7046
                                              8 BANK1     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3783
                                             51 BANK1     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3993
                                             12 BANK1      9     5      4
                           ___ftpack
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     897
                                             69 BANK1      3     0      3
                            ___ftadd (ARG)
                            ___fttol (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (1) _security_force_key_update                            2     2      0     130
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _read_sensors                                         9     9      0   17776
                                             87 BANK1      9     9      0
                           _OpenI2C1
                           _ReadI2C1
                          _WriteI2C1
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    3818
                                              8 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4    2243
                                             36 BANK1     15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    6419
                                             72 BANK1     15     9      6
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4895
                                             21 BANK1     15     9      6
                           ___ftpack
                           ___lltoft (ARG)
                             ___lmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3475
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _WriteI2C1                                            2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenI2C1                                             2     1      1     166
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _process_update_answer                               13    13      0  150955
                                             28 BANK3     13    13      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
        _MiApp_TransceiverPowerState
                    _decode_variable
              _send_writables_update
                        _timer_reset
                    _update_variable
                     _wait_for_1_sec
 ---------------------------------------------------------------------------------
 (1) _wait_for_1_sec                                       3     3      0      68
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _update_variable                                      0     0      0    3025
                     _MiMAC_SetPower
                           _RtccWrOn
                           _labelcmp
                 _mW_ufixed16_to_dBm
 ---------------------------------------------------------------------------------
 (3) _mW_ufixed16_to_dBm                                   2     1      1     600
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (3) _labelcmp                                             8     4      4     639
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _timer_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _send_writables_update                                3     3      0  104683
                                            113 BANK1      1     1      0
                 _dBm_to_mW_ufixed16
                          _do_UPDATE
           _encode_ufixed16_variable
              _encode_uint8_variable
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _encode_uint8_variable                               15     3     12    1382
                                              0 BANK1     15     3     12
 ---------------------------------------------------------------------------------
 (2) _encode_ufixed16_variable                            15     3     12    2698
                                              0 BANK1     15     3     12
 ---------------------------------------------------------------------------------
 (2) _do_UPDATE                                           10     6      4   93808
                                            112 BANK1      1     1      0
                                             19 BANK3      9     5      4
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _dBm_to_mW_ufixed16                                   5     1      4    1005
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _decode_variable                                     22    12     10    6629
                                             10 BANK1     22    12     10
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _MiApp_TransceiverPowerState                          2     2      0    3365
                                             20 BANK1      1     1      0
                   _MiMAC_PowerState
 ---------------------------------------------------------------------------------
 (3) _MiMAC_PowerState                                     2     2      0    3334
                                             18 BANK1      2     2      0
                           _DELAY_ms
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (1) _do_NETWORK_REGISTER                                  9     6      3   92051
                                            112 BANK1      3     0      3
                                             19 BANK3      6     6      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6    5790
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _adapt_power_level                                    6     5      1   88379
                                            113 BANK1      2     1      1
                                             26 BANK3      3     3      0
                     _MiMAC_SetPower
                      _do_POWER_TEST
 ---------------------------------------------------------------------------------
 (2) _do_POWER_TEST                                        8     8      0   86130
                                            112 BANK1      1     1      0
                                             19 BANK3      7     7      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetPower                                       3     3      0    1786
                                              6 BANK1      3     3      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (1) _RTCC_reset                                           0     0      0       0
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   6     6      0   10993
                                             22 BANK1      6     6      0
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           4     1      3    5490
                                             18 BANK1      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (4) _DELAY_ms                                             6     4      2    1449
                                             12 BANK1      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1136
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_EstablishConnection                           20    19      1  165678
                                            113 BANK1      1     0      1
                                             19 BANK3     19    19      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
             _MiApp_SearchConnection
                   _MiApp_SetChannel
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                         _OpenSocket
               _SearchForLongAddress
                      _SendMACPacket
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _OpenSocket                                           1     1      0   53461
                                            112 BANK1      1     1      0
               _MiApp_UnicastAddress
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastAddress                                31    27      4   52962
                                            100 BANK1     12     8      4
                                              0 BANK3     19    19      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiMAC_SendPacket
                       _MiWi_TickGet
               _SearchForLongAddress
 ---------------------------------------------------------------------------------
 (1) _MiApp_SearchConnection                              28    24      4   55098
                                            100 BANK1     13     9      4
                                              0 BANK3     15    15      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiApp_SetChannel
                       _MiWi_TickGet
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (2) _SendMACPacket                                        4     1      3   17549
                                             57 BANK1      4     1      3
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0    3738
                                             10 BANK1      1     1      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3676
                                              7 BANK1      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0   32807
                          _MiWiTasks
 ---------------------------------------------------------------------------------
 (5) _MiWiTasks                                           29    29      0   32807
                                             71 BANK1     29    29      0
              _AddNodeToNetworkTable
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                   _MiMAC_SendPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
               _SearchForLongAddress
              _SearchForShortAddress
 ---------------------------------------------------------------------------------
 (6) _MiMAC_SetAltAddress                                  4     0      4    1456
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (4) _MiMAC_SendPacket                                    10     4      6   17040
                                             47 BANK1     10     4      6
                            _CCM_Enc
                           _TxPacket
 ---------------------------------------------------------------------------------
 (5) _TxPacket                                            24    23      1    4859
                                             10 BANK1     24    23      1
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (6) _WriteFIFO                                            3     3      0     133
                                              2 BANK1      3     3      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (4) _SetRFMode                                            1     1      0    1755
                                              6 BANK1      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (5) _RegisterSet                                          4     2      2    1724
                                              2 BANK1      4     2      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _RegisterRead                                         4     4      0     235
                                              2 BANK1      4     4      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _SPIGet                                               0     0      0      34
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _SPIPut                                               2     2      0      34
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (5) _CCM_Enc                                             11     5      6    7941
                                             36 BANK1     11     5      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                20    20      0   10181
                                             51 BANK1     20    20      0
                            _CCM_Dec
                       _MiWi_TickGet
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (7) _isSameAddress                                        7     3      4     400
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (4) _MiWi_TickGet                                        10     6      4     400
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (7) _CCM_Dec                                             15     9      6    7941
                                             36 BANK1     15     9      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (6) _CTR                                                 13     6      7    3397
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (6) _CBC_MAC                                             13     6      7    3397
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (7) _encode                                              23    19      4    1094
                                              0 BANK1     23    19      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     861
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (6) _AddNodeToNetworkTable                                4     4      0    1034
                                              6 BANK1      4     4      0
               _SearchForLongAddress
              _SearchForShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (7) _findNextNetworkEntry                                 1     1      0     130
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (6) _SearchForShortAddress                                3     3      0     192
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SearchForLongAddress                                 6     6      0     322
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ConnectionMode                                 2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _SYS_InterruptLow                                   17    17      0    1201
                                             20 COMRAM    17    17      0
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (13) i1___ftadd                                          12     6      6    1201
                                              8 COMRAM    12     6      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (14) i1___ftpack                                          8     3      5     309
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _SYS_InterruptHigh                                  14    14      0    4516
                                             53 BANK0     14    14      0
               _MIWIInterruptHandler
 ---------------------------------------------------------------------------------
 (16) _MIWIInterruptHandler                               19    19      0    4516
                                             34 BANK0     19    19      0
                     i2_MiWi_TickGet
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (17) i2_TxPacket                                         24    23      1    1913
                                             10 BANK0     24    23      1
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (18) i2_WriteFIFO                                         3     3      0     133
                                              2 BANK0      3     3      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (18) i2_SetRFMode                                         1     1      0     405
                                              6 BANK0      1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (19) i2_RegisterSet                                       4     2      2     374
                                              2 BANK0      4     2      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (18) i2_RegisterRead                                      4     4      0     235
                                              2 BANK0      4     4      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (19) i2_SPIGet                                            0     0      0      34
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (19) i2_SPIPut                                            2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (18) i2_MiWi_TickGet                                     10     6      4     316
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MiApp_ConnectionMode
   _MiApp_DiscardMessage
     _MiMAC_DiscardPacket
   _MiApp_EstablishConnection
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_SearchConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
       _MiWi_TickGet
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _OpenSocket
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _MiWi_TickGet
     _SearchForLongAddress
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
     _findNextNetworkEntry
   _MiApp_MessageAvailable
     _MiWiTasks
       _AddNodeToNetworkTable
         _SearchForLongAddress
         _SearchForShortAddress
         _findNextNetworkEntry
       _MiMAC_DiscardPacket
       _MiMAC_ReceivedPacket
         _CCM_Dec
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _MiWi_TickGet
         _isSameAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiMAC_SetAltAddress
       _MiWi_TickGet
       _SearchForLongAddress
       _SearchForShortAddress
   _MiApp_ProtocolInit
     _InitSymbolTimer
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_Init
       _DELAY_ms
         ___lmul
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_SearchConnection
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiWi_TickGet
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
   _MiApp_TransceiverPowerState
     _MiMAC_PowerState
       _DELAY_ms
         ___lmul
       _SetRFMode
         _RegisterSet
           _SPIPut
   _MiMAC_SetPower
     _RegisterSet
       _SPIPut
   _MiWiTasks
     _AddNodeToNetworkTable
       _SearchForLongAddress
       _SearchForShortAddress
       _findNextNetworkEntry
     _MiMAC_DiscardPacket
     _MiMAC_ReceivedPacket
       _CCM_Dec
         _CBC_MAC
           ___awdiv
           _encode
         _CTR
           ___awdiv
           _encode
       _MiWi_TickGet
       _isSameAddress
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
           _encode
         _CTR
           ___awdiv
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _SearchForLongAddress
     _SearchForShortAddress
   _RTCC_reset
     _RtccWrOn
   _SYSTEM_Initialize
     _RtccWrOn
   _adapt_power_level
     _MiMAC_SetPower
       _RegisterSet
         _SPIPut
     _do_POWER_TEST
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
   _do_NETWORK_REGISTER
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_UnicastAddress
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
             _encode
           _CTR
             ___awdiv
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiWi_TickGet
       _SearchForLongAddress
     _memcpy
   _process_update_answer
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _SearchForLongAddress
         _SearchForShortAddress
     _MiApp_TransceiverPowerState
       _MiMAC_PowerState
         _DELAY_ms
           ___lmul
         _SetRFMode
           _RegisterSet
             _SPIPut
     _decode_variable
       _memcpy
     _send_writables_update
       _dBm_to_mW_ufixed16
       _do_UPDATE
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiApp_UnicastAddress
           _MiApp_DiscardMessage
             _MiMAC_DiscardPacket
           _MiApp_MessageAvailable
             _MiWiTasks
               _AddNodeToNetworkTable
                 _SearchForLongAddress
                 _SearchForShortAddress
                 _findNextNetworkEntry
               _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                 _CCM_Dec
                   _CBC_MAC
                     ___awdiv
                     _encode
                   _CTR
                     ___awdiv
                     _encode
                 _MiWi_TickGet
                 _isSameAddress
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                     _encode
                   _CTR
                     ___awdiv
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
               _MiMAC_SetAltAddress
               _MiWi_TickGet
               _SearchForLongAddress
               _SearchForShortAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiWi_TickGet
           _SearchForLongAddress
         _memcpy
       _encode_ufixed16_variable
       _encode_uint8_variable
       _memcpy
     _timer_reset
     _update_variable
       _MiMAC_SetPower
         _RegisterSet
           _SPIPut
       _RtccWrOn
       _labelcmp
       _mW_ufixed16_to_dBm
     _wait_for_1_sec
   _read_sensors
     _OpenI2C1
     _ReadI2C1
     _WriteI2C1
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _security_force_key_update
   _send_initial_update
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
       ___lmul (ARG)
     ___lmul
     _dBm_to_mW_ufixed16
     _do_UPDATE
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _memcpy
     _encode_ufixed16_variable
     _encode_uint8_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _frexp
     _memcpy
   _send_periodical_update
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
                   ___lmul (ARG)
                 ___lmul (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lltoft (ARG)
                 ___ftpack
                 ___lmul (ARG)
               ___lmul (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
       ___lmul (ARG)
     ___lmul
     _do_UPDATE
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _MiWiTasks
           _AddNodeToNetworkTable
             _SearchForLongAddress
             _SearchForShortAddress
             _findNextNetworkEntry
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _CCM_Dec
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _MiWi_TickGet
             _isSameAddress
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                 _encode
               _CTR
                 ___awdiv
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _MiMAC_SetAltAddress
           _MiWi_TickGet
           _SearchForLongAddress
           _SearchForShortAddress
       _MiApp_UnicastAddress
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _MiWiTasks
             _AddNodeToNetworkTable
               _SearchForLongAddress
               _SearchForShortAddress
               _findNextNetworkEntry
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _CCM_Dec
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _MiWi_TickGet
               _isSameAddress
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                   _encode
                 _CTR
                   ___awdiv
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _MiMAC_SetAltAddress
             _MiWi_TickGet
             _SearchForLongAddress
             _SearchForShortAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
               _encode
             _CTR
               ___awdiv
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiWi_TickGet
         _SearchForLongAddress
       _memcpy
     _encode_ufixed16_variable
     _encode_uint8_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _frexp
     _memcpy
   _sleep_and_reset
     _MiApp_TransceiverPowerState
       _MiMAC_PowerState
         _DELAY_ms
           ___lmul
         _SetRFMode
           _RegisterSet
             _SPIPut
     _timer_reset
   _timer_reset
   _wait_for_1_sec

 _SYS_InterruptLow (ROOT)
   i1___ftadd
     i1___ftpack

 _SYS_InterruptHigh (ROOT)
   _MIWIInterruptHandler
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_SPIGet
       i2_SPIPut
     i2_TxPacket
       i2_MiWi_TickGet
       i2_RegisterRead
         i2_SPIGet
           i2_SPIPut
         i2_SPIPut
       i2_RegisterSet
         i2_SPIPut
       i2_SetRFMode
         i2_RegisterSet
           i2_SPIPut
       i2_WriteFIFO
         i2_SPIPut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      A       A      14        3.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100     2B      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     73     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      70       5       70.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      48       1       76.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C1       6        0.0%
DATA                 0      0     3C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Dec 29 19:36:41 2016

                              i2_TxPacket 3DD8                              ___altoft@exp 01C5  
                              i1___ftpack 60F2                      ?_MiMAC_DiscardPacket 0001  
                            _UPTIME_LABEL FFFB                            ?_isSameAddress 018A  
                           ___altoft@sign 01C6                                        l31 6F68  
                                      l18 622C                                        l19 6218  
                                      l29 6F5E                                        l62 6878  
        MiApp_SearchConnection@ChannelMap 01EE                              ___awdiv@sign 018F  
                                      bsr 000FE0                   send_initial_update@tmp2 03F0  
                     MiApp_ProtocolInit@i 01A5                         _ActiveScanResults 0300  
                            __CFG_CP0$OFF 000000                              ___ftadd@exp1 019D  
                            ___ftadd@exp2 019C                                _MiMAC_Init 4C98  
                            ___ftadd@sign 019B                                       l323 3652  
                                     l324 36AE                                       l237 6C10  
                                     l318 35E4                                       l352 225A  
                                     l601 0AFE                                       l442 5424  
                                     l258 4146                                       l259 418E  
                                     l721 535A                                       l641 067C  
                                     l634 05EC                                       l627 0538  
                                     l724 5382                                       l716 52A8  
                                     l468 4FF2                                       l628 053C  
                                     l477 4900                            ?i2_RegisterSet 0062  
                                     l654 09C6                                       l672 0BF8  
                                     l657 0990                                       l834 2526  
                                     l755 6E4C                                       l667 0A9A  
                                     l829 24CA                                       l839 26EA  
                                     l848 287E                                       l784 298C  
                            i1___ftadd@f1 0009                              i1___ftadd@f2 000C  
                                     _CTR 53BC                                       _MTP 012A  
                                     _key 00C0                           __end_of_CBC_MAC 5810  
             __end_of_MiMAC_SetAltAddress 7006                                       prod 000FF3  
                                     wreg 000FE8                           __end_of_CCM_Dec 4A08  
      encode_ufixed16_variable@m_writable 0198                           __end_of_CCM_Enc 504C  
          __end_of_UPDATE_FREQUENCY_LABEL FFFB                               i2_WriteFIFO 6CE0  
       __end_of_MiApp_EstablishConnection 2D74                __end_of_mW_ufixed16_to_dBm 5D48  
                                    ?_CTR 01A1                                      CTR@i 01AC  
                                    CTR@j 01AD                              ___ftdiv@cntr 01A8  
                            ___ftdiv@sign 01AD                                      l1140 2D8C  
                                    l1109 3C14                                      l1143 2D9C  
                                    l1135 6EA2                                      l1128 3DBA  
                                    l1080 3172                                      l1401 6A4E  
                                    l1217 6F9A                                      l1209 5AB2  
                                    l1153 2EF6                                      l1234 6E0C  
                                    l1146 2E22                                      l1171 2F86  
                                    l1180 2FD8                                      l1165 2F62  
                                    l1335 629A                                      l1183 2FE8  
                                    l1345 5F16                                      l1097 32E0  
                                    l1186 2FEE                                      l1284 60EC  
                                    l1460 6F4A                                      l1461 6F4C  
                                    l1485 69B6                                      l1494 69D6  
                                    l1735 56D2                                      l1807 3500  
                                    l1840 6E30                                      l1818 4B1E  
                                    l1746 5900                                      l1783 339E  
                                    l1787 33D8                                      l1789 3400  
                                    l1798 34D6                           ?i2_RegisterRead 0001  
                                    i2l31 6F84                                      i2l29 6F7A  
                                    i2l62 68EC                           _sleep_and_reset 6E94  
                   _BATTERY_VOLTAGE_LABEL FFDF                MiMAC_SetChannel@offsetFreq 0191  
                                    _main 307A                              ___ftpack@arg 018A  
                            ___ftpack@exp 018D                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                                    btemp 0049                                      pclat 000FFA  
                         _update_variable 5A02                MiApp_UnicastAddress@handle 03E6  
                   MiApp_ProtocolInit@MIP 01A2                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00F6  
                           __CFG_IESO$OFF 000000               _send_periodical_update$5145 03F3  
             _send_periodical_update$5146 03F6               _send_periodical_update$5147 03F9  
             _send_periodical_update$5148 03FC                          __end_of_DELAY_ms 624A  
               do_NETWORK_REGISTER@F10228 013E                             _m_light_level 0149  
                          _InitConfigRegs FEF3                              ___ftmul@cntr 01DF  
                            ___param_bank 000000                              ___ftmul@sign 01E0  
                   ??_MiMAC_DiscardPacket 018A                                     ??_CTR 01A8  
           adapt_power_level@minimal_rssi 01FB                   decode_variable@p_buffer 0194  
                        CCM_Enc@headerLen 01B0                              ___fttol@exp1 01BC  
                            ___fttol@lval 01B8              __end_of_MiApp_DiscardMessage 6FF6  
              MiMAC_PowerState@PowerState 019C                                     l12001 0436  
                                   l12003 043C                                     l11125 3832  
                                   l11205 688C                                     l12013 048A  
                                   l11151 5E24                                     l11311 572A  
                                   l11303 54CA                                     l12111 0868  
                                   l12007 0446                                     l11129 383C  
                                   l11321 5754                                     l11305 54CE  
                                   l12113 086E                                     l12033 0512  
                                   l12201 0AE4                                     l13001 3578  
                                   l11163 5E58                                     l11139 39E4  
                                   l11323 575C                                     l11315 5734  
                                   l12123 08D4                                     l12107 0838  
                                   l12019 04A8                                     l13011 64E0  
                                   l11165 5E64                                     l11157 5E3A  
                                   l11325 5762                                     l11261 63EC  
                                   l11253 63C0                                     l11245 6394  
                                   l11413 42C2                                     l12213 0B2A  
                                   l12141 094C                                     l12125 08DA  
                                   l12117 0878                                     l12205 0B06  
                                   l11183 5EBC                                     l11175 5E9A  
                                   l11167 5E6A                                     l11343 5802  
                                   l11191 6850                                     l11351 415C  
                                   l11415 42C6                                     l12071 0604  
                                   l12039 0522                                     l12047 0542  
                                   l12055 058E                                     l12311 24DA  
                                   l11329 576C                                     l11273 53E2  
                                   l11505 49FE                                     l11441 4FB4  
                                   l11425 4F4A                                     l11257 63D6  
                                   l11249 63AA                                     l11409 42AE  
                                   l11601 35AA                                     l12209 0B20  
                                   l12161 09F4                                     l12137 0942  
                                   l12049 055A                                     l12321 2516  
                                   l12305 24C0                                     l13201 4CF0  
                                   l13025 5BFA                                     l11515 6554  
                                   l11179 5EA8                                     l11339 57EA  
                                   l11275 53E8                                     l11451 500E  
                                   l11435 4FA4                                     l11267 6402  
                                   l11371 41B6                                     l11347 4140  
                                   l12219 0BF2                                     l12163 09FA  
                                   l12147 097E                                     l12315 24E4  
                                   l12243 67D8                                     l13211 4D16  
                                   l13035 5C7E                                     l11533 65D6  
                                   l11293 5450                                     l11509 4A04  
                                   l11701 20FE                                     l11445 4FCC  
                                   l11437 4FAA                                     l11429 4F54  
                                   l11613 3604                                     l12181 0A6C  
                                   l12173 0A36                                     l12077 0616  
                                   l12413 2704                                     l13213 4D2E  
                                   l13205 4CFA                                     l13045 4B8E  
                                   l13029 5C3A                                     l11543 5AFE  
                                   l11519 655E                                     l11279 53F2  
                                   l11455 6B78                                     l11383 41E8  
                                   l11375 41D2                                     l11623 3660  
                                   l12167 0A04                                     l12423 271A  
                                   l12247 67FE                                     l13223 4D66  
                                   l12511 6A72                                     l13063 4C20  
                                   l11561 5BAA                                     l11553 5B4E  
                                   l11529 65D0                                     l11289 5446  
                                   l11465 6BBA                                     l11713 211A  
                                   l11633 36BA                                     l12185 0A76  
                                   l13305 3A2C                                     l12505 293A  
                                   l12433 27A6                                     l12361 25A0  
                                   l13225 4D6C                                     l13217 4D38  
                                   l13081 4C86                                     l13073 4C50  
                                   l11539 5AF4                                     l11483 48DA  
                                   l11475 48B8                                     l11459 6B82  
                                   l11731 21EE                                     l11723 218C  
                                   l11811 249C                                     l11707 210A  
                                   l11387 41F4                                     l11619 3638  
                                   l13315 3A52                                     l13235 4DA4  
                                   l12611 6786                                     l12603 6762  
                                   l13403 59D0                                     l12531 5666  
                                   l12523 5614                                     l13075 4C60  
                                   l13067 4C34                                     l11549 5B44  
                                   l11565 5BB0                                     l11469 6BC0  
                                   l11709 2110                                     l11661 375E  
                                   l11645 36F6                                     l11637 36C4  
                                   l11629 3694                                     l12197 0ACC  
                                   l12277 5F90                                     l13309 3A36  
                                   l12437 27AA                                     l14301 2A12  
                                   l13229 4D76                                     l14213 51E0  
                                   l14205 51BA                                     l12517 6AAA  
                                   l12621 67AC                                     l13421 5A44  
                                   l13077 4C6A                                     l11575 6D28  
                                   l11831 52C6                                     l11495 4986  
                                   l11479 48C2                                     l11743 2266  
                                   l11807 2496                                     l11399 4224  
                                   l11655 372A                                     l11903 01B4  
                                   l13319 3A64                                     l13271 5DAA  
                                   l14223 520A                                     l12615 6790  
                                   l12711 62A8                                     l12551 56F8  
                                   l12535 5686                                     l12527 5628  
                                   l11569 5BB6                                     l11585 6D58  
                                   l11489 491C                                     l11761 22D4  
                                   l11753 22C0                                     l11729 21E2  
                                   l11921 023E                                     l11905 01BA  
                                   l12641 66FA                                     l13337 3B40  
                                   l12369 25EA                                     l13193 4CCE  
                                   l14217 51EA                                     l13409 59E8  
                                   l12801 5052                                     l12545 56DC  
                                   l12537 56B6                                     l12529 5636  
                                   l15201 3176                                     l11579 6D32  
                                   l11843 5302                                     l11851 53B6  
                                   l11827 52B6                                     l11499 4990  
                                   l11771 234A                                     l11747 2270  
                                   l11683 1FEC                                     l11675 37D2  
                                   l11667 3796                                     l11931 025A  
                                   l13347 3BF0                                     l13283 5DE6  
                                   l13275 5DB4                                     l14323 2AE6  
                                   l14307 2A6A                                     l13611 46A8  
                                   l12627 67B0                                     l12811 50D4  
                                   l12803 506C                                     l13363 6F9E  
                                   l13531 69C2                                     l12539 56C4  
                                   l11589 6D5E                                     l11781 2392  
                                   l11765 22DE                                     l11757 22C6  
                                   l11669 379E                                     l11677 37DE  
                                   l11925 024A                                     l11917 0238  
                                   l11909 01C4                                     l13349 3BF4  
                                   l12485 2898                                     l14333 2B72  
                                   l14317 2A8E                                     l13189 4CC4  
                                   l12629 67C2                                     l13293 6D7A  
                                   l12813 50EE                                     l12805 5086  
                                   l12821 513C                                     l15205 3186  
                                   l11839 52F8                                     l11783 23B4  
                                   l11687 1FF6                                     l11927 0250  
                                   l11951 032E                                     l12495 28AE  
                                   l14327 2AF0                                     l14263 2956  
                                   l13199 4CEA                                     l12591 6DAC  
                                   l13631 471E                                     l14431 43A2  
                                   l13391 5974                                     l12815 5108  
                                   l12807 50A0                                     l12743 44D0  
                                   l13367 6DE2                                     l13535 69DA  
                                   l13703 47C8                                     l11793 243A  
                                   l11697 20F8                                     l14273 2974  
                                   l13641 474E                                     l13625 46FE  
                                   l13609 4698                                     l13289 6D68  
                                   l13385 595C                                     l12817 5122  
                                   l12809 50BA                                     l12761 455C  
                                   l12737 44B2                                     l12673 5F24  
                                   l12905 5D2C                                     l13465 5AE0  
                                   l13721 4834                                     l14521 2ED6  
                                   l15217 320A                                     l15209 319A  
                                   l11795 2442                                     l11939 0280  
                                   l11883 00AA                                     l14267 2962  
                                   l14195 518C                                     l13627 4704  
                                   l13635 4726                                     l13299 6D8C  
                                   l12739 44B8                                     l12915 5D44  
                                   l13651 4A42                                     l13731 4872  
                                   l14531 2F42                                     l14523 2EFA  
                                   l13563 5860                                     l15251 32A8  
                                   l15219 320E                                     l11949 0322  
                                   l11877 009A                                     l14357 2CB6  
                                   l14293 29E0                                     l14445 43E8  
                                   l14453 443C                                     l14429 4392  
                                   l12597 6756                                     l12781 45B2  
                                   l12757 4542                                     l13485 4E7C  
                                   l12845 5C9E                                     l14701 3C1A  
                                   l13717 4816                                     l14533 2F66  
                                   l14517 2EB8                                     l15261 32C2  
                                   l15229 323E                                     l15173 30DE  
                                   l11887 00B6                                     l14375 2D70  
                                   l14279 2978                                     l14199 5196  
                                   l13639 4740                                     l13591 4644  
                                   l12775 45A2                                     l12855 5CB6  
                                   l13727 4854                                     l14535 2F8A  
                                   l14527 2F1E                                     l12927 631C  
                                   l12943 33AC                                     l13567 587E  
                                   l13559 584C                                     l14623 0FAA  
                                   l15239 3272                                     l15183 3126  
                                   l11897 0186                                     l14369 2D4A  
                                   l14297 2A08                                     l14289 2996  
                                   l13593 4652                                     l14457 4456  
                                   l14449 4434                                     l12785 45CC  
                                   l12777 45AA                                     l12793 45E0  
                                   l12865 5CCE                                     l14705 3C24  
                                   l13657 4A7C                                     l13745 6660  
                                   l12929 632C                                     l15273 32E4  
                                   l15265 32CE                                     l15177 30F4  
                                   l11995 040A                                     l14467 6A06  
                                   l14459 4464                                     l12787 45DA  
                                   l13499 4EF4                                     l12875 5CE6  
                                   l14715 3C68                                     l14539 2FAE  
                                   l13747 6670                                     l12971 3466  
                                   l12955 33F6                                     l15259 32BE  
                                   l15195 3164                                     l15187 3132  
                                   l13597 465C                                     l12885 5CFC  
                                   l14741 3CF8                                     l14725 3C84  
                                   l13677 4ADC                                     l12973 3474  
                                   l12965 3438                                     l12949 33E6  
                                   l14397 6EA6                                     l15293 3320  
                                   l15285 330A                                     l13855 5534  
                                   l12895 5D14                                     l14735 3CC8  
                                   l12991 352A                                     l12983 34BC  
                                   l12975 3482                                     l14671 1216  
                                   l15295 3324                                     l13697 478E  
                                   l12985 34CA                                     l12977 348E  
                                   l15297 332E                                     l14763 3DA0  
                                   l14771 3DB6                                     l14749 3D7C  
                                   l14765 3DA4                                     l14773 3DC0  
                                   l14775 3DD2                                     l13975 6BCE  
                                   l14839 1750                                     l13979 6BE4  
                                   ?_main 0001                           __end_of___awdiv 5EC6  
                         __end_of___ftadd 359E             MiApp_EstablishConnection@Mode 01FB  
                         __end_of___ftdiv 4B54                           __end_of___ftneg 6E3E  
                         __end_of___ftmul 48B2                           ___awdiv@divisor 018C  
                                   u13200 35B8                                     _T1CON 000FCD  
                                   u14001 0586                           __end_of___fttol 4C98  
                                   u12505 391A                                     u13218 35BC  
                                   u12515 3974                                     u13350 20E2  
                                   u14320 0C74                                     u12465 6C48  
                                   u12466 6C4A                                     u14330 6FDE  
                                   u16010 69E6                                     u12635 6B06  
                                   u12475 6C54                                     u12636 6B08  
                                   u12476 6C56                                     u12645 6B12  
                                   u15141 334C                                     u12646 6B14  
                                   u12495 3892                                     u12655 6CD0  
                                   u15151 336A                                     u12656 6CD2  
                                   u14280 0BD4                                     u17000 29B8  
                                   u12665 6CDC                                     u13705 0084  
                                   u14505 269A                                     u15401 4B6A  
                                   u12666 6CDE                                     u14610 2932  
                                   u14506 269E                                     u16018 69EA  
                                   u13707 0088                                     u16211 4A58  
                                   u13660 0026                                     u14620 6A9C  
                                   u15420 4BB4                                     u17005 29AC  
                                   u14550 279E                                     u13751 0184  
                                   u13735 0168                                     u13680 005E  
                                   u15360 6512                                     u16080 5870  
                                   u13737 016C                                     u16241 476A  
                                   u15425 4BAA                                     u13675 0046  
                                   u14475 256E                                     u14627 6A92  
                                   u13668 002A                                     u15700 3A8A  
                                   u14476 2572                                     u13677 004A  
                                   u14565 282E                                     u16261 47A4  
                                   u14566 2832                                     u17310 2F2A  
                                   u16191 4A1E                                     u17160 4400  
                                   u15368 6516                                     u13881 0342  
                                   u15705 3A7E                                     u13698 0062  
                                   u17090 2D46                                     u17170 4402  
                                   u17410 2FBA                                     u17330 2F4E  
                                   u13891 0358                                     u14780 6708  
                                   u17260 2EE2                                     u15805 598E  
                                   u15901 4E54                                     u17318 2F2E  
                                   u15831 59F8                                     u17511 101A  
                                   u17360 2F72                                     u15921 4ECC  
                                   u17521 115E                                     u17418 2FBE  
                                   u17338 2F52                                     u17290 2F06  
                                   u17531 11C8                                     u17268 2EE6  
                                   u18317 2D80                                     u17701 154E  
                                   u14798 670C                                     u17390 2F96  
                                   u18327 2EC0                                     u17551 13DA  
                                   u17471 0DA8                                     u17711 15B8  
                                   u17368 2F76                                     u17641 3CDA  
                                   u18337 3C2C                                     u17465 3022  
                                   u17481 0E12                                     u17721 1702  
                                   u17298 2F0A                                     u18347 6DFA  
                                   u17491 0F5C                                     u16925 522A  
                                   u18357 4574                                     u17741 187E  
                                   u16926 522E                                     u17398 2F9A  
                                   u18367 43BA                                     u17751 1A58  
                                   u18377 6A16                                     u18387 46C0  
                                   i2l401 1C5A                                     i2l403 1C06  
                                   i2l258 3DEA                                     i2l259 3E30  
                                   i2l392 1B2E                                     i2l398 1B8A  
                         ___awdiv@counter 018E                                     _PLLEN 007CDE  
                __size_of_InitSymbolTimer 0018                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _RPOR4 000EC4  
                                   _RPOR5 000EC5                            i1___ftadd@exp1 0014  
                          i1___ftadd@exp2 0013                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _UPUEN 0079CC                            i1___ftadd@sign 0012  
                        __end_ofi2_SPIGet 7000                       ___lmul@multiplicand 018E  
                              _MiWiSeqNum 00B6                              ___lltoft@exp 019E  
                        __end_ofi2_SPIPut 6F8C                            _myShortAddress 0185  
                         _decode_variable 590E                            __CFG_FCMEN$OFF 000000  
           __size_of_MIWIInterruptHandler 0548                           __end_of_myMODEL FFF5  
           __size_of_MiApp_ConnectionMode 002C                                     _myUID FFF6  
                                   _floor 5810                                     _m_var 0179  
                                   _frexp 64BE             __size_of_MiApp_UnicastAddress 049E  
                                   _errno 0046                             ___ftpack@sign 018E  
                                   main@j 0408                                     main@x 0406  
                             ?_RTCC_reset 0001                                     tablat 000FF5  
                __end_of_SYS_InterruptLow 00F6                 do_NETWORK_REGISTER@result 03EC  
                                   plusw0 000FEB                                     plusw2 000FDB  
                                   status 000FD8         __size_of_encode_ufixed16_variable 00BA  
                      __size_ofi1___ftadd 01AC       __end_of_MiApp_TransceiverPowerState 6D9E  
             _MiApp_TransceiverPowerState 6D62                 ?_encode_ufixed16_variable 018A  
                  __end_of_InitConfigRegs FF33                   MiApp_SearchConnection@i 03E2  
                          i1___ftpack@arg 0001                            i1___ftpack@exp 0004  
               __size_of_MiMAC_SetChannel 00BA                           __initialization 65DA  
                         ??_isSameAddress 018E                               ?i2_TxPacket 006A  
                   _AddNodeToNetworkTable 5298                 __size_of_MiMAC_SendPacket 0254  
                            __end_of_main 3336                          __end_of_ReadI2C1 6F54  
                 __size_of_MiMAC_SetPower 003A                               ?i1___ftpack 0001  
         do_NETWORK_REGISTER@shortaddress 03E8                    __size_of_SendMACPacket 007C  
                          TxPacket@status 01A8                    read_sensors@adc_result 01E6  
                         _FAILEDMSG_LABEL FFE3                             main@best_RSSI 0405  
                               ??_CBC_MAC 01A8                          __end_of_ScanTime FF6F  
                         ??i2_RegisterSet 0064                          __end_of_OpenI2C1 6EFC  
                       _LIGHT_LEVEL_LABEL FFE7                                 ??_CCM_Dec 01B4  
                               ??_CCM_Enc 01B4                             ??_RegisterSet 018E  
                                  ??_main 0400                             ___fttol@sign1 01B7  
                             ?_MiMAC_Init 019C                            _myMUTA_version FFF2  
                           __activetblptr 000003         MiApp_SearchConnection@channelMask 03D4  
                ??_MiApp_SearchConnection 01F2                      __end_of_MiWi_TickGet 68B0  
                                  CTR@len 01A3                                    CTR@key 01A4  
                           _IRQ1_Received 00B3                      _SearchForLongAddress 5AEE  
                 MiApp_SetChannel@channel 0194                          __end_of_TxPacket 42DE  
                        __end_of_RtccWrOn 6FD0                   __end_of_sleep_and_reset 6EB8  
      __size_of_security_force_key_update 004E         MiApp_ProtocolInit@bNetworkFreezer 01A1  
                    _MiMAC_ReceivedPacket 1FE6                        __size_of_MiWiTasks 0C7A  
             _myMUTA_version_absconstaddr 01FFF2                           i2SetRFMode@mode 0066  
                 ??_encode_uint8_variable 0196                                    ?_floor 01C7  
                                  ?_frexp 018A                          __end_of___altoft 638E  
                                  _EECON2 000FA7                   __end_of_update_variable 5AEE  
             __end_of_do_NETWORK_REGISTER 446A                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 018A  
                        __end_of___ftpack 5706                      _IncomingFrameCounter 0200  
                        __end_of___lltoft 66D4                                    i1l1226 00AC  
                                  i1l1227 00A8                                    i1l1229 00AE  
                                  _MACSeq 00B4                                    i1l1735 6180  
                                  i1l1807 40C2                                    i1l1783 3FCC  
                                  i1l1787 3FF6                                    i1l1798 40A6  
                          __CFG_WDTEN$OFF 000000                                    i1l9421 611A  
                                  i1l9431 6176                                    i1l9423 6138  
                                  i1l9415 6102                                    i1l9427 614E  
                                  i1l9419 6110                                    i1l9429 616C  
                              _OpenSocket 5D48                          __end_of___lwtoft 6E94  
                                  _RTCCAL 000F3E                                    _RTCCFG 000F3F  
                                  _PVALUE FF6F                                    _RPINR1 000EE1  
                                  _SVALUE FF8F                                    _SPIGet 6FE2  
                                  _SPIPut 6F54                   i2RegisterSet@IRQ0select 0065  
               __size_of_MiMAC_PowerState 0076                  ??_send_periodical_update 01FB  
                 i2RegisterSet@IRQ1select 0064                  __end_of_TX_POWER_1_DB_MW FFB6  
                __end_of_TX_POWER_4_DB_MW FFC3                                TxPacket@t1 019D  
                              TxPacket@t2 01A1                         _StaticSecurityKey FFEC  
                      __size_of_SetRFMode 0098                  __end_of_TX_POWER_7_DB_MW FFF7  
                          __CFG_XINST$OFF 000000                        _myUID_absconstaddr 01FFF6  
                                  _TxData 0146                          __end_of_labelcmp 60F2  
                           _m_temperature 0130                                    ___ftge 5BBA  
                                  ___lmul 67C6                                 ??___awdiv 018E  
                    MiWiTasks@sourcePANID 01E9                                 ??___ftadd 0198  
                                  _hasAck 00BC                                 ??___ftdiv 01A5  
                               ??___ftneg 01D2                                 ??___ftmul 01D8  
                               ??___fttol 01B2                 __size_of_MiApp_SetChannel 001E  
               __end_of_LIGHT_LEVEL_LABEL FFEB                                    _encode 37F2  
                __end_of_TX_POWER_INVALID FFC9                             ?_read_sensors 0001  
                  __end_of_myMUTA_version FFF3                  adapt_power_level@m_power 03F0  
                                  _memcpy 6A60                                    clear_0 65E0  
                                  clear_1 65EE                                    clear_2 6600  
                                  clear_3 660C                                    clear_4 6618  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0190  
                            _CCM_Dec$2093 01BA                   __end_of_decode_variable 5A02  
                     __size_of_RTCC_reset 001E                __p_StaticSecurityKey_const FFEC  
          __size_of_SearchForShortAddress 008C             __end_of_SearchForShortAddress 65DA  
                      decode_variable@var 01A0                                    floor@i 01CA  
                                  floor@x 01C7                     ___ftmul@f3_as_product 01DC  
                       __end_ofi1___ftadd 4134                     ?_SearchForLongAddress 0001  
                 __p_myMUTA_version_const FFF2                __end_of_dBm_to_mW_ufixed16 5172  
                            __pdataCOMRAM 0048                              _CCM_Enc$2085 01B6  
                  process_update_answer@i 03F9                            _openSocketInfo 0100  
                            __mediumconst FEF2                     ?_MiMAC_ReceivedPacket 0001  
                  do_POWER_TEST@power_lvl 03E8                                    tblptrh 000FF7  
                                  tblptrl 000FF6                      _myMODEL_absconstaddr 01FFF4  
                                  tblptru 000FF8               ??_MiApp_EstablishConnection 03E7  
                               ?_DELAY_ms 0196                       __end_of_RegisterSet 6C58  
                   _process_update_answer 3C0E                              ?_timer_reset 0001  
                           ?_RegisterRead 0001         __end_of_security_force_key_update 6C12  
                     __size_ofi2_TxPacket 01B0                         _ReceivedBankIndex 0145  
                           _SendMACPacket 66D4                         ??_InitSymbolTimer 018A  
                            ?i2_SetRFMode 0001                       __size_ofi1___ftpack 00AE  
    MiApp_UnicastAddress@MiWiFrameControl 03E4                         _SYSTEM_Initialize 54DC  
                      __size_of_WriteI2C1 0068                      _MiApp_DiscardMessage 6FEC  
                              __accesstop 0060                        __size_of_WriteFIFO 0042  
                 __end_of__initialization 664E                                ___altoft@c 01BD  
                MiApp_SearchConnection@t1 03D8                  MiApp_SearchConnection@t2 03DC  
                              ___ftadd@f1 0192                                ___ftadd@f2 0195  
                              ___ftge@ff1 018A                                ___ftge@ff2 018D  
               __end_of_StaticSecurityKey FFF4                           i1___ftpack@sign 0005  
         MiMAC_ReceivedPacket@currentTick 01C5                        ?_SYSTEM_Initialize 0001  
                     __size_of_MiMAC_Init 0144                             ___rparam_used 000000  
                              ___ftdiv@f1 019F                                ___ftdiv@f2 01A2  
                              ___ftdiv@f3 01A9                  MIWIInterruptHandler@bAck 008F  
                       CCM_Enc@payloadLen 01B1                                ___ftneg@f1 01CF  
                  __size_of_do_POWER_TEST 0162                   __end_of_FAILEDMSG_LABEL FFE7  
                  ?_AddNodeToNetworkTable 0001                                ___ftmul@f1 01D2  
                              ___ftmul@f2 01D5            __size_of_send_writables_update 013C  
                      __size_of_do_UPDATE 0188              __end_of_findNextNetworkEntry 6D62  
           __end_of_send_writables_update 4F18                                ___fttol@f1 01AE  
                   _ActiveScanResultIndex 0142                            __pcstackCOMRAM 0001  
                       __end_of_MiWiTasks 0C7A                                 ?i2_SPIGet 0001  
                               ?i2_SPIPut 0001                              __pidataBANK1 7000  
                     ??_SYSTEM_Initialize 018A                                ___lltoft@c 0196  
                          ??_read_sensors 01E1                     i2RegisterRead@address 0065  
                           __end_of_myUID FFF8                             __end_of_floor 590E  
                           __end_of_frexp 654E          MiMAC_ReceivedPacket@FrameCounter 01C9  
                               CTR@nounce 01A6           MiApp_UnicastAddress@DestAddress 01EE  
                              ___lwtoft@c 0192                           TxPacket@rssival 01AB  
                             OpenSocket@i 01FA           __size_of_MiApp_SearchConnection 0202  
                         _ConnectionTable 0246                           __CFG_OSC$INTOSC 000000  
                        ??i2_RegisterRead 0062                         __end_of_SetRFMode 6426  
                            ?i2_WriteFIFO 0001                          ?_sleep_and_reset 0001  
                              ??_DELAY_ms 0198                            ??_RegisterRead 018C  
                          ?_SendMACPacket 01C3                                   ??_floor 01CA  
                                 ??_frexp 018F                 __end_of_SYSTEM_Initialize 55FA  
         MiApp_TransceiverPowerState@Mode 019E                 MiWiTasks@destShortAddress 01E4  
                        ?_update_variable 0001                     isSameAddress@Address1 018A  
                   isSameAddress@Address2 018C                                 ?_ReadI2C1 0001  
            __size_of_send_initial_update 07A6                                __pbssBANK0 00A3  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                     ?_MiApp_DiscardMessage 0001  
                             ?_OpenSocket 0001               __size_of_MiApp_ProtocolInit 0126  
                                 ?_SPIGet 0001          adapt_power_level@last_good_power 03EF  
                                 CTR@text 01A1                                 ?_OpenI2C1 018A  
                                 ?_SPIPut 0001                        RegisterSet@setting 018C  
                          isSameAddress@i 0190                             _m_uptime_days 0133  
                     i2RegisterRead@value 0062           __size_of_send_periodical_update 067E  
                       _m_failed_messages 011E                          _MiMAC_SetChannel 5F80  
                              CBC_MAC@MIC 01A6                 _MiApp_EstablishConnection 293E  
                MiMAC_SetAltAddress@PANID 018C                              CBC_MAC@block 01AB  
                      _mW_ufixed16_to_dBm 5C82                                CBC_MAC@len 01A3  
                              CBC_MAC@key 01A4                                 ?_TxPacket 0194  
                               ?_RtccWrOn 0001                          _MiMAC_SendPacket 359E  
                              ??i2_SPIGet 0062                               _UpF_updated 00BB  
                                 ?___ftge 018A                            _MiMAC_SetPower 6D9E  
                              ??i2_SPIPut 0060                                   ?___lmul 018A  
                            OpenI2C1@slew 018A                                   ?_encode 018A  
                   __size_of_MiWi_TickGet 0074                                 ?___altoft 01BD  
                                 ?_memcpy 018A                                   _CBC_MAC 5706  
                          ___lmul@product 0192                       ?_mW_ufixed16_to_dBm 018A  
                                 SPIPut@i 018A                                   SPIPut@v 018B  
                               ?___ftpack 018A                         __end_of_WriteI2C1 69FC  
                        ?_decode_variable 0194                                   _CCM_Dec 48B2  
                                 _CCM_Enc 4F18                                 ?___lltoft 0196  
                  ??_SearchForLongAddress 018A                         __end_of_WriteFIFO 6CE0  
                             _RegisterSet 6C12       MiApp_SearchConnection@backupChannel 03E1  
                               ?___lwtoft 0192                                   u1165_21 3F98  
                                 u1166_21 3FAC                                   i1l10511 3FDA  
                                 i1l10541 4060                                   i1l10533 4034  
                                 i1l10517 4004                                   i1l10551 4094  
                                 i1l10543 406A                                   i1l10553 409E  
                                 i1l10545 4072                                   i1l10539 4056  
                                 i1l10559 40DE                                   i1l10569 410E  
                                 i2l13103 6900                                   i2l14001 1AC6  
                                 i2l14013 1AEE                                   i2l14005 1AD0  
                                 i2l13151 6458                                   i2l13143 642C  
                                 i2l14105 1DAA                                   i2l14041 1B58  
                                 i2l14017 1AFC                    ??_MiMAC_ReceivedPacket 01BD  
                                 i2l13155 646E                                   i2l13147 6442  
                                 i2l14131 1E2C                                   i2l14115 1DE4  
                                 i2l14027 1B26                                   i2l13165 649A  
                                 i2l14125 1E1C                                   i2l14037 1B48  
                                 i2l13159 6484                                   i2l14143 1EDA  
                                 i2l14127 1E22                                   i2l14119 1DEE  
                                 i2l14071 1C0E                                   i2l13089 68C4  
                                 i2l14137 1EB8                                   i2l14081 1CA4  
                                 i2l14057 1BD0                                   i2l14049 1B84  
                                 i2l14161 1F9A                                   i2l14147 1EE0  
                                 i2l14091 1D4C                                   i2l14075 1C1E  
                                 i2l14163 1FA0                                   i2l14157 1F74  
                                 i2l14095 1D72                                   i2l14087 1D2E  
                                 i2l14159 1F8C                                   i2l14167 1FA4  
                                 i2l14177 1FCA                                   i2l14089 1D32  
                                 i2l14099 1D7C                                   i2l13813 3ED6  
                                 i2l13823 3F6C                                   i2l13809 3EC6  
                                 i2l13825 3F74                                   i2l13819 3F58  
                                 i2l13763 3E00                                   i2l13781 3E58  
                                 i2l13759 3DE4                                   i2l13793 3E8A  
                                 i2l13785 3E74                                   i2l13797 3E96  
                           _do_POWER_TEST 45F2                           MiWiTasks@cIndex 01DD  
                  ?_process_update_answer 0001                     i2WriteFIFO@IRQ0select 0064  
                   i2WriteFIFO@IRQ1select 0063                         __end_of_do_UPDATE 45F2  
                                 _RPINR21 000EFC                                   _RPINR22 000EFD  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                                 _SSP2BUF 000F75          MIWIInterruptHandler@ackInfoIndex 0091  
                               ?_labelcmp 018A                                do_UPDATE@i 03ED  
                                 _RF_Mode 00B8                                   _AckInfo 0228  
                                 _RSSIVal 00B9                              ??_RTCC_reset 018A  
                              ??_ReadI2C1 018A              __size_of_MiMAC_SetAltAddress 0002  
                    ??_mW_ufixed16_to_dBm 018B               AddNodeToNetworkTable@handle 0193  
                       _adapt_power_level 69FC                         ?_SYS_InterruptLow 0001  
                         _timerExtension1 00BE                           _timerExtension2 00BF  
                             TxPacket@CCA 0194                                ??_OpenI2C1 018B  
                MiApp_ConnectionMode@Mode 018B                           __size_of_SPIGet 000A  
                        _MiMAC_PowerState 6750                           __size_of_SPIPut 001C  
             __end_of_MiMAC_DiscardPacket 6EDC                    _MiApp_SearchConnection 3A0C  
                      ?_adapt_power_level 01FB                        ??_SYS_InterruptLow 0015  
                              DELAY_ms@ms 0196                       _AcknowledgementAddr 0136  
                            _MiWi_TickGet 683C              __end_of_MIWIInterruptHandler 1FE6  
                  __end_of_MiMAC_SetPower 6DD8                                   __Hparam 0000  
                                 __Lparam 0000              __end_of_MiApp_ConnectionMode 6E6A  
                            ??i2_TxPacket 006B                                ??_TxPacket 0195  
                              ??_RtccWrOn 018A                                CCM_Dec@key 01B2  
            __end_of_MiApp_UnicastAddress 293E                       do_POWER_TEST@result 03E7  
                   adapt_power_level@rssi 03EE                            main@scanresult 0409  
                         __size_of___ftge 00C8                   __size_ofi2_MiWi_TickGet 0074  
                            ??i1___ftpack 0006                                   ___awdiv 5E08  
                         __size_of___lmul 0076                                   ___ftadd 3336  
                     ??_adapt_power_level 01FC                                   ___ftdiv 4A08  
                   MIWIInterruptHandler@i 0094                                CCM_Enc@key 01B2  
                                 ___ftneg 6E0E                                   ___ftmul 4754  
                              _myAppState 014B                          _MiApp_SetChannel 6F1A  
                                 ___fttol 4B54                           __size_of_encode 021A  
                              ??___altoft 01C1                           __CFG_STVREN$OFF 000000  
                   __CFG_RTCOSC$INTOSCREF 000000                            _tempNodeStatus 00BD  
                 __size_of_wait_for_1_sec 0036                                   __pcinit 65DA  
                         __size_of_memcpy 0062                                ??___ftpack 018F  
                                 __ramtop 0F00      __size_of_MiApp_TransceiverPowerState 003C  
               do_POWER_TEST@shortaddress 03EC                                ??___lltoft 019A  
                     __size_of_OpenSocket 00C0                      SendMACPacket@Address 01C3  
                                 __ptext0 307A                                   __ptext1 6E94  
                            ??_MiMAC_Init 019F                                   __ptext2 1420  
                                 __ptext3 0C7A                                   __ptext4 5810  
                                 __ptext5 64BE                                   __ptext6 5BBA  
                                 __ptext7 3336                                   __ptext8 62F0  
                                 __ptext9 6658                        __end_of_RTCC_reset 6F1A  
                                 _myPANID 0183                                   _myMODEL FFF4  
                              ??___lwtoft 0195                              __size_of_CTR 0120  
                  _send_periodical_update 1420                            ?_do_POWER_TEST 0001  
                               _T1CONbits 000FCD                 process_update_answer@size 03FC  
                                 _m_power 014A                  ??_MiApp_MessageAvailable 01EE  
                           _myLongAddress 00C8                  _send_initial_update$5141 03F3  
                _send_initial_update$5142 03F6                  _send_initial_update$5143 03F9  
                _send_initial_update$5144 03FC                           ??_SendMACPacket 01C6  
                  RegisterRead@IRQ0select 018E                     MiApp_UnicastAddress@i 03E5  
                  RegisterRead@IRQ1select 018D                                   encode@i 019A  
                    _findNextNetworkEntry 6D22                                ??_labelcmp 018E  
              __size_of_SYSTEM_Initialize 011E                    ??_MiApp_DiscardMessage 018A  
               __end_of_adapt_power_level 6A60                            __pintcode_body 6924  
                      __end_ofi2_TxPacket 3F88                      end_of_initialization 664E  
                        _MiWiStateMachine 0138            __size_of_encode_uint8_variable 00A6  
                    __end_of_read_sensors 307A             __end_of_encode_uint8_variable 62F0  
                    __size_of_timer_reset 001A                                 i2SPIPut@i 0060  
                               i2SPIPut@v 0061                        __end_ofi1___ftpack 61A0  
                dBm_to_mW_ufixed16@value1 018A                  dBm_to_mW_ufixed16@value2 018C  
                                 memcpy@d 0190                                   memcpy@n 018E  
                                 memcpy@s 0192             MIWIInterruptHandler@BankIndex 0093  
           MiMAC_SendPacket@MACPayloadLen 01BE                                   int_func 6924  
                    __size_ofi2_SetRFMode 0098                   SendMACPacket@PacketType 01C5  
                               i2u1552_45 6B5E                                 i2u1472_45 6C8E  
                               i2u1552_46 6B60                                 i2u1472_46 6C90  
                               i2u1553_45 6B6A                                 i2u1473_45 6C9A  
                               i2u1553_46 6B6C                                 i2u1473_46 6C9C  
                               i2u1554_45 6D12                                 i2u1554_46 6D14  
                               i2u1555_45 6D1E                                 i2u1555_46 6D20  
                      __end_of_MiMAC_Init 4DDC                           ?_MiMAC_SetPower 0001  
             MIWIInterruptHandler@counter 0088               encode_uint8_variable@buffer 018A  
           encode_uint8_variable@m_signed 0197                   MiMAC_SetChannel@channel 0193  
                                 postdec1 000FE5                                   postdec2 000FDD  
                    __end_of_RegisterRead 6B1A                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                       _m_battery_voltage 012D                     __end_of_isSameAddress 6BC4  
    DELAY_ms@cyclesRequiredForEntireDelay 0198                       RegisterRead@address 018F  
                   MiWiTasks@CapacityByte 01E7                             WriteFIFO@Data 018C  
                              _timer_flag 014D                           _InitSymbolTimer 6FA6  
                   __end_ofi2_RegisterSet 6C9E            encode_ufixed16_variable@buffer 018A  
                             _Pwr_updated 00B7                                labelcmp@p1 018A  
                              labelcmp@p2 018C                                 _TRISAbits 000F92  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                              encode@text 018A                     ?_findNextNetworkEntry 0001  
                           _mySecurityKey 00A3                                 i1___ftadd 3F88  
                 MiMAC_SendPacket@TxIndex 01C1             MIWIInterruptHandler@PacketLen 0092  
                    __size_ofi2_WriteFIFO 0042                  _encode_ufixed16_variable 5EC6  
                       __size_of_DELAY_ms 00AA                                main@Status 0404  
                       CCM_Dec@payloadLen 01B1                MiMAC_SendPacket@transParam 01B9  
                      _dBm_to_mW_ufixed16 504C                   ??_AddNodeToNetworkTable 0190  
              MiMAC_SetAltAddress@Address 018A                               ___ftdiv@exp 01AC  
               MiApp_UnicastAddress@SecEn 01F1                            __end_of_PVALUE FF8F  
                          __end_of_SVALUE FFAF              __size_of_do_NETWORK_REGISTER 018C  
                          __end_of_SPIGet 6FEC                                main@result 0402  
                          __end_of_SPIPut 6F70                           wait_for_1_sec@i 018B  
                  SearchForShortAddress@i 018C                               ___ftmul@exp 01DB  
                     ?_dBm_to_mW_ufixed16 018A         process_update_answer@shortaddress 03FA  
                          __end_of___ftge 5C82                            __end_of___lmul 683C  
                     _send_initial_update 0C7A                         __size_ofi2_SPIGet 000A  
                       __size_ofi2_SPIPut 001C                             __pidataCOMRAM 7006  
                               _MiWiTasks 0000                           ??_do_POWER_TEST 01FA  
                          __end_of_encode 3A0C        __size_of_MiApp_EstablishConnection 0436  
                          __end_of_memcpy 6AC2                                floor@expon 01CD  
         __size_of_MiApp_MessageAvailable 0012          MiMAC_ReceivedPacket@PayloadIndex 01CF  
                __end_of_MiMAC_SetChannel 603A                       start_initialization 65DA  
                   _SearchForShortAddress 654E                               __end_of_CTR 54DC  
                    ??_dBm_to_mW_ufixed16 018E                      _MIWIInterruptHandler 1A9E  
                     WriteFIFO@IRQ0select 018E                             TxPacket@reTry 01A6  
                     WriteFIFO@IRQ1select 018D                                ?i1___ftadd 0009  
                __end_of_MiMAC_SendPacket 37F2                      _MiApp_ConnectionMode 6E3E  
                      TxPacket@CCARetries 01A5                i2TxPacket@allowedTxFailure 007E  
                    _MiApp_UnicastAddress 24A0                __size_of_adapt_power_level 0064  
           MIWIInterruptHandler@ackPacket 008B                      ?_send_initial_update 0001  
                               _SetRFMode 638E                ?_security_force_key_update 0001  
                            ??_OpenSocket 01FA                                  CBC_MAC@i 01AD  
                                CBC_MAC@j 01AC                                frexp@value 018A  
                                ??_SPIGet 018C                         __size_of_ReadI2C1 001C  
                                ??_SPIPut 018A                            _currentChannel 0189  
                       __size_of_OpenI2C1 0020                                 TxPacket@i 01AA  
                                CCM_Dec@i 01BC                                  CCM_Enc@i 01B8  
                                ??___ftge 0190                   __end_of_InitSymbolTimer 6FBE  
                          i2_MiWi_TickGet 68B0                                  ??___lmul 0192  
       MiApp_UnicastAddress@PermanentAddr 01F0                     _send_writables_update 4DDC  
                    do_NETWORK_REGISTER@i 03EA                                  ??_encode 018E  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK1 01FD  
                mW_ufixed16_to_dBm@value1 018B                         __size_of_TxPacket 01AA  
                mW_ufixed16_to_dBm@value2 018A                         __size_of_RtccWrOn 0012  
                          _wait_for_1_sec 6DD8                       _MiMAC_SetAltAddress 7004  
                                ??_memcpy 0190                                  ?_CBC_MAC 01A1  
                              ?_MiWiTasks 0001                                  ?_CCM_Dec 01AE  
                                ?_CCM_Enc 01AE                              ?_RegisterSet 018C  
                 ??_process_update_answer 03F0                        __end_of_OpenSocket 5E08  
                       __size_of___altoft 009E             MIWIInterruptHandler@fifo_stat 008A  
                __end_of_MiMAC_PowerState 67C6                               _ALRMCFGbits 000F47  
                       RegisterRead@value 018C                         __size_of___ftpack 010C  
      MiApp_SearchConnection@ScanDuration 03E0                   MiWi_TickGet@currentTime 0190  
                       __size_of___lltoft 007C                               __pbssCOMRAM 0026  
                  ??_findNextNetworkEntry 018A                                 _WriteI2C1 6994  
                   ?_MIWIInterruptHandler 0001                         __size_of___lwtoft 002A  
                   __size_of_read_sensors 0306                                 _WriteFIFO 6C9E  
                           __pcstackBANK0 0060                             __pcstackBANK1 018A  
                           __pcstackBANK3 03D4                             __pcstackBANK4 0400  
                   ?_MiApp_ConnectionMode 0001                                  CTR@block 01AB  
                             _defaultHops 01FE                     ?_MiApp_UnicastAddress 01EE  
              __end_of_MiApp_ProtocolInit 5298                     ??_send_initial_update 01FB  
              MiApp_EstablishConnection@i 03F9                         _consecutive_fails 0147  
                __end_of_MiApp_SetChannel 6F38                                ?_SetRFMode 0001  
              __end_of_TX_POWER_N_2_DB_MW FFCF                      ?_MiMAC_SetAltAddress 018A  
                 ?_MiApp_SearchConnection 01EE                          __p_myMODEL_const FFF4  
                               _do_UPDATE 446A                __end_of_TX_POWER_N_5_DB_MW FFD5  
                             MiMAC_Init@i 019F                         __size_of_labelcmp 00B8  
              __end_of_TX_POWER_N_8_DB_MW FFBD                  __size_of_sleep_and_reset 0024  
                   __size_of_RegisterRead 0058                    _MiApp_MessageAvailable 6FD0  
            ?_MiApp_TransceiverPowerState 0001                  __size_of_update_variable 00EC  
                  __end_ofi2_MiWi_TickGet 6924                         MiMAC_SendPacket@i 01C2  
                        _MiWiCapacityInfo 0143           encode_uint8_variable@m_writable 0198  
                             CBC_MAC@text 01A1                                 __pintcode 0008  
                  __end_of_wait_for_1_sec 6E0E                             __pmediumconst FEF2  
                                ?___awdiv 018A                                  ?___ftadd 0192  
               MiMAC_SendPacket@headerLen 01C0                                  ?___ftdiv 019F  
                                ?___ftneg 01CF                                  ?___ftmul 01D2  
                                ?___fttol 01AE               MiApp_UnicastAddress@t1_2763 03DC  
             MiApp_UnicastAddress@t2_2774 03E0                   ?_send_periodical_update 0001  
                             __pintcodelo 0018                              _read_sensors 2D74  
               __size_of_SYS_InterruptLow 00DE                security_force_key_update@i 018A  
                  ?_SearchForShortAddress 0001             __size_of_SearchForLongAddress 00CC  
                              ?_WriteI2C1 0001                                ?_WriteFIFO 0001  
                      _AcknowledgementSeq 01FD             __size_of_MiMAC_ReceivedPacket 04BA  
                                _DELAY_ms 61A0                          CCM_Dec@headerLen 01B0  
                             ??i1___ftadd 000F                     do_UPDATE@shortaddress 03EB  
             MiWiTasks@sourceShortAddress 01EB                  __size_of_decode_variable 00F4  
                               _last_rssi 0148            __end_of_MiApp_SearchConnection 3C0E  
                          __size_of_floor 00FE                            __size_of_frexp 0090  
                            _RegisterRead 6AC2             __end_of_BATTERY_VOLTAGE_LABEL FFE3  
                   ??_MiMAC_SetAltAddress 018E                                ?_do_UPDATE 03E7  
               MiMAC_SetPower@outputPower 0192               __size_of_mW_ufixed16_to_dBm 00C6  
                        ??_MiMAC_SetPower 0190               encode_ufixed16_variable@var 018C  
                  _UPDATE_FREQUENCY_LABEL FFF7                   __size_ofi2_RegisterRead 0058  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                    i2RegisterSet@setting 0062                                  _LATCbits 000F8B  
                               _tempPANID 013C                                  _PIE1bits 000F9D  
                                _IPR3bits 000FA5                   dBm_to_mW_ufixed16@power 018E  
                                _PIE3bits 000FA3                           ?i2_MiWi_TickGet 0060  
                                _PIR1bits 000F9E                                  _PIR3bits 000FA4  
           ??_MiApp_TransceiverPowerState 019E                                 _rxMessage 010C  
                                _RCONbits 000FD0                                  i2_SPIGet 6FF6  
                  ?_send_writables_update 0001                                  i2_SPIPut 6F70  
                         ?_wait_for_1_sec 0001                          ?_InitSymbolTimer 0001  
          __end_of_send_periodical_update 1A9E                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                                  _SSP2CON1 000F72  
                encode_uint8_variable@var 018C                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
            __size_of_MiMAC_DiscardPacket 0024           MIWIInterruptHandler@RxPacketPtr 0090  
       process_update_answer@ack_required 03F8  MiApp_EstablishConnection@ActiveScanIndex 03F8  
                             ??_MiWiTasks 01D1                               _MACRxPacket 0116  
                               encode@key 018C                                 encode@sum 019F  
                                _RSSILock 0144                               _MACTxBuffer 02A0  
                           SetRFMode@mode 0190                          __size_of_CBC_MAC 010A  
                              _ADCON0bits 000FC2          encode_ufixed16_variable@m_signed 0197  
                              _ADCON1bits 000FC1                           _m_sent_messages 0122  
                        MiWiTasks@rxIndex 01E6                          __size_of_CCM_Dec 0156  
                        __size_of_CCM_Enc 0134                ??_encode_ufixed16_variable 0196  
                  ??_MIWIInterruptHandler 0082                         _SYS_InterruptHigh 0008  
                     _do_NETWORK_REGISTER 42DE                  do_NETWORK_REGISTER@p_uid 01FA  
                   i2TxPacket@TxPacketLen 007F                    ??_MiApp_ConnectionMode 018A  
                       __CFG_CFGPLLEN$OFF 000000                      _OutgoingFrameCounter 00AB  
                  ??_MiApp_UnicastAddress 01F2                        ?_SYS_InterruptHigh 0001  
                         _MiWiAckRequired 00B5                             ??_timer_reset 018A  
                   __end_of_SendMACPacket 6750                                  _ConnMode 00B2  
                    __end_of_UPTIME_LABEL FFFF                         ___lmul@multiplier 018A  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
          MiApp_EstablishConnection@retry 03F7                             ??i2_SetRFMode 0066  
      do_NETWORK_REGISTER@sleeping_device 01FC                               ??_SetRFMode 0190  
                                _ReadI2C1 6F38                     SearchForLongAddress@i 018F  
                   SearchForLongAddress@j 018E             __size_of_MiApp_DiscardMessage 000A  
                              _ADRESHbits 000FC4                       ??_SYS_InterruptHigh 0095  
                              _ADRESLbits 000FC3                                  _TxMACSeq 00BA  
                                _ScanTime FF33                                  _OpenI2C1 6EDC  
                   _encode_uint8_variable 624A                                 frexp@eptr 018D  
                                __Hparam0 0000                      ?_do_NETWORK_REGISTER 01FA  
          __size_of_AddNodeToNetworkTable 0124             __end_of_AddNodeToNetworkTable 53BC  
                              _ANCON0bits 000F48                                _ANCON1bits 000F49  
                                __Lparam0 0000                                  _RxPacket 0350  
                                _TxBuffer 014E                                  _TxPacket 4134  
                                _RtccWrOn 6FBE                         ??_sleep_and_reset 019F  
                             CCM_Dec@text 01AE                    adapt_power_level@power 0001  
                   MiMAC_ReceivedPacket@i 01D0                     MiMAC_ReceivedPacket@j 01CE  
                   MiMAC_ReceivedPacket@k 01CD                       __end_of_POWER_LABEL FFEF  
                      main@best_candidate 0403                          __size_of___awdiv 00BE  
                        __size_of___ftadd 0268                          __size_of___ftdiv 014C  
                        __size_of___ftneg 0030                                  ___altoft 62F0  
                        __size_of___ftmul 015E                         ??_update_variable 0193  
                        __size_of___fttol 0144                           _tempLongAddress 0126  
              send_periodical_update@tmp2 03F0                                  ___ftpack 55FA  
                             CCM_Enc@text 01AE                 __end_of_SYS_InterruptHigh 6994  
                                ___lltoft 6658                  i2RegisterRead@IRQ0select 0064  
                                ___lwtoft 6E6A                  i2RegisterRead@IRQ1select 0063  
                  AddNodeToNetworkTable@i 0192                               ??_WriteI2C1 018A  
                    __size_of_RegisterSet 0046                             ??i2_WriteFIFO 0062  
                             ??_WriteFIFO 018C                         ?_MiMAC_SetChannel 0191  
                                __ptext10 6E0E                                  __ptext11 6BC4  
                                __ptext20 6EDC                                  __ptext12 2D74  
                                __ptext21 3C0E                                  __ptext13 6E6A  
                                __ptext30 446A                                  __ptext22 6DD8  
                                __ptext14 4B54                                  __ptext31 504C  
                                __ptext23 5A02                                  __ptext15 4754  
                                __ptext40 54DC                                  __ptext32 590E  
                                __ptext24 5C82                                  __ptext16 4A08  
                                __ptext41 6EFC                                  __ptext33 6D62  
                                __ptext25 603A                                  __ptext17 55FA  
                                __ptext50 24A0                                  __ptext42 6FBE  
                                __ptext34 6750                                  __ptext26 6F8C  
                                __ptext18 6994                                  __ptext51 3A0C  
                                __ptext43 5172                                  __ptext35 42DE  
                                __ptext27 4DDC                                  __ptext19 6F38  
                                __ptext60 6C9E                                  __ptext52 66D4  
                                __ptext44 4C98                                  __ptext36 6A60  
                                __ptext28 624A                                  __ptext61 638E  
                                __ptext53 6F1A                                  __ptext45 61A0  
                                __ptext37 69FC                                  __ptext29 5EC6  
                                __ptext70 48B2                                  __ptext62 6C12  
                                __ptext54 5F80                                  __ptext46 67C6  
                                __ptext38 45F2                                  __ptext71 53BC  
                                __ptext63 6AC2                                  __ptext55 6FD0  
                                __ptext47 6FA6                                  __ptext39 6D9E  
                                __ptext80 6EB8                                  __ptext72 5706  
                                __ptext64 6FE2                                  __ptext56 0000  
                                __ptext48 293E                                  __ptext81 6E3E  
                                __ptext73 37F2                                  __ptext65 6F54  
                                __ptext57 7004                                  __ptext49 5D48  
                                __ptext90 6C58                                  __ptext74 5E08  
                                __ptext66 4F18                                  __ptext58 359E  
                                __ptext91 6B1A                                  __ptext83 3F88  
                                __ptext75 5298                                  __ptext67 1FE6  
                                __ptext59 4134                                  __ptext92 6FF6  
                                __ptext84 60F2                                  __ptext76 6D22  
                                __ptext68 6B72                                  __ptext93 6F70  
                                __ptext77 654E                                  __ptext69 683C  
                                __ptext94 68B0                                  __ptext86 1A9E  
                                __ptext78 5AEE                                  __ptext87 3DD8  
                                __ptext79 6FEC                                  __ptext88 6CE0  
                                __ptext89 6426                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                                  _labelcmp 603A  
                TxPacket@allowedTxFailure 01A7                        ??_MiMAC_SetChannel 0192  
                       ?_MiMAC_SendPacket 01B9                             _labelcmp$3774 0191  
                            _SSP2CON1bits 000F72                                  _m_buffer 02E0  
                             ??_do_UPDATE 01FA               ??_security_force_key_update 018A  
                  __size_of_isSameAddress 0052                        ??_MiMAC_SendPacket 01BF  
                                _p_buffer 013A                         do_POWER_TEST@rssi 03EB  
                           __size_of_main 02BC                       __end_of_timer_reset 6FA6  
                       ??_decode_variable 019E                     ??_do_NETWORK_REGISTER 03E7  
                                _myParent 014C                    __size_ofi2_RegisterSet 0046  
                       _TEMPERATURE_LABEL FFEF                       __end_ofi2_SetRFMode 64BE  
                       WriteI2C1@data_out 018B                    MiApp_UnicastAddress@t1 03D4  
                  MiApp_UnicastAddress@t2 03D8                                  _tmpBlock 00CC  
                        _tempShortAddress 0187                                  int$flags 0049  
             MiApp_EstablishConnection@t1 03EF               MiApp_EstablishConnection@t2 03F3  
                       _TX_POWER_10_DB_MW FFD5              i2MiWi_TickGet@failureCounter 0065  
             process_update_answer@result 03F7                         MiMAC_PowerState@i 019D  
                       _TX_POWER_13_DB_MW FFDA                          _SYS_InterruptLow 0018  
                            _SSP1STATbits 000FC7                         read_sensors@value 01E8  
              MiMAC_SendPacket@MACPayload 01BC                         OpenI2C1@sync_mode 018B  
                   __end_of_do_POWER_TEST 4754                     findNextNetworkEntry@i 018A  
                       ?_MiMAC_PowerState 0001            __size_of_process_update_answer 01CA  
                              _INTCONbits 000FF2                           do_UPDATE@F10256 0140  
           __end_of_process_update_answer 3DD8                                  memcpy@d1 018A  
                         i2WriteFIFO@Data 0062                                  memcpy@s1 018C  
                      ??_MiMAC_PowerState 019C               __size_of_dBm_to_mW_ufixed16 0126  
                   do_UPDATE@ack_required 03EA                                  intlevel1 0000  
                                intlevel2 0000                         ?_MiApp_SetChannel 0001  
                 ?_MiApp_MessageAvailable 0001                       __end_ofi2_WriteFIFO 6D22  
                  ?_encode_uint8_variable 018A                            i2_RegisterRead 6B1A  
               __end_of_TEMPERATURE_LABEL FFF3                        ??_MiApp_SetChannel 0194  
                           ?_MiWi_TickGet 018A                               _POWER_LABEL FFEB  
                              _OSCCONbits 000FD3                        _m_update_frequency 01FF  
                      _MiApp_ProtocolInit 5172                 __end_of_TX_POWER_10_DB_MW FFDA  
                             _RTCVALHbits 000F3B                               _RTCVALLbits 000F3A  
               __end_of_TX_POWER_13_DB_MW FFDF                        _TX_POWER_N_2_DB_MW FFC9  
                           _MACInitParams 00AF                       MiMAC_Init@initValue 019C  
                      _TX_POWER_N_5_DB_MW FFCF                           do_UPDATE@p_buff 03E7  
                      _TX_POWER_N_8_DB_MW FFB6                 _security_force_key_update 6BC4  
                           _isSameAddress 6B72                   ??_SearchForShortAddress 018A  
                         do_UPDATE@result 03EF                       ?_MiApp_ProtocolInit 0001  
              MiWi_TickGet@failureCounter 018F                __size_of_SYS_InterruptHigh 698C  
                              _RTCCFGbits 000F3F          __end_of_encode_ufixed16_variable 5F80  
                          __p_myUID_const FFF6                          _BroadcastRecords 0026  
                      MiWiTasks@destPANID 01E2                          _TX_POWER_1_DB_MW FFAF  
                           i2_RegisterSet 6C58                                _PPSCONbits 000EBF  
                        _TX_POWER_4_DB_MW FFBD               __end_of_send_initial_update 1420  
                             MiWiTasks@t1 01DE                               MiWiTasks@t2 01D9  
                       i2TxPacket@rssival 0081                       TxPacket@TxPacketLen 01A9  
                        _TX_POWER_7_DB_MW FFF3                ?_MiApp_EstablishConnection 01FB  
                             _timer_count 0048                      i2TxPacket@CCARetries 007C  
           __size_of_findNextNetworkEntry 0040                               _timer_reset 6F8C  
          __end_of_MiApp_MessageAvailable 6FE2                    __end_ofi2_RegisterRead 6B72  
                        _TX_POWER_INVALID FFC3                       _MiMAC_DiscardPacket 6EB8  
                              _RTCC_reset 6EFC                               i2_SetRFMode 6426  
                              MiWiTasks@i 01ED                                MiWiTasks@j 01E8  
                    ??_MiApp_ProtocolInit 01A0                          i2TxPacket@status 007B  
                          do_POWER_TEST@i 03E9                          ??i2_MiWi_TickGet 0064  
                          read_sensors@t0 01E4                            read_sensors@t1 01E5  
                         i2TxPacket@reTry 007D                             do_UPDATE@size 03E9  
                          ??_MiWi_TickGet 018E              __end_of_SearchForLongAddress 5BBA  
                        ??_wait_for_1_sec 018A                             i2TxPacket@CCA 006A  
          _StaticSecurityKey_absconstaddr 01FFEC                 i2MiWi_TickGet@currentTime 0066  
                 ??_send_writables_update 01FB                               encode@delta 0198  
                   RegisterSet@IRQ0select 018F                     RegisterSet@IRQ1select 018E  
            __end_of_MiMAC_ReceivedPacket 24A0                              i2TxPacket@t1 0073  
                            i2TxPacket@t2 0077                               encode@part1 019B  
                             encode@part2 019D                               i2TxPacket@i 0080  
