Version 3.2 HI-TECH Software Intermediate Code
[; ;drv_mrf_miwi_security.h: 70: extern unsigned char mySecurityKey[];
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;stdbool.h: 12: typedef unsigned char bool;
[; ;drv_mrf_miwi_security.h: 75: void CTR(uint8_t *text, uint8_t len, uint8_t *key, uint8_t *nounce);
[; ;drv_mrf_miwi_security.h: 76: void CBC_MAC(uint8_t *text, uint8_t len, uint8_t *key, uint8_t *MIC);
[; ;drv_mrf_miwi_security.h: 77: void CCM_Enc(uint8_t *text, uint8_t headerLen, uint8_t payloadLen, uint8_t *key);
[; ;drv_mrf_miwi_security.h: 78: bool CCM_Dec(uint8_t *text, uint8_t headerLen, uint8_t payloadLen, uint8_t *key);
"36 src/miwi/drv_mrf_miwi_security.c
[v _tmpBlock `uc ~T0 @X0 -> 4 `i e ]
[; ;drv_mrf_miwi_security.c: 36: uint8_t tmpBlock[4];
[; ;drv_mrf_miwi_security.c: 50: extern unsigned char mySecurityKey[8];
"77
[v _encode `(v ~T0 @X0 1 ef2`*ui`*ui ]
"78
{
[; ;drv_mrf_miwi_security.c: 77: void encode(uint16_t *text, uint16_t *key)
[; ;drv_mrf_miwi_security.c: 78: {
[e :U _encode ]
"77
[v _text `*ui ~T0 @X0 1 r1 ]
[v _key `*ui ~T0 @X0 1 r2 ]
"78
[f ]
"79
[v _part1 `ui ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 79: uint16_t part1=text[0], part2=text[1];
[e = _part1 *U + _text * -> -> 0 `i `x -> -> # *U _text `i `x ]
[v _part2 `ui ~T0 @X0 1 a ]
[e = _part2 *U + _text * -> -> 1 `i `x -> -> # *U _text `i `x ]
"80
[v _sum `ui ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 80: uint16_t sum=0, delta=0x9E37;
[e = _sum -> -> 0 `i `ui ]
[v _delta `ui ~T0 @X0 1 a ]
[e = _delta -> 40503 `ui ]
"81
[v _i `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 81: uint8_t i;
[; ;drv_mrf_miwi_security.c: 83: for(i=0; i<32; i++)
"83
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 32 `i 2  ]
[e $U 3  ]
"84
[e :U 2 ]
[; ;drv_mrf_miwi_security.c: 84: {
{
[; ;drv_mrf_miwi_security.c: 85: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (sum + key[sum & 3]);
"85
[e =+ _part1 ^ + ^ << _part2 -> 4 `i >> _part2 -> 5 `i _part2 + _sum *U + _key * -> & _sum -> -> 3 `i `ui `ux -> -> # *U _key `ui `ux ]
[; ;drv_mrf_miwi_security.c: 86: sum += delta;
"86
[e =+ _sum _delta ]
[; ;drv_mrf_miwi_security.c: 87: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (sum + key[(sum>>11) & 3]);
"87
[e =+ _part2 ^ + ^ << _part1 -> 4 `i >> _part1 -> 5 `i _part1 + _sum *U + _key * -> & >> _sum -> 11 `i -> -> 3 `i `ui `ux -> -> # *U _key `ui `ux ]
"88
}
"83
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 32 `i 2  ]
[e :U 3 ]
"88
}
[; ;drv_mrf_miwi_security.c: 88: }
[; ;drv_mrf_miwi_security.c: 89: text[0]=part1; text[1]=part2;
"89
[e = *U + _text * -> -> 0 `i `x -> -> # *U _text `i `x _part1 ]
[e = *U + _text * -> -> 1 `i `x -> -> # *U _text `i `x _part2 ]
[; ;drv_mrf_miwi_security.c: 90: }
"90
[e :UE 1 ]
}
"118
[v _CTR `(v ~T0 @X0 1 ef4`*uc`uc`*uc`*uc ]
"119
{
[; ;drv_mrf_miwi_security.c: 118: void CTR(uint8_t *text, uint8_t len, uint8_t *key, uint8_t *nounce)
[; ;drv_mrf_miwi_security.c: 119: {
[e :U _CTR ]
"118
[v _text `*uc ~T0 @X0 1 r1 ]
[v _len `uc ~T0 @X0 1 r2 ]
[v _key `*uc ~T0 @X0 1 r3 ]
[v _nounce `*uc ~T0 @X0 1 r4 ]
"119
[f ]
"120
[v _block `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 120: uint8_t block = len/4+1;
[e = _block -> + / -> _len `i -> 4 `i -> 1 `i `uc ]
"121
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 121: uint8_t i, j;
[; ;drv_mrf_miwi_security.c: 128: for(i = 0; i < block; i++)
"128
{
[e = _i -> -> 0 `i `uc ]
[e $U 9  ]
"129
[e :U 6 ]
[; ;drv_mrf_miwi_security.c: 129: {
{
[; ;drv_mrf_miwi_security.c: 130: for(j = 0; j < 4-1; j++)
"130
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i - -> 4 `i -> 1 `i 10  ]
[e $U 11  ]
"131
[e :U 10 ]
[; ;drv_mrf_miwi_security.c: 131: {
{
[; ;drv_mrf_miwi_security.c: 132: tmpBlock[j] = nounce[j];
"132
[e = *U + &U _tmpBlock * -> _j `ux -> -> # *U &U _tmpBlock `ui `ux *U + _nounce * -> _j `ux -> -> # *U _nounce `ui `ux ]
"133
}
"130
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i - -> 4 `i -> 1 `i 10  ]
[e :U 11 ]
"133
}
[; ;drv_mrf_miwi_security.c: 133: }
[; ;drv_mrf_miwi_security.c: 134: tmpBlock[4-1] = i;
"134
[e = *U + &U _tmpBlock * -> -> - -> 4 `i -> 1 `i `ui `ux -> -> # *U &U _tmpBlock `ui `ux _i ]
[; ;drv_mrf_miwi_security.c: 135: encode((uint16_t *)tmpBlock, (uint16_t *)key);
"135
[e ( _encode (2 , -> &U _tmpBlock `*ui -> _key `*ui ]
[; ;drv_mrf_miwi_security.c: 136: for(j = 0; j < 4; j++)
"136
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 4 `i 13  ]
[e $U 14  ]
"137
[e :U 13 ]
[; ;drv_mrf_miwi_security.c: 137: {
{
[; ;drv_mrf_miwi_security.c: 138: if( (i * 4 + j) >= len )
"138
[e $ ! >= + * -> _i `i -> 4 `i -> _j `i -> _len `i 16  ]
[; ;drv_mrf_miwi_security.c: 139: {
"139
{
[; ;drv_mrf_miwi_security.c: 140: break;
"140
[e $U 14  ]
"141
}
[e :U 16 ]
[; ;drv_mrf_miwi_security.c: 141: }
[; ;drv_mrf_miwi_security.c: 142: text[i * 4 + j] ^= tmpBlock[j];
"142
[e =^ *U + _text * -> + * -> _i `i -> 4 `i -> _j `i `x -> -> # *U _text `i `x *U + &U _tmpBlock * -> _j `ux -> -> # *U &U _tmpBlock `ui `ux ]
"143
}
"136
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 4 `i 13  ]
[e :U 14 ]
"143
}
"144
}
"128
[e ++ _i -> -> 1 `i `uc ]
[e :U 9 ]
[e $ < -> _i `i -> _block `i 6  ]
[e :U 7 ]
"144
}
[; ;drv_mrf_miwi_security.c: 143: }
[; ;drv_mrf_miwi_security.c: 144: }
[; ;drv_mrf_miwi_security.c: 149: }
"149
[e :UE 5 ]
}
"175
[v _CBC_MAC `(v ~T0 @X0 1 ef4`*uc`uc`*uc`*uc ]
"179
{
[; ;drv_mrf_miwi_security.c: 175: void CBC_MAC( uint8_t *text,
[; ;drv_mrf_miwi_security.c: 176: uint8_t len,
[; ;drv_mrf_miwi_security.c: 177: uint8_t *key,
[; ;drv_mrf_miwi_security.c: 178: uint8_t *MIC)
[; ;drv_mrf_miwi_security.c: 179: {
[e :U _CBC_MAC ]
"175
[v _text `*uc ~T0 @X0 1 r1 ]
"176
[v _len `uc ~T0 @X0 1 r2 ]
"177
[v _key `*uc ~T0 @X0 1 r3 ]
"178
[v _MIC `*uc ~T0 @X0 1 r4 ]
"179
[f ]
"180
[v _block `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 180: uint8_t block = len / 4 + 1;
[e = _block -> + / -> _len `i -> 4 `i -> 1 `i `uc ]
"181
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 181: uint8_t i, j;
[; ;drv_mrf_miwi_security.c: 188: for(i = 0; i < 4; i++)
"188
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 18  ]
[e $U 19  ]
"189
[e :U 18 ]
[; ;drv_mrf_miwi_security.c: 189: {
{
[; ;drv_mrf_miwi_security.c: 190: MIC[i] = 0;
"190
[e = *U + _MIC * -> _i `ux -> -> # *U _MIC `ui `ux -> -> 0 `i `uc ]
"191
}
"188
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 18  ]
[e :U 19 ]
"191
}
[; ;drv_mrf_miwi_security.c: 191: }
[; ;drv_mrf_miwi_security.c: 193: for(i = 0; i < block; i++)
"193
{
[e = _i -> -> 0 `i `uc ]
[e $U 24  ]
"194
[e :U 21 ]
[; ;drv_mrf_miwi_security.c: 194: {
{
[; ;drv_mrf_miwi_security.c: 195: for(j = 0; j < 4; j++)
"195
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 4 `i 25  ]
[e $U 26  ]
"196
[e :U 25 ]
[; ;drv_mrf_miwi_security.c: 196: {
{
[; ;drv_mrf_miwi_security.c: 197: if( (i * 4 + j) >= len )
"197
[e $ ! >= + * -> _i `i -> 4 `i -> _j `i -> _len `i 28  ]
[; ;drv_mrf_miwi_security.c: 198: {
"198
{
[; ;drv_mrf_miwi_security.c: 199: break;
"199
[e $U 26  ]
"200
}
[e :U 28 ]
[; ;drv_mrf_miwi_security.c: 200: }
[; ;drv_mrf_miwi_security.c: 201: MIC[j] ^= text[i * 4 + j];
"201
[e =^ *U + _MIC * -> _j `ux -> -> # *U _MIC `ui `ux *U + _text * -> + * -> _i `i -> 4 `i -> _j `i `x -> -> # *U _text `i `x ]
"202
}
"195
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 4 `i 25  ]
[e :U 26 ]
"202
}
[; ;drv_mrf_miwi_security.c: 202: }
[; ;drv_mrf_miwi_security.c: 203: encode((uint16_t *)MIC, (uint16_t *)key);
"203
[e ( _encode (2 , -> _MIC `*ui -> _key `*ui ]
"204
}
"193
[e ++ _i -> -> 1 `i `uc ]
[e :U 24 ]
[e $ < -> _i `i -> _block `i 21  ]
[e :U 22 ]
"204
}
[; ;drv_mrf_miwi_security.c: 204: }
[; ;drv_mrf_miwi_security.c: 208: }
"208
[e :UE 17 ]
}
"240
[v _CCM_Enc `(v ~T0 @X0 1 ef4`*uc`uc`uc`*uc ]
"244
{
[; ;drv_mrf_miwi_security.c: 240: void CCM_Enc( uint8_t *text,
[; ;drv_mrf_miwi_security.c: 241: uint8_t headerLen,
[; ;drv_mrf_miwi_security.c: 242: uint8_t payloadLen,
[; ;drv_mrf_miwi_security.c: 243: uint8_t *key)
[; ;drv_mrf_miwi_security.c: 244: {
[e :U _CCM_Enc ]
"240
[v _text `*uc ~T0 @X0 1 r1 ]
"241
[v _headerLen `uc ~T0 @X0 1 r2 ]
"242
[v _payloadLen `uc ~T0 @X0 1 r3 ]
"243
[v _key `*uc ~T0 @X0 1 r4 ]
"244
[f ]
"245
[v _i `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 245: uint8_t i;
[; ;drv_mrf_miwi_security.c: 252: CBC_MAC(text, (headerLen + payloadLen), key, tmpBlock);
"252
[e ( _CBC_MAC (4 , , , _text -> + -> _headerLen `i -> _payloadLen `i `uc _key &U _tmpBlock ]
[; ;drv_mrf_miwi_security.c: 254: for(i = 0; i < 4; i++)
"254
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 30  ]
[e $U 31  ]
"255
[e :U 30 ]
[; ;drv_mrf_miwi_security.c: 255: {
{
[; ;drv_mrf_miwi_security.c: 256: text[headerLen + payloadLen + i] = tmpBlock[i];
"256
[e = *U + _text * -> + + -> _headerLen `i -> _payloadLen `i -> _i `i `x -> -> # *U _text `i `x *U + &U _tmpBlock * -> _i `ux -> -> # *U &U _tmpBlock `ui `ux ]
"257
}
"254
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 30  ]
[e :U 31 ]
"257
}
[; ;drv_mrf_miwi_security.c: 257: }
[; ;drv_mrf_miwi_security.c: 259: for(i = 0; i < 4-1; i++)
"259
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i - -> 4 `i -> 1 `i 33  ]
[e $U 34  ]
"260
[e :U 33 ]
[; ;drv_mrf_miwi_security.c: 260: {
{
[; ;drv_mrf_miwi_security.c: 261: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
"261
[e = *U + &U _tmpBlock * -> _i `ux -> -> # *U &U _tmpBlock `ui `ux -> ? < -> _i `i -> _headerLen `i : -> *U + _text * -> _i `ux -> -> # *U _text `ui `ux `i -> 0 `i `uc ]
"262
}
"259
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i - -> 4 `i -> 1 `i 33  ]
[e :U 34 ]
"262
}
[; ;drv_mrf_miwi_security.c: 262: }
[; ;drv_mrf_miwi_security.c: 264: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBlock);
"264
[e ( _CTR (4 , , , &U *U + _text * -> _headerLen `ux -> -> # *U _text `ui `ux -> + -> _payloadLen `i -> 4 `i `uc _key &U _tmpBlock ]
[; ;drv_mrf_miwi_security.c: 268: }
"268
[e :UE 29 ]
}
"299
[v _CCM_Dec `(uc ~T0 @X0 1 ef4`*uc`uc`uc`*uc ]
"300
{
[; ;drv_mrf_miwi_security.c: 299: bool CCM_Dec(uint8_t *text, uint8_t headerLen, uint8_t payloadLen, uint8_t *key)
[; ;drv_mrf_miwi_security.c: 300: {
[e :U _CCM_Dec ]
"299
[v _text `*uc ~T0 @X0 1 r1 ]
[v _headerLen `uc ~T0 @X0 1 r2 ]
[v _payloadLen `uc ~T0 @X0 1 r3 ]
[v _key `*uc ~T0 @X0 1 r4 ]
"300
[f ]
"301
[v _i `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 301: uint8_t i;
[; ;drv_mrf_miwi_security.c: 308: for(i = 0; i < 4-1; i++)
"308
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i - -> 4 `i -> 1 `i 37  ]
[e $U 38  ]
"309
[e :U 37 ]
[; ;drv_mrf_miwi_security.c: 309: {
{
[; ;drv_mrf_miwi_security.c: 310: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
"310
[e = *U + &U _tmpBlock * -> _i `ux -> -> # *U &U _tmpBlock `ui `ux -> ? < -> _i `i -> _headerLen `i : -> *U + _text * -> _i `ux -> -> # *U _text `ui `ux `i -> 0 `i `uc ]
"311
}
"308
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i - -> 4 `i -> 1 `i 37  ]
[e :U 38 ]
"311
}
[; ;drv_mrf_miwi_security.c: 311: }
[; ;drv_mrf_miwi_security.c: 312: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
"312
[e ( _CTR (4 , , , &U *U + _text * -> _headerLen `ux -> -> # *U _text `ui `ux _payloadLen _key &U _tmpBlock ]
[; ;drv_mrf_miwi_security.c: 314: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmpBlock);
"314
[e ( _CBC_MAC (4 , , , _text -> - + -> _headerLen `i -> _payloadLen `i -> 2 `i `uc _key &U _tmpBlock ]
[; ;drv_mrf_miwi_security.c: 315: for(i = 0; i < 2; i++)
"315
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 40  ]
[e $U 41  ]
"316
[e :U 40 ]
[; ;drv_mrf_miwi_security.c: 316: {
{
[; ;drv_mrf_miwi_security.c: 317: if( tmpBlock[i] != text[headerLen + payloadLen - 2 + i] )
"317
[e $ ! != -> *U + &U _tmpBlock * -> _i `ux -> -> # *U &U _tmpBlock `ui `ux `i -> *U + _text * -> + - + -> _headerLen `i -> _payloadLen `i -> 2 `i -> _i `i `x -> -> # *U _text `i `x `i 43  ]
[; ;drv_mrf_miwi_security.c: 318: {
"318
{
[; ;drv_mrf_miwi_security.c: 322: return 0;
"322
[e ) -> -> 0 `i `uc ]
[e $UE 36  ]
"323
}
[e :U 43 ]
"324
}
"315
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 40  ]
[e :U 41 ]
"324
}
[; ;drv_mrf_miwi_security.c: 323: }
[; ;drv_mrf_miwi_security.c: 324: }
[; ;drv_mrf_miwi_security.c: 328: return 1;
"328
[e ) -> -> 1 `i `uc ]
[e $UE 36  ]
[; ;drv_mrf_miwi_security.c: 329: }
"329
[e :UE 36 ]
}
[; ;drv_mrf_miwi_security.c: 333: extern char bogus;
